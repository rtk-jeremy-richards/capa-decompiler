{
    "004010e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004010e0(void)\n\n{\n    ulong uVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    ulong *arg2;\n    ulong *unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    ulong *puVar10;\n    ulong *puVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            puVar5 = unaff_RBX;\ncode_r0x00401116:\n            do {\n                unaff_RBX = puVar5;\n                puVar4 = in_RAX;\n                if (unaff_RBX == NULL) {\n                    *(*0x20 + -0x38) = *0x545518;\n                    puVar5 = *0x545510;\n                    puVar4 = *0x545518;\n                    for (iVar6 = 0; iVar6 < puVar4; iVar6 = iVar6 + 1) {\n                        uVar1 = puVar5[1];\n                        if (*(puVar5 + 3) != '\\0') {\n                            if ((*(puVar5 + 0x19) == '\\0') || (*puVar5[2] != '\\0')) {\n                                *puVar5[2] = *(puVar5 + 0x19);\n                            }\n                            else {\n                                *(*0x20 + -0x10) = *puVar5;\n                                *(*0x20 + -0x40) = uVar1;\n                                *(*0x20 + -0x48) = iVar6;\n                                *(*0x20 + -0x18) = puVar5;\n                                *(*0x20 + -0x90) = 0x4013ac;\n                                fcn.00434ec0();\n                                *(*0x20 + -0x90) = 0x4013bd;\n                                fcn.004357c0();\n                                *(*0x20 + -0x90) = 0x4013cc;\n                                fcn.004357c0();\n                                *(*0x20 + -0x90) = 0x4013dd;\n                                fcn.004357c0();\n                                *(*0x20 + -0x90) = 0x4013e5;\n                                fcn.00434f40();\n                                puVar5 = *(*0x20 + -0x18);\n                                puVar4 = *(*0x20 + -0x38);\n                                iVar6 = *(*0x20 + -0x48);\n                            }\n                        }\n                        puVar5 = puVar5 + 4;\n                    }\n                    return;\n                }\n                for (puVar7 = NULL; puVar7 < unaff_RBX; puVar7 = puVar7 + 1) {\n                    if (*(puVar4 + puVar7) == ',') goto code_r0x0040112d;\n                }\n                puVar7 = 0xffffffffffffffff;\ncode_r0x0040112d:\n                if (puVar7 < 0) {\n                    puVar5 = NULL;\n                    in_RAX = NULL;\n                    puVar7 = unaff_RBX;\n                }\n                else {\n                    if (unaff_RBX < puVar7) goto code_r0x00401610;\n                    if (unaff_RBX < puVar7 + 1U) goto code_r0x00401605;\n                    unaff_RBX = unaff_RBX - puVar7;\n                    puVar5 = unaff_RBX + -1;\n                    in_RAX = (puVar7 + 1U & -puVar5 >> 0x3f) + puVar4;\n                }\n            } while ((puVar7 < 4) || (*puVar4 != 0x2e757063));\n            for (arg2 = NULL; arg2 < puVar7; arg2 = arg2 + 1) {\n                if (*(puVar4 + arg2) == '=') goto code_r0x0040118c;\n            }\n            arg2 = 0xffffffffffffffff;\ncode_r0x0040118c:\n            *(*0x20 + -0x38) = puVar5;\n            *(*0x20 + -0x10) = in_RAX;\n            if (arg2 < 0) {\n                *(*0x20 + -0x60) = puVar7;\n                *(*0x20 + -0x20) = puVar4;\n                *(*0x20 + -0x90) = 0x401308;\n                fcn.00434ec0();\n                *(*0x20 + -0x90) = 0x401319;\n                fcn.004357c0();\n                *(*0x20 + -0x90) = 0x401328;\n                fcn.004357c0();\n                *(*0x20 + -0x90) = 0x401339;\n                fcn.004357c0();\n                *(*0x20 + -0x90) = 0x40133e;\n                fcn.00434f40();\n                in_RAX = *(*0x20 + -0x10);\n                puVar5 = *(*0x20 + -0x38);\n                goto code_r0x00401116;\n            }\n            if (arg2 <= puVar7) {\n                if (0x3 < arg2) {\n                    puVar11 = arg2 + -4;\n                    uVar9 = -puVar11 >> 0x3f & 4;\n                    unaff_RBX = puVar4 + uVar9;\n                    if (arg2 + 1U <= puVar7) {\n                        *(*0x20 + -0x40) = puVar11;\n                        *(*0x20 + -0x28) = unaff_RBX;\n                        iVar6 = puVar7 - arg2;\n                        *(*0x20 + -0x68) = iVar6 + -1;\n                        uVar12 = arg2 + 1U & -(iVar6 + -1) >> 0x3f;\n                        puVar3 = puVar4 + uVar12;\n                        *(*0x20 + -0x30) = puVar3;\n                        if (iVar6 == 3) {\n                            if (*(puVar4 + uVar12) != 0x6e6f) {\ncode_r0x0040128c:\n                                *(*0x20 + -0x90) = 0x401291;\n                                fcn.00434ec0();\n                                *(*0x20 + -0x90) = 0x4012a5;\n                                fcn.004357c0();\n                                *(*0x20 + -0x90) = 0x4012b4;\n                                fcn.004357c0();\n                                *(*0x20 + -0x90) = 0x4012c5;\n                                fcn.004357c0();\n                                *(*0x20 + -0x90) = 0x4012d4;\n                                fcn.004357c0();\n                                *(*0x20 + -0x90) = 0x4012e5;\n                                fcn.004357c0();\n                                *(*0x20 + -0x90) = 0x4012ea;\n                                fcn.00434f40();\n                                in_RAX = *(*0x20 + -0x10);\n                                puVar5 = *(*0x20 + -0x38);\n                                goto code_r0x00401116;\n                            }\n                        }\n                        else if (((iVar6 != 4) || (*(puVar4 + uVar12) != 0x666f)) || (*(puVar4 + uVar12 + 2) != 'f'))\n                        goto code_r0x0040128c;\n                        uVar12 = iVar6 == 3;\n                        if (((arg2 == 0x7) && (puVar3 = *(puVar4 + uVar9),  *(puVar4 + uVar9) == 0x6c61)) &&\n                           (*(puVar4 + uVar9 + 2) == 'l')) {\n                            puVar10 = *0x545518;\n                            for (puVar3 = NULL; puVar3 < puVar10; puVar3 = puVar3 + 1) {\n                                puVar7 = *0x545518;\n                                if (*0x545518 <= puVar3) {\ncode_r0x004015d7:\n                                    *(*0x20 + -0x90) = 0x4015dc;\n                                    fcn.0045e420(puVar7);\n                                    goto code_r0x004015dc;\n                                }\n                                iVar6 = puVar3 * 0x20;\n                                *(*0x545510 + puVar3 * 4 + 3) = 1;\n                                puVar11 = *0x545510;\n                                if (*0x545518 <= puVar3) {\n                                    *(*0x20 + -0x90) = 0x4015d7;\n                                    puVar7 = *0x545518;\n                                    fcn.0045e420(*0x545518);\n                                    goto code_r0x004015d7;\n                                }\ncode_r0x0040158a:\n                                *(puVar11 + iVar6 + 0x19) = uVar12;\n                            }\n                        }\n                        else {\n                            *(*0x20 + -0x69) = iVar6 == 3;\n                            *(*0x20 + -0x48) = *0x545518;\n                            puVar4 = NULL;\n                            arg2 = *0x545518;\n                            while (puVar4 < arg2) {\n                                puVar7 = *0x545518;\n                                puVar10 = *0x545510;\n                                if (*0x545518 <= puVar4) {\ncode_r0x00401585:\n                                    *(*0x20 + -0x90) = 0x40158a;\n                                    iVar6 = fcn.0045e420(puVar7);\n                                    goto code_r0x0040158a;\n                                }\n                                puVar7 = (*0x545510)[puVar4 * 4 + 1];\n                                puVar10 = (*0x545510)[puVar4 * 4];\n                                puVar3 = puVar4;\n                                if (puVar7 == puVar11) {\n                                    *(*0x20 + -0x50) = puVar4 * 0x20;\n                                    *(*0x20 + -0x58) = puVar4;\n                                    *(*0x20 + -0x90) = 0x4014b0;\n                                    cVar2 = fcn.004025e0(puVar7, arg2);\n                                    if (cVar2 != '\\0') {\n                                        puVar3 = *(*0x20 + -0x58);\n                                        puVar7 = *0x545518;\n                                        in_RAX = *0x545510;\n                                        if (puVar3 < *0x545518) {\n                                            puVar10 = *(*0x20 + -0x50);\n                                            *(*0x545510 + 3 + puVar10) = 1;\n                                            in_RAX = *0x545510;\n                                            if (puVar3 < *0x545518) {\n                                                *(*0x545510 + 0x19 + puVar10) = *(*0x20 + -0x69);\n                                                in_RAX = *(*0x20 + -0x10);\n                                                puVar5 = *(*0x20 + -0x38);\n                                                goto code_r0x00401116;\n                                            }\n                                            *(*0x20 + -0x90) = 0x40157f;\n                                            puVar7 = *0x545518;\n                                            fcn.0045e420(*0x545518);\n                                        }\n                                        *(*0x20 + -0x90) = 0x401585;\n                                        fcn.0045e420(puVar7);\n                                        puVar3 = puVar4;\n                                        goto code_r0x00401585;\n                                    }\n                                    arg2 = *(*0x20 + -0x48);\n                                    unaff_RBX = *(*0x20 + -0x28);\n                                    in_RAX = *(*0x20 + -0x10);\n                                    puVar5 = *(*0x20 + -0x38);\n                                    puVar11 = *(*0x20 + -0x40);\n                                    uVar12 = *(*0x20 + -0x69);\n                                    puVar3 = *(*0x20 + -0x58);\n                                }\n                                puVar4 = puVar3 + 1;\n                            }\n                            *(*0x20 + -0x90) = 0x401535;\n                            fcn.00434ec0();\n                            *(*0x20 + -0x90) = 0x401546;\n                            fcn.004357c0();\n                            *(*0x20 + -0x90) = 0x401555;\n                            fcn.004357c0();\n                            *(*0x20 + -0x90) = 0x401566;\n                            fcn.004357c0();\n                            *(*0x20 + -0x90) = 0x40156b;\n                            fcn.00434f40();\n                            in_RAX = *(*0x20 + -0x10);\n                            puVar5 = *(*0x20 + -0x38);\n                        }\n                        goto code_r0x00401116;\n                    }\ncode_r0x004015dc:\n                    *(*0x20 + -0x90) = 0x4015e5;\n                    fcn.0045e4e0(puVar7);\n                }\n                puVar7 = arg2;\n                *(*0x20 + -0x90) = 0x4015f2;\n                arg2 = puVar7;\n                fcn.0045e4e0(puVar7);\n            }\n            *(*0x20 + -0x90) = 0x401605;\n            fcn.0045e460(arg2, puVar7);\ncode_r0x00401605:\n            *(*0x20 + -0x90) = 0x401610;\n            puVar7 = unaff_RBX;\n            fcn.0045e4e0(unaff_RBX);\ncode_r0x00401610:\n            *(*0x20 + -0x90) = 0x401618;\n            in_RAX = fcn.0045e460(puVar7, unaff_RBX);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x401628;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3377
    },
    "00401640": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401d97)\n\nvoid fcn.00401640(ulong param_1, ulong *param_2, int64_t param_3, ulong param_4)\n\n{\n    ulong *puVar1;\n    uint32_t uVar2;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong *arg3;\n    ulong uVar6;\n    ulong *arg4;\n    int64_t unaff_R14;\n    int32_t iStack96;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    uint32_t uStack76;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    puVar1 = fcn.0040c6e0();\n    puVar1[1] = 3;\n    *puVar1 = 0x4a80a4;\n    puVar1[2] = 0x598a81;\n    puVar1[5] = 3;\n    puVar1[4] = 0x4a80a7;\n    puVar1[6] = 0x598a80;\n    puVar1[9] = 4;\n    puVar1[8] = 0x4a81c2;\n    puVar1[10] = 0x598a86;\n    puVar1[0xd] = 9;\n    puVar1[0xc] = 0x4a8bc0;\n    puVar1[0xe] = 0x598a89;\n    puVar1[0x11] = 6;\n    puVar1[0x10] = 0x4a84da;\n    puVar1[0x12] = 0x598a8b;\n    puVar1[0x15] = 3;\n    puVar1[0x14] = 0x4a80d1;\n    puVar3 = 0x598a8c;\n    puVar1[0x16] = 0x598a8c;\n    *0x545518 = 6;\n    *0x545520 = 6;\n    if (*0x5985b0 != 0) {\n        fcn.0045df80(0x598a8c, param_2, param_3, param_4);\n        puVar1 = *0x545510;\n    }\n    *0x545510 = puVar1;\n    fcn.00401f20();\n    uVar4 = *0x545518;\n    if (iStack96 < 2) {\n        uVar5 = *0x545518 + 5;\n        param_2 = *0x545510;\n        puVar1 = *0x545510;\n        if ((*0x545520 < uVar5) &&\n           (puVar3 = *0x545510,  param_2 = fcn.00445800(*0x545520),  puVar1 = param_2,  *0x5985b0 != 0)) {\n            param_2 = fcn.0045df80(*0x545520, puVar3, param_3, param_4);\n            puVar1 = *0x545510;\n        }\n        *0x545510 = puVar1;\n        param_3 = uVar4 * 0x20;\n        *0x545518 = uVar5;\n        param_2[uVar4 * 4 + 1] = 6;\n        *(param_2 + uVar4 * 4 + 3) = 0;\n        puVar1 = param_2 + uVar4 * 4 + 2;\n        puVar3 = param_2 + uVar4 * 4 + 0x12;\n        if (*0x5985b0 == 0) {\n            param_2[uVar4 * 4] = 0x4a84d4;\n            param_2[uVar4 * 4 + 2] = 0x598a8a;\n        }\n        else {\n            fcn.0045e0a0(puVar3, 0x4a84d4, param_3, puVar1);\n            iStack96 = fcn.0045e0a0(puVar3, 0x598a8a, param_3, puVar1);\n        }\n        *(param_2 + param_3 + 0x28) = 4;\n        *(param_2 + param_3 + 0x38) = 0;\n        if (*0x5985b0 == 0) {\n            *(param_2 + param_3 + 0x20) = 0x4a81ea;\n            *(param_2 + param_3 + 0x30) = 0x598a8d;\n        }\n        else {\n            fcn.0045e120(puVar3, param_2, param_3);\n            iStack96 = fcn.0045e120(puVar3, param_2, param_3);\n        }\n        *(param_2 + param_3 + 0x48) = 5;\n        *(param_2 + param_3 + 0x58) = 0;\n        if (*0x5985b0 == 0) {\n            *(param_2 + param_3 + 0x40) = 0x4a832c;\n            *(param_2 + param_3 + 0x50) = 0x598a8f;\n        }\n        else {\n            fcn.0045e120(puVar3, param_2, param_3);\n            iStack96 = fcn.0045e120(puVar3, param_2, param_3);\n        }\n        *(param_2 + param_3 + 0x68) = 5;\n        *(param_2 + param_3 + 0x78) = 0;\n        if (*0x5985b0 == 0) {\n            *(param_2 + param_3 + 0x60) = 0x4a8331;\n            param_4 = 0x598a90;\n            *(param_2 + param_3 + 0x70) = 0x598a90;\n        }\n        else {\n            fcn.0045e120(puVar3, param_2, param_3);\n            param_4 = 0x598a90;\n            iStack96 = fcn.0045e120(puVar3, param_2, param_3);\n        }\n        *(param_2 + param_3 + 0x88) = 5;\n        *(param_2 + param_3 + 0x98) = 0;\n        if (*0x5985b0 == 0) {\n            *(param_2 + param_3 + 0x80) = 0x4a8336;\n            param_4 = 0x598a8e;\n            *(param_2 + param_3 + 0x90) = 0x598a8e;\n        }\n        else {\n            fcn.0045e0a0(puVar3, 0x4a8336, param_3, param_4);\n            param_2 = 0x598a8e;\n            iStack96 = fcn.0045e0a0(puVar3, 0x598a8e, param_3, param_4);\n        }\n    }\n    uVar4 = *0x545518;\n    if (iStack96 < 3) {\n        uVar5 = *0x545518 + 5;\n        puVar1 = *0x545510;\n        puVar3 = *0x545510;\n        if ((*0x545520 < uVar5) && (puVar1 = fcn.00445800(*0x545520),  puVar3 = puVar1,  *0x5985b0 != 0)) {\n            puVar1 = fcn.0045df80(*0x545520, param_2, param_3, param_4);\n            puVar3 = *0x545510;\n        }\n        *0x545510 = puVar3;\n        puVar3 = uVar4 * 0x20;\n        *0x545518 = uVar5;\n        puVar1[uVar4 * 4 + 1] = 3;\n        *(puVar1 + uVar4 * 4 + 3) = 0;\n        arg3 = puVar1 + uVar4 * 4 + 0xe;\n        arg4 = puVar1 + uVar4 * 4 + 0x12;\n        if (*0x5985b0 == 0) {\n            puVar1[uVar4 * 4] = 0x4a80aa;\n            puVar1[uVar4 * 4 + 2] = 0x598a82;\n        }\n        else {\n            uVar6 = 0x4a80aa;\n            fcn.0045e120(puVar3, puVar1 + uVar4 * 4 + 2, arg3);\n            puVar1 = fcn.0045e0a0(puVar3, 0x598a82, arg3, uVar6);\n        }\n        *(puVar1 + puVar3 + 5) = 4;\n        *(puVar1 + puVar3 + 7) = 0;\n        if (*0x5985b0 == 0) {\n            *(puVar1 + puVar3 + 4) = 0x4a8186;\n            *(puVar1 + puVar3 + 6) = 0x598a83;\n        }\n        else {\n            fcn.0045e0a0(puVar3, 0x4a8186, arg3, arg4);\n            puVar1 = fcn.0045e0a0(puVar3, 0x598a83, arg3, arg4);\n        }\n        *(puVar1 + puVar3 + 9) = 4;\n        *(puVar1 + puVar3 + 0xb) = 0;\n        if (*0x5985b0 == 0) {\n            *(puVar1 + puVar3 + 8) = 0x4a8192;\n            *(puVar1 + puVar3 + 10) = 0x598a84;\n        }\n        else {\n            fcn.0045e0a0(puVar3, 0x4a8192, arg3, arg4);\n            puVar1 = fcn.0045e0a0(puVar3, 0x598a84, arg3, arg4);\n        }\n        *(puVar1 + puVar3 + 0xd) = 4;\n        *(puVar1 + puVar3 + 0xf) = 0;\n        if (*0x5985b0 == 0) {\n            *(puVar1 + puVar3 + 0xc) = 0x4a8196;\n            param_2 = 0x598a85;\n            *(puVar1 + puVar3 + 0xe) = 0x598a85;\n        }\n        else {\n            fcn.0045e0a0(puVar3, 0x4a8196, arg3, arg4);\n            param_2 = 0x598a85;\n            puVar1 = fcn.0045e0a0(puVar3, 0x598a85, arg3, arg4);\n        }\n        *(puVar1 + puVar3 + 0x11) = 3;\n        *(puVar1 + puVar3 + 0x13) = 0;\n        if (*0x5985b0 == 0) {\n            *(puVar1 + puVar3 + 0x10) = 0x4a80b3;\n            param_2 = 0x598a87;\n            *(puVar1 + puVar3 + 0x12) = 0x598a87;\n        }\n        else {\n            fcn.0045df80(puVar3, param_2, arg3, arg4);\n            fcn.0045df80(puVar3, param_2, arg3, arg4);\n        }\n    }\n    fcn.00401ee0(puVar3, param_2);\n    if (uStack88 != 0) {\n        fcn.00401ee0(puVar3, param_2);\n        *0x598358 = uStack88;\n        fcn.00401ee0(puVar3, param_2);\n        *0x598a8d = (uStack80 & 1) != 0;\n        *0x598a89 = (uStack80 >> 1 & 1) != 0;\n        *0x598a8e = (uStack80 >> 9 & 1) != 0;\n        *0x598a8f = (uStack80 >> 0x13 & 1) != 0;\n        *0x598a90 = (uStack80 >> 0x14 & 1) != 0;\n        *0x598a8a = (uStack80 >> 0x17 & 1) != 0;\n        *0x598a80 = (uStack80 >> 0x19 & 1) != 0;\n        *0x598a88 = (uStack80 >> 0x1b & 1) != 0;\n        uVar4 = param_2 & 0xffffffffffffff00 | *0x598a88;\n        uVar2 = (puVar3 & 0xffffff00 | (uStack80 >> 0xc & 1) != 0) & uVar4;\n        *0x598a87 = uVar2;\n        if ((uStack80 >> 0x1b & 1) != 0) {\n            fcn.00401f00(uVar2, uVar4);\n        }\n        uVar5 = 0;\n        *0x598a82 = 0;\n        if (6 < uStack88) {\n            fcn.00401ee0(0, uVar4);\n            uVar4 = uVar5 & 0xffffffffffffff00 | (uStack84 >> 5 & 1) != 0;\n            *0x598a84 = (uStack84 >> 3 & 1) != 0;\n            uVar6 = 0;\n            *0x598a83 = 0;\n            *0x598a85 = (uStack84 >> 8 & 1) != 0;\n            *0x598a86 = (uStack84 >> 9 & 1) != 0;\n            *0x598a81 = (uStack84 >> 0x13 & 1) != 0;\n            *0x598a8c = (uStack84 >> 0x1d & 1) != 0;\n            fcn.00401ee0(uVar4, 0);\n            if (uStack88 < 0x80000001) {\n                return;\n            }\n            fcn.00401ee0(uVar4, uVar6);\n            *0x598a8b = (uStack76 >> 0x1b & 1) != 0;\n            return;\n        }\n        *0x598a82 = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 3465
    },
    "0040aec0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040aec0(void)\n\n{\n    uint64_t **ppuVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x530404 == 0x10) {\n                if (*0x5984a8 != 0) {\n                    if (*0x5984a8 < 0x80001) {\n                        if (0xfff < *0x5984a8) {\n                            if ((*0x5984a8 & *0x5984a8 - 1) == 0) {\n                                if ((*0x5984a0 & *0x5984a0 - 1) == 0) {\n                                    if (0x400000 < *0x5984a0) {\n                                        *0x5984a0 = 0;\n                                    }\n                                    if (*0x5984a0 != 0) {\n                                        while (*0x5984a0 != (1 << (*0x598498 & 0x3f) & -(*0x598498 < 0x40))) {\n                                            *0x598498 = *0x598498 + 1;\n                                        }\n                                    }\n                                    *(*0x20 + -0x30) = 0x40af72;\n                                    fcn.00423a20();\n                                    *(*0x20 + -0x30) = 0x40af77;\n                                    *0x598460 = fcn.00413580();\n                                    for (iVar2 = 0; iVar2 < 3; iVar2 = iVar2 + 1) {\n                                    }\n                                    for (iVar2 = 0x7f; -1 < iVar2; iVar2 = iVar2 + -1) {\n                                        *(*0x20 + -0x18) = iVar2;\n                                        if (iVar2 < 0x40) {\n                                            uVar4 = 0x56a9b0;\n                                        }\n                                        else {\n                                            uVar4 = 0x5711e8;\n                                        }\n                                        *(*0x20 + -0x10) = uVar4;\n                                        *(*0x20 + -0x30) = 0x40afa5;\n                                        puVar3 = fcn.00416180();\n                                        iVar2 = *(*0x20 + -0x18);\n                                        *puVar3 = iVar2 << 0x28 | 0xc000000000;\n                                        ppuVar1 = *(*0x20 + -0x10);\n                                        puVar3[2] = *ppuVar1;\n                                        *ppuVar1 = puVar3;\n                                    }\n                                    return;\n                                }\n                                *(*0x20 + -0x30) = 0x40b039;\n                                fcn.00434ec0();\n                                *(*0x20 + -0x30) = 0x40b04a;\n                                fcn.004357c0();\n                                *(*0x20 + -0x30) = 0x40b056;\n                                fcn.004354c0();\n                                *(*0x20 + -0x30) = 0x40b067;\n                                fcn.004357c0();\n                                *(*0x20 + -0x30) = 0x40b06c;\n                                fcn.00434f40();\n                                *(*0x20 + -0x30) = 0x40b07d;\n                                fcn.00433580();\n                            }\n                            *(*0x20 + -0x30) = 0x40b085;\n                            fcn.00434ec0();\n                            *(*0x20 + -0x30) = 0x40b096;\n                            fcn.004357c0();\n                            *(*0x20 + -0x30) = 0x40b0a5;\n                            fcn.004354c0();\n                            *(*0x20 + -0x30) = 0x40b0b6;\n                            fcn.004357c0();\n                            *(*0x20 + -0x30) = 0x40b0bb;\n                            fcn.00434f40();\n                            *(*0x20 + -0x30) = 0x40b0cc;\n                            fcn.00433580();\n                        }\n                        *(*0x20 + -0x30) = 0x40b0d1;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x30) = 0x40b0e5;\n                        fcn.004357c0();\n                        *(*0x20 + -0x30) = 0x40b0f1;\n                        fcn.004354c0();\n                        *(*0x20 + -0x30) = 0x40b105;\n                        fcn.004357c0();\n                        *(*0x20 + -0x30) = 0x40b10f;\n                        fcn.004355c0();\n                        *(*0x20 + -0x30) = 0x40b125;\n                        fcn.004357c0();\n                        *(*0x20 + -0x30) = 0x40b12a;\n                        fcn.00434f40();\n                        *(*0x20 + -0x30) = 0x40b13b;\n                        fcn.00433580();\n                    }\n                    *(*0x20 + -0x30) = 0x40b145;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x30) = 0x40b156;\n                    fcn.004357c0();\n                    *(*0x20 + -0x30) = 0x40b165;\n                    fcn.004354c0();\n                    *(*0x20 + -0x30) = 0x40b176;\n                    fcn.004357c0();\n                    *(*0x20 + -0x30) = 0x40b185;\n                    fcn.004355c0();\n                    *(*0x20 + -0x30) = 0x40b196;\n                    fcn.004357c0();\n                    *(*0x20 + -0x30) = 0x40b19b;\n                    fcn.00434f40();\n                    *(*0x20 + -0x30) = 0x40b1ac;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x30) = 0x40b1bd;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x30) = 0x40b1ce;\n            fcn.00433580();\n        }\n        *(puVar5 + -8) = 0x40b1d4;\n        fcn.0045bdc0();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1599
    },
    "0040d6c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.0040d6c0(ulong arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    int64_t *unaff_RBX;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if ((*(unaff_RBX + 1) & 4) != 0) {\n            fcn.00433680();\n        }\n        uVar3 = (***(in_RAX + 0x48))(arg1);\n        uVar7 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n        iVar1 = unaff_RBX[3];\n        iVar5 = (uVar7 & uVar3) * *(in_RAX + 0x52) + unaff_RBX[2];\n        if (iVar1 != 0) {\n            if ((*(unaff_RBX + 1) & 8) == 0) {\n                uVar7 = uVar7 >> 1;\n            }\n            iVar8 = *(in_RAX + 0x52) * (uVar7 & uVar3);\n            if (2 < *(iVar1 + iVar8) - 2U) {\n                iVar5 = iVar1 + iVar8;\n            }\n        }\n        uVar4 = uVar3 >> 0x38;\n        uVar7 = uVar4;\n        if (uVar3 >> 0x38 < 5) {\n            uVar4 = (uVar3 >> 0x38) + 5;\n            uVar7 = uVar4;\n        }\n        do {\n            if (iVar5 == 0) {\n                return 0x599480;\n            }\n            for (uVar3 = 0; uVar3 < 8; uVar3 = uVar3 + 1) {\n                if (uVar4 == *(uVar3 + iVar5)) {\n                    puVar6 = iVar5 + *(in_RAX + 0x50) * uVar3 + 8;\n                    if ((*(in_RAX + 0x54) & 1) != 0) {\n                        puVar6 = *puVar6;\n                    }\n                    cVar2 = (***(*(in_RAX + 0x30) + 0x18))(puVar6);\n                    if (cVar2 != '\\0') {\n                        puVar6 = *(in_RAX + 0x51) * uVar3 + *(in_RAX + 0x50) * 8 + 8 + iVar5;\n                        if ((*(in_RAX + 0x54) >> 1 & 1) != 0) {\n                            puVar6 = *puVar6;\n                        }\n                        return puVar6;\n                    }\n                    uVar4 = uVar7 & 0xff;\n                }\n                else if (*(uVar3 + iVar5) == '\\0') {\n                    return 0x599480;\n                }\n            }\n            iVar5 = *(*(in_RAX + 0x52) + iVar5 + -8);\n        } while( true );\n    }\n    if ((*(in_RAX + 0x54) >> 4 & 1) != 0) {\n        (***(in_RAX + 0x48))();\n    }\n    return 0x599480;\n}\n",
        "token_count": 837
    },
    "0040d900": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.0040d900(ulong arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    int64_t *unaff_RBX;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n        return NULL;\n    }\n    uVar3 = (***(in_RAX + 0x48))();\n    uVar7 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n    iVar1 = unaff_RBX[3];\n    iVar5 = (uVar7 & uVar3) * *(in_RAX + 0x52) + unaff_RBX[2];\n    if (iVar1 != 0) {\n        if ((*(unaff_RBX + 1) & 8) == 0) {\n            uVar7 = uVar7 >> 1;\n        }\n        iVar8 = *(in_RAX + 0x52) * (uVar7 & uVar3);\n        if (2 < *(iVar1 + iVar8) - 2U) {\n            iVar5 = iVar1 + iVar8;\n        }\n    }\n    uVar4 = uVar3 >> 0x38;\n    uVar7 = uVar4;\n    if (uVar3 >> 0x38 < 5) {\n        uVar4 = (uVar3 >> 0x38) + 5;\n        uVar7 = uVar4;\n    }\n    do {\n        if (iVar5 == 0) {\n            return NULL;\n        }\n        for (uVar3 = 0; uVar3 < 8; uVar3 = uVar3 + 1) {\n            if (uVar4 == *(uVar3 + iVar5)) {\n                puVar6 = iVar5 + *(in_RAX + 0x50) * uVar3 + 8;\n                if ((*(in_RAX + 0x54) & 1) != 0) {\n                    puVar6 = *puVar6;\n                }\n                cVar2 = (***(*(in_RAX + 0x30) + 0x18))();\n                if (cVar2 != '\\0') {\n                    return puVar6;\n                }\n                uVar4 = uVar7 & 0xff;\n            }\n            else if (*(uVar3 + iVar5) == '\\0') {\n                return NULL;\n            }\n        }\n        iVar5 = *(*(in_RAX + 0x52) + iVar5 + -8);\n    } while( true );\n}\n",
        "token_count": 670
    },
    "0040e060": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e060(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x5985b0 == 0) {\n        *(arg1 + 0x10) = in_RAX;\n    }\n    else {\n        in_RAX = fcn.0045df80(arg1, arg2, arg3, arg4);\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if (*0x5985b0 == 0) {\n            *(arg1 + 0x18) = unaff_RBX;\n        }\n        else {\n            in_RAX = fcn.0045e0c0(arg1, arg2, arg3, arg4);\n        }\n        *(arg1 + 0x4a) = *(unaff_RBX + 9);\n        if (*0x5985b0 == 0) {\n            *(arg1 + 0x20) = unaff_RBX[2];\n        }\n        else {\n            in_RAX = fcn.0045e0a0(arg1, unaff_RBX[2], arg3, arg4);\n        }\n        piVar5 = unaff_RBX;\n        if (*(*(in_RAX + 0x40) + 8) == 0) {\n            if (unaff_RBX[5] == 0) {\n                iVar3 = fcn.0040c6e0();\n                if (*0x5985b0 == 0) {\n                    unaff_RBX[5] = iVar3;\n                }\n                else {\n                    fcn.0045df80(unaff_RBX, unaff_RBX + 5, arg3, arg4);\n                }\n            }\n            piVar6 = piVar5[5];\n            if (*piVar6 == 0) {\n                uVar4 = fcn.0040c6e0();\n                if (*0x5985b0 == 0) {\n                    *unaff_RBX[5] = uVar4;\n                    piVar5 = unaff_RBX;\n                }\n                else {\n                    fcn.0045df80(unaff_RBX, piVar6, arg3, arg4);\n                    piVar5 = unaff_RBX;\n                }\n            }\n            if (*0x5985b0 == 0) {\n                *(arg1 + 0x30) = *piVar5[5];\n            }\n            else {\n                fcn.0045e0a0(arg1, *piVar5[5], arg3, arg4);\n            }\n            if (*0x5985b0 == 0) {\n                *(arg1 + 0x38) = *(piVar5[5] + 8);\n            }\n            else {\n                fcn.0045e0a0(arg1, *(piVar5[5] + 8), arg3, arg4);\n            }\n        }\n        if (*(piVar5 + 9) < 0x1d) {\n            uVar7 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n            auVar2 = ZEXT816(uVar7) * ZEXT816(uVar7 ^ 0xe7037ed1a0b428db);\n            *(*(unaff_R14 + 0x30) + 0xf0) = uVar7;\n            uVar7 = SUB164(auVar2 >> 0x40, 0) ^ SUB164(auVar2, 0);\n        }\n        else {\n            uVar7 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n            auVar2 = ZEXT816(uVar7) * ZEXT816(uVar7 ^ 0xe7037ed1a0b428db);\n            *(*(unaff_R14 + 0x30) + 0xf0) = uVar7;\n            uVar7 = SUB168(auVar2 >> 0x40, 0) ^ SUB168(auVar2, 0);\n        }\n        *(arg1 + 0x40) = (1 << (*(piVar5 + 9) & 0x3f)) - 1U & uVar7;\n        uVar1 = *(piVar5 + 9);\n        piVar6 = uVar1;\n        *(arg1 + 0x48) = -(uVar1 < 0x40) & uVar7 >> (uVar1 & 0x3f) & 7;\n        *(arg1 + 0x50) = *(arg1 + 0x40);\n        uVar7 = *(piVar5 + 1) & 3;\n        if ((*(piVar5 + 1) & 3) != '\\x03') {\n            piVar6 = piVar5 + 1;\n            uVar7 = 3;\n            LOCK();\n            *piVar6 = *piVar6 | 3;\n        }\n        fcn.0040e2e0(piVar6, uVar7);\n        return;\n    }\n    return;\n}\n",
        "token_count": 1271
    },
    "0040e2e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e2e0(ulong noname_0, code **arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    char cVar3;\n    uchar (*in_RAX) [16];\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint8_t uVar6;\n    code **ppcVar7;\n    ulong noname_0_00;\n    code **arg2_00;\n    uint8_t uVar8;\n    code **arg3;\n    uint32_t uVar9;\n    uint64_t arg4;\n    uint8_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int64_t iVar13;\n    int64_t arg4_00;\n    ulong *puVar14;\n    code **noname_1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar1 = *(in_RAX[1] + 8);\n    if ((*(iVar1 + 8) & 4) != 0) {\n        fcn.00433680();\n    }\n    iVar2 = *in_RAX[1];\n    arg3 = *in_RAX[5];\n    arg4_00 = *(in_RAX[2] + 8);\n    uVar11 = in_RAX[4][0xb];\n    ppcVar7 = *(in_RAX[5] + 8);\n    do {\n        if (arg4_00 == 0) {\n            if ((*in_RAX[4] == arg3) && (in_RAX[4][9] != '\\0')) {\n                if (*0x5985b0 == 0) {\n                    *in_RAX = in_XMM15;\n                }\n                else {\n                    noname_0_00 = 0;\n                    fcn.0045e080(0, arg2, arg3, 0);\n                    fcn.0045e080(noname_0_00, arg2, arg3, arg4_00);\n                }\n                return;\n            }\n            iVar5 = *(iVar1 + 0x18);\n            if ((iVar5 == 0) || (*(iVar1 + 9) != in_RAX[4][10])) {\n                arg4_00 = *(iVar2 + 0x52) * arg3 + *in_RAX[2];\n                ppcVar7 = 0xffffffffffffffff;\n            }\n            else {\n                uVar10 = *(*(in_RAX[1] + 8) + 9);\n                if ((*(*(in_RAX[1] + 8) + 8) & 8) == 0) {\n                    uVar10 = uVar10 - 1;\n                }\n                iVar13 = ((1 << (uVar10 & 0x3f)) - 1U & arg3) * *(iVar2 + 0x52);\n                arg4_00 = iVar5 + iVar13;\n                ppcVar7 = arg3;\n                if (*(iVar13 + iVar5) - 2U < 3) {\n                    arg4_00 = *(iVar2 + 0x52) * arg3 + *in_RAX[2];\n                    ppcVar7 = 0xffffffffffffffff;\n                }\n            }\n            arg3 = arg3 + 1;\n            if (1 << (in_RAX[4][10] & 0x3f) == arg3) {\n                in_RAX[4][9] = 1;\n                arg3 = NULL;\n            }\n            uVar11 = 0;\n        }\n        while (arg2 = ppcVar7,  uVar10 = uVar11,  ppcVar7 = arg2,  uVar10 < 8) {\n            uVar9 = in_RAX[4][8] + uVar11;\n            arg4 = uVar9 & 7;\n            uVar12 = uVar11;\n            if ((*(arg4_00 + arg4) < 2) || (*(arg4_00 + arg4) == 4)) goto code_r0x0040e478;\n            uVar4 = uVar9 & 7;\n            noname_1 = *(iVar2 + 0x50) * uVar4 + 8 + arg4_00;\n            if ((*(iVar2 + 0x54) & 1) != 0) {\n                noname_1 = *noname_1;\n            }\n            puVar14 = arg4_00 + *(iVar2 + 0x51) * uVar4 + *(iVar2 + 0x50) * 8 + 8;\n            arg2_00 = arg2;\n            uVar8 = uVar10;\n            if ((arg2 == 0xffffffffffffffff) || ((*(iVar1 + 8) & 8) != 0)) {\ncode_r0x0040e644:\n                uVar6 = *(arg4_00 + arg4);\n                uVar4 = uVar6;\n                if ((uVar6 == 2) || (uVar6 == 3)) {\n                    uVar4 = *(iVar2 + 0x54);\n                    if ((*(iVar2 + 0x54) >> 2 & 1) == 0) {\n                        arg2_00 = *(*(iVar2 + 0x30) + 0x18);\n                        uVar6 = (**arg2_00)();\n                        uVar8 = uVar10;\n                    }\n                    else {\n                        uVar6 = 1;\n                    }\n                    uVar6 = uVar6 ^ 1;\n                }\n                else {\n                    uVar6 = 1;\n                }\n                if (uVar6 != 0) {\n                    uVar10 = uVar8;\n                    if (*0x5985b0 == 0) {\n                        **in_RAX = noname_1;\n                        noname_1 = arg2_00;\n                    }\n                    else {\n                        in_RAX = fcn.0045e0a0(arg3, noname_1, uVar4, arg4);\n                    }\n                    if ((*(iVar2 + 0x54) >> 1 & 1) != 0) {\n                        puVar14 = *puVar14;\n                    }\n                    if (*0x5985b0 == 0) {\n                        *(*in_RAX + 8) = puVar14;\n                        arg2_00 = noname_1;\n                    }\n                    else {\n                        in_RAX = fcn.0045e0c0(*in_RAX + 8, arg3, uVar4, arg4);\n                        arg2_00 = arg3;\n                    }\ncode_r0x0040e798:\n                    *in_RAX[5] = arg3;\n                    if (*(in_RAX[2] + 8) != arg4_00) {\n                        if (*0x5985b0 == 0) {\n                            *(in_RAX[2] + 8) = arg4_00;\n                        }\n                        else {\n                            in_RAX = fcn.0045e080(arg4_00, arg2_00, uVar4, arg4);\n                        }\n                    }\n                    in_RAX[4][0xb] = uVar10 + 1;\n                    *(in_RAX[5] + 8) = arg2;\n                    return;\n                }\n                iVar5 = fcn.0040d900(noname_1);\n                if (iVar5 != 0) {\n                    if (*0x5985b0 == 0) {\n                        **in_RAX = iVar5;\n                        *(*in_RAX + 8) = iVar1;\n                    }\n                    else {\n                        fcn.0045df80(noname_1, arg2_00, uVar4, arg4);\n                        fcn.0045e0c0(in_RAX, arg2_00, uVar4, arg4);\n                    }\n                    goto code_r0x0040e798;\n                }\n                uVar12 = uVar11 & 0xff;\n            }\n            else {\n                if ((*(iVar2 + 0x54) >> 2 & 1) == 0) {\n                    cVar3 = (***(*(iVar2 + 0x30) + 0x18))();\n                    uVar12 = uVar11 & 0xff;\n                }\n                else {\n                    cVar3 = '\\x01';\n                }\n                if (cVar3 == '\\0') {\n                    uVar8 = in_RAX[4][10] - 1;\n                    arg2_00 = arg2 >> (uVar8 & 0x3f) & -(uVar8 < 0x40);\n                    uVar8 = uVar12;\n                    if ((*(arg4_00 + arg4) & 1) == arg2_00) goto code_r0x0040e644;\n                }\n                else {\n                    arg2_00 = *(iVar2 + 0x48);\n                    uVar4 = (**arg2_00)();\n                    if (arg2 == (uVar4 & (1 << (in_RAX[4][10] & 0x3f)) - 1U)) goto code_r0x0040e644;\n                    uVar12 = uVar11 & 0xff;\n                }\n            }\ncode_r0x0040e478:\n            uVar11 = uVar12 + 1;\n        }\n        arg4_00 = *(*(iVar2 + 0x52) + arg4_00 + -8);\n        uVar11 = 0;\n    } while( true );\n}\n",
        "token_count": 2131
    },
    "0040eac0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040eac0(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t **arg3;\n    ulong *arg3_00;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    ulong *arg4;\n    int64_t iVar8;\n    int64_t **arg1_01;\n    int64_t **ppiVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x30 < *(unaff_R14 + 0x10) || *0x20 + -0x30 == *(unaff_R14 + 0x10)) {\ncode_r0x0040f02a:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40f03e;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xb0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar8 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar7 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar7;\n        *(*0x20 + -0x38) = iVar7 + 8;\n        *(*0x20 + -0x30) = iVar7 + *(in_RAX + 0x50) * 8 + 8;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar7 = *(in_RAX + 0x52) * (iVar8 + arg1) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar7;\n            *(*0x20 + -0x18) = iVar7 + 8;\n            *(*0x20 + -0x10) = iVar7 + *(in_RAX + 0x50) * 8 + 8;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x91) = uVar4;\n        *(*0x20 + -0x90) = iVar8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        arg1 = uVar4;\n        for (; pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            arg1_01 = pcVar6 + 8;\n            arg4 = pcVar6 + *(in_RAX + 0x50) * 8 + 8;\n            for (iVar7 = 0; iVar7 < 8; iVar7 = iVar7 + 1) {\n                uVar3 = pcVar6[iVar7];\n                if (1 < uVar3) {\n                    if (4 < uVar3) {\n                        ppiVar9 = arg1_01;\n                        if ((*(in_RAX + 0x54) & 1) != 0) {\n                            ppiVar9 = *arg1_01;\n                        }\n                        *(*0x20 + -0x88) = iVar7;\n                        *(*0x20 + -0x58) = arg4;\n                        *(*0x20 + -0x68) = ppiVar9;\n                        *(*0x20 + -0x60) = arg1_01;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            *(*0x20 + -0x93) = uVar3;\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xb8) = 0x40ed1d;\n                            uVar4 = (*pcVar2)();\n                            if ((*(*(*0x20 + 0x10) + 8) & 1) == 0) {\n                                uVar3 = 0;\n                            }\n                            else if ((*(*(*0x20 + 8) + 0x54) >> 2 & 1) == 0) {\n                                *(*0x20 + -0x80) = uVar4;\n                                pcVar2 = **(*(*(*0x20 + 8) + 0x30) + 0x18);\n                                *(*0x20 + -0xb8) = 0x40ed62;\n                                uVar3 = (*pcVar2)();\n                                uVar3 = uVar3 ^ 1;\n                                uVar4 = *(*0x20 + -0x80);\n                            }\n                            else {\n                                uVar3 = 0;\n                            }\n                            if (uVar3 == 0) {\n                                bVar10 = (uVar4 >> (*(*0x20 + -0x91) & 0x3f) & 1) != 0;\n                                uVar3 = *(*0x20 + -0x93);\n                            }\n                            else {\n                                uVar3 = uVar4 >> 0x38;\n                                if (uVar3 < 5) {\n                                    uVar3 = uVar3 + 5;\n                                }\n                                bVar10 = *(*0x20 + -0x93) & 1;\n                            }\n                            arg1 = *(*0x20 + -0x91);\n                            arg2 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            iVar7 = *(*0x20 + -0x88);\n                            arg4 = *(*0x20 + -0x58);\n                            arg1_01 = *(*0x20 + -0x60);\n                            ppiVar9 = *(*0x20 + -0x68);\n                            in_RAX = *(*0x20 + 8);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar10 = false;\n                        }\n                        pcVar6[iVar7] = bVar10 + 2;\n                        if (bVar10 < 2) {\n                            iVar8 = bVar10 * 0x20;\n                            *(*0x20 + -0x78) = iVar8;\n                            if (*(*0x20 + iVar8 + -0x40) == 8) {\n                                *(*0x20 + -0x92) = uVar3;\n                                arg1_00 = *(*0x20 + iVar8 + -0x48);\n                                *(*0x20 + -0xb8) = 0x40ee45;\n                                iVar7 = fcn.0040cf20(arg1_00);\n                                iVar8 = *(*0x20 + -0x78);\n                                *(*0x20 + iVar8 + -0x48) = iVar7;\n                                *(*0x20 + iVar8 + -0x40) = 0;\n                                *(*0x20 + iVar8 + -0x38) = iVar7 + 8;\n                                in_RAX = *(*0x20 + 8);\n                                *(*0x20 + iVar8 + -0x30) = iVar7 + *(in_RAX + 0x50) * 8 + 8;\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar7 = *(*0x20 + -0x88);\n                                arg4 = *(*0x20 + -0x58);\n                                iVar8 = *(*0x20 + -0x78);\n                                arg1_01 = *(*0x20 + -0x60);\n                                uVar3 = *(*0x20 + -0x92);\n                                ppiVar9 = *(*0x20 + -0x68);\n                            }\n                            *(*(*0x20 + iVar8 + -0x48) + (*(*0x20 + iVar8 + -0x40) & 7)) = uVar3;\n                            if ((*(in_RAX + 0x54) & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40ef25;\n                                fcn.004112e0(arg1_01);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar7 = *(*0x20 + -0x88);\n                                arg4 = *(*0x20 + -0x58);\n                                iVar8 = *(*0x20 + -0x78);\n                                arg1_01 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3 = *(*0x20 + iVar8 + -0x38);\n                                if (*0x5985b0 == 0) {\n                                    *arg3 = ppiVar9;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40ef05;\n                                    in_RAX = fcn.0045e0e0(arg1, arg2, arg3, arg4);\n                                }\n                            }\n                            if ((*(in_RAX + 0x54) >> 1 & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40efaf;\n                                fcn.004112e0(arg4);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar7 = *(*0x20 + -0x88);\n                                arg4 = *(*0x20 + -0x58);\n                                iVar8 = *(*0x20 + -0x78);\n                                arg1_01 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3_00 = *(*0x20 + iVar8 + -0x30);\n                                if (*0x5985b0 == 0) {\n                                    *arg3_00 = *arg4;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40ef90;\n                                    in_RAX = fcn.0045e0e0(arg1, arg2, arg3_00, arg4);\n                                }\n                            }\n                            *(*0x20 + iVar8 + -0x40) = *(*0x20 + iVar8 + -0x40) + 1;\n                            *(*0x20 + iVar8 + -0x38) = *(*0x20 + iVar8 + -0x38) + *(in_RAX + 0x50);\n                            *(*0x20 + iVar8 + -0x30) = *(*0x20 + iVar8 + -0x30) + *(in_RAX + 0x51);\n                            uVar4 = arg1 & 0xffffffff;\n                            iVar8 = *(*0x20 + -0x90);\n                            goto code_r0x0040ec93;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xb8) = 0x40f018;\n                        fcn.0045e420(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xb8) = 0x40f029;\n                    in_RAX = fcn.00433580();\n                    goto code_r0x0040f02a;\n                }\n                pcVar6[iVar7] = '\\x04';\ncode_r0x0040ec93:\n                arg1_01 = arg1_01 + *(in_RAX + 0x50);\n                arg4 = arg4 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar8 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xb8) = 0x40ec74;\n            fcn.004115e0(uVar1 * arg2 + iVar8 + 8);\n            in_RAX = *(*0x20 + 8);\n            arg2 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar8 = *(*0x20 + -0x90);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xb8) = 0x40ebf9;\n        fcn.0040f060(iVar8, in_RAX, uVar4);\n    }\n    return;\n}\n",
        "token_count": 3277
    },
    "0040f060": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f060(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t in_RAX;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uint64_t uVar1;\n    uint32_t uVar2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = *(in_RAX + 0x20) + 0x401;\n    if (arg1 < uVar1) {\n        uVar1 = arg1;\n    }\n    *(in_RAX + 0x20) = *(in_RAX + 0x20) + 1;\n    while ((arg2 = *(in_RAX + 0x20),  arg2 != uVar1 &&\n           (uVar2 = *(*(unaff_RBX + 0x52) * arg2 + *(in_RAX + 0x18)) - 2,  arg3 = uVar2,  uVar2 < 3))) {\n        *(in_RAX + 0x20) = arg2 + 1;\n    }\n    if (arg1 == arg2) {\n        if (*0x5985b0 == 0) {\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            in_RAX = fcn.0045e080(0, arg2, arg3, in_R9);\n        }\n        if (*(in_RAX + 0x28) != 0) {\n            if (*0x5985b0 == 0) {\n                *(*(in_RAX + 0x28) + 8) = 0;\n            }\n            else {\n                in_RAX = fcn.0045e080(0, arg2, arg3, in_R9);\n            }\n        }\n        *(in_RAX + 8) = *(in_RAX + 8) & 0xf7;\n    }\n    return;\n}\n",
        "token_count": 483
    },
    "0040f160": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040f160(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    int64_t *unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if ((*(unaff_RBX + 1) & 4) != 0) {\n            fcn.00433680();\n        }\n        if (*(unaff_RBX + 9) == '\\0') {\n            iVar3 = unaff_RBX[2];\n        }\n        else {\n            uVar2 = (***(in_RAX + 0x48))();\n            uVar5 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n            iVar1 = unaff_RBX[3];\n            iVar3 = (uVar5 & uVar2) * *(in_RAX + 0x52) + unaff_RBX[2];\n            if (iVar1 != 0) {\n                if ((*(unaff_RBX + 1) & 8) == 0) {\n                    uVar5 = uVar5 >> 1;\n                }\n                iVar6 = *(in_RAX + 0x52) * (uVar5 & uVar2);\n                if (2 < *(iVar1 + iVar6) - 2U) {\n                    iVar3 = iVar1 + iVar6;\n                }\n            }\n        }\n        do {\n            if (iVar3 == 0) {\n                return 0x599480;\n            }\n            piVar4 = iVar3 + 8;\n            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                if ((arg1 == *piVar4) && (1 < *(uVar5 + iVar3))) {\n                    return *(in_RAX + 0x51) * uVar5 + 0x28 + iVar3;\n                }\n                piVar4 = piVar4 + 1;\n            }\n            iVar3 = *(*(in_RAX + 0x52) + iVar3 + -8);\n        } while( true );\n    }\n    return 0x599480;\n}\n",
        "token_count": 581
    },
    "0040f300": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040f300(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    int64_t *unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if ((*(unaff_RBX + 1) & 4) != 0) {\n            fcn.00433680();\n        }\n        if (*(unaff_RBX + 9) == '\\0') {\n            iVar3 = unaff_RBX[2];\n        }\n        else {\n            uVar2 = (***(in_RAX + 0x48))();\n            uVar5 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n            iVar1 = unaff_RBX[3];\n            iVar3 = (uVar5 & uVar2) * *(in_RAX + 0x52) + unaff_RBX[2];\n            if (iVar1 != 0) {\n                if ((*(unaff_RBX + 1) & 8) == 0) {\n                    uVar5 = uVar5 >> 1;\n                }\n                iVar6 = *(in_RAX + 0x52) * (uVar5 & uVar2);\n                if (2 < *(iVar1 + iVar6) - 2U) {\n                    iVar3 = iVar1 + iVar6;\n                }\n            }\n        }\n        do {\n            if (iVar3 == 0) {\n                return 0x599480;\n            }\n            piVar4 = iVar3 + 8;\n            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                if ((arg1 == *piVar4) && (1 < *(uVar5 + iVar3))) {\n                    return *(in_RAX + 0x51) * uVar5 + 0x28 + iVar3;\n                }\n                piVar4 = piVar4 + 1;\n            }\n            iVar3 = *(*(in_RAX + 0x52) + iVar3 + -8);\n        } while( true );\n    }\n    return 0x599480;\n}\n",
        "token_count": 581
    },
    "0040f880": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f880(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint8_t **arg3;\n    uint *puVar8;\n    int64_t iVar9;\n    uint8_t *arg1_01;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar4 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0040fc0b:\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40fc1f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    }\n    puVar4 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    puVar5 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar6 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar6 = *(unaff_RBX + 9) - 1;\n    }\n    arg3 = *puVar5 - 2;\n    iVar9 = 1 << (uVar6 & 0x3f);\n    uVar3 = arg1;\n    if (2 < *puVar5 - 2) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar7 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar7;\n        *(*0x20 + -0x38) = iVar7 + 8;\n        *(*0x20 + -0x30) = iVar7 + 0x28;\n        arg3 = *(unaff_RBX + 8);\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar7 = *(in_RAX + 0x52) * (iVar9 + arg1) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar7;\n            *(*0x20 + -0x18) = iVar7 + 8;\n            arg3 = iVar7 + 0x28;\n            *(*0x20 + -0x10) = arg3;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x81) = uVar6;\n        *(*0x20 + -0x80) = iVar9;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        arg1 = uVar6;\n        while (puVar5 != NULL) {\n            *(*0x20 + -0x50) = puVar5;\n            puVar8 = puVar5 + 8;\n            arg1_01 = puVar5 + 0x28;\n            for (iVar7 = 0; iVar7 < 8; iVar7 = iVar7 + 1) {\n                uVar10 = puVar5[iVar7];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x78) = iVar7;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x60) = puVar8;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x40faa2;\n                            uVar3 = (*pcVar2)();\n                            bVar11 = (uVar3 >> (*(*0x20 + -0x81) & 0x3f) & 1) != 0;\n                            puVar8 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar7 = *(*0x20 + -0x78);\n                            uVar10 = *(*0x20 + -0x82);\n                            puVar5 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        puVar5[iVar7] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar9 = bVar11 * 0x20;\n                            *(*0x20 + -0x68) = iVar9;\n                            if (*(*0x20 + iVar9 + -0x40) == 8) {\n                                arg1_00 = *(*0x20 + iVar9 + -0x48);\n                                *(*0x20 + -0xa8) = 0x40fb25;\n                                iVar7 = fcn.0040cf20(arg1_00);\n                                iVar9 = *(*0x20 + -0x68);\n                                *(*0x20 + iVar9 + -0x48) = iVar7;\n                                *(*0x20 + iVar9 + -0x40) = 0;\n                                *(*0x20 + iVar9 + -0x38) = iVar7 + 8;\n                                *(*0x20 + iVar9 + -0x30) = iVar7 + 0x28;\n                                puVar8 = *(*0x20 + -0x60);\n                                arg1_01 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                            }\n                            *(*(*0x20 + iVar9 + -0x48) + (*(*0x20 + iVar9 + -0x40) & 7)) = uVar10;\n                            **(*0x20 + iVar9 + -0x38) = *puVar8;\n                            *(*0x20 + -0xa8) = 0x40fb96;\n                            fcn.004112e0(arg1_01);\n                            iVar9 = *(*0x20 + -0x68);\n                            *(*0x20 + iVar9 + -0x40) = *(*0x20 + iVar9 + -0x40) + 1;\n                            *(*0x20 + iVar9 + -0x38) = *(*0x20 + iVar9 + -0x38) + 4;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar9 + -0x30) = *(*0x20 + iVar9 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            uVar3 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            puVar5 = *(*0x20 + -0x50);\n                            puVar8 = *(*0x20 + -0x60);\n                            iVar9 = *(*0x20 + -0x80);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar7 = *(*0x20 + -0x78);\n                            goto code_r0x0040fa28;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x40fbf9;\n                        fcn.0045e420(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x40fc0a;\n                    in_RAX = fcn.00433580();\n                    goto code_r0x0040fc0b;\n                }\n                puVar5[iVar7] = 4;\ncode_r0x0040fa28:\n                puVar8 = puVar8 + 1;\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n            arg3 = puVar5 + (*(in_RAX + 0x52) - 8);\n            puVar5 = *arg3;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar9 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40fa09;\n            fcn.004115e0(uVar1 * uVar3 + iVar9 + 8);\n            in_RAX = *(*0x20 + 8);\n            uVar3 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar9 = *(*0x20 + -0x80);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == uVar3) {\n        *(*0x20 + -0xa8) = 0x40f999;\n        fcn.0040f060(iVar9, in_RAX, arg3);\n    }\n    return;\n}\n",
        "token_count": 2320
    },
    "0040fc40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040fc40(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t *unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if ((*(unaff_RBX + 1) & 4) != 0) {\n            fcn.00433680();\n        }\n        if (*(unaff_RBX + 9) == '\\0') {\n            piVar3 = unaff_RBX[2];\n        }\n        else {\n            uVar2 = (***(in_RAX + 0x48))();\n            uVar5 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n            iVar1 = unaff_RBX[3];\n            piVar3 = (uVar5 & uVar2) * *(in_RAX + 0x52) + unaff_RBX[2];\n            if (iVar1 != 0) {\n                if ((*(unaff_RBX + 1) & 8) == 0) {\n                    uVar5 = uVar5 >> 1;\n                }\n                iVar6 = *(in_RAX + 0x52) * (uVar5 & uVar2);\n                if (2 < *(iVar1 + iVar6) - 2U) {\n                    piVar3 = iVar1 + iVar6;\n                }\n            }\n        }\n        do {\n            if (piVar3 == NULL) {\n                return 0x599480;\n            }\n            piVar4 = piVar3;\n            for (uVar5 = 0; piVar4 = piVar4 + 1,  uVar5 < 8; uVar5 = uVar5 + 1) {\n                if ((arg1 == *piVar4) && (1 < *(uVar5 + piVar3))) {\n                    return *(in_RAX + 0x51) * uVar5 + 0x48 + piVar3;\n                }\n            }\n            piVar3 = *(piVar3 + (*(in_RAX + 0x52) - 8));\n        } while( true );\n    }\n    return 0x599480;\n}\n",
        "token_count": 589
    },
    "004101c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004101c0(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong *puVar6;\n    int64_t iVar7;\n    ulong *arg4;\n    int64_t iVar8;\n    ulong *arg1_00;\n    uint8_t uVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x004105bb:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x4105cf;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    puVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar8 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *puVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar7 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar7;\n        *(*0x20 + -0x38) = iVar7 + 8;\n        *(*0x20 + -0x30) = iVar7 + 0x48;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar7 = (iVar8 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar7;\n            *(*0x20 + -0x18) = iVar7 + 8;\n            *(*0x20 + -0x10) = iVar7 + 0x48;\n        }\n        *(*0x20 + -0x68) = arg1;\n        *(*0x20 + -0x81) = uVar4;\n        *(*0x20 + -0x80) = iVar8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        arg1 = uVar4;\n        for (; puVar6 != NULL; puVar6 = *(puVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = puVar6;\n            arg1_00 = puVar6 + 9;\n            arg4 = puVar6;\n            for (iVar7 = 0; arg4 = arg4 + 1,  iVar7 < 8; iVar7 = iVar7 + 1) {\n                uVar9 = *(puVar6 + iVar7);\n                if (1 < uVar9) {\n                    if (4 < uVar9) {\n                        *(*0x20 + -0x78) = iVar7;\n                        *(*0x20 + -0x82) = uVar9;\n                        *(*0x20 + -0x58) = arg1_00;\n                        *(*0x20 + -0x60) = arg4;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x4103e2;\n                            uVar4 = (*pcVar2)();\n                            arg1 = *(*0x20 + -0x81);\n                            bVar10 = (uVar4 >> (arg1 & 0x3f) & 1) != 0;\n                            in_RAX = *(*0x20 + 8);\n                            arg2 = *(*0x20 + -0x68);\n                            iVar7 = *(*0x20 + -0x78);\n                            arg4 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            uVar9 = *(*0x20 + -0x82);\n                            puVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar10 = false;\n                        }\n                        *(puVar6 + iVar7) = bVar10 + 2;\n                        if (bVar10 < 2) {\n                            iVar8 = bVar10 * 0x20;\n                            *(*0x20 + -0x70) = iVar8;\n                            if (*(*0x20 + iVar8 + -0x40) == 8) {\n                                uVar3 = *(*0x20 + iVar8 + -0x48);\n                                *(*0x20 + -0xa8) = 0x410466;\n                                iVar7 = fcn.0040cf20(uVar3);\n                                iVar8 = *(*0x20 + -0x70);\n                                *(*0x20 + iVar8 + -0x48) = iVar7;\n                                *(*0x20 + iVar8 + -0x40) = 0;\n                                *(*0x20 + iVar8 + -0x38) = iVar7 + 8;\n                                *(*0x20 + iVar8 + -0x30) = iVar7 + 0x48;\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x81);\n                                arg2 = *(*0x20 + -0x68);\n                                arg4 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x58);\n                                uVar9 = *(*0x20 + -0x82);\n                                iVar8 = *(*0x20 + -0x70);\n                            }\n                            *(*(*0x20 + iVar8 + -0x48) + (*(*0x20 + iVar8 + -0x40) & 7)) = uVar9;\n                            if ((*(*(in_RAX + 0x30) + 8) == 0) || (*0x5985b0 == '\\0')) {\n                                **(*0x20 + iVar8 + -0x38) = *arg4;\n                            }\n                            else {\n                                uVar3 = *arg4;\n                                if (*0x5985b0 == 0) {\n                                    **(*0x20 + iVar8 + -0x38) = uVar3;\n                                }\n                                else {\n                                    *(*0x20 + -0xa8) = 0x41051c;\n                                    fcn.0045e100(arg1, arg2, uVar3, arg4);\n                                }\n                            }\n                            *(*0x20 + -0xa8) = 0x410545;\n                            fcn.004112e0(arg1_00);\n                            iVar8 = *(*0x20 + -0x70);\n                            *(*0x20 + iVar8 + -0x40) = *(*0x20 + iVar8 + -0x40) + 1;\n                            *(*0x20 + iVar8 + -0x38) = *(*0x20 + iVar8 + -0x38) + 8;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar8 + -0x30) = *(*0x20 + iVar8 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            arg2 = *(*0x20 + -0x68);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            puVar6 = *(*0x20 + -0x50);\n                            iVar7 = *(*0x20 + -0x78);\n                            uVar4 = *(*0x20 + -0x81);\n                            arg4 = *(*0x20 + -0x60);\n                            iVar8 = *(*0x20 + -0x80);\n                            arg1_00 = *(*0x20 + -0x58);\n                            goto code_r0x00410367;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x4105a9;\n                        fcn.0045e420(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x4105ba;\n                    in_RAX = fcn.00433580();\n                    goto code_r0x004105bb;\n                }\n                *(puVar6 + iVar7) = '\\x04';\ncode_r0x00410367:\n                arg1_00 = arg1_00 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar8 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x410348;\n            fcn.004115e0(uVar1 * arg2 + iVar8 + 8);\n            in_RAX = *(*0x20 + 8);\n            arg2 = *(*0x20 + -0x68);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar8 = *(*0x20 + -0x80);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xa8) = 0x4102d9;\n        fcn.0040f060(iVar8, in_RAX, uVar4);\n    }\n    return;\n}\n",
        "token_count": 2478
    },
    "00410600": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00410600(int32_t *arg1)\n\n{\n    int64_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int32_t **ppiVar7;\n    uint64_t uVar8;\n    int64_t *unaff_RBX;\n    int32_t *unaff_RDI;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n        return 0x599480;\n    }\n    if ((*(unaff_RBX + 1) & 4) != 0) {\n        fcn.00433680();\n    }\n    if (*(unaff_RBX + 9) != '\\0') {\ncode_r0x004106ad:\n        uVar8 = (***(in_RAX + 0x48))();\n        uVar6 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n        iVar1 = unaff_RBX[3];\n        iVar5 = (uVar6 & uVar8) * *(in_RAX + 0x52) + unaff_RBX[2];\n        if (iVar1 != 0) {\n            if ((*(unaff_RBX + 1) & 8) == 0) {\n                uVar6 = uVar6 >> 1;\n            }\n            iVar9 = *(in_RAX + 0x52) * (uVar6 & uVar8);\n            if (2 < *(iVar1 + iVar9) - 2U) {\n                iVar5 = iVar1 + iVar9;\n            }\n        }\n        uVar4 = uVar8 >> 0x38;\n        uVar6 = uVar4;\n        if (uVar8 >> 0x38 < 5) {\n            uVar4 = (uVar8 >> 0x38) + 5;\n            uVar6 = uVar4;\n        }\n        do {\n            if (iVar5 == 0) {\n                return 0x599480;\n            }\n            ppiVar7 = iVar5 + 8;\n            for (uVar8 = 0; uVar8 < 8; uVar8 = uVar8 + 1) {\n                if ((ppiVar7[1] == unaff_RDI) && (*(uVar8 + iVar5) == uVar4)) {\n                    if ((arg1 == *ppiVar7) || (cVar3 = fcn.004025e0(unaff_RDI, ppiVar7),  cVar3 != '\\0')) {\n                        return uVar8 * *(in_RAX + 0x51) + iVar5 + 0x88;\n                    }\n                    uVar4 = uVar6 & 0xff;\n                }\n                ppiVar7 = ppiVar7 + 2;\n            }\n            iVar5 = *(*(in_RAX + 0x52) + iVar5 + -8);\n        } while( true );\n    }\n    iVar1 = unaff_RBX[2];\n    if (unaff_RDI < 0x20) {\n        ppiVar7 = iVar1 + 8;\n        uVar6 = 0;\n        do {\n            if (7 < uVar6) {\n                return 0x599480;\n            }\n            if ((ppiVar7[1] == unaff_RDI) && (1 < *(uVar6 + iVar1))) {\n                if ((arg1 == *ppiVar7) || (cVar3 = fcn.004025e0(unaff_RDI, ppiVar7),  cVar3 != '\\0')) {\n                    return iVar1 + 0x88 + uVar6 * *(in_RAX + 0x51);\n                }\n            }\n            else if (*(uVar6 + iVar1) == '\\0') {\n                return 0x599480;\n            }\n            uVar6 = uVar6 + 1;\n            ppiVar7 = ppiVar7 + 2;\n        } while( true );\n    }\n    ppiVar7 = iVar1 + 8;\n    uVar6 = 8;\n    for (uVar8 = 0; uVar8 < 8; uVar8 = uVar8 + 1) {\n        if ((ppiVar7[1] == unaff_RDI) && (1 < *(uVar8 + iVar1))) {\n            piVar2 = *ppiVar7;\n            if (arg1 == piVar2) {\n                return uVar8 * *(in_RAX + 0x51) + 0x88 + iVar1;\n            }\n            if (((*piVar2 == *arg1) && (*(piVar2 + -1 + unaff_RDI) == *(arg1 + -1 + unaff_RDI))) &&\n               (bVar10 = uVar6 != 8,  uVar6 = uVar8,  bVar10)) goto code_r0x004106ad;\n        }\n        else if (*(uVar8 + iVar1) == '\\0') break;\n        ppiVar7 = ppiVar7 + 2;\n    }\n    if ((uVar6 != 8) && (cVar3 = fcn.004025e0(unaff_RDI, uVar8),  cVar3 != '\\0')) {\n        return iVar1 + 0x88 + uVar6 * *(in_RAX + 0x51);\n    }\n    return 0x599480;\n}\n",
        "token_count": 1287
    },
    "00410ec0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00410ec0(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    char *pcVar7;\n    int64_t iVar8;\n    ulong *arg4;\n    int64_t iVar9;\n    char *arg1_00;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar6 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0041129b:\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x4112af;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    }\n    puVar6 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar7 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar5 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar5 = *(unaff_RBX + 9) - 1;\n    }\n    iVar9 = 1 << (uVar5 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar7 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x88;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar9 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x88;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x81) = uVar5;\n        *(*0x20 + -0x80) = iVar9;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        arg1 = uVar5;\n        for (; pcVar7 != NULL; pcVar7 = *(pcVar7 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar7;\n            arg4 = pcVar7 + 8;\n            arg1_00 = pcVar7 + 0x88;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar7[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x78) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_00;\n                        *(*0x20 + -0x60) = arg4;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x4110e2;\n                            uVar5 = (*pcVar2)();\n                            arg1 = *(*0x20 + -0x81);\n                            bVar11 = (uVar5 >> (arg1 & 0x3f) & 1) != 0;\n                            arg2 = *(*0x20 + -0x70);\n                            iVar8 = *(*0x20 + -0x78);\n                            arg4 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar7 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar7[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar9 = bVar11 * 0x20;\n                            *(*0x20 + -0x68) = iVar9;\n                            if (*(*0x20 + iVar9 + -0x40) == 8) {\n                                uVar3 = *(*0x20 + iVar9 + -0x48);\n                                *(*0x20 + -0xa8) = 0x411166;\n                                iVar8 = fcn.0040cf20(uVar3);\n                                iVar9 = *(*0x20 + -0x68);\n                                *(*0x20 + iVar9 + -0x48) = iVar8;\n                                *(*0x20 + iVar9 + -0x40) = 0;\n                                *(*0x20 + iVar9 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar9 + -0x30) = iVar8 + 0x88;\n                                arg1 = *(*0x20 + -0x81);\n                                arg2 = *(*0x20 + -0x70);\n                                arg4 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                                iVar9 = *(*0x20 + -0x68);\n                            }\n                            *(*(*0x20 + iVar9 + -0x48) + (*(*0x20 + iVar9 + -0x40) & 7)) = uVar10;\n                            puVar4 = *(*0x20 + iVar9 + -0x38);\n                            uVar3 = *arg4;\n                            puVar4[1] = arg4[1];\n                            if (*0x5985b0 == 0) {\n                                *puVar4 = uVar3;\n                            }\n                            else {\n                                *(*0x20 + -0xa8) = 0x41120d;\n                                fcn.0045e100(arg1, arg2, uVar3, arg4);\n                            }\n                            *(*0x20 + -0xa8) = 0x411225;\n                            fcn.004112e0(arg1_00);\n                            iVar9 = *(*0x20 + -0x68);\n                            *(*0x20 + iVar9 + -0x40) = *(*0x20 + iVar9 + -0x40) + 1;\n                            *(*0x20 + iVar9 + -0x38) = *(*0x20 + iVar9 + -0x38) + 0x10;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar9 + -0x30) = *(*0x20 + iVar9 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            arg2 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar7 = *(*0x20 + -0x50);\n                            iVar8 = *(*0x20 + -0x78);\n                            uVar5 = *(*0x20 + -0x81);\n                            arg4 = *(*0x20 + -0x60);\n                            iVar9 = *(*0x20 + -0x80);\n                            arg1_00 = *(*0x20 + -0x58);\n                            goto code_r0x00411073;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x411289;\n                        fcn.0045e420(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x41129a;\n                    in_RAX = fcn.00433580();\n                    goto code_r0x0041129b;\n                }\n                pcVar7[iVar8] = '\\x04';\ncode_r0x00411073:\n                arg4 = arg4 + 2;\n                arg1_00 = arg1_00 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar9 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x411054;\n            fcn.004115e0(uVar1 * arg2 + iVar9 + 8);\n            in_RAX = *(*0x20 + 8);\n            arg2 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar9 = *(*0x20 + -0x80);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xa8) = 0x410fdf;\n        fcn.0040f060(iVar9, in_RAX, uVar5);\n    }\n    return;\n}\n",
        "token_count": 2418
    },
    "00417120": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00417679)\n// WARNING: Removing unreachable block (ram,0x00417165)\n// WARNING: Removing unreachable block (ram,0x00417183)\n// WARNING: Removing unreachable block (ram,0x004176a5)\n\nvoid fcn.00417120(ulong param_1, ulong param_2, int64_t param_3, int64_t param_4)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x148 && *0x20 + -0x148 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x1c8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x598384 = 2;\n            *0x5985b4 = 1;\n            *0x5985b0 = *0x5985b0 & 0xffffff00 | 1;\n            *0x545bb8 = *0x598cf0;\n            *(*0x20 + -0x1d0) = 0x4171a5;\n            fcn.0045fdc0();\n            uVar14 = 0;\n            uVar15 = 0;\n            uVar16 = 0;\n            uVar17 = 0;\n            iVar6 = **(in_GS_OFFSET + *0x598520);\n            iVar9 = *(iVar6 + 0x30);\n            uVar7 = *(*0x20 + -0x1c8);\n            *(*0x20 + -0x180) = uVar7;\n            piVar1 = iVar9 + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar6 = *(iVar6 + 0x30);\n            *(iVar6 + 0xd0) = 5;\n            *(*0x20 + -0x10) = iVar6 + 200;\n            if (*0x5985b0 == 0) {\n                *(iVar6 + 200) = 0x4a82e6;\n            }\n            else {\n                *(*0x20 + -0x1d0) = 0x417219;\n                fcn.0045e0e0(uVar7, iVar6, param_3, param_4);\n            }\n            *(*0x20 + -0x38) = iVar6;\n            *(iVar6 + 0xf9) = 2;\n            iVar6 = *(iVar6 + 0x90);\n            *(*0x20 + -0x28) = iVar6;\n            *(iVar6 + 0xb0) = 6;\n            *(*0x20 + -0x1d0) = 0x417251;\n            fcn.00437a40(4);\n            *(*0x20 + -0x100) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n            *(*0x20 + -0x100) = 0x417ec0;\n            *(*0x20 + -0xf8) = *(*0x20 + -0x180);\n            *(*0x20 + -0x1c8) = *0x20 + -0x100;\n            *(*0x20 + -0x1d0) = 0x417287;\n            fcn.0045bc80();\n            *(*0x20 + -0x1c8) = 0x4b2908;\n            *(*0x20 + -0x1d0) = 0x4172a9;\n            fcn.0045bc80();\n            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n            iVar6 = *(*0x20 + -0x38);\n            *(iVar6 + 0xf9) = 0;\n            *(*0x20 + -0x1d0) = 0x4172e5;\n            fcn.00437a40(2);\n            if (*0x54a530 != '\\0') {\n                *(*0x20 + -0x1d0) = 0x417307;\n                fcn.0044f960(0);\n            }\n            iVar9 = *(*0x20 + -0x38);\n            *(iVar9 + 0xd0) = 0;\n            if (*0x5985b0 == 0) {\n                *(iVar9 + 200) = 0;\n            }\n            else {\n                iVar6 = 0;\n                *(*0x20 + -0x1d0) = 0x41733f;\n                fcn.0045e0a0(iVar9, 0, param_3, param_4);\n            }\n            if (*0x598384 == 0) {\n                *0x59be90 = *0x598d98;\n                *(*0x20 + -0x1c8) = 0x4b28e8;\n                *(*0x20 + -0x1d0) = 0x41736a;\n                fcn.0045bc80();\n                *(*0x20 + -0x1d0) = 0x417385;\n                fcn.0045fdc0();\n                *(*0x20 + -0x188) = *(*0x20 + -0x1c8);\n                *(*0x20 + -0x1d0) = 0x4173a5;\n                fcn.0045fe60(iVar9, iVar6);\n                unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                *(*0x20 + -0x170) = *(*0x20 + -0x1c8);\n                *(*0x20 + -0x108) = *(*0x20 + -0x1c0);\n                *0x545b98 = *(*0x20 + -0x188);\n                *0x545ba0 = *0x545ba0 + (*0x545b98 - *0x545ba8);\n                *(*0x20 + -0x1d0) = 0x417406;\n                fcn.00409140(*(*0x20 + -0x1c0), *0x545ba8);\n                iVar6 = *(*0x20 + -0x170);\n                iVar9 = *(*0x20 + -0x108);\n                iVar4 = *(*0x20 + -0x188);\n                *0x59ae68 = iVar6 * 1000000000 + iVar9;\n                *0x59be88 = iVar4;\n                *((*0x59be78 & 0xff) * 8 + 0x59ae78) = *0x545ba0;\n                *((*0x59be78 & 0xff) * 8 + 0x59b678) = iVar6 * 1000000000 + iVar9;\n                *0x59ae70 = *0x59ae70 + *0x545ba0;\n                *0x545bc8 = *0x545bc8 + *0x598d48;\n                *0x545bd0 = *0x545bd0 + *0x598d58 + *0x598d50;\n                *0x545bd8 = *0x545bd8 + *0x598d60;\n                iVar6 = *0x545b74 * (*0x545b88 - *0x545b80);\n                *(*0x20 + -0x178) = iVar6;\n                param_4 = *0x545b74 * (*0x545b98 - *0x545b90);\n                *(*0x20 + -0x158) = param_4;\n                *0x545be0 = *0x545be0 + iVar6 + param_4;\n                *0x545be8 = *0x545be8 + iVar6 + *0x598d48 + *0x598d50 + *0x598d58 + *0x598d60 + param_4;\n                *0x545bf0 = *0x545bf0 + *0x598650;\n                *0x545bf8 = *0x545bf8 + *0x598658;\n                *0x545c00 = *0x545c00 + *0x598658 + *0x598650;\n                *0x545c18 = *0x598388 * (iVar4 - *0x546128) + *0x546130;\n                *0x545c08 = *0x546650 + *0x545c08;\n                *0x545c10 = *0x545c18 - (*0x545c08 + *0x545be8 + *0x545c00);\n                *0x59be80 = (*0x545be8 - *0x545bd8) / *0x545c18;\n                *0x598650 = 0;\n                *0x598658 = 0;\n                *0x546650 = 0;\n                *0x545774 = 0;\n                if (*0x545b38 != '\\0') {\n                    *0x59be7c = *0x59be7c + 1;\n                }\n                *(*0x20 + -0x1d0) = 0x417612;\n                param_3 = *0x598d60;\n                fcn.0040a520();\n                *0x59be78 = *0x59be78 + 1;\n                *(*0x20 + -0x1d0) = 0x417625;\n                fcn.0043c020();\n                *(*0x20 + -0x1d0) = 0x417633;\n                fcn.0040a740();\n                *(*0x20 + -0x1d0) = 0x417645;\n                fcn.00419220();\n                *0x59838c = ((*0x59838c >> 1) + (((*0x59838c >> 1) + 1) / 0x6000000) * -0x6000000 + 1) * 2;\n                LOCK();\n                uVar5 = *0x54577c & 0x80000000;\n                if (uVar5 == 0) {\n                    *0x54577c = *0x54577c + 1;\n                    LOCK();\n                }\n                if (uVar5 == 0) {\n                    *(*0x20 + -0x19c) = *0x56a738;\n                    *(*0x20 + -0x19d) = uVar5 == 0;\n                    *(*0x20 + -0x1c8) = 0x4b2910;\n                    *(*0x20 + -0x1d0) = 0x4176e5;\n                    fcn.0045bc80();\n                    *(*0x20 + -0x1d0) = 0x4176fc;\n                    fcn.0042ab80();\n                    *(*0x20 + -0x1d0) = 0x417705;\n                    fcn.00423480();\n                    *(*0x20 + -0x1c8) = 0x4b28d0;\n                    *(*0x20 + -0x1d0) = 0x417715;\n                    fcn.0045bc80();\n                    *(*0x20 + -0x1c8) = 0x4b2920;\n                    *(*0x20 + -0x1d0) = 0x417737;\n                    fcn.0045bc80();\n                    uVar14 = 0;\n                    uVar15 = 0;\n                    uVar16 = 0;\n                    uVar17 = 0;\n                    unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                    *(*0x20 + -0x1d0) = 0x41775e;\n                    fcn.00420d20(*(*0x20 + -0x19d));\n                    if (*0x59881c < 1) {\ncode_r0x00417d59:\n                        *(*0x20 + -0x1d0) = 0x417d65;\n                        fcn.0040a520();\n                        *(*0x20 + -0x30) = *0x5457c0;\n                        uVar7 = CONCAT44(*0x5457cc, *0x5457c8);\n                        *(*0x20 + -0x140) = uVar7;\n                        *0x5457c8 = uVar14;\n                        *0x5457cc = uVar15;\n                        *0x5457d0 = uVar16;\n                        *0x5457d4 = uVar17;\n                        if (*0x5985b0 == 0) {\n                            *0x5457c0 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x1d0) = 0x417db0;\n                            fcn.0045e0c0(*0x5457c0, uVar7, param_3, param_4);\n                        }\n                        *(*0x20 + -0x1d0) = 0x417dbe;\n                        fcn.0040a740();\n                        iVar6 = *(*0x20 + -0x30);\n                        iVar9 = 0;\n                        while (iVar9 < *(*0x20 + -0x140)) {\n                            *(*0x20 + -0x120) = iVar9;\n                            *(*0x20 + -0x20) = iVar6;\n                            *(*0x20 + -0x1d0) = 0x417de5;\n                            fcn.00403540();\n                            iVar6 = *(*0x20 + -0x20) + 0x10;\n                            iVar9 = *(*0x20 + -0x120) + 1;\n                        }\n                        *(*0x20 + -0x1d0) = 0x417e1a;\n                        fcn.00443ee0(0);\n                        *(*0x20 + -0x1d0) = 0x417e2b;\n                        fcn.00443ee0(0);\n                        iVar3 = *(*(*0x20 + -0x38) + 0xd8);\n                        *(*(*0x20 + -0x38) + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x110) = *0x4c9f68 * *0x59be80;\n                    *(*0x20 + -0xf0) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                    *(*0x20 + -0xe8) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                    *(*0x20 + -0x1d0) = 0x41779b;\n                    fcn.00434ec0();\n                    uVar10 = (*0x545b80 - *0x5984e8) / 1000000;\n                    uVar12 = 0x17;\n                    while ((cVar2 = uVar10,  9 < uVar10 || (0x13 < uVar12))) {\n                        uVar10 = uVar10 / 10;\n                        if (0x17 < uVar12) goto code_r0x00417e74;\n                        *(*0x20 + (uVar12 - 0xf0)) = cVar2 + uVar10 * -10 + '0';\n                        bVar13 = uVar12 == 0x15;\n                        uVar12 = uVar12 - 1;\n                        if (bVar13) {\n                            *(*0x20 + -0xdc) = 0x2e;\n                            uVar12 = 0x13;\n                        }\n                    }\n                    if (uVar12 < 0x18) {\n                        *(*0x20 + (uVar12 - 0xf0)) = cVar2 + '0';\n                        *(*0x20 + -0x118) = *0x59be78;\n                        *(*0x20 + -0x1d0) = 0x41786f;\n                        uVar7 = fcn.00449920(-(uVar12 - 0x18));\n                        *(*0x20 + -0x18) = uVar7;\n                        *(*0x20 + -0x120) = *0x20 + ((uVar12 & uVar12 - 0x18 >> 0x3f) - 0xf0);\n                        *(*0x20 + -0x1d0) = 0x417885;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x1d0) = 0x417896;\n                        fcn.004357c0();\n                        *(*0x20 + -0x1d0) = 0x4178a5;\n                        fcn.004354c0();\n                        *(*0x20 + -0x1d0) = 0x4178b6;\n                        fcn.004357c0();\n                        *(*0x20 + -0x1d0) = 0x4178cb;\n                        fcn.004357c0();\n                        *(*0x20 + -0x1d0) = 0x4178dc;\n                        fcn.004357c0();\n                        *(*0x20 + -0x1d0) = 0x4178ef;\n                        fcn.004355c0(*(*0x20 + -0x110));\n                        *(*0x20 + -0x1d0) = 0x417905;\n                        fcn.004357c0();\n                        *(*0x20 + -0x1d0) = 0x41790a;\n                        fcn.00434f40();\n                        *(*0x20 + -0xd8) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0xd0) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0xd8) = *0x545b88;\n                        *(*0x20 + -0xd0) = *0x545b90;\n                        *(*0x20 + -200) = *0x545b98;\n                        iVar9 = 0;\n                        iVar6 = *0x545b80;\n                        while (iVar9 < 3) {\n                            *(*0x20 + -0x148) = iVar9;\n                            *(*0x20 + -0x168) = *(*0x20 + iVar9 * 8 + -0xd8);\n                            if (iVar9 != 0) {\n                                *(*0x20 + -0x108) = iVar6;\n                                *(*0x20 + -0x1d0) = 0x4179f6;\n                                fcn.00434ec0();\n                                *(*0x20 + -0x1d0) = 0x417a07;\n                                fcn.004357c0();\n                                *(*0x20 + -0x1d0) = 0x417a0c;\n                                fcn.00434f40();\n                            }\n                            *(*0x20 + -0x1d0) = 0x41796c;\n                            uVar7 = fcn.00418f40(0x18);\n                            *(*0x20 + -0x1d0) = 0x41797f;\n                            uVar8 = fcn.00449920(0x18);\n                            *(*0x20 + -0x18) = uVar8;\n                            *(*0x20 + -0x120) = uVar7;\n                            *(*0x20 + -0x1d0) = 0x417994;\n                            fcn.00434ec0();\n                            *(*0x20 + -0x1d0) = 0x4179a9;\n                            fcn.004357c0();\n                            *(*0x20 + -0x1d0) = 0x4179ae;\n                            fcn.00434f40();\n                            iVar6 = *(*0x20 + -0x168);\n                            iVar9 = *(*0x20 + -0x148) + 1;\n                        }\n                        *(*0x20 + -0x1d0) = 0x417a25;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x1d0) = 0x417a36;\n                        fcn.004357c0();\n                        *(*0x20 + -0x1d0) = 0x417a3b;\n                        fcn.00434f40();\n                        *(*0x20 + -0x60) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0x58) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0x48) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0x60) = *(*0x20 + -0x178);\n                        *(*0x20 + -0x58) = *0x598d48;\n                        *(*0x20 + -0x50) = *0x598d58 + *0x598d50;\n                        *(*0x20 + -0x48) = *0x598d60;\n                        *(*0x20 + -0x40) = *(*0x20 + -0x158);\n                        iVar6 = 0;\n                        while (iVar6 < 5) {\n                            *(*0x20 + -0x150) = iVar6;\n                            *(*0x20 + -0x160) = *(*0x20 + iVar6 * 8 + -0x60);\n                            if ((iVar6 == 2) || (iVar6 == 3)) {\n                                *(*0x20 + -0x1d0) = 0x417b3b;\n                                fcn.00434ec0();\n                                *(*0x20 + -0x1d0) = 0x417b4c;\n                                fcn.004357c0();\n                                *(*0x20 + -0x1d0) = 0x417b51;\n                                fcn.00434f40();\n                            }\n                            else if (iVar6 != 0) {\n                                *(*0x20 + -0x1d0) = 0x417b6e;\n                                fcn.00434ec0();\n                                *(*0x20 + -0x1d0) = 0x417b7f;\n                                fcn.004357c0();\n                                *(*0x20 + -0x1d0) = 0x417b85;\n                                fcn.00434f40();\n                            }\n                            *(*0x20 + -0x1d0) = 0x417ac5;\n                            uVar7 = fcn.00418f40(0x18);\n                            *(*0x20 + -0x1d0) = 0x417ad8;\n                            uVar8 = fcn.00449920(0x18);\n                            *(*0x20 + -0x18) = uVar8;\n                            *(*0x20 + -0x120) = uVar7;\n                            *(*0x20 + -0x1d0) = 0x417aed;\n                            fcn.00434ec0();\n                            *(*0x20 + -0x1d0) = 0x417b05;\n                            fcn.004357c0();\n                            *(*0x20 + -0x1d0) = 0x417b0a;\n                            fcn.00434f40();\n                            iVar6 = *(*0x20 + -0x150) + 1;\n                        }\n                        *(*0x20 + -400) = *0x598d08;\n                        *(*0x20 + -0x198) = *0x598d18;\n                        *(*0x20 + -0x118) = *0x545bb0;\n                        *(*0x20 + -0x128) = *0x545bb8;\n                        *(*0x20 + -0x130) = *0x545bc0;\n                        *(*0x20 + -0x138) = *0x598ce8;\n                        param_3 = *0x545b78;\n                        *(*0x20 + -0x108) = param_3;\n                        *(*0x20 + -0x1d0) = 0x417bfc;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x1d0) = 0x417c0d;\n                        fcn.004357c0();\n                        *(*0x20 + -0x1d0) = 0x417c1e;\n                        fcn.004354c0();\n                        *(*0x20 + -0x1d0) = 0x417c2f;\n                        fcn.004357c0();\n                        *(*0x20 + -0x1d0) = 0x417c45;\n                        fcn.004354c0();\n                        *(*0x20 + -0x1d0) = 0x417c56;\n                        fcn.004357c0();\n                        *(*0x20 + -0x1d0) = 0x417c67;\n                        fcn.004354c0();\n                        *(*0x20 + -0x1d0) = 0x417c78;\n                        fcn.004357c0();\n                        *(*0x20 + -0x1d0) = 0x417c89;\n                        fcn.004354c0();\n                        *(*0x20 + -0x1d0) = 0x417c9a;\n                        fcn.004357c0();\n                        *(*0x20 + -0x1d0) = 0x417ca8;\n                        fcn.004354c0();\n                        *(*0x20 + -0x1d0) = 0x417cb9;\n                        fcn.004357c0();\n                        *(*0x20 + -0x1d0) = 0x417cc7;\n                        fcn.004354c0();\n                        *(*0x20 + -0x1d0) = 0x417cd8;\n                        fcn.004357c0();\n                        *(*0x20 + -0x1d0) = 0x417ce5;\n                        fcn.004355c0();\n                        *(*0x20 + -0x1d0) = 0x417cf6;\n                        fcn.004357c0();\n                        *(*0x20 + -0x1d0) = 0x417cfb;\n                        fcn.00434f40();\n                        if (*0x545b38 != '\\0') {\n                            *(*0x20 + -0x1d0) = 0x417d09;\n                            fcn.00434ec0();\n                            *(*0x20 + -0x1d0) = 0x417d1a;\n                            fcn.004357c0();\n                            *(*0x20 + -0x1d0) = 0x417d1f;\n                            fcn.00434f40();\n                        }\n                        *(*0x20 + -0x1d0) = 0x417d25;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x1d0) = 0x417d2a;\n                        fcn.00435120();\n                        *(*0x20 + -0x1d0) = 0x417d2f;\n                        fcn.00434f40();\n                        cVar2 = *(*(unaff_R14 + 0x30) + 0xe7);\n                        *(*(unaff_R14 + 0x30) + 0xe7) = cVar2 + -1;\n                        if (cVar2 == '\\x01') {\n                            *(*0x20 + -0x1d0) = 0x417d57;\n                            fcn.0040a740();\n                        }\n                        goto code_r0x00417d59;\n                    }\n                    *(*0x20 + -0x1d0) = 0x417e74;\n                    fcn.0045e420(0x18);\ncode_r0x00417e74:\n                    *(*0x20 + -0x1d0) = 0x417e85;\n                    fcn.0045e420(0x18);\n                }\n                *(*0x20 + -0x1d0) = 0x417e96;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x1d0) = 0x417ea7;\n            fcn.00433580();\n        }\n        *(puVar11 + -8) = 0x417ead;\n        fcn.0045bdc0();\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 6622
    },
    "00419360": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419360(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t arg1;\n    int64_t unaff_RBX;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \ncode_r0x00419360:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar5 = *(in_RAX + 0x40);\n        if (unaff_RBX < iVar5) {\n            return;\n        }\n        *(in_RAX + 0x40) = unaff_RBX;\n        arg1 = *(in_RAX + 0x28);\n        iVar5 = (unaff_RBX - iVar5) * *(in_RAX + 0x4c);\n        if (arg1 != 0) {\n            LOCK();\n            *(in_RAX + 0x28) = *(in_RAX + 0x28) - arg1;\n        }\n        iVar7 = *(in_RAX + 0x38);\n        if (iVar7 != 0) {\n            LOCK();\n            *(in_RAX + 0x38) = *(in_RAX + 0x38) - iVar7;\n        }\n        if (*(in_RAX + 0x50) != '\\0') {\ncode_r0x00419426:\n            if (*(in_RAX + 0x20) != '\\0') {\n                arg1 = arg1 + iVar5 * *0x4c9f08;\n            }\n            *(*0x20 + -0x68) = 0x419456;\n            fcn.00419560(arg1);\n            return;\n        }\n        *(*0x20 + -0x48) = iVar5;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x20) = unaff_RBX;\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        *(*0x20 + -0x10) = *0x5455b0;\n        *(*0x20 + -0x28) = *0x5455b8;\n        iVar9 = *(unaff_R14 + 0x30);\n        *(*0x20 + -0x18) = iVar9;\n        iVar4 = 0;\n        iVar8 = *0x5455b8;\n        do {\n            if (iVar8 <= iVar4) {\n                iVar2 = *(iVar9 + 0xd8);\n                *(iVar9 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                goto code_r0x00419426;\n            }\n            *(*0x20 + -0x30) = iVar4;\n            *(*0x20 + -0x40) = iVar7;\n            *(*0x20 + -0x38) = arg1;\n            *(*0x20 + -0x68) = 0x4194af;\n            uVar3 = fcn.00419740();\n            if (uVar3 < 2) {\n                if (uVar3 != 0) goto code_r0x004194df;\n                arg1 = *(*0x20 + -0x38);\n                iVar7 = *(*0x20 + -0x40);\n            }\n            else if ((uVar3 == 2) || (uVar3 == 3)) {\n                arg1 = *(*0x20 + -0x38) + unaff_RBX;\n                iVar7 = *(*0x20 + -0x40);\n            }\n            else {\n                if (uVar3 != 4) goto code_r0x00419528;\ncode_r0x004194df:\n                iVar7 = *(*0x20 + -0x40) + unaff_RBX;\n                arg1 = *(*0x20 + -0x38);\n            }\n            iVar4 = *(*0x20 + -0x30) + 1;\n            in_RAX = *(*0x20 + 8);\n            iVar5 = *(*0x20 + -0x48);\n            unaff_RBX = *(*0x20 + -0x20);\n            iVar8 = *(*0x20 + -0x28);\n            iVar9 = *(*0x20 + -0x18);\n        } while( true );\n    }\n    goto code_r0x0041953a;\ncode_r0x00419528:\n    unaff_RBX = 0x20;\n    *(*0x20 + -0x68) = 0x419539;\n    in_RAX = fcn.00433580();\ncode_r0x0041953a:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + -8) = 0x419549;\n    fcn.0045bdc0();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    *0x20 = puVar6;\n    goto code_r0x00419360;\n}\n",
        "token_count": 1301
    },
    "004197e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.004197e0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                uVar3 = uVar1 >> 0x3d;\n                if (unaff_BL != uVar1 >> 0x3d) goto code_r0x004198dc;\n                LOCK();\n                bVar6 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar6 * *in_RAX;\n            } while (!bVar6);\n            uVar4 = arg1 & 0xe000000000000000 | uVar1 & 0x1fffffffffffffff;\n            uVar3 = 0;\n            bVar2 = arg1 < uVar4;\n            arg1 = arg1 - uVar4;\n            if (bVar2) {\n                arg1 = 0;\n            }\n            if (arg1 == 0) {\n                return uVar1 ^ !bVar6 * (uVar1 ^ *in_RAX);\n            }\n            if (unaff_BL < 3) {\n                if (unaff_BL == 1) {\n                    LOCK();\n                    *0x598898 = *0x598898 + arg1;\n                    return 0x598898;\n                }\n                if (unaff_BL == 2) {\ncode_r0x00419886:\n                    LOCK();\n                    *0x598888 = *0x598888 + arg1;\n                    return 0x598888;\n                }\n            }\n            else {\n                if (unaff_BL == 3) goto code_r0x00419886;\n                if (unaff_BL == 4) {\n                    LOCK();\n                    LOCK();\n                    *0x546650 = *0x546650 + arg1;\n                    *0x598898 = *0x598898 + arg1;\n                    return 0x546650;\n                }\n            }\n            unaff_BL = 0x33;\n            *(*0x20 + -0x28) = 0x4198dc;\n            fcn.00433580();\ncode_r0x004198dc:\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x10) = uVar3;\n            *(*0x20 + -0x28) = 0x4198ea;\n            fcn.00434ec0();\n            *(*0x20 + -0x28) = 0x4198fb;\n            fcn.004357c0();\n            *(*0x20 + -0x28) = 0x419908;\n            fcn.004354c0();\n            *(*0x20 + -0x28) = 0x419919;\n            fcn.004357c0();\n            *(*0x20 + -0x28) = 0x419925;\n            fcn.004354c0();\n            *(*0x20 + -0x28) = 0x41992a;\n            fcn.00435120();\n            *(*0x20 + -0x28) = 0x41992f;\n            fcn.00434f40();\n            unaff_BL = 0x3e;\n            *(*0x20 + -0x28) = 0x419945;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x419959;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1019
    },
    "00419d80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00419d80(char param_1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    int64_t iStack96;\n    ulong *puStack88;\n    int64_t iStack80;\n    uint64_t uStack72;\n    uint64_t uStack64;\n    int64_t iStack56;\n    int64_t iStack48;\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iStack96 = 0;\n    if ((unaff_EBX < *0x545ae8) || (*0x545aec <= unaff_EBX)) {\n        if ((unaff_EBX < *0x545aec) || (*0x545af0 <= unaff_EBX)) {\n            puVar4 = *0x5983d0;\n            if (unaff_EBX == 0) {\n                while (puVar4 != NULL) {\ncode_r0x0041a05b:\n                    puStack88 = puVar4;\n                    fcn.0041c260(0x598760);\n                    puVar4 = *puStack88;\n                }\n                piVar2 = NULL;\n            }\n            else if (unaff_EBX == 1) {\n                fcn.0045bc80();\n                piVar2 = NULL;\n            }\n            else {\n                if ((unaff_EBX < *0x545af0) || (*0x545af4 <= unaff_EBX)) {\n                    puVar4 = *0x545af4;\n                    if ((*0x545af4 <= unaff_EBX) && (unaff_EBX < *0x545af8)) {\n                        if (unaff_EBX - *0x545af4 < *0x545b08) {\n                            iVar3 = *(*0x545b00 + (unaff_EBX - *0x545af4) * 8);\n                            if (((*(iVar3 + 0x90) == 4) || (*(iVar3 + 0x90) == 3)) && (*(iVar3 + 0xa8) == 0)) {\n                                *(iVar3 + 0xa8) = *0x545ab8;\n                            }\n                            auStack40 = CONCAT88(iVar3, 0x41a1e0);\n                            auStack24 = CONCAT88(in_RAX, &iStack96);\n                            fcn.0045bc80();\n                            piVar2 = 0x598d30;\n                            goto code_r0x00419f66;\n                        }\n                        fcn.0045e420(*0x545b08);\n                    }\n                    fcn.00434ec0();\n                    uStack64 = *0x545af4;\n                    uStack72 = *0x545af8;\n                    fcn.00434ec0();\n                    fcn.004357c0();\n                    fcn.004354c0();\n                    fcn.004357c0();\n                    fcn.004354c0();\n                    fcn.004357c0();\n                    fcn.004354c0();\n                    fcn.004357c0();\n                    fcn.00434f40();\n                    fcn.00433580();\n                    goto code_r0x0041a05b;\n                }\n                fcn.0041a500();\n                piVar2 = NULL;\n            }\n        }\n        else {\n            if (*0x544c30 == NULL) {\n                iVar3 = 0;\n                iStack56 = 0;\n            }\n            else {\n                iStack56 = **0x544c30;\n                iVar3 = (*0x544c30)[1];\n            }\n            iVar1 = 0;\n            while (iVar1 < iVar3) {\n                iStack80 = iVar1;\n                iVar1 = fcn.0041a320(*(*(iStack56 + iVar1 * 8) + 0x218));\n                iStack96 = iStack96 + iVar1;\n                iVar1 = iStack80 + 1;\n            }\n            piVar2 = 0x598d38;\n        }\n    }\n    else {\n        if (*0x544c30 == NULL) {\n            iVar3 = 0;\n            iStack48 = 0;\n        }\n        else {\n            iStack48 = **0x544c30;\n            iVar3 = (*0x544c30)[1];\n        }\n        iVar1 = 0;\n        while (iVar1 < iVar3) {\n            iStack80 = iVar1;\n            iVar1 = fcn.0041a320(*(*(iStack48 + iVar1 * 8) + 0x208));\n            iStack96 = iStack96 + iVar1;\n            iVar1 = iStack80 + 1;\n        }\n        piVar2 = 0x598d38;\n    }\ncode_r0x00419f66:\n    if ((piVar2 != NULL) && (iStack96 != 0)) {\n        LOCK();\n        *piVar2 = *piVar2 + iStack96;\n        if (param_1 != '\\0') {\n            fcn.0041b060();\n        }\n    }\n    return iStack96;\n}\n",
        "token_count": 1195
    },
    "0041b9a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041b9a0(ulong arg1)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    char cVar6;\n    uint64_t in_R8;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    int64_t iVar8;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar5 = *in_RAX;\n    if (uVar5 == 0) {\n        uVar7 = 0;\n        uVar5 = 0;\n    }\n    else {\n        uVar7 = in_R8 & 0xffffffffffffff00 | *(uVar5 + 0x28) == '\\x03';\n        uVar5 = uVar5 & 0xffffffffffffff00 | *(uVar5 + 0x28) == '\\x05';\n    }\n    cVar6 = uVar7;\n    cVar4 = uVar5;\n    if (((*(unaff_RBX + 0x110) == '\\0') && (cVar6 == '\\0')) && (cVar4 == '\\0')) {\n        iVar3 = 0;\n        iVar1 = fcn.00448b80();\n        if (0 < iVar1) {\n            fcn.0041c260(unaff_RBX);\n        }\n        if (0 < iVar3) {\n            fcn.0041c260(unaff_RDI);\n        }\n        if (in_RAX[7] != 0) {\n            iVar8 = unaff_RSI;\n            for (iVar2 = 0; iVar2 < uVar7; iVar2 = iVar2 + 1) {\n                arg1_00 = unaff_RSI + iVar2 * 0x10;\n                iVar1 = *(unaff_RSI + iVar2 * 0x10);\n                uVar5 = in_RAX[7];\n                if (-1 < iVar1) {\n                    uVar5 = in_RAX[8];\n                }\n                uVar5 = uVar5 + iVar1;\n                if (in_RAX[5] < uVar5 || in_RAX[5] == uVar5) {\n                    unaff_RSI = iVar8;\n                    fcn.004208a0(arg1_00);\n                    iVar8 = unaff_RSI;\n                }\n            }\n        }\n        return;\n    }\n    if ((in_RAX[7] != 0) && (in_RAX[7] != in_RAX[5])) {\n        fcn.0041c6e0(0);\n        uVar5 = uVar5 & 0xff;\n        uVar7 = uVar7 & 0xff;\n    }\n    iVar2 = fcn.00448840(arg1, uVar5, uVar7);\n    if (iVar2 != 0) {\n        fcn.0041c6e0(0);\n    }\n    if ((cVar6 == '\\0') && (cVar4 == '\\0')) {\n        *(unaff_RBX + 0x110) = 0;\n    }\n    else {\n        *(unaff_RBX + 0x110) = 1;\n    }\n    return;\n}\n",
        "token_count": 786
    },
    "0041e6e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e70b)\n// WARNING: Removing unreachable block (ram,0x0041e712)\n// WARNING: Removing unreachable block (ram,0x0041e718)\n\nint64_t fcn.0041e6e0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.004070e0();\n    iVar1 = fcn.00449f80();\n    if (iVar1 != iVar1) {\n        return 100;\n    }\n    return iVar1;\n}\n",
        "token_count": 174
    },
    "0041e760": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e794)\n// WARNING: Removing unreachable block (ram,0x0041e79b)\n// WARNING: Removing unreachable block (ram,0x0041e7a2)\n// WARNING: Removing unreachable block (ram,0x0041e7d3)\n\nulong fcn.0041e760(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.004070e0();\n    uVar1 = fcn.0044a060();\n    return uVar1;\n}\n",
        "token_count": 174
    },
    "00421600": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00421600(void)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint64_t *in_RAX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    ulong uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    char unaff_BL;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    ulong *puVar13;\n    uint64_t uVar14;\n    uint8_t *puVar15;\n    int64_t iVar16;\n    uint16_t uVar17;\n    int64_t iVar18;\n    uchar *puVar19;\n    int64_t unaff_R14;\n    uint32_t uVar20;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \ncode_r0x00421600:\n    puVar19 = *0x20 + -0x68;\n    puVar12 = *0x20;\n    if (*(unaff_R14 + 0x10) <= puVar19 && puVar19 != *(unaff_R14 + 0x10)) {\n        puVar12 = *0x20 + -0xe8;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar3 = *(unaff_R14 + 0x30);\n        if (((*(piVar3 + 0x1b) != 0) || (*(piVar3 + 0x18) != 0)) || (*piVar3 == unaff_R14)) {\n            uVar11 = *in_RAX;\n            if (unaff_BL == '\\0') {\n                *in_RAX = 0;\n            }\n            *(*0x20 + -0xc0) = *0x56a738;\n            cVar4 = *(uVar11 + 99);\n            *(*0x20 + -200) = cVar4;\n            if ((cVar4 == '\\x01') && (*(uVar11 + 0x58) == *0x56a738 - 1)) {\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0xa8) = uVar11;\n                *(*0x20 + -0xbc) = *0x56a738 - 1;\n                uVar20 = *0x56a738;\n                if (*0x54a530 != '\\0') {\n                    *(*0x20 + -0xf0) = 0x4216b1;\n                    fcn.00450bc0();\n                    uVar11 = *(*0x20 + -0xa8);\n                    uVar20 = *(*0x20 + -0xc0);\n                }\n                LOCK();\n                *0x56a760 = *0x56a760 + *(uVar11 + 0x20);\n                uVar5 = *(uVar11 + 0x62);\n                *(*0x20 + -199) = uVar5;\n                uVar10 = *(uVar11 + 0x68);\n                *(*0x20 + -0xb0) = uVar10;\n                uVar14 = *(uVar11 + 0x80);\n                *(*0x20 + -0x60) = uVar14;\n                *(*0x20 + -0x48) = uVar11 + 0x80;\n                *(*0x20 + -0x40) = uVar14;\n                do {\n                    uVar6 = uVar20;\n                    puVar13 = *(*0x20 + -0x40);\n                    if (puVar13 == NULL) {\n                        if ((uVar14 != 0) && (*(uVar11 + 0x80) == 0)) {\n                            puVar13 = *(uVar11 + 0x18) + 0x800000000000;\n                            uVar14 = puVar13 >> 0x2a;\n                            if (0x3f < uVar14) {\ncode_r0x004221a5:\n                                uVar7 = 0;\n                                *(*0x20 + -0xf0) = 0x4221b2;\n                                fcn.0045e440(0x40);\n                                goto code_r0x004221b2;\n                            }\n                            puVar19 = 0x56a790;\n                            puVar13 = puVar13 >> 0x16 & 0xfffff;\n                            uVar14 = *(*(uVar14 * 8 + 0x56a790) + puVar13 * 8);\n                            uVar7 = *(uVar11 + 0x18) >> 0xd;\n                            uVar8 = (uVar7 & 0x1ff) >> 3;\n                            if (0x3f < uVar8) {\n                                *(*0x20 + -0xf0) = 0x4221a5;\n                                fcn.0045e440(0x40);\n                                goto code_r0x004221a5;\n                            }\n                            puVar15 = uVar14 + uVar8 + 0x11480;\n                            LOCK();\n                            *puVar15 = *puVar15 & ~(1 << (uVar7 & 7));\n                        }\n                        if ((*0x598848 != 0) || (*0x598804 != 0)) {\n                            *(*0x20 + -0x38) = *(uVar11 + 0x50);\n                            *(*0x20 + -0x30) = 1;\n                            *(*0x20 + -0x28) = 0;\n                            *(*0x20 + -0x20) = *(uVar11 + 0x48);\n                            *(*0x20 + -0x18) = 1;\n                            *(*0x20 + -0x10) = 0;\n                            for (uVar14 = 0; uVar14 <= *(uVar11 + 0x38) && *(uVar11 + 0x38) != uVar14;\n                                uVar14 = uVar14 + 1) {\n                                if (((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) &&\n                                   ((*(*0x20 + -0x10) <= *(uVar11 + 0x30) && *(uVar11 + 0x30) != *(*0x20 + -0x10) ||\n                                    ((**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0)))) {\n                                    iVar16 = *(uVar11 + 0x68) * uVar14 + *(uVar11 + 0x18);\n                                    if (*0x598848 != 0) {\n                                        *(*0x20 + -0x90) = uVar14;\n                                        *(*0x20 + -0xb8) = iVar16;\n                                        *(*0x20 + -0xf0) = 0x4220db;\n                                        fcn.0042ba40();\n                                        uVar14 = *(*0x20 + -0x90);\n                                        uVar11 = *(*0x20 + -0xa8);\n                                        uVar10 = *(*0x20 + -0xb0);\n                                        iVar16 = *(*0x20 + -0xb8);\n                                    }\n                                    if (*0x598804 != 0) {\n                                        for (uVar6 = 0; uVar6 < uVar10; uVar6 = uVar6 + 4) {\n                                            *(iVar16 + uVar6) = 0xdeadbeef;\n                                        }\n                                    }\n                                }\n                                if (*(*0x20 + -0x30) == -0x80) {\n                                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                                    *(*0x20 + -0x30) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                                }\n                                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                if (*(*0x20 + -0x18) == -0x80) {\n                                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                                    *(*0x20 + -0x18) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                                }\n                                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                            }\n                        }\n                        uVar14 = *(uVar11 + 0x30);\n                        if (*(uVar11 + 0x38) < uVar14 || *(uVar11 + 0x38) == uVar14) goto code_r0x00421997;\n                        uVar10 = uVar14 >> 3;\n                        if ((~*(uVar10 + *(uVar11 + 0x48)) & *(uVar10 + *(uVar11 + 0x50))) >> (uVar14 & 7) != 0) {\n                            *(*0x20 + -0x68) = uVar10;\n                            *(*0x20 + -0xf0) = 0x421965;\n                            fcn.004223e0();\n                            uVar10 = *(*0x20 + -0x68);\n                            uVar11 = *(*0x20 + -0xa8);\n                        }\n                        do {\n                            while (uVar10 = uVar10 + 1,  uVar10 < *(uVar11 + 0x38) + 7U >> 3) {\n                                if ((*(uVar10 + *(uVar11 + 0x50)) & ~*(uVar10 + *(uVar11 + 0x48))) != 0) {\n                                    *(*0x20 + -0x98) = uVar10;\n                                    *(*0x20 + -0xf0) = 0x42202a;\n                                    fcn.004223e0();\n                                    uVar10 = *(*0x20 + -0x98);\n                                    uVar11 = *(*0x20 + -0xa8);\n                                }\n                            }\ncode_r0x00421997:\n                            uVar14 = *(uVar11 + 0x38) + 7U >> 3;\n                            *(*0x20 + -0x68) = uVar14;\n                            iVar16 = 0;\n                            for (uVar10 = 0; *(*0x20 + -0x80) = iVar16,  uVar10 < uVar14; uVar10 = uVar10 + 8) {\n                                if (*0x598354 == '\\0') {\n                                    *(*0x20 + -0xa0) = uVar10;\n                                    *(*0x20 + -0xf0) = 0x4219f1;\n                                    iVar18 = fcn.00402100();\n                                    uVar14 = *(*0x20 + -0x68);\n                                    uVar11 = *(*0x20 + -0xa8);\n                                    iVar16 = *(*0x20 + -0x80);\n                                    uVar10 = *(*0x20 + -0xa0);\n                                }\n                                else {\n                                    iVar18 = popcnt(*(*(uVar11 + 0x50) + uVar10));\n                                }\n                                iVar16 = iVar16 + iVar18;\n                            }\n                            uVar17 = *(uVar11 + 0x60);\n                            uVar14 = uVar17;\n                            uVar20 = uVar17 - iVar16;\n                            uVar10 = uVar20;\n                            *(*0x20 + -0xc4) = uVar20;\n                            if (iVar16 <= uVar17) {\n                                *(uVar11 + 0x60) = iVar16;\n                                *(uVar11 + 0x30) = 0;\n                                *(uVar11 + 0x98) = 0;\n                                if (*0x54a530 != '\\0') {\n                                    uVar14 = *(*(unaff_R14 + 0x30) + 0xa0);\n                                    *(uVar14 + 0x11e8) = *(uVar14 + 0x11e8) + *(uVar11 + 0x68) * (uVar20 & 0xffff);\n                                }\n                                uVar17 = uVar14;\n                                *(uVar11 + 0x48) = *(uVar11 + 0x50);\n                                *(*0x20 + -0xf0) = 0x421a9d;\n                                uVar9 = fcn.00426380();\n                                uVar14 = *(*0x20 + -0xa8);\n                                *(uVar14 + 0x50) = uVar9;\n                                *(*0x20 + -0xf0) = 0x421ab0;\n                                fcn.00411620();\n                                iVar16 = *(*0x20 + -0xa8);\n                                uVar5 = *(iVar16 + 99);\n                                uVar10 = uVar14 & 0xffffffffffffff00 | uVar5;\n                                *(*0x20 + -0xc9) = uVar5;\n                                if (uVar5 == 1) {\n                                    uVar20 = *(iVar16 + 0x58);\n                                    uVar11 = uVar20;\n                                    if (uVar20 == *(*0x20 + -0xbc)) {\n                                        uVar2 = *(*0x20 + -0xc0);\n                                        if ((uVar20 != uVar2 + 1) && (uVar20 != uVar2 + 3)) {\n                                            uVar11 = uVar2;\n                                            *(iVar16 + 0x58) = uVar2;\n                                            if (*(iVar16 + 0x65) == '\\0') {\n                                                uVar14 = *(*0x20 + -199);\n                                                uVar5 = *(*0x20 + -199) >> 1;\n                                                if (uVar5 == 0) {\n                                                    if (*(*0x20 + 0x10) != '\\0') {\n                                                        return 0;\n                                                    }\n                                                    if (*(*0x20 + -0xc4) != 0) {\n                                                        if (*0x598808 < 1) {\n                                                            *(*0x20 + -0xf0) = 0x421da7;\n                                                            fcn.00425200();\n                                                        }\n                                                        else {\n                                                            *(iVar16 + 0x70) = 0;\n                                                            *(*0x20 + -0xf0) = 0x421d99;\n                                                            fcn.004149a0();\n                                                        }\n                                                        *(*0x20 + -0xf0) = 0x421db3;\n                                                        iVar16 = fcn.0042cd00();\n                                                        LOCK();\n                                                        *(iVar16 + 0x270) = *(iVar16 + 0x270) + 1;\n                                                        LOCK();\n                                                        piVar3 = iVar16 + 0x268;\n                                                        iVar16 = *piVar3;\n                                                        *piVar3 = *piVar3 + *(*0x20 + -0xb0);\n                                                        *(*0x20 + -0xf0) = 0x421ddb;\n                                                        fcn.0042cde0(iVar16);\n                                                        LOCK();\n                                                        *0x598db8 = *0x598db8 + *(*0x20 + -0xb0);\n                                                        return 1;\n                                                    }\n                                                    if (uVar14 < 0x88) {\n                                                        *(*0x20 + -0xf0) = 0x421e33;\n                                                        fcn.0042c660(uVar14 * 0xc0 + 0x56aa88, (uVar2 >> 1 & 1) * 5);\n                                                        return 0;\n                                                    }\n                                                    *(*0x20 + -0xf0) = 0x421e51;\n                                                    fcn.0045e420(0x88);\ncode_r0x00421e51:\n                                                    *(*0x20 + -0xf0) = 0x421e5d;\n                                                    fcn.0045e420(0x88);\ncode_r0x00421e5d:\n                                                    *(*0x20 + -0xf0) = 0x421e69;\n                                                    fcn.0045e420(0x88);\n                                                }\n                                                else {\n                                                    if (*(*0x20 + -0xc4) == 0) {\n                                                        cVar4 = *(*0x20 + 0x10);\ncode_r0x00421c96:\n                                                        if (cVar4 != '\\0') {\n                                                            return 0;\n                                                        }\n                                                        if (*(*0x20 + -0x80) == 0) {\n                                                            *(*0x20 + -0xf0) = 0x421d46;\n                                                            fcn.00425200();\n                                                            return 1;\n                                                        }\n                                                        if (*(iVar16 + 0x38) != (*(*0x20 + -0x80) & 0xffff)) {\n                                                            if (uVar14 < 0x88) {\n                                                                *(*0x20 + -0xf0) = 0x421d35;\n                                                                fcn.0042c660(uVar14 * 0xc0 + 0x56aa38, \n                                                                             (uVar11 >> 1 & 1) * 5);\n                                                                return 0;\n                                                            }\n                                                            goto code_r0x00421e51;\n                                                        }\n                                                        if (uVar14 < 0x88) {\n                                                            *(*0x20 + -0xf0) = 0x421cf5;\n                                                            fcn.0042c660(uVar14 * 0xc0 + 0x56aa88, (uVar11 >> 1 & 1) * 5\n                                                                        );\n                                                            return 0;\n                                                        }\n                                                        goto code_r0x00421e5d;\n                                                    }\n                                                    *(*0x20 + -0xc5) = uVar5;\n                                                    *(iVar16 + 100) = 1;\n                                                    *(*0x20 + -0xf0) = 0x421c25;\n                                                    iVar16 = fcn.0042cd00();\n                                                    if (*(*0x20 + -0xc5) < 0x44) {\n                                                        piVar3 = iVar16 + *(*0x20 + -0xc5) * 8 + 0x278;\n                                                        *(*0x20 + -0x70) = *(*0x20 + -0xc4);\n                                                        LOCK();\n                                                        iVar16 = *piVar3;\n                                                        *piVar3 = *piVar3 + *(*0x20 + -0xc4);\n                                                        *(*0x20 + -0xf0) = 0x421c65;\n                                                        fcn.0042cde0(piVar3, iVar16);\n                                                        iVar16 = *(*0x20 + -0xa8);\n                                                        LOCK();\n                                                        *0x598db8 = *0x598db8 + *(*0x20 + -0x70) * *(iVar16 + 0x68);\n                                                        cVar4 = *(*0x20 + 0x10);\n                                                        uVar11 = *(*0x20 + -0xc0);\n                                                        uVar14 = *(*0x20 + -199);\n                                                        goto code_r0x00421c96;\n                                                    }\n                                                }\n                                                *(*0x20 + -0xf0) = 0x421e76;\n                                                fcn.0045e420(0x44);\ncode_r0x00421e76:\n                                                uVar10 = 0x88;\n                                                *(*0x20 + -0xf0) = 0x421e85;\n                                                fcn.0045e420(0x88);\n                                            }\n                                            else if (*(*0x20 + 0x10) == '\\0') {\n                                                if (*(*0x20 + -0x80) == 0) {\n                                                    LOCK();\n                                                    *0x56a758 = *0x56a758 - *(iVar16 + 0x20);\n                                                    uVar1 = *(iVar16 + 99);\n                                                    *(iVar16 + 99) = 0;\n                                                    *(*0x20 + -0x58) =\n                                                         CONCAT412(in_XMM15_Dd, \n                                                                   CONCAT48(in_XMM15_Dc, \n                                                                            CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                                    *(*0x20 + -0x58) = 0x422340;\n                                                    *(*0x20 + -0x50) = iVar16;\n                                                    *(*0x20 + -0xe8) = *0x20 + -0x58;\n                                                    *(*0x20 + -0xf0) = 0x421bbe;\n                                                    fcn.0045bc80(uVar1);\n                                                    return 0;\n                                                }\n                                                if (*(*0x20 + -199) < 0x88) {\n                                                    *(*0x20 + -0xf0) = 0x421b5e;\n                                                    fcn.0042c660(*(*0x20 + -199) * 0xc0 + 0x56aa88, (uVar2 >> 1 & 1) * 5\n                                                                );\n                                                    return 0;\n                                                }\n                                                goto code_r0x00421e76;\n                                            }\n                                            *(*0x20 + -0xf0) = 0x421e96;\n                                            fcn.00433580();\n                                        }\n                                        iVar16 = 0x11;\n                                        *(*0x20 + -0xf0) = 0x421ea7;\n                                        fcn.00433580();\n                                    }\n                                }\n                                *(*0x20 + -0x78) = *(iVar16 + 0x58);\n                                *(*0x20 + -0xf0) = 0x421eb4;\n                                fcn.00434ec0();\n                                *(*0x20 + -0xf0) = 0x421ec5;\n                                fcn.004357c0();\n                                *(*0x20 + -0xf0) = 0x421ed2;\n                                fcn.004354c0();\n                                *(*0x20 + -0xf0) = 0x421ee5;\n                                fcn.004357c0();\n                                *(*0x20 + -0xf0) = 0x421eef;\n                                fcn.004354c0();\n                                *(*0x20 + -0xf0) = 0x421f05;\n                                fcn.004357c0();\n                                *(*0x20 + -0xf0) = 0x421f0e;\n                                fcn.004354c0();\n                                *(*0x20 + -0xf0) = 0x421f13;\n                                fcn.00435120();\n                                *(*0x20 + -0xf0) = 0x421f18;\n                                fcn.00434f40();\n                                *(*0x20 + -0xf0) = 0x421f29;\n                                fcn.00433580();\n                            }\n                            *(*0x20 + -0xc2) = uVar17;\n                            *(*0x20 + -0x68) = *(uVar11 + 0x38);\n                            *(*0x20 + -0xf0) = 0x421f45;\n                            fcn.00434ec0();\n                            *(*0x20 + -0xf0) = 0x421f56;\n                            fcn.004357c0();\n                            *(*0x20 + -0xf0) = 0x421f65;\n                            fcn.004354c0();\n                            *(*0x20 + -0xf0) = 0x421f76;\n                            fcn.004357c0();\n                            *(*0x20 + -0xf0) = 0x421f85;\n                            fcn.004354c0();\n                            *(*0x20 + -0xf0) = 0x421f96;\n                            fcn.004357c0();\n                            *(*0x20 + -0xf0) = 0x421fa5;\n                            fcn.004354c0();\n                            *(*0x20 + -0xf0) = 0x421fb6;\n                            fcn.004357c0();\n                            *(*0x20 + -0xf0) = 0x421fc5;\n                            fcn.004354c0();\n                            *(*0x20 + -0xf0) = 0x421fca;\n                            fcn.00435120();\n                            *(*0x20 + -0xf0) = 0x421fcf;\n                            fcn.00434f40();\n                            *(*0x20 + -0xf0) = 0x421fe5;\n                            fcn.00433580();\n                        } while( true );\n                    }\n                    if (uVar10 == 0) goto code_r0x00422273;\n                    puVar19 = *(uVar11 + 0x50);\n                    uVar6 = SUB168(ZEXT216(*(puVar13 + 1)) / ZEXT816(uVar10), 0);\n                    uVar11 = uVar6 >> 3;\n                    uVar5 = puVar19[uVar11];\n                    uVar20 = SUB164(ZEXT216(*(puVar13 + 1)) / ZEXT816(uVar10), 0) & 7;\n                    uVar7 = uVar20;\n                    if ((1 << uVar20 & uVar5) == 0) {\n                        uVar6 = uVar6 * uVar10 + uVar10;\n                        for (; puVar13 != NULL; puVar13 = *puVar13) {\n                            if (uVar6 <= *(puVar13 + 1)) {\n                                cVar4 = '\\0';\n                                goto code_r0x00421804;\n                            }\n                            if (*(puVar13 + 10) == '\\x01') {\n                                puVar19[uVar11] = uVar5 | 1 << (uVar7 & 0x1f);\n                                cVar4 = '\\x01';\n                                goto code_r0x00421804;\n                            }\ncode_r0x004221b2:\n                        }\n                        cVar4 = '\\0';\ncode_r0x00421804:\n                        *(*0x20 + -0x88) = uVar6;\n                        *(*0x20 + -0xc6) = cVar4;\n                        uVar11 = *(*0x20 + -0xa8);\n                        while ((puVar13 = *(*0x20 + -0x40),  puVar13 != NULL && (*(puVar13 + 1) < uVar6))) {\n                            puVar19 = *(uVar11 + 0x18);\n                            if ((*(puVar13 + 10) == '\\x01') || (cVar4 == '\\0')) {\n                                uVar9 = *puVar13;\n                                *(*0x20 + -0x40) = uVar9;\n                                **(*0x20 + -0x48) = uVar9;\n                                *(*0x20 + -0xf0) = 0x422245;\n                                fcn.00426240(uVar10);\n                                cVar4 = *(*0x20 + -0xc6);\n                                uVar11 = *(*0x20 + -0xa8);\n                                uVar6 = *(*0x20 + -0x88);\n                                uVar10 = *(*0x20 + -0xb0);\n                                uVar14 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                *(*0x20 + -0x48) = puVar13;\n                                *(*0x20 + -0x40) = *puVar13;\n                            }\n                        }\n                    }\n                    else {\n                        if (*(puVar13 + 10) == '\\x03') {\n                            uVar9 = *puVar13;\n                            *(*0x20 + -0x40) = uVar9;\n                            **(*0x20 + -0x48) = uVar9;\n                            *(puVar13 + 0x11) = 1;\n                            *(*0x20 + -0xf0) = 0x4217be;\n                            fcn.00426240(uVar10);\n                            uVar10 = *(*0x20 + -0xb0);\n                            uVar14 = *(*0x20 + -0x60);\n                        }\n                        else {\n                            *(*0x20 + -0x48) = puVar13;\n                            *(*0x20 + -0x40) = *puVar13;\n                        }\n                        uVar11 = *(*0x20 + -0xa8);\n                    }\n                    uVar20 = *(*0x20 + -0xc0);\n                    uVar5 = *(*0x20 + -199);\n                } while( true );\n            }\n            goto code_r0x00422278;\n        }\n        goto code_r0x004222fb;\n    }\n    goto code_r0x0042230d;\ncode_r0x00422273:\n    *(*0x20 + -0xf0) = 0x422278;\n    fcn.00431c00();\ncode_r0x00422278:\n    *(*0x20 + -0x78) = *(uVar11 + 0x58);\n    *(*0x20 + -0xf0) = 0x422285;\n    fcn.00434ec0();\n    *(*0x20 + -0xf0) = 0x422296;\n    fcn.004357c0();\n    *(*0x20 + -0xf0) = 0x4222a5;\n    fcn.004354c0();\n    *(*0x20 + -0xf0) = 0x4222b6;\n    fcn.004357c0();\n    *(*0x20 + -0xf0) = 0x4222c5;\n    fcn.004354c0();\n    *(*0x20 + -0xf0) = 0x4222d6;\n    fcn.004357c0();\n    *(*0x20 + -0xf0) = 0x4222df;\n    fcn.004354c0();\n    *(*0x20 + -0xf0) = 0x4222e5;\n    fcn.00435120();\n    *(*0x20 + -0xf0) = 0x4222ea;\n    fcn.00434f40();\n    *(*0x20 + -0xf0) = 0x4222fb;\n    fcn.00433580();\ncode_r0x004222fb:\n    unaff_BL = '\\x1c';\n    *(*0x20 + -0xf0) = 0x42230c;\n    in_RAX = fcn.00433580();\ncode_r0x0042230d:\n    *(puVar12 + 8) = in_RAX;\n    puVar12[0x10] = unaff_BL;\n    *(puVar12 + -8) = 0x42231b;\n    fcn.0045bdc0();\n    in_RAX = *(puVar12 + 8);\n    unaff_BL = puVar12[0x10];\n    *0x20 = puVar12;\n    goto code_r0x00421600;\n}\n",
        "token_count": 6817
    },
    "004246e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004246e0(uint64_t param_1)\n\n{\n    int64_t *piVar1;\n    uint64_t *puVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong in_RAX;\n    ulong uVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    uint64_t uVar11;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uchar unaff_DIL;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x18)) {\n            puVar12 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x61) = unaff_DIL;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar9 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(*0x20 + -0x10) = iVar9;\n            if (iVar9 == 0) {\n                iVar7 = 0;\n                iVar9 = 0;\n                unaff_RBX = 0;\ncode_r0x00424820:\n                *(*0x20 + -0x58) = unaff_RBX;\n                *(*0x20 + -0x20) = iVar9;\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x98) = 0x424837;\n                fcn.0040a520();\n                if (*(*0x20 + -0x38) != 0) {\n                    uVar8 = 0;\n                    iVar9 = *(*0x20 + -0x38);\n                    uVar6 = *(*0x20 + -0x58);\n                    goto code_r0x004248e1;\n                }\n                *(*0x20 + -0x18) = *(*0x20 + 8) + 8;\n                uVar6 = *(*0x20 + 0x10);\n                *(*0x20 + -0x98) = 0x424877;\n                iVar9 = fcn.00428420();\n                if (iVar9 != 0) {\n                    uVar8 = 0;\n                    goto code_r0x004248e1;\n                }\n                uVar6 = *(*0x20 + 0x10);\n                *(*0x20 + -0x98) = 0x424897;\n                uVar8 = fcn.00424f20();\n                if (uVar6 == '\\0') {\n                    *(*0x20 + -0x98) = 0x4248aa;\n                    fcn.0040a740();\n                    return 0;\n                }\n                *(*0x20 + -0x48) = uVar8;\n                uVar6 = *(*0x20 + 0x10);\n                *(*0x20 + -0x98) = 0x4248d3;\n                iVar9 = fcn.00428420();\n                if (iVar9 != 0) {\n                    uVar8 = *(*0x20 + -0x48);\ncode_r0x004248e1:\n                    *(*0x20 + -0x58) = uVar6;\n                    *(*0x20 + -0x38) = iVar9;\n                    *(*0x20 + -0x48) = uVar8;\n                    iVar9 = *(*0x20 + -0x20);\n                    if (iVar9 == 0) {\n                        *(*0x20 + -0x98) = 0x424907;\n                        iVar9 = fcn.004245e0();\n                    }\n                    *(*0x20 + -0x20) = iVar9;\n                    *(*0x20 + -0x98) = 0x42491e;\n                    fcn.0040a740();\n                    uVar11 = *(*0x20 + -0x48);\n                    iVar7 = *(*0x20 + -0x38);\n                    iVar9 = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + -0x58);\ncode_r0x00424932:\n                    if (*0x598864 == '\\0') {\n                        noname_1 = 0;\n                        if (*0x598ca8 < *0x598dc0 + unaff_RBX) {\n                            noname_1 = (*0x598dc0 + unaff_RBX) - *0x598ca8;\n                        }\n                    }\n                    else {\n                        noname_1 = 0;\n                    }\n                    if (*0x598640 == 0xffffffffffffffff) {\n                        bVar14 = *(*0x20 + -0x10) == 0;\n                    }\n                    else if (uVar11 == 0) {\n                        bVar14 = *(*0x20 + -0x10) == 0;\n                    }\n                    else {\n                        uVar13 = *0x598d98 + *0x598da8 + uVar11;\n                        if (*0x598640 < uVar13) {\n                            uVar13 = uVar13 - *0x598640;\n                            if (uVar13 < uVar11) {\n                                uVar11 = uVar13;\n                            }\n                            if (noname_1 < uVar11) {\n                                noname_1 = uVar11;\n                            }\n                            bVar14 = *(*0x20 + -0x10) == 0;\n                        }\n                        else {\n                            bVar14 = *(*0x20 + -0x10) == 0;\n                        }\n                    }\n                    *(*0x20 + -0x58) = unaff_RBX;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x20) = iVar9;\n                    if ((!bVar14) && (noname_1 != 0)) {\n                        *(*0x20 + -0x40) = noname_1;\n                        *(*0x20 + -0x98) = 0x4249fe;\n                        fcn.0045fdc0();\n                        *(*0x20 + -0x60) = *(*0x20 + -0x90);\n                        uVar11 = *(*(*0x20 + -0x10) + 0x1220);\n                        *(*0x20 + -0x28) = uVar11 >> 0x3d;\n                        if (uVar11 >> 0x3d == 0) {\n                            *(*(*0x20 + -0x10) + 0x1220) = *(*0x20 + -0x90) & 0x1fffffffffffffff | 0x6000000000000000;\n                        }\n                        *(*0x20 + -0x98) = 0x424a7a;\n                        fcn.0041f600(0x4b27f0);\n                        *(*0x20 + -0x98) = 0x424a85;\n                        fcn.0045fdc0();\n                        iVar9 = *(*0x20 + -0x90);\n                        if (*(*0x20 + -0x28) == '\\0') {\n                            *(*0x20 + -0x50) = iVar9;\n                            *(*0x20 + -0x98) = 0x424ac5;\n                            fcn.004197e0(iVar9);\n                            iVar9 = *(*0x20 + -0x50);\n                        }\n                        noname_1 = 0x598650;\n                        LOCK();\n                        *0x598650 = *0x598650 + (iVar9 - *(*0x20 + -0x60));\n                    }\n                    *(*0x20 + -0x98) = 0x424b10;\n                    fcn.00424c80(*(*0x20 + 0x18), noname_1, *(*0x20 + 0x10));\n                    *(*0x20 + -0x30) = *(*0x20 + 0x10) << 0xd;\n                    if (*(*0x20 + -0x58) != 0) {\n                        *(*0x20 + -0x98) = 0x424b35;\n                        fcn.004148e0(*(*0x20 + -0x58));\n                        *(*0x20 + -0x98) = 0x424b49;\n                        fcn.0042cc40();\n                    }\n                    *(*0x20 + -0x98) = 0x424b65;\n                    fcn.0042cc40();\n                    if (*(*0x20 + 0x18) == '\\0') {\n                        *(*0x20 + -0x98) = 0x424b85;\n                        fcn.0042cc40();\n                    }\n                    *(*0x20 + -0x98) = 0x424b91;\n                    piVar10 = fcn.0042cd00();\n                    iVar9 = *(*0x20 + -0x58);\n                    LOCK();\n                    *piVar10 = *piVar10 + iVar9;\n                    LOCK();\n                    piVar1 = piVar10 + 1;\n                    iVar7 = *piVar1;\n                    *piVar1 = *piVar1 - iVar9;\n                    uVar3 = *(*0x20 + 0x18);\n                    uVar11 = uVar3;\n                    if (uVar3 < 2) {\n                        if (uVar3 == 0) {\n                            LOCK();\n                            puVar2 = piVar10 + 2;\n                            uVar11 = *puVar2;\n                            *puVar2 = *puVar2 + *(*0x20 + -0x30);\n                        }\n                        else {\n                            LOCK();\n                            puVar2 = piVar10 + 3;\n                            uVar11 = *puVar2;\n                            *puVar2 = *puVar2 + *(*0x20 + -0x30);\n                        }\n                    }\n                    else if (uVar3 == 2) {\n                        LOCK();\n                        puVar2 = piVar10 + 5;\n                        uVar11 = *puVar2;\n                        *puVar2 = *puVar2 + *(*0x20 + -0x30);\n                    }\n                    else if (uVar3 == 3) {\n                        LOCK();\n                        puVar2 = piVar10 + 4;\n                        uVar11 = *puVar2;\n                        *puVar2 = *puVar2 + *(*0x20 + -0x30);\n                    }\n                    *(*0x20 + -0x98) = 0x424c05;\n                    fcn.0042cde0(uVar11, iVar7);\n                    return *(*0x20 + -0x20);\n                }\n                unaff_RBX = 0x2b;\n                *(*0x20 + -0x98) = 0x424c2b;\n                fcn.00433580();\n            }\n            else {\n                if (0xf < unaff_RBX) {\n                    iVar7 = 0;\n                    iVar9 = 0;\n                    unaff_RBX = 0;\n                    goto code_r0x00424820;\n                }\n                if (*(iVar9 + 0x50) == 0) {\n                    *(*0x20 + -0x98) = 0x424759;\n                    fcn.0040a520();\n                    param_1 = *(*0x20 + 8) + 8;\n                    *(*0x20 + -0x98) = 0x42476d;\n                    uVar6 = fcn.004299e0();\n                    iVar9 = *(*0x20 + -0x10);\n                    *(iVar9 + 0x48) = uVar6;\n                    *(iVar9 + 0x50) = unaff_RBX;\n                    *(iVar9 + 0x58) = param_1;\n                    *(*0x20 + -0x98) = 0x424790;\n                    fcn.0040a740();\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(*0x20 + -0x98) = 0x4247a9;\n                iVar7 = fcn.004295e0(param_1);\n                if (iVar7 == 0) {\n                    iVar9 = 0;\n                    goto code_r0x00424820;\n                }\n                iVar4 = *(*(unaff_R14 + 0x30) + 0xa0);\n                if ((iVar4 == 0) || (iVar5 = *(iVar4 + 0xdc8),  iVar5 == 0)) {\n                    iVar9 = 0;\ncode_r0x004247ef:\n                    if (iVar9 == 0) goto code_r0x00424820;\n                    uVar11 = 0;\n                    goto code_r0x00424932;\n                }\n                if (iVar5 - 1U < 0x80) {\n                    iVar9 = *(iVar4 + 0xdc8 + iVar5 * 8);\n                    *(iVar4 + 0xdc8) = iVar5 - 1U;\n                    goto code_r0x004247ef;\n                }\n            }\n            param_1 = 0x80;\n            *(*0x20 + -0x98) = 0x424c38;\n            in_RAX = fcn.0045e420(0x80);\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        puVar12[0x18] = param_1;\n        puVar12[0x19] = unaff_DIL;\n        *(puVar12 + -8) = 0x424c51;\n        fcn.00460800();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        param_1 = puVar12[0x18];\n        unaff_DIL = puVar12[0x19];\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 3199
    },
    "004253a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004253a0(uchar param_1)\n\n{\n    uint64_t *puVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    ulong arg1;\n    ulong *puVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint8_t *puVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(unaff_RBX + 99) == '\\x01') {\n                if (*(unaff_RBX + 0x65) == '\\0') {\n                    iVar3 = *(unaff_RBX + 0x60);\n                    *(*0x20 + -0x2a) = iVar3;\n                    if ((iVar3 == 0) && (*(in_RAX + 0x10118) == *(unaff_RBX + 0x58))) {\n                        LOCK();\n                        *(in_RAX + 0x10138) = *(in_RAX + 0x10138) - *(unaff_RBX + 0x20);\n                        uVar6 = *(unaff_RBX + 0x18);\n                        uVar9 = uVar6 + 0x800000000000 >> 0x2a;\n                        if (uVar9 < 0x40) {\n                            puVar7 = (uVar6 >> 0x10 & 0x3f) + 0x11400 +\n                                     *(*(uVar9 * 8 + 0x56a790) + (uVar6 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                            LOCK();\n                            *puVar7 = *puVar7 & ~(1 << (uVar6 >> 0xd & 7));\n                            goto code_r0x004254b4;\n                        }\n                        goto code_r0x0042562b;\n                    }\n                    goto code_r0x00425638;\n                }\n            }\n            else {\n                if (*(unaff_RBX + 99) == '\\x02') {\n                    if (*(unaff_RBX + 0x60) == 0) {\ncode_r0x004254b4:\n                        *(*0x20 + -0x10) = *(unaff_RBX + 0x20) << 0xd;\n                        *(*0x20 + -0x58) = 0x4254d0;\n                        fcn.0042cc40();\n                        if (*(*0x20 + 0x18) == '\\0') {\n                            *(*0x20 + -0x58) = 0x4254ed;\n                            fcn.0042cc40();\n                        }\n                        *(*0x20 + -0x58) = 0x4254f9;\n                        iVar5 = fcn.0042cd00();\n                        uVar2 = *(*0x20 + 0x18);\n                        uVar6 = uVar2;\n                        if (uVar2 < 2) {\n                            if (uVar2 == 0) {\n                                LOCK();\n                                puVar1 = iVar5 + 0x10;\n                                uVar6 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                            else {\n                                LOCK();\n                                puVar1 = iVar5 + 0x18;\n                                uVar6 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                        }\n                        else if (uVar2 == 2) {\n                            LOCK();\n                            puVar1 = iVar5 + 0x28;\n                            uVar6 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        else if (uVar2 == 3) {\n                            LOCK();\n                            puVar1 = iVar5 + 0x20;\n                            uVar6 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x58) = 0x42555f;\n                        fcn.0042cde0(uVar6);\n                        arg1 = *(*(*0x20 + 0x10) + 0x20);\n                        *(*0x20 + -0x58) = 0x425588;\n                        fcn.004286e0(arg1);\n                        puVar4 = *(*0x20 + 0x10);\n                        *(puVar4 + 99) = 0;\n                        iVar5 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        if (iVar5 == 0) {\ncode_r0x004255ca:\n                            iVar5 = *(*0x20 + 8);\n                            *(iVar5 + 0x16a40) = *(iVar5 + 0x16a40) - *(iVar5 + 0x16a10);\n                            *puVar4 = *(iVar5 + 0x16a28);\n                            *(iVar5 + 0x16a28) = puVar4;\n                            return;\n                        }\n                        uVar6 = *(iVar5 + 0xdc8);\n                        if (0x7f < uVar6) goto code_r0x004255ca;\n                        if (uVar6 < 0x80) {\n                            *(iVar5 + 0xdd0 + uVar6 * 8) = puVar4;\n                            *(iVar5 + 0xdc8) = *(iVar5 + 0xdc8) + 1;\n                            return;\n                        }\n                        *(*0x20 + -0x58) = 0x425609;\n                        fcn.0045e420(0x80);\n                    }\n                    *(*0x20 + -0x58) = 0x42561a;\n                    fcn.00433580();\n                }\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x58) = 0x42562b;\n                fcn.00433580();\ncode_r0x0042562b:\n                *(*0x20 + -0x58) = 0x425638;\n                in_RAX = fcn.0045e440(0x40);\ncode_r0x00425638:\n                uVar6 = *(unaff_RBX + 0x58);\n                *(*0x20 + -0x18) = uVar6;\n                *(*0x20 + -0x20) = *(in_RAX + 0x10118);\n                *(*0x20 + -0x28) = *(unaff_RBX + 0x18);\n                *(*0x20 + -0x58) = 0x425659;\n                fcn.00434ec0();\n                param_1 = uVar6;\n                *(*0x20 + -0x58) = 0x42566a;\n                fcn.004357c0();\n                *(*0x20 + -0x58) = 0x425674;\n                fcn.00435780();\n                *(*0x20 + -0x58) = 0x425685;\n                fcn.004357c0();\n                *(*0x20 + -0x58) = 0x42568f;\n                fcn.00435620();\n                *(*0x20 + -0x58) = 0x4256a5;\n                fcn.004357c0();\n                *(*0x20 + -0x58) = 0x4256af;\n                fcn.004354c0();\n                *(*0x20 + -0x58) = 0x4256c5;\n                fcn.004357c0();\n                *(*0x20 + -0x58) = 0x4256cf;\n                fcn.004354c0();\n                *(*0x20 + -0x58) = 0x4256e5;\n                fcn.004357c0();\n                *(*0x20 + -0x58) = 0x4256ef;\n                fcn.004354c0();\n                *(*0x20 + -0x58) = 0x4256f4;\n                fcn.00435120();\n                *(*0x20 + -0x58) = 0x4256f9;\n                fcn.00434f40();\n                *(*0x20 + -0x58) = 0x42570a;\n                fcn.00433580();\n            }\n            unaff_RBX = 0x37;\n            *(*0x20 + -0x58) = 0x42571b;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = param_1;\n        *(puVar8 + -8) = 0x42572f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        param_1 = puVar8[0x18];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2196
    },
    "00426240": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426240(ulong arg1)\n\n{\n    char cVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            cVar1 = *(in_RAX + 10);\n            if (cVar1 == '\\x01') {\n                uVar2 = *(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x4262f0;\n                fcn.004150e0(uVar2);\n                *(*0x20 + -0x38) = 0x4262fe;\n                fcn.0040a520();\n                *0x5710f0 = *0x5710f0 - *0x5710c0;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x5710d8;\n                *(*0x20 + -0x38) = 0x426338;\n                *0x5710d8 = puVar3;\n                fcn.0040a740();\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -0x38) = 0x42628c;\n                fcn.0042af80(arg1, uVar2);\n                *(*0x20 + -0x38) = 0x42629a;\n                fcn.0040a520();\n                *0x571138 = *0x571138 - *0x571108;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x571120;\n                *(*0x20 + -0x38) = 0x4262d3;\n                *0x571120 = puVar3;\n                fcn.0040a740();\n                return;\n            }\n            if (cVar1 == '\\x03') {\n                *(in_RAX + 0x10) = 1;\n                return;\n            }\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x426353;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x426368;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 762
    },
    "0042a760": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0042a760(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x10) == 2) || (*(in_RAX + 0x10) == 3)) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x42a7ad;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42a7b8;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 307
    },
    "0042a7c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.0042a7c0(ulong *arg1)\n\n{\n    ulong *in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *arg2;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong *unaff_RSI;\n    ulong *unaff_RDI;\n    char cVar7;\n    uint64_t in_R8;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \ncode_r0x0042a7c0:\n    puVar4 = *0x544bf8;\n    cVar7 = in_R8;\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (*0x544bf8 != NULL) {\ncode_r0x0042a872:\n            cVar7 = in_R8;\n            uVar8 = 0;\n            for (iVar3 = 0; iVar3 < unaff_RDI; iVar3 = iVar3 + 1) {\n                uVar8 = (arg1[iVar3] + uVar8) * 0x401;\n                uVar8 = uVar8 >> 6 ^ uVar8;\n            }\n            uVar8 = (uVar8 + unaff_RBX) * 0x401;\n            uVar8 = (uVar8 >> 6 ^ uVar8) * 9;\n            uVar8 = uVar8 >> 0xb ^ uVar8;\n            if (uVar8 % 179999 < 179999) {\n                puVar4 = puVar4 + uVar8 % 179999;\n                puVar1 = *puVar4;\n                do {\n                    cVar7 = in_R8;\n                    if (puVar1 == NULL) {\n                        if (cVar7 == '\\0') {\n                            return NULL;\n                        }\n                        *(*0x20 + -0x30) = uVar8;\n                        *(*0x20 + -0x10) = puVar4;\n                        *(*0x20 + -0x50) = 0x42a953;\n                        fcn.0040a520();\n                        arg1 = *(*0x20 + -0x10);\n                        arg2 = *arg1;\n                        iVar3 = *(*0x20 + 0x18);\n                        puVar4 = *(*0x20 + 0x20);\n                        unaff_RDI = *(*0x20 + 0x10);\n                        in_R8 = *(*0x20 + -0x30);\n                        uVar8 = *(*0x20 + 8);\n                        puVar5 = in_RAX;\n                        do {\n                            if (arg2 == NULL) {\n                                *(*0x20 + -0x50) = 0x42a9c5;\n                                puVar1 = fcn.0042a660();\n                                arg2 = puVar1[5];\n                                if (0x20 < arg2) {\n                                    iVar3 = 0x20;\n                                    *(*0x20 + -0x50) = 0x42aa8b;\n                                    iVar2 = fcn.0045e540(arg1, arg2);\n                                    goto code_r0x0042aa8b;\n                                }\n                                *(*0x20 + -0x20) = puVar1;\n                                if (*(*0x20 + 0x20) < arg2) {\n                                    arg2 = *(*0x20 + 0x20);\n                                }\n                                if (*(*0x20 + 0x18) != puVar1 + 6) {\n                                    *(*0x20 + -0x50) = 0x42aa05;\n                                    fcn.0045eda0(arg2 << 3);\n                                    puVar1 = *(*0x20 + -0x20);\n                                }\n                                puVar1[3] = *(*0x20 + -0x30);\n                                puVar1[4] = *(*0x20 + 0x10);\n                                if (*(*0x20 + 8) == 1) {\n                                    puVar4 = 0x544c28;\n                                }\n                                else if (*(*0x20 + 8) == 3) {\n                                    puVar4 = 0x544c78;\n                                }\n                                else {\n                                    puVar4 = 0x544bf0;\n                                }\n                                puVar5 = *(*0x20 + -0x10);\n                                *puVar1 = *puVar5;\n                                puVar1[1] = *puVar4;\n                                *puVar5 = puVar1;\n                                *puVar4 = puVar1;\n                                *(*0x20 + -0x50) = 0x42aa71;\n                                fcn.0040a740();\n                                return *(*0x20 + -0x20);\n                            }\n                            if (((arg2[2] == uVar8) && (arg2[3] == in_R8)) && (arg2[4] == unaff_RDI)) {\n                                puVar5 = arg2[5];\n                                if (0x20 < puVar5) {\n                                    unaff_RBX = 0x20;\n                                    *(*0x20 + -0x50) = 0x42aad9;\n                                    in_RAX = puVar5;\n                                    iVar3 = fcn.0045e540(arg1, puVar5);\n                                    goto code_r0x0042aad9;\n                                }\n                                if (puVar4 == puVar5) {\n                                    iVar2 = 0;\n                                    while( true ) {\n                                        if (puVar5 <= iVar2) {\n                                            *(*0x20 + -0x28) = arg2;\n                                            *(*0x20 + -0x50) = 0x42aabd;\n                                            fcn.0040a740();\n                                            return *(*0x20 + -0x28);\n                                        }\n                                        puVar1 = arg2[iVar2 + 6];\n                                        if (*(iVar3 + iVar2 * 8) != puVar1) break;\ncode_r0x0042aa8b:\n                                        iVar2 = iVar2 + 1;\n                                    }\n                                }\n                            }\n                            arg2 = *arg2;\n                        } while( true );\n                    }\n                    if (((puVar1[2] == in_RAX) && (puVar1[3] == uVar8)) && (puVar1[4] == unaff_RBX)) {\n                        puVar5 = puVar1[5];\n                        if (0x20 < puVar5) goto code_r0x0042ab05;\n                        if (unaff_RDI == puVar5) {\n                            iVar3 = 0;\n                            while( true ) {\n                                if (puVar5 <= iVar3) {\n                                    return puVar1;\n                                }\n                                if (arg1[iVar3] != puVar1[iVar3 + 6]) break;\ncode_r0x0042aad9:\n                                iVar3 = iVar3 + 1;\n                            }\n                        }\n                    }\n                    puVar1 = *puVar1;\n                } while( true );\n            }\n            goto code_r0x0042ab0f;\n        }\n        *(*0x20 + 0x30) = cVar7;\n        *(*0x20 + -0x50) = 0x42a80b;\n        fcn.0040a520();\n        puVar1 = *0x544bf8;\n        if (*0x544bf8 != NULL) {\ncode_r0x0042a840:\n            *0x544bf8 = puVar1;\n            *(*0x20 + -0x18) = *0x544bf8;\n            *(*0x20 + -0x50) = 0x42a853;\n            fcn.0040a740();\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            unaff_RDI = *(*0x20 + 0x20);\n            in_R8 = *(*0x20 + 0x30);\n            puVar4 = *(*0x20 + -0x18);\n            goto code_r0x0042a872;\n        }\n        *(*0x20 + -0x50) = 0x42a829;\n        arg1 = *0x544bf8;\n        puVar1 = fcn.004147e0();\n        if (puVar1 != NULL) goto code_r0x0042a840;\n        goto code_r0x0042ab19;\n    }\n    goto code_r0x0042ab2b;\ncode_r0x0042ab05:\n    *(*0x20 + -0x50) = 0x42ab0f;\n    fcn.0045e540(arg1, puVar5);\ncode_r0x0042ab0f:\n    arg1 = 0x2bf1f;\n    *(*0x20 + -0x50) = 0x42ab19;\n    fcn.0045e420(179999);\ncode_r0x0042ab19:\n    unaff_RBX = 0x1f;\n    *(*0x20 + -0x50) = 0x42ab2a;\n    in_RAX = fcn.00433580();\n    unaff_RSI = puVar4;\ncode_r0x0042ab2b:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = unaff_RSI;\n    puVar6[0x30] = cVar7;\n    *(puVar6 + -8) = 0x42ab4e;\n    fcn.0045bdc0();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    in_R8 = puVar6[0x30];\n    *0x20 = puVar6;\n    goto code_r0x0042a7c0;\n}\n",
        "token_count": 2422
    },
    "0042ab80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042abb0)\n\nvoid fcn.0042ab80(void)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if ((*0x59838c & 1) != 0) {\n                *0x59838c = *0x59838c | 1;\n                return;\n            }\n            *(*0x20 + -0x14) = *0x59838c;\n            *(*0x20 + -0x30) = 0x42abd4;\n            *0x59838c = *0x59838c | 1;\n            fcn.0040a520();\n            uVar1 = (*(*0x20 + -0x14) >> 1) % 3;\n            if (uVar1 < 3) {\n                *(*0x20 + -0x18) = uVar1;\n                *(*0x20 + -0x10) = uVar1 * 8 + 0x5985e0;\n                *(*0x20 + -0x30) = 0x42ac0f;\n                fcn.0040a520();\n                *(*0x20 + -0x30) = 0x42ac18;\n                fcn.0042ac60();\n                *(*0x20 + -0x30) = 0x42ac25;\n                fcn.0040a740();\n                *(*0x20 + -0x30) = 0x42ac33;\n                fcn.0040a740();\n                return;\n            }\n            *(*0x20 + -0x30) = 0x42ac51;\n            fcn.0045e420(3);\n        }\n        *(puVar2 + -8) = 0x42ac57;\n        fcn.0045bdc0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 534
    },
    "0042ac60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0042ac60(void)\n\n{\n    uint32_t in_EAX;\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = in_EAX;\n            if (uVar1 < 3) {\n                *(*0x20 + -0x10) = uVar1;\n                iVar3 = *0x544c28;\n                while (iVar3 != 0) {\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x30) = 0x42aca6;\n                    piVar2 = fcn.0042a700();\n                    uVar1 = *(*0x20 + -0x10);\n                    *piVar2 = *piVar2 + piVar2[uVar1 * 4 + 4];\n                    piVar2[1] = piVar2[1] + piVar2[uVar1 * 4 + 5];\n                    piVar2[2] = piVar2[2] + piVar2[uVar1 * 4 + 6];\n                    piVar2[3] = piVar2[3] + piVar2[uVar1 * 4 + 7];\n                    *(piVar2 + uVar1 * 4 + 4) = in_XMM15;\n                    *(piVar2 + uVar1 * 4 + 6) = in_XMM15;\n                    iVar3 = *(*(*0x20 + -0x18) + 8);\n                }\n                return uVar1;\n            }\n            *(*0x20 + -0x30) = 0x42ad11;\n            in_EAX = fcn.0045e420(3);\n        }\n        *(puVar4 + 8) = in_EAX;\n        *(puVar4 + -8) = 0x42ad1b;\n        fcn.0045bdc0();\n        in_EAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 581
    },
    "0042ad40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ad40(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    uint64_t arg1;\n    ulong uVar3;\n    uint32_t uVar4;\n    uchar *unaff_RBX;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xf0 && *0x20 + -0xf0 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x170;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x180) = *0x20 + -8;\n            *(*0x20 + -0x178) = 0x42ad8f;\n            fcn.0045e694();\n            unaff_RBP = *(*0x20 + -0x180);\n            unaff_RBX = *0x20 + -0x130;\n            *(*0x20 + -0x178) = 0x42adaa;\n            arg1 = fcn.00454460(0x20);\n            if (arg1 < 0x21) {\n                *(*0x20 + -0x13c) = (*0x59838c >> 1) + (((*0x59838c >> 1) + 2) / 3) * -3;\n                unaff_RBX = *(*0x20 + 0x10);\n                *(*0x20 + -0x178) = 0x42adfd;\n                uVar3 = fcn.0042a7c0(*0x20 + -0x130);\n                *(*0x20 + -0x138) = uVar3;\n                *(*0x20 + -0x178) = 0x42ae07;\n                uVar3 = fcn.0042a700();\n                uVar4 = *(*0x20 + -0x13c) + 2;\n                if (uVar4 < 3) {\n                    *(*0x20 + -0x140) = uVar4;\n                    *(*0x20 + -0x30) = uVar3;\n                    *(*0x20 + -0x28) = uVar4 * 8 + 0x5985e0;\n                    *(*0x20 + -0x178) = 0x42ae3f;\n                    fcn.0040a520();\n                    uVar4 = *(*0x20 + -0x140);\n                    iVar2 = *(*0x20 + -0x30);\n                    piVar1 = iVar2 + 0x20 + uVar4 * 0x20;\n                    *piVar1 = *piVar1 + 1;\n                    piVar1 = iVar2 + 0x30 + uVar4 * 0x20;\n                    *piVar1 = *piVar1 + *(*0x20 + 0x10);\n                    *(*0x20 + -0x178) = 0x42ae70;\n                    fcn.0040a740();\n                    *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x20) = 0x42af40;\n                    *(*0x20 + -0x18) = *(*0x20 + 8);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x138);\n                    *(*0x20 + -0x170) = *0x20 + -0x20;\n                    *(*0x20 + -0x178) = 0x42aec5;\n                    fcn.0045bc80();\n                    return;\n                }\n                *(*0x20 + -0x178) = 0x42aef3;\n                arg1 = fcn.0045e420(3);\n            }\n            *(*0x20 + -0x178) = 0x42af05;\n            in_RAX = fcn.0045e460(arg1, 0x20);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x42af15;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1137
    },
    "0042af80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042af80(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    uint32_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = *0x59838c;\n            *(*0x20 + -0x38) = 0x42afad;\n            uVar3 = fcn.0042a700();\n            uVar4 = (*(*0x20 + -0x20) >> 1) + 1;\n            unaff_RBX = uVar4 / 3;\n            uVar4 = (*(*0x20 + -0x20) >> 1) + (uVar4 / 3) * -3 + 1;\n            if (uVar4 < 3) {\n                *(*0x20 + -0x1c) = uVar4;\n                *(*0x20 + -0x18) = uVar3;\n                *(*0x20 + -0x10) = uVar4 * 8 + 0x5985e0;\n                *(*0x20 + -0x38) = 0x42aff1;\n                fcn.0040a520();\n                uVar4 = *(*0x20 + -0x1c);\n                iVar2 = *(*0x20 + -0x18);\n                piVar1 = iVar2 + 0x28 + uVar4 * 0x20;\n                *piVar1 = *piVar1 + 1;\n                piVar1 = iVar2 + 0x38 + uVar4 * 0x20;\n                *piVar1 = *piVar1 + *(*0x20 + 0x10);\n                *(*0x20 + -0x38) = 0x42b019;\n                fcn.0040a740();\n                return;\n            }\n            *(*0x20 + -0x38) = 0x42b02f;\n            in_RAX = fcn.0045e420(3);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x42b03f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 699
    },
    "0042b140": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042b140(uint64_t arg1)\n\n{\n    double *pdVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong in_RDX;\n    uchar *unaff_RBX;\n    int64_t iVar4;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe0 && *0x20 + -0xe0 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x160;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x170) = *0x20 + -8;\n            *(*0x20 + -0x168) = 0x42b195;\n            fcn.0045e694();\n            unaff_RBP = *(*0x20 + -0x170);\n            unaff_RDI = *(*(unaff_R14 + 0x30) + 0x90);\n            if ((unaff_RDI == 0) || (unaff_R14 == unaff_RDI)) {\n                unaff_RBX = *0x20 + -0x110;\n                unaff_RDI = 0x20;\n                *(*0x20 + -0x168) = 0x42b1f7;\n                arg1 = fcn.00454460(0x20);\n            }\n            else {\n                *(*0x20 + -0x160) = 0;\n                unaff_RBX = 0xffffffffffffffff;\n                *(*0x20 + -0x168) = 0x42b1df;\n                arg1 = fcn.004514c0(0, in_RDX, *0x20 + -0x110, 0x20);\n            }\n            if (arg1 < 0x21) break;\n            in_RDX = 0x20;\n            *(*0x20 + -0x168) = 0x42b313;\n            in_RAX = fcn.0045e460(arg1, 0x20);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x42b32d;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    *(*0x20 + -0x168) = 0x42b22c;\n    fcn.0042a7c0(*0x20 + -0x110);\n    *(*0x20 + -0x168) = 0x42b231;\n    uVar2 = fcn.0042a760();\n    *(*0x20 + -0x10) = uVar2;\n    *(*0x20 + -0x168) = 0x42b247;\n    fcn.0040a520();\n    if (*(*0x20 + 0x20) == 2) {\n        iVar3 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + 8);\n        if (iVar4 < iVar3) {\n            pdVar1 = *(*0x20 + -0x10);\n            *pdVar1 = iVar3 / iVar4 + *pdVar1;\n            pdVar1[1] = pdVar1[1] + iVar3;\n            goto code_r0x0042b2ea;\n        }\n    }\n    else {\n        iVar3 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + 8);\n    }\n    if (*(*0x20 + 0x20) == 3) {\n        pdVar1 = *(*0x20 + -0x10);\n        *pdVar1 = iVar3 + *pdVar1;\n        pdVar1[1] = pdVar1[1] + iVar3 * iVar4;\n    }\n    else {\n        pdVar1 = *(*0x20 + -0x10);\n        *pdVar1 = *0x4c9f28 + *pdVar1;\n        pdVar1[1] = pdVar1[1] + iVar4;\n    }\ncode_r0x0042b2ea:\n    *(*0x20 + -0x168) = 0x42b2f6;\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 1163
    },
    "0042cd00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0042cd00(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    iVar4 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar4 == 0) {\n        fcn.0040a520(in_RAX + 0xdd0);\n    }\n    else {\n        LOCK();\n        piVar1 = iVar4 + 0x2274;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        if ((iVar2 + 1U & 1) == 0) goto code_r0x0042cd93;\n    }\n    uVar5 = *(in_RAX + 0xdc8) % 3;\n    if (uVar5 < 3) {\n        return in_RAX + uVar5 * 0x498;\n    }\n    fcn.0045e420(3);\ncode_r0x0042cd93:\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.004354c0();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00433580();\n    pcVar3 = swi(3);\n    iVar4 = (*pcVar3)();\n    return iVar4;\n}\n",
        "token_count": 337
    },
    "0042ea80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ea80(void)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x24) = 0;\n            *(*0x20 + -0x1c) = 0;\n            *(*0x20 + -0x70) = *0x544bb0;\n            *(*0x20 + -0x68) = *0x20 + -0x20;\n            *(*0x20 + -0x60) = *0x20 + -0x24;\n            *(*0x20 + -0x58) = *0x20 + -0x1c;\n            *(*0x20 + -0x78) = 0x42eade;\n            fcn.00430980();\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            uVar10 = 0;\n            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n            if ((*(*0x20 + -0x20) < 10) ||\n               (((*(*0x20 + -0x20) == 10 && (*(*0x20 + -0x24) == 0)) && (*(*0x20 + -0x1c) < 0x3ad7)))) {\n                return;\n            }\n            *(*0x20 + -0x78) = 0x42eb1f;\n            iVar3 = fcn.00430820();\n            puVar1 = iVar3 + 3;\n            *(*0x20 + -0x10) = puVar1;\n            uVar2 = *puVar1;\n            *(*0x20 + -0x25) = uVar2;\n            *puVar1 = uVar2 | 0x80;\n            *(*0x20 + -0x78) = 0x42eb4a;\n            fcn.0042f2e0(0x21);\n            uVar5 = *0x598508;\n            if (*0x598508 < 0x106) {\n                *(*0x20 + -0x18) = *0x598508;\n                *(*0x20 + -0x78) = 0x42eb76;\n                fcn.0045eda0(*0x598508);\n                iVar3 = *(*0x20 + -0x18);\n                for (iVar4 = 0; iVar4 < 0x20; iVar4 = iVar4 + 1) {\n                    uVar5 = iVar3 + iVar4 * 2;\n                    if (0x20a < uVar5) goto code_r0x0042ecea;\n                    *(uVar5 + 0x599020) = *((*(iVar4 + 0x59920a) >> 4) + 0x4aa077);\n                    if (0x20a < iVar3 + iVar4 * 2 + 1U) goto code_r0x0042ecdd;\n                    *(uVar5 + 0x599021) = *((*(iVar4 + 0x59920a) & 0xf) + 0x4aa077);\n                }\n                uVar5 = iVar3 + 0x40;\n                while( true ) {\n                    if (0x209 < uVar5) {\n                        *(*0x20 + -0x70) = _sym.imp.kernel32.dll_CreateFileA;\n                        *(*0x20 + -0x68) = 0x599020;\n                        *(*0x20 + -0x60) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x50) = 0;\n                        *(*0x20 + -0x48) = 3;\n                        *(*0x20 + -0x40) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x78) = 0x42ec5f;\n                        fcn.00430b80();\n                        *(*0x20 + -0x78) = 0x42ec76;\n                        fcn.0045f960();\n                        if (*(*0x20 + -0x70) != 3) {\n                            *0x598342 = 1;\n                            return;\n                        }\n                        **(*0x20 + -0x10) = *(*0x20 + -0x25);\n                        *(*0x20 + -0x78) = 0x42ec9f;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x78) = 0x42ecb0;\n                        fcn.004357c0();\n                        *(*0x20 + -0x78) = 0x42ecb5;\n                        fcn.00434f40();\n                        return;\n                    }\n                    if (0x20a < uVar5) break;\n                    *(uVar5 + 0x599020) = 0x41;\n                    uVar5 = uVar5 + 1;\n                }\n                *(*0x20 + -0x78) = 0x42ecdd;\n                fcn.0045e420(0x20b);\ncode_r0x0042ecdd:\n                *(*0x20 + -0x78) = 0x42ecea;\n                fcn.0045e420(0x20b);\ncode_r0x0042ecea:\n                uVar5 = 0x20b;\n                *(*0x20 + -0x78) = 0x42ecf7;\n                fcn.0045e420(0x20b);\n            }\n            *(*0x20 + -0x78) = 0x42ed05;\n            fcn.0045e480(uVar5, 0x105);\n        }\n        *(puVar6 + -8) = 0x42ed0b;\n        fcn.0045bdc0();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1518
    },
    "00434120": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00434120(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uchar uVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    \ncode_r0x00434120:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar6 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar7 = *(*(unaff_R14 + 0x30) + 0x90);\n        if ((iVar7 == 0) || (*(iVar7 + 0x90) != 2)) {\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = 0;\n            iVar4 = 0;\n            iVar5 = 0;\n            iVar7 = 0;\n            iVar8 = 0;\n            iVar9 = 0;\n            do {\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x50) = iVar5;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x5a) = uVar3;\n                *(*0x20 + -0x30) = iVar8;\n                uVar10 = *(in_RAX + 0x90);\n                if (uVar10 < 5) {\n                    if (uVar10 != 1) {\n                        if (uVar10 == 2) {\n                            if (*(in_RAX + 0xb2) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0xb1) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0x10) == -0x522) {\n                                if (*(in_RAX + 0x30) == iVar4) {\n                                    bVar11 = *(iVar4 + 0x300) == iVar5;\n                                }\n                                else {\n                                    bVar11 = false;\n                                }\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                            if (!bVar11) {\n                                *(*0x20 + -0x78) = 0x434238;\n                                cVar2 = fcn.00437960(0x1002);\n                                if (cVar2 == '\\0') {\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                    iVar4 = *(*0x20 + -0x18);\n                                    iVar5 = *(*0x20 + -0x50);\n                                    iVar7 = *(*0x20 + -0x38);\n                                }\n                                else {\n                                    iVar7 = *(*0x20 + 8);\n                                    *(iVar7 + 0xb1) = 0x101;\n                                    *(iVar7 + 0x10) = 0xfffffffffffffade;\n                                    iVar7 = *(iVar7 + 0x30);\n                                    *(*0x20 + -0x10) = iVar7;\n                                    iVar5 = *(iVar7 + 0x300);\n                                    *(*0x20 + -0x4c) = iVar5;\n                                    if (*(*0x20 + -0x18) == iVar7) {\n                                        bVar11 = iVar5 != *(*0x20 + -0x50);\n                                    }\n                                    else {\n                                        bVar11 = true;\n                                    }\n                                    *(*0x20 + -0x59) = bVar11;\n                                    *(*0x20 + -0x78) = 0x4342a5;\n                                    fcn.004375a0(2);\n                                    if (*0x598838 == 0) {\n                                        if (*(*0x20 + -0x59) == '\\0') {\n                                            iVar7 = *(*0x20 + -0x38);\n                                        }\n                                        else {\n                                            *(*0x20 + -0x78) = 0x4342c5;\n                                            fcn.0045fdc0();\n                                            iVar7 = *(*0x20 + -0x38);\n                                            if (iVar7 <= *(*0x20 + -0x70)) {\n                                                *(*0x20 + -0x48) = *(*0x20 + -0x70);\n                                                *(*0x20 + -0x78) = 0x4342f4;\n                                                fcn.00430ea0();\n                                                iVar7 = *(*0x20 + -0x48) + 5000;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        iVar7 = *(*0x20 + -0x38);\n                                    }\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    iVar4 = *(*0x20 + -0x10);\n                                    iVar5 = *(*0x20 + -0x4c);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                }\n                            }\n                            goto code_r0x00434410;\n                        }\n                        if (uVar10 < 3) goto code_r0x0043437a;\n                    }\ncode_r0x004343d2:\n                    *(*0x20 + -0x5a) = uVar3;\n                    *(*0x20 + -0x78) = 0x4343e6;\n                    cVar2 = fcn.00437960(uVar10 | 0x1000);\n                    if (cVar2 != '\\0') {\n                        piVar1 = *(*0x20 + 8);\n                        *(piVar1 + 0xb1) = 0;\n                        piVar1[2] = *piVar1 + 0x13a0;\n                        return piVar1;\n                    }\n                    iVar8 = *(*0x20 + -0x30);\n                    iVar9 = *(*0x20 + -0x40);\n                    uVar3 = *(*0x20 + -0x5a);\n                    iVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + -0x50);\n                    iVar7 = *(*0x20 + -0x38);\n                }\n                else {\n                    if (uVar10 == 6) {\n                        return NULL;\n                    }\n                    if (uVar10 != 8) {\n                        if (uVar10 == 9) {\n                            *(*0x20 + -0x78) = 0x43439a;\n                            cVar2 = fcn.00437f20(4);\n                            if (cVar2 != '\\0') {\n                                uVar10 = 4;\n                                uVar3 = 1;\n                                goto code_r0x004343d2;\n                            }\n                            iVar8 = *(*0x20 + -0x30);\n                            iVar9 = *(*0x20 + -0x40);\n                            uVar3 = *(*0x20 + -0x5a);\n                            iVar4 = *(*0x20 + -0x18);\n                            iVar5 = *(*0x20 + -0x50);\n                            iVar7 = *(*0x20 + -0x38);\n                        }\n                        else {\ncode_r0x0043437a:\n                            if ((uVar10 >> 0xc & 1) == 0) goto code_r0x00434526;\n                        }\n                    }\n                }\ncode_r0x00434410:\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x50) = iVar5;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x5a) = uVar3;\n                if (iVar8 == 0) {\n                    *(*0x20 + -0x78) = 0x43442c;\n                    fcn.0045fdc0();\n                    iVar9 = *(*0x20 + -0x70) + 10000;\n                }\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x78) = 0x434453;\n                fcn.0045fdc0();\n                if (*(*0x20 + -0x70) < *(*0x20 + -0x40)) {\n                    *(*0x20 + -0x70) = 10;\n                    *(*0x20 + -0x78) = 0x43447c;\n                    fcn.0045db40();\n                    unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                    iVar9 = *(*0x20 + -0x40);\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x4b2ad0;\n                    *(*0x20 + -0x78) = 0x4344a8;\n                    fcn.0045bc80();\n                    *(*0x20 + -0x78) = 0x4344bf;\n                    fcn.0045fdc0();\n                    unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                    iVar9 = *(*0x20 + -0x70) + 5000;\n                }\n                iVar8 = *(*0x20 + -0x30) + 1;\n                in_RAX = *(*0x20 + 8);\n                iVar7 = *(*0x20 + -0x38);\n                iVar5 = *(*0x20 + -0x50);\n                iVar4 = *(*0x20 + -0x18);\n                uVar3 = *(*0x20 + -0x5a);\n            } while( true );\n        }\n        goto code_r0x0043464b;\n    }\n    goto code_r0x0043465d;\ncode_r0x00434526:\n    *(*0x20 + -0x20) = unaff_R14;\n    *(*0x20 + -0x54) = *(in_RAX + 0x90);\n    *(*0x20 + -0x28) = *(in_RAX + 0x98);\n    *(*0x20 + -0x78) = 0x434547;\n    fcn.00434ec0();\n    *(*0x20 + -0x78) = 0x434558;\n    fcn.004357c0();\n    *(*0x20 + -0x78) = 0x434565;\n    fcn.00435740();\n    *(*0x20 + -0x78) = 0x434576;\n    fcn.004357c0();\n    *(*0x20 + -0x78) = 0x434585;\n    fcn.004354c0();\n    *(*0x20 + -0x78) = 0x434596;\n    fcn.004357c0();\n    *(*0x20 + -0x78) = 0x4345a5;\n    fcn.004354c0();\n    *(*0x20 + -0x78) = 0x4345aa;\n    fcn.00435120();\n    *(*0x20 + -0x78) = 0x4345af;\n    fcn.00434f40();\n    *(*0x20 + -0x58) = *(*(*0x20 + -0x20) + 0x90);\n    *(*0x20 + -0x28) = *(*(*0x20 + -0x20) + 0x98);\n    *(*0x20 + -0x78) = 0x4345cf;\n    fcn.00434ec0();\n    *(*0x20 + -0x78) = 0x4345e5;\n    fcn.004357c0();\n    *(*0x20 + -0x78) = 0x4345ef;\n    fcn.00435740();\n    *(*0x20 + -0x78) = 0x434605;\n    fcn.004357c0();\n    *(*0x20 + -0x78) = 0x43460f;\n    fcn.004354c0();\n    *(*0x20 + -0x78) = 0x434625;\n    fcn.004357c0();\n    *(*0x20 + -0x78) = 0x434630;\n    fcn.004354c0();\n    *(*0x20 + -0x78) = 0x434635;\n    fcn.00435120();\n    *(*0x20 + -0x78) = 0x43463a;\n    fcn.00434f40();\n    *(*0x20 + -0x78) = 0x43464b;\n    fcn.00433580();\ncode_r0x0043464b:\n    *(*0x20 + -0x78) = 0x43465c;\n    in_RAX = fcn.00433580();\ncode_r0x0043465d:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + -8) = 0x434667;\n    fcn.00460800();\n    in_RAX = *(puVar6 + 8);\n    *0x20 = puVar6;\n    goto code_r0x00434120;\n}\n",
        "token_count": 3019
    },
    "00434980": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00434980(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t *in_RAX;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = in_RAX[6];\n            if (*(uVar6 + 0x90) != in_RAX) {\n                return 0;\n            }\n            if ((((*(uVar6 + 0xa0) == 0) || (*(uVar6 + 0xd8) != 0)) || (*(uVar6 + 0xc0) != 0)) ||\n               ((*(uVar6 + 0xd0) != 0 || (*(*(uVar6 + 0xa0) + 4) != 1)))) {\n                return 0;\n            }\n            if ((arg1 < *in_RAX) || (arg1 - *in_RAX < *0x52d360)) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x78) = 0x434a27;\n            iVar4 = fcn.0044bc60();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x10) = iVar4;\n            *(*0x20 + -0x18) = unaff_RBX;\n            unaff_RDI = *(*0x20 + 0x10);\n            *(*0x20 + -0x78) = 0x434a49;\n            iVar3 = fcn.0044cb80(0);\n            if (iVar3 == -2) {\n                return 0;\n            }\n            iVar4 = *(*0x20 + -0x10);\n            if (*(iVar4 + 0x2b) < 2) {\n                iVar7 = *(*0x20 + -0x18);\n                uVar6 = 0;\n            }\n            else {\n                uVar1 = *(iVar4 + 0x2b + *(iVar4 + 0x1c) * 4 + 5);\n                iVar7 = *(*0x20 + -0x18);\n                unaff_RDI = (uVar1 == 0xffffffff) - 1;\n                uVar6 = uVar1 + *(iVar7 + 0x140) & unaff_RDI;\n            }\n            if ((uVar6 == 0) || ((*(iVar4 + 0x29) & 4) != 0)) {\n                return 0;\n            }\n            *(*0x20 + -0x44) = iVar3;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x20) = iVar4 + 0x2b;\n            *(*0x20 + -0x78) = 0x434acf;\n            piVar5 = fcn.0044c400();\n            if (*(*(*0x20 + -0x10) + 0x2b) < 4) {\n                unaff_RBX = *(*0x20 + -0x18);\n                uVar6 = 0;\n            }\n            else {\n                uVar1 = *(*(*0x20 + -0x20) + *(*(*0x20 + -0x10) + 0x1c) * 4 + 0xd);\n                unaff_RBX = *(*0x20 + -0x18);\n                uVar6 = uVar1 + *(unaff_RBX + 0x140) & (uVar1 == 0xffffffff) - 1;\n            }\n            if (uVar6 == 0) {\ncode_r0x00434b8a:\n                if (iVar7 < 8) {\n                    arg2 = 0;\n                }\n                else {\n                    arg2 = CONCAT71(0x2e656d69746e75, *piVar5 == 0x2e656d69746e7572);\n                }\n                if (arg2 == '\\0') {\n                    if (iVar7 < 0x11) {\n                        cVar2 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x38) = iVar7;\n                        *(*0x20 + -0x28) = piVar5;\n                        *(*0x20 + -0x78) = 0x434bd4;\n                        cVar2 = fcn.004025e0(0x11, arg2);\n                        iVar7 = *(*0x20 + -0x38);\n                        piVar5 = *(*0x20 + -0x28);\n                    }\n                }\n                else {\n                    cVar2 = '\\x01';\n                }\n                if (cVar2 != '\\0') {\n                    return 0;\n                }\n                if (iVar7 < 8) {\n                    bVar9 = false;\n                }\n                else {\n                    bVar9 = *piVar5 == 0x2e7463656c666572;\n                }\n                if (bVar9) {\n                    return 0;\n                }\n                if (*(*0x20 + -0x44) == -5) {\n                    *(*0x20 + -0x78) = 0x434c8a;\n                    fcn.0044bc00();\n                    return 1;\n                }\n                if (1 < *(*0x20 + -0x44) + 4U) {\n                    return 1;\n                }\n                uVar6 = *(*0x20 + -0x40);\n                if (((uVar6 != 0) && (uVar6 <= *(*0x20 + 0x10))) && (*(*0x20 + 0x10) - uVar6 < 0x15)) {\n                    return 1;\n                }\n                unaff_RBX = 0xe;\n                *(*0x20 + -0x78) = 0x434cf3;\n                fcn.00433580();\n            }\n            else {\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x28) = piVar5;\n                *(*0x20 + -0x30) = uVar6;\n                unaff_RDI = *(*0x20 + 0x10);\n                *(*0x20 + -0x78) = 0x434b45;\n                iVar3 = fcn.0044ca40(2);\n                if (iVar3 < 0) {\n                    iVar7 = *(*0x20 + -0x38);\n                    piVar5 = *(*0x20 + -0x28);\n                    goto code_r0x00434b8a;\n                }\n                if (iVar3 < 0x100000) {\n                    uVar1 = *(*(*0x20 + -0x30) + 4 + iVar3 * 0x10);\n                    iVar7 = *(*0x20 + -0x18);\n                    *(*0x20 + -0x78) = 0x434b74;\n                    piVar5 = fcn.0044c540(uVar1);\n                    goto code_r0x00434b8a;\n                }\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x78) = 0x434cfd;\n            in_RAX = fcn.0045e420(0x100000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x434d17;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1946
    },
    "004375a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004375a0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if ((unaff_EBX - 0x1001 < 4) || (unaff_EBX == 0x1009)) {\n                if (arg1 == (unaff_EBX & 0xffffefff)) {\n                    LOCK();\n                    if (unaff_EBX == *(in_RAX + 0x90)) {\n                        *(in_RAX + 0x90) = arg1;\n                        return unaff_EBX;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x43760b;\n                fcn.00434ec0();\n                *(*0x20 + -0x48) = 0x43761c;\n                fcn.004357c0();\n                *(*0x20 + -0x48) = 0x437626;\n                fcn.00435740();\n                *(*0x20 + -0x48) = 0x437637;\n                fcn.004357c0();\n                *(*0x20 + -0x48) = 0x437645;\n                fcn.00435620();\n                *(*0x20 + -0x48) = 0x437656;\n                fcn.004357c0();\n                *(*0x20 + -0x48) = 0x437665;\n                fcn.00435620();\n                *(*0x20 + -0x48) = 0x43766a;\n                fcn.00435120();\n                *(*0x20 + -0x48) = 0x43766f;\n                fcn.00434f40();\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x2c) = *(*(*0x20 + 8) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x48) = 0x437695;\n                fcn.00434ec0();\n                *(*0x20 + -0x48) = 0x4376a6;\n                fcn.004357c0();\n                *(*0x20 + -0x48) = 0x4376b0;\n                fcn.00435740();\n                *(*0x20 + -0x48) = 0x4376c5;\n                fcn.004357c0();\n                *(*0x20 + -0x48) = 0x4376cf;\n                fcn.004354c0();\n                *(*0x20 + -0x48) = 0x4376e5;\n                fcn.004357c0();\n                *(*0x20 + -0x48) = 0x4376f0;\n                fcn.004354c0();\n                *(*0x20 + -0x48) = 0x4376f5;\n                fcn.00435120();\n                *(*0x20 + -0x48) = 0x4376fa;\n                fcn.00434f40();\n                *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n                *(*0x20 + -0x48) = 0x43771a;\n                fcn.00434ec0();\n                *(*0x20 + -0x48) = 0x43772b;\n                fcn.004357c0();\n                *(*0x20 + -0x48) = 0x437735;\n                fcn.00435740();\n                *(*0x20 + -0x48) = 0x437746;\n                fcn.004357c0();\n                *(*0x20 + -0x48) = 0x437750;\n                fcn.004354c0();\n                *(*0x20 + -0x48) = 0x437765;\n                fcn.004357c0();\n                *(*0x20 + -0x48) = 0x437770;\n                fcn.004354c0();\n                *(*0x20 + -0x48) = 0x437775;\n                fcn.00435120();\n                *(*0x20 + -0x48) = 0x43777a;\n                fcn.00434f40();\n                *(*0x20 + -0x48) = 0x43778b;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x48) = 0x437790;\n            fcn.00434ec0();\n            *(*0x20 + -0x48) = 0x4377a5;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x4377af;\n            fcn.00435740();\n            *(*0x20 + -0x48) = 0x4377c5;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x4377d0;\n            fcn.00435620();\n            *(*0x20 + -0x48) = 0x4377e5;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x4377f0;\n            fcn.00435620();\n            *(*0x20 + -0x48) = 0x4377f5;\n            fcn.00435120();\n            *(*0x20 + -0x48) = 0x4377fa;\n            fcn.00434f40();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x24) = *(*(*0x20 + 8) + 0x90);\n            *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n            *(*0x20 + -0x48) = 0x437825;\n            fcn.00434ec0();\n            *(*0x20 + -0x48) = 0x437836;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x437845;\n            fcn.00435740();\n            *(*0x20 + -0x48) = 0x437856;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x437865;\n            fcn.004354c0();\n            *(*0x20 + -0x48) = 0x437876;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x437885;\n            fcn.004354c0();\n            *(*0x20 + -0x48) = 0x43788a;\n            fcn.00435120();\n            *(*0x20 + -0x48) = 0x43788f;\n            fcn.00434f40();\n            arg1._0_4_ = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x28) = arg1;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x48) = 0x4378af;\n            fcn.00434ec0();\n            *(*0x20 + -0x48) = 0x4378c5;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x4378cf;\n            fcn.00435740();\n            *(*0x20 + -0x48) = 0x4378e5;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x4378ef;\n            fcn.004354c0();\n            *(*0x20 + -0x48) = 0x437905;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x437910;\n            fcn.004354c0();\n            *(*0x20 + -0x48) = 0x437915;\n            fcn.00435120();\n            *(*0x20 + -0x48) = 0x43791a;\n            fcn.00434f40();\n            unaff_EBX = 0x37;\n            *(*0x20 + -0x48) = 0x43792b;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x43793e;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 2265
    },
    "00437960": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00437960(ulong arg1)\n\n{\n    uint32_t *puVar1;\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar3;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            if ((unaff_EBX - 1 < 4) && (arg1 == (unaff_EBX | 0x1000))) {\n                LOCK();\n                puVar1 = in_RAX + 0x90;\n                bVar3 = unaff_EBX == *puVar1;\n                if (bVar3) {\n                    *puVar1 = arg1;\n                }\n                else {\n                    unaff_EBX = *puVar1;\n                }\n                return unaff_EBX & 0xffffff00 | bVar3;\n            }\n            *(*0x20 + -0x20) = 0x4379b1;\n            fcn.00434ec0();\n            *(*0x20 + -0x20) = 0x4379c5;\n            fcn.004357c0();\n            *(*0x20 + -0x20) = 0x4379d0;\n            fcn.00435620();\n            *(*0x20 + -0x20) = 0x4379e5;\n            fcn.004357c0();\n            *(*0x20 + -0x20) = 0x4379f0;\n            fcn.00435620();\n            *(*0x20 + -0x20) = 0x4379f5;\n            fcn.00435120();\n            *(*0x20 + -0x20) = 0x4379fa;\n            fcn.00434f40();\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x437a0b;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_EBX;\n        *(puVar2 + 0x14) = arg1;\n        *(puVar2 + -8) = 0x437a1e;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_EBX = *(puVar2 + 0x10);\n        arg1._0_4_ = *(puVar2 + 0x14);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 698
    },
    "00438280": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438280(void)\n\n{\n    uchar uVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xd8) < 1) {\n                *(*0x20 + -0x20) = unaff_R14;\n                *(*0x20 + -0x68) = 0x4382bc;\n                fcn.0040a520();\n                uVar1 = *0x5460e8;\n                *0x5460ec = *0x598388;\n                *0x5460e8 = 1;\n                *(*0x20 + -0x68) = 0x4382dd;\n                fcn.00440e20(uVar1);\n                *(*(*(*(*0x20 + -0x20) + 0x30) + 0xa0) + 4) = 3;\n                *0x5460ec = *0x5460ec + -1;\n                *(*0x20 + -0x10) = *0x5455b0;\n                *(*0x20 + -0x30) = *0x5455b8;\n                iVar3 = 0;\n                iVar8 = *0x5455b0;\n                uVar6 = *0x5455b8;\n                while (iVar3 < uVar6) {\n                    iVar5 = *(iVar8 + iVar3 * 8);\n                    if (*(iVar5 + 4) == 2) {\n                        LOCK();\n                        bVar9 = *(iVar5 + 4) == 2;\n                        if (bVar9) {\n                            *(iVar5 + 4) = 3;\n                        }\n                    }\n                    else {\n                        bVar9 = false;\n                    }\n                    unaff_RSI = iVar3;\n                    if (bVar9) {\n                        if (*0x54a530 != '\\0') {\n                            *(*0x20 + -0x38) = iVar3;\n                            *(*0x20 + -0x28) = iVar5;\n                            *(*0x20 + -0x68) = 0x43836d;\n                            fcn.00451220();\n                            *(*0x20 + -0x68) = 0x438377;\n                            fcn.00450aa0();\n                            iVar8 = *(*0x20 + -0x10);\n                            uVar6 = *(*0x20 + -0x30);\n                            iVar5 = *(*0x20 + -0x28);\n                            iVar3 = *(*0x20 + -0x38);\n                        }\n                        *(iVar5 + 0x14) = *(iVar5 + 0x14) + 1;\n                        *0x5460ec = *0x5460ec + -1;\n                        unaff_RSI = iVar3;\n                    }\n                    iVar3 = unaff_RSI + 1;\n                }\n                *(*0x20 + -0x68) = 0x4383a5;\n                fcn.0045fdc0();\n                *(*0x20 + -0x48) = *(*0x20 + -0x60);\n                while( true ) {\n                    *(*0x20 + -0x68) = 0x4383d9;\n                    iVar3 = fcn.00441e00();\n                    if (iVar3 == 0) break;\n                    *(iVar3 + 4) = 3;\n                    *0x5460ec = *0x5460ec + -1;\n                }\n                *(*0x20 + -0x4c) = *0x5460ec;\n                *(*0x20 + -0x68) = 0x4383f6;\n                fcn.0040a740();\n                if (0 < *(*0x20 + -0x4c)) {\n                    while( true ) {\n                        *(*0x20 + -0x68) = 0x438418;\n                        cVar2 = fcn.0040ac80();\n                        if (cVar2 != '\\0') break;\n                        *(*0x20 + -0x68) = 0x438407;\n                        fcn.00440e20();\n                    }\n                    *0x5460f0 = 0;\n                }\n                if (*0x5460ec == 0) {\n                    iVar4 = 0;\n                    iVar3 = 0;\n                    iVar8 = 0;\n                    iVar5 = *0x5455b0;\n                    uVar6 = *0x5455b8;\n                    do {\n                        unaff_RSI = iVar8;\n                        if (uVar6 <= iVar4) {\ncode_r0x00438456:\n                            uVar6 = uVar6 & 0xffffffffffffff00 | *0x598346;\n                            iVar5 = iVar8;\n                            if (*0x598346 != 0) {\n                                *(*0x20 + -0x40) = iVar3;\n                                *(*0x20 + -0x18) = iVar8;\n                                *(*0x20 + -0x68) = 0x43847c;\n                                fcn.0040a520();\n                                *(*0x20 + -0x68) = 0x43848a;\n                                fcn.0040a520();\n                                iVar3 = *(*0x20 + -0x40);\n                                iVar5 = *(*0x20 + -0x18);\n                            }\n                            if (iVar3 == 0) {\n                                return;\n                            }\n                            *(*0x20 + -0x68) = 0x4384ae;\n                            iVar4 = fcn.00433580();\n                            iVar8 = unaff_RSI;\n                        }\n                        if (*(*(iVar5 + iVar4 * 8) + 4) != 3) {\n                            iVar3 = 0x2e;\n                            iVar8 = 0x4b09b3;\n                        }\n                        iVar4 = iVar4 + 1;\n                    } while( true );\n                }\n                iVar3 = 0x29;\n                iVar8 = 0x4afeeb;\n                goto code_r0x00438456;\n            }\n            *(*0x20 + -0x68) = 0x4384ee;\n            fcn.00433580();\n        }\n        *(puVar7 + -8) = 0x4384f4;\n        fcn.0045bdc0();\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1553
    },
    "0043b7e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0043b7e0(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t arg1;\n    int64_t iVar8;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uchar uVar11;\n    uint64_t arg1_00;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar7 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(*0x20 + -0x10) = uVar7;\n            iVar6 = 0;\n            iVar9 = 0;\n            uVar11 = 0;\n            while( true ) {\n                if (3 < iVar6) {\n                    return 0;\n                }\n                uVar12 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar3 = ZEXT816(uVar12) * ZEXT816(uVar12 ^ 0xe7037ed1a0b428db);\n                *(*(unaff_R14 + 0x30) + 0xf0) = uVar12;\n                if (*0x545740 == 0) goto code_r0x0043bb32;\n                uVar12 = (SUB168(auVar3, 0) ^ SUB168(auVar3 >> 0x40, 0)) & 0xffffffff;\n                if (*0x545750 == 0) goto code_r0x0043bb2d;\n                uVar5 = (uVar12 / *0x545740) % (*0x545750 & 0xffffffff);\n                arg1_00 = *0x545750;\n                if (*0x545750 <= uVar5) break;\n                *(*0x20 + -0x50) = iVar6;\n                arg1 = uVar5 & 0xffffffffffffff00 | iVar6 == 3;\n                *(*0x20 + -0x5b) = iVar6 == 3;\n                uVar1 = *(*0x545748 + uVar5 * 4);\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x24) = *0x545740;\n                *(*0x20 + -0x20) = uVar12 % *0x545740;\n                *(*0x20 + -0x1c) = uVar1;\n                while (*(*0x20 + -0x24) != *(*0x20 + -0x28)) {\n                    if (*0x5460e8 != '\\0') {\n                        return 0;\n                    }\n                    uVar2 = *(*0x20 + -0x20);\n                    arg1_00 = *0x5455b8;\n                    if (*0x5455b8 <= uVar2) {\ncode_r0x0043bb1d:\n                        *(*0x20 + -0x80) = 0x43bb25;\n                        fcn.0045e420(arg1_00);\n                        goto code_r0x0043bb25;\n                    }\n                    arg1_00 = *(*0x5455b0 + uVar2 * 8);\n                    uVar12 = *0x5455b0;\n                    if (uVar7 != arg1_00) {\n                        if (iVar6 != 3) {\n                            bVar13 = false;\ncode_r0x0043b980:\n                            if (bVar13) {\n                                *(*0x20 + -0x18) = arg1_00;\n                                *(*0x20 + -0x30) = iVar9;\n                                *(*0x20 + -0x5a) = uVar11;\n                                *(*0x20 + -0x80) = 0x43b9a5;\n                                iVar4 = fcn.0043c560();\n                                if (in_RAX == 0) {\n                                    iVar8 = *(*0x20 + -0x30);\ncode_r0x0043b9c0:\n                                    iVar9 = iVar8;\n                                }\n                                else {\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = in_RAX;\n                                    if ((iVar8 != 0) && (iVar8 <= in_RAX)) goto code_r0x0043b9c0;\n                                }\n                                if (iVar6 == '\\0') {\n                                    uVar11 = *(*0x20 + -0x5a);\n                                }\n                                else {\n                                    *(*0x20 + -0x58) = iVar4;\n                                    *(*0x20 + -0x38) = iVar9;\n                                    *(*0x20 + -0x80) = 0x43b9e5;\n                                    iVar6 = fcn.00442420();\n                                    if (iVar6 != 0) {\n                                        return iVar6;\n                                    }\n                                    iVar4 = *(*0x20 + -0x58);\n                                    iVar9 = *(*0x20 + -0x38);\n                                    uVar11 = 1;\n                                }\n                                arg1 = *(*0x20 + -0x5b);\n                                arg1_00 = *(*0x20 + -0x18);\n                                uVar7 = *(*0x20 + -0x10);\n                                iVar6 = *(*0x20 + -0x50);\n                                in_RAX = iVar4;\n                            }\n                            uVar5 = *(*0x20 + -0x20) >> 5;\n                            uVar12 = *0x545638;\n                            if (uVar5 < *0x545638) {\n                                uVar2 = *(*0x545630 + uVar5 * 4);\n                                uVar12 = uVar2;\n                                if ((uVar2 >> (*(*0x20 + -0x20) & 0x1f) & 1) == 0) {\n                                    *(*0x20 + -0x40) = iVar9;\n                                    *(*0x20 + -0x59) = uVar11;\n                                    *(*0x20 + -0x48) = in_RAX;\n                                    *(*0x20 + -0x80) = 0x43ba72;\n                                    iVar6 = fcn.00442780(arg1);\n                                    if (iVar6 != 0) {\n                                        return iVar6;\n                                    }\n                                    iVar6 = *(*0x20 + -0x50);\n                                    arg1 = *(*0x20 + -0x5b);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    uVar11 = *(*0x20 + -0x59);\n                                    in_RAX = *(*0x20 + -0x48);\n                                    uVar7 = *(*0x20 + -0x10);\n                                }\n                                goto code_r0x0043ba9f;\n                            }\n                            goto code_r0x0043bb0d;\n                        }\n                        uVar12 = *0x545678;\n                        if (uVar2 >> 5 < *0x545678) {\n                            bVar13 = (*(*0x545670 + (uVar2 >> 5) * 4) >> (uVar2 & 0x1f) & 1) != 0;\n                            goto code_r0x0043b980;\n                        }\ncode_r0x0043bb15:\n                        *(*0x20 + -0x80) = 0x43bb1d;\n                        fcn.0045e420(uVar12);\n                        goto code_r0x0043bb1d;\n                    }\ncode_r0x0043ba9f:\n                    *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                    uVar2 = *(*0x20 + -0x24);\n                    arg1_00 = uVar2;\n                    if (uVar2 == 0) {\n                        *(*0x20 + -0x80) = 0x43bb0d;\n                        fcn.00431c00();\ncode_r0x0043bb0d:\n                        *(*0x20 + -0x80) = 0x43bb15;\n                        fcn.0045e420(uVar12);\n                        goto code_r0x0043bb15;\n                    }\n                    *(*0x20 + -0x20) = (*(*0x20 + -0x20) + *(*0x20 + -0x1c)) % uVar2;\n                }\n                iVar6 = iVar6 + 1;\n            }\ncode_r0x0043bb25:\n            *(*0x20 + -0x80) = 0x43bb2d;\n            fcn.0045e420(arg1_00);\ncode_r0x0043bb2d:\n            *(*0x20 + -0x80) = 0x43bb32;\n            fcn.00431c00();\ncode_r0x0043bb32:\n            *(*0x20 + -0x80) = 0x43bb37;\n            in_RAX = fcn.00431c00();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + -8) = 0x43bb45;\n        fcn.0045bdc0();\n        in_RAX = *(puVar10 + 8);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2187
    },
    "00445440": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00445513)\n// WARNING: Removing unreachable block (ram,0x00445534)\n\nulong fcn.00445440(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0x5f < in_EAX) {\n                return 0;\n            }\n            LOCK();\n            uVar4 = in_EAX >> 5;\n            iVar3 = *0x5987dc + 1;\n            if (uVar4 < 3) {\n                if ((*(uVar4 * 4 + 0x5987b4) >> (in_EAX & 0x1f) & 1) == 0) {\n                    LOCK();\n                    return 0;\n                }\n                do {\n                    uVar2 = *(uVar4 * 4 + 0x5987a8);\n                    if ((uVar2 >> (in_EAX & 0x1f) & 1) != 0) {\n                        LOCK();\n                        return 1;\n                    }\n                    puVar1 = uVar4 * 4 + 0x5987a8;\n                    LOCK();\n                } while (uVar2 != *puVar1);\n                *0x5987dc = *0x5987dc + 1;\n                *puVar1 = uVar2 | 1 << (in_EAX & 0x1f);\n                if (*0x5987d8 == 0) {\n                    LOCK();\n                    *0x5987d8 = 2;\ncode_r0x00445559:\n                    LOCK();\n                    *0x5987dc = *0x5987dc + -1;\n                    return 1;\n                }\n                if (*0x5987d8 == 1) {\n                    LOCK();\n                    *0x5987d8 = 0;\n                    *(*0x20 + -0x20) = 0x445551;\n                    fcn.0040a820();\n                    goto code_r0x00445559;\n                }\n                if (*0x5987d8 == 2) goto code_r0x00445559;\n                *(*0x20 + -0x20) = 0x445589;\n                fcn.00433580();\n                iVar3 = *0x5987dc;\n            }\n            *0x5987dc = iVar3;\n            *(*0x20 + -0x20) = 0x445593;\n            in_EAX = fcn.0045e420(3);\n        }\n        *(puVar5 + 8) = in_EAX;\n        *(puVar5 + -8) = 0x44559d;\n        fcn.0045bdc0();\n        in_EAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 759
    },
    "0044a5a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0044a5a0(int64_t *param_1, ulong param_2, ulong param_3, int64_t *param_4)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    ulong in_RAX;\n    int64_t **ppiVar7;\n    int64_t iVar8;\n    ulong uVar9;\n    ulong uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t *piVar13;\n    uint *puVar14;\n    int64_t *piVar15;\n    int64_t iVar16;\n    int64_t **unaff_RBX;\n    uchar *puVar17;\n    ulong unaff_RBP;\n    int64_t **arg3;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar17 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x98 && *0x20 + -0x98 != *(unaff_R14 + 0x10)) {\n            puVar17 = *0x20 + -0x118;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 0x60) = in_RAX;\n            *(*0x20 + 8) = in_XMM15;\n            *(*0x20 + -0x128) = *0x20 + -8;\n            *(*0x20 + -0x120) = 0x44a5f5;\n            ppiVar7 = fcn.0045e6d0();\n            unaff_RBP = *(*0x20 + -0x128);\n            while( true ) {\n                piVar13 = ppiVar7[3];\n                piVar15 = ppiVar7[4];\n                arg3 = ppiVar7 + 3;\n                *(*0x20 + -0x68) = arg3;\n                if (1 < piVar15) break;\n                param_4 = ppiVar7[1];\n                piVar2 = ppiVar7[2];\n                if (param_4 == NULL) {\n                    if (piVar15 == NULL) {\n                        return 0;\n                    }\n                    if (piVar15 == 0x1) {\n                        *(*0x20 + 8) = *piVar13;\n                        *(*0x20 + -0x128) = unaff_RBP;\n                        *(*0x20 + -0x120) = 0x44aa91;\n                        iVar8 = fcn.0045ea3a();\n                        *(iVar8 + 0x20) = 0;\n                        *(iVar8 + 0x28) = 2;\n                        if (*0x5985b0 == 0) {\n                            *(iVar8 + 0x18) = iVar8 + 0x30;\n                        }\n                        else {\n                            *(*0x20 + -0x120) = 0x44aac5;\n                            iVar8 = fcn.0045e0a0(param_1, iVar8 + 0x30, arg3, param_4);\n                        }\n                        goto code_r0x0044ac1d;\n                    }\n                    break;\n                }\n                param_1 = **ppiVar7;\n                ppiVar7[1] = param_4 + -1;\n                ppiVar7[2] = piVar2 + -1;\n                piVar13 = (-(piVar2 + -1) >> 0x3f & 8) + *ppiVar7;\n                if (*0x5985b0 == 0) {\n                    *ppiVar7 = piVar13;\n                }\n                else {\n                    *(*0x20 + -0x120) = 0x44a666;\n                    fcn.0045e0a0(param_1, piVar13, arg3, param_4);\n                }\n                *(*0x20 + -0xd0) = param_1;\n                *(*0x20 + -0x120) = 0x44a673;\n                iVar8 = fcn.0044bc60();\n                if (iVar8 == 0) {\n                    if (*0x544c00 == 0) {\n                        ppiVar7 = *(*0x20 + 0x60);\n                        unaff_RBX = ppiVar7;\n                    }\n                    else {\n                        *(*0x20 + -0x120) = 0x44a69d;\n                        param_4 = fcn.0044acc0();\n                        iVar8 = *(*0x20 + 0x60);\n                        iVar16 = *(iVar8 + 0x20);\n                        uVar11 = iVar16 + unaff_RBX;\n                        uVar12 = *(iVar8 + 0x28);\n                        uVar9 = *(iVar8 + 0x18);\n                        if (uVar12 < uVar11) {\n                            *(*0x20 + -0xa8) = unaff_RBX;\n                            *(*0x20 + -0x70) = param_4;\n                            *(*0x20 + -0xb0) = iVar16;\n                            *(*0x20 + -0x120) = 0x44a6e5;\n                            uVar9 = fcn.00445800(uVar12);\n                            iVar16 = *(*0x20 + -0xb0);\n                            param_4 = *(*0x20 + -0x70);\n                        }\n                        *(*0x20 + -0xa8) = uVar12;\n                        *(*0x20 + -0xb0) = uVar11;\n                        *(*0x20 + -0x70) = uVar9;\n                        param_1 = uVar11 - iVar16;\n                        *(*0x20 + -0x120) = 0x44a747;\n                        fcn.004114a0(param_1);\n                        ppiVar7 = *(*0x20 + 0x60);\n                        ppiVar7[4] = *(*0x20 + -0xb0);\n                        ppiVar7[5] = *(*0x20 + -0xa8);\n                        unaff_RBX = ppiVar7;\n                        if (*0x5985b0 == 0) {\n                            ppiVar7[3] = *(*0x20 + -0x70);\n                        }\n                        else {\n                            *(*0x20 + -0x120) = 0x44a790;\n                            fcn.0045e0a0(param_1, *(*0x20 + -0x70), uVar9, param_4);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x78) = unaff_RBX;\n                    *(*0x20 + -0x80) = iVar8;\n                    *(*0x20 + -0x120) = 0x44a7aa;\n                    uVar9 = fcn.0044bb00();\n                    *(*0x20 + -0xc0) = uVar9;\n                    uVar9 = *(*0x20 + -0x78);\n                    *(*0x20 + -0x120) = 0x44a7c5;\n                    uVar10 = fcn.0044c400();\n                    *(*0x20 + -0x88) = uVar10;\n                    *(*0x20 + -200) = uVar9;\n                    *(*0x20 + -0x120) = 0x44a7df;\n                    uVar5 = fcn.0044bba0();\n                    uVar12 = *(*0x20 + -0xd0);\n                    uVar11 = *(*0x20 + -0xc0);\n                    if (uVar11 < uVar12) {\n                        uVar12 = uVar12 - 1;\n                    }\n                    iVar8 = *(*0x20 + -0x80);\n                    if (*(iVar8 + 0x2b) < 4) {\n                        unaff_RBX = *(*0x20 + -0x78);\n                        param_4 = NULL;\n                    }\n                    else {\n                        uVar1 = *(iVar8 + *(iVar8 + 0x1c) * 4 + 0x38);\n                        unaff_RBX = *(*0x20 + -0x78);\n                        param_4 = uVar1 + unaff_RBX[0x28] & (uVar1 == 0xffffffff) - 1;\n                    }\n                    if (param_4 == NULL) {\n                        uVar9 = *(*0x20 + -200);\n                        param_4 = *(*0x20 + -0x88);\n                        iVar16 = iVar8;\n                    }\n                    else {\n                        *(*0x20 + -0xd4) = uVar5;\n                        *(*0x20 + -0x90) = param_4;\n                        *(*0x20 + -0xd0) = uVar12;\n                        *(*0x20 + -0x120) = 0x44a888;\n                        iVar6 = fcn.0044cae0(2);\n                        if (iVar6 < 0) {\n                            iVar8 = *(*0x20 + -0x80);\n                            uVar9 = *(*0x20 + -200);\n                            param_4 = *(*0x20 + -0x88);\n                        }\n                        else {\n                            if (0xfffff < iVar6) goto code_r0x0044ac9e;\n                            puVar14 = *(*0x20 + -0x90) + iVar6 * 0x10;\n                            uVar5 = puVar14[1];\n                            uVar3 = puVar14[2];\n                            uVar4 = puVar14[3];\n                            *(*0x20 + -0xa0) = *puVar14;\n                            *(*0x20 + -0x9c) = uVar5;\n                            *(*0x20 + -0x98) = uVar3;\n                            *(*0x20 + -0x94) = uVar4;\n                            uVar9 = *(*0x20 + -0x78);\n                            *(*0x20 + -0x120) = 0x44a8e6;\n                            param_4 = fcn.0044c540(*(*0x20 + -0x9c));\n                            iVar8 = 0;\n                        }\n                        iVar16 = *(*0x20 + -0x80);\n                        uVar12 = *(*0x20 + -0xd0);\n                        uVar11 = *(*0x20 + -0xc0);\n                        unaff_RBX = *(*0x20 + -0x78);\n                    }\n                    *(*0x20 + -0x60) = in_XMM15;\n                    *(*0x20 + -0x128) = unaff_RBP;\n                    *(*0x20 + -0x120) = 0x44a938;\n                    iVar6 = fcn.0045e6d0();\n                    unaff_RBP = *(*0x20 + -0x128);\n                    *(*0x20 + -0x60) = uVar12;\n                    *(*0x20 + -0x58) = iVar8;\n                    *(*0x20 + -0x50) = param_4;\n                    *(*0x20 + -0x48) = uVar9;\n                    *(*0x20 + -0x20) = uVar11;\n                    *(*0x20 + -0x28) = iVar6;\n                    *(*0x20 + -0x18) = iVar16;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    ppiVar7 = *(*0x20 + 0x60);\n                    piVar15 = ppiVar7[4] + 1;\n                    piVar13 = ppiVar7[3];\n                    param_1 = ppiVar7[5];\n                    if (param_1 < piVar15) {\n                        *(*0x20 + -0x120) = 0x44a9af;\n                        piVar13 = fcn.00445800(param_1);\n                        iVar8 = *(*0x20 + 0x60);\n                        *(iVar8 + 0x28) = param_1;\n                        if (*0x5985b0 == 0) {\n                            *(iVar8 + 0x18) = piVar13;\n                        }\n                        else {\n                            *(*0x20 + -0x120) = 0x44a9d7;\n                            piVar13 = fcn.0045df80(param_1, iVar8, uVar9, param_4);\n                        }\n                        ppiVar7 = *(*0x20 + 0x60);\n                    }\n                    ppiVar7[4] = piVar15;\n                    if (*0x5985b0 == 0) {\n                        piVar13[piVar15 * 0xb + -0xb] = *(*0x20 + -0x60);\n                        *(*0x20 + -0x128) = unaff_RBP;\n                        *(*0x20 + -0x120) = 0x44aa2f;\n                        fcn.0045ea3a();\n                        unaff_RBP = *(*0x20 + -0x128);\n                        unaff_RBX = ppiVar7;\n                    }\n                    else {\n                        param_1 = *0x20 + -0x60;\n                        *(*0x20 + -0x120) = 0x44aa4f;\n                        fcn.004112e0(param_1);\n                        ppiVar7 = *(*0x20 + 0x60);\n                        unaff_RBX = ppiVar7;\n                    }\n                }\n            }\n            if (piVar15 == 0x2) {\n                *(*0x20 + 8) = *piVar13;\n                *(*0x20 + -0x128) = unaff_RBP;\n                *(*0x20 + -0x120) = 0x44ab0f;\n                iVar8 = fcn.0045ea3a();\n                unaff_RBP = *(*0x20 + -0x128);\n                uVar11 = *(iVar8 + 0x20);\n                if (1 < uVar11) {\n                    if (*0x5985b0 == 0) {\n                        *(iVar8 + 0x30) = *(*(iVar8 + 0x18) + 0x58);\n                        *(*0x20 + -0x128) = unaff_RBP;\n                        *(*0x20 + -0x120) = 0x44ab52;\n                        iVar8 = fcn.0045ea3a();\n                    }\n                    else {\n                        uVar11 = *(iVar8 + 0x18) + 0x58;\n                        *(*0x20 + -0x120) = 0x44ab6c;\n                        fcn.004112e0(uVar11);\n                        iVar8 = *(*0x20 + 0x60);\n                        arg3 = *(*0x20 + -0x68);\n                    }\n                    *(iVar8 + 0x20) = 1;\n                    *(iVar8 + 0x28) = 2;\n                    if (*0x5985b0 == 0) {\n                        *(iVar8 + 0x18) = iVar8 + 0x30;\n                    }\n                    else {\n                        *(*0x20 + -0x120) = 0x44aba7;\n                        iVar8 = fcn.0045e0a0(uVar11, iVar8 + 0x30, arg3, param_4);\n                    }\ncode_r0x0044ac1d:\n                    iVar8 = *(iVar8 + 0x20);\n                    uVar11 = *(*0x20 + 0x50);\n                    if (uVar11 != 0) {\n                        *(*0x20 + -0xb8) = iVar8;\n                        uVar9 = *(*0x20 + 0x58);\n                        uVar10 = *(*0x20 + 8);\n                        *(*0x20 + -0x120) = 0x44ac52;\n                        uVar11 = fcn.0044c6c0(uVar10);\n                        *(*0x20 + 0x28) = uVar11;\n                        *(*0x20 + 0x30) = uVar9;\n                        *(*0x20 + 0x38) = uVar10;\n                        iVar8 = *(*0x20 + -0xb8);\n                    }\n                    return uVar11 & 0xffffffffffffff00 | iVar8 != 0;\n                }\n            }\n            else {\n                *(*0x20 + 8) = *piVar13;\n                *(*0x20 + -0x128) = unaff_RBP;\n                *(*0x20 + -0x120) = 0x44abcf;\n                iVar8 = fcn.0045ea3a();\n                unaff_RBP = *(*0x20 + -0x128);\n                param_4 = *(iVar8 + 0x18);\n                if (*(iVar8 + 0x20) != 0) {\n                    *(iVar8 + 0x20) = *(iVar8 + 0x20) + -1;\n                    iVar16 = *(iVar8 + 0x28) + -1;\n                    *(iVar8 + 0x28) = iVar16;\n                    iVar16 = (-iVar16 >> 0x3f & 0x58) + param_4;\n                    if (*0x5985b0 == 0) {\n                        *(iVar8 + 0x18) = iVar16;\n                    }\n                    else {\n                        *(*0x20 + -0x120) = 0x44ac1d;\n                        iVar8 = fcn.0045e0a0(param_1, iVar16, arg3, param_4);\n                    }\n                    goto code_r0x0044ac1d;\n                }\n                uVar11 = 0;\n                *(*0x20 + -0x120) = 0x44ac94;\n                fcn.0045e4e0(0);\n            }\n            *(*0x20 + -0x120) = 0x44ac9e;\n            fcn.0045e420(uVar11);\ncode_r0x0044ac9e:\n            param_1 = 0x100000;\n            *(*0x20 + -0x120) = 0x44aca8;\n            in_RAX = fcn.0045e420(0x100000);\n        }\n        *(puVar17 + 0x60) = in_RAX;\n        *(puVar17 + -8) = 0x44acb3;\n        fcn.0045bdc0();\n        in_RAX = *(puVar17 + 0x60);\n        *0x20 = puVar17;\n    } while( true );\n}\n",
        "token_count": 4106
    },
    "0044fa80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044fa80(ulong *arg1, ulong noname_1, ulong arg3, uint64_t arg4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    code *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    int64_t *unaff_RDI;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x38) = unaff_RDI;\n            *(*0x20 + 0x40) = unaff_SIL;\n            *(*0x20 + 0x44) = arg3;\n            *(*0x20 + 0x48) = arg4;\n            *(*0x20 + -0x28) = unaff_RBX;\n            iVar4 = *unaff_RDI;\n            *(*0x20 + -0x38) = iVar4;\n            *(*0x20 + -0x40) = in_RAX + 0x34;\n            if ((iVar4 == 0) || (iVar4 = -(*(iVar4 + 0x10) + -0xfbe8),  iVar4 < in_RAX + 0x34)) {\n                *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x10) = 0;\n                *(*0x20 + -0x20) = 0x450020;\n                *(*0x20 + -0x18) = *0x20 + -0x38;\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x70) = *0x20 + -0x20;\n                *(*0x20 + -0x78) = 0x44fb1c;\n                fcn.0045bc80();\n                arg1 = *(*0x20 + 0x38);\n                *arg1 = *(*0x20 + -0x38);\n            }\n            *(*0x20 + -0x78) = 0x44fb45;\n            fcn.0045de00(arg1, iVar4);\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n            iVar4 = *(*(*0x20 + -0x38) + 8);\n            uVar3 = (*(*0x20 + -0x70) >> 6) - iVar4;\n            unaff_RBX = *(*0x20 + -0x70) >> 6;\n            if (uVar3 == 0) {\n                uVar3 = 1;\n                unaff_RBX = iVar4 + 1;\n            }\n            *(*(*0x20 + -0x38) + 8) = unaff_RBX;\n            uVar1 = *(*0x20 + 0x44);\n            if (uVar1 == 0) {\n                uVar9 = *(*0x20 + 0x48);\n                if (-1 < uVar9) goto code_r0x0044fba7;\n                uVar5 = *(*0x20 + 0x10);\n                uVar12 = uVar5;\n            }\n            else {\n                uVar9 = *(*0x20 + 0x48);\ncode_r0x0044fba7:\n                uVar5 = *(*0x20 + 0x10);\n                uVar12 = uVar5 + 1;\n            }\n            uVar7 = uVar12;\n            if (3 < uVar12) {\n                uVar7 = 3;\n            }\n            arg4 = *(*0x20 + -0x38);\n            uVar10 = *(arg4 + 0x10);\n            uVar12 = uVar7;\n            uVar11 = *(*0x20 + 0x40);\n            arg3._0_4_ = uVar7 << 6 | *(*0x20 + 0x40);\n            if (uVar10 < 0xfbe8) {\n                *(arg4 + 0x418 + uVar10) = arg3;\n                *(arg4 + 0x10) = *(arg4 + 0x10) + 1;\n                if (uVar7 != '\\x03') {\n                    unaff_RBX = NULL;\n                    goto code_r0x0044fc19;\n                }\n                uVar8 = *(*0x20 + -0x38);\n                arg4 = *(uVar8 + 0x10);\n                unaff_RBX = NULL;\ncode_r0x0044ff24:\n                if (unaff_RBX < pe_nt_image_headers64) {\n                    if (arg4 < 0xfbe8) {\n                        *(uVar8 + 0x418 + arg4) = unaff_RBX;\n                        *(uVar8 + 0x10) = arg4 + 1;\n                        uVar8 = *(*0x20 + -0x38);\n                        arg4 = *(uVar8 + 0x10);\n                        uVar12 = arg4 - 1;\n                        if (0xfbe7 < uVar12) {\n                            *(*0x20 + -0x78) = 0x44ff8b;\n                            fcn.0045e420(0xfbe8);\n                            goto code_r0x0044ff8b;\n                        }\n                        unaff_RBX = uVar8 + arg4 + 0x417;\ncode_r0x0044fc19:\n                        uVar8 = *(*0x20 + -0x38);\n                        arg4 = *(uVar8 + 0x10);\n                        while (0x7f < uVar3) {\n                            if (0xfbe7 < arg4) goto code_r0x0044feff;\n                            *(uVar8 + 0x418 + arg4) = uVar3 | 0x80;\n                            arg4 = arg4 + 1;\n                            uVar3 = uVar3 >> 7;\n                            uVar12 = uVar3;\n                        }\n                        if (arg4 < 0xfbe8) {\n                            *(uVar8 + 0x418 + arg4) = uVar3;\n                            arg4 = arg4 + 1;\n                            *(uVar8 + 0x10) = arg4;\n                            uVar8 = *(*0x20 + 8);\n                            iVar4 = 0;\n                            do {\n                                if (iVar4 < uVar5) {\n                                    arg4 = *(*0x20 + -0x38);\n                                    uVar12 = *(uVar8 + iVar4 * 8);\n                                    uVar11 = *(arg4 + 0x10);\n                                    goto code_r0x0044fec0;\n                                }\n                                if (uVar1 == 0) {\n                                    if (uVar9 == 0) {\n                                        uVar5 = *(*0x20 + -0x38);\n                                        uVar9 = *(uVar5 + 0x10);\n                                        piVar2 = NULL;\n                                        goto code_r0x0044fde9;\n                                    }\n                                    if (uVar9 < 1) goto code_r0x0044fd1d;\n                                    *(*0x20 + -0x48) = uVar10;\n                                    *(*0x20 + -0x30) = unaff_RBX;\n                                    unaff_RBX = *(*0x20 + -0x38) + 0x18;\n                                    *(*0x20 + -0x78) = 0x44fd12;\n                                    uVar3 = fcn.00450080(0x80);\n                                    uVar5 = *(*0x20 + -0x38);\n                                    uVar8 = *(uVar5 + 0x10);\n                                    goto code_r0x0044fd71;\n                                }\n                                uVar5 = *(*0x20 + -0x38);\n                                uVar9 = uVar1;\n                                unaff_RDI = *(uVar5 + 0x10);\ncode_r0x0044fe4f:\n                                if (uVar9 < 0x80) {\n                                    if (unaff_RDI < 0xfbe8) {\n                                        *(uVar5 + 0x418 + unaff_RDI) = uVar9;\n                                        *(uVar5 + 0x10) = unaff_RDI + 1;\ncode_r0x0044fd1d:\n                                        do {\n                                            uVar5 = *(*0x20 + -0x40);\n                                            if (*(*(*0x20 + -0x38) + 0x10) - uVar10 <= uVar5) {\n                                                if (unaff_RBX != NULL) {\n                                                    *unaff_RBX = (*(*(*0x20 + -0x38) + 0x10) - uVar10) + -2;\n                                                }\n                                                return;\n                                            }\n                                            unaff_RBX = 0x1d;\n                                            *(*0x20 + -0x78) = 0x44fd59;\n                                            uVar3 = fcn.00433580();\n                                            do {\n                                                *(uVar5 + 0x418 + uVar8) = uVar3 | 0x80;\n                                                uVar3 = uVar3 >> 7;\n                                                uVar8 = uVar8 + 1;\n                                                uVar9 = uVar3;\ncode_r0x0044fd71:\n                                                if (uVar3 < 0x80) {\n                                                    if (uVar8 < 0xfbe8) {\n                                                        *(uVar5 + 0x418 + uVar8) = uVar3;\n                                                        *(uVar5 + 0x10) = uVar8 + 1;\n                                                        unaff_RBX = *(*0x20 + -0x30);\n                                                        uVar10 = *(*0x20 + -0x48);\n                                                        goto code_r0x0044fd1d;\n                                                    }\n                                                    *(*0x20 + -0x78) = 0x44fdc5;\n                                                    fcn.0045e420(0xfbe8);\n                                                    break;\n                                                }\n                                            } while (uVar8 < 0xfbe8);\n                                            *(*0x20 + -0x78) = 0x44fdd2;\n                                            piVar2 = fcn.0045e420(0xfbe8);\n                                            while( true ) {\n                                                *(uVar5 + 0x418 + uVar9) = piVar2 | 0x80;\n                                                piVar2 = piVar2 >> 7;\n                                                uVar9 = uVar9 + 1;\n                                                unaff_RDI = piVar2;\ncode_r0x0044fde9:\n                                                if (piVar2 < pe_nt_image_headers64) break;\n                                                if (0xfbe7 < uVar9) goto code_r0x0044fe2a;\n                                            }\n                                            if (0xfbe7 < uVar9) goto code_r0x0044fe1d;\n                                            *(uVar5 + 0x418 + uVar9) = piVar2;\n                                            *(uVar5 + 0x10) = uVar9 + 1;\n                                        } while( true );\n                                    }\n                                    *(*0x20 + -0x78) = 0x44fe96;\n                                    fcn.0045e420(0xfbe8);\n                                }\n                                else if (unaff_RDI < 0xfbe8) goto code_r0x0044fe37;\n                                iVar4 = 0xfbe8;\n                                *(*0x20 + -0x78) = 0x44fea5;\n                                uVar1 = fcn.0045e420(0xfbe8);\n                                while( true ) {\n                                    *(arg4 + 0x418 + uVar11) = uVar12 | 0x80;\n                                    uVar12 = uVar12 >> 7;\n                                    uVar11 = uVar11 + 1;\ncode_r0x0044fec0:\n                                    if (uVar12 < 0x80) break;\n                                    if (0xfbe7 < uVar11) goto code_r0x0044fee5;\n                                }\n                                if (0xfbe7 < uVar11) goto code_r0x0044fed8;\n                                *(arg4 + 0x418 + uVar11) = uVar12;\n                                uVar12 = uVar11 + 1;\n                                *(arg4 + 0x10) = uVar12;\n                                iVar4 = iVar4 + 1;\n                            } while( true );\n                        }\n                        goto code_r0x0044fef2;\n                    }\ncode_r0x0044ff8b:\n                    *(*0x20 + -0x78) = 0x44ff98;\n                    fcn.0045e420(0xfbe8);\n                }\n                else if (arg4 < 0xfbe8) goto code_r0x0044ff0c;\n                arg3._0_4_ = uVar8;\n                *(*0x20 + -0x78) = 0x44ffa5;\n                fcn.0045e420(0xfbe8);\n            }\n            unaff_SIL = uVar9;\n            arg1 = 0xfbe8;\n            *(*0x20 + -0x78) = 0x44ffb2;\n            in_RAX = fcn.0045e420(0xfbe8);\n        }\n        *(puVar6 + 0x20) = in_RAX;\n        *(puVar6 + 0x28) = unaff_RBX;\n        *(puVar6 + 0x30) = arg1;\n        *(puVar6 + 0x38) = unaff_RDI;\n        puVar6[0x40] = unaff_SIL;\n        *(puVar6 + 0x44) = arg3;\n        *(puVar6 + 0x48) = arg4;\n        *(puVar6 + -8) = 0x44ffda;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 0x20);\n        unaff_RBX = *(puVar6 + 0x28);\n        arg1 = *(puVar6 + 0x30);\n        unaff_RDI = *(puVar6 + 0x38);\n        unaff_SIL = puVar6[0x40];\n        arg3._0_4_ = *(puVar6 + 0x44);\n        arg4 = *(puVar6 + 0x48);\n        *0x20 = puVar6;\n    } while( true );\ncode_r0x0044fe1d:\n    *(*0x20 + -0x78) = 0x44fe2a;\n    fcn.0045e420(0xfbe8);\ncode_r0x0044fe2a:\n    *(*0x20 + -0x78) = 0x44fe37;\n    fcn.0045e420(0xfbe8);\ncode_r0x0044fe37:\n    *(uVar5 + 0x418 + unaff_RDI) = uVar9 | 0x80;\n    uVar9 = uVar9 >> 7;\n    unaff_RDI = unaff_RDI + 1;\n    uVar8 = uVar9;\n    goto code_r0x0044fe4f;\ncode_r0x0044fed8:\n    *(*0x20 + -0x78) = 0x44fee5;\n    fcn.0045e420(0xfbe8);\ncode_r0x0044fee5:\n    *(*0x20 + -0x78) = 0x44fef2;\n    fcn.0045e420(0xfbe8);\ncode_r0x0044fef2:\n    *(*0x20 + -0x78) = 0x44feff;\n    fcn.0045e420(0xfbe8);\ncode_r0x0044feff:\n    uVar3 = 0xfbe8;\n    *(*0x20 + -0x78) = 0x44ff0c;\n    uVar1 = fcn.0045e420(0xfbe8);\ncode_r0x0044ff0c:\n    *(uVar8 + 0x418 + arg4) = unaff_RBX | 0x80;\n    unaff_RBX = unaff_RBX >> 7;\n    arg4 = arg4 + 1;\n    goto code_r0x0044ff24;\n}\n",
        "token_count": 3868
    },
    "004514c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t ** fcn.004514c0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    char cVar5;\n    int32_t iVar6;\n    int64_t *in_RAX;\n    int64_t iVar7;\n    ulong uVar8;\n    ulong uVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    ulong uVar12;\n    uint8_t uVar13;\n    uint32_t uVar14;\n    int64_t **ppiVar15;\n    int64_t *unaff_RBX;\n    uchar *puVar16;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    char cVar17;\n    uint32_t uVar18;\n    int64_t **unaff_RDI;\n    int64_t *piVar19;\n    int64_t *piVar20;\n    code **ppcVar21;\n    int64_t **in_R10;\n    int64_t **in_R11;\n    int64_t **ppiVar22;\n    int64_t *piVar23;\n    int64_t **unaff_R14;\n    int64_t *piVar24;\n    uint8_t uVar25;\n    uchar in_XMM15 [16];\n    \ncode_r0x004514c0:\n    puVar16 = *0x20;\n    if (unaff_R14[2] <= *0x20 + -0x2d8 && *0x20 + -0x2d8 != unaff_R14[2]) {\n        puVar16 = *0x20 + -0x358;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if ((unaff_RSI < 1) || (in_R10 == NULL)) {\n            if ((unaff_R14 != unaff_RDI) || (arg1 = unaff_R14,  unaff_R14[6][0x12] != unaff_R14)) {\n                uVar25 = *(unaff_R14[6] + 0xf9);\n                uVar14 = uVar25;\n                if ((uVar25 == 0) && (uVar14 = *0x52d26c >> 2,  1 < *(unaff_R14[6] + 0xc4))) {\n                    uVar14 = 2;\n                }\n                if ((in_RAX == 0xffffffffffffffff) && (unaff_RBX == 0xffffffffffffffff)) {\n                    unaff_RBX = unaff_RDI[0xe];\n                    if (unaff_RBX == NULL) {\n                        in_RAX = unaff_RDI[8];\n                        unaff_RBX = unaff_RDI[7];\n                    }\n                    else {\n                        in_RAX = unaff_RDI[0xf];\n                    }\n                }\n                *(*0x20 + -0x58) = in_R11;\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x28) = unaff_RBX;\n                piVar19 = unaff_RDI[0x2a];\n                piVar23 = unaff_RDI[0x2b];\n                piVar24 = unaff_RDI[1];\n                piVar20 = *unaff_RDI;\n                if (arg3 == NULL) {\n                    *(*0x20 + -0x32a) = in_R10 == NULL;\n                    ppiVar22 = *(*0x20 + -0x58);\n                }\n                else {\n                    *(*0x20 + -0x280) = uVar14;\n                    *(*0x20 + -0x32a) = 0;\n                    uVar14 = *(*0x20 + -0x280);\n                    ppiVar22 = in_R11;\n                }\n                *(*0x20 + 0x28) = unaff_RDI;\n                *(*0x20 + 0x30) = unaff_RSI;\n                *(*0x20 + 0x48) = in_R10;\n                *(*0x20 + -0x228) = in_RAX;\n                *(*0x20 + -0x230) = unaff_RBX;\n                *(*0x20 + 0x38) = arg3;\n                *(*0x20 + 0x40) = arg4;\n                *(*0x20 + -0x2b0) = piVar23;\n                *(*0x20 + -0x98) = piVar19;\n                *(*0x20 + -0x238) = piVar24;\n                *(*0x20 + -0x240) = piVar20;\n                *(*0x20 + -0x31c) = uVar14;\n                if (in_RAX == NULL) {\n                    *(*0x20 + -0x40) = *unaff_RBX;\n                    ppiVar22 = *(*0x20 + -0x230) + 8;\n                    *(*0x20 + -0x28) = ppiVar22;\n                }\n                *(*0x20 + -0x360) = 0x45168b;\n                iVar7 = fcn.0044bc60();\n                if (iVar7 == 0) {\n                    arg1 = *(*0x20 + 0x48);\n                    if ((arg1 != NULL) || (ppiVar15 = in_R10,  ppiVar2 = arg1,  *(*0x20 + -0x32a) != '\\0')) {\n                        *(*0x20 + -0x248) = *(*(*0x20 + 0x28) + 0x98);\n                        *(*0x20 + -0x228) = *(*0x20 + -0x40);\n                        *(*0x20 + -0x360) = 0x45175e;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x360) = 0x45176f;\n                        fcn.004357c0();\n                        *(*0x20 + -0x360) = 0x45177c;\n                        fcn.004354c0();\n                        *(*0x20 + -0x360) = 0x45178d;\n                        fcn.004357c0();\n                        *(*0x20 + -0x360) = 0x45179a;\n                        fcn.00435620();\n                        *(*0x20 + -0x360) = 0x45179f;\n                        fcn.00435120();\n                        *(*0x20 + -0x360) = 0x4517a5;\n                        fcn.00434f40();\n                        arg1 = *0x20 + -0x50;\n                        unaff_RDI = NULL;\n                        *(*0x20 + -0x360) = 0x4517c5;\n                        fcn.00454dc0(arg1);\n                        ppiVar15 = in_R10;\n                        ppiVar2 = *(*0x20 + 0x48);\n                    }\n                    uVar25 = ppiVar2 == NULL;\n                    if (uVar25) {\n                        return NULL;\n                    }\n                    *(*0x20 + -0x360) = 0x4517fa;\n                    iVar7 = fcn.00433580();\n                    goto code_r0x004517fa;\n                }\n                *(*0x20 + -0x50) = iVar7;\n                *(*0x20 + -0x48) = in_RAX;\n                *(*0x20 + -0x368) = unaff_RBP;\n                *(*0x20 + -0x360) = 0x4516bb;\n                fcn.0045e694();\n                unaff_RBP = *(*0x20 + -0x368);\n                unaff_RSI = *(*0x20 + 0x40);\n                arg4 = *(*0x20 + -0x228);\n                in_R10 = *(*0x20 + -0x230);\n                in_R11 = *(*0x20 + 0x28);\n                arg1 = *(*0x20 + -0x240);\n                piVar24 = *(*0x20 + -0x238);\n                iVar7 = *(*0x20 + 0x30);\n                uVar9 = *(*0x20 + -0x98);\n                ppiVar22 = *(*0x20 + -0x2b0);\n                ppiVar15 = NULL;\n                uVar11 = 0;\n                unaff_RDI = NULL;\n                arg3 = NULL;\n                while (ppiVar15 < unaff_RSI) {\n                    *(*0x20 + -0x2b0) = ppiVar22;\n                    *(*0x20 + -0x98) = uVar9;\n                    iVar10 = *(*0x20 + -0x50);\n                    if (*(iVar10 + 0x10) == 0) break;\n                    *(*0x20 + -0x60) = *(*0x20 + -0x48);\n                    *(*0x20 + -0x68) = iVar10;\n                    uVar25 = *(iVar10 + 0x29);\n                    cVar5 = *(iVar10 + 0x28);\n                    if (cVar5 == '\\x04') {\n                        uVar25 = uVar25 & 0xfd;\n                    }\n                    if ((((*(*0x20 + -0x40) == arg4) && (*(*0x20 + -0x28) == in_R10)) && (in_R11[0xf] == arg4)) &&\n                       (in_R11[0xe] == in_R10)) {\n                        uVar25 = uVar25 & 0xfd;\n                    }\n                    *(*0x20 + -0x2d0) = ppiVar15;\n                    *(*0x20 + -0x2e8) = arg3;\n                    *(*0x20 + -0x250) = iVar7;\n                    *(*0x20 + -0x329) = unaff_RDI;\n                    *(*0x20 + -0x32b) = uVar11;\n                    if (*(*0x20 + -0x20) == 0) {\n                        if ((*(*0x20 + 8) >> 2 & 1) == 0) {\n                            *(*0x20 + -0xa8) = *(*0x20 + -0x60);\n                            piVar20 = *(*0x20 + -0x2b0);\n                            piVar19 = *(*0x20 + -0x98);\n                            iVar7 = *(*0x20 + -0x68);\n                        }\n                        else {\n                            ppiVar22 = in_R11[6];\n                            if (*ppiVar22 == in_R11) {\n                                ppiVar15 = ppiVar22[0x12];\n                                if (ppiVar15 == NULL) {\n                                    *(*0x20 + -0xa8) = *(*0x20 + -0x60);\n                                    piVar20 = *(*0x20 + -0x2b0);\n                                    piVar19 = *(*0x20 + -0x98);\n                                    iVar7 = *(*0x20 + -0x68);\n                                }\n                                else if (ppiVar15[6] == ppiVar22) {\n                                    if (cVar5 == '\\f') {\n                                        *(*0x20 + -0x70) = ppiVar15;\n                                        *(*0x20 + -0x40) = ppiVar15[8];\n                                        *(*0x20 + -0x360) = 0x451a3e;\n                                        iVar7 = fcn.0044bc60();\n                                        *(*0x20 + -0x50) = iVar7;\n                                        *(*0x20 + -0x48) = uVar11;\n                                        uVar25 = *(iVar7 + 0x29);\n                                        ppiVar22 = *(*0x20 + -0x70);\n                                        *(*0x20 + -0x30) = ppiVar22[0xc];\n                                        *(*0x20 + -0x28) = ppiVar22[7];\n                                        piVar24 = ppiVar22[1];\n                                        arg1 = *ppiVar22;\n                                        piVar19 = ppiVar22[0x2a];\n                                        piVar20 = ppiVar22[0x2b];\n                                        *(*0x20 + -0xa8) = uVar11;\n                                        in_R11 = *(*0x20 + -0x70);\n                                    }\n                                    else if (cVar5 == '\\x13') {\n                                        *(*0x20 + -0x28) = ppiVar15[7];\n                                        piVar24 = ppiVar15[1];\n                                        arg1 = *ppiVar15;\n                                        piVar19 = ppiVar15[0x2a];\n                                        piVar20 = ppiVar15[0x2b];\n                                        uVar25 = uVar25 & 0xfd;\n                                        *(*0x20 + -0xa8) = *(*0x20 + -0x60);\n                                        iVar7 = *(*0x20 + -0x68);\n                                        in_R11 = ppiVar15;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xa8) = *(*0x20 + -0x60);\n                                        piVar20 = *(*0x20 + -0x2b0);\n                                        piVar19 = *(*0x20 + -0x98);\n                                        iVar7 = *(*0x20 + -0x68);\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0xa8) = *(*0x20 + -0x60);\n                                    piVar20 = *(*0x20 + -0x2b0);\n                                    piVar19 = *(*0x20 + -0x98);\n                                    iVar7 = *(*0x20 + -0x68);\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0xa8) = *(*0x20 + -0x60);\n                                piVar20 = *(*0x20 + -0x2b0);\n                                piVar19 = *(*0x20 + -0x98);\n                                iVar7 = *(*0x20 + -0x68);\n                            }\n                        }\n                        *(*0x20 + -0x98) = piVar19;\n                        *(*0x20 + -0x2b0) = piVar20;\n                        *(*0x20 + -0x2f8) = piVar24;\n                        *(*0x20 + -0x300) = arg1;\n                        *(*0x20 + -0xa0) = iVar7;\n                        *(*0x20 + -0x78) = in_R11;\n                        *(*0x20 + -0x328) = uVar25;\n                        *(*0x20 + -0x360) = 0x451bd1;\n                        iVar6 = fcn.0044c840(*(*0x20 + -0x40));\n                        *(*0x20 + -0x20) = iVar6 + *(*0x20 + -0x28);\n                        *(*0x20 + -0x20) = iVar6 + *(*0x20 + -0x28) + 8;\n                        iVar7 = *(*0x20 + -0x250);\n                        ppiVar15 = *(*0x20 + -0x2d0);\n                        uVar11 = *(*0x20 + -0x32b);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x329);\n                        arg3 = *(*0x20 + -0x2e8);\n                        arg4 = *(*0x20 + -0x228);\n                        in_R10 = *(*0x20 + -0x230);\n                        uVar25 = *(*0x20 + -0x328);\n                        iVar10 = *(*0x20 + -0xa0);\n                        piVar24 = *(*0x20 + -0x2f8);\n                        arg1 = *(*0x20 + -0x300);\n                        in_R11 = *(*0x20 + -0x78);\n                    }\n                    else {\n                        *(*0x20 + -0xa8) = *(*0x20 + -0x60);\n                        iVar10 = *(*0x20 + -0x68);\n                    }\n                    *(*0x20 + -0x2f8) = piVar24;\n                    *(*0x20 + -0x300) = arg1;\n                    *(*0x20 + -0xa0) = iVar10;\n                    *(*0x20 + -0x78) = in_R11;\n                    if ((uVar25 & 1) == 0) {\n                        if ((uVar25 & 2) == 0) {\ncode_r0x00451ced:\n                            if (*(*0x20 + -0x30) == 0) {\n                                *(*0x20 + -0x2c8) = *(*0x20 + -0x20) + -8;\n                                *(*0x20 + -0x30) = *(*(*0x20 + -0x20) + -8);\n                            }\n                            else {\n                                *(*0x20 + -0x288) = iVar7;\n                                *(*0x20 + -0x2c8) = 0;\n                            }\n                            *(*0x20 + -0x360) = 0x451d38;\n                            iVar7 = fcn.0044bc60();\n                            if (iVar7 == 0) {\n                                uVar25 = *(*0x20 + -0x32a);\n                                uVar13 = uVar25;\n                                if (uVar25 == 0) {\n                                    arg1 = *(*0x20 + -0x78);\n                                    in_R10 = *(*0x20 + -0xa0);\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x78);\n                                    if (*(arg1[6] + 0x1d) == '\\0') {\n                                        in_R10 = *(*0x20 + -0xa0);\n                                    }\n                                    else {\n                                        in_R10 = *(*0x20 + -0xa0);\n                                        if (*(in_R10 + 5) == '\\x12') {\n                                            uVar13 = 0;\n                                        }\n                                    }\n                                }\n                                *(*0x20 + -0x80) = 0;\n                                *(*0x20 + -0x88) = uVar11;\n                                in_R11 = *(*0x20 + 0x48);\n                                if ((in_R11 != NULL) || (uVar13 != 0)) {\n                                    uVar9 = *(*0x20 + -0xa8);\n                                    *(*0x20 + -0x360) = 0x451def;\n                                    uVar12 = fcn.0044c400();\n                                    *(*0x20 + -0x90) = uVar12;\n                                    *(*0x20 + -600) = uVar9;\n                                    *(*0x20 + -0x248) = *(*(*0x20 + -0x78) + 0x98);\n                                    unaff_RSI = *(*0x20 + -0x30);\n                                    *(*0x20 + -0x238) = unaff_RSI;\n                                    *(*0x20 + -0x360) = 0x451e2b;\n                                    fcn.00434ec0();\n                                    *(*0x20 + -0x360) = 0x451e3c;\n                                    fcn.004357c0();\n                                    *(*0x20 + -0x360) = 0x451e49;\n                                    fcn.004354c0();\n                                    *(*0x20 + -0x360) = 0x451e5a;\n                                    fcn.004357c0();\n                                    *(*0x20 + -0x360) = 0x451e6f;\n                                    fcn.004357c0();\n                                    *(*0x20 + -0x360) = 0x451e85;\n                                    fcn.004357c0();\n                                    *(*0x20 + -0x360) = 0x451e92;\n                                    fcn.00435620();\n                                    *(*0x20 + -0x360) = 0x451e97;\n                                    fcn.00435120();\n                                    *(*0x20 + -0x360) = 0x451e9c;\n                                    fcn.00434f40();\n                                    unaff_RDI = *(*0x20 + -0x2c8);\n                                    *(*0x20 + -0x360) = 0x451ebb;\n                                    fcn.00454dc0(*0x20 + -0x50);\n                                    in_R11 = *(*0x20 + 0x48);\n                                    iVar7 = *(*0x20 + -0x80);\n                                    arg1 = *(*0x20 + -0x78);\n                                    uVar11 = *(*0x20 + -0x88);\n                                    uVar25 = *(*0x20 + -0x32a);\n                                    in_R10 = *(*0x20 + -0xa0);\n                                }\n                                arg4 = uVar25;\n                                if (in_R11 != NULL) goto code_r0x00453054;\n                            }\n                            arg1 = *(*0x20 + -0x300);\n                            ppiVar15 = *(*0x20 + -0x2d0);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x329);\n                            arg3 = *(*0x20 + -0x2e8);\n                            in_R11 = *(*0x20 + -0x78);\n                            iVar10 = *(*0x20 + -0xa0);\n                            piVar24 = *(*0x20 + -0x2f8);\n                            *(*0x20 + -200) = iVar7;\n                            *(*0x20 + -0xd0) = uVar11;\n                            uVar9 = *(*0x20 + -0x250);\n                            uVar11 = *(*0x20 + -0x32b);\n                        }\n                        else {\n                            if (*(*0x20 + 0x48) != 0) {\n                                if (ppiVar15 < 1) goto code_r0x00451ced;\n                                if (*(*0x20 + 0x48) != 0) goto code_r0x00453065;\n                            }\n                            *(*0x20 + -0x30) = 0;\n                            *(*0x20 + -0x290) = iVar7;\n                            *(*0x20 + -200) = 0;\n                            *(*0x20 + -0xd0) = 0;\n                            uVar9 = *(*0x20 + -0x290);\n                        }\n                        piVar23 = *(*0x20 + -200);\n                        *(*0x20 + -0x298) = uVar9;\n                        *(*0x20 + -0xb0) = *(*0x20 + -0xd0);\n                        iVar7 = *(*0x20 + -0x298);\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0;\n                        *(*0x20 + -0xb0) = 0;\n                        piVar23 = NULL;\n                    }\n                    cVar5 = uVar11;\n                    iVar3 = *(*0x20 + -0x20);\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x18) = iVar3 - 8U;\n                    if (*(*0x20 + -0x28) < iVar3 - 8U) {\n                        *(*0x20 + -0x18) = iVar3 + -0x10;\n                    }\n                    *(*0x20 + -200) = piVar23;\n                    *(*0x20 + -0x10) = *(*0x20 + -0x20);\n                    *(*0x20 + -0x38) = *(*0x20 + -0x40);\n                    if (cVar5 != '\\0') {\n                        if (*(*(*0x20 + -0x50) + 0xc) == 0) {\n                            *(*0x20 + -0x38) = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x360) = 0x452015;\n                            iVar7 = fcn.0044b9e0();\n                            *(*0x20 + -0x38) = *(*(*0x20 + -0x50) + 0xc) + 1 + iVar7;\n                            iVar7 = *(*0x20 + -0x250);\n                            arg1 = *(*0x20 + -0x300);\n                            ppiVar15 = *(*0x20 + -0x2d0);\n                            cVar5 = *(*0x20 + -0x32b);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x329);\n                            arg3 = *(*0x20 + -0x2e8);\n                            in_R11 = *(*0x20 + -0x78);\n                            iVar10 = *(*0x20 + -0xa0);\n                            piVar23 = *(*0x20 + -200);\n                            piVar24 = *(*0x20 + -0x2f8);\n                        }\n                    }\n                    ppcVar21 = *(*0x20 + 0x48);\n                    if (ppcVar21 == NULL) {\n                        in_R10 = *(*0x20 + 0x38);\n                        ppiVar22 = in_R10;\n                    }\n                    else {\n                        pcVar4 = *ppcVar21;\n                        *(*0x20 + -0x360) = 0x4520ad;\n                        cVar5 = (*pcVar4)(pcVar4, ppcVar21);\n                        if (cVar5 == '\\0') {\n                            return *(*0x20 + -0x2d0);\n                        }\n                        ppiVar22 = *(*0x20 + 0x38);\n                        iVar7 = *(*0x20 + -0x250);\n                        arg1 = *(*0x20 + -0x300);\n                        ppiVar15 = *(*0x20 + -0x2d0);\n                        cVar5 = *(*0x20 + -0x32b);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x329);\n                        arg3 = *(*0x20 + -0x2e8);\n                        ppcVar21 = *(*0x20 + 0x48);\n                        in_R10 = *(*0x20 + 0x38);\n                        in_R11 = *(*0x20 + -0x78);\n                        iVar10 = *(*0x20 + -0xa0);\n                        piVar23 = *(*0x20 + -200);\n                        piVar24 = *(*0x20 + -0x2f8);\n                    }\n                    if (ppiVar22 == NULL) goto code_r0x004522b9;\n                    in_R11 = *(*0x20 + -0x40);\n                    if (((ppiVar15 == NULL) && ((*(*0x20 + 8) >> 1 & 1) != 0)) || (cVar5 != '\\0')) {\ncode_r0x004521c8:\n                        arg4 = in_R11 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x2f0) = in_R11;\n                        *(*0x20 + -0x360) = 0x452165;\n                        iVar7 = fcn.0044b9e0();\n                        if (iVar7 == *(*0x20 + -0x2f0)) {\n                            iVar7 = *(*0x20 + -0x250);\n                            arg1 = *(*0x20 + -0x300);\n                            ppiVar15 = *(*0x20 + -0x2d0);\n                            cVar5 = *(*0x20 + -0x32b);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x329);\n                            arg3 = *(*0x20 + -0x2e8);\n                            in_R10 = *(*0x20 + 0x38);\n                            in_R11 = *(*0x20 + -0x2f0);\n                            iVar10 = *(*0x20 + -0xa0);\n                            goto code_r0x004521c8;\n                        }\n                        in_R11 = *(*0x20 + -0x2f0) + -1;\n                        iVar7 = *(*0x20 + -0x250);\n                        arg1 = *(*0x20 + -0x300);\n                        ppiVar15 = *(*0x20 + -0x2d0);\n                        cVar5 = *(*0x20 + -0x32b);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x329);\n                        arg3 = *(*0x20 + -0x2e8);\n                        in_R10 = *(*0x20 + 0x38);\n                        iVar10 = *(*0x20 + -0xa0);\n                        arg4 = *(*0x20 + -0x2f0);\n                    }\n                    if (*(iVar10 + 0x2b) < 4) {\n                        *(*0x20 + -0x2a0) = iVar7;\n                        *(*0x20 + -0xe8) = 0;\n                        iVar7 = *(*0x20 + -0x2a0);\n                    }\n                    else {\n                        *(*0x20 + -0x308) = in_R11;\n                        uVar14 = *(iVar10 + *(iVar10 + 0x1c) * 4 + 0x38);\n                        *(*0x20 + -0xe8) = uVar14 + *(*(*0x20 + -0xa8) + 0x140) & (uVar14 == 0xffffffff) - 1;\n                        in_R11 = *(*0x20 + -0x308);\n                    }\n                    ppiVar22 = in_R11;\n                    if (*(*0x20 + -0xe8) == 0) goto code_r0x00452fcb;\ncode_r0x00452e5e:\n                    *(*0x20 + -0x250) = iVar7;\n                    *(*0x20 + -0x238) = arg4;\n                    *(*0x20 + -600) = ppiVar15;\n                    *(*0x20 + -0x329) = unaff_RDI;\n                    unaff_RSI = *0x20 + -0x1f0;\n                    *(*0x20 + -0x360) = 0x452e9b;\n                    in_R11 = ppiVar22;\n                    iVar6 = fcn.0044ca40(2);\n                    if (-1 < iVar6) {\n                        uVar11 = iVar6;\n                        unaff_RDI = ppiVar22;\n                        if (uVar11 < 0x100000) {\n                            iVar7 = uVar11 * 0x10;\n                            ppiVar15 = *(*0x20 + -0xe8);\n                            if ((((*(ppiVar15 + uVar11 * 2) == '\\x15') && (cVar5 = *(*0x20 + -0x329),  cVar5 != '\\t'))\n                                && (cVar5 != '\\x12')) && (cVar5 != '\\x0e')) {\n                                arg3 = *(*0x20 + -600);\n                                unaff_RSI = *(*0x20 + -0x250);\n                            }\n                            else {\n                                unaff_RSI = *(*0x20 + -0x250);\n                                if (unaff_RSI < 1) {\n                                    unaff_RDI = *(*0x20 + 0x40);\n                                    arg3 = *(*0x20 + -600);\n                                    if (arg3 < unaff_RDI) {\n                                        if (0xfffff < arg3) goto code_r0x0045303d;\n                                        *(*(*0x20 + 0x38) + arg3 * 8) = *(*0x20 + -0x238);\n                                        arg3 = arg3 + 1;\n                                    }\n                                }\n                                else {\n                                    unaff_RSI = unaff_RSI + -1;\n                                    arg3 = *(*0x20 + -600);\n                                }\n                            }\n                            goto code_r0x00452ddf;\n                        }\ncode_r0x0045304a:\n                        arg1 = 0x100000;\n                        *(*0x20 + -0x360) = 0x453054;\n                        fcn.0045e420(0x100000);\n                        goto code_r0x00453054;\n                    }\n                    arg1 = *(*0x20 + -0x300);\n                    cVar5 = *(*0x20 + -0x32b);\n                    unaff_RSI = *(*0x20 + 0x40);\n                    arg3 = *(*0x20 + -0x2e8);\n                    in_R10 = *(*0x20 + 0x38);\n                    iVar10 = *(*0x20 + -0xa0);\n                    unaff_RDI = *(*0x20 + -0x329);\n                    ppiVar15 = *(*0x20 + -600);\n                    arg4 = *(*0x20 + -0x238);\n                    iVar7 = *(*0x20 + -0x250);\ncode_r0x00452fcb:\n                    if (((*(iVar10 + 0x28) != '\\x15') || (cVar17 = unaff_RDI,  cVar17 == '\\t')) ||\n                       ((cVar17 == '\\x12' || (cVar17 == '\\x0e')))) {\n                        if (iVar7 < 1) {\n                            if (ppiVar15 < unaff_RSI) {\n                                if (0xfffff < ppiVar15) {\n                                    *(*0x20 + -0x360) = 0x45303d;\n                                    fcn.0045e420(0x100000);\ncode_r0x0045303d:\n                                    *(*0x20 + -0x360) = 0x45304a;\n                                    fcn.0045e420(0x100000);\n                                    goto code_r0x0045304a;\n                                }\n                                in_R10[ppiVar15] = arg4;\n                                ppiVar15 = ppiVar15 + 1;\n                            }\n                        }\n                        else {\n                            iVar7 = iVar7 + -1;\n                        }\n                    }\n                    unaff_RDI = *(iVar10 + 0x28);\n                    ppiVar15 = ppiVar15 + -1;\n                    ppcVar21 = *(*0x20 + 0x48);\n                    in_R11 = *(*0x20 + -0x78);\n                    piVar23 = *(*0x20 + -200);\n                    piVar24 = *(*0x20 + -0x2f8);\ncode_r0x004522b9:\n                    *(*0x20 + -0x250) = iVar7;\n                    if (*(*0x20 + -0x32a) == '\\0') goto code_r0x00452431;\n                    *(*0x20 + -0x325) = unaff_RDI;\n                    *(*0x20 + -600) = ppiVar15;\n                    in_R10 = *(*0x20 + -0x40);\n                    *(*0x20 + -0x310) = in_R10;\n                    if ((ppiVar15 < 1) && (uVar14 = *(*0x20 + 8),  (uVar14 >> 1 & 1) != 0)) {\n                        *(*0x20 + -0x2a8) = iVar7;\n                        *(*0x20 + -0x326) = 0;\n                        iVar7 = *(*0x20 + -0x2a8);\n                    }\n                    else {\n                        *(*0x20 + -0x360) = 0x452327;\n                        uVar11 = fcn.0044b9e0();\n                        iVar7 = *(*0x20 + -0x250);\n                        ppiVar15 = *(*0x20 + -600);\n                        cVar5 = *(*0x20 + -0x32b);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x325);\n                        arg3 = *(*0x20 + -0x2e8);\n                        ppcVar21 = *(*0x20 + 0x48);\n                        in_R10 = *(*0x20 + -0x310);\n                        iVar10 = *(*0x20 + -0xa0);\n                        piVar23 = *(*0x20 + -200);\n                        uVar14 = *(*0x20 + 8);\n                        *(*0x20 + -0x326) = uVar11 <= *(*0x20 + -0x40) && *(*0x20 + -0x40) != uVar11;\n                        arg1 = *(*0x20 + -0x300);\n                    }\n                    uVar18 = unaff_RDI;\n                    if ((*(*0x20 + -0x326) != '\\0') && (cVar5 == '\\0')) {\n                        in_R10 = in_R10 + -1;\n                    }\n                    if (*(iVar10 + 0x2b) < 4) {\n                        uVar11 = 0;\n                    }\n                    else {\n                        uVar1 = *(iVar10 + *(iVar10 + 0x1c) * 4 + 0x38);\n                        uVar11 = uVar1 + *(*(*0x20 + -0xa8) + 0x140) & (uVar1 == 0xffffffff) - 1;\n                        piVar23 = *(*0x20 + -200);\n                        ppcVar21 = *(*0x20 + 0x48);\n                    }\n                    if (uVar11 == 0) goto code_r0x00452a21;\n                    *(*0x20 + -0xf0) = uVar11;\n                    *(*0x20 + -0x21c) = in_XMM15;\n                    *(*0x20 + -0x210) = in_XMM15;\n                    *(*0x20 + -0x200) = in_XMM15;\ncode_r0x0045280a:\n                    *(*0x20 + -0x268) = arg3;\n                    *(*0x20 + -0x329) = unaff_RDI;\n                    *(*0x20 + -0x310) = in_R10;\n                    unaff_RSI = NULL;\n                    *(*0x20 + -0x360) = 0x452836;\n                    iVar6 = fcn.0044ca40(2);\n                    if (-1 < iVar6) {\n                        if (0xfffff < iVar6) goto code_r0x00452dd5;\n                        iVar10 = iVar6 * 0x10;\n                        *(*0x20 + -0x270) = iVar10;\n                        iVar7 = *(*0x20 + -0xf0);\n                        *(*0x20 + -0x218) = *(iVar7 + 4 + iVar10);\n                        *(*0x20 + -500) = *(iVar7 + iVar10);\n                        *(*0x20 + -0x1f8) = *(iVar7 + 0xc + iVar10);\n                        if ((*(*0x20 + 8) & 1) == 0) {\n                            *(*0x20 + -0x360) = 0x4528d1;\n                            cVar5 = fcn.00454680(*(*0x20 + -0x78), *(*0x20 + -0x268), *(*0x20 + -0x329));\n                            if (cVar5 == '\\0') {\n                                arg3 = *(*0x20 + -0x268);\n                                goto code_r0x0045279f;\n                            }\n                        }\n                        uVar9 = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x360) = 0x4528ee;\n                        uVar12 = fcn.0044c400();\n                        *(*0x20 + -0xd8) = uVar12;\n                        *(*0x20 + -0x2d8) = uVar9;\n                        uVar9 = *(*0x20 + -0x310);\n                        uVar12 = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x360) = 0x452918;\n                        uVar8 = fcn.0044c7e0(uVar9);\n                        *(*0x20 + -0xb8) = uVar8;\n                        *(*0x20 + -0x2b8) = uVar12;\n                        *(*0x20 + -800) = uVar9;\n                        *(*0x20 + -0x360) = 0x452931;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x360) = 0x452946;\n                        fcn.004357c0();\n                        *(*0x20 + -0x360) = 0x452957;\n                        fcn.004357c0();\n                        *(*0x20 + -0x360) = 0x45295c;\n                        fcn.00434f40();\n                        *(*0x20 + -0x360) = 0x452965;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x360) = 0x452976;\n                        fcn.004357c0();\n                        *(*0x20 + -0x360) = 0x45298b;\n                        fcn.004357c0();\n                        *(*0x20 + -0x360) = 0x45299c;\n                        fcn.004357c0();\n                        *(*0x20 + -0x360) = 0x4529a8;\n                        fcn.004355c0(*(*0x20 + -800));\n                        *(*0x20 + -0x360) = 0x4529ad;\n                        fcn.00435120();\n                        *(*0x20 + -0x360) = 0x4529b2;\n                        fcn.00434f40();\n                        arg3 = *(*0x20 + -0x268) + 1;\ncode_r0x0045279f:\n                        *(*0x20 + -0x268) = arg3;\n                        *(*0x20 + -0x329) = *(*(*0x20 + -0xf0) + *(*0x20 + -0x270));\n                        *(*0x20 + -0x360) = 0x4527d7;\n                        iVar7 = fcn.0044b9e0();\n                        ppiVar15 = *(*0x20 + -0xf0);\n                        in_R10 = *(*(*0x20 + -0x270) + 8 + ppiVar15) + iVar7;\n                        unaff_RDI = *(*0x20 + -0x329);\n                        arg3 = *(*0x20 + -0x268);\n                        goto code_r0x0045280a;\n                    }\n                    iVar7 = *(*0x20 + -0x250);\n                    arg1 = *(*0x20 + -0x300);\n                    ppiVar15 = *(*0x20 + -600);\n                    unaff_RSI = *(*0x20 + 0x40);\n                    ppcVar21 = *(*0x20 + 0x48);\n                    iVar10 = *(*0x20 + -0xa0);\n                    piVar23 = *(*0x20 + -200);\n                    uVar14 = *(*0x20 + 8);\n                    uVar18 = *(*0x20 + -0x329);\n                    in_R10 = *(*0x20 + -0x310);\n                    arg3 = *(*0x20 + -0x268);\ncode_r0x00452a21:\n                    *(*0x20 + -0x268) = arg3;\n                    *(*0x20 + -0x310) = in_R10;\n                    if ((uVar14 & 1) == 0) {\n                        *(*0x20 + -0x360) = 0x452a68;\n                        cVar5 = fcn.00454680(*(*0x20 + -0x78), ppiVar15 & 0xffffffffffffff00 | arg3 == NULL, uVar18);\n                        arg1 = *(*0x20 + -0x300);\n                        ppiVar15 = *(*0x20 + -600);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        arg3 = *(*0x20 + -0x268);\n                        ppcVar21 = *(*0x20 + 0x48);\n                        iVar10 = *(*0x20 + -0xa0);\n                        piVar23 = *(*0x20 + -200);\n                        iVar7 = *(*0x20 + -0x250);\n                    }\n                    else {\n                        cVar5 = '\\x01';\n                    }\n                    if (cVar5 != '\\0') {\n                        uVar9 = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x360) = 0x452acc;\n                        uVar12 = fcn.0044c400();\n                        *(*0x20 + -0xe0) = uVar12;\n                        *(*0x20 + -0x2e0) = uVar9;\n                        uVar9 = *(*0x20 + -0x310);\n                        uVar12 = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x360) = 0x452af3;\n                        uVar8 = fcn.0044c7e0(uVar9);\n                        *(*0x20 + -0xc0) = uVar8;\n                        *(*0x20 + -0x2c0) = uVar12;\n                        *(*0x20 + -0x324) = uVar9;\n                        iVar7 = *(*0x20 + -0x2e0);\n                        if (iVar7 == 0xf) {\n                            piVar19 = *(*0x20 + -0xe0);\n                            if ((((*piVar19 == 0x2e656d69746e7572) && (*(piVar19 + 1) == 0x61706f67)) &&\n                                (*(piVar19 + 0xc) == 0x696e)) && (*(piVar19 + 0xe) == 'c')) {\n                                iVar7 = 5;\n                                piVar19 = 0x4a8313;\n                            }\n                        }\n                        else {\n                            piVar19 = *(*0x20 + -0xe0);\n                        }\n                        *(*0x20 + -0x2e0) = iVar7;\n                        *(*0x20 + -0xe0) = piVar19;\n                        *(*0x20 + -0x360) = 0x452b6a;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x360) = 0x452b7c;\n                        fcn.004357c0();\n                        *(*0x20 + -0x360) = 0x452b8d;\n                        fcn.004357c0();\n                        *(*0x20 + -0x360) = 0x452b92;\n                        fcn.00434f40();\n                        *(*0x20 + -0x360) = 0x452bb4;\n                        fcn.00453160(*(*0x20 + -0x10));\n                        *(*0x20 + -0x360) = 0x452bb9;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x360) = 0x452bca;\n                        fcn.004357c0();\n                        *(*0x20 + -0x360) = 0x452bcf;\n                        fcn.00434f40();\n                        *(*0x20 + -0x360) = 0x452bd4;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x360) = 0x452be5;\n                        fcn.004357c0();\n                        *(*0x20 + -0x360) = 0x452bfa;\n                        fcn.004357c0();\n                        *(*0x20 + -0x360) = 0x452c0b;\n                        fcn.004357c0();\n                        *(*0x20 + -0x360) = 0x452c17;\n                        fcn.004355c0();\n                        *(*0x20 + -0x360) = 0x452c1c;\n                        fcn.00434f40();\n                        *(*0x20 + -0x360) = 0x452c33;\n                        uVar11 = fcn.0044b9e0();\n                        if (uVar11 <= *(*0x20 + -0x40) && *(*0x20 + -0x40) != uVar11) {\n                            *(*0x20 + -0x360) = 0x452c54;\n                            uVar9 = fcn.0044b9e0();\n                            *(*0x20 + -0x318) = uVar9;\n                            *(*0x20 + -0x238) = *(*0x20 + -0x40);\n                            *(*0x20 + -0x360) = 0x452c6e;\n                            fcn.00434ec0();\n                            *(*0x20 + -0x360) = 0x452c7f;\n                            fcn.004357c0();\n                            *(*0x20 + -0x360) = 0x452c94;\n                            fcn.00435620(*(*0x20 + -0x318));\n                            *(*0x20 + -0x360) = 0x452c99;\n                            fcn.00434f40();\n                        }\n                        iVar7 = *(*(*0x20 + -0x78) + 0x30);\n                        if ((((iVar7 != 0) && (1 < *(iVar7 + 0xc4))) && (*(iVar7 + 0x90) == *(*0x20 + -0x78))) ||\n                           (1 < *(*0x20 + -0x31c))) {\n                            *(*0x20 + -0x238) = *(*0x20 + -0x20);\n                            *(*0x20 + -0x240) = *(*0x20 + -0x28);\n                            *(*0x20 + -0x278) = *(*0x20 + -0x40);\n                            *(*0x20 + -0x360) = 0x452cfe;\n                            fcn.00434ec0();\n                            *(*0x20 + -0x360) = 0x452d0f;\n                            fcn.004357c0();\n                            *(*0x20 + -0x360) = 0x452d1c;\n                            fcn.00435620();\n                            *(*0x20 + -0x360) = 0x452d2d;\n                            fcn.004357c0();\n                            *(*0x20 + -0x360) = 0x452d3a;\n                            fcn.00435620();\n                            *(*0x20 + -0x360) = 0x452d4b;\n                            fcn.004357c0();\n                            *(*0x20 + -0x360) = 0x452d58;\n                            fcn.00435620();\n                            *(*0x20 + -0x360) = 0x452d5d;\n                            fcn.00434f40();\n                        }\n                        *(*0x20 + -0x360) = 0x452d65;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x360) = 0x452d6a;\n                        fcn.00435120();\n                        *(*0x20 + -0x360) = 0x452d6f;\n                        fcn.00434f40();\n                        arg3 = *(*0x20 + -0x268) + 1;\n                        iVar7 = *(*0x20 + -0x250);\n                        arg1 = *(*0x20 + -0x300);\n                        ppiVar15 = *(*0x20 + -600);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        ppcVar21 = *(*0x20 + 0x48);\n                        iVar10 = *(*0x20 + -0xa0);\n                        piVar23 = *(*0x20 + -200);\n                    }\n                    unaff_RDI = *(iVar10 + 0x28);\n                    in_R11 = *(*0x20 + -0x78);\n                    piVar24 = *(*0x20 + -0x2f8);\ncode_r0x00452431:\n                    ppiVar15 = ppiVar15 + 1;\n                    if (*(iVar10 + 0x28) == '\\x04') {\n                        ppiVar22 = *(*0x20 + -0x2b0);\n                        if (ppiVar22 != NULL) {\n                            uVar9 = *(*(*0x20 + -0x98) + -8 + ppiVar22 * 8);\n                            if ((iVar7 == 0) && (ppcVar21 == NULL)) {\n                                *(*0x20 + -0x260) = arg3;\n                                *(*0x20 + -0x327) = unaff_RDI;\n                                *(*0x20 + -0x360) = 0x452491;\n                                ppiVar15 = fcn.004536c0(uVar9);\n                                arg1 = *(*0x20 + -0x300);\n                                in_R11 = *(*0x20 + -0x78);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                unaff_RDI = *(*0x20 + -0x327);\n                                arg3 = *(*0x20 + -0x260);\n                                ppiVar22 = *(*0x20 + -0x2b0);\n                                iVar10 = *(*0x20 + -0xa0);\n                                piVar23 = *(*0x20 + -200);\n                                iVar7 = *(*0x20 + -0x250);\n                            }\n                            ppiVar22 = ppiVar22 + -1;\n                            piVar24 = *(*0x20 + -0x2f8);\n                        }\n                    }\n                    else {\n                        ppiVar22 = *(*0x20 + -0x2b0);\n                    }\n                    cVar5 = *(iVar10 + 0x28);\n                    in_R10 = ppiVar15;\n                    if (piVar23 == NULL) break;\n                    arg4 = *(*0x20 + -0x40);\n                    if (*(*0x20 + -0x30) == arg4) {\n                        *(*0x20 + -0x238) = arg4;\n                        arg4 = *(*0x20 + -0x28);\n                        if (*(*0x20 + -0x20) != arg4) {\n                            uVar25 = cVar5 == '\\x12';\n                            goto code_r0x004517fa;\n                        }\n                        *(*0x20 + -0x228) = arg4;\n                        *(*0x20 + -0x360) = 0x452725;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x360) = 0x452736;\n                        fcn.004357c0();\n                        *(*0x20 + -0x360) = 0x452745;\n                        fcn.00435620();\n                        *(*0x20 + -0x360) = 0x452756;\n                        fcn.004357c0();\n                        *(*0x20 + -0x360) = 0x452765;\n                        fcn.00435620();\n                        *(*0x20 + -0x360) = 0x45276a;\n                        fcn.00435120();\n                        *(*0x20 + -0x360) = 0x45276f;\n                        fcn.00434f40();\n                        *(*0x20 + -0x360) = 0x45278e;\n                        fcn.00454dc0(*0x20 + -0x50);\n                        *(*0x20 + -0x360) = 0x45279f;\n                        fcn.00433580();\n                        goto code_r0x0045279f;\n                    }\n                    uVar25 = cVar5 == '\\x12';\ncode_r0x004517fa:\n                    *(*0x20 + -0x50) = piVar23;\n                    *(*0x20 + -0x48) = *(*0x20 + -0xb0);\n                    *(*0x20 + -0x40) = *(*0x20 + -0x30);\n                    *(*0x20 + -0x30) = 0;\n                    *(*0x20 + -0x28) = *(*0x20 + -0x20);\n                    *(*0x20 + -0x20) = 0;\n                    uVar11 = arg4 & 0xffffff00 | uVar25;\n                    uVar9 = *(*0x20 + -0x98);\n                    in_R11 = *(*0x20 + -0x78);\n                    arg4 = *(*0x20 + -0x228);\n                    in_R10 = *(*0x20 + -0x230);\n                }\n                while( true ) {\n                    ppiVar22 = ppiVar15;\n                    if (*(*0x20 + -0x32a) != '\\0') {\n                        ppiVar22 = arg3;\n                    }\n                    if ((*(*0x20 + 0x48) == 0) || (unaff_RSI <= ppiVar22)) break;\n                    piVar19 = in_R11[0x10];\n                    if (piVar19 == *(*0x20 + -0x28)) {\n                        return ppiVar22;\n                    }\n                    *(*0x20 + -0x228) = *(*0x20 + -0x28);\n                    *(*0x20 + -0x230) = piVar19;\n                    *(*0x20 + -0x2d0) = ppiVar22;\n                    *(*0x20 + -0x70) = in_R11;\n                    *(*0x20 + -0x248) = in_R11[0x13];\n                    *(*0x20 + -0x360) = 0x4525e5;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x360) = 0x4525f6;\n                    fcn.004357c0();\n                    *(*0x20 + -0x360) = 0x452605;\n                    fcn.004354c0();\n                    *(*0x20 + -0x360) = 0x452616;\n                    fcn.004357c0();\n                    *(*0x20 + -0x360) = 0x452625;\n                    fcn.00435620();\n                    *(*0x20 + -0x360) = 0x452636;\n                    fcn.004357c0();\n                    *(*0x20 + -0x360) = 0x452645;\n                    fcn.00435620();\n                    *(*0x20 + -0x360) = 0x45264a;\n                    fcn.00435120();\n                    *(*0x20 + -0x360) = 0x45264f;\n                    fcn.00434f40();\n                    *(*0x20 + -0x228) = **(*0x20 + -0x70);\n                    *(*0x20 + -0x230) = (*(*0x20 + -0x70))[1];\n                    *(*0x20 + -0x360) = 0x452673;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x360) = 0x452685;\n                    fcn.004357c0();\n                    *(*0x20 + -0x360) = 0x452692;\n                    fcn.00435620();\n                    *(*0x20 + -0x360) = 0x4526a5;\n                    fcn.004357c0();\n                    *(*0x20 + -0x360) = 0x4526b2;\n                    fcn.00435620();\n                    *(*0x20 + -0x360) = 0x4526c5;\n                    fcn.004357c0();\n                    *(*0x20 + -0x360) = 0x4526d2;\n                    fcn.004355c0();\n                    *(*0x20 + -0x360) = 0x4526e5;\n                    fcn.004357c0();\n                    *(*0x20 + -0x360) = 0x4526f2;\n                    fcn.004355c0();\n                    *(*0x20 + -0x360) = 0x4526f7;\n                    fcn.00435120();\n                    *(*0x20 + -0x360) = 0x4526fc;\n                    fcn.00434f40();\n                    *(*0x20 + -0x360) = 0x45270d;\n                    ppiVar15 = in_R10;\n                    fcn.00433580();\n                    in_R10 = ppiVar15;\n                    in_R11 = ppiVar22;\n                }\n                return ppiVar22;\n            }\n            goto code_r0x004530cb;\n        }\n        goto code_r0x004530dc;\n    }\n    goto code_r0x004530ee;\ncode_r0x00453054:\n    *(*0x20 + -0x360) = 0x453065;\n    fcn.00433580();\ncode_r0x00453065:\n    uVar9 = *(*0x20 + -0xa8);\n    *(*0x20 + -0x360) = 0x453075;\n    uVar12 = fcn.0044c400();\n    *(*0x20 + -0x90) = uVar12;\n    *(*0x20 + -0x250) = uVar9;\n    *(*0x20 + -0x360) = 0x45308a;\n    fcn.00434ec0();\n    *(*0x20 + -0x360) = 0x45309b;\n    fcn.004357c0();\n    *(*0x20 + -0x360) = 0x4530b0;\n    fcn.004357c0();\n    *(*0x20 + -0x360) = 0x4530b5;\n    fcn.00435120();\n    *(*0x20 + -0x360) = 0x4530ba;\n    fcn.00434f40();\n    *(*0x20 + -0x360) = 0x4530cb;\n    fcn.00433580();\ncode_r0x004530cb:\n    *(*0x20 + -0x360) = 0x4530dc;\n    fcn.00433580();\ncode_r0x004530dc:\n    unaff_RBX = 0x37;\n    *(*0x20 + -0x360) = 0x4530ed;\n    in_RAX = fcn.00433580();\ncode_r0x004530ee:\n    *(puVar16 + 0x10) = in_RAX;\n    *(puVar16 + 0x18) = unaff_RBX;\n    *(puVar16 + 0x20) = arg1;\n    *(puVar16 + 0x28) = unaff_RDI;\n    *(puVar16 + 0x30) = unaff_RSI;\n    *(puVar16 + 0x38) = arg3;\n    *(puVar16 + 0x40) = arg4;\n    *(puVar16 + 0x48) = in_R10;\n    *(puVar16 + 0x50) = in_R11;\n    *(puVar16 + -8) = 0x453125;\n    fcn.0045bdc0();\n    in_RAX = *(puVar16 + 0x10);\n    unaff_RBX = *(puVar16 + 0x18);\n    arg1 = *(puVar16 + 0x20);\n    unaff_RDI = *(puVar16 + 0x28);\n    unaff_RSI = *(puVar16 + 0x30);\n    arg3 = *(puVar16 + 0x38);\n    arg4 = *(puVar16 + 0x40);\n    in_R10 = *(puVar16 + 0x48);\n    in_R11 = *(puVar16 + 0x50);\n    *0x20 = puVar16;\n    goto code_r0x004514c0;\ncode_r0x00452dd5:\n    arg3 = 0x100000;\n    *(*0x20 + -0x360) = 0x452ddf;\n    iVar7 = fcn.0045e420(0x100000);\ncode_r0x00452ddf:\n    *(*0x20 + -0x250) = iVar7;\n    *(*0x20 + -600) = unaff_RSI;\n    *(*0x20 + -0x268) = arg3;\n    arg3 = *(ppiVar15 + iVar7);\n    *(*0x20 + -0x329) = *(ppiVar15 + iVar7);\n    *(*0x20 + -0x360) = 0x452e1b;\n    iVar10 = fcn.0044b9e0();\n    arg4 = iVar10 + 1 + *(*(*0x20 + -0x250) + 8 + *(*0x20 + -0xe8));\n    unaff_RDI = *(*0x20 + -0x329);\n    ppiVar15 = *(*0x20 + -0x268);\n    iVar7 = *(*0x20 + -600);\n    ppiVar22 = *(*(*0x20 + -0x250) + 8 + *(*0x20 + -0xe8)) + iVar10;\n    goto code_r0x00452e5e;\n}\n",
        "token_count": 14517
    },
    "00453ca0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453ca0(ulong arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar auStack312 [256];\n    ulong *puStack56;\n    ulong uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    while (auStack312 < *(unaff_R14 + 0x10) || auStack312 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (((((*0x59834a != '\\0') && (iVar2 = *(unaff_RDI + 0x30),  iVar2 != 0)) && (0 < *(iVar2 + 0x108))) &&\n        ((*(unaff_RDI + 0x70) != 0 && (*(iVar2 + 0x110) != NULL)))) && (**(iVar2 + 0x110) != 0)) {\n        *(iVar2 + 0x10c) = 1;\n        iVar2 = fcn.0045e9a0();\n        **(*(iVar2 + 0x30) + 0x110) = 0;\n        *(*(iVar2 + 0x30) + 0x10c) = 0;\n        fcn.004550c0();\n    }\n    if ((*(unaff_RDI + 0x90) & 0xffffefff) == 3) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar2 = *(unaff_RDI + 0x30);\n    if ((iVar2 != 0) && (*(iVar2 + 0x2f0) != 0)) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar2 = fcn.004514c0(arg1, iVar2, 0, 100);\n    if ((iVar2 == 0) && ((unaff_RSI & 1) == 0)) {\n        iVar2 = fcn.004514c0(arg1, unaff_RSI | 1, 0, 100);\n    }\n    if (iVar2 == 100) {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00434f40();\n    }\n    fcn.00453940();\n    puVar1 = *(unaff_RDI + 0x130);\n    if (puVar1 == NULL) {\n        return;\n    }\n    puStack56 = *puVar1;\n    iVar2 = puVar1[1];\n    for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n        uStack48 = *puStack56;\n        uStack40 = *(puStack56 + 1);\n        uStack36 = *(puStack56 + 0xc);\n        uStack32 = *(puStack56 + 2);\n        uStack28 = *(puStack56 + 0x14);\n        uStack24 = *(puStack56 + 3);\n        uStack20 = *(puStack56 + 0x1c);\n        uStack16 = *(puStack56 + 4);\n        uStack12 = *(puStack56 + 0x24);\n        fcn.00453fe0(puStack56[2]);\n        puStack56 = puStack56 + 5;\n    }\n    return;\n}\n",
        "token_count": 818
    },
    "004541a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004541a0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t *piVar8;\n    int64_t unaff_R14;\n    \n    do {\n        iVar6 = unaff_RBX;\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x80) = 0x4541df;\n            uVar3 = fcn.0044c400();\n            iVar6 = *(*0x20 + -0x10);\n            if (*(iVar6 + 0x2b) < 4) {\n                iVar6 = *(*0x20 + -0x18);\n                uVar5 = 0;\n            }\n            else {\n                uVar1 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x38);\n                iVar6 = *(*0x20 + -0x18);\n                uVar5 = uVar1 + *(iVar6 + 0x140) & (uVar1 == 0xffffffff) - 1;\n            }\n            if (uVar5 == 0) goto code_r0x0045429e;\n            *(*0x20 + -0x30) = uVar5;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar3;\n            *(*0x20 + -0x80) = 0x454253;\n            iVar2 = fcn.0044ca40(2);\n            if (iVar2 < 0) {\n                unaff_RBX = *(*0x20 + -0x40);\n                uVar3 = *(*0x20 + -0x28);\n                goto code_r0x00454294;\n            }\n            if (iVar2 < 0x100000) {\n                uVar1 = *(*(*0x20 + -0x30) + 4 + iVar2 * 0x10);\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x80) = 0x454288;\n                uVar3 = fcn.0044c540(uVar1);\ncode_r0x00454294:\n                iVar6 = *(*0x20 + -0x18);\ncode_r0x0045429e:\n                *(*0x20 + -0x40) = unaff_RBX;\n                *(*0x20 + -0x28) = uVar3;\n                uVar3 = *(*0x20 + 0x18);\n                *(*0x20 + -0x80) = 0x4542c5;\n                uVar4 = fcn.0044c6c0(uVar3);\n                *(*0x20 + -0x20) = uVar4;\n                *(*0x20 + -0x38) = iVar6;\n                *(*0x20 + -0x4c) = uVar3;\n                iVar6 = *(*0x20 + -0x40);\n                if (iVar6 == 0xf) {\n                    piVar8 = *(*0x20 + -0x28);\n                    if ((((*piVar8 == 0x2e656d69746e7572) && (*(piVar8 + 1) == 0x61706f67)) &&\n                        (*(piVar8 + 0xc) == 0x696e)) && (*(piVar8 + 0xe) == 'c')) {\n                        iVar6 = 5;\n                        piVar8 = 0x4a8313;\n                    }\n                }\n                else {\n                    piVar8 = *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = iVar6;\n                *(*0x20 + -0x28) = piVar8;\n                *(*0x20 + -0x80) = 0x45432b;\n                fcn.00434ec0();\n                *(*0x20 + -0x80) = 0x45433a;\n                fcn.004357c0();\n                *(*0x20 + -0x80) = 0x45434b;\n                fcn.004357c0();\n                *(*0x20 + -0x80) = 0x454350;\n                fcn.00434f40();\n                *(*0x20 + -0x80) = 0x454355;\n                fcn.00434ec0();\n                *(*0x20 + -0x80) = 0x454366;\n                fcn.004357c0();\n                *(*0x20 + -0x80) = 0x454375;\n                fcn.004357c0();\n                *(*0x20 + -0x80) = 0x454386;\n                fcn.004357c0();\n                *(*0x20 + -0x80) = 0x454392;\n                fcn.004355c0();\n                *(*0x20 + -0x80) = 0x454397;\n                fcn.00434f40();\n                *(*0x20 + -0x80) = 0x4543a8;\n                uVar5 = fcn.0044b9e0();\n                if (uVar5 < *(*0x20 + 0x18)) {\n                    *(*0x20 + -0x80) = 0x4543c6;\n                    uVar3 = fcn.0044b9e0();\n                    *(*0x20 + -0x48) = uVar3;\n                    *(*0x20 + -0x80) = 0x4543d0;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x80) = 0x4543e5;\n                    fcn.004357c0();\n                    *(*0x20 + -0x80) = 0x4543fa;\n                    fcn.00435620(*(*0x20 + -0x48));\n                    *(*0x20 + -0x80) = 0x4543ff;\n                    fcn.00434f40();\n                }\n                *(*0x20 + -0x80) = 0x454405;\n                fcn.00434ec0();\n                *(*0x20 + -0x80) = 0x45440a;\n                fcn.00435120();\n                *(*0x20 + -0x80) = 0x45440f;\n                fcn.00434f40();\n                return;\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x80) = 0x454425;\n            in_RAX = fcn.0045e420(0x100000);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = iVar6;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x45443a;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1818
    },
    "00454940": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454940(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = *(in_RAX + 0x90);\n    uVar2 = uVar1 & 0xffffefff;\n    if ((uVar2 == 4) || (uVar2 == 3)) {\n        if (*(in_RAX + 0xa8) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            fcn.0045fdc0();\n            iVar3 = (iStack64 - *(in_RAX + 0xa8)) / 60000000000;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.004354c0();\n    fcn.004357c0();\n    fcn.004357c0();\n    fcn.00434f40();\n    if ((uVar1 >> 0xc & 1) != 0) {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00434f40();\n    }\n    if (0 < iVar3) {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.00434f40();\n    }\n    if (*(in_RAX + 0xe8) != 0) {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00434f40();\n    }\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00434f40();\n    return;\n}\n",
        "token_count": 473
    },
    "004575e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.004575e0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    \n    if (unaff_RBX <= arg1) {\n        return 0xfffd;\n    }\n    if (arg1 <= unaff_RBX) {\n        iVar7 = unaff_RBX - arg1;\n        unaff_RBX = -iVar7 >> 0x3f & arg1;\n        if (iVar7 != 0) {\n            uVar1 = *(in_RAX + unaff_RBX);\n            if (0xbf < uVar1) {\n                uVar5 = uVar1;\n                if (uVar1 < 0xe0) {\n                    if (((1 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                       ((uVar1 < 0xc0 && (uVar5 = uVar1 & 0x3f | (uVar5 & 0x1f) << 6,  0x7f < uVar5)))) {\n                        return uVar5;\n                    }\n                }\n                else if (uVar1 < 0xf0) {\n                    if ((((2 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) && (uVar1 < 0xc0)) &&\n                       ((uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2 && (uVar2 < 0xc0)))) {\n                        uVar5 = uVar2 & 0x3f | (uVar1 & 0x3f) << 6 | (uVar5 & 0xf) << 0xc;\n                        if ((0x7ff < uVar5) && (0x7ff < uVar5 - 0xd800)) {\n                            return uVar5;\n                        }\n                    }\n                }\n                else if ((((((uVar1 < 0xf8) && (3 < iVar7)) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                          ((uVar1 < 0xc0 && (uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2)))) &&\n                         ((uVar2 < 0xc0 && ((uVar3 = *(in_RAX + 3 + unaff_RBX),  0x7f < uVar3 && (uVar3 < 0xc0)))))) &&\n                        (uVar5 = uVar3 & 0x3f | (uVar5 & 7) << 0x12 | (uVar1 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6, \n                        uVar5 - 0x10000 < 0x100000)) {\n                    return uVar5;\n                }\n            }\n            return 0xfffd;\n        }\n        fcn.0045e420(0);\n    }\n    fcn.0045e4e0(unaff_RBX);\n    pcVar4 = swi(3);\n    uVar6 = (*pcVar4)();\n    return uVar6;\n}\n",
        "token_count": 803
    },
    "004577c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004577c0(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x0045790c;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x00457860;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.0045e420(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x00457860:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.0045e420(unaff_RBX);\n    }\n    fcn.0045e420(unaff_RBX);\ncode_r0x0045790c:\n    fcn.0045e420(0);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 594
    },
    "00459b40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00459b40(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (unaff_RBX < 4) {\n        if (unaff_RBX == 0) {\ncode_r0x00459bd6:\n            uVar1 = 4;\n            goto code_r0x00459c12;\n        }\n        if (((unaff_RBX == 3) && (*in_RAX == 0x6c61)) && (*(in_RAX + 2) == 'l')) {\n            uVar1 = 6;\n            goto code_r0x00459c12;\n        }\n    }\n    else if (unaff_RBX == 4) {\n        if (*in_RAX == 0x656e6f6e) {\n            uVar1 = 0;\n            goto code_r0x00459c12;\n        }\n    }\n    else if (unaff_RBX == 5) {\n        if ((*in_RAX == 0x73617263) && (*(in_RAX + 1) == 'h')) {\n            uVar1 = 0xb;\n            goto code_r0x00459c12;\n        }\n    }\n    else if (unaff_RBX == 6) {\n        if ((*in_RAX == 0x676e6973) && (*(in_RAX + 1) == 0x656c)) goto code_r0x00459bd6;\n        if ((*in_RAX == 0x74737973) && (*(in_RAX + 1) == 0x6d65)) {\n            uVar1 = 10;\n            goto code_r0x00459c12;\n        }\n    }\n    uVar3 = fcn.00449f80();\n    if ((unaff_RBX == '\\0') || (uVar3 != (uVar3 & 0xffffffff))) {\n        uVar1 = 2;\n    }\n    else {\n        uVar1 = uVar3 << 2 | 2;\n    }\ncode_r0x00459c12:\n    if ((*0x59834b != '\\0') || (*0x598349 != '\\0')) {\n        uVar1 = uVar1 | 1;\n    }\n    uVar2 = *0x52d26c;\n    *0x52d26c = uVar1 | *0x5983b4;\n    return uVar2;\n}\n",
        "token_count": 610
    },
    "0046ddc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0046ddc0(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint8_t *in_RAX;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    \n    if (unaff_RBX == 0) {\n        return 0xfffd;\n    }\n    uVar2 = *(*in_RAX + 0x531200);\n    uVar5 = *in_RAX;\n    if (0xef < uVar2) {\n        uVar6 = (uVar2 << 0x1f) >> 0x1f;\n        return ~uVar6 & uVar5 | uVar6 & 0xfffd;\n    }\n    uVar4 = uVar2 & 7;\n    iVar1 = (uVar2 >> 4) * 2;\n    if (unaff_RBX < uVar4) {\n        return 0xfffd;\n    }\n    if (1 < unaff_RBX) {\n        uVar2 = in_RAX[1];\n        if ((uVar2 < *(iVar1 + 0x52e140)) || (*(iVar1 + 0x52e141) < uVar2)) {\n            return 0xfffd;\n        }\n        uVar6 = uVar2;\n        if (uVar4 < 3) {\n            return (uVar5 & 0x1f) << 6 | uVar6 & 0x3f;\n        }\n        uVar2 = in_RAX[2];\n        if (uVar2 + 0x80 < 0x40) {\n            if (uVar4 < 4) {\n                return (uVar5 & 0xf) << 0xc | (uVar6 & 0x3f) << 6 | uVar2 & 0x3f;\n            }\n            if (0x3f < in_RAX[3] + 0x80) {\n                return 0xfffd;\n            }\n            return in_RAX[3] & 0x3f | (uVar5 & 7) << 0x12 | (uVar6 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6;\n        }\n        return 0xfffd;\n    }\n    fcn.0045e420(1);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 571
    },
    "0046df80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0046df80(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint8_t *in_RAX;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    \n    if (unaff_RBX == 0) {\n        return 0xfffd;\n    }\n    uVar2 = *(*in_RAX + 0x531200);\n    uVar5 = *in_RAX;\n    if (0xef < uVar2) {\n        uVar6 = (uVar2 << 0x1f) >> 0x1f;\n        return ~uVar6 & uVar5 | uVar6 & 0xfffd;\n    }\n    uVar4 = uVar2 & 7;\n    iVar1 = (uVar2 >> 4) * 2;\n    if (unaff_RBX < uVar4) {\n        return 0xfffd;\n    }\n    if (1 < unaff_RBX) {\n        uVar2 = in_RAX[1];\n        if ((uVar2 < *(iVar1 + 0x52e140)) || (*(iVar1 + 0x52e141) < uVar2)) {\n            return 0xfffd;\n        }\n        uVar6 = uVar2;\n        if (uVar4 < 3) {\n            return (uVar5 & 0x1f) << 6 | uVar6 & 0x3f;\n        }\n        uVar2 = in_RAX[2];\n        if (uVar2 + 0x80 < 0x40) {\n            if (uVar4 < 4) {\n                return (uVar5 & 0xf) << 0xc | (uVar6 & 0x3f) << 6 | uVar2 & 0x3f;\n            }\n            if (0x3f < in_RAX[3] + 0x80) {\n                return 0xfffd;\n            }\n            return in_RAX[3] & 0x3f | (uVar5 & 7) << 0x12 | (uVar6 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6;\n        }\n        return 0xfffd;\n    }\n    fcn.0045e420(1);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 570
    },
    "0046e140": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0046e140(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x0046e28c;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x0046e1e0;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.0045e420(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x0046e1e0:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.0045e420(unaff_RBX);\n    }\n    fcn.0045e420(unaff_RBX);\ncode_r0x0046e28c:\n    fcn.0045e420(0);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 602
    },
    "0046e420": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0046e420(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar6 = 0;\n    iVar4 = 0;\n    do {\n        if (unaff_RBX <= uVar6) {\n            return iVar4;\n        }\n        if (unaff_RBX <= uVar6) goto code_r0x0046e573;\n        if (*(in_RAX + uVar6) < 0x80) {\n            uVar6 = uVar6 + 1;\n        }\n        else {\n            uVar2 = *(*(in_RAX + uVar6) + 0x531200);\n            if (uVar2 == 0xf1) {\n                uVar6 = uVar6 + 1;\n            }\n            else {\n                uVar5 = uVar2 & 7;\n                if (unaff_RBX < uVar5 + uVar6) {\n                    uVar6 = uVar6 + 1;\n                }\n                else {\n                    iVar1 = (uVar2 >> 4) * 2;\n                    if (unaff_RBX <= uVar6 + 1) {\ncode_r0x0046e568:\n                        fcn.0045e420(unaff_RBX);\ncode_r0x0046e573:\n                        fcn.0045e420(unaff_RBX);\n                        pcVar3 = swi(3);\n                        iVar4 = (*pcVar3)();\n                        return iVar4;\n                    }\n                    uVar2 = *(uVar6 + 1 + in_RAX);\n                    if ((uVar2 < *(iVar1 + 0x52e140)) || (*(iVar1 + 0x52e141) < uVar2)) {\n                        uVar5 = 1;\n                    }\n                    else if (uVar5 != 2) {\n                        if (unaff_RBX <= uVar6 + 2) {\ncode_r0x0046e55d:\n                            fcn.0045e420(unaff_RBX);\n                            goto code_r0x0046e568;\n                        }\n                        if (*(uVar6 + 2 + in_RAX) + 0x80U < 0x40) {\n                            if (uVar5 != 3) {\n                                if (unaff_RBX <= uVar6 + 3) {\n                                    fcn.0045e420(unaff_RBX);\n                                    goto code_r0x0046e55d;\n                                }\n                                if (0x3f < *(uVar6 + 3 + in_RAX) + 0x80U) {\n                                    uVar5 = 1;\n                                }\n                            }\n                        }\n                        else {\n                            uVar5 = 1;\n                        }\n                    }\n                    uVar6 = uVar5 + uVar6;\n                }\n            }\n        }\n        iVar4 = iVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 673
    },
    "0046e580": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0046e580(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar6 = 0;\n    iVar4 = 0;\n    do {\n        if (unaff_RBX <= uVar6) {\n            return iVar4;\n        }\n        if (unaff_RBX <= uVar6) goto code_r0x0046e6d3;\n        if (*(in_RAX + uVar6) < 0x80) {\n            uVar6 = uVar6 + 1;\n        }\n        else {\n            uVar2 = *(*(in_RAX + uVar6) + 0x531200);\n            if (uVar2 == 0xf1) {\n                uVar6 = uVar6 + 1;\n            }\n            else {\n                uVar5 = uVar2 & 7;\n                if (unaff_RBX < uVar5 + uVar6) {\n                    uVar6 = uVar6 + 1;\n                }\n                else {\n                    iVar1 = (uVar2 >> 4) * 2;\n                    if (unaff_RBX <= uVar6 + 1) {\ncode_r0x0046e6c8:\n                        fcn.0045e420(unaff_RBX);\ncode_r0x0046e6d3:\n                        fcn.0045e420(unaff_RBX);\n                        pcVar3 = swi(3);\n                        iVar4 = (*pcVar3)();\n                        return iVar4;\n                    }\n                    uVar2 = *(uVar6 + 1 + in_RAX);\n                    if ((uVar2 < *(iVar1 + 0x52e140)) || (*(iVar1 + 0x52e141) < uVar2)) {\n                        uVar5 = 1;\n                    }\n                    else if (uVar5 != 2) {\n                        if (unaff_RBX <= uVar6 + 2) {\ncode_r0x0046e6bd:\n                            fcn.0045e420(unaff_RBX);\n                            goto code_r0x0046e6c8;\n                        }\n                        if (*(uVar6 + 2 + in_RAX) + 0x80U < 0x40) {\n                            if (uVar5 != 3) {\n                                if (unaff_RBX <= uVar6 + 3) {\n                                    fcn.0045e420(unaff_RBX);\n                                    goto code_r0x0046e6bd;\n                                }\n                                if (0x3f < *(uVar6 + 3 + in_RAX) + 0x80U) {\n                                    uVar5 = 1;\n                                }\n                            }\n                        }\n                        else {\n                            uVar5 = 1;\n                        }\n                    }\n                    uVar6 = uVar5 + uVar6;\n                }\n            }\n        }\n        iVar4 = iVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 681
    },
    "00470fa0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00470fa0(uint *arg1)\n\n{\n    uint *in_RAX;\n    uint64_t noname_1;\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong arg1_00;\n    uint64_t uVar3;\n    int64_t *unaff_RBX;\n    uint *puVar4;\n    char unaff_DIL;\n    code *in_R8;\n    uint *in_R9;\n    int64_t unaff_R14;\n    uint uStack48;\n    uint uStack44;\n    ulong uStack40;\n    uint64_t uStack32;\n    ulong uStack24;\n    uint *puStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x545290 != 0) {\n        return 0;\n    }\n    if (arg1 < 5) {\n        if (arg1 == 0x2) {\n            if (*unaff_RBX != 0x7069) goto code_r0x00471411;\n        }\n        else if (arg1 == 0x3) {\n            if (*unaff_RBX < 'j') {\n                if ((*unaff_RBX == 0x6964) && (*(unaff_RBX + 2) == 'r')) {\ncode_r0x004710ae:\n                    *(in_RAX + 0x88) = 1;\n                    goto code_r0x0047119c;\n                }\n                if (((*unaff_RBX != 0x7069) || (*(unaff_RBX + 2) != '4')) &&\n                   ((*unaff_RBX != 0x7069 || (*(unaff_RBX + 2) != '6')))) goto code_r0x00471411;\n            }\n            else if (((*unaff_RBX != 0x6374) || (*(unaff_RBX + 2) != 'p')) &&\n                    ((*unaff_RBX != 0x6475 || (*(unaff_RBX + 2) != 'p')))) goto code_r0x00471411;\n        }\n        else {\n            if (arg1 != 0x4) goto code_r0x00471411;\n            if (*unaff_RBX < 'u') {\n                if (*unaff_RBX < 'q') {\n                    if (*unaff_RBX != 0x656c6966) {\n                        if (*unaff_RBX != 0x65706970) goto code_r0x00471411;\n                        *(in_RAX + 0x88) = 3;\n                        goto code_r0x0047119c;\n                    }\n                    goto code_r0x004710ae;\n                }\n                if ((*unaff_RBX != 0x34706374) && (*unaff_RBX != 0x36706374)) goto code_r0x00471411;\n            }\n            else if (((*unaff_RBX != 0x34706475) && (*unaff_RBX != 0x36706475)) && (*unaff_RBX != 0x78696e75))\n            goto code_r0x00471411;\n        }\ncode_r0x00471195:\n        *(in_RAX + 0x88) = 0;\n    }\n    else {\n        if (arg1 != 0x7) {\n            if (arg1 == 0x8) {\n                if (*unaff_RBX != 0x6d61726778696e75) {\ncode_r0x00471411:\n                    arg1_00 = 0x25;\n                    uStack24 = fcn.00449580(0x25);\n                    uStack40 = 0x4af502;\n                    puVar2 = fcn.0040c6e0();\n                    puVar2[1] = uStack40;\n                    if (*0x5985b0 == 0) {\n                        *puVar2 = uStack24;\n                    }\n                    else {\n                        fcn.0045e0a0(arg1_00, uStack24, in_R8, in_R9);\n                    }\n                    return 0;\n                }\n            }\n            else if (((arg1 != 0xa) || (*unaff_RBX != 0x6b63617078696e75)) || (*(unaff_RBX + 1) != 0x7465))\n            goto code_r0x00471411;\n            goto code_r0x00471195;\n        }\n        if (((*unaff_RBX != 0x736e6f63) || (*(unaff_RBX + 4) != 0x6c6f)) || (*(unaff_RBX + 6) != 'e'))\n        goto code_r0x00471411;\n        *(in_RAX + 0x88) = 2;\n    }\ncode_r0x0047119c:\n    *(in_RAX + 0x21f) = *(in_RAX + 0x88) != '\\0';\n    if (unaff_DIL == '\\0') {\n        noname_1 = 0;\n        puVar4 = NULL;\n    }\n    else {\n        noname_1 = fcn.00470ce0(in_RAX + 0x6e);\n        puVar4 = in_RAX;\n    }\n    if (*0x544980 != NULL) {\n        in_R8 = **0x544980;\n        in_R9 = in_RAX;\n        uStack32 = noname_1;\n        puStack16 = puVar4;\n        (*in_R8)(in_RAX, *0x544980);\n        noname_1 = uStack32;\n    }\n    if (noname_1 != 0) {\n        return 0;\n    }\n    if ((unaff_DIL != '\\0') && (*0x598340 != '\\0')) {\n        if ((arg1 == 0x3) && ((*unaff_RBX == 0x6374 && (*(unaff_RBX + 2) == 'p')))) {\n            uVar3 = 3;\n        }\n        else {\n            uVar3 = 2;\n        }\n        noname_1 = uVar3;\n        iVar1 = fcn.004681e0(*(in_RAX + 4));\n        if ((iVar1 == 0) && (noname_1 = uVar3,  (uVar3 & 1) != 0)) {\n            *(in_RAX + 0x87) = 1;\n        }\n    }\n    if (arg1 == 0x3) {\n        if ((*unaff_RBX != 0x6475) || (*(unaff_RBX + 2) != 'p')) goto code_r0x00471390;\n    }\n    else if ((arg1 != 0x4) || ((*unaff_RBX != 0x34706475 && (*unaff_RBX != 0x36706475)))) goto code_r0x00471390;\n    uStack48 = 0;\n    uStack44 = 0;\n    noname_1 = *(in_RAX + 4);\n    arg1 = &uStack44;\n    in_R8 = NULL;\n    in_R9 = &uStack48;\n    iVar1 = fcn.00468400(arg1, noname_1, 0, in_R9);\n    if (iVar1 != 0) {\n        return 0x4a899c;\n    }\ncode_r0x00471390:\n    in_RAX[0x10] = 0x72;\n    in_RAX[0x44] = 0x77;\n    if (*0x5985b0 == 0) {\n        *(in_RAX + 0x14) = in_RAX;\n        *(in_RAX + 0x48) = in_RAX;\n    }\n    else {\n        fcn.0045df80(arg1, noname_1, in_R8, in_R9);\n        in_RAX = fcn.0045df80(arg1, noname_1, in_R8, in_R9);\n    }\n    *(in_RAX + 0xe) = *(in_RAX + 0x6e);\n    *(in_RAX + 0x42) = *(in_RAX + 0x6e);\n    return 0;\n}\n",
        "token_count": 1837
    },
    "004715e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004715e0(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    cVar1 = fcn.00470b20();\n    if (cVar1 == '\\0') {\n        uVar2 = *0x545260;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            uVar2 = 0x4ca598;\n        }\n        return uVar2;\n    }\n    if (*(in_RAX + 0x220) == '\\x03') {\n        fcn.00467900(*(in_RAX + 0x10));\n    }\n    if (*(in_RAX + 0x1b8) != 0) {\n        fcn.00459420();\n    }\n    uVar2 = fcn.00470c40();\n    fcn.00459ea0(in_RAX + 0x218);\n    return uVar2;\n}\n",
        "token_count": 268
    },
    "00472000": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00472000(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    ulong unaff_RBX;\n    int64_t unaff_RSI;\n    int32_t *unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((unaff_RSI == 4) && (*unaff_RDI == 0x656c6966)) {\n        iVar2 = fcn.00467de0();\n        iVar1 = fcn.00467ee0();\n        iVar4 = 7;\n        if (iVar2 != 0) {\n            iVar4 = unaff_RSI;\n        }\n        unaff_RSI = iVar4;\n        if ((*0x20 == 0x2c) && (iVar1 == 3)) {\n            unaff_RSI = 4;\n        }\n    }\n    piVar3 = fcn.0040c6e0();\n    iVar4 = fcn.0040c6e0();\n    *(iVar4 + 0x10) = in_RAX;\n    *(iVar4 + 0x21d) = 0x101;\n    *(iVar4 + 0x230) = arg1;\n    if (*0x5985b0 == 0) {\n        *(iVar4 + 0x228) = unaff_RBX;\n        *piVar3 = iVar4;\n    }\n    else {\n        fcn.0045e0a0(arg1, unaff_RBX, in_R8, in_R9);\n        fcn.0045df80(arg1, unaff_RBX, in_R8, in_R9);\n    }\n    fcn.004158c0(0x496f00);\n    fcn.00470fa0(unaff_RSI);\n    return piVar3;\n}\n",
        "token_count": 478
    },
    "0047c860": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0047c860(ulong param_1, uint64_t param_2)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t arg1;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t unaff_RBX;\n    int64_t *piVar6;\n    uint32_t uVar7;\n    int64_t *piVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack00000000000000c0;\n    uint64_t uStack00000000000000c8;\n    ushort uStack364;\n    ushort uStack362;\n    int64_t iStack360;\n    int64_t *piStack352;\n    int64_t *piStack344;\n    int64_t *piStack336;\n    int64_t *piStack328;\n    int64_t iStack320;\n    int64_t iStack312;\n    int64_t *piStack304;\n    int64_t *piStack296;\n    uint32_t uStack288;\n    uint32_t uStack284;\n    uint32_t uStack280;\n    uint32_t uStack276;\n    uint32_t uStack272;\n    uint32_t uStack268;\n    uint32_t uStack264;\n    uint32_t uStack260;\n    uint uStack256;\n    uint32_t uStack252;\n    uint32_t uStack248;\n    uint32_t uStack244;\n    uint32_t uStack240;\n    uint32_t uStack236;\n    uint32_t uStack232;\n    uint32_t uStack228;\n    uint32_t uStack224;\n    uint32_t uStack220;\n    uint32_t uStack216;\n    uint32_t uStack212;\n    uint32_t uStack208;\n    uint32_t uStack204;\n    uint32_t uStack200;\n    uint32_t uStack196;\n    int64_t iStack192;\n    int64_t *piStack184;\n    int64_t *piStack176;\n    int64_t iStack168;\n    int64_t *piStack160;\n    int64_t *piStack152;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar auStack128 [16];\n    uchar auStack112 [32];\n    int64_t iStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [16];\n    uchar auStack40 [32];\n    \n    iStack00000000000000c0 = in_RAX;\n    uStack00000000000000c8 = unaff_RBX;\n    while (&piStack304 < *(unaff_R14 + 0x10) || &piStack304 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0045e6af();\n    piStack176 = fcn.0040c6e0();\n    uStack362 = 0;\n    iStack80 = SUB168(in_XMM15, 0);\n    uStack72 = SUB164(in_XMM15, 0);\n    uStack68 = SUB164(in_XMM15 >> 0x20, 0);\n    uStack64 = SUB164(in_XMM15 >> 0x40, 0);\n    uStack60 = SUB164(in_XMM15 >> 0x60, 0);\n    auStack56 = in_XMM15;\n    auStack40._0_16_ = in_XMM15;\n    if (uStack00000000000000c8 == 0) {\n        auStack56._8_8_ = NULL;\n    }\n    else {\n        iVar4 = fcn.0047bd20();\n        if (iVar4 != 0) {\n            if (uStack00000000000000c8 == '\\0') {\n                piVar8 = *piStack176;\n                piVar6 = piStack176;\n                if ((*piStack176 & 0x3f) != 0) goto code_r0x0047d017;\n                iVar4 = 0;\n                goto code_r0x0047d042;\n            }\n            piVar8 = piStack176;\n            if ((*piStack176 & 0x3f) != 0) goto code_r0x0047d0af;\n            iVar4 = 0;\n            do {\n                if (iVar4 < 8) {\n                    uVar2 = piVar8[1];\n                    arg1 = piVar8[3];\n                    uStack00000000000000c8 = piVar8[2] + 1;\n                    uVar9 = uVar2;\n                    if (arg1 < uStack00000000000000c8) {\n                        iStack312 = iVar4;\n                        uVar9 = fcn.00445800(arg1);\n                        piStack176[3] = arg1;\n                        piVar8 = piStack176;\n                        if (*0x5985b0 == 0) {\n                            piStack176[1] = uVar9;\n                            iVar4 = iStack312;\n                        }\n                        else {\n                            uVar9 = fcn.0045df80(piStack176, param_2, piStack176 + 1, uVar2);\n                            iVar4 = iStack312;\n                        }\n                    }\n                }\n                else {\ncode_r0x0047d0af:\n                    uVar7 = *piVar8;\n                    uVar9 = uVar7;\n                    uVar2 = uVar7 >> 3;\n                    if (uVar2 < piVar8[2]) {\n                        *(piVar8[1] + uVar2) = *(piVar8[1] + uVar2) | 1 << (uVar7 & 7);\n                        *piVar8 = *piVar8 + 1;\n                        goto code_r0x0047d029;\n                    }\n                    iVar4 = fcn.0045e420(piVar8[2]);\n                }\n                piVar8[2] = uStack00000000000000c8;\n                *((uStack00000000000000c8 - 1) + uVar9) = 0;\n                iVar4 = iVar4 + 1;\n            } while( true );\n        }\n        auStack56._8_8_ = 0x8;\n    }\ncode_r0x0047c995:\n    if ((*(iStack00000000000000c0 + 0x14) & 1) == 0) {\n        iVar4 = 0x38;\n    }\n    else {\n        iVar4 = 0x48;\n    }\n    piVar6 = *(iStack00000000000000c0 + 0x30);\n    if (*(iStack00000000000000c0 + 0x30) == 0) {\n        piVar6 = NULL;\n        piVar8 = NULL;\ncode_r0x0047c9d8:\n        piVar5 = NULL;\n        piStack352 = piVar6;\n        piStack184 = piVar8;\n        do {\n            piStack328 = auStack56._8_8_;\n            if (piStack352 <= piVar5) {\n                uStack364 = 0;\n                piStack152 = SUB168(in_XMM15, 0);\n                uStack144 = SUB164(in_XMM15, 0);\n                uStack140 = SUB164(in_XMM15 >> 0x20, 0);\n                uStack136 = SUB164(in_XMM15 >> 0x40, 0);\n                uStack132 = SUB164(in_XMM15 >> 0x60, 0);\n                auStack56._8_8_ = auStack40._8_8_ + 7U & 0xfffffffffffffff8;\n                auStack112._0_16_ = CONCAT88(auStack40._8_8_ + 7U, piStack152) & 0xffffffffffffffff;\n                if ((*(iStack00000000000000c0 + 0x14) & 1) == 0) {\n                    iVar4 = 0x38;\n                }\n                else {\n                    iVar4 = 0x48;\n                }\n                uVar7 = *(iStack00000000000000c0 + 0x32) & 0x7fff;\n                piVar8 = uVar7;\n                if (uVar7 == 0) {\n                    iStack360 = 0;\n                    iStack192 = 0;\n                }\n                else {\n                    piVar8 = *(iStack00000000000000c0 + 0x30);\n                    auStack128._0_8_ = iStack00000000000000c0 + iVar4;\n                    piVar6 = uVar7 + *(iStack00000000000000c0 + 0x30) & 0xffff;\n                    if (piVar6 < piVar8) goto code_r0x0047cf1a;\n                    iStack360 = piVar6 - piVar8;\n                    piVar8 = -iStack360 >> 0x3f & piVar8 << 3;\n                    iStack192 = auStack128._0_8_ + piVar8;\n                }\n                piStack336 = auStack40._8_8_;\n                piVar6 = NULL;\n                piStack344 = auStack56._8_8_;\n                auStack128 = in_XMM15;\n                goto code_r0x0047cc2a;\n            }\n            piStack160 = piStack184[piVar5];\n            piStack296 = piVar5;\n            iVar4 = fcn.0047ba20();\n            if (iVar4 == 0) {\n                piVar8 = piStack328 + (*(piStack160 + 0x15) - 1);\n                piVar6 = (-*(piStack160 + 0x15) & piVar8) + *piStack160;\n                if (auStack56._8_8_ <= piStack296) goto code_r0x0047d005;\n                piVar8 = *(auStack56._0_8_ + piStack296 * 8);\n                if (piStack296 == auStack56._8_8_ + -1) {\n                    auStack56._8_8_ = CONCAT44(uStack68, uStack72);\n                }\n                else {\n                    if (auStack56._8_8_ <= piStack296 + 1U) goto code_r0x0047cff8;\n                    auStack56._8_8_ = *(auStack56._0_8_ + 8 + piStack296 * 8);\n                }\n                auStack40._8_8_ = CONCAT44(uStack60, uStack64);\n                if (auStack40._8_8_ < auStack56._8_8_) goto code_r0x0047cff0;\n                if (auStack56._8_8_ < piVar8) goto code_r0x0047cfe5;\n                auStack40._8_8_ = (piVar8 * 0x30 & piVar8 - auStack40._8_8_ >> 0x3f) + iStack80;\n                auStack128._0_8_ = auStack56._8_8_ - piVar8;\n                auStack56._8_8_ = piVar6;\n                for (iVar4 = 0; iVar4 < auStack128._0_8_; iVar4 = iVar4 + 1) {\n                    uStack240 = *auStack40._8_8_;\n                    uStack236 = *(auStack40._8_8_ + 4);\n                    uStack232 = *(auStack40._8_8_ + 1);\n                    uStack228 = *(auStack40._8_8_ + 0xc);\n                    uStack224 = *(auStack40._8_8_ + 2);\n                    uStack220 = *(auStack40._8_8_ + 0x14);\n                    uStack216 = *(auStack40._8_8_ + 3);\n                    uStack212 = *(auStack40._8_8_ + 0x1c);\n                    iVar1 = auStack40._8_8_[4];\n                    uStack208 = *(auStack40._8_8_ + 4);\n                    uStack204 = *(auStack40._8_8_ + 0x24);\n                    uStack200 = *(auStack40._8_8_ + 5);\n                    uStack196 = *(auStack40._8_8_ + 0x2c);\n                    if (*auStack40._8_8_ == 3) {\n                        piVar8 = ((iVar1 >> 0x3f) >> 0x3d) + iVar1 >> 3;\n                        piVar6 = auStack56._8_8_;\n                        if (piVar8 < 0x2) {\n                            uVar9 = iVar1 % 8;\n                            if (-1 < uVar9) {\n                                *(&uStack362 + piVar8) = *(&uStack362 + piVar8) | 1 << (uVar9 & 0x1f) & -(uVar9 < 0x20);\n                                goto code_r0x0047cf25;\n                            }\n                            fcn.00431ba0();\n                            piVar6 = auStack56._8_8_;\n                        }\n                        fcn.0045e420(2);\n                        auStack56._8_8_ = auStack128._0_8_;\n                        goto code_r0x0047cfe5;\n                    }\ncode_r0x0047cf25:\n                    auStack40._8_8_ = auStack40._8_8_ + 6;\n                }\n            }\n            else {\n                fcn.0047ec60(piStack160);\n                auStack56._8_8_ = piStack328;\n            }\n            piVar5 = piStack296 + 1;\n        } while( true );\n    }\n    piVar8 = iVar4 + iStack00000000000000c0;\n    if (piVar6 < 0x100001) goto code_r0x0047c9d8;\n    goto code_r0x0047d00a;\ncode_r0x0047cc2a:\n    if (iStack360 <= piVar6) {\n        auStack112._0_16_ = CONCAT88(auStack112._8_8_ - piStack344, auStack112._0_8_);\n        fcn.0045e6af();\n        return;\n    }\n    iVar4 = *(iStack192 + piVar6 * 8);\n    auStack40._8_8_ = piStack336;\n    auStack56._8_8_ = piStack344;\n    piStack304 = piVar6;\n    iStack168 = iVar4;\n    iVar1 = fcn.0047ba20();\n    if (iVar1 == 0) {\n        piVar6 = piVar8;\n        if (auStack128._8_8_ <= piStack304) goto code_r0x0047cf15;\n        auStack56._8_8_ = auStack128._0_8_[piStack304];\n        if (piStack304 == auStack128._8_8_ + -1) {\n            auStack128._0_8_ = CONCAT44(uStack140, uStack144);\ncode_r0x0047ccb4:\n            auStack40._8_8_ = CONCAT44(uStack132, uStack136);\n            piVar6 = piStack152;\n            if (auStack128._0_8_ <= auStack40._8_8_) {\n                if (auStack56._8_8_ <= auStack128._0_8_) {\n                    auStack40._8_8_ = piStack152 + (auStack56._8_8_ * 0x30 & auStack56._8_8_ - auStack40._8_8_ >> 0x3f);\n                    auStack128._0_8_ = auStack128._0_8_ - auStack56._8_8_;\n                    iVar1 = 0;\n                    piVar8 = piStack152;\n                    while (iVar3 = iVar1,  iVar3 < auStack128._0_8_) {\n                        uStack288 = *auStack40._8_8_;\n                        uStack284 = *(auStack40._8_8_ + 4);\n                        uStack280 = *(auStack40._8_8_ + 1);\n                        uStack276 = *(auStack40._8_8_ + 0xc);\n                        uStack272 = *(auStack40._8_8_ + 2);\n                        uStack268 = *(auStack40._8_8_ + 0x14);\n                        uStack264 = *(auStack40._8_8_ + 3);\n                        uStack260 = *(auStack40._8_8_ + 0x1c);\n                        piVar6 = auStack40._8_8_[4];\n                        uStack256 = *(auStack40._8_8_ + 4);\n                        uStack252 = *(auStack40._8_8_ + 0x24);\n                        uStack248 = *(auStack40._8_8_ + 5);\n                        uStack244 = *(auStack40._8_8_ + 0x2c);\n                        if (*auStack40._8_8_ == 3) {\n                            auStack56._8_8_ = ((piVar6 >> 0x3f) >> 0x3d) + piVar6 >> 3;\n                            if (auStack56._8_8_ < 0x2) {\n                                piVar6 = piVar6 % 8;\n                                if (-1 < piVar6) {\n                                    *(&uStack364 + auStack56._8_8_) =\n                                         *(&uStack364 + auStack56._8_8_) | 1 << (piVar6 & 0x1f) & -(piVar6 < 0x20);\n                                    piVar8 = piVar6;\n                                    goto code_r0x0047ce45;\n                                }\n                                fcn.00431ba0();\n                            }\n                            fcn.0045e420(2);\n                            goto code_r0x0047cef9;\n                        }\ncode_r0x0047ce45:\n                        auStack40._8_8_ = auStack40._8_8_ + 6;\n                        iVar4 = iVar3;\n                        iVar1 = iVar3 + 1;\n                    }\n                    goto code_r0x0047cbfb;\n                }\ncode_r0x0047cef9:\n                fcn.0045e4e0(auStack128._0_8_);\n            }\n            auStack128._8_8_ = auStack128._0_8_;\n            fcn.0045e4a0(auStack128._0_8_, auStack40._8_8_);\n        }\n        else {\n            piVar6 = piStack304 + 1;\n            if (piVar6 < auStack128._8_8_) {\n                auStack128._0_8_ = auStack128._0_8_[piStack304 + 1];\n                goto code_r0x0047ccb4;\n            }\n        }\n        fcn.0045e420(auStack128._8_8_);\ncode_r0x0047cf15:\n        fcn.0045e420(auStack128._8_8_);\ncode_r0x0047cf1a:\n        fcn.0045e560(piVar6);\n        goto code_r0x0047cf25;\n    }\n    fcn.0047ec60(iStack168);\ncode_r0x0047cbfb:\n    piVar6 = piStack304 + 1;\n    goto code_r0x0047cc2a;\ncode_r0x0047cfe5:\n    fcn.0045e4e0(auStack56._8_8_);\ncode_r0x0047cff0:\n    fcn.0045e4a0(auStack56._8_8_, auStack40._8_8_);\ncode_r0x0047cff8:\n    fcn.0045e420(auStack56._8_8_);\ncode_r0x0047d005:\n    fcn.0045e420(auStack56._8_8_);\ncode_r0x0047d00a:\n    param_2 = piVar6 & 0xffffffff;\n    uStack00000000000000c8 = 0x100000;\n    fcn.0045e520(auStack56._8_8_, param_2);\ncode_r0x0047d017:\n    while (piVar6[2] <= *piVar6 >> 3) {\n        iVar4 = fcn.0045e420(piVar6[2]);\n        while( true ) {\n            piVar6[2] = uStack00000000000000c8;\n            *((uStack00000000000000c8 - 1) + piVar8) = 0;\n            iVar4 = iVar4 + 1;\ncode_r0x0047d042:\n            if (7 < iVar4) break;\n            piVar5 = piVar6[1];\n            uVar9 = piVar6[3];\n            uStack00000000000000c8 = piVar6[2] + 1;\n            piVar8 = piVar5;\n            if (uVar9 < uStack00000000000000c8) {\n                iStack320 = iVar4;\n                piVar8 = fcn.00445800(uVar9);\n                piStack176[3] = uVar9;\n                piVar6 = piStack176;\n                if (*0x5985b0 == 0) {\n                    piStack176[1] = piVar8;\n                    iVar4 = iStack320;\n                }\n                else {\n                    piVar8 = fcn.0045df80(piStack176, param_2, piStack176 + 1, piVar5);\n                    iVar4 = iStack320;\n                }\n            }\n        }\n    }\n    *piVar6 = *piVar6 + 1;\ncode_r0x0047d029:\n    auStack56._8_8_ = NULL;\n    goto code_r0x0047c995;\n}\n",
        "token_count": 4919
    },
    "0047fc00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047fc00(ulong arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t in_RAX;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong *puVar10;\n    uint64_t unaff_RBX;\n    ulong *arg1_00;\n    uchar *puVar11;\n    ulong unaff_RBP;\n    ulong *puVar12;\n    ulong *unaff_RDI;\n    ulong *puVar13;\n    ulong arg3;\n    ulong *arg2;\n    uint32_t uVar14;\n    uint *puVar15;\n    ulong *puVar16;\n    int64_t iVar17;\n    ulong *puVar18;\n    ulong *puVar19;\n    int64_t unaff_R14;\n    uint64_t uVar20;\n    ulong *arg2_00;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x588 && *0x20 + -0x588 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x608;\n            *(*0x20 + -8) = unaff_RBP;\n            piVar1 = *(unaff_R14 + 0x20);\n            if ((piVar1 != NULL) && (*piVar1 == *0x20 + 8)) {\n                *piVar1 = *0x20 + -0x608;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            uVar6 = *(in_RAX + 0x30);\n            *(*0x20 + -0x348) = uVar6;\n            puVar18 = *(in_RAX + 0x28);\n            *(*0x20 + -0x350) = puVar18;\n            *(*0x20 + -0x518) = *(in_RAX + 0x38);\n            arg3 = *(in_RAX + 0x20);\n            *(*0x20 + -0x610) = 0x47fc95;\n            puVar13 = puVar18;\n            uVar6 = fcn.0047f900(puVar18, uVar6, arg3);\n            *(*0x20 + -0x378) = uVar6;\n            *(*0x20 + -0x380) = 4;\n            *(*0x20 + -0x358) = puVar18;\n            *(*0x20 + -0x1d0) = in_XMM15;\n            *(*0x20 + -0x618) = *0x20 + -8;\n            *(*0x20 + -0x610) = 0x47fcd1;\n            fcn.0045e6af();\n            uVar6 = *(*0x20 + -0x618);\n            *(*0x20 + -0x610) = 0x47fcdf;\n            fcn.0047e560();\n            *(*0x20 + -0x1d0) = *(*0x20 + -0x608);\n            *(*0x20 + -0x618) = uVar6;\n            *(*0x20 + -0x610) = 0x47fd0f;\n            fcn.0045e9e6();\n            *(*0x20 + -0x340) = *(*0x20 + -0x1d0);\n            *(*0x20 + -0x618) = *(*0x20 + -0x618);\n            *(*0x20 + -0x610) = 0x47fd4f;\n            fcn.0045e9e6();\n            *(*0x20 + -0x1d0) = in_XMM15;\n            *(*0x20 + -0x618) = *(*0x20 + -0x618);\n            *(*0x20 + -0x610) = 0x47fd77;\n            fcn.0045e6af();\n            uVar6 = *(*0x20 + -0x618);\n            arg1_00 = *(*0x20 + -0x378);\n            *(*0x20 + -0x610) = 0x47fd90;\n            uVar7 = fcn.0047e560();\n            *(*0x20 + -0x370) = uVar7;\n            *(*0x20 + -0x368) = arg1_00;\n            *(*0x20 + -0x1d0) = *(*0x20 + -0x608);\n            *(*0x20 + -0x618) = uVar6;\n            *(*0x20 + -0x610) = 0x47fdcf;\n            fcn.0045e9e6();\n            *(*0x20 + -0x288) = *(*0x20 + -0x1d0);\n            unaff_RDI = *0x20 + -0x280;\n            *(*0x20 + -0x618) = *(*0x20 + -0x618);\n            *(*0x20 + -0x610) = 0x47fe0f;\n            fcn.0045e9e6();\n            unaff_RBP = *(*0x20 + -0x618);\n            *(*0x20 + -0x610) = 0x47fe1b;\n            iVar8 = fcn.00465340();\n            unaff_RBX = 0x496200;\n            if (iVar8 == 0x496200) {\n                unaff_RDI = *0x20 + -0x148;\n                *(*0x20 + -0x618) = unaff_RBP;\n                *(*0x20 + -0x610) = 0x47fe4f;\n                fcn.0045e68b();\n                unaff_RBP = *(*0x20 + -0x618);\n                puVar15 = *(*0x20 + -0x288);\n                if (*(*0x20 + -0x280) != 0) {\n                    uVar3 = puVar15[1];\n                    uVar4 = puVar15[2];\n                    uVar5 = puVar15[3];\n                    *(*0x20 + -0x480) = *puVar15;\n                    *(*0x20 + -0x47c) = uVar3;\n                    *(*0x20 + -0x478) = uVar4;\n                    *(*0x20 + -0x474) = uVar5;\n                    uVar3 = puVar15[5];\n                    uVar4 = puVar15[6];\n                    uVar5 = puVar15[7];\n                    *(*0x20 + -0x470) = puVar15[4];\n                    *(*0x20 + -0x46c) = uVar3;\n                    *(*0x20 + -0x468) = uVar4;\n                    *(*0x20 + -0x464) = uVar5;\n                    uVar3 = puVar15[9];\n                    uVar4 = puVar15[10];\n                    uVar5 = puVar15[0xb];\n                    *(*0x20 + -0x460) = puVar15[8];\n                    *(*0x20 + -0x45c) = uVar3;\n                    *(*0x20 + -0x458) = uVar4;\n                    *(*0x20 + -0x454) = uVar5;\n                    iVar8 = *(*0x20 + -0x480);\n                    if (iVar8 < 3) {\n                        if (iVar8 == 1) {\n                            if ((*(*(*0x20 + -0x350) + 0x17) & 0x1f) == 0x14) {\n                                if (*0x5985b0 == 0) {\n                                    *arg1_00 = *(*(*0x20 + -0x348) + 8);\n                                }\n                                else {\n                                    *(*0x20 + -0x610) = 0x47fef9;\n                                    fcn.0045df80(puVar18, unaff_RBX, arg3, puVar13);\n                                    unaff_RDI = arg1_00;\n                                }\n                            }\n                            else if (((*(*0x20 + -0x518) >> 7 & 1) == 0) || ((*(*(*0x20 + -0x350) + 0x17) & 0x20) == 0))\n                            {\n                                if (*0x5985b0 == 0) {\n                                    *arg1_00 = *(*0x20 + -0x348);\n                                }\n                                else {\n                                    *(*0x20 + -0x610) = 0x47ff75;\n                                    fcn.0045df80(puVar18, unaff_RBX, arg3, puVar13);\n                                    unaff_RDI = arg1_00;\n                                }\n                            }\n                            else if (*0x5985b0 == 0) {\n                                *arg1_00 = **(*0x20 + -0x348);\n                            }\n                            else {\n                                *(*0x20 + -0x610) = 0x47ff3c;\n                                fcn.0045df80(puVar18, unaff_RBX, arg3, puVar13);\n                                unaff_RDI = arg1_00;\n                            }\ncode_r0x00480136:\n                            iVar8 = *(*0x20 + -0x380);\n                            if ((*(iVar8 + 0x14) & 1) == 0) {\n                                iVar9 = 0x38;\n                            }\n                            else {\n                                iVar9 = 0x48;\n                            }\n                            puVar13 = *(iVar8 + 0x30);\n                            if (*(iVar8 + 0x30) == 0) {\n                                puVar13 = NULL;\n                                iVar8 = 0;\ncode_r0x0048017e:\n                                *(*0x20 + -0x388) = iVar8;\n                                *(*0x20 + -0x530) = puVar13;\n                                *(*0x20 + -0x360) = arg1_00;\n                                puVar10 = NULL;\ncode_r0x004801a3:\n                                do {\n                                    if (puVar13 <= puVar10) {\n                                        iVar8 = **(*0x20 + -0x370);\n                                        *(*0x20 + -0x10) = *(*0x20 + -0x1d6);\n                                        *(*0x20 + -0x610) = 0x4804ea;\n                                        fcn.00460840(arg1_00, *(*0x20 + -0x1d6), \n                                                     (iVar8 + 7U & 0xfffffffffffffff8) + *(*0x20 + -0x1e8), \n                                                     *0x20 + -0x118);\n                                        if (*(*0x20 + 0x20) != 0) {\n                                            if (*0x5985b0 == 0) {\n                                                *(*0x20 + -0x618) = unaff_RBP;\n                                                *(*0x20 + -0x610) = 0x480519;\n                                                fcn.0045e992();\n                                            }\n                                            else {\n                                                *(*0x20 + -0x610) = 0x480536;\n                                                fcn.004112e0(*0x20 + -0x118);\n                                            }\n                                        }\n                                        iVar8 = **(*0x20 + -0x370);\n                                        if (iVar8 - *(*0x20 + -0x1f0) != 0) {\n                                            *(*0x20 + -0x610) = 0x48057f;\n                                            fcn.0045a1e0(iVar8 - *(*0x20 + -0x1f0));\n                                        }\n                                        **(*0x20 + 0x18) = 1;\n                                        *(*0x20 + -0x610) = 0x48059f;\n                                        fcn.00458f80();\n                                        *(*0x20 + -0x610) = 0x4805bb;\n                                        fcn.00465260(*(*0x20 + -0x360));\n                                        return;\n                                    }\n                                    puVar12 = *(iVar8 + puVar10 * 8);\n                                    puVar18 = *(*0x20 + -800);\n                                    if (puVar18 <= puVar10) goto code_r0x00480bc6;\n                                    puVar19 = *(*(*0x20 + -0x328) + puVar10 * 8);\n                                    if (puVar10 == puVar18 + -1) {\n                                        puVar18 = *(*0x20 + -0x338);\n                                    }\n                                    else {\n                                        if (puVar18 <= puVar10 + 1U) goto code_r0x00480bbe;\n                                        puVar18 = *(*(*0x20 + -0x328) + 8 + puVar10 * 8);\n                                    }\n                                    iVar9 = *(*0x20 + -0x340);\n                                    arg2 = *(*0x20 + -0x330);\n                                    puVar16 = puVar13;\n                                    if (arg2 < puVar18) goto code_r0x00480bb3;\n                                    if (puVar18 < puVar19) goto code_r0x00480ba8;\n                                    puVar16 = puVar10 + 1;\n                                    puVar18 = puVar18 - puVar19;\n                                    uVar20 = puVar19 - arg2 >> 0x3f & puVar19 * 0x30;\n                                    arg2 = iVar9 + uVar20;\n                                    puVar19 = *(*0x20 + -0x268);\n                                    if (puVar19 <= puVar16) goto code_r0x00480b9d;\n                                    *(*0x20 + -0x538) = puVar18;\n                                    *(*0x20 + -0x390) = arg2;\n                                    arg2 = *(*(*0x20 + -0x270) + 8 + puVar10 * 8);\n                                    if (puVar19 - 1U == puVar16) {\n                                        puVar18 = *(*0x20 + -0x280);\n                                    }\n                                    else {\n                                        puVar18 = puVar10 + 2;\n                                        if (puVar19 <= puVar18) goto code_r0x00480b92;\n                                        puVar18 = *(*(*0x20 + -0x270) + 0x10 + puVar10 * 8);\n                                    }\n                                    puVar10 = *(*0x20 + -0x288);\n                                    arg2_00 = *(*0x20 + -0x278);\n                                    puVar19 = puVar10;\n                                    if (arg2_00 < puVar18) goto code_r0x00480b87;\n                                    if (puVar18 < arg2) goto code_r0x00480b7c;\n                                    puVar18 = puVar18 - arg2;\n                                    arg2 = arg2 - arg2_00 >> 0x3f & arg2 * 0x30;\n                                    arg2_00 = arg2 + puVar10;\n                                    puVar19 = *(*0x20 + -0x538);\n                                    unaff_RDI = puVar13;\n                                    if (puVar19 != NULL) {\n                                        *(*0x20 + -0x528) = puVar16;\n                                        puVar15 = *(*0x20 + -0x390);\n                                        uVar3 = puVar15[1];\n                                        uVar4 = puVar15[2];\n                                        uVar5 = puVar15[3];\n                                        *(*0x20 + -0x4b0) = *puVar15;\n                                        *(*0x20 + -0x4ac) = uVar3;\n                                        *(*0x20 + -0x4a8) = uVar4;\n                                        *(*0x20 + -0x4a4) = uVar5;\n                                        puVar15 = uVar20 + 0x10 + iVar9;\n                                        uVar3 = puVar15[1];\n                                        uVar4 = puVar15[2];\n                                        uVar5 = puVar15[3];\n                                        *(*0x20 + -0x4a0) = *puVar15;\n                                        *(*0x20 + -0x49c) = uVar3;\n                                        *(*0x20 + -0x498) = uVar4;\n                                        *(*0x20 + -0x494) = uVar5;\n                                        puVar16 = uVar20 + 0x20 + iVar9;\n                                        uVar3 = *(puVar16 + 4);\n                                        uVar4 = *(puVar16 + 1);\n                                        uVar5 = *(puVar16 + 0xc);\n                                        *(*0x20 + -0x490) = *puVar16;\n                                        *(*0x20 + -0x48c) = uVar3;\n                                        *(*0x20 + -0x488) = uVar4;\n                                        *(*0x20 + -0x484) = uVar5;\n                                        if (*(*0x20 + -0x4b0) == 1) {\n                                            if (puVar18 == NULL) {\ncode_r0x00480b5f:\n                                                *(*0x20 + -0x610) = 0x480b69;\n                                                fcn.0045e420(0);\n                                                break;\n                                            }\n                                            uVar3 = *(arg2_00 + 4);\n                                            uVar4 = *(arg2_00 + 1);\n                                            uVar5 = *(arg2_00 + 0xc);\n                                            *(*0x20 + -0x3c0) = *arg2_00;\n                                            *(*0x20 + -0x3bc) = uVar3;\n                                            *(*0x20 + -0x3b8) = uVar4;\n                                            *(*0x20 + -0x3b4) = uVar5;\n                                            puVar15 = arg2 + 2 + puVar10;\n                                            uVar3 = puVar15[1];\n                                            uVar4 = puVar15[2];\n                                            uVar5 = puVar15[3];\n                                            *(*0x20 + -0x3b0) = *puVar15;\n                                            *(*0x20 + -0x3ac) = uVar3;\n                                            *(*0x20 + -0x3a8) = uVar4;\n                                            *(*0x20 + -0x3a4) = uVar5;\n                                            arg2 = arg2 + 4 + puVar10;\n                                            uVar3 = *(arg2 + 4);\n                                            uVar4 = *(arg2 + 1);\n                                            uVar5 = *(arg2 + 0xc);\n                                            *(*0x20 + -0x3a0) = *arg2;\n                                            *(*0x20 + -0x39c) = uVar3;\n                                            *(*0x20 + -0x398) = uVar4;\n                                            *(*0x20 + -0x394) = uVar5;\n                                            if (*(*0x20 + -0x3c0) != 1) {\n                                                *(*0x20 + -0x540) = puVar18;\n                                                arg2 = *(*0x20 + 0x10);\n                                                puVar12 = puVar18;\n                                                for (iVar9 = 0; iVar9 < puVar12; iVar9 = iVar9 + 1) {\n                                                    *(*0x20 + -0x520) = iVar9;\n                                                    *(*0x20 + -0x348) = arg2_00;\n                                                    uVar3 = *(arg2_00 + 4);\n                                                    uVar4 = *(arg2_00 + 1);\n                                                    uVar5 = *(arg2_00 + 0xc);\n                                                    *(*0x20 + -0x3f0) = *arg2_00;\n                                                    *(*0x20 + -0x3ec) = uVar3;\n                                                    *(*0x20 + -1000) = uVar4;\n                                                    *(*0x20 + -0x3e4) = uVar5;\n                                                    uVar3 = *(arg2_00 + 0x14);\n                                                    uVar4 = *(arg2_00 + 3);\n                                                    uVar5 = *(arg2_00 + 0x1c);\n                                                    *(*0x20 + -0x3e0) = *(arg2_00 + 2);\n                                                    *(*0x20 + -0x3dc) = uVar3;\n                                                    *(*0x20 + -0x3d8) = uVar4;\n                                                    *(*0x20 + -0x3d4) = uVar5;\n                                                    uVar3 = *(arg2_00 + 0x24);\n                                                    uVar4 = *(arg2_00 + 5);\n                                                    uVar5 = *(arg2_00 + 0x2c);\n                                                    *(*0x20 + -0x3d0) = *(arg2_00 + 4);\n                                                    *(*0x20 + -0x3cc) = uVar3;\n                                                    *(*0x20 + -0x3c8) = uVar4;\n                                                    *(*0x20 + -0x3c4) = uVar5;\n                                                    puVar16 = *(*0x20 + -1000) + *(*0x20 + -0x498);\n                                                    puVar19 = *(*0x20 + -0x3f0);\n                                                    puVar18 = puVar16 + arg2;\n                                                    if (puVar19 == 0x2) {\ncode_r0x00480a9f:\n                                                        *(*0x20 + -0x610) = 0x480abf;\n                                                        fcn.0047d240(*(*0x20 + -0x3e0));\n                                                        iVar9 = *(*0x20 + -0x520);\n                                                        iVar8 = *(*0x20 + -0x388);\n                                                        unaff_RBX = 0x496200;\n                                                        arg1_00 = *(*0x20 + -0x360);\n                                                        puVar12 = *(*0x20 + -0x540);\n                                                        puVar13 = *(*0x20 + -0x530);\n                                                        arg2 = *(*0x20 + 0x10);\n                                                        arg2_00 = *(*0x20 + -0x348);\n                                                    }\n                                                    else {\n                                                        if (puVar19 == 0x3) {\n                                                            if (8 < *(*0x20 + -0x3d0)) {\n                                                                *(*0x20 + -0x610) = 0x480b1f;\n                                                                fcn.0045e420(9);\ncode_r0x00480b1f:\n                                                                *(*0x20 + -0x610) = 0x480b2c;\n                                                                fcn.0045e420(0xf);\ncode_r0x00480b2c:\n                                                                *(*0x20 + -0x610) = 0x480b3f;\n                                                                fcn.00432de0();\ncode_r0x00480b3f:\n                                                                *(*0x20 + -0x610) = 0x480b4c;\n                                                                fcn.0045e420(0xf);\n                                                                goto code_r0x00480b4c;\n                                                            }\n                                                            *(*0x20 + *(*0x20 + -0x3d0) * 8 + -0x58) = *(arg2 + puVar16)\n                                                            ;\n                                                            goto code_r0x00480a9f;\n                                                        }\n                                                        if (puVar19 != 0x4) {\ncode_r0x00480b4c:\n                                                            *(*0x20 + -0x610) = 0x480b5f;\n                                                            fcn.00432de0();\n                                                            goto code_r0x00480b5f;\n                                                        }\n                                                        puVar18 = *(*0x20 + -0x3c8);\n                                                        puVar19 = *(*0x20 + -0x3e0);\n                                                        if (puVar19 == 0x4) {\n                                                            if (0xe < puVar18) goto code_r0x00480b3f;\n                                                            *(*0x20 + puVar18 * 8 + -0xd0) = *(arg2 + puVar16);\n                                                        }\n                                                        else {\n                                                            if (puVar19 != 0x8) goto code_r0x00480b2c;\n                                                            puVar16 = *(arg2 + puVar16);\n                                                            if (0xe < puVar18) goto code_r0x00480b1f;\n                                                            *(*0x20 + puVar18 * 8 + -0xd0) = puVar16;\n                                                        }\n                                                    }\ncode_r0x00480990:\n                                                    arg2_00 = arg2_00 + 6;\n                                                }\n                                                puVar10 = *(*0x20 + -0x528);\n                                                unaff_RDI = puVar13;\n                                                goto code_r0x004801a3;\n                                            }\n                                            if (*(*0x20 + -0x3b0) == *(*0x20 + -0x4a0)) {\n                                                *(*0x20 + -0x610) = 0x4803e5;\n                                                fcn.00458f20(*(*0x20 + -0x498) + *(*0x20 + 0x10));\n                                                iVar8 = *(*0x20 + -0x388);\n                                                unaff_RBX = 0x496200;\n                                                arg1_00 = *(*0x20 + -0x360);\n                                                puVar13 = *(*0x20 + -0x530);\n                                                puVar10 = *(*0x20 + -0x528);\n                                                unaff_RDI = puVar13;\n                                                goto code_r0x004801a3;\n                                            }\n                                        }\n                                        else {\n                                            if (puVar18 != NULL) {\n                                                uVar3 = *(arg2_00 + 4);\n                                                uVar4 = *(arg2_00 + 1);\n                                                uVar5 = *(arg2_00 + 0xc);\n                                                *(*0x20 + -0x420) = *arg2_00;\n                                                *(*0x20 + -0x41c) = uVar3;\n                                                *(*0x20 + -0x418) = uVar4;\n                                                *(*0x20 + -0x414) = uVar5;\n                                                puVar15 = arg2 + 2 + puVar10;\n                                                uVar3 = puVar15[1];\n                                                uVar4 = puVar15[2];\n                                                uVar5 = puVar15[3];\n                                                *(*0x20 + -0x410) = *puVar15;\n                                                *(*0x20 + -0x40c) = uVar3;\n                                                *(*0x20 + -0x408) = uVar4;\n                                                *(*0x20 + -0x404) = uVar5;\n                                                arg2 = arg2 + 4 + puVar10;\n                                                uVar3 = *(arg2 + 4);\n                                                uVar4 = *(arg2 + 1);\n                                                uVar5 = *(arg2 + 0xc);\n                                                *(*0x20 + -0x400) = *arg2;\n                                                *(*0x20 + -0x3fc) = uVar3;\n                                                *(*0x20 + -0x3f8) = uVar4;\n                                                *(*0x20 + -0x3f4) = uVar5;\n                                                if (*(*0x20 + -0x420) == 1) {\n                                                    arg2 = *(*0x20 + -0x390);\n                                                    iVar9 = *(*0x20 + 0x20);\n                                                    for (puVar12 = NULL; puVar12 < puVar19; puVar12 = puVar12 + 1) {\n                                                        uVar3 = *(arg2 + 4);\n                                                        uVar4 = *(arg2 + 1);\n                                                        uVar5 = *(arg2 + 0xc);\n                                                        *(*0x20 + -0x4e0) = *arg2;\n                                                        *(*0x20 + -0x4dc) = uVar3;\n                                                        *(*0x20 + -0x4d8) = uVar4;\n                                                        *(*0x20 + -0x4d4) = uVar5;\n                                                        uVar3 = *(arg2 + 0x14);\n                                                        uVar4 = *(arg2 + 3);\n                                                        uVar5 = *(arg2 + 0x1c);\n                                                        *(*0x20 + -0x4d0) = *(arg2 + 2);\n                                                        *(*0x20 + -0x4cc) = uVar3;\n                                                        *(*0x20 + -0x4c8) = uVar4;\n                                                        *(*0x20 + -0x4c4) = uVar5;\n                                                        uVar3 = *(arg2 + 0x24);\n                                                        uVar4 = *(arg2 + 5);\n                                                        uVar5 = *(arg2 + 0x2c);\n                                                        *(*0x20 + -0x4c0) = *(arg2 + 4);\n                                                        *(*0x20 + -0x4bc) = uVar3;\n                                                        *(*0x20 + -0x4b8) = uVar4;\n                                                        *(*0x20 + -0x4b4) = uVar5;\n                                                        iVar17 = *(*0x20 + -0x4d8) + *(*0x20 + -0x408);\n                                                        iVar2 = *(*0x20 + -0x4e0);\n                                                        arg2_00 = arg1_00 + iVar17;\n                                                        if (iVar2 != 2) {\n                                                            if (iVar2 == 3) {\n                                                                if (*(*0x20 + -0x4c0) < 9) {\n                                                                    if (*0x5985b0 == 0) {\n                                                                        *(arg1_00 + iVar17) =\n                                                                             *(iVar9 + 0xc0 + *(*0x20 + -0x4c0) * 8);\n                                                                    }\n                                                                    else {\n                                                                        *(*0x20 + -0x610) = 0x480839;\n                                                                        iVar9 = fcn.0045e120(iVar8, unaff_RBX, puVar13);\n                                                                    }\n                                                                    goto code_r0x00480792;\n                                                                }\n                                                            }\n                                                            else {\n                                                                if (iVar2 == 4) {\n                                                                    uVar20 = *(*0x20 + -0x4b8);\n                                                                    arg2_00 = *(*0x20 + -0x4d0);\n                                                                    if (arg2_00 == 0x4) {\n                                                                        if (uVar20 < 0xf) {\n                                                                            *(arg1_00 + iVar17) =\n                                                                                 *(iVar9 + 0x48 + uVar20 * 8);\n                                                                            goto code_r0x00480792;\n                                                                        }\n                                                                    }\n                                                                    else {\n                                                                        if (arg2_00 == 0x8) {\n                                                                            if (uVar20 < 0xf) {\n                                                                                *(arg1_00 + iVar17) =\n                                                                                     *(iVar9 + 0x48 + uVar20 * 8);\n                                                                                goto code_r0x00480792;\n                                                                            }\n                                                                            *(*0x20 + -0x610) = 0x480933;\n                                                                            fcn.0045e420(0xf);\n                                                                        }\n                                                                        *(*0x20 + -0x610) = 0x480946;\n                                                                        fcn.00432de0();\n                                                                    }\n                                                                    *(*0x20 + -0x610) = 0x480953;\n                                                                    fcn.0045e420(0xf);\n                                                                }\n                                                                *(*0x20 + -0x610) = 0x480966;\n                                                                fcn.00432de0();\n                                                            }\n                                                            *(*0x20 + -0x610) = 0x480973;\n                                                            fcn.0045e420(9);\n                                                            goto code_r0x00480973;\n                                                        }\n                                                        *(*0x20 + -0x520) = puVar12;\n                                                        *(*0x20 + -0x348) = arg2;\n                                                        *(*0x20 + -0x610) = 0x4808d5;\n                                                        fcn.0047d1a0(*(*0x20 + -0x4d0));\n                                                        iVar9 = *(*0x20 + 0x20);\n                                                        iVar8 = *(*0x20 + -0x388);\n                                                        unaff_RBX = 0x496200;\n                                                        arg1_00 = *(*0x20 + -0x360);\n                                                        puVar12 = *(*0x20 + -0x520);\n                                                        puVar13 = *(*0x20 + -0x530);\n                                                        arg2 = *(*0x20 + -0x348);\n                                                        puVar19 = *(*0x20 + -0x538);\ncode_r0x00480792:\n                                                        arg2 = arg2 + 6;\n                                                    }\n                                                    puVar10 = *(*0x20 + -0x528);\n                                                    unaff_RDI = puVar13;\n                                                }\n                                                else {\n                                                    if (puVar18 != puVar19) {\ncode_r0x0048077f:\n                                                        arg1_00 = 0x4ca248;\n                                                        *(*0x20 + -0x610) = 0x480792;\n                                                        iVar9 = fcn.00432de0();\n                                                        goto code_r0x00480792;\n                                                    }\n                                                    arg2 = *(*0x20 + -0x390);\n                                                    iVar9 = *(*0x20 + 0x20);\n                                                    for (puVar12 = NULL; puVar12 < puVar19; puVar12 = puVar12 + 1) {\n                                                        uVar3 = *(arg2 + 4);\n                                                        uVar4 = *(arg2 + 1);\n                                                        uVar5 = *(arg2 + 0xc);\n                                                        *(*0x20 + -0x510) = *arg2;\n                                                        *(*0x20 + -0x50c) = uVar3;\n                                                        *(*0x20 + -0x508) = uVar4;\n                                                        *(*0x20 + -0x504) = uVar5;\n                                                        uVar3 = *(arg2 + 0x14);\n                                                        uVar4 = *(arg2 + 3);\n                                                        uVar5 = *(arg2 + 0x1c);\n                                                        *(*0x20 + -0x500) = *(arg2 + 2);\n                                                        *(*0x20 + -0x4fc) = uVar3;\n                                                        *(*0x20 + -0x4f8) = uVar4;\n                                                        *(*0x20 + -0x4f4) = uVar5;\n                                                        uVar3 = *(arg2 + 0x24);\n                                                        uVar4 = *(arg2 + 5);\n                                                        uVar5 = *(arg2 + 0x2c);\n                                                        *(*0x20 + -0x4f0) = *(arg2 + 4);\n                                                        *(*0x20 + -0x4ec) = uVar3;\n                                                        *(*0x20 + -0x4e8) = uVar4;\n                                                        *(*0x20 + -0x4e4) = uVar5;\n                                                        puVar18 = arg2_00 + puVar12 * 6;\n                                                        uVar3 = *(puVar18 + 4);\n                                                        uVar4 = *(puVar18 + 1);\n                                                        uVar5 = *(puVar18 + 0xc);\n                                                        *(*0x20 + -0x450) = *puVar18;\n                                                        *(*0x20 + -0x44c) = uVar3;\n                                                        *(*0x20 + -0x448) = uVar4;\n                                                        *(*0x20 + -0x444) = uVar5;\n                                                        puVar18 = arg2_00 + puVar12 * 6 + 2;\n                                                        uVar3 = *(puVar18 + 4);\n                                                        uVar4 = *(puVar18 + 1);\n                                                        uVar5 = *(puVar18 + 0xc);\n                                                        *(*0x20 + -0x440) = *puVar18;\n                                                        *(*0x20 + -0x43c) = uVar3;\n                                                        *(*0x20 + -0x438) = uVar4;\n                                                        *(*0x20 + -0x434) = uVar5;\n                                                        puVar18 = arg2_00 + puVar12 * 6 + 4;\n                                                        uVar3 = *(puVar18 + 4);\n                                                        uVar4 = *(puVar18 + 1);\n                                                        uVar5 = *(puVar18 + 0xc);\n                                                        *(*0x20 + -0x430) = *puVar18;\n                                                        *(*0x20 + -0x42c) = uVar3;\n                                                        *(*0x20 + -0x428) = uVar4;\n                                                        *(*0x20 + -0x424) = uVar5;\n                                                        iVar2 = *(*0x20 + -0x510);\n                                                        if (*(*0x20 + -0x450) != iVar2) {\ncode_r0x0048076c:\n                                                            *(*0x20 + -0x610) = 0x48077f;\n                                                            fcn.00432de0();\n                                                            goto code_r0x0048077f;\n                                                        }\n                                                        if (iVar2 != 2) {\n                                                            if (iVar2 != 3) {\n                                                                if (iVar2 == 4) {\n                                                                    if (*(*0x20 + -0x4e8) < 0xf) {\n                                                                        if (*(*0x20 + -0x428) < 0xf) {\n                                                                            *(*0x20 + *(*0x20 + -0x428) * 8 + -0xd0) =\n                                                                                 *(iVar9 + 0x48 + *(*0x20 + -0x4e8) * 8)\n                                                                            ;\n                                                                            goto code_r0x004805cb;\n                                                                        }\n                                                                        *(*0x20 + -0x610) = 0x480716;\n                                                                        fcn.0045e420(0xf);\n                                                                    }\n                                                                    *(*0x20 + -0x610) = 0x480725;\n                                                                    fcn.0045e420(0xf);\n                                                                }\n                                                                *(*0x20 + -0x610) = 0x480738;\n                                                                fcn.00432de0();\ncode_r0x00480738:\n                                                                *(*0x20 + -0x610) = 0x480745;\n                                                                fcn.0045e420(9);\n                                                                goto code_r0x00480745;\n                                                            }\n                                                            if (*(*0x20 + -0x4f0) < 9) {\n                                                                if (*(*0x20 + -0x430) < 9) {\n                                                                    *(*0x20 + *(*0x20 + -0x430) * 8 + -0x58) =\n                                                                         *(iVar9 + 0xc0 + *(*0x20 + -0x4f0) * 8);\n                                                                    goto code_r0x0048069c;\n                                                                }\n                                                                goto code_r0x00480752;\n                                                            }\ncode_r0x0048075f:\n                                                            iVar8 = 9;\n                                                            *(*0x20 + -0x610) = 0x48076c;\n                                                            fcn.0045e420(9);\n                                                            goto code_r0x0048076c;\n                                                        }\ncode_r0x0048069c:\n                                                        if (8 < *(*0x20 + -0x4f0)) {\ncode_r0x00480745:\n                                                            *(*0x20 + -0x610) = 0x480752;\n                                                            fcn.0045e420(9);\ncode_r0x00480752:\n                                                            *(*0x20 + -0x610) = 0x48075f;\n                                                            fcn.0045e420(9);\n                                                            goto code_r0x0048075f;\n                                                        }\n                                                        if (8 < *(*0x20 + -0x430)) goto code_r0x00480738;\n                                                        *(*0x20 + *(*0x20 + -0x430) * 8 + -0x118) =\n                                                             *(iVar9 + *(*0x20 + -0x4f0) * 8);\ncode_r0x004805cb:\n                                                        arg2 = arg2 + 6;\n                                                    }\n                                                    puVar10 = *(*0x20 + -0x528);\n                                                }\n                                                goto code_r0x004801a3;\n                                            }\ncode_r0x00480973:\n                                            iVar8 = 0;\n                                            *(*0x20 + -0x610) = 0x48097d;\n                                            fcn.0045e420(0);\n                                        }\n                                        arg1_00 = 0x4ca218;\n                                        *(*0x20 + -0x610) = 0x480990;\n                                        iVar9 = fcn.00432de0();\n                                        goto code_r0x00480990;\n                                    }\n                                    puVar10 = puVar16;\n                                } while (puVar18 == NULL);\n                                *(*0x20 + -0x610) = 0x480b7c;\n                                fcn.00432de0();\ncode_r0x00480b7c:\n                                *(*0x20 + -0x610) = 0x480b87;\n                                fcn.0045e4e0(puVar18);\ncode_r0x00480b87:\n                                *(*0x20 + -0x610) = 0x480b92;\n                                fcn.0045e4a0(puVar18, arg2_00);\ncode_r0x00480b92:\n                                *(*0x20 + -0x610) = 0x480b9d;\n                                fcn.0045e420(puVar19);\ncode_r0x00480b9d:\n                                *(*0x20 + -0x610) = 0x480ba8;\n                                fcn.0045e420(puVar19);\n                                unaff_RDI = puVar13;\ncode_r0x00480ba8:\n                                *(*0x20 + -0x610) = 0x480bb3;\n                                fcn.0045e4e0(puVar18);\ncode_r0x00480bb3:\n                                *(*0x20 + -0x610) = 0x480bbe;\n                                fcn.0045e4a0(puVar18, arg2);\n                                puVar13 = puVar16;\ncode_r0x00480bbe:\n                                *(*0x20 + -0x610) = 0x480bc6;\n                                fcn.0045e420(puVar18);\ncode_r0x00480bc6:\n                                *(*0x20 + -0x610) = 0x480bcb;\n                                fcn.0045e420(puVar18);\n                            }\n                            else {\n                                iVar8 = iVar8 + iVar9;\n                                if (puVar13 < 0x100001) goto code_r0x0048017e;\n                            }\n                            unaff_RBX = puVar13 & 0xffffffff;\n                            *(*0x20 + -0x610) = 0x480bd8;\n                            fcn.0045e520(puVar18, unaff_RBX);\n                            goto code_r0x00480bd8;\n                        }\n                        if (iVar8 == 2) {\n                            iVar8 = *(*0x20 + -0x350);\n                            uVar14 = *(*0x20 + -0x518);\n                            puVar13 = *(*0x20 + -0x348);\n                            goto code_r0x00480042;\n                        }\ncode_r0x00480be5:\n                        *(*0x20 + -0x610) = 0x480bf8;\n                        fcn.00432de0();\ncode_r0x00480bf8:\n                        *(*0x20 + -0x610) = 0x480c05;\n                        fcn.0045e420(9);\n                    }\n                    else {\n                        if (iVar8 != 3) {\n                            if (iVar8 != 4) goto code_r0x00480be5;\n                            uVar20 = *(*0x20 + -0x458);\n                            if (uVar20 < 0xf) {\n                                if ((*(*(*0x20 + -0x350) + 0x17) & 0x1f) == 0x14) {\n                                    *(*0x20 + uVar20 * 8 + -0xd0) = *(*(*0x20 + -0x348) + 8);\n                                }\n                                else if (((*(*0x20 + -0x518) >> 7 & 1) == 0) ||\n                                        ((*(*(*0x20 + -0x350) + 0x17) & 0x20) == 0)) {\n                                    *(*0x20 + uVar20 * 8 + -0xd0) = *(*0x20 + -0x348);\n                                }\n                                else {\n                                    *(*0x20 + uVar20 * 8 + -0xd0) = **(*0x20 + -0x348);\n                                }\n                                goto code_r0x00480136;\n                            }\ncode_r0x00480bd8:\n                            *(*0x20 + -0x610) = 0x480be5;\n                            fcn.0045e420(0xf);\n                            goto code_r0x00480be5;\n                        }\n                        uVar20 = *(*0x20 + -0x460);\n                        if (uVar20 < 9) {\n                            iVar8 = *(*0x20 + -0x350);\n                            if ((*(iVar8 + 0x17) & 0x1f) == 0x14) {\n                                puVar13 = *(*0x20 + -0x348);\n                                *(*0x20 + uVar20 * 8 + -0x58) = puVar13[1];\n                                uVar14 = *(*0x20 + -0x518);\n                            }\n                            else {\n                                uVar14 = *(*0x20 + -0x518);\n                                if (((uVar14 >> 7 & 1) == 0) || ((*(iVar8 + 0x17) & 0x20) == 0)) {\n                                    puVar13 = *(*0x20 + -0x348);\n                                    *(*0x20 + uVar20 * 8 + -0x58) = puVar13;\n                                }\n                                else {\n                                    puVar13 = *(*0x20 + -0x348);\n                                    *(*0x20 + uVar20 * 8 + -0x58) = *puVar13;\n                                }\n                            }\ncode_r0x00480042:\n                            uVar20 = *(*0x20 + -0x460);\n                            if (uVar20 < 9) {\n                                if ((*(iVar8 + 0x17) & 0x1f) == 0x14) {\n                                    *(*0x20 + uVar20 * 8 + -0x118) = puVar13[1];\n                                }\n                                else if (((uVar14 >> 7 & 1) == 0) || ((*(iVar8 + 0x17) & 0x20) == 0)) {\n                                    *(*0x20 + uVar20 * 8 + -0x118) = puVar13;\n                                }\n                                else {\n                                    *(*0x20 + uVar20 * 8 + -0x118) = *puVar13;\n                                }\n                                goto code_r0x00480136;\n                            }\n                            goto code_r0x00480bf8;\n                        }\n                    }\n                    *(*0x20 + -0x610) = 0x480c0f;\n                    fcn.0045e420(9);\n                }\n                *(*0x20 + -0x610) = 0x480c19;\n                fcn.0045e420(0);\n            }\n            arg1 = 0x497f80;\n            *(*0x20 + -0x610) = 0x480c28;\n            in_RAX = fcn.00409c20(0x497f80);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + 0x18) = arg1;\n        *(puVar11 + 0x20) = unaff_RDI;\n        *(puVar11 + -8) = 0x480c45;\n        fcn.0045bdc0();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        arg1 = *(puVar11 + 0x18);\n        unaff_RDI = *(puVar11 + 0x20);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 10678
    },
    "null": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0048bc40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0048bc40(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t *noname_2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX <= unaff_RDI) {\n                return 0;\n            }\n            if (unaff_RDI < unaff_RBX) {\n                iVar1 = *(in_RAX + unaff_RDI * 0x10);\n                noname_2 = *(in_RAX + 8 + unaff_RDI * 0x10);\n                if (iVar1 == 0x495980) {\n                    uVar4 = *noname_2;\n                }\n                else {\n                    uVar4 = 0;\n                    if (iVar1 == 0) {\n                        noname_2 = NULL;\n                        uVar5 = 0;\n                    }\n                    else {\n                        puVar2 = *0x545560;\n                        if ((*0x545550 != '\\0') && (*0x545558 = iVar1,  puVar2 = noname_2,  *0x5985b0 != 0)) {\n                            *(*0x20 + -0x30) = 0x48bcda;\n                            fcn.0045e100(arg1, unaff_RDI, noname_2, 0x495980);\n                            puVar2 = *0x545560;\n                        }\n                        *0x545560 = puVar2;\n                        *(*0x20 + -0x18) = iVar1;\n                        *(*0x20 + -0x10) = noname_2;\n                        if (*(*0x20 + -0x18) == 0) {\n                            uVar5 = 0;\n                            noname_2 = NULL;\n                        }\n                        else {\n                            uVar5 = *(*(*0x20 + -0x18) + 0x17) & 0x1f;\n                        }\n                    }\n                    uVar6 = uVar5;\n                    if (uVar6 - 2 < 5) {\n                        if (uVar6 < 4) {\n                            if (uVar6 == 2) {\n                                uVar4 = *noname_2;\n                            }\n                            else {\n                                uVar4 = *noname_2;\n                            }\n                        }\n                        else if (uVar6 == 4) {\n                            uVar4 = *noname_2;\n                        }\n                        else if (uVar6 == 5) {\n                            uVar4 = *noname_2;\n                        }\n                        else {\n                            uVar4 = *noname_2;\n                        }\n                    }\n                    else if (uVar6 - 7 < 6) {\n                        if (uVar6 < 10) {\n                            if (uVar6 == 7) {\n                                uVar6 = *noname_2;\n                            }\n                            else if (uVar6 == 8) {\n                                uVar6 = *noname_2;\n                            }\n                            else {\n                                uVar6 = *noname_2;\n                            }\n                        }\n                        else if (uVar6 == 10) {\n                            uVar6 = *noname_2;\n                        }\n                        else if (uVar6 == 0xb) {\n                            uVar6 = *noname_2;\n                        }\n                        else {\n                            uVar6 = *noname_2;\n                        }\n                        if (-1 < uVar6) {\n                            uVar4 = uVar6;\n                        }\n                    }\n                }\n                if (2000000 < uVar4 + 1000000) {\n                    uVar4 = 0;\n                }\n                return uVar4;\n            }\n            *(*0x20 + -0x30) = 0x48be14;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045e420(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x48be2e;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1179
    },
    "0048be60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0048be60(void)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (unaff_RBX < 3) {\n        return 0;\n    }\n    iVar3 = 1;\n    while( true ) {\n        if (unaff_RBX <= iVar3) {\n            return 0;\n        }\n        if (*(in_RAX + iVar3) == ']') break;\n        iVar3 = iVar3 + 1;\n    }\n    if (iVar3 < 2) {\n        bVar2 = false;\n        iVar5 = 0;\n        iVar4 = iVar3;\n    }\n    else {\n        bVar2 = false;\n        iVar5 = 0;\n        for (iVar4 = 1; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n            uVar1 = *(in_RAX + iVar4);\n            if ((uVar1 < 0x30) || (0x39 < uVar1)) break;\n            if (2000000 < iVar5 + 1000000U) {\n                bVar2 = false;\n                iVar5 = 0;\n                iVar4 = iVar3;\n                break;\n            }\n            iVar5 = (uVar1 - 0x30 & 0xff) + iVar5 * 10;\n            bVar2 = true;\n        }\n    }\n    if ((bVar2) && (iVar4 == iVar3)) {\n        return iVar5 + -1;\n    }\n    return 0;\n}\n",
        "token_count": 368
    },
    "00402480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00402480(uchar (*arg1) [32])\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uchar (*in_RAX) [32];\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uchar auVar6 [16];\n    uint8_t uVar7;\n    uchar auVar8 [32];\n    uchar auVar9 [32];\n    uchar auVar10 [32];\n    uchar auVar11 [32];\n    \n    if (in_RAX != arg1) {\n        uVar5 = unaff_RDI;\n        if (unaff_RBX < unaff_RDI) {\n            uVar5 = unaff_RBX;\n        }\n        if (uVar5 < 8) {\n            if (uVar5 * -8 != 0) {\n                uVar7 = uVar5 * -8;\n                if (in_RAX < 0xf9) {\n                    uVar3 = **in_RAX;\n                }\n                else {\n                    uVar3 = *(in_RAX[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar3 = uVar3 << (uVar7 & 0x3f);\n                if (arg1 < 0xf9) {\n                    uVar5 = **arg1;\n                }\n                else {\n                    uVar5 = *(arg1[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar5 = uVar5 << (uVar7 & 0x3f);\n                uVar3 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                        (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                        (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n                uVar5 = (uVar5 >> 0x38 | (uVar5 & 0xff000000000000) >> 0x28 | (uVar5 & 0xff0000000000) >> 0x18 |\n                         (uVar5 & 0xff00000000) >> 8 | (uVar5 & 0xff000000) << 8 | (uVar5 & 0xff0000) << 0x18 |\n                         (uVar5 & 0xff00) << 0x28 | uVar5 << 0x38) ^ uVar3;\n                if (uVar5 != 0) {\n                    iVar1 = 0x3f;\n                    if (uVar5 != 0) {\n                        for (; uVar5 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                        }\n                    }\n                    return (uVar3 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n                }\n            }\n            goto code_r0x0040236b;\n        }\n        if (0x3f < uVar5) {\n            if (*0x598a83 == '\\x01') {\n                do {\n                    auVar8 = vmovdqu_avx(*in_RAX);\n                    auVar9 = vmovdqu_avx(*arg1);\n                    auVar10 = vmovdqu_avx(in_RAX[1]);\n                    auVar11 = vmovdqu_avx(arg1[1]);\n                    auVar8 = vpcmpeqb_avx2(auVar9, auVar8);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x004022bd;\n                    }\n                    auVar8 = vpcmpeqb_avx2(auVar11, auVar10);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x004022ab;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x3f < uVar5);\n                vzeroupper_avx();\n            }\n            else {\n                do {\n                    uVar7 = -((*arg1)[0xf] == (*in_RAX)[0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == (*in_RAX)[0xe]), \n                                                        CONCAT113(-((*arg1)[0xd] == (*in_RAX)[0xd]), \n                                                                  CONCAT112(-((*arg1)[0xc] == (*in_RAX)[0xc]), \n                                                                            CONCAT111(-((*arg1)[0xb] == (*in_RAX)[0xb])\n                                                                                      , CONCAT110(-((*arg1)[10] ==\n                                                                                                   (*in_RAX)[10]), \n                                                                                                  CONCAT19(-((*arg1)[9]\n                                                                                                            == (*in_RAX)\n                                                            [9]), CONCAT18(-((*arg1)[8] == (*in_RAX)[8]), \n                                                                           CONCAT17(-((*arg1)[7] == (*in_RAX)[7]), \n                                                                                    CONCAT16(-((*arg1)[6] ==\n                                                                                              (*in_RAX)[6]), \n                                                                                             CONCAT15(-((*arg1)[5] ==\n                                                                                                       (*in_RAX)[5]), \n                                                                                                      CONCAT14(-((*arg1)\n                                                            [4] == (*in_RAX)[4]), \n                                                            CONCAT13(-((*arg1)[3] == (*in_RAX)[3]), \n                                                                     CONCAT12(-((*arg1)[2] == (*in_RAX)[2]), \n                                                                              CONCAT11(-((*arg1)[1] == (*in_RAX)[1]), \n                                                                                       -((*arg1)[0] == (*in_RAX)[0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x004022bd;\n                    uVar7 = -((*arg1)[0x1f] == (*in_RAX)[0x1f]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0x1e] == (*in_RAX)[0x1e]), \n                                                        CONCAT113(-((*arg1)[0x1d] == (*in_RAX)[0x1d]), \n                                                                  CONCAT112(-((*arg1)[0x1c] == (*in_RAX)[0x1c]), \n                                                                            CONCAT111(-((*arg1)[0x1b] == (*in_RAX)[0x1b]\n                                                                                       ), CONCAT110(-((*arg1)[0x1a] ==\n                                                                                                     (*in_RAX)[0x1a]), \n                                                                                                    CONCAT19(-((*arg1)[\n                                                            0x19] == (*in_RAX)[0x19]), \n                                                            CONCAT18(-((*arg1)[0x18] == (*in_RAX)[0x18]), \n                                                                     CONCAT17(-((*arg1)[0x17] == (*in_RAX)[0x17]), \n                                                                              CONCAT16(-((*arg1)[0x16] ==\n                                                                                        (*in_RAX)[0x16]), \n                                                                                       CONCAT15(-((*arg1)[0x15] ==\n                                                                                                 (*in_RAX)[0x15]), \n                                                                                                CONCAT14(-((*arg1)[0x14]\n                                                                                                          == (*in_RAX)[\n                                                            0x14]), CONCAT13(-((*arg1)[0x13] == (*in_RAX)[0x13]), \n                                                                             CONCAT12(-((*arg1)[0x12] == (*in_RAX)[0x12]\n                                                                                       ), CONCAT11(-((*arg1)[0x11] ==\n                                                                                                    (*in_RAX)[0x11]), \n                                                                                                   -((*arg1)[0x10] ==\n                                                                                                    (*in_RAX)[0x10])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = *in_RAX + 0x10;\n                        arg1 = *arg1 + 0x10;\n                        goto code_r0x004022bd;\n                    }\n                    uVar7 = -(arg1[1][0xf] == in_RAX[1][0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0xe] == in_RAX[1][0xe]), \n                                                        CONCAT113(-(arg1[1][0xd] == in_RAX[1][0xd]), \n                                                                  CONCAT112(-(arg1[1][0xc] == in_RAX[1][0xc]), \n                                                                            CONCAT111(-(arg1[1][0xb] == in_RAX[1][0xb])\n                                                                                      , CONCAT110(-(arg1[1][10] ==\n                                                                                                   in_RAX[1][10]), \n                                                                                                  CONCAT19(-(arg1[1][9]\n                                                                                                            == in_RAX[1]\n                                                            [9]), CONCAT18(-(arg1[1][8] == in_RAX[1][8]), \n                                                                           CONCAT17(-(arg1[1][7] == in_RAX[1][7]), \n                                                                                    CONCAT16(-(arg1[1][6] ==\n                                                                                              in_RAX[1][6]), \n                                                                                             CONCAT15(-(arg1[1][5] ==\n                                                                                                       in_RAX[1][5]), \n                                                                                                      CONCAT14(-(arg1[1]\n                                                            [4] == in_RAX[1][4]), \n                                                            CONCAT13(-(arg1[1][3] == in_RAX[1][3]), \n                                                                     CONCAT12(-(arg1[1][2] == in_RAX[1][2]), \n                                                                              CONCAT11(-(arg1[1][1] == in_RAX[1][1]), \n                                                                                       -(arg1[1][0] == in_RAX[1][0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x004022ab;\n                    auVar6 = *(in_RAX[1] + 0x10);\n                    uVar7 = -(arg1[1][0x1f] == SUB161(auVar6 >> 0x78, 0));\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0x1e] == SUB161(auVar6 >> 0x70, 0)), \n                                                        CONCAT113(-(arg1[1][0x1d] == SUB161(auVar6 >> 0x68, 0)), \n                                                                  CONCAT112(-(arg1[1][0x1c] == SUB161(auVar6 >> 0x60, 0)\n                                                                             ), CONCAT111(-(arg1[1][0x1b] ==\n                                                                                           SUB161(auVar6 >> 0x58, 0)), \n                                                                                          CONCAT110(-(arg1[1][0x1a] ==\n                                                                                                     SUB161(auVar6 >> \n                                                            0x50, 0)), \n                                                            CONCAT19(-(arg1[1][0x19] == SUB161(auVar6 >> 0x48, 0)), \n                                                                     CONCAT18(-(arg1[1][0x18] ==\n                                                                               SUB161(auVar6 >> 0x40, 0)), \n                                                                              CONCAT17(-(arg1[1][0x17] ==\n                                                                                        SUB161(auVar6 >> 0x38, 0)), \n                                                                                       CONCAT16(-(arg1[1][0x16] ==\n                                                                                                 SUB161(auVar6 >> 0x30, \n                                                                                                        0)), \n                                                                                                CONCAT15(-(arg1[1][0x15]\n                                                                                                          == SUB161(\n                                                            auVar6 >> 0x28, 0)), \n                                                            CONCAT14(-(arg1[1][0x14] == SUB161(auVar6 >> 0x20, 0)), \n                                                                     CONCAT13(-(arg1[1][0x13] ==\n                                                                               SUB161(auVar6 >> 0x18, 0)), \n                                                                              CONCAT12(-(arg1[1][0x12] ==\n                                                                                        SUB161(auVar6 >> 0x10, 0)), \n                                                                                       CONCAT11(-(arg1[1][0x11] ==\n                                                                                                 SUB161(auVar6 >> 8, 0))\n                                                                                                , -(arg1[1][0x10] ==\n                                                                                                   SUB161(auVar6, 0)))))\n                                                                    ))))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = in_RAX[1] + 0x10;\n                        arg1 = arg1[1] + 0x10;\n                        goto code_r0x004022bd;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x40 < uVar5);\n            }\n        }\n        for (; 0x10 < uVar5; uVar5 = uVar5 - 0x10) {\n            auVar6 = **in_RAX;\n            uVar7 = -((*arg1)[0xf] == SUB161(auVar6 >> 0x78, 0));\n            auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == SUB161(auVar6 >> 0x70, 0)), \n                                                CONCAT113(-((*arg1)[0xd] == SUB161(auVar6 >> 0x68, 0)), \n                                                          CONCAT112(-((*arg1)[0xc] == SUB161(auVar6 >> 0x60, 0)), \n                                                                    CONCAT111(-((*arg1)[0xb] ==\n                                                                               SUB161(auVar6 >> 0x58, 0)), \n                                                                              CONCAT110(-((*arg1)[10] ==\n                                                                                         SUB161(auVar6 >> 0x50, 0)), \n                                                                                        CONCAT19(-((*arg1)[9] ==\n                                                                                                  SUB161(auVar6 >> 0x48\n                                                                                                         , 0)), \n                                                                                                 CONCAT18(-((*arg1)[8]\n                                                                                                           == SUB161(\n                                                            auVar6 >> 0x40, 0)), \n                                                            CONCAT17(-((*arg1)[7] == SUB161(auVar6 >> 0x38, 0)), \n                                                                     CONCAT16(-((*arg1)[6] == SUB161(auVar6 >> 0x30, 0))\n                                                                              , CONCAT15(-((*arg1)[5] ==\n                                                                                          SUB161(auVar6 >> 0x28, 0)), \n                                                                                         CONCAT14(-((*arg1)[4] ==\n                                                                                                   SUB161(auVar6 >> 0x20\n                                                                                                          , 0)), \n                                                                                                  CONCAT13(-((*arg1)[3]\n                                                                                                            == SUB161(\n                                                            auVar6 >> 0x18, 0)), \n                                                            CONCAT12(-((*arg1)[2] == SUB161(auVar6 >> 0x10, 0)), \n                                                                     CONCAT11(-((*arg1)[1] == SUB161(auVar6 >> 8, 0)), \n                                                                              -((*arg1)[0] == SUB161(auVar6, 0))))))))))\n                                                            )))))));\n            uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n            if (uVar3 != 0) goto code_r0x004022bd;\n            in_RAX = *in_RAX + 0x10;\n            arg1 = *arg1 + 0x10;\n        }\n        if (8 < uVar5) {\n            uVar3 = **in_RAX;\n            uVar4 = **arg1;\n            if (uVar3 != uVar4) goto code_r0x004022f6;\n        }\n        uVar3 = *(in_RAX[-1] + uVar5 + 0x18);\n        uVar4 = *(arg1[-1] + uVar5 + 0x18);\n        if (uVar3 != uVar4) {\ncode_r0x004022f6:\n            uVar5 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                    (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                    (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n            uVar3 = (uVar4 >> 0x38 | (uVar4 & 0xff000000000000) >> 0x28 | (uVar4 & 0xff0000000000) >> 0x18 |\n                     (uVar4 & 0xff00000000) >> 8 | (uVar4 & 0xff000000) << 8 | (uVar4 & 0xff0000) << 0x18 |\n                     (uVar4 & 0xff00) << 0x28 | uVar4 << 0x38) ^ uVar5;\n            iVar1 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            return (uVar5 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n        }\n    }\ncode_r0x0040236b:\n    return ((unaff_RBX == unaff_RDI) - 1) + (unaff_RBX != unaff_RDI && unaff_RDI <= unaff_RBX) * 2;\ncode_r0x004022ab:\n    in_RAX = in_RAX[1];\n    arg1 = arg1[1];\ncode_r0x004022bd:\n    iVar1 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    return ((*arg1)[iVar1] <= (*in_RAX)[iVar1] && (*in_RAX)[iVar1] != (*arg1)[iVar1]) * 2 + -1;\n}\n",
        "token_count": 7667
    },
    "004025e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004025e0(uint64_t arg1, ulong arg2)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar (*in_RAX) [32];\n    uint8_t uVar5;\n    uchar (*unaff_RBX) [32];\n    uchar (*pauVar6) [32];\n    uint64_t uVar7;\n    uint64_t uVar8;\n    bool bVar9;\n    uchar auVar10 [16];\n    uchar auVar11 [32];\n    uchar auVar12 [32];\n    uchar auVar13 [32];\n    uchar auVar14 [32];\n    \n    if (in_RAX == unaff_RBX) {\n        return 1;\n    }\n    if (7 < arg1) {\n        pauVar6 = in_RAX;\n        if (0x3f < arg1) {\n            if (*0x598a83 == '\\x01') {\n                while (0x3f < arg1) {\n                    auVar11 = vmovdqu_avx(*pauVar6);\n                    auVar12 = vmovdqu_avx(*unaff_RBX);\n                    auVar13 = vmovdqu_avx(pauVar6[1]);\n                    auVar14 = vmovdqu_avx(unaff_RBX[1]);\n                    auVar11 = vpcmpeqb_avx2(auVar11, auVar12);\n                    auVar12 = vpcmpeqb_avx2(auVar14, auVar13);\n                    auVar11 = vpand_avx2(auVar12, auVar11);\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB321(auVar11 >> 7, 0) & 1 | (SUB321(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB321(auVar11 >> 0x17, 0) & 1) << 2 | (SUB321(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB321(auVar11 >> 0x27, 0) & 1) << 4 | (SUB321(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB321(auVar11 >> 0x37, 0) & 1) << 6 | (SUB321(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB321(auVar11 >> 0x47, 0) & 1) << 8 | (SUB321(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB321(auVar11 >> 0x57, 0) & 1) << 10 | (SUB321(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB321(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB321(auVar11 >> 0x77, 0) & 1) << 0xe | SUB321(auVar11 >> 0x7f, 0) << 0xf |\n                         (SUB321(auVar11 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar11 >> 0x8f, 0) & 1) << 0x11 |\n                         (SUB321(auVar11 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar11 >> 0x9f, 0) & 1) << 0x13 |\n                         (SUB321(auVar11 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar11 >> 0xaf, 0) & 1) << 0x15 |\n                         (SUB321(auVar11 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar11 >> 0xbf, 0) << 0x17 |\n                         (SUB321(auVar11 >> 199, 0) & 1) << 0x18 | (SUB321(auVar11 >> 0xcf, 0) & 1) << 0x19 |\n                         (SUB321(auVar11 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar11 >> 0xdf, 0) & 1) << 0x1b |\n                         (SUB321(auVar11 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar11 >> 0xef, 0) & 1) << 0x1d |\n                         (SUB321(auVar11 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar11 >> 0xff, 0) << 0x1f) != 0xffffffff) {\n                        vzeroupper_avx();\n                        return 0;\n                    }\n                }\n                vzeroupper_avx();\n            }\n            else {\n                while (0x3f < arg1) {\n                    auVar10 = **unaff_RBX;\n                    auVar1 = *(*unaff_RBX + 0x10);\n                    auVar2 = *unaff_RBX[1];\n                    auVar10 = CONCAT115(-((*pauVar6)[0xf] == SUB161(auVar10 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0xe] == SUB161(auVar10 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0xd] == SUB161(auVar10 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0xc] == SUB161(auVar10 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0xb] ==\n                                                                                 SUB161(auVar10 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[10] ==\n                                                                                           SUB161(auVar10 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[9] ==\n                                                                                                    SUB161(auVar10 >>\n                                                                                                           0x48, 0)), \n                                                                                                   CONCAT18(-((*pauVar6)\n                                                                                                              [8] == \n                                                            SUB161(auVar10 >> 0x40, 0)), \n                                                            CONCAT17(-((*pauVar6)[7] == SUB161(auVar10 >> 0x38, 0)), \n                                                                     CONCAT16(-((*pauVar6)[6] ==\n                                                                               SUB161(auVar10 >> 0x30, 0)), \n                                                                              CONCAT15(-((*pauVar6)[5] ==\n                                                                                        SUB161(auVar10 >> 0x28, 0)), \n                                                                                       CONCAT14(-((*pauVar6)[4] ==\n                                                                                                 SUB161(auVar10 >> 0x20\n                                                                                                        , 0)), \n                                                                                                CONCAT13(-((*pauVar6)[3]\n                                                                                                          == SUB161(\n                                                            auVar10 >> 0x18, 0)), \n                                                            CONCAT12(-((*pauVar6)[2] == SUB161(auVar10 >> 0x10, 0)), \n                                                                     CONCAT11(-((*pauVar6)[1] == SUB161(auVar10 >> 8, 0)\n                                                                               ), -((*pauVar6)[0] == SUB161(auVar10, 0))\n                                                                             ))))))))))))))) &\n                              CONCAT115(-((*pauVar6)[0x1f] == SUB161(auVar1 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0x1e] == SUB161(auVar1 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0x1d] == SUB161(auVar1 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0x1c] == SUB161(auVar1 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0x1b] ==\n                                                                                 SUB161(auVar1 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[0x1a] ==\n                                                                                           SUB161(auVar1 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[0x19] ==\n                                                                                                    SUB161(auVar1 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-((*pauVar6)[0x18] == SUB161(auVar1 >> 0x40, 0)), \n                                                                     CONCAT17(-((*pauVar6)[0x17] ==\n                                                                               SUB161(auVar1 >> 0x38, 0)), \n                                                                              CONCAT16(-((*pauVar6)[0x16] ==\n                                                                                        SUB161(auVar1 >> 0x30, 0)), \n                                                                                       CONCAT15(-((*pauVar6)[0x15] ==\n                                                                                                 SUB161(auVar1 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-((*pauVar6)\n                                                                                                           [0x14] ==\n                                                                                                          SUB161(auVar1 \n                                                            >> 0x20, 0)), \n                                                            CONCAT13(-((*pauVar6)[0x13] == SUB161(auVar1 >> 0x18, 0)), \n                                                                     CONCAT12(-((*pauVar6)[0x12] ==\n                                                                               SUB161(auVar1 >> 0x10, 0)), \n                                                                              CONCAT11(-((*pauVar6)[0x11] ==\n                                                                                        SUB161(auVar1 >> 8, 0)), \n                                                                                       -((*pauVar6)[0x10] ==\n                                                                                        SUB161(auVar1, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0xf] == SUB161(auVar2 >> 0x78, 0)), \n                                        CONCAT114(-(pauVar6[1][0xe] == SUB161(auVar2 >> 0x70, 0)), \n                                                  CONCAT113(-(pauVar6[1][0xd] == SUB161(auVar2 >> 0x68, 0)), \n                                                            CONCAT112(-(pauVar6[1][0xc] == SUB161(auVar2 >> 0x60, 0)), \n                                                                      CONCAT111(-(pauVar6[1][0xb] ==\n                                                                                 SUB161(auVar2 >> 0x58, 0)), \n                                                                                CONCAT110(-(pauVar6[1][10] ==\n                                                                                           SUB161(auVar2 >> 0x50, 0)), \n                                                                                          CONCAT19(-(pauVar6[1][9] ==\n                                                                                                    SUB161(auVar2 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-(pauVar6[1][8] == SUB161(auVar2 >> 0x40, 0)), \n                                                                     CONCAT17(-(pauVar6[1][7] ==\n                                                                               SUB161(auVar2 >> 0x38, 0)), \n                                                                              CONCAT16(-(pauVar6[1][6] ==\n                                                                                        SUB161(auVar2 >> 0x30, 0)), \n                                                                                       CONCAT15(-(pauVar6[1][5] ==\n                                                                                                 SUB161(auVar2 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-(pauVar6[1][4]\n                                                                                                          == SUB161(\n                                                            auVar2 >> 0x20, 0)), \n                                                            CONCAT13(-(pauVar6[1][3] == SUB161(auVar2 >> 0x18, 0)), \n                                                                     CONCAT12(-(pauVar6[1][2] ==\n                                                                               SUB161(auVar2 >> 0x10, 0)), \n                                                                              CONCAT11(-(pauVar6[1][1] ==\n                                                                                        SUB161(auVar2 >> 8, 0)), \n                                                                                       -(pauVar6[1][0] ==\n                                                                                        SUB161(auVar2, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0x1f] == unaff_RBX[1][0x1f]), \n                                        CONCAT114(-(pauVar6[1][0x1e] == unaff_RBX[1][0x1e]), \n                                                  CONCAT113(-(pauVar6[1][0x1d] == unaff_RBX[1][0x1d]), \n                                                            CONCAT112(-(pauVar6[1][0x1c] == unaff_RBX[1][0x1c]), \n                                                                      CONCAT111(-(pauVar6[1][0x1b] == unaff_RBX[1][0x1b]\n                                                                                 ), CONCAT110(-(pauVar6[1][0x1a] ==\n                                                                                               unaff_RBX[1][0x1a]), \n                                                                                              CONCAT19(-(pauVar6[1]\n                                                                                                         [0x19] ==\n                                                                                                        unaff_RBX[1]\n                                                                                                        [0x19]), \n                                                                                                       CONCAT18(-(\n                                                            pauVar6[1][0x18] == unaff_RBX[1][0x18]), \n                                                            CONCAT17(-(pauVar6[1][0x17] == unaff_RBX[1][0x17]), \n                                                                     CONCAT16(-(pauVar6[1][0x16] == unaff_RBX[1][0x16])\n                                                                              , CONCAT15(-(pauVar6[1][0x15] ==\n                                                                                          unaff_RBX[1][0x15]), \n                                                                                         CONCAT14(-(pauVar6[1][0x14] ==\n                                                                                                   unaff_RBX[1][0x14]), \n                                                                                                  CONCAT13(-(pauVar6[1]\n                                                                                                             [0x13] ==\n                                                                                                            unaff_RBX[1]\n                                                                                                            [0x13]), \n                                                                                                           CONCAT12(-(\n                                                            pauVar6[1][0x12] == unaff_RBX[1][0x12]), \n                                                            CONCAT11(-(pauVar6[1][0x11] == unaff_RBX[1][0x11]), \n                                                                     -(pauVar6[1][0x10] == unaff_RBX[1][0x10])))))))))))\n                                                            )))));\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB161(auVar10 >> 7, 0) & 1 | (SUB161(auVar10 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar10 >> 0x17, 0) & 1) << 2 | (SUB161(auVar10 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar10 >> 0x27, 0) & 1) << 4 | (SUB161(auVar10 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar10 >> 0x37, 0) & 1) << 6 | (SUB161(auVar10 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar10 >> 0x47, 0) & 1) << 8 | (SUB161(auVar10 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar10 >> 0x57, 0) & 1) << 10 | (SUB161(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar10 >> 0x77, 0) & 1) << 0xe | SUB161(auVar10 >> 0x7f, 0) << 0xf) != 0xffff) {\n                        return 0;\n                    }\n                }\n            }\n        }\n        do {\n            if (arg1 < 9) {\n                return in_RAX & 0xffffffffffffff00 | *(pauVar6[-1] + arg1 + 0x18) == *(unaff_RBX[-1] + arg1 + 0x18);\n            }\n            puVar3 = *pauVar6;\n            puVar4 = *unaff_RBX;\n            pauVar6 = *pauVar6 + 8;\n            unaff_RBX = *unaff_RBX + 8;\n            arg1 = arg1 - 8;\n        } while (*puVar3 == *puVar4);\n        return 0;\n    }\n    bVar9 = arg1 == 0;\n    if (!bVar9) {\n        uVar5 = arg1 * -8;\n        if (in_RAX < 0xf9) {\n            uVar7 = **in_RAX;\n        }\n        else {\n            uVar7 = *(in_RAX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        if (unaff_RBX < 0xf9) {\n            uVar8 = **unaff_RBX;\n        }\n        else {\n            uVar8 = *(unaff_RBX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        bVar9 = (arg1 * -8 & 0x3f) != 0;\n        bVar9 = !bVar9 && uVar8 - uVar7 == 0 || bVar9 && uVar8 - uVar7 << (uVar5 & 0x3f) == 0;\n    }\n    return in_RAX & 0xffffffffffffff00 | bVar9;\n}\n",
        "token_count": 4146
    },
    "00402740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402740(ulong noname_0, ulong arg2)\n\n{\n    uchar (*pauVar1) [32];\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint64_t in_RAX;\n    uint32_t uVar5;\n    bool bVar6;\n    uchar auVar7 [16];\n    uint8_t uVar9;\n    uchar auVar8 [32];\n    uchar auVar10 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uint8_t uStackX24;\n    \n    if (uStackX16 < 0x10) {\n        if (uStackX16 != 0) {\n            if ((*pauStackX8 + 0x10 & 0xff0) == 0) {\n                puVar2 = pauStackX8[-1] + uStackX16 + 0x10;\n                auVar7 = CONCAT115(-(puVar2[0xf] == uStackX24), \n                                   CONCAT114(-(puVar2[0xe] == uStackX24), \n                                             CONCAT113(-(puVar2[0xd] == uStackX24), \n                                                       CONCAT112(-(puVar2[0xc] == uStackX24), \n                                                                 CONCAT111(-(puVar2[0xb] == uStackX24), \n                                                                           CONCAT110(-(puVar2[10] == uStackX24), \n                                                                                     CONCAT19(-(puVar2[9] == uStackX24)\n                                                                                              , CONCAT18(-(puVar2[8] ==\n                                                                                                          uStackX24), \n                                                                                                         CONCAT17(-(\n                                                            puVar2[7] == uStackX24), \n                                                            CONCAT16(-(puVar2[6] == uStackX24), \n                                                                     CONCAT15(-(puVar2[5] == uStackX24), \n                                                                              CONCAT14(-(puVar2[4] == uStackX24), \n                                                                                       CONCAT13(-(puVar2[3] == uStackX24\n                                                                                                 ), CONCAT12(-(puVar2[2]\n                                                                                                              == \n                                                            uStackX24), \n                                                            CONCAT11(-(puVar2[1] == uStackX24), -(*puVar2 == uStackX24))\n                                                            ))))))))))))));\n                uVar5 = ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                          (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                          (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                          (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                          (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                          (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                          (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                          (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (-(puVar2[0xf] == uStackX24) >> 7) << 0xf) <<\n                        (uStackX16 & 0x1f)) >> 0x10;\n                iVar3 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                if (uVar5 != 0) {\n                    return;\n                }\n            }\n            else {\n                uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n                auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                    CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                              CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                        CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                                  CONCAT110(-((*pauStackX8)[10] ==\n                                                                                             uStackX24), \n                                                                                            CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n                uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n                uVar5 = 0;\n                if (uVar4 != 0) {\n                    for (; (uVar4 >> uVar5 & 1) == 0; uVar5 = uVar5 + 1) {\n                    }\n                }\n                if ((uVar4 != 0) && (uVar5 < uStackX16)) {\n                    return;\n                }\n            }\n        }\n    }\n    else {\n        if ((0x20 < uStackX16) && (bVar6 = *0x598a83 == '\\x01',  bVar6)) {\n            pauVar1 = pauStackX8[-1] + uStackX16;\n            auVar8 = vpbroadcastb_avx2(ZEXT816(in_RAX & 0xffffffffffffff00 | uStackX24));\n            do {\n                auVar10 = vmovdqu_avx(*pauStackX8);\n                auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n                vptest_avx(auVar10, auVar10);\n                if (!bVar6) goto code_r0x00402723;\n                pauStackX8 = pauStackX8[1];\n                bVar6 = pauStackX8 == pauVar1;\n            } while (pauStackX8 < pauVar1);\n            auVar10 = vmovdqu_avx(*pauVar1);\n            auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n            vptest_avx(auVar10, auVar10);\n            if (bVar6) {\n                vzeroupper_avx();\n                return;\n            }\ncode_r0x00402723:\n            uVar5 = SUB321(auVar10 >> 7, 0) & 1 | (SUB321(auVar10 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar10 >> 0x17, 0) & 1) << 2 | (SUB321(auVar10 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar10 >> 0x27, 0) & 1) << 4 | (SUB321(auVar10 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar10 >> 0x37, 0) & 1) << 6 | (SUB321(auVar10 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar10 >> 0x47, 0) & 1) << 8 | (SUB321(auVar10 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar10 >> 0x57, 0) & 1) << 10 | (SUB321(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar10 >> 0x77, 0) & 1) << 0xe | SUB321(auVar10 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar10 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar10 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar10 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar10 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar10 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar10 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar10 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar10 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar10 >> 199, 0) & 1) << 0x18 | (SUB321(auVar10 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar10 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar10 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar10 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar10 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar10 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar10 >> 0xff, 0) << 0x1f;\n            iVar3 = 0;\n            if (uVar5 != 0) {\n                for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            vzeroupper_avx();\n            return;\n        }\n        pauVar1 = pauStackX8[-1] + uStackX16 + 0x10;\n        for (; pauStackX8 < pauVar1; pauStackX8 = *pauStackX8 + 0x10) {\n            uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n            iVar3 = 0;\n            if (uVar4 != 0) {\n                for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            if (uVar4 != 0) {\n                return;\n            }\n        }\n        uVar9 = -((*pauVar1)[0xf] == uStackX24);\n        auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauVar1)[0xe] == uStackX24), \n                                            CONCAT113(-((*pauVar1)[0xd] == uStackX24), \n                                                      CONCAT112(-((*pauVar1)[0xc] == uStackX24), \n                                                                CONCAT111(-((*pauVar1)[0xb] == uStackX24), \n                                                                          CONCAT110(-((*pauVar1)[10] == uStackX24), \n                                                                                    CONCAT19(-((*pauVar1)[9] ==\n                                                                                              uStackX24), \n                                                                                             CONCAT18(-((*pauVar1)[8] ==\n                                                                                                       uStackX24), \n                                                                                                      CONCAT17(-((*\n                                                            pauVar1)[7] == uStackX24), \n                                                            CONCAT16(-((*pauVar1)[6] == uStackX24), \n                                                                     CONCAT15(-((*pauVar1)[5] == uStackX24), \n                                                                              CONCAT14(-((*pauVar1)[4] == uStackX24), \n                                                                                       CONCAT13(-((*pauVar1)[3] ==\n                                                                                                 uStackX24), \n                                                                                                CONCAT12(-((*pauVar1)[2]\n                                                                                                          == uStackX24)\n                                                                                                         , CONCAT11(-((*\n                                                            pauVar1)[1] == uStackX24), -((*pauVar1)[0] == uStackX24)))))\n                                                            )))))))))));\n        uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n        iVar3 = 0;\n        if (uVar4 != 0) {\n            for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n            }\n        }\n        if (uVar4 != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 4616
    },
    "00402ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00402ae0(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX == 0) {\n                return unaff_RBX;\n            }\n            iVar1 = *(*in_RAX + 8);\n            if (*(iVar1 + 0x18) != 0) {\n                if ((*(iVar1 + 0x17) & 0x20) != 0) {\n                    *(*0x20 + -0x38) = 0x402b36;\n                    iVar1 = fcn.00402d20(unaff_RBX ^ 0x756ea16a56a621);\n                    return iVar1 * 0x52ef6bbb8f63bf;\n                }\n                *(*0x20 + -0x38) = 0x402b6a;\n                iVar1 = fcn.00402d20(unaff_RBX ^ 0x756ea16a56a621);\n                return iVar1 * 0x52ef6bbb8f63bf;\n            }\n            *(*0x20 + -0x38) = 0x402b97;\n            fcn.00455540();\n            *(*0x20 + -0x38) = 0x402bb0;\n            fcn.00449580(0x18);\n            *(*0x20 + -0x38) = 0x402bb5;\n            unaff_RBX = fcn.00409fe0();\n            *(*0x20 + -0x38) = 0x402bc5;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x402bd5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 588
    },
    "00402c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00402c00(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *in_RAX;\n            if (iVar1 == 0) {\n                return unaff_RBX;\n            }\n            if (*(iVar1 + 0x18) != 0) {\n                if ((*(iVar1 + 0x17) & 0x20) != 0) {\n                    *(*0x20 + -0x38) = 0x402c52;\n                    iVar1 = fcn.00402d20(unaff_RBX ^ 0x756ea16a56a621);\n                    return iVar1 * 0x52ef6bbb8f63bf;\n                }\n                *(*0x20 + -0x38) = 0x402c86;\n                iVar1 = fcn.00402d20(unaff_RBX ^ 0x756ea16a56a621);\n                return iVar1 * 0x52ef6bbb8f63bf;\n            }\n            *(*0x20 + -0x38) = 0x402cb3;\n            fcn.00455540();\n            *(*0x20 + -0x38) = 0x402ccc;\n            fcn.00449580(0x18);\n            *(*0x20 + -0x38) = 0x402cd1;\n            unaff_RBX = fcn.00409fe0();\n            *(*0x20 + -0x38) = 0x402ce5;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x402cf5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 582
    },
    "00403420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403420(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (((*0x598a80 != '\\0') && (*0x598a8e != '\\0')) && (*0x598a8f != '\\0')) {\n        *0x59834f = 1;\n        fcn.0042f2e0(0x80);\n        return;\n    }\n    fcn.0042f2e0(0x20);\n    *0x598600 = *0x598600 | 1;\n    *0x598608 = *0x598608 | 1;\n    *0x598610 = *0x598610 | 1;\n    *0x598618 = *0x598618 | 1;\n    return;\n}\n",
        "token_count": 221
    },
    "00403540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403540(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t *piVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x65) != '\\0') {\n                if ((*(in_RAX + 0x20) & 0x7ffffffffffff) == 0x200) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x19) = 1;\n                    *(in_RAX + 0x62) = *(*0x20 + -0x19);\n                    uVar1 = *(in_RAX + 0x18);\n                    iVar2 = *(in_RAX + 0x20);\n                    LOCK();\n                    *0x598dc0 = *0x598dc0 + iVar2 * -0x2000;\n                    *(*0x20 + -0x40) = 0x4035b7;\n                    fcn.00414a60(uVar1, iVar2 * 0x2000);\n                    *(*0x20 + -0x40) = 0x4035d3;\n                    fcn.0042cc40();\n                    iVar2 = *0x598db8;\n                    LOCK();\n                    *0x598db8 = *0x598db8 + *(*(*0x20 + 8) + 0x20) * 0x2000;\n                    *(*0x20 + -0x40) = 0x4035f8;\n                    piVar4 = fcn.0042cd00(*(*0x20 + 8), iVar2);\n                    iVar2 = *(*0x20 + 8);\n                    LOCK();\n                    *piVar4 = *piVar4 + *(iVar2 + 0x20) * -0x2000;\n                    LOCK();\n                    piVar4[2] = piVar4[2] + *(iVar2 + 0x20) * -0x2000;\n                    LOCK();\n                    piVar4[0x4e] = piVar4[0x4e] + 1;\n                    LOCK();\n                    piVar4 = piVar4 + 0x4d;\n                    iVar3 = *piVar4;\n                    *piVar4 = *piVar4 + *(iVar2 + 0x20) * 0x2000;\n                    *(*0x20 + -0x40) = 0x403649;\n                    fcn.0042cde0(iVar2, iVar3);\n                    *(*0x20 + -0x40) = 0x403667;\n                    fcn.0041e240(0);\n                    *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x18) = 0x403700;\n                    *(*0x20 + -0x10) = *(*0x20 + 8);\n                    *(*0x20 + -0x38) = *0x20 + -0x18;\n                    *(*0x20 + -0x40) = 0x403691;\n                    fcn.0045bc80();\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x4036be;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x40) = 0x4036cf;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x4036da;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1010
    },
    "00403840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403840(void)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    \n    if (*0x5985b0 != '\\0') {\n        fcn.004037e0();\n    }\n    *in_RAX = unaff_RBX;\n    return;\n}\n",
        "token_count": 66
    },
    "00404120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404120(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    cVar2 = fcn.00404040();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    cVar2 = fcn.00404040();\n    if (cVar2 != '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30);\n    if ((*piVar1 != unaff_R14) && (piVar1[10] != unaff_R14)) {\n        puVar3 = *0x598490;\n        if (*(piVar1 + 0x18) != 0) {\n            return;\n        }\n        while( true ) {\n            if (puVar3 == NULL) {\n                fcn.0045bc80();\n                return;\n            }\n            if ((puVar3 <= in_RAX) && (in_RAX < puVar3 + 0x8000)) break;\n            puVar3 = *puVar3;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "004042e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004042e0(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00404040();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00404040();\n        if (cVar1 != '\\0') {\n            return;\n        }\n        fcn.00404440(unaff_RDI);\n        return;\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00404380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404380(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00404040();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00404040();\n        if (cVar1 == '\\0') {\n            for (iVar2 = 0; iVar2 < unaff_RDI; iVar2 = iVar2 + 1) {\n                fcn.00404440(0);\n            }\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "00404440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00404440(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    \n    if (*(in_RAX + 8) <= arg1) {\n        return;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) != 0) {\n        if (*0x544c30 == NULL) {\n            iVar5 = 0;\n            iVar6 = 0;\n        }\n        else {\n            iVar6 = **0x544c30;\n            iVar5 = (*0x544c30)[1];\n        }\n        iVar8 = 0;\n        while( true ) {\n            if (iVar5 <= iVar8) {\n                uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n                if (uVar7 < 0x40) {\n                    uVar7 = *(uVar7 * 8 + 0x56a790);\n                    uVar1 = *(*(*(uVar7 + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8) + 0x10400 +\n                               (unaff_RBX >> 0xd & 0x1ff) * 8) + 99);\n                    if (uVar1 == 2) {\n                        fcn.0045bc80();\n                        return;\n                    }\n                    fcn.00411b40();\n                    do {\n                        fcn.00411c60(arg1, unaff_RBX);\n                        if ((uVar7 & 0xffffffffffffff00 | uVar1) == 0) {\n                            return;\n                        }\n                        cVar4 = fcn.00404040();\n                    } while (cVar4 == '\\0');\n                    fcn.00433580();\n                }\n                fcn.0045e440(0x40);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar2 = *(iVar6 + iVar8 * 8);\n            if ((*(iVar2 + 0xd0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xd8))) break;\n            if ((*(iVar2 + 0xe0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xe8))) {\n                fcn.004046c0(arg1 + (unaff_RBX - *(iVar2 + 0xe0)));\n                return;\n            }\n            iVar8 = iVar8 + 1;\n        }\n        fcn.004046c0(arg1 + (unaff_RBX - *(iVar2 + 0xd0)));\n        return;\n    }\n    fcn.004046c0(arg1);\n    return;\n}\n",
        "token_count": 663
    },
    "004049c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004049c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint64_t *puVar1;\n    ulong *noname_0;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t arg2;\n    ulong uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar1 = *(in_RAX + 0x30);\n            uVar3 = *puVar1;\n            if (uVar3 < 0x10000) {\n                if (*(puVar1 + 0x15) < 9) {\n                    *(*0x20 + -0x18) = puVar1;\n                    auVar2 = ZEXT816(unaff_RBX) * ZEXT816(uVar3);\n                    uVar3 = SUB168(auVar2, 0);\n                    if (((SUB168(auVar2 >> 0x40, 0) == 0) && (uVar4 = 0xffffffffffa0,  uVar3 < 0xffffffffffa1)) &&\n                       (-1 < unaff_RBX)) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (uVar3 == 0) {\n                            *(*0x20 + -0x40) = 0x404ae6;\n                            arg2 = fcn.0040bd20(1);\n                            if (*0x5985b0 == 0) {\n                                *(arg2 + 0x10) = arg2 + 0x10;\n                            }\n                            else {\n                                *(*0x20 + -0x40) = 0x404b05;\n                                arg2 = fcn.0045e080(arg2 + 0x10, uVar4, param_3, param_4);\n                            }\n                        }\n                        else if (*(*(*0x20 + -0x18) + 8) == 0) {\n                            uVar4 = 1;\n                            *(*0x20 + -0x40) = 0x404a53;\n                            arg2 = fcn.0040bd20();\n                            if (*0x5985b0 == 0) {\n                                *(arg2 + 0x10) = arg2 + 0x60;\n                            }\n                            else {\n                                *(*0x20 + -0x40) = 0x404a74;\n                                arg2 = fcn.0045e0a0(uVar4, arg2 + 0x60, param_3, param_4);\n                            }\n                        }\n                        else {\n                            *(*0x20 + -0x20) = uVar3;\n                            *(*0x20 + -0x40) = 0x404a8a;\n                            uVar4 = fcn.0040c6e0();\n                            *(*0x20 + -0x10) = uVar4;\n                            *(*0x20 + -0x40) = 0x404aa5;\n                            uVar4 = fcn.0040bd20(1);\n                            if (*0x5985b0 == 0) {\n                                arg2 = *(*0x20 + -0x10);\n                                *(arg2 + 0x10) = uVar4;\n                            }\n                            else {\n                                arg2 = *(*0x20 + -0x10);\n                                *(*0x20 + -0x40) = 0x404acd;\n                                fcn.0045df80(arg2 + 0x10, arg2, param_3, param_4);\n                            }\n                        }\n                        noname_0 = *(*0x20 + -0x18);\n                        uVar4 = *noname_0;\n                        *(arg2 + 0x18) = uVar4;\n                        if (*0x5985b0 == 0) {\n                            *(arg2 + 0x20) = noname_0;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x404b2b;\n                            arg2 = fcn.0045e080(noname_0, uVar4, param_3, param_4);\n                        }\n                        *(arg2 + 8) = *(*0x20 + 0x10);\n                        return;\n                    }\n                    *(*0x20 + -0x40) = 0x404b51;\n                    fcn.00432de0();\n                }\n                *(*0x20 + -0x40) = 0x404b65;\n                fcn.00433580();\n            }\n            unaff_RBX = 0x26;\n            *(*0x20 + -0x40) = 0x404b76;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x404b86;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1261
    },
    "00404be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00404be0(uint64_t *param_1, uint64_t param_2, uint64_t param_3, int64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *noname_0;\n    int64_t *piVar3;\n    int64_t iVar4;\n    char cVar5;\n    uint64_t *arg1;\n    uint64_t uVar6;\n    ulong uVar7;\n    int64_t noname_1;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t iVar9;\n    int64_t *arg3;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar12;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                noname_0 = 0x4;\n                *(*0x20 + -0x88) = 0x404cdb;\n                fcn.004360a0();\n                *(*0x20 + -0x88) = 0x404cec;\n                fcn.00433580();\n                param_1 = noname_0;\ncode_r0x00404cef:\n                do {\n                    piVar3 = noname_0[7];\n                    if (piVar3 == NULL) {\n                        piVar3 = NULL;\n                        break;\n                    }\n                    arg1 = noname_0 + 7;\n                    uVar6 = piVar3[1];\n                    if (uVar6 == 0) {\n                        if (*0x5985b0 == 0) {\n                            *(noname_0 + 7) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            uVar7 = 0;\n                            *(*0x20 + -0x88) = 0x404d6b;\n                            fcn.0045e100(param_1, piVar3, 0, param_4);\n                            *(*0x20 + -0x88) = 0x404d74;\n                            noname_0 = fcn.0045e100(param_1, piVar3, uVar7, param_4);\n                        }\n                    }\n                    else if (*0x5985b0 == 0) {\n                        *(uVar6 + 0x10) = 0;\n                        noname_0[7] = uVar6;\n                        piVar3[1] = 0;\n                    }\n                    else {\n                        iVar4 = uVar6 + 0x10;\n                        uVar7 = 0;\n                        *(*0x20 + -0x88) = 0x404d3c;\n                        fcn.0045e0a0(arg1, 0, uVar6, iVar4);\n                        *(*0x20 + -0x88) = 0x404d45;\n                        fcn.0045e100(arg1, uVar7, uVar6, iVar4);\n                        *(*0x20 + -0x88) = 0x404d4e;\n                        noname_0 = fcn.0045e0a0(arg1, uVar7, uVar6, iVar4);\n                    }\n                    if (*(piVar3 + 0x34) == '\\0') {\n                        param_3 = 0;\n                    }\n                    else {\n                        iVar4 = *piVar3;\n                        LOCK();\n                        piVar1 = iVar4 + 0x178;\n                        bVar12 = *piVar1 == 0;\n                        if (bVar12) {\n                            *piVar1 = 1;\n                        }\n                        param_3 = (iVar4 & 0xffffff00 | bVar12) ^ 1;\n                    }\n                    param_4 = 1;\n                    param_1 = noname_0;\n                } while (param_3 != '\\0');\n                if (piVar3 != NULL) {\n                    *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x18) = 0x405240;\n                    *(*0x20 + -0x10) = noname_0;\n                    *(*0x20 + -0x88) = 0x405185;\n                    fcn.00405280(*(*0x20 + 0x10), piVar3, 0x405240);\n                    return 1;\n                }\n                if (*noname_0 <= noname_0[1] && noname_0[1] != *noname_0) {\n                    *(*0x20 + -0x88) = 0x405109;\n                    fcn.004112e0(*(*0x20 + 0x10));\n                    piVar3 = *(*0x20 + 8);\n                    iVar4 = piVar3[5];\n                    piVar3[5] = iVar4 + 1;\n                    if (piVar3[1] == iVar4 + 1) {\n                        piVar3[5] = 0;\n                    }\n                    *piVar3 = *piVar3 + 1;\n                    *(*0x20 + -0x88) = 0x40513d;\n                    fcn.0040a740();\n                    return 1;\n                }\n                if (*(*0x20 + 0x18) == 0) {\n                    *(*0x20 + -0x88) = 0x404df0;\n                    fcn.0040a740();\n                    return 0;\n                }\n                *(*0x20 + -0x38) = unaff_R14;\n                *(*0x20 + -0x88) = 0x404e06;\n                piVar3 = fcn.004362a0(noname_0, *(*0x20 + 0x18));\n                piVar3[5] = 0;\n                iVar4 = *(*0x20 + -0x50);\n                if (iVar4 != 0) {\n                    piVar3[5] = -1;\n                }\n                if (*0x5985b0 == 0) {\n                    noname_1 = *(*0x20 + 0x10);\n                    piVar3[3] = noname_1;\n                    piVar3[8] = 0;\n                    iVar9 = *(*0x20 + -0x38);\n                    *piVar3 = iVar9;\n                }\n                else {\n                    noname_1 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x88) = 0x404e58;\n                    fcn.0045e0a0(iVar4, noname_1, param_3, param_4);\n                    uVar7 = 0;\n                    *(*0x20 + -0x88) = 0x404e65;\n                    fcn.0045e100(iVar4, noname_1, 0, param_4);\n                    iVar9 = *(*0x20 + -0x38);\n                    *(*0x20 + -0x88) = 0x404e72;\n                    piVar3 = fcn.0045e120(iVar4, noname_1, uVar7);\n                }\n                *(piVar3 + 0x34) = 0;\n                arg3 = piVar3 + 10;\n                if (*0x5985b0 == 0) {\n                    param_4 = *(*0x20 + 8);\n                    piVar3[10] = param_4;\n                }\n                else {\n                    param_4 = *(*0x20 + 8);\n                    *(*0x20 + -0x88) = 0x404ea7;\n                    piVar3 = fcn.0045e120(iVar4, noname_1, arg3);\n                }\n                iVar10 = iVar9 + 0x148;\n                iVar11 = iVar9 + 0x88;\n                if (*0x5985b0 == 0) {\n                    *(iVar9 + 0x148) = piVar3;\n                    *(iVar9 + 0x88) = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404ee5;\n                    fcn.0045df80(iVar4, noname_1, arg3, param_4);\n                    *(*0x20 + -0x88) = 0x404ef3;\n                    piVar3 = fcn.0045e100(iVar4, noname_1, 0, param_4);\n                }\n                if (*0x5985b0 == 0) {\n                    piVar3[1] = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404f25;\n                    piVar3 = fcn.0045e100(iVar4, noname_1, 0, param_4);\n                }\n                *(*0x20 + -0x48) = piVar3;\n                *(*0x20 + -0x20) = arg3;\n                *(*0x20 + -0x28) = iVar10;\n                *(*0x20 + -0x30) = iVar11;\n                iVar10 = *(param_4 + 0x50);\n                if (iVar10 == 0) {\n                    if (*0x5985b0 == 0) {\n                        piVar3[2] = 0;\n                        *(param_4 + 0x48) = piVar3;\n                        *(param_4 + 0x50) = piVar3;\n                    }\n                    else {\n                        uVar7 = 0;\n                        *(*0x20 + -0x88) = 0x404fc5;\n                        fcn.0045e100(iVar4, noname_1, 0, param_4);\n                        *(*0x20 + -0x88) = 0x404fce;\n                        fcn.0045df80(iVar4, noname_1, uVar7, param_4);\n                        *(*0x20 + -0x88) = 0x404fd6;\n                        fcn.0045df80(iVar4, noname_1, uVar7, param_4);\n                    }\n                }\n                else if (*0x5985b0 == 0) {\n                    piVar3[2] = iVar10;\n                    *(iVar10 + 8) = piVar3;\n                    *(param_4 + 0x50) = piVar3;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404f78;\n                    fcn.0045e120(iVar4, noname_1, arg3);\n                    *(*0x20 + -0x88) = 0x404f85;\n                    fcn.0045df80(iVar4, noname_1, arg3, iVar10);\n                    *(*0x20 + -0x88) = 0x404f8d;\n                    fcn.0045df80(iVar4, noname_1, arg3, iVar10);\n                }\n                uVar2 = *(iVar9 + 0xb9);\n                *(iVar9 + 0xb9) = 1;\n                param_3 = uVar2;\n                param_1 = 0xf;\n                unaff_RDI = 0x16;\n                *(*0x20 + -0x88) = 0x40500e;\n                fcn.004360a0();\n                iVar4 = *(*0x20 + -0x48);\n                param_2 = *(*0x20 + -0x38);\n                if (*(param_2 + 0x148) == iVar4) {\n                    if (*0x5985b0 == 0) {\n                        *(param_2 + 0x148) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x28);\n                        *(*0x20 + -0x88) = 0x40504f;\n                        iVar4 = fcn.0045e080(0, param_2, param_3, param_4);\n                    }\n                    *(param_2 + 0xb8) = 0;\n                    uVar6 = *(iVar4 + 0x35);\n                    if (*0x5985b0 == 0) {\n                        *(param_2 + 0x88) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x30);\n                        *(*0x20 + -0x88) = 0x40507c;\n                        iVar4 = fcn.0045e0a0(uVar6, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x51) = uVar6;\n                    param_2 = *(iVar4 + 0x28);\n                    if (0 < param_2) {\n                        param_2 = param_2 - *(*0x20 + -0x50);\n                        *(*0x20 + -0x88) = 0x40509e;\n                        fcn.0042b060();\n                        iVar4 = *(*0x20 + -0x48);\n                        uVar6 = *(*0x20 + -0x51);\n                    }\n                    if (*0x5985b0 == 0) {\n                        *(iVar4 + 0x50) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x20);\n                        param_2 = 0;\n                        *(*0x20 + -0x88) = 0x4050c7;\n                        fcn.0045e0a0(uVar6, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x88) = 0x4050cc;\n                    fcn.004365a0();\n                    if (*(*0x20 + -0x51) != '\\0') {\n                        return 1;\n                    }\n                    param_1 = *(*0x20 + 8);\n                    if (*(param_1 + 0x1c) == 0) {\n                        *(*0x20 + -0x88) = 0x4051b3;\n                        fcn.00433580();\n                    }\n                    *(*0x20 + -0x88) = 0x4051c6;\n                    fcn.00432de0();\n                }\n                *(*0x20 + -0x88) = 0x4051d7;\n                fcn.00433580();\n            }\n            else {\n                if ((cVar5 == '\\0') && (*(in_RAX + 0x1c) == 0)) {\n                    uVar6 = in_RAX[1];\n                    if (uVar6 == 0) {\n                        param_2 = in_RAX[7] == 0;\n                    }\n                    else {\n                        param_2 = uVar6 & 0xffffffffffffff00 | *in_RAX == uVar6;\n                    }\n                    if (param_2 != '\\0') {\n                        return 0;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x5983f0 == 0) {\n                    param_2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404c67;\n                    fcn.0045de00(param_1, param_2);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                    param_2 = *(*0x20 + -0x80);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x50) = param_2;\n                param_1 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = param_1;\n                *(*0x20 + -0x88) = 0x404c9f;\n                fcn.0040a520();\n                noname_0 = *(*0x20 + 8);\n                if (*(noname_0 + 0x1c) == 0) goto code_r0x00404cef;\n            }\n            *(*0x20 + -0x88) = 0x4051e5;\n            fcn.0040a740();\n            unaff_RBX = 0x4ca3a8;\n            *(*0x20 + -0x88) = 0x4051f8;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = param_1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x405211;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        param_1 = puVar8[0x18];\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 4076
    },
    "00405280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405280(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *unaff_RBX;\n    code **unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    piVar2 = unaff_RBX;\n    if (unaff_RBX[3] != 0) {\n        fcn.004053c0(arg1);\n        if (*0x5985b0 == 0) {\n            unaff_RBX[3] = 0;\n        }\n        else {\n            fcn.0045e0c0(unaff_RBX, noname_1, arg3, in_R9);\n        }\n    }\n    iVar1 = *piVar2;\n    (**unaff_RDI)();\n    piVar2 = unaff_RBX;\n    if (*0x5985b0 == 0) {\n        *(iVar1 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.0045e080(unaff_RBX, unaff_RDI, arg3, in_R9);\n    }\n    *(piVar2 + 0x35) = 1;\n    if (piVar2[5] != 0) {\n        fcn.0045de00(piVar2, unaff_RDI);\n        unaff_RBX[5] = iStack40;\n    }\n    fcn.004361e0();\n    return;\n}\n",
        "token_count": 390
    },
    "004054c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004054c0(ulong param_1, int64_t *param_2, int64_t *param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t **arg1;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar8;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = in_RAX + 0x58;\n                *(*0x20 + -0x40) = 0x405505;\n                fcn.0040a520();\n                iVar4 = *(*0x20 + 8);\n                if (*(iVar4 + 0x1c) == 0) break;\n                *(*0x20 + -0x40) = 0x4058a9;\n                fcn.0040a740();\n                *(*0x20 + -0x40) = 0x4058bc;\n                fcn.00432de0();\n            }\n            *(*0x20 + -0x40) = 0x4058cf;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x4058da;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n    *(iVar4 + 0x1c) = 1;\n    *(*0x20 + -0x28) = 0;\ncode_r0x00405612:\n    arg1 = *(iVar4 + 0x38);\n    if (arg1 != NULL) goto code_r0x0040561f;\n    arg1 = NULL;\n    goto code_r0x0040554c;\ncode_r0x0040561f:\n    iVar6 = iVar4 + 0x38;\n    piVar5 = arg1[1];\n    if (piVar5 == NULL) {\n        if (*0x5985b0 == 0) {\n            *(iVar4 + 0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405690;\n            fcn.0045e0e0(arg1, iVar6, param_3, param_4);\n            *(*0x20 + -0x40) = 0x405699;\n            iVar4 = fcn.0045e0e0(arg1, iVar6, param_3, param_4);\n        }\n    }\n    else if (*0x5985b0 == 0) {\n        piVar5[2] = 0;\n        *(iVar4 + 0x38) = piVar5;\n        arg1[1] = NULL;\n    }\n    else {\n        param_3 = piVar5 + 2;\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x40565d;\n        fcn.0045e120(arg1, iVar6, param_3);\n        *(*0x20 + -0x40) = 0x405665;\n        fcn.0045e0e0(arg1, iVar6, param_3, param_4);\n        *(*0x20 + -0x40) = 0x40566e;\n        iVar4 = fcn.0045e120(arg1, iVar6, param_3);\n    }\n    if (*(arg1 + 0x34) == '\\0') {\n        param_2 = NULL;\n    }\n    else {\n        piVar2 = *arg1;\n        LOCK();\n        piVar5 = piVar2 + 0x2f;\n        bVar8 = *piVar5 == 0;\n        if (bVar8) {\n            *piVar5 = 1;\n        }\n        param_2 = (piVar2 & 0xffffff00 | bVar8) ^ 1;\n    }\n    if (param_2 == '\\0') {\ncode_r0x0040554c:\n        if (arg1 != NULL) {\n            *(*0x20 + -0x18) = arg1;\n            if (arg1[3] != NULL) {\n                *(*0x20 + -0x40) = 0x40556e;\n                fcn.00411580();\n                if (*0x5985b0 == 0) {\n                    arg1 = *(*0x20 + -0x18);\n                    arg1[3] = NULL;\n                }\n                else {\n                    param_2 = NULL;\n                    *(*0x20 + -0x40) = 0x40559c;\n                    arg1 = fcn.0045e0a0(*(*0x20 + -0x18) + 0x18, 0, param_3, param_4);\n                }\n                iVar4 = *(*0x20 + 8);\n            }\n            if (arg1[5] != NULL) {\n                *(*0x20 + -0x40) = 0x4055b5;\n                fcn.0045de00(arg1, param_2);\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                arg1 = *(*0x20 + -0x18);\n                arg1[5] = *(*0x20 + -0x38);\n                iVar4 = *(*0x20 + 8);\n            }\n            param_2 = *arg1;\n            if (*0x5985b0 == 0) {\n                param_2[0x11] = arg1;\n            }\n            else {\n                param_3 = param_2 + 0x11;\n                *(*0x20 + -0x40) = 0x40560a;\n                iVar4 = fcn.0045e080(arg1, param_2, param_3, param_4);\n            }\n            *(arg1 + 0x35) = 0;\n            param_2[0x14] = *(*0x20 + -0x28);\n            *(*0x20 + -0x28) = param_2;\n            goto code_r0x00405612;\n        }\n        goto code_r0x0040578e;\n    }\n    goto code_r0x00405612;\ncode_r0x0040578e:\n    piVar5 = *(iVar4 + 0x48);\n    if (piVar5 != NULL) goto code_r0x0040579b;\n    piVar5 = NULL;\n    goto code_r0x004056ee;\ncode_r0x0040579b:\n    iVar6 = iVar4 + 0x48;\n    iVar3 = piVar5[1];\n    if (iVar3 == 0) {\n        if (*0x5985b0 == 0) {\n            *(iVar4 + 0x48) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405810;\n            fcn.0045e0c0(piVar5, iVar6, param_3, param_4);\n            *(*0x20 + -0x40) = 0x405819;\n            iVar4 = fcn.0045e0c0(piVar5, iVar6, param_3, param_4);\n        }\n    }\n    else if (*0x5985b0 == 0) {\n        *(iVar3 + 0x10) = 0;\n        *(iVar4 + 0x48) = iVar3;\n        piVar5[1] = 0;\n    }\n    else {\n        param_3 = iVar3 + 0x10;\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x4057d9;\n        fcn.0045e120(piVar5, iVar6, param_3);\n        *(*0x20 + -0x40) = 0x4057e5;\n        fcn.0045e0c0(piVar5, iVar6, param_3, param_4);\n        *(*0x20 + -0x40) = 0x4057ee;\n        iVar4 = fcn.0045e120(piVar5, iVar6, param_3);\n    }\n    if (*(piVar5 + 0x34) == '\\0') {\n        param_2 = NULL;\n    }\n    else {\n        iVar6 = *piVar5;\n        LOCK();\n        piVar1 = iVar6 + 0x178;\n        bVar8 = *piVar1 == 0;\n        if (bVar8) {\n            *piVar1 = 1;\n        }\n        param_2 = (iVar6 & 0xffffff00 | bVar8) ^ 1;\n    }\n    if (param_2 == '\\0') {\ncode_r0x004056ee:\n        if (piVar5 == NULL) {\n            *(*0x20 + -0x40) = 0x405859;\n            fcn.0040a740();\n            while (iVar4 = *(*0x20 + -0x28),  iVar4 != 0) {\n                if (iVar4 != 0) {\n                    *(*0x20 + -0x28) = *(iVar4 + 0xa0);\n                }\n                *(iVar4 + 0xa0) = 0;\n                *(*0x20 + -0x40) = 0x405870;\n                fcn.004361e0();\n            }\n            return;\n        }\n        if (*0x5985b0 == 0) {\n            piVar5[3] = 0;\n        }\n        else {\n            param_2 = piVar5 + 3;\n            *(*0x20 + -0x40) = 0x40571d;\n            iVar4 = fcn.0045e0c0(piVar5, param_2, param_3, param_4);\n        }\n        if (piVar5[5] != 0) {\n            *(*0x20 + -0x20) = piVar5;\n            *(*0x20 + -0x40) = 0x405731;\n            fcn.0045de00(piVar5, param_2);\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            piVar5 = *(*0x20 + -0x20);\n            piVar5[5] = *(*0x20 + -0x38);\n            iVar4 = *(*0x20 + 8);\n        }\n        param_2 = *piVar5;\n        if (*0x5985b0 == 0) {\n            param_2[0x11] = piVar5;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405786;\n            iVar4 = fcn.0045e080(piVar5, param_2, param_3, param_4);\n        }\n        *(piVar5 + 0x35) = 0;\n        param_2[0x14] = *(*0x20 + -0x28);\n        *(*0x20 + -0x28) = param_2;\n    }\n    goto code_r0x0040578e;\n}\n",
        "token_count": 2780
    },
    "00405940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00405940(uint64_t param_1, int64_t *param_2, uint64_t param_3, int64_t param_4)\n\n{\n    int32_t *piVar1;\n    int64_t *in_RAX;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    ulong uVar8;\n    int64_t unaff_RBX;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar10;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    int64_t *piStackX8;\n    int64_t iStackX16;\n    uint8_t uStackX24;\n    int64_t *piStack136;\n    int64_t *piStack88;\n    \n    while (uVar4 = param_1, \n          &stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n        param_1 = param_1 & 0xff;\n        piStackX8 = in_RAX;\n        iStackX16 = unaff_RBX;\n        uStackX24 = uVar4;\n    }\n    if (in_RAX == NULL) {\n        if (uVar4 != 0) {\n            fcn.004360a0();\n            in_RAX = fcn.00433580();\n            goto code_r0x00405b05;\n        }\n        return 0;\n    }\n    if (uVar4 == 0) {\n        if (in_RAX[1] == 0) {\n            uVar5 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n        }\n        else {\n            uVar5 = param_2 & 0xffffffffffffff00 | *in_RAX == 0;\n        }\n    }\n    else {\n        uVar5 = 0;\n    }\n    if (uVar5 != '\\0') {\n        if (*(in_RAX + 0x1c) == 0) {\n            return 0;\n        }\n        if (in_RAX[1] == 0) {\n            uVar5 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n        }\n        else {\n            uVar5 = *(in_RAX + 0x1c) & 0xffffff00 | *in_RAX == 0;\n        }\n        if (uVar5 != '\\0') {\n            if (unaff_RBX != 0) {\n                fcn.00411580();\n            }\n            return 1;\n        }\n    }\n    if (*0x5983f0 == 0) {\n        piStack136 = NULL;\n    }\n    else {\n        fcn.0045de00(param_1, uVar5);\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n        unaff_R14 = **(in_GS_OFFSET + *0x598520);\n    }\n    piVar2 = in_RAX + 0xb;\n    param_2 = piStack136;\n    fcn.0040a520();\n    piStackX8 = in_RAX;\n    iStackX16 = unaff_RBX;\n    uStackX24 = uVar4;\n    piStack88 = piStack136;\n    if (*(in_RAX + 0x1c) != 0) {\n        if (*in_RAX != 0) goto code_r0x00405b05;\n        fcn.0040a740();\n        if (unaff_RBX != 0) {\n            fcn.00411580();\n        }\n        return 1;\n    }\ncode_r0x00405eb8:\n    param_2 = in_RAX[9];\n    if (param_2 != NULL) goto code_r0x00405ec9;\n    param_2 = NULL;\n    goto code_r0x00405f90;\ncode_r0x00405ec9:\n    piVar3 = in_RAX + 9;\n    iVar6 = param_2[1];\n    if (iVar6 == 0) {\n        if (*0x5985b0 == 0) {\n            *(in_RAX + 9) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            uVar8 = 0;\n            fcn.0045e100(piVar2, param_2, 0, param_4);\n            in_RAX = fcn.0045e100(piVar2, param_2, uVar8, param_4);\n        }\n    }\n    else if (*0x5985b0 == 0) {\n        *(iVar6 + 0x10) = 0;\n        in_RAX[9] = iVar6;\n        param_2[1] = 0;\n    }\n    else {\n        iVar9 = iVar6 + 0x10;\n        uVar8 = 0;\n        fcn.0045e0a0(piVar3, 0, iVar6, iVar9);\n        fcn.0045e100(piVar3, uVar8, iVar6, iVar9);\n        in_RAX = fcn.0045e0a0(piVar3, uVar8, iVar6, iVar9);\n    }\n    if (*(param_2 + 0x34) == '\\0') {\n        param_3 = 0;\n    }\n    else {\n        iVar6 = *param_2;\n        LOCK();\n        piVar1 = iVar6 + 0x178;\n        bVar10 = *piVar1 == 0;\n        if (bVar10) {\n            *piVar1 = 1;\n        }\n        param_3 = (iVar6 & 0xffffff00 | bVar10) ^ 1;\n    }\n    param_4 = 1;\n    piVar2 = in_RAX;\n    if (param_3 == '\\0') {\ncode_r0x00405f90:\n        if (param_2 != NULL) {\n            fcn.00406060(iStackX16);\n            return 1;\n        }\ncode_r0x00405b05:\n        if (*in_RAX != 0) {\n            if (iStackX16 != 0) {\n                fcn.004112e0(in_RAX[6] * *(in_RAX + 3) + in_RAX[2]);\n                in_RAX = piStackX8;\n            }\n            fcn.00411580(in_RAX[4]);\n            iVar6 = piStackX8[6];\n            piStackX8[6] = iVar6 + 1;\n            if (piStackX8[1] == iVar6 + 1) {\n                piStackX8[6] = 0;\n            }\n            *piStackX8 = *piStackX8 + -1;\n            fcn.0040a740();\n            return 1;\n        }\n        if (uStackX24 == 0) {\n            fcn.0040a740();\n            return 0;\n        }\n        piVar2 = fcn.004362a0(uStackX24, param_2);\n        piVar2[5] = 0;\n        if (piStack88 != NULL) {\n            piVar2[5] = -1;\n        }\n        piVar3 = piStack88;\n        if (*0x5985b0 == 0) {\n            piVar2[3] = iStackX16;\n            piVar2[8] = 0;\n        }\n        else {\n            fcn.0045e0a0(piStack88, iStackX16, param_3, param_4);\n            piVar2 = fcn.0045e0a0(piVar3, 0, param_3, param_4);\n        }\n        iVar6 = unaff_R14 + 0x148;\n        if (*0x5985b0 == 0) {\n            *(unaff_R14 + 0x148) = piVar2;\n            *piVar2 = unaff_R14;\n        }\n        else {\n            fcn.0045df80(piVar3, iVar6, param_3, param_4);\n            piVar2 = fcn.0045e0c0(piVar3, iVar6, param_3, param_4);\n        }\n        *(piVar2 + 0x34) = 0;\n        param_4 = unaff_R14 + 0x88;\n        piVar7 = piStackX8;\n        if (*0x5985b0 == 0) {\n            piVar2[10] = piStackX8;\n            *(unaff_R14 + 0x88) = 0;\n        }\n        else {\n            fcn.0045e0a0(piVar3, piStackX8, piVar2 + 10, param_4);\n            piVar2 = fcn.0045e100(piVar3, piVar7, 0, param_4);\n        }\n        if (*0x5985b0 == 0) {\n            piVar2[1] = 0;\n        }\n        else {\n            piVar2 = fcn.0045e100(piVar3, iVar6, 0, param_4);\n        }\n        iVar9 = piVar7[8];\n        if (iVar9 == 0) {\n            if (*0x5985b0 == 0) {\n                piVar2[2] = 0;\n                piVar7[7] = piVar2;\n                piVar7[8] = piVar2;\n            }\n            else {\n                uVar8 = 0;\n                fcn.0045e100(piVar3, iVar6, 0, param_4);\n                fcn.0045df80(piVar3, iVar6, uVar8, param_4);\n                fcn.0045df80(piVar3, iVar6, uVar8, param_4);\n            }\n        }\n        else if (*0x5985b0 == 0) {\n            piVar2[2] = iVar9;\n            *(iVar9 + 8) = piVar2;\n            piVar7[8] = piVar2;\n        }\n        else {\n            fcn.0045e100(piVar3, iVar6, iVar9, param_4);\n            fcn.0045df80(piVar3, iVar6, iVar9, param_4);\n            fcn.0045df80(piVar3, iVar6, iVar9, param_4);\n        }\n        uVar4 = *(unaff_R14 + 0xb9);\n        *(unaff_R14 + 0xb9) = 1;\n        param_3 = uVar4;\n        in_RAX = 0xe;\n        fcn.004360a0();\n        if (*(unaff_R14 + 0x148) == piVar2) {\n            iVar6 = unaff_R14;\n            if (*0x5985b0 == 0) {\n                *(unaff_R14 + 0x148) = 0;\n                piVar3 = piVar2;\n            }\n            else {\n                piVar3 = fcn.0045e080(0, unaff_R14, param_3, param_4);\n            }\n            *(iVar6 + 0xb8) = 0;\n            if (0 < piVar3[5]) {\n                fcn.0042b060();\n                piVar3 = piVar2;\n                iVar6 = unaff_R14;\n            }\n            uVar5 = *(piVar3 + 0x35);\n            if (*0x5985b0 == 0) {\n                *(iVar6 + 0x88) = 0;\n                piVar3[10] = 0;\n            }\n            else {\n                fcn.0045e0a0(uVar5, 0, param_3, param_4);\n                fcn.0045e0a0(uVar5, 0, param_3, param_4);\n            }\n            fcn.004365a0();\n            return 1;\n        }\n        fcn.00433580();\n        piVar2 = in_RAX;\n    }\n    goto code_r0x00405eb8;\n}\n",
        "token_count": 2806
    },
    "00406060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406060(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t in_RDX;\n    int64_t *unaff_RBX;\n    int64_t iVar2;\n    code **unaff_RDI;\n    uint64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t iStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*(in_RAX + 8) == 0) {\n        in_RAX = in_RDX;\n        if (arg1 != 0) {\n            fcn.00405440(arg1);\n            in_RAX = in_RDX;\n        }\n    }\n    else {\n        in_R8 = *(in_RAX + 0x18);\n        if (arg1 != 0) {\n            fcn.004112e0(*(in_RAX + 0x30) * in_R8 + *(in_RAX + 0x10));\n        }\n        fcn.004112e0(unaff_RBX[3]);\n        iVar2 = *(in_RAX + 0x30) + 1;\n        *(in_RAX + 0x30) = iVar2;\n        if (*(in_RAX + 8) == iVar2) {\n            *(in_RAX + 0x30) = 0;\n        }\n        *(in_RAX + 0x28) = *(in_RAX + 0x30);\n    }\n    if (*0x5985b0 == 0) {\n        unaff_RBX[3] = 0;\n    }\n    else {\n        in_R8 = 0;\n        fcn.0045e100(unaff_RDI, in_RAX, 0, in_R9);\n    }\n    iVar2 = *unaff_RBX;\n    (**unaff_RDI)();\n    piVar1 = unaff_RBX;\n    if (*0x5985b0 == 0) {\n        *(iVar2 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.0045e080(unaff_RBX, unaff_RDI, in_R8, in_R9);\n    }\n    *(piVar1 + 0x35) = 1;\n    if (piVar1[5] != 0) {\n        fcn.0045de00(piVar1, unaff_RDI);\n        unaff_RBX[5] = iStack48;\n    }\n    fcn.004361e0();\n    return;\n}\n",
        "token_count": 598
    },
    "00408d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00408d40(ulong noname_0, ulong arg2, int64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00408d40:\n    puVar4 = *0x20;\n    *0x545708 = arg4;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x545718 == '\\0') {\n            *(*0x20 + 8) = in_RAX;\n            *0x545718 = '\\x01';\n            *(*0x20 + -0x10) = *0x545708;\n            arg1 = 0;\n            iVar3 = *0x545708;\n            *0x545708 = arg4;\n            do {\n                if (iVar3 <= arg1) {\n                    *0x545708 = in_XMM15;\n                    if (*0x5985b0 == 0) {\n                        *0x545700 = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x408e25;\n                        fcn.0045df80(arg1, arg2, arg3, *0x545708);\n                    }\n                    *0x545718 = 0;\n                    return;\n                }\n                uVar5 = (*0x545708 - arg1) - 1;\n                arg3 = *0x545700;\n                if (*0x545708 <= uVar5) goto code_r0x00408e47;\n                *(*0x20 + -0x18) = arg1;\n                uVar1 = *(*0x545700 + 8 + uVar5 * 0x10);\n                *0x545708 = uVar1;\n                if ((in_RAX == 0) || (uVar1 != 0)) {\n                    arg2 = 0x4b2a50;\n                    *(*0x20 + -0x30) = 0x408ddd;\n                    cVar2 = (**0x4b2a50)();\n                    if (cVar2 != '\\0') goto code_r0x00408e36;\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + -0x18);\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                arg1 = arg1 + 1;\n            } while( true );\n        }\n        goto code_r0x00408e52;\n    }\n    goto code_r0x00408e66;\ncode_r0x00408e36:\n    *(*0x20 + -0x30) = 0x408e47;\n    fcn.00433580();\ncode_r0x00408e47:\n    *(*0x20 + -0x30) = 0x408e52;\n    fcn.0045e420(*0x545708);\ncode_r0x00408e52:\n    *(*0x20 + -0x30) = 0x408e65;\n    in_RAX = fcn.00433580();\ncode_r0x00408e66:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x408e70;\n    fcn.0045bdc0();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    arg4 = *0x545708;\n    goto code_r0x00408d40;\n}\n",
        "token_count": 897
    },
    "00409220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00409220(char param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    ulong noname_0;\n    uint32_t *arg2;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg2 = *(in_RAX + 0x38);\n            if (*(in_RAX + 0x40) != 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if ((*(unaff_RBX + 0x14) & 1) == 0) {\n                    if (param_1 != '\\0') {\n                        return 0;\n                    }\n                    uVar1 = *arg2;\n                    *(*0x20 + -0x48) = 0x40943c;\n                    fcn.004556e0();\n                    *(*0x20 + -0x48) = 0x409445;\n                    uVar4 = fcn.00455e40();\n                    *(*0x20 + -0x18) = uVar4;\n                    *(*0x20 + -0x28) = uVar1;\n                    *(*0x20 + -0x48) = 0x40945b;\n                    iVar5 = fcn.0040c6e0();\n                    if (*0x5985b0 == 0) {\n                        *(iVar5 + 8) = *(*0x20 + 0x10);\n                        *(iVar5 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x4094c5;\n                        fcn.0045e080(*(*0x20 + 0x10), arg2, param_3, param_4);\n                        *(*0x20 + -0x48) = 0x4094d3;\n                        iVar5 = fcn.0045e080(*(*0x20 + 8), arg2, param_3, param_4);\n                    }\n                    *(iVar5 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x5985b0 != 0) goto code_r0x004094a5;\n                    *(iVar5 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x4094a5;\n                        fcn.00432de0();\ncode_r0x004094a5:\n                        *(*0x20 + -0x48) = 0x4094b3;\n                        fcn.0045e080(*(*0x20 + -0x18), arg2, param_3, param_4);\n                    } while( true );\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + -0x48) = 0x40928d;\n                iVar5 = *0x53d958;\n                iVar2 = fcn.00409520(unaff_RBX);\n                if (iVar2 == 0) {\n                    *(*0x20 + -0x48) = 0x4092a5;\n                    fcn.0040a520();\n                    in_RAX = *(*0x20 + 8);\n                    *(*0x20 + -0x48) = 0x4092bb;\n                    iVar2 = fcn.00409520(*(*0x20 + 0x10));\n                    if (iVar2 == 0) {\n                        uVar4 = *(*0x20 + 8);\n                        in_RAX = 0;\n                        *(*0x20 + -0x48) = 0x409307;\n                        puVar3 = fcn.0040ca40(0x59ae60);\n                        if (*0x5985b0 == 0) {\n                            *puVar3 = *(*0x20 + 8);\n                            iVar5 = *(*0x20 + 0x10);\n                            puVar3[1] = iVar5;\n                        }\n                        else {\n                            noname_0 = *(*0x20 + 8);\n                            *(*0x20 + -0x48) = 0x409332;\n                            iVar5 = fcn.0045e080(noname_0, uVar4, param_3, param_4);\n                            iVar5 = iVar5 + 8;\n                            in_RAX = *(*0x20 + 0x10);\n                            *(*0x20 + -0x48) = 0x409345;\n                            puVar3 = fcn.0045e0c0(noname_0, iVar5, param_3, param_4);\n                        }\n                        *(*0x20 + -0x10) = puVar3;\n                        *(puVar3 + 2) = 0;\n                        *(*0x20 + -0x48) = 0x409356;\n                        fcn.00409720();\n                        *(*0x20 + -0x48) = 0x409365;\n                        fcn.00409580();\n                        *(*0x20 + -0x48) = 0x409373;\n                        fcn.0040a740();\n                        iVar2 = *(*0x20 + -0x10);\n                    }\n                    else {\n                        *(*0x20 + -0x20) = iVar2;\n                        *(*0x20 + -0x48) = 0x4092d8;\n                        fcn.0040a740();\n                        iVar2 = *(*0x20 + -0x20);\n                    }\n                }\n                if (*(iVar2 + 0x18) == 0) {\n                    if (*(*0x20 + 0x18) != '\\0') {\n                        return 0;\n                    }\n                    *(*0x20 + -0x48) = 0x4093a5;\n                    uVar4 = fcn.00409720();\n                    *(*0x20 + -0x18) = uVar4;\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x48) = 0x4093bb;\n                    iVar2 = fcn.0040c6e0();\n                    if (*0x5985b0 == 0) {\n                        *(iVar2 + 8) = *(*0x20 + 0x10);\n                        *(iVar2 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x409425;\n                        fcn.0045e080(*(*0x20 + 0x10), iVar5, param_3, param_4);\n                        *(*0x20 + -0x48) = 0x409433;\n                        iVar2 = fcn.0045e080(*(*0x20 + 8), iVar5, param_3, param_4);\n                    }\n                    *(iVar2 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x5985b0 != 0) goto code_r0x00409405;\n                    *(iVar2 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x409405;\n                        fcn.00432de0();\ncode_r0x00409405:\n                        *(*0x20 + -0x48) = 0x409413;\n                        fcn.0045e080(*(*0x20 + -0x18), iVar5, param_3, param_4);\n                    } while( true );\n                }\n                return iVar2;\n            }\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x48) = 0x4094e6;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = param_1;\n        *(puVar6 + -8) = 0x4094fa;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        param_1 = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2015
    },
    "00409580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409580(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xc0) == 0) {\n                uVar1 = **0x53d958;\n                puVar2 = *0x53d958;\n                if ((*0x53d958)[1] < (uVar1 >> 2) * 3) goto code_r0x0040966a;\n                *(*0x20 + -0x30) = *0x53d958;\n                *(*0x20 + -0x20) = in_RAX;\n                *(*0x20 + -0x50) = 0x4095ed;\n                piVar3 = fcn.0040bd20(1, uVar1 + 2);\n                *(*0x20 + -0x28) = piVar3;\n                *piVar3 = **(*0x20 + -0x30) << 1;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x460200;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x50) = 0x409625;\n                fcn.0040a1e0();\n                if (*(*(*0x20 + -0x30) + 8) == (*(*0x20 + -0x28))[1]) {\n                    puVar2 = *(*0x20 + -0x28);\n                    if (*0x5985b0 != '\\0') {\n                        *(*0x20 + -0x50) = 0x40964f;\n                        fcn.004037e0();\n                        puVar2 = *(*0x20 + -0x28);\n                    }\ncode_r0x0040966a:\n                    *0x53d958 = puVar2;\n                    *(*0x20 + -0x50) = 0x409675;\n                    fcn.004096c0();\n                    return;\n                }\n                *(*0x20 + -0x50) = 0x409690;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x50) = 0x4096a5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4096b0;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 740
    },
    "00409720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00409720(uint64_t param_1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint64_t uVar10;\n    uint64_t arg3;\n    uint64_t arg2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar4 = in_RAX[1];\n            iVar7 = *in_RAX;\n            if ((*(iVar4 + 0x14) & 1) == 0) {\n                arg3 = 0;\n            }\n            else {\n                param_1 = 0x4ca780;\n                switch(*(iVar4 + 0x17) & 0x1f) {\n                case 0x11:\n                    arg3 = iVar4 + 0x48;\n                    break;\n                case 0x12:\n                    arg3 = iVar4 + 0x40;\n                    break;\n                case 0x13:\n                    arg3 = iVar4 + 0x38;\n                    break;\n                case 0x14:\n                    arg3 = iVar4 + 0x50;\n                    break;\n                case 0x15:\n                    arg3 = iVar4 + 0x58;\n                    break;\n                case 0x16:\n                    arg3 = iVar4 + 0x38;\n                    break;\n                case 0x17:\n                    arg3 = iVar4 + 0x38;\n                    break;\n                default:\n                    param_1 = 0x4ca780;\n                    arg3 = iVar4 + 0x30;\n                    break;\n                case 0x19:\n                    arg3 = iVar4 + 0x50;\n                }\n            }\n            uVar8 = *(iVar7 + 0x40);\n            arg2 = *(arg3 + 4);\n            uVar1 = *(arg3 + 8);\n            if (arg2 < 0x10001) {\n                if (uVar8 < 0x10001) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x30) = iVar7;\n                    *(*0x20 + -0x40) = iVar4;\n                    *(*0x20 + -0x48) = arg3;\n                    *(*0x20 + -0x50) = uVar1 + arg3;\n                    *(*0x20 + -0x90) = uVar8;\n                    *(*0x20 + -0x60) = arg2;\n                    uVar6 = 0;\n                    uVar3 = 0;\n                    iVar4 = 0;\ncode_r0x00409840:\n                    if (uVar8 <= uVar6) {\n                        in_RAX[3] = iVar4;\n                        return 0;\n                    }\n                    param_1 = *(iVar7 + 0x40);\n                    if (uVar6 < param_1) {\n                        *(*0x20 + -0x10) = *(iVar7 + 0x38);\n                        *(*0x20 + -0x88) = uVar6;\n                        *(*0x20 + -0x80) = uVar3;\n                        *(*0x20 + -0x20) = iVar4;\n                        *(*0x20 + -0xb0) = 0x409885;\n                        uVar3 = fcn.00455980();\n                        *(*0x20 + -0x58) = uVar3;\n                        uVar8 = *(*(*0x20 + -0x10) + *(*0x20 + -0x88) * 8);\n                        *(*0x20 + -0xb0) = 0x4098a5;\n                        uVar3 = fcn.004556e0();\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0xb0) = 0x4098b2;\n                        uVar3 = fcn.00455e40();\n                        *(*0x20 + -0x28) = uVar3;\n                        *(*0x20 + -0x70) = uVar8;\n                        *(*0x20 + -0xb0) = 0x4098cc;\n                        uVar3 = fcn.00456060();\n                        if (uVar8 == 0) {\n                            *(*0x20 + -0xb0) = 0x4098df;\n                            uVar3 = fcn.00455e40();\n                        }\n                        *(*0x20 + -0x38) = uVar3;\n                        *(*0x20 + -0x78) = uVar8;\n                        uVar8 = *(*0x20 + -0x40);\n                        uVar6 = *(*0x20 + -0x60);\n                        uVar10 = *(*0x20 + -0x80);\n                        do {\n                            if (uVar6 <= uVar10) {\n                                *(*(*0x20 + 8) + 0x18) = 0;\n                                return *(*0x20 + -0x28);\n                            }\n                            if (uVar6 <= uVar10) {\n                                *(*0x20 + -0xb0) = 0x409ae9;\n                                fcn.0045e420(uVar6);\n                                break;\n                            }\n                            *(*0x20 + -0x80) = uVar10;\n                            *(*0x20 + -0x68) = uVar10 << 4;\n                            *(*0x20 + -0xb0) = 0x4099ca;\n                            uVar3 = fcn.004556e0();\n                            *(*0x20 + -0x18) = uVar3;\n                            iVar4 = *(*0x20 + -0x50);\n                            uVar6 = *(iVar4 + 4 + *(*0x20 + -0x68));\n                            *(*0x20 + -0xb0) = 0x4099ea;\n                            iVar5 = fcn.00455980();\n                            iVar7 = *(*0x20 + -0x58);\n                            uVar8 = uVar6;\n                            if (iVar5 == iVar7) {\n                                *(*0x20 + -0xb0) = 0x409a05;\n                                fcn.00455e40();\n                                if (*(*0x20 + -0x70) == uVar6) {\n                                    uVar8 = *(*0x20 + -0x28);\n                                    *(*0x20 + -0xb0) = 0x409a25;\n                                    cVar2 = fcn.004025e0(uVar6, iVar4);\n                                }\n                                else {\n                                    cVar2 = '\\0';\n                                }\n                                iVar7 = *(*0x20 + -0x58);\n                            }\n                            else {\n                                cVar2 = '\\0';\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x409a45;\n                                fcn.00456060(iVar7);\n                                if (uVar8 == 0) {\n                                    uVar8 = **(*0x20 + -0x48);\n                                    *(*0x20 + -0xb0) = 0x409a5b;\n                                    fcn.004556e0();\n                                    *(*0x20 + -0xb0) = 0x409a65;\n                                    fcn.00455e40();\n                                }\n                                if ((**(*0x20 + -0x18) & 1) == 0) {\n                                    if (*(*0x20 + -0x78) == uVar8) {\n                                        *(*0x20 + -0xb0) = 0x409a9d;\n                                        cVar2 = fcn.004025e0(uVar8, *(*0x20 + -0x78));\n                                    }\n                                    else {\n                                        cVar2 = '\\0';\n                                    }\n                                }\n                                else {\n                                    cVar2 = '\\x01';\n                                }\n                                if (cVar2 != '\\0') goto code_r0x00409905;\n                            }\n                            uVar10 = *(*0x20 + -0x80) + 1;\n                            uVar8 = *(*0x20 + -0x40);\n                            uVar6 = *(*0x20 + -0x60);\n                            arg3 = uVar6;\n                        } while( true );\n                    }\n                    *(*0x20 + -0xb0) = 0x409af4;\n                    fcn.0045e420(param_1);\n                }\n                *(*0x20 + -0xb0) = 0x409afe;\n                fcn.0045e520(param_1, uVar8);\n            }\n            *(*0x20 + -0xb0) = 0x409b0b;\n            in_RAX = fcn.0045e520(param_1, arg2);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x409b16;\n        fcn.0045bdc0();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\ncode_r0x00409905:\n    *(*0x20 + -0xb0) = 0x40991d;\n    iVar4 = fcn.00455c40();\n    iVar7 = *(*0x20 + -0x88);\n    if (iVar7 != 0) {\n        if (*0x5985b0 == 0) {\n            *(*(*0x20 + 8) + 0x18 + iVar7 * 8) = iVar4;\n        }\n        else {\n            *(*0x20 + -0xb0) = 0x409959;\n            fcn.0045df80(iVar7, *(*0x20 + 8), arg3, arg2);\n        }\n        iVar4 = *(*0x20 + -0x20);\n    }\n    uVar6 = iVar7 + 1;\n    uVar8 = *(*0x20 + -0x90);\n    iVar7 = *(*0x20 + -0x30);\n    uVar3 = *(*0x20 + -0x80);\n    arg3 = *(*0x20 + -0x48);\n    arg2 = *(*0x20 + -0x60);\n    in_RAX = *(*0x20 + 8);\n    goto code_r0x00409840;\n}\n",
        "token_count": 2406
    },
    "00409c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409c20(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    puVar1 = fcn.0040c6e0();\n    if (*0x5985b0 != 0) goto code_r0x00409c8a;\n    *puVar1 = arg1;\n    puVar1[1] = in_RAX;\n    puVar1[2] = unaff_RBX;\n    do {\n        *(puVar1 + 3) = in_XMM15;\n        fcn.00432de0();\ncode_r0x00409c8a:\n        iVar2 = fcn.0045e080(arg1, in_RDX, in_R8, in_R9);\n        in_RDX = in_RAX;\n        fcn.0045e0a0(iVar2 + 8, in_RAX, in_R8, in_R9);\n        puVar1 = fcn.0045e080(unaff_RBX, in_RDX, in_R8, in_R9);\n    } while( true );\n}\n",
        "token_count": 337
    },
    "00409d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409d00(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong arg2;\n    ulong noname_1;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (in_RAX == 0) {\n        noname_1 = 0;\n    }\n    else {\n        noname_1 = *(in_RAX + 8);\n    }\n    arg2 = noname_1;\n    puVar1 = fcn.0040c6e0();\n    if (*0x5985b0 != 0) goto code_r0x00409d7c;\n    *puVar1 = arg1;\n    puVar1[1] = noname_1;\n    puVar1[2] = unaff_RBX;\n    do {\n        *(puVar1 + 3) = in_XMM15;\n        fcn.00432de0();\ncode_r0x00409d7c:\n        iVar2 = fcn.0045e080(arg1, arg2, in_R8, in_R9);\n        arg2 = noname_1;\n        fcn.0045e0a0(iVar2 + 8, noname_1, in_R8, in_R9);\n        puVar1 = fcn.0045e080(unaff_RBX, arg2, in_R8, in_R9);\n    } while( true );\n}\n",
        "token_count": 395
    },
    "00409fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00409fe0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (unaff_RBX == 0) {\n        puVar1 = 0x599480;\n    }\n    else {\n        puVar1 = fcn.0040bd20(1);\n        puVar1[1] = unaff_RBX;\n        if (*0x5985b0 == 0) {\n            *puVar1 = in_RAX;\n        }\n        else {\n            puVar1 = fcn.0045e080(in_RAX, unaff_RBX, param_3, param_4);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 237
    },
    "0040a080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0040a080(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    ulong arg1_00;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (in_RAX == 0) {\n        piVar1 = 0x599480;\n    }\n    else {\n        arg1_00 = 1;\n        piVar1 = fcn.0040bd20();\n        piVar1[1] = unaff_RBX;\n        piVar1[2] = arg1;\n        if (*0x5985b0 == 0) {\n            *piVar1 = in_RAX;\n        }\n        else {\n            piVar1 = fcn.0045e0a0(arg1_00, in_RAX, in_R8, in_R9);\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 266
    },
    "0040a520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a520(void)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n            if (-1 < iVar1) {\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + 1;\n                LOCK();\n                bVar9 = *in_RAX == 0;\n                *in_RAX = *in_RAX ^ bVar9 * (*in_RAX ^ 1);\n                if (bVar9) {\n                    return !bVar9 * *in_RAX;\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x48) = 0x40a57b;\n                fcn.0042fee0();\n                iVar4 = 0;\n                if (1 < *0x598390) {\n                    iVar4 = 4;\n                }\n                *(*0x20 + -0x30) = iVar4;\n                iVar5 = *(*0x20 + -0x18);\n                puVar6 = *(*0x20 + -0x10);\n                iVar3 = 0;\n                do {\n                    uVar8 = *puVar6;\n                    if ((uVar8 & 1) == 0) {\n                        *(*0x20 + -0x20) = uVar8;\n                        LOCK();\n                        bVar9 = uVar8 == *puVar6;\n                        *puVar6 = *puVar6 ^ bVar9 * (*puVar6 ^ (uVar8 | 1));\n                        if (bVar9) {\n                            return uVar8 ^ !bVar9 * (uVar8 ^ *puVar6);\n                        }\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar3 = 0;\n                    }\n                    *(*0x20 + -0x28) = iVar3;\n                    if (iVar3 < iVar4) {\n                        *(*0x20 + -0x40) = 0x1e;\n                        *(*0x20 + -0x48) = 0x40a634;\n                        fcn.0045db40();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else if (iVar3 < iVar4 + 1) {\n                        *(*0x20 + -0x40) = 0x4b2ad0;\n                        *(*0x20 + -0x48) = 0x40a60f;\n                        fcn.0045bc80();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else {\n                        do {\n                            *(*(iVar5 + 0x30) + 0x240) = uVar8 & 0xfffffffffffffffe;\n                            LOCK();\n                            uVar2 = *puVar6;\n                            *puVar6 = *puVar6 ^ (uVar8 == uVar2) * (*puVar6 ^ (*(iVar5 + 0x30) | 1));\n                            if (uVar8 == uVar2) {\n                                if ((uVar8 & 1) != 0) {\n                                    *(*0x20 + -0x48) = 0x40a6af;\n                                    fcn.0042fb60();\n                                    iVar3 = 0;\n                                }\n                                break;\n                            }\n                            uVar8 = *puVar6;\n                        } while ((uVar8 & 1) != 0);\n                    }\n                    iVar3 = iVar3 + 1;\n                    iVar4 = *(*0x20 + -0x30);\n                    iVar5 = *(*0x20 + -0x18);\n                    puVar6 = *(*0x20 + -0x10);\n                } while( true );\n            }\n            *(*0x20 + -0x48) = 0x40a6d9;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x40a6e5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1122
    },
    "0040a740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a740(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t *in_RAX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            do {\n                while (uVar5 = *in_RAX,  uVar5 == 1) {\n                    LOCK();\n                    bVar7 = *in_RAX == 1;\n                    *in_RAX = *in_RAX ^ bVar7 * *in_RAX;\n                    uVar5 = !bVar7 * (*in_RAX ^ 1) ^ 1;\n                    if (bVar7) goto code_r0x0040a7b6;\n                }\n                LOCK();\n                uVar3 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar5 == uVar3) * (*in_RAX ^ *((uVar5 & 0xfffffffffffffffe) + 0x240));\n            } while (uVar5 != uVar3);\n            *(*0x20 + -0x28) = 0x40a7b6;\n            uVar5 = fcn.0042fe60();\ncode_r0x0040a7b6:\n            iVar4 = *(*0x20 + -0x10);\n            piVar1 = *(iVar4 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = *(*(iVar4 + 0x30) + 0xd8);\n            if (-1 < iVar2) {\n                if ((iVar2 == 0) && (*(iVar4 + 0xb1) != '\\0')) {\n                    *(iVar4 + 0x10) = 0xfffffffffffffade;\n                }\n                return uVar5;\n            }\n            *(*0x20 + -0x28) = 0x40a805;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x40a810;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 651
    },
    "0040a820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a820(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar3;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                LOCK();\n                bVar3 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar3 * (*in_RAX ^ 1);\n            } while (!bVar3);\n            if (uVar1 == 0) {\n                return uVar1 ^ !bVar3 * (uVar1 ^ *in_RAX);\n            }\n            if (uVar1 != 1) {\n                *(*0x20 + -0x20) = 0x40a86e;\n                uVar1 = fcn.0042fe60();\n                return uVar1;\n            }\n            *(*0x20 + -0x20) = 0x40a889;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x40a894;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 406
    },
    "0040a8a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040a8a0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x30) = 0x40a8db;\n                fcn.0042fee0();\n                iVar1 = *(*0x20 + -0x10);\n                puVar2 = *(*0x20 + 8);\n                LOCK();\n                bVar4 = *puVar2 == 0;\n                *puVar2 = *puVar2 ^ bVar4 * (*puVar2 ^ *(iVar1 + 0x30));\n                if (bVar4) {\n                    *(*(iVar1 + 0x30) + 0xe5) = 1;\n                    if (**0x53d950 == 0) {\n                        *(*0x20 + -0x30) = 0x40a925;\n                        fcn.0042fb60();\n                    }\n                    else {\n                        while (*puVar2 == 0) {\n                            *(*0x20 + -0x30) = 0x40a96c;\n                            fcn.0042fb60(iVar1);\n                            *(*0x20 + -0x28) = **0x53d950;\n                            *(*0x20 + -0x20) = 0;\n                            *(*0x20 + -0x30) = 0x40a988;\n                            fcn.0045db80();\n                            iVar1 = *(*0x20 + -0x10);\n                            puVar2 = *(*0x20 + 8);\n                        }\n                    }\n                }\n                else {\n                    if (*puVar2 == 1) {\n                        return !bVar4 * *puVar2;\n                    }\n                    *(*0x20 + -0x30) = 0x40a948;\n                    fcn.00433580();\n                }\n                iVar1 = *(*(*0x20 + -0x10) + 0x30);\n                *(iVar1 + 0xe5) = 0;\n                return iVar1;\n            }\n            *(*0x20 + -0x30) = 0x40a9bf;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x40a9ca;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 733
    },
    "0040a9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0040a9e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint64_t *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    int64_t iStack32;\n    uint64_t *puStack24;\n    int64_t in_stack_fffffffffffffff0;\n    \n    LOCK();\n    uVar1 = *in_RAX;\n    *in_RAX = *in_RAX ^ (uVar1 == 0) * (*in_RAX ^ *(unaff_R14 + 0x30));\n    if (uVar1 == 0) {\n        if (unaff_RBX < 0) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n            if (**0x53d950 == 0) {\n                fcn.0042fb60();\n            }\n            else {\n                while (iVar4 = fcn.0042fb60(),  iVar4 < 0) {\n                    fcn.0045db80();\n                }\n            }\n            goto code_r0x0040ac05;\n        }\n        fcn.0045fdc0();\n        iStack32 = iStack56 + unaff_RBX;\n        puStack24 = in_RAX;\n    }\n    else {\n        if (*in_RAX == 1) {\n            return 1;\n        }\n        fcn.00433580();\n        unaff_R14 = in_stack_fffffffffffffff0;\n    }\n    do {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042fb60();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        iVar2 = **0x53d950;\n        if (iVar2 != 0) {\n            fcn.0045db80();\n            iStack56 = iVar2;\n        }\n        *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n        fcn.0045fdc0();\n    } while (0 < iStack32 - iStack56);\n    while( true ) {\n        uVar1 = *puStack24;\n        if (uVar1 != *(unaff_R14 + 0x30)) break;\n        LOCK();\n        uVar3 = *puStack24;\n        *puStack24 = *puStack24 ^ (uVar1 == uVar3) * *puStack24;\n        if (uVar1 == uVar3) {\n            return 0;\n        }\n    }\n    if (uVar1 == 1) {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042fb60();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        fcn.00433580();\n    }\n    fcn.00433580();\ncode_r0x0040ac05:\n    *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n    return 1;\n}\n",
        "token_count": 756
    },
    "0040bd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0040bd20(uchar param_1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint64_t *puVar6;\n    char cVar7;\n    int64_t in_RAX;\n    int64_t iVar8;\n    ulong uVar9;\n    uchar (*pauVar10) [16];\n    uchar uVar11;\n    uint64_t uVar12;\n    ulong unaff_RBX;\n    uint64_t uVar13;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    char cVar15;\n    uint32_t unaff_ESI;\n    uint32_t uVar16;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    uint64_t uVar20;\n    uint64_t uVar21;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x598384 != 2) {\n                if (in_RAX == 0) {\n                    return 0x598538;\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                if (*0x598844 != '\\0') {\n                    if (*0x598850 != 0) {\n                        *(*0x20 + -0x68) = 0x40bdbc;\n                        iVar8 = fcn.0040ca40(0x59ae60);\n                        return iVar8;\n                    }\n                    if ((*0x598620 != '\\0') && (*(unaff_R14 + 0x98) == *0x598628)) {\n                        *0x598630 = *0x598630 + 1;\n                    }\n                }\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x68) = 0x40bdf0;\n                uVar9 = fcn.0040c580();\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                uVar12 = *(unaff_R14 + 0x30);\n                if (*(uVar12 + 0xc0) == 0) {\n                    if (*(uVar12 + 0x50) != unaff_R14) {\n                        *(uVar12 + 0xc0) = 1;\n                        iVar8 = *0x598460;\n                        if (*(uVar12 + 0xa0) != 0) {\n                            iVar8 = *(*(uVar12 + 0xa0) + 0x40);\n                        }\n                        if (iVar8 != 0) {\n                            if (*(*0x20 + 0x10) == 0) {\n                                unaff_ESI = 1;\n                            }\n                            else {\n                                unaff_ESI = unaff_ESI & 0xffffff00 | *(*(*0x20 + 0x10) + 8) == 0;\n                            }\n                            *(*0x20 + -0x10) = uVar9;\n                            *(*0x20 + -0x20) = uVar12;\n                            *(*0x20 + -0x30) = iVar8;\n                            *(*0x20 + -0x3a) = unaff_ESI;\n                            uVar13 = *(*0x20 + 8);\n                            if (uVar13 < 0x8001) {\n                                if ((unaff_ESI != '\\0') && (uVar13 < 0x10)) {\n                                    uVar17 = *(iVar8 + 0x18);\n                                    if ((uVar13 & 7) == 0) {\n                                        uVar17 = uVar17 + 7 & 0xfffffffffffffff8;\n                                    }\n                                    else if ((uVar13 & 3) == 0) {\n                                        uVar17 = uVar17 + 3 & 0xfffffffffffffffc;\n                                    }\n                                    else if ((uVar13 & 1) == 0) {\n                                        uVar17 = uVar17 + 1 & 0xfffffffffffffffe;\n                                    }\n                                    if ((uVar13 + uVar17 < 0x11) && (iVar19 = *(iVar8 + 0x10),  iVar19 != 0)) {\n                                        *(iVar8 + 0x18) = uVar13 + uVar17;\n                                        *(iVar8 + 0x20) = *(iVar8 + 0x20) + 1;\n                                        *(uVar12 + 0xc0) = 0;\n                                        iVar5 = *(uVar12 + 0xd8);\n                                        *(uVar12 + 0xd8) = iVar5 + -1;\n                                        if ((iVar5 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                        }\n                                        return iVar19 + uVar17;\n                                    }\n                                    uVar18 = *(iVar8 + 0x50);\n                                    uVar17 = *(uVar18 + 0x40);\n                                    iVar19 = 0;\n                                    if (uVar17 != 0) {\n                                        for (; (uVar17 >> iVar19 & 1) == 0; iVar19 = iVar19 + 1) {\n                                        }\n                                    }\n                                    if (uVar17 == 0) {\n                                        iVar19 = 0x40;\n                                    }\n                                    if (iVar19 < 0x40) {\n                                        uVar3 = *(uVar18 + 0x30) + iVar19;\n                                        if (*(uVar18 + 0x38) <= uVar3) goto code_r0x0040bfc6;\n                                        uVar20 = *(uVar18 + 0x30) + 1 + iVar19;\n                                        if (((uVar20 & 0x3f) == 0) && (*(uVar18 + 0x38) != uVar20)) {\n                                            pauVar10 = NULL;\n                                        }\n                                        else {\n                                            uVar12 = iVar19 + 1;\n                                            *(uVar18 + 0x40) = uVar17 >> (uVar12 & 0x3f) & -(uVar12 < 0x40);\n                                            *(uVar18 + 0x30) = uVar20;\n                                            *(uVar18 + 0x60) = *(uVar18 + 0x60) + 1;\n                                            pauVar10 = *(uVar18 + 0x68) * uVar3 + *(uVar18 + 0x18);\n                                        }\n                                    }\n                                    else {\ncode_r0x0040bfc6:\n                                        pauVar10 = NULL;\n                                    }\n                                    uVar11 = uVar12;\n                                    if (pauVar10 == NULL) {\n                                        *(*0x20 + -0x68) = 0x40bfe5;\n                                        pauVar10 = fcn.0040bb00();\n                                        iVar8 = *(*0x20 + -0x30);\n                                        unaff_ESI = *(*0x20 + -0x3a);\n                                        uVar18 = 5;\n                                        uVar13 = *(*0x20 + 8);\n                                    }\n                                    else {\n                                        uVar11 = 0;\n                                    }\n                                    cVar15 = unaff_ESI;\n                                    *pauVar10 = CONCAT412(in_XMM15_Dd, \n                                                          CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    if ((uVar13 <= *(iVar8 + 0x18) && *(iVar8 + 0x18) != uVar13) ||\n                                       (*(iVar8 + 0x10) == 0)) {\n                                        *(iVar8 + 0x10) = pauVar10;\n                                        *(iVar8 + 0x18) = uVar13;\n                                    }\n                                    uVar17 = 0x10;\ncode_r0x0040c205:\n                                    cVar7 = '\\0';\n                                    goto code_r0x0040c2b5;\n                                }\n                                if (0x3f8 < uVar13) {\n                                    uVar17 = uVar13 - 0x381 >> 7;\n                                    if (uVar17 < 0xf9) {\n                                        uVar4 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                                [uVar17];\n                                        goto code_r0x0040c086;\n                                    }\n                                    goto code_r0x0040c4e5;\n                                }\n                                uVar17 = uVar13 + 7 >> 3;\n                                if (uVar17 < 0x81) {\n                                    uVar4 = *(uVar17 + 0x5302c0);\ncode_r0x0040c086:\n                                    if (uVar4 < 0x44) {\n                                        uVar17 = *(uVar4 * 2 + 0x530400);\n                                        uVar16 = uVar4 << 1 | unaff_ESI & 0xff;\n                                        uVar18 = uVar16;\n                                        if (uVar18 < 0x88) {\n                                            uVar18 = *(iVar8 + 0x28 + uVar18 * 8);\n                                            uVar3 = *(uVar18 + 0x40);\n                                            iVar19 = 0;\n                                            if (uVar3 != 0) {\n                                                for (; (uVar3 >> iVar19 & 1) == 0; iVar19 = iVar19 + 1) {\n                                                }\n                                            }\n                                            if (uVar3 == 0) {\n                                                iVar19 = 0x40;\n                                            }\n                                            if (iVar19 < 0x40) {\n                                                uVar20 = *(uVar18 + 0x30) + iVar19;\n                                                if (*(uVar18 + 0x38) <= uVar20) {\n                                                    iVar8 = *(*0x20 + -0x30);\n                                                    goto code_r0x0040c14e;\n                                                }\n                                                uVar21 = *(uVar18 + 0x30) + 1 + iVar19;\n                                                if (((uVar21 & 0x3f) == 0) && (*(uVar18 + 0x38) != uVar21)) {\n                                                    iVar8 = *(*0x20 + -0x30);\n                                                    pauVar10 = NULL;\n                                                }\n                                                else {\n                                                    *(uVar18 + 0x40) =\n                                                         uVar3 >> (iVar19 + 1U & 0x3f) & -(iVar19 + 1U < 0x40);\n                                                    *(uVar18 + 0x30) = uVar21;\n                                                    *(uVar18 + 0x60) = *(uVar18 + 0x60) + 1;\n                                                    pauVar10 = *(uVar18 + 0x68) * uVar20 + *(uVar18 + 0x18);\n                                                    uVar12 = *(*0x20 + -0x20);\n                                                    iVar8 = *(*0x20 + -0x30);\n                                                }\n                                            }\n                                            else {\ncode_r0x0040c14e:\n                                                pauVar10 = NULL;\n                                            }\n                                            *(*0x20 + -0x28) = uVar17;\n                                            if (pauVar10 == NULL) {\n                                                uVar18 = uVar16;\n                                                *(*0x20 + -0x68) = 0x40c16d;\n                                                pauVar10 = fcn.0040bb00(uVar12, iVar8);\n                                                iVar8 = *(*0x20 + -0x30);\n                                                unaff_ESI = *(*0x20 + -0x3a);\n                                                uVar17 = *(*0x20 + -0x28);\n                                                uVar11 = uVar12;\n                                                uVar12 = *(*0x20 + -0x20);\n                                                uVar13 = *(*0x20 + 8);\n                                            }\n                                            else {\n                                                uVar11 = 0;\n                                            }\n                                            cVar15 = unaff_ESI;\n                                            if ((*(*0x20 + 0x18) != '\\0') && (*(uVar18 + 100) != '\\0')) {\n                                                *(*0x20 + -0x18) = pauVar10;\n                                                *(*0x20 + -0x3b) = uVar11;\n                                                *(*0x20 + -0x38) = uVar18;\n                                                *(*0x20 + -0x68) = 0x40c1c6;\n                                                fcn.0045eaa0(uVar12, iVar8);\n                                                uVar13 = *(*0x20 + 8);\n                                                cVar15 = *(*0x20 + -0x3a);\n                                                uVar11 = *(*0x20 + -0x3b);\n                                                uVar17 = *(*0x20 + -0x28);\n                                                uVar18 = *(*0x20 + -0x38);\n                                                pauVar10 = *(*0x20 + -0x18);\n                                            }\n                                            goto code_r0x0040c205;\n                                        }\n                                        goto code_r0x0040c4c8;\n                                    }\n                                    goto code_r0x0040c4d5;\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x40c217;\n                                uVar18 = fcn.00413a60(unaff_ESI);\n                                *(uVar18 + 0x30) = 1;\n                                *(uVar18 + 0x60) = 1;\n                                uVar17 = *(uVar18 + 0x68);\n                                pauVar10 = *(uVar18 + 0x18);\n                                if (*(*0x20 + 0x18) == '\\0') {\n                                    cVar7 = '\\0';\n                                }\n                                else if (*(uVar18 + 100) == '\\0') {\n                                    cVar7 = '\\0';\n                                }\n                                else {\n                                    cVar7 = *(*0x20 + -0x3a);\n                                    if (cVar7 == '\\0') {\n                                        *(*0x20 + -0x38) = uVar18;\n                                        *(*0x20 + -0x28) = uVar17;\n                                        *(*0x20 + -0x18) = pauVar10;\n                                        *(*0x20 + -0x68) = 0x40c25e;\n                                        fcn.0045eaa0();\n                                        uVar18 = *(*0x20 + -0x38);\n                                        pauVar10 = *(*0x20 + -0x18);\n                                        uVar17 = *(*0x20 + -0x28);\n                                        cVar7 = *(*0x20 + -0x3a);\n                                    }\n                                }\n                                uVar11 = 1;\n                                uVar13 = *(*0x20 + 8);\n                                cVar15 = *(*0x20 + -0x3a);\ncode_r0x0040c2b5:\n                                *(*0x20 + -0x18) = pauVar10;\n                                *(*0x20 + -0x28) = uVar17;\n                                *(*0x20 + -0x3b) = uVar11;\n                                *(*0x20 + -0x39) = cVar7;\n                                *(*0x20 + -0x38) = uVar18;\n                                if (cVar15 == '\\0') {\n                                    *(*0x20 + -0x68) = 0x40c2e5;\n                                    fcn.00412a60(uVar13);\n                                    puVar6 = *(*0x20 + 0x10);\n                                    if (*puVar6 < *(*0x20 + 8)) {\n                                        uVar12 = 0;\n                                        if (puVar6[1] != 0) {\n                                            uVar12 = (*(*0x20 + 8) - *puVar6) + puVar6[1];\n                                        }\n                                    }\n                                    else {\n                                        uVar12 = puVar6[1];\n                                    }\n                                    *(*(*0x20 + -0x30) + 8) = *(*(*0x20 + -0x30) + 8) + uVar12;\n                                }\n                                *(*0x20 + -0x68) = 0x40c328;\n                                fcn.0045db60();\n                                in_XMM15_Da = 0;\n                                in_XMM15_Db = 0;\n                                in_XMM15_Dc = 0;\n                                in_XMM15_Dd = 0;\n                                unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                                *(*(*0x20 + -0x38) + 0x98) = *(*(*0x20 + -0x38) + 0x30);\n                                if (*0x598384 != 0) {\n                                    *(*0x20 + -0x68) = 0x40c365;\n                                    fcn.0041d120(*(*0x20 + -0x28));\n                                }\n                                if (*0x52d358 < 1) {\n                                    uVar12 = *(*0x20 + -0x28);\n                                }\n                                else {\n                                    if (*0x52d358 == 1) {\n                                        uVar12 = *(*0x20 + -0x28);\n                                    }\n                                    else {\n                                        uVar13 = **(*0x20 + -0x30);\n                                        uVar12 = *(*0x20 + -0x28);\n                                        if (uVar12 < uVar13) {\n                                            **(*0x20 + -0x30) = uVar13 - uVar12;\n                                            goto code_r0x0040c3b1;\n                                        }\n                                    }\n                                    *(*0x20 + -0x68) = 0x40c3a5;\n                                    fcn.0040c800(uVar12);\n                                    uVar12 = *(*0x20 + -0x28);\n                                }\ncode_r0x0040c3b1:\n                                iVar8 = *(*0x20 + -0x20);\n                                *(iVar8 + 0xc0) = 0;\n                                unaff_ESI = *(iVar8 + 0xd8);\n                                *(iVar8 + 0xd8) = unaff_ESI - 1;\n                                if ((unaff_ESI == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                if (*(*0x20 + -0x39) == '\\0') {\ncode_r0x0040c40f:\n                                    if (*0x598844 != '\\0') {\n                                        if (*0x598848 != 0) {\n                                            *(*0x20 + -0x68) = 0x40c434;\n                                            fcn.0042b7a0(*(*0x20 + 0x10));\n                                            uVar12 = *(*0x20 + -0x28);\n                                        }\n                                        if ((*0x598620 != '\\0') && (*(unaff_R14 + 0x98) == *0x598628)) {\n                                            *0x598638 = *0x598638 + uVar12;\n                                        }\n                                    }\n                                    if (*(*0x20 + -0x10) != 0) {\n                                        piVar2 = *(*0x20 + -0x10) + 0x180;\n                                        *piVar2 = *piVar2 - (uVar12 - *(*0x20 + 8));\n                                    }\n                                    if (*(*0x20 + -0x3b) != '\\0') {\n                                        *(*0x20 + -0x68) = 0x40c488;\n                                        cVar7 = fcn.004165c0(0);\n                                        if (cVar7 != '\\0') {\n                                            *(*0x20 + -0x68) = 0x40c497;\n                                            fcn.004166e0(0);\n                                        }\n                                    }\n                                    return *(*0x20 + -0x18);\n                                }\n                                if (*(*0x20 + -0x3a) != '\\0') {\n                                    *(*0x20 + -0x68) = 0x40c40a;\n                                    fcn.0040c620();\n                                    uVar12 = *(*0x20 + -0x28);\n                                    goto code_r0x0040c40f;\n                                }\n                                *(*0x20 + -0x68) = 0x40c4c8;\n                                fcn.00433580();\ncode_r0x0040c4c8:\n                                *(*0x20 + -0x68) = 0x40c4d5;\n                                fcn.0045e420(0x88);\ncode_r0x0040c4d5:\n                                *(*0x20 + -0x68) = 0x40c4e5;\n                                fcn.0045e420(0x44);\ncode_r0x0040c4e5:\n                                *(*0x20 + -0x68) = 0x40c4f2;\n                                fcn.0045e440(0xf9);\n                            }\n                            uVar12 = 0x81;\n                            *(*0x20 + -0x68) = 0x40c4ff;\n                            fcn.0045e440(0x81);\n                        }\n                        *(*0x20 + -0x68) = 0x40c510;\n                        fcn.00433580();\n                    }\n                    *(*0x20 + -0x68) = 0x40c525;\n                    fcn.00433580();\n                }\n                param_1 = uVar12;\n                *(*0x20 + -0x68) = 0x40c536;\n                fcn.00433580();\n            }\n            unaff_RBX = 0x32;\n            *(*0x20 + -0x68) = 0x40c547;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        puVar14[0x18] = param_1;\n        *(puVar14 + -8) = 0x40c55b;\n        fcn.0045bdc0();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        param_1 = puVar14[0x18];\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 5106
    },
    "0040c580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040c580(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x59837c == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n        if (iVar1 == 0) {\n            iVar1 = unaff_R14;\n        }\n        iVar2 = *(iVar1 + 0x180) - in_RAX;\n        *(iVar1 + 0x180) = iVar2;\n        if (iVar2 < 0) {\n            fcn.0041a7e0();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 225
    },
    "0040c620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040c620(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = unaff_RBX + in_RAX;\n    for (; unaff_RBX < uVar1; unaff_RBX = unaff_RBX + 0x40000) {\n        if (*(unaff_R14 + 0xb1) != '\\0') {\n            fcn.0045bc00();\n        }\n        uVar2 = uVar1 - unaff_RBX;\n        if (0x40000 < uVar2) {\n            uVar2 = 0x40000;\n        }\n        fcn.0045eaa0(uVar2);\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0040c740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040c740(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 1) {\n                uVar1 = *in_RAX;\n                *(*0x20 + -0x28) = 0x40c7af;\n                fcn.0040bd20(1, uVar1);\n                return;\n            }\n            if (((SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX) >> 0x40, 0) == 0) &&\n                (SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX), 0) < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                *(*0x20 + -0x28) = 0x40c792;\n                fcn.0040bd20(1);\n                return;\n            }\n            unaff_RBX = 0x4ca388;\n            *(*0x20 + -0x28) = 0x40c7cc;\n            in_RAX = fcn.00432de0(in_RAX);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40c7dc;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 489
    },
    "0040c800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040c800(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar3 = *0x598460;\n            if (*(in_RAX + 0xa0) != 0) {\n                piVar3 = *(*(in_RAX + 0xa0) + 0x40);\n            }\n            if (piVar3 != NULL) {\n                if (*0x52d358 == 1) {\n                    iVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar3;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x38) = 0x40c85e;\n                    iVar1 = fcn.0040c8e0();\n                    iVar2 = iVar1;\n                    piVar3 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x18);\n                }\n                *piVar3 = iVar2;\n                *(*0x20 + -0x38) = 0x40c885;\n                fcn.0042ad40(arg1);\n                return;\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x38) = 0x40c8a5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40c8ba;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 602
    },
    "0040cb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040cb60(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint64_t in_RAX;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t **ppuVar7;\n    uint64_t *puVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                if (unaff_RBX == 0) {\n                    unaff_RBX = 8;\ncode_r0x0040cbb3:\n                    if (0xffff < in_RAX) {\n                        *(*0x20 + -0x48) = 0x40cc8d;\n                        iVar5 = fcn.004147e0();\n                        return iVar5;\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    iVar5 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x20) = iVar5;\n                    if ((iVar5 == 0) || (*(iVar5 + 0xa0) == 0)) {\n                        *(*0x20 + -0x48) = 0x40cc0c;\n                        fcn.0040a520();\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x20);\n                        unaff_RBX = *(*0x20 + -0x30);\n                        ppuVar7 = 0x5985c8;\n                    }\n                    else {\n                        ppuVar7 = *(iVar5 + 0xa0) + 0x11f0;\n                    }\n                    *(*0x20 + -0x18) = ppuVar7;\n                    puVar8 = ppuVar7[1];\n                    *(*0x20 + -0x28) = -unaff_RBX;\n                    puVar8 = puVar8 + (unaff_RBX - 1) & -unaff_RBX;\n                    ppuVar7[1] = puVar8;\n                    if ((0x40000 < puVar8 + in_RAX) || (*ppuVar7 == NULL)) {\n                        *(*0x20 + -0x48) = 0x40cc69;\n                        puVar8 = fcn.004147e0();\n                        ppuVar7 = *(*0x20 + -0x18);\n                        *ppuVar7 = puVar8;\n                        if (*ppuVar7 == NULL) {\n                            if (ppuVar7 == 0x5985c8) goto code_r0x0040cdb1;\n                            do {\n                                *(*0x20 + -0x48) = 0x40cdaf;\n                                fcn.00433580();\ncode_r0x0040cdb1:\n                                *(*0x20 + -0x48) = 0x40cdbd;\n                                fcn.0040a740();\n                            } while( true );\n                        }\n                        do {\n                            uVar4 = *0x598490;\n                            **ppuVar7 = *0x598490;\n                            LOCK();\n                            bVar9 = uVar4 == *0x598490;\n                            *0x598490 = *0x598490 ^ bVar9 * (*0x598490 ^ *ppuVar7);\n                        } while (!bVar9);\n                        ppuVar7[1] = *(*0x20 + -0x30) + 7U & *(*0x20 + -0x28);\n                        in_RAX = *(*0x20 + 8);\n                        iVar5 = *(*0x20 + -0x20);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    puVar8 = *ppuVar7;\n                    puVar3 = ppuVar7[1];\n                    ppuVar7[1] = in_RAX + puVar3;\n                    iVar2 = *(iVar5 + 0xd8);\n                    *(iVar5 + 0xd8) = iVar2 + -1;\n                    iVar5 = puVar8 + puVar3;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    *(*0x20 + -0x10) = iVar5;\n                    if (ppuVar7 == 0x5985c8) {\n                        *(*0x20 + -0x48) = 0x40ccf7;\n                        fcn.0040a740();\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    if (arg1 != 0x59ae60) {\n                        *(*0x20 + -0x48) = 0x40cd1d;\n                        fcn.0042cc40();\n                        *(*0x20 + -0x48) = 0x40cd31;\n                        fcn.0042cc40();\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    return iVar5;\n                }\n                if ((unaff_RBX & unaff_RBX - 1) == 0) {\n                    if (unaff_RBX < 0x2001) goto code_r0x0040cbb3;\n                    *(*0x20 + -0x48) = 0x40cdd0;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x48) = 0x40cde5;\n                fcn.00433580();\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x48) = 0x40cdf6;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x40ce0b;\n        fcn.00460800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1614
    },
    "0040ce20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040ce20(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uint64_t uVar3;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar2 = -arg1 & *in_RAX + arg1 + -1;\n    uVar3 = unaff_RBX + uVar2;\n    if (uVar3 <= in_RAX[2]) {\n        *in_RAX = uVar3;\n        uVar1 = in_RAX[1];\n        uVar3 = -*0x5984a8 & (uVar3 - 2) + *0x5984a8;\n        if (uVar1 < uVar3) {\n            if (*(in_RAX + 3) != '\\0') {\n                fcn.00414a00(unaff_RDI);\n                fcn.004148e0(uVar3 - uVar1);\n            }\n            in_RAX[1] = uVar3;\n        }\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 310
    },
    "0040cf20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040cf20(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t arg4;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    uint64_t arg2;\n    uint64_t arg2_00;\n    int64_t unaff_RBX;\n    uint32_t uVar8;\n    int64_t *in_R8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar5 = *(in_RAX + 0x28);\n    iVar3 = in_RAX;\n    iVar6 = arg1;\n    if ((iVar5 == 0) || (arg4 = *(iVar5 + 0x10),  arg4 == 0)) {\n        arg4 = fcn.0040bd20(1);\n    }\n    else {\n        in_R8 = *(unaff_RBX + 0x52);\n        piVar7 = arg4 + -8 + in_R8;\n        if (*piVar7 == 0) {\n            if (*0x5985b0 == 0) {\n                *(iVar5 + 0x10) = arg4 + in_R8;\n            }\n            else {\n                iVar3 = fcn.0045e0a0(arg1, arg4 + in_R8, in_R8, arg4);\n            }\n        }\n        else {\n            if (*0x5985b0 == 0) {\n                *piVar7 = 0;\n            }\n            else {\n                iVar3 = fcn.0045e0a0(arg1, 0, in_R8, arg4);\n            }\n            if (*0x5985b0 == 0) {\n                *(*(iVar3 + 0x28) + 0x10) = 0;\n            }\n            else {\n                iVar3 = fcn.0045e0a0(iVar6, 0, in_R8, arg4);\n            }\n        }\n    }\n    if (*(iVar3 + 9) < 0x10) {\n        *(iVar3 + 10) = *(iVar3 + 10) + 1;\n    }\n    else {\n        uVar9 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar2 = ZEXT816(uVar9) * ZEXT816(uVar9 ^ 0xe7037ed1a0b428db);\n        uVar1 = *(iVar3 + 9) - 0xf;\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar9;\n        uVar8 = (1 << (uVar1 & 0x1f) & -(uVar1 < 0x20)) - 1;\n        in_R8 = uVar8;\n        if ((uVar8 & (SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0))) == 0) {\n            *(iVar3 + 10) = *(iVar3 + 10) + 1;\n        }\n    }\n    if (*(*(unaff_RBX + 0x40) + 8) == 0) {\n        if (*(iVar3 + 0x28) == 0) {\n            iVar5 = arg4;\n            uVar4 = fcn.0040c6e0();\n            if (*0x5985b0 == 0) {\n                *(in_RAX + 0x28) = uVar4;\n                iVar3 = in_RAX;\n                iVar6 = arg1;\n            }\n            else {\n                iVar3 = in_RAX;\n                fcn.0045df80(in_RAX, in_RAX + 0x28, in_R8, iVar5);\n                iVar6 = arg1;\n            }\n        }\n        piVar7 = *(iVar3 + 0x28);\n        if (*piVar7 == 0) {\n            iVar5 = arg4;\n            uVar4 = fcn.0040c6e0();\n            if (*0x5985b0 == 0) {\n                **(in_RAX + 0x28) = uVar4;\n                iVar3 = in_RAX;\n                iVar6 = arg1;\n            }\n            else {\n                fcn.0045df80(in_RAX, piVar7, in_R8, iVar5);\n                iVar3 = in_RAX;\n                iVar6 = arg1;\n            }\n        }\n        in_R8 = **(iVar3 + 0x28);\n        iVar5 = *in_R8;\n        uVar9 = in_R8[2];\n        arg2 = in_R8[1] + 1;\n        if (uVar9 < arg2) {\n            arg2_00 = arg2;\n            piVar7 = in_R8;\n            iVar3 = arg4;\n            iVar5 = fcn.00445800(uVar9);\n            in_R8[2] = uVar9;\n            if (*0x5985b0 == 0) {\n                *in_R8 = iVar5;\n                iVar6 = arg1;\n            }\n            else {\n                iVar5 = fcn.0045df80(uVar9, arg2_00, piVar7, iVar3);\n                iVar6 = arg1;\n            }\n        }\n        in_R8[1] = arg2;\n        if (*0x5985b0 == 0) {\n            *(iVar5 + -8 + arg2 * 8) = arg4;\n        }\n        else {\n            iVar6 = fcn.0045e120(iVar5 + arg2 * 8 + -8, arg2, in_R8);\n        }\n    }\n    if (*0x5985b0 == 0) {\n        *(*(unaff_RBX + 0x52) + iVar6 + -8) = arg4;\n    }\n    else {\n        fcn.0045e120(*(unaff_RBX + 0x52), iVar6 + -8, in_R8);\n    }\n    return arg4;\n}\n",
        "token_count": 1419
    },
    "0040d2a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040d2a0(int64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    auVar1 = ZEXT816(**(in_RAX + 0x40)) * ZEXT816(unaff_RBX);\n    if ((SUB168(auVar1 >> 0x40, 0) != 0) || (0x1000000000000 < SUB168(auVar1, 0))) {\n        unaff_RBX = 0;\n    }\n    if (arg1 == 0) {\n        arg1 = fcn.0040c6e0();\n    }\n    uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n    auVar1 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    *(arg1 + 0xc) = SUB164(auVar1 >> 0x40, 0) ^ SUB164(auVar1, 0);\n    uVar3 = 0;\n    while ((uVar2 = uVar3,  8 < unaff_RBX &&\n           (uVar4 = 1 << (uVar2 & 0x3f),  uVar7 = uVar4 >> 1,  in_R8 = uVar7 + (uVar4 & 0xfffffffffffffffe), \n           uVar7 + in_R8 * 4 < unaff_RBX))) {\n        uVar3 = uVar3 + 1;\n    }\n    *(arg1 + 9) = uVar2;\n    iVar6 = arg1;\n    if (uVar2 != 0) {\n        uVar4 = uVar3;\n        uVar5 = fcn.0040d460(0);\n        if (*0x5985b0 == 0) {\n            *(arg1 + 0x10) = uVar5;\n        }\n        else {\n            fcn.0045df80(arg1 + 0x10, arg1, in_R8, in_R9);\n        }\n        if (uVar4 != 0) {\n            iVar6 = fcn.0040c6e0();\n            if (*0x5985b0 == 0) {\n                *(arg1 + 0x28) = iVar6;\n                *(iVar6 + 0x10) = uVar4;\n                iVar6 = arg1;\n            }\n            else {\n                fcn.0045df80(arg1 + 0x28, arg1, in_R8, in_R9);\n                fcn.0045e080(uVar4, arg1, in_R8, in_R9);\n                iVar6 = arg1;\n            }\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 779
    },
    "0040d460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d460(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t arg2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = 1 << (unaff_BL & 0x3f);\n            uVar7 = uVar6;\n            if (unaff_BL < 4) goto code_r0x0040d592;\n            in_R9 = (1 << (unaff_BL - 4 & 0x3f)) + uVar6;\n            uVar1 = **(in_RAX + 0x40);\n            in_R8 = in_R9 * uVar1;\n            if (in_R8 < 0x8000) {\n                if (0x3f8 < in_R8) {\n                    uVar7 = in_R8 - 0x381 >> 7;\n                    if (uVar7 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar7] < 0x44) {\n                            uVar4 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar7] * 2 + 0x530400);\n                            goto code_r0x0040d560;\n                        }\n                        goto code_r0x0040d64c;\n                    }\n                    goto code_r0x0040d659;\n                }\n                uVar7 = in_R8 + 7 >> 3;\n                if (uVar7 < 0x81) {\n                    uVar7 = *(uVar7 + 0x5302c0);\n                    if (uVar7 < 0x44) {\n                        uVar4 = *(uVar7 * 2 + 0x530400);\n                        goto code_r0x0040d560;\n                    }\n                    goto code_r0x0040d666;\n                }\n            }\n            else {\n                uVar4 = in_R8;\n                if (in_R8 < in_R8 + 0x2000 || in_R8 - (in_R8 + 0x2000) == 0) {\n                    uVar4 = in_R8 + 0x1fff & 0xffffffffffffe000;\n                }\ncode_r0x0040d560:\n                uVar7 = in_R9;\n                if (uVar4 == in_R8) goto code_r0x0040d592;\n                if (uVar1 != 0) {\n                    uVar7 = uVar4 / uVar1;\ncode_r0x0040d592:\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x28) = uVar6;\n                    *(*0x20 + -0x20) = uVar7;\n                    if (arg1 == 0) {\n                        uVar2 = *(in_RAX + 0x40);\n                        *(*0x20 + -0x40) = 0x40d5ee;\n                        iVar3 = fcn.0040c740(uVar2, uVar7);\n                    }\n                    else {\n                        *(*0x20 + -0x18) = arg1;\n                        if (*(*(in_RAX + 0x40) + 8) == 0) {\n                            *(*0x20 + -0x40) = 0x40d5d5;\n                            fcn.0045eaa0();\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40d5c8;\n                            fcn.004115e0();\n                        }\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    arg2 = *(*0x20 + -0x28);\n                    if (*(*0x20 + -0x20) != arg2) {\n                        uVar7 = *(*(*0x20 + -0x10) + 0x52);\n                        if (*0x5985b0 == 0) {\n                            *((*(*0x20 + -0x20) + -1) * uVar7 + iVar3 + -8 + uVar7) = iVar3;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40d636;\n                            fcn.0045df80(iVar3 + uVar7 * arg2, arg2, in_R8, in_R9);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x40d64c;\n                fcn.00431c00();\ncode_r0x0040d64c:\n                *(*0x20 + -0x40) = 0x40d659;\n                fcn.0045e420(0x44);\ncode_r0x0040d659:\n                *(*0x20 + -0x40) = 0x40d666;\n                fcn.0045e440(0xf9);\ncode_r0x0040d666:\n                *(*0x20 + -0x40) = 0x40d673;\n                fcn.0045e420(0x44);\n            }\n            arg1 = 0x81;\n            *(*0x20 + -0x40) = 0x40d685;\n            in_RAX = fcn.0045e440(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40d699;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1584
    },
    "0040db00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0040db00(ulong arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t arg2;\n    int64_t iVar7;\n    uint8_t uVar8;\n    int64_t *arg1_00;\n    uint64_t arg1_01;\n    int64_t arg1_02;\n    ulong *puVar9;\n    ulong uVar10;\n    ulong arg1_03;\n    int64_t unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX != 0) break;\n            unaff_RBX = 0x4ca3d8;\n            *(*0x20 + -0x88) = 0x40e034;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + 0x18) = arg1;\n        *(puVar11 + -8) = 0x40e049;\n        fcn.0045bdc0();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        arg1 = *(puVar11 + 0x18);\n        *0x20 = puVar11;\n    } while( true );\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x10) = arg1;\n    if ((*(unaff_RBX + 8) & 4) != 0) {\n        *(*0x20 + -0x88) = 0x40db59;\n        fcn.00433680();\n        in_RAX = *(*0x20 + 8);\n    }\n    pcVar2 = **(in_RAX + 0x48);\n    *(*0x20 + -0x88) = 0x40db82;\n    uVar4 = (*pcVar2)();\n    *(*0x20 + -0x58) = uVar4;\n    arg1_00 = *(*0x20 + 0x10);\n    *(arg1_00 + 1) = *(arg1_00 + 1) ^ 4;\n    if (arg1_00[2] == 0) {\n        uVar10 = *(*0x20 + 8);\n        *(*0x20 + -0x88) = 0x40dbbb;\n        iVar5 = fcn.0040bd20();\n        if (*0x5985b0 == 0) {\n            arg1_00 = *(*0x20 + 0x10);\n            arg1_00[2] = iVar5;\n        }\n        else {\n            arg1_00 = *(*0x20 + 0x10);\n            *(*0x20 + -0x88) = 0x40dbe9;\n            fcn.0045df80(arg1_00, uVar10, in_R8, in_R9);\n        }\n        uVar4 = *(*0x20 + -0x58);\n    }\n    iVar5 = *(*0x20 + 8);\n    do {\n        arg1_01 = (1 << (*(arg1_00 + 9) & 0x3f)) - 1U & uVar4;\n        if (arg1_00[3] != 0) {\n            *(*0x20 + -0x50) = arg1_01;\n            *(*0x20 + -0x88) = 0x40dc4c;\n            fcn.0040ea20(arg1_01);\n            uVar4 = *(*0x20 + -0x58);\n            arg1_01 = *(*0x20 + -0x50);\n            arg1_00 = *(*0x20 + 0x10);\n            iVar5 = *(*0x20 + 8);\n        }\n        uVar1 = *(iVar5 + 0x52);\n        iVar7 = arg1_00[2];\n        uVar6 = uVar4 >> 0x38;\n        if (uVar4 >> 0x38 < 5) {\n            uVar6 = (uVar4 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x61) = uVar6;\n        arg2 = 0;\n        arg3 = 0;\n        arg4 = 0;\n        iVar7 = arg1_01 * uVar1 + iVar7;\n        do {\n            arg1_02 = iVar7;\n            *(*0x20 + -0x28) = arg1_02;\n            for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                uVar8 = *(arg1_02 + uVar4);\n                if (uVar6 == uVar8) {\n                    *(*0x20 + -0x60) = uVar4;\n                    *(*0x20 + -0x30) = arg4;\n                    *(*0x20 + -0x40) = arg3;\n                    *(*0x20 + -0x38) = arg2;\n                    puVar9 = arg1_02 + 8 + *(iVar5 + 0x50) * uVar4;\n                    if ((*(iVar5 + 0x54) & 1) != 0) {\n                        puVar9 = *puVar9;\n                    }\n                    *(*0x20 + -0x48) = puVar9;\n                    pcVar2 = **(*(iVar5 + 0x30) + 0x18);\n                    *(*0x20 + -0x88) = 0x40ddff;\n                    cVar3 = (*pcVar2)();\n                    if (cVar3 != '\\0') {\n                        iVar5 = *(*0x20 + 8);\n                        if ((*(iVar5 + 0x54) >> 3 & 1) != 0) {\n                            *(*0x20 + -0x88) = 0x40de65;\n                            fcn.004112e0(*(*0x20 + -0x10));\n                            iVar5 = *(*0x20 + 8);\n                        }\n                        puVar9 = *(iVar5 + 0x51) * *(*0x20 + -0x60) + *(iVar5 + 0x50) * 8 + *(*0x20 + -0x28) + 8;\n                        goto code_r0x0040dfc1;\n                    }\n                    uVar6 = *(*0x20 + -0x61);\n                    arg1_02 = *(*0x20 + -0x28);\n                    arg1_00 = *(*0x20 + 0x10);\n                    iVar5 = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0x60);\n                    arg2 = *(*0x20 + -0x38);\n                    arg3 = *(*0x20 + -0x40);\n                    arg4 = *(*0x20 + -0x30);\n                }\n                else {\n                    if ((uVar8 < 2) && (arg2 == 0)) {\n                        arg3 = arg1_02 + 8 + uVar4 * *(iVar5 + 0x50);\n                        arg4 = *(iVar5 + 0x51) * uVar4 + *(iVar5 + 0x50) * 8 + 8 + arg1_02;\n                        iVar5 = *(*0x20 + 8);\n                        arg2 = arg1_02 + uVar4;\n                    }\n                    if (uVar8 == 0) goto code_r0x0040dc94;\n                }\n            }\n            iVar7 = *(*(iVar5 + 0x52) + arg1_02 + -8);\n        } while (iVar7 != 0);\ncode_r0x0040dc94:\n        if (arg1_00[3] != 0) goto code_r0x0040de96;\n        uVar8 = *(arg1_00 + 9);\n        if ((*arg1_00 + 1U < 9) ||\n           (uVar4 = 1 << (uVar8 & 0x3f),  *arg1_00 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n            if (0xf < uVar8) {\n                uVar8 = 0xf;\n            }\n            if (*(arg1_00 + 10) < 1 << (uVar8 & 0xf)) {\ncode_r0x0040de96:\n                if (arg2 == 0) {\n                    *(*0x20 + -0x88) = 0x40dea9;\n                    arg2 = fcn.0040cf20(arg1_02);\n                    iVar5 = *(*0x20 + 8);\n                    arg3 = arg2 + 8;\n                    arg4 = arg2 + *(iVar5 + 0x50) * 8 + 8;\n                }\n                *(*0x20 + -0x30) = arg4;\n                *(*0x20 + -0x38) = arg2;\n                iVar7 = arg3;\n                if ((*(iVar5 + 0x54) & 1) != 0) {\n                    *(*0x20 + -0x18) = arg3;\n                    uVar10 = 1;\n                    *(*0x20 + -0x88) = 0x40df05;\n                    iVar7 = fcn.0040bd20();\n                    if (*0x5985b0 == 0) {\n                        **(*0x20 + -0x18) = iVar7;\n                    }\n                    else {\n                        *(*0x20 + -0x88) = 0x40df1f;\n                        iVar7 = fcn.0045df80(uVar10, arg2, arg3, arg4);\n                    }\n                    arg2 = *(*0x20 + -0x38);\n                    iVar5 = *(*0x20 + 8);\n                    arg4 = *(*0x20 + -0x30);\n                }\n                if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n                    *(*0x20 + -0x40) = iVar7;\n                    arg1_03 = 1;\n                    *(*0x20 + -0x88) = 0x40df65;\n                    uVar10 = fcn.0040bd20();\n                    if (*0x5985b0 == 0) {\n                        **(*0x20 + -0x30) = uVar10;\n                    }\n                    else {\n                        *(*0x20 + -0x88) = 0x40df7f;\n                        fcn.0045df80(arg1_03, arg2, iVar7, arg4);\n                    }\n                }\n                *(*0x20 + -0x88) = 0x40df9d;\n                fcn.004112e0(*(*0x20 + -0x10));\n                **(*0x20 + -0x38) = *(*0x20 + -0x61);\n                **(*0x20 + 0x10) = **(*0x20 + 0x10) + 1;\n                iVar5 = *(*0x20 + 8);\n                puVar9 = *(*0x20 + -0x30);\ncode_r0x0040dfc1:\n                iVar7 = *(*0x20 + 0x10);\n                if ((*(iVar7 + 8) & 4) == 0) {\n                    *(*0x20 + -0x20) = puVar9;\n                    *(*0x20 + -0x88) = 0x40dfe9;\n                    fcn.00433680();\n                    puVar9 = *(*0x20 + -0x20);\n                    iVar5 = *(*0x20 + 8);\n                    iVar7 = *(*0x20 + 0x10);\n                }\n                *(iVar7 + 8) = *(iVar7 + 8) & 0xfb;\n                if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n                    puVar9 = *puVar9;\n                }\n                return puVar9;\n            }\n        }\n        *(*0x20 + -0x88) = 0x40dc05;\n        fcn.0040e800();\n        arg1_00 = *(*0x20 + 0x10);\n        uVar4 = *(*0x20 + -0x58);\n        iVar5 = *(*0x20 + 8);\n    } while( true );\n}\n",
        "token_count": 2969
    },
    "0040e800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040e800(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    ulong *arg2;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong *arg1;\n    uint32_t uVar4;\n    int64_t *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*unaff_RBX + 1U < 9) ||\n               (uVar6 = 1 << (*(unaff_RBX + 9) & 0x3f), \n               *unaff_RBX + 1U <= (uVar6 >> 1) * 5 + (uVar6 & 0xfffffffffffffffe) * 4)) {\n                *(unaff_RBX + 1) = *(unaff_RBX + 1) | 8;\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = 1;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x19) = iVar2;\n            *(*0x20 + -0x18) = unaff_RBX[2];\n            uVar6 = *(unaff_RBX + 9) + iVar2;\n            *(*0x20 + -0x40) = 0x40e879;\n            uVar1 = fcn.0040d460(0);\n            arg2 = *(*0x20 + 0x10);\n            uVar4 = *(arg2 + 1) & 0xfffffffc;\n            if ((*(arg2 + 1) & 1) != 0) {\n                uVar4 = uVar4 | 2;\n            }\n            *(arg2 + 9) = *(arg2 + 9) + *(*0x20 + -0x19);\n            *(arg2 + 1) = uVar4;\n            if (*0x5985b0 == 0) {\n                arg2[3] = *(*0x20 + -0x18);\n                arg2[2] = uVar1;\n                puVar3 = uVar4;\n            }\n            else {\n                puVar3 = arg2 + 3;\n                *(*0x20 + -0x40) = 0x40e8cd;\n                fcn.0045e0e0(puVar3, arg2, param_3, param_4);\n                *(*0x20 + -0x40) = 0x40e8d6;\n                fcn.0045df80(puVar3, arg2, param_3, param_4);\n                puVar3 = arg2;\n            }\n            arg2[4] = 0;\n            *(arg2 + 10) = 0;\n            arg1 = arg2[5];\n            if ((arg1 == NULL) || (puVar3 = *arg1,  puVar3 == NULL)) goto code_r0x0040e952;\n            if (arg1[1] == 0) {\n                if (*0x5985b0 == 0) {\n                    arg1[1] = puVar3;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x40e925;\n                    arg2 = fcn.0045e0a0(arg1 + 1, puVar3, param_3, param_4);\n                }\n                arg1 = arg2[5];\n                if (*0x5985b0 == 0) {\n                    *arg1 = 0;\n                }\n                else {\n                    puVar3 = NULL;\n                    *(*0x20 + -0x40) = 0x40e94f;\n                    arg2 = fcn.0045e0a0(arg1, 0, param_3, param_4);\n                }\ncode_r0x0040e952:\n                if (uVar6 != 0) {\n                    if (arg2[5] == 0) {\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x40) = 0x40e96f;\n                        uVar1 = fcn.0040c6e0();\n                        if (*0x5985b0 == 0) {\n                            arg1 = *(*0x20 + 0x10);\n                            arg1[5] = uVar1;\n                        }\n                        else {\n                            arg1 = *(*0x20 + 0x10);\n                            *(*0x20 + -0x40) = 0x40e997;\n                            fcn.0045df80(arg1 + 5, arg1, param_3, param_4);\n                            puVar3 = arg1;\n                        }\n                        uVar6 = *(*0x20 + -0x10);\n                        arg2 = arg1;\n                    }\n                    if (*0x5985b0 == 0) {\n                        *(arg2[5] + 0x10) = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x40) = 0x40e9c5;\n                        fcn.0045e0c0(arg1, puVar3, param_3, param_4);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x40) = 0x40e9e5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x40e9f5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1432
    },
    "0040ea20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ea20(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040eac0((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040eac0(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0040f4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040f4a0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint8_t uVar8;\n    int64_t *arg1_00;\n    uint64_t uVar9;\n    int64_t unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    ulong in_R9;\n    uint64_t uVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RBX != 0) break;\n            unaff_RBX = 0x4ca3d8;\n            *(*0x20 + -0x40) = 0x40f799;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + -8) = 0x40f7ad;\n        fcn.0045bdc0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1._0_4_ = *(puVar10 + 0x18);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    if ((*(unaff_RBX + 8) & 4) != 0) {\n        *(*0x20 + -0x40) = 0x40f4ed;\n        fcn.00433680();\n        in_RAX = *(*0x20 + 8);\n    }\n    pcVar1 = **(in_RAX + 0x48);\n    *(*0x20 + -0x40) = 0x40f50b;\n    uVar4 = (*pcVar1)();\n    *(*0x20 + -0x20) = uVar4;\n    arg1_00 = *(*0x20 + 0x10);\n    *(arg1_00 + 1) = *(arg1_00 + 1) ^ 4;\n    if (arg1_00[2] == 0) {\n        *(*0x20 + -0x40) = 0x40f53c;\n        iVar5 = fcn.0040bd20();\n        if (*0x5985b0 == 0) {\n            arg1_00 = *(*0x20 + 0x10);\n            arg1_00[2] = iVar5;\n        }\n        else {\n            arg1_00 = *(*0x20 + 0x10);\n            *(*0x20 + -0x40) = 0x40f565;\n            fcn.0045df80(arg1_00, arg1_00 + 2, in_R8, in_R9);\n        }\n        uVar4 = *(*0x20 + -0x20);\n    }\n    iVar5 = *(*0x20 + 8);\n    do {\n        uVar9 = (1 << (*(arg1_00 + 9) & 0x3f)) - 1U & uVar4;\n        if (arg1_00[3] != 0) {\n            *(*0x20 + -0x18) = uVar9;\n            *(*0x20 + -0x40) = 0x40f5ba;\n            fcn.0040f7e0(uVar9);\n            uVar4 = *(*0x20 + -0x20);\n            uVar9 = *(*0x20 + -0x18);\n            iVar5 = *(*0x20 + 8);\n            arg1_00 = *(*0x20 + 0x10);\n        }\n        uVar3 = uVar4 >> 0x38;\n        iVar6 = 0;\n        uVar4 = 0;\n        iVar2 = uVar9 * *(iVar5 + 0x52) + arg1_00[2];\n        do {\n            iVar7 = iVar2;\n            for (uVar9 = 0; uVar9 < 8; uVar9 = uVar9 + 1) {\n                if (*(iVar7 + uVar9) < 2) {\n                    uVar11 = uVar9;\n                    iVar2 = iVar7;\n                    if (iVar6 != 0) {\n                        uVar11 = uVar4;\n                        iVar2 = iVar6;\n                    }\n                    iVar6 = iVar2;\n                    uVar4 = uVar11;\n                    if (*(iVar7 + uVar9) == 0) goto code_r0x0040f5eb;\n                }\n                else if (*(*0x20 + 0x18) == *(iVar7 + uVar9 * 4 + 8)) goto code_r0x0040f739;\n            }\n            iVar2 = *(iVar7 + -8 + *(iVar5 + 0x52));\n        } while (iVar2 != 0);\ncode_r0x0040f5eb:\n        if (arg1_00[3] != 0) goto code_r0x0040f6e1;\n        uVar8 = *(arg1_00 + 9);\n        if ((*arg1_00 + 1U < 9) ||\n           (uVar9 = 1 << (uVar8 & 0x3f),  *arg1_00 + 1U <= (uVar9 >> 1) * 5 + (uVar9 & 0xfffffffffffffffe) * 4)) {\n            if (0xf < uVar8) {\n                uVar8 = 0xf;\n            }\n            if (*(arg1_00 + 10) < 1 << (uVar8 & 0xf)) {\ncode_r0x0040f6e1:\n                uVar9 = uVar4;\n                if (iVar6 == 0) {\n                    *(*0x20 + -0x40) = 0x40f6f4;\n                    iVar6 = fcn.0040cf20(iVar7);\n                    iVar5 = *(*0x20 + 8);\n                    arg1_00 = *(*0x20 + 0x10);\n                    uVar9 = 0;\n                    uVar3 = *(*0x20 + -0x20) >> 0x38;\n                }\n                iVar7 = iVar6;\n                if (uVar3 < 5) {\n                    uVar3 = uVar3 + 5;\n                }\n                *(iVar7 + (uVar9 & 7)) = uVar3;\n                *(iVar7 + uVar9 * 4 + 8) = *(*0x20 + 0x18);\n                *arg1_00 = *arg1_00 + 1;\ncode_r0x0040f739:\n                iVar7 = uVar9 * *(iVar5 + 0x51) + 0x28 + iVar7;\n                if ((*(arg1_00 + 1) & 4) == 0) {\n                    *(*0x20 + -0x10) = iVar7;\n                    *(*0x20 + -0x40) = 0x40f768;\n                    fcn.00433680();\n                    iVar7 = *(*0x20 + -0x10);\n                    arg1_00 = *(*0x20 + 0x10);\n                }\n                *(arg1_00 + 1) = *(arg1_00 + 1) & 0xfb;\n                return iVar7;\n            }\n        }\n        *(*0x20 + -0x40) = 0x40f57c;\n        fcn.0040e800();\n        arg1_00 = *(*0x20 + 0x10);\n        uVar4 = *(*0x20 + -0x20);\n        iVar5 = *(*0x20 + 8);\n    } while( true );\n}\n",
        "token_count": 1911
    },
    "0040f7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040f7e0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040f880((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040f880(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0040fde0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040fde0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint8_t uVar8;\n    int64_t *arg1_00;\n    uint64_t uVar9;\n    int64_t unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    ulong in_R9;\n    uint64_t uVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RBX != 0) break;\n            unaff_RBX = 0x4ca3d8;\n            *(*0x20 + -0x40) = 0x4100f0;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + -8) = 0x410105;\n        fcn.0045bdc0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    if ((*(unaff_RBX + 8) & 4) != 0) {\n        *(*0x20 + -0x40) = 0x40fe2d;\n        fcn.00433680();\n        in_RAX = *(*0x20 + 8);\n    }\n    pcVar1 = **(in_RAX + 0x48);\n    *(*0x20 + -0x40) = 0x40fe4b;\n    uVar4 = (*pcVar1)();\n    *(*0x20 + -0x20) = uVar4;\n    arg1_00 = *(*0x20 + 0x10);\n    *(arg1_00 + 1) = *(arg1_00 + 1) ^ 4;\n    if (arg1_00[2] == 0) {\n        *(*0x20 + -0x40) = 0x40fe7c;\n        iVar5 = fcn.0040bd20();\n        if (*0x5985b0 == 0) {\n            arg1_00 = *(*0x20 + 0x10);\n            arg1_00[2] = iVar5;\n        }\n        else {\n            arg1_00 = *(*0x20 + 0x10);\n            *(*0x20 + -0x40) = 0x40fea5;\n            fcn.0045df80(arg1_00, arg1_00 + 2, in_R8, in_R9);\n        }\n        uVar4 = *(*0x20 + -0x20);\n    }\n    iVar5 = *(*0x20 + 8);\n    do {\n        uVar9 = (1 << (*(arg1_00 + 9) & 0x3f)) - 1U & uVar4;\n        if (arg1_00[3] != 0) {\n            *(*0x20 + -0x18) = uVar9;\n            *(*0x20 + -0x40) = 0x40fefa;\n            fcn.00410120(uVar9);\n            uVar4 = *(*0x20 + -0x20);\n            uVar9 = *(*0x20 + -0x18);\n            iVar5 = *(*0x20 + 8);\n            arg1_00 = *(*0x20 + 0x10);\n        }\n        uVar3 = uVar4 >> 0x38;\n        iVar6 = 0;\n        uVar4 = 0;\n        iVar2 = uVar9 * *(iVar5 + 0x52) + arg1_00[2];\n        do {\n            iVar7 = iVar2;\n            for (uVar9 = 0; uVar9 < 8; uVar9 = uVar9 + 1) {\n                if (*(iVar7 + uVar9) < 2) {\n                    uVar11 = uVar9;\n                    iVar2 = iVar7;\n                    if (iVar6 != 0) {\n                        uVar11 = uVar4;\n                        iVar2 = iVar6;\n                    }\n                    iVar6 = iVar2;\n                    uVar4 = uVar11;\n                    if (*(iVar7 + uVar9) == 0) goto code_r0x0040ff2b;\n                }\n                else if (*(*0x20 + 0x18) == *(iVar7 + uVar9 * 8 + 8)) goto code_r0x00410090;\n            }\n            iVar2 = *(iVar7 + -8 + *(iVar5 + 0x52));\n        } while (iVar2 != 0);\ncode_r0x0040ff2b:\n        if (arg1_00[3] != 0) goto code_r0x00410027;\n        uVar8 = *(arg1_00 + 9);\n        if ((*arg1_00 + 1U < 9) ||\n           (uVar9 = 1 << (uVar8 & 0x3f),  *arg1_00 + 1U <= (uVar9 >> 1) * 5 + (uVar9 & 0xfffffffffffffffe) * 4)) {\n            if (0xf < uVar8) {\n                uVar8 = 0xf;\n            }\n            if (*(arg1_00 + 10) < 1 << (uVar8 & 0xf)) {\ncode_r0x00410027:\n                uVar9 = uVar4;\n                if (iVar6 == 0) {\n                    *(*0x20 + -0x40) = 0x41003a;\n                    iVar6 = fcn.0040cf20(iVar7);\n                    iVar5 = *(*0x20 + 8);\n                    arg1_00 = *(*0x20 + 0x10);\n                    uVar9 = 0;\n                    uVar3 = *(*0x20 + -0x20) >> 0x38;\n                }\n                iVar7 = iVar6;\n                if (uVar3 < 5) {\n                    uVar3 = uVar3 + 5;\n                }\n                uVar4 = uVar9 & 7;\n                *(iVar7 + uVar4) = uVar3;\n                if (*0x5985b0 == 0) {\n                    *(iVar7 + uVar9 * 8 + 8) = *(*0x20 + 0x18);\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x41008d;\n                    fcn.0045e100(uVar9, iVar5, *(*0x20 + 0x18), uVar4);\n                }\n                *arg1_00 = *arg1_00 + 1;\ncode_r0x00410090:\n                iVar7 = uVar9 * *(iVar5 + 0x51) + 0x48 + iVar7;\n                if ((*(arg1_00 + 1) & 4) == 0) {\n                    *(*0x20 + -0x10) = iVar7;\n                    *(*0x20 + -0x40) = 0x4100bf;\n                    fcn.00433680();\n                    iVar7 = *(*0x20 + -0x10);\n                    arg1_00 = *(*0x20 + 0x10);\n                }\n                *(arg1_00 + 1) = *(arg1_00 + 1) & 0xfb;\n                return iVar7;\n            }\n        }\n        *(*0x20 + -0x40) = 0x40febc;\n        fcn.0040e800();\n        arg1_00 = *(*0x20 + 0x10);\n        uVar4 = *(*0x20 + -0x20);\n        iVar5 = *(*0x20 + 8);\n    } while( true );\n}\n",
        "token_count": 1966
    },
    "00410120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410120(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.004101c0((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.004101c0(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00410a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00410a00(ulong arg1)\n\n{\n    ulong *puVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    ulong arg1_00;\n    ulong uVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    int64_t in_RAX;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uint8_t uVar13;\n    int64_t *arg1_01;\n    uint64_t uVar14;\n    int64_t unaff_RBX;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    int64_t *piVar16;\n    ulong unaff_RDI;\n    uint64_t uVar17;\n    ulong in_R8;\n    ulong in_R9;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar15 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar15 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if (unaff_RBX != 0) break;\n            unaff_RBX = 0x4ca3d8;\n            *(*0x20 + -0x70) = 0x410dd6;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar15 + 8) = in_RAX;\n        *(puVar15 + 0x10) = unaff_RBX;\n        *(puVar15 + 0x18) = arg1;\n        *(puVar15 + 0x20) = unaff_RDI;\n        *(puVar15 + -8) = 0x410df0;\n        fcn.0045bdc0();\n        in_RAX = *(puVar15 + 8);\n        unaff_RBX = *(puVar15 + 0x10);\n        arg1 = *(puVar15 + 0x18);\n        unaff_RDI = *(puVar15 + 0x20);\n        *0x20 = puVar15;\n    } while( true );\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    if ((*(unaff_RBX + 8) & 4) != 0) {\n        *(*0x20 + -0x70) = 0x410a56;\n        fcn.00433680();\n        in_RAX = *(*0x20 + 8);\n    }\n    pcVar3 = **(in_RAX + 0x48);\n    *(*0x20 + -0x70) = 0x410a77;\n    uVar8 = (*pcVar3)();\n    *(*0x20 + -0x40) = uVar8;\n    arg1_01 = *(*0x20 + 0x10);\n    *(arg1_01 + 1) = *(arg1_01 + 1) ^ 4;\n    if (arg1_01[2] == 0) {\n        *(*0x20 + -0x70) = 0x410aa8;\n        iVar9 = fcn.0040bd20();\n        if (*0x5985b0 == 0) {\n            arg1_01 = *(*0x20 + 0x10);\n            arg1_01[2] = iVar9;\n        }\n        else {\n            arg1_01 = *(*0x20 + 0x10);\n            *(*0x20 + -0x70) = 0x410ad0;\n            fcn.0045df80(arg1_01, arg1_01 + 2, in_R8, in_R9);\n        }\n        uVar8 = *(*0x20 + -0x40);\n    }\n    iVar9 = *(*0x20 + 8);\n    do {\n        uVar14 = (1 << (*(arg1_01 + 9) & 0x3f)) - 1U & uVar8;\n        if (arg1_01[3] != 0) {\n            *(*0x20 + -0x38) = uVar14;\n            *(*0x20 + -0x70) = 0x410b25;\n            fcn.00410e20(uVar14);\n            uVar8 = *(*0x20 + -0x40);\n            uVar14 = *(*0x20 + -0x38);\n            iVar9 = *(*0x20 + 8);\n            arg1_01 = *(*0x20 + 0x10);\n        }\n        uVar2 = *(iVar9 + 0x52);\n        iVar4 = arg1_01[2];\n        uVar10 = uVar8 >> 0x38;\n        if (uVar8 >> 0x38 < 5) {\n            uVar10 = (uVar8 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x49) = uVar10;\n        iVar11 = 0;\n        uVar17 = 0;\n        iVar4 = uVar2 * uVar14 + iVar4;\n        do {\n            iVar12 = iVar4;\n            *(*0x20 + -0x10) = iVar12;\n            for (uVar14 = 0; uVar6 = uVar10,  uVar14 < 8; uVar14 = uVar14 + 1) {\n                uVar13 = *(iVar12 + uVar14);\n                if (uVar6 == uVar13) {\n                    piVar16 = iVar12 + uVar14 * 0x10 + 8;\n                    if (piVar16[1] == *(*0x20 + 0x20)) {\n                        if (*(*0x20 + 0x18) == *piVar16) {\n                            arg4 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = uVar14;\n                            *(*0x20 + -0x20) = piVar16;\n                            *(*0x20 + -0x48) = uVar17;\n                            *(*0x20 + -0x18) = iVar11;\n                            *(*0x20 + -0x70) = 0x410c8c;\n                            uVar7 = fcn.004025e0(*(*0x20 + 0x20), iVar9);\n                            iVar11 = *(*0x20 + -0x18);\n                            iVar9 = *(*0x20 + 8);\n                            arg1_01 = *(*0x20 + 0x10);\n                            piVar16 = *(*0x20 + -0x20);\n                            uVar17 = *(*0x20 + -0x48);\n                            uVar8 = *(*0x20 + -0x40);\n                            uVar14 = *(*0x20 + -0x30);\n                            iVar12 = *(*0x20 + -0x10);\n                            arg4 = uVar7 ^ 1;\n                            uVar10 = *(*0x20 + -0x49);\n                        }\n                        if (arg4 == '\\0') {\n                            if (*0x5985b0 == 0) {\n                                *piVar16 = *(*0x20 + 0x18);\n                            }\n                            else {\n                                *(*0x20 + -0x70) = 0x410cf2;\n                                fcn.0045e080(*(*0x20 + 0x18), iVar9, uVar8, arg4);\n                            }\n                            goto code_r0x00410d6e;\n                        }\n                    }\n                }\n                else {\n                    if ((uVar13 < 2) && (iVar11 == 0)) {\n                        iVar11 = iVar12;\n                        uVar17 = uVar14;\n                    }\n                    if (uVar13 == 0) goto code_r0x00410b60;\n                }\n            }\n            iVar4 = *(iVar12 + -8 + *(iVar9 + 0x52));\n        } while (iVar4 != 0);\ncode_r0x00410b60:\n        if (arg1_01[3] != 0) goto code_r0x00410cf7;\n        uVar13 = *(arg1_01 + 9);\n        if ((*arg1_01 + 1U < 9) ||\n           (uVar8 = 1 << (uVar13 & 0x3f),  *arg1_01 + 1U <= (uVar8 >> 1) * 5 + (uVar8 & 0xfffffffffffffffe) * 4)) {\n            if (0xf < uVar13) {\n                uVar13 = 0xf;\n            }\n            if (*(arg1_01 + 10) < 1 << (uVar13 & 0xf)) {\ncode_r0x00410cf7:\n                if (iVar11 == 0) {\n                    *(*0x20 + -0x70) = 0x410d0a;\n                    iVar11 = fcn.0040cf20(iVar12);\n                    iVar9 = *(*0x20 + 8);\n                    arg1_01 = *(*0x20 + 0x10);\n                    uVar17 = 0;\n                    uVar6 = *(*0x20 + -0x49);\n                }\n                iVar12 = iVar11;\n                *(iVar12 + (uVar17 & 7)) = uVar6;\n                puVar1 = iVar12 + 8 + uVar17 * 0x10;\n                arg1_00 = *(*0x20 + 0x20);\n                uVar5 = *(*0x20 + 0x18);\n                puVar1[1] = arg1_00;\n                if (*0x5985b0 == 0) {\n                    *puVar1 = uVar5;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x410d65;\n                    fcn.0045e120(arg1_00, iVar9, iVar12);\n                }\n                *arg1_01 = *arg1_01 + 1;\n                uVar14 = uVar17;\ncode_r0x00410d6e:\n                iVar12 = uVar14 * *(iVar9 + 0x51) + 0x88 + iVar12;\n                if ((*(arg1_01 + 1) & 4) == 0) {\n                    *(*0x20 + -0x28) = iVar12;\n                    *(*0x20 + -0x70) = 0x410da5;\n                    fcn.00433680();\n                    iVar12 = *(*0x20 + -0x28);\n                    arg1_01 = *(*0x20 + 0x10);\n                }\n                *(arg1_01 + 1) = *(arg1_01 + 1) & 0xfb;\n                return iVar12;\n            }\n        }\n        *(*0x20 + -0x70) = 0x410ae7;\n        fcn.0040e800();\n        arg1_01 = *(*0x20 + 0x10);\n        uVar8 = *(*0x20 + -0x40);\n        iVar9 = *(*0x20 + 8);\n    } while( true );\n}\n",
        "token_count": 2561
    },
    "00410e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410e20(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.00410ec0((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.00410ec0(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "004112e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004112e0(int64_t arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != arg1) {\n        if ((*0x5985b4 != '\\0') && (in_RAX[1] != 0)) {\n            fcn.00411cc0(in_RAX[1]);\n        }\n        fcn.0045eda0(*in_RAX);\n        if (*0x5985b5 != '\\0') {\n            fcn.004042e0(arg1);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00411380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411380(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t arg3;\n    int64_t unaff_RSI;\n    uint64_t arg1_00;\n    uint64_t unaff_RDI;\n    \n    if ((((*0x5985b4 != '\\0') && (in_RAX != 0)) && (*(in_RAX + 8) != 0)) && (7 < unaff_RDI)) {\n        fcn.00411cc0(unaff_RDI);\n    }\n    fcn.0045eda0(unaff_RDI);\n    arg3 = 0;\n    while( true ) {\n        if (8 < arg3) {\n            return;\n        }\n        if (1 < arg3 >> 3) break;\n        arg1_00 = arg3 - (arg3 & 0xfffffffffffffff8);\n        if (arg1_00 < 0) {\n            fcn.00431ba0();\n            break;\n        }\n        if ((1 << (arg1_00 & 0x1f) & -(arg1_00 < 0x20) & *(unaff_RSI + 0x108 + (arg3 >> 3))) != 0) {\n            if (*0x5985b0 == 0) {\n                *(unaff_RSI + 0xc0 + arg3 * 8) = *(unaff_RSI + arg3 * 8);\n            }\n            else {\n                fcn.0045e0c0(arg1_00, unaff_RSI, arg3, -(arg1_00 < 0x20));\n            }\n        }\n        arg3 = arg3 + 1;\n    }\n    fcn.0045e420(2);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 407
    },
    "004114a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004114a0(int64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    if (unaff_RSI < arg1) {\n        arg1 = unaff_RSI;\n    }\n    if (arg1 == 0) {\n        return 0;\n    }\n    if (*0x5985b5 != '\\0') {\n        fcn.00404380(unaff_RDI);\n    }\n    if (unaff_RDI != unaff_RBX) {\n        arg1_00 = arg1 * *in_RAX;\n        if (*0x5985b4 != '\\0') {\n            fcn.00411cc0((arg1_00 - *in_RAX) + in_RAX[1]);\n        }\n        fcn.0045eda0(arg1_00);\n        return arg1;\n    }\n    return arg1;\n}\n",
        "token_count": 228
    },
    "00411580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411580(void)\n\n{\n    ulong *in_RAX;\n    \n    if ((*0x5985b4 != '\\0') && (in_RAX[1] != 0)) {\n        fcn.00411cc0(in_RAX[1]);\n    }\n    fcn.0045eaa0(*in_RAX);\n    return;\n}\n",
        "token_count": 79
    },
    "004117a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004117a0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00434ec0();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00434f40();\n    if (in_RAX != 0) {\n        if (*(in_RAX + 99) == '\\x01') {\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.00434f40();\n        }\n        else {\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.00434f40();\n        }\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00435620();\n        fcn.004357c0();\n        fcn.00435620();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.00434f40();\n    }\n    fcn.00434ec0();\n    fcn.00435120();\n    fcn.00434f40();\n    if (arg1 != 0) goto code_r0x004118f0;\n    do {\n        *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n        fcn.00433580();\ncode_r0x004118f0:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00435620();\n        fcn.004357c0();\n        fcn.00435620();\n        fcn.004357c0();\n        fcn.00434f40();\n        fcn.0041cce0(arg1);\n    } while( true );\n}\n",
        "token_count": 453
    },
    "004119e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004119e0(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x56a790);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x10400 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 != 0) {\n        if (((*(iVar2 + 99) == '\\x01') && (uVar1 = *(iVar2 + 0x18),  uVar1 <= in_RAX)) &&\n           (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n            return *(iVar2 + 0x68) * (*(iVar2 + 0x5c) * (in_RAX - uVar1) >> 0x20) + uVar1;\n        }\n        if (*(iVar2 + 99) != '\\x02') {\n            if (*0x598820 != 0) {\n                fcn.004117a0(unaff_RBX);\n            }\n            return 0;\n        }\n        return 0;\n    }\n    if ((in_RAX == 0xdeaddeaddeaddead) && (*0x598820 != 0)) {\n        fcn.004117a0(unaff_RBX);\n    }\n    return 0;\n}\n",
        "token_count": 462
    },
    "00411cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411cc0(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    code *pcVar5;\n    uint64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong *puVar10;\n    uint64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    ulong *puVar11;\n    int64_t unaff_R14;\n    uint64_t uVar12;\n    \n    if (((in_RAX | unaff_RBX | arg1) & 7) != 0) {\n        fcn.00433580();\n        pcVar5 = swi(3);\n        (*pcVar5)();\n        return;\n    }\n    if (*0x5985b4 == '\\0') {\n        return;\n    }\n    uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar7 < 0x40) {\n        iVar8 = *(uVar7 * 8 + 0x56a790);\n        if (iVar8 == 0) {\n            iVar8 = 0;\n        }\n        else {\n            iVar8 = *(iVar8 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar8 == 0) {\n                iVar8 = 0;\n            }\n            else {\n                iVar8 = *(iVar8 + 0x10400 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar8 = 0;\n    }\n    if (iVar8 != 0) {\n        puVar11 = unaff_RSI & 0xffffffffffffff00 | *(iVar8 + 99);\n        if (((*(iVar8 + 99) == 1) && (*(iVar8 + 0x18) < in_RAX || *(iVar8 + 0x18) == in_RAX)) &&\n           (in_RAX <= *(iVar8 + 0x70) && *(iVar8 + 0x70) != in_RAX)) {\n            uVar7 = *(*(unaff_R14 + 0x30) + 0xa0);\n            fcn.00411b40();\n            uVar12 = unaff_RBX;\n            if (unaff_RBX == 0) {\n                while (fcn.00411c60(arg1, unaff_RBX),  puVar11 != NULL) {\n                    puVar2 = *(uVar7 + 0x1260);\n                    *puVar2 = *puVar11;\n                    puVar2[1] = 0;\n                    puVar11 = *(uVar7 + 0x1260) + 0x10;\n                    *(uVar7 + 0x1260) = puVar11;\n                    unaff_RBX = uVar7;\n                    if (*(uVar7 + 0x1268) == puVar11) {\n                        fcn.0042cf00();\n                    }\n                }\n            }\n            else {\n                while (fcn.00411c60(arg1, unaff_RBX),  puVar11 != NULL) {\n                    puVar10 = puVar11 + (uVar12 - in_RAX);\n                    puVar2 = *(uVar7 + 0x1260);\n                    puVar11 = *puVar11;\n                    uVar3 = *puVar10;\n                    *puVar2 = puVar11;\n                    puVar2[1] = uVar3;\n                    unaff_RBX = *(uVar7 + 0x1260) + 0x10;\n                    *(uVar7 + 0x1260) = unaff_RBX;\n                    if (*(uVar7 + 0x1268) == unaff_RBX) {\n                        fcn.0042cf00();\n                    }\n                }\n            }\n            return;\n        }\n        return;\n    }\n    if (*0x544c30 == NULL) {\n        iVar9 = 0;\n        iVar8 = 0;\n    }\n    else {\n        iVar8 = **0x544c30;\n        iVar9 = (*0x544c30)[1];\n    }\n    iVar6 = 0;\n    while( true ) {\n        if (iVar9 <= iVar6) {\n            if (*0x544c30 == NULL) {\n                iVar9 = 0;\n                iVar8 = 0;\n            }\n            else {\n                iVar8 = **0x544c30;\n                iVar9 = (*0x544c30)[1];\n            }\n            iVar6 = 0;\n            while( true ) {\n                if (iVar9 <= iVar6) {\n                    return;\n                }\n                iVar4 = *(iVar8 + iVar6 * 8);\n                if ((*(iVar4 + 0xe0) <= in_RAX) && (puVar1 = iVar4 + 0xe8,  in_RAX <= *puVar1 && *puVar1 != in_RAX))\n                break;\n                iVar6 = iVar6 + 1;\n            }\n            fcn.00412120(arg1);\n            return;\n        }\n        iVar4 = *(iVar8 + iVar6 * 8);\n        if ((*(iVar4 + 0xd0) <= in_RAX) && (puVar1 = iVar4 + 0xd8,  in_RAX <= *puVar1 && *puVar1 != in_RAX)) break;\n        iVar6 = iVar6 + 1;\n    }\n    fcn.00412120(arg1);\n    return;\n}\n",
        "token_count": 1245
    },
    "00411fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411fe0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    uint64_t in_RAX;\n    uint64_t arg2;\n    uint64_t unaff_RBX;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    if (((in_RAX | unaff_RBX | arg1) & 7) != 0) {\n        fcn.00433580();\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    if (*0x5985b4 != '\\0') {\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        arg2 = in_RAX;\n        fcn.00411b40();\n        iVar5 = iVar1;\n        while( true ) {\n            fcn.00411c60(arg1, arg2);\n            if (iVar5 == 0) break;\n            puVar2 = *(iVar1 + 0x1260);\n            uVar3 = *((iVar5 - in_RAX) + unaff_RBX);\n            *puVar2 = 0;\n            puVar2[1] = uVar3;\n            iVar5 = *(iVar1 + 0x1260) + 0x10;\n            *(iVar1 + 0x1260) = iVar5;\n            arg2 = in_RAX;\n            if (*(iVar1 + 0x1268) == iVar5) {\n                fcn.0042cf00();\n            }\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "00412120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412120(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    uint64_t unaff_RDI;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t iVar8;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    uVar7 = 1 << (unaff_RDI >> 3 & 7);\n    puVar5 = unaff_RSI + (unaff_RDI >> 6);\n    uVar4 = 0;\n    iVar8 = unaff_RBX;\n    do {\n        if (arg1 <= uVar4) {\n            return;\n        }\n        if (uVar7 == '\\0') {\n            if (puVar5[1] != 0) {\n                uVar7 = 1;\n                puVar5 = puVar5 + 1;\n                goto code_r0x004121a9;\n            }\n            uVar4 = uVar4 + 0x38;\n            puVar5 = puVar5 + 1;\n        }\n        else {\ncode_r0x004121a9:\n            if ((*puVar5 & uVar7) != 0) {\n                if (unaff_RBX == 0) {\n                    puVar2 = *(iVar1 + 0x1260);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = 0;\n                    iVar6 = *(iVar1 + 0x1260) + 0x10;\n                    *(iVar1 + 0x1260) = iVar6;\n                    if (*(iVar1 + 0x1268) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042cf00();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n                else {\n                    puVar2 = *(iVar1 + 0x1260);\n                    uVar3 = *(uVar4 + unaff_RBX);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = uVar3;\n                    iVar6 = *(iVar1 + 0x1260) + 0x10;\n                    *(iVar1 + 0x1260) = iVar6;\n                    if (*(iVar1 + 0x1268) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042cf00();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n            }\n            uVar7 = uVar7 << 1;\n        }\n        uVar4 = uVar4 + 8;\n    } while( true );\n}\n",
        "token_count": 670
    },
    "004122c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004122c0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint8_t *puVar5;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t iVar9;\n    \n    if (in_RAX != NULL) {\n        if (*in_RAX == unaff_RDI) {\n            if ((*(in_RAX + 0x17) & 0x40) == 0) {\n                if (*0x5985b4 != '\\0') {\n                    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    puVar5 = in_RAX[4];\n                    uVar7 = 0;\n                    iVar9 = unaff_RBX;\n                    for (uVar6 = 0; uVar6 <= in_RAX[1] && in_RAX[1] != uVar6; uVar6 = uVar6 + 8) {\n                        if ((uVar6 & 0x3f) == 0) {\n                            uVar7 = *puVar5;\n                            puVar5 = puVar5 + 1;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 1;\n                        }\n                        if ((uVar7 & 1) != 0) {\n                            puVar2 = *(iVar1 + 0x1260);\n                            uVar3 = *(uVar6 + arg1);\n                            *puVar2 = *(uVar6 + unaff_RBX);\n                            puVar2[1] = uVar3;\n                            iVar8 = *(iVar1 + 0x1260) + 0x10;\n                            *(iVar1 + 0x1260) = iVar8;\n                            if (*(iVar1 + 0x1268) == iVar8) {\n                                unaff_RBX = iVar9;\n                                fcn.0042cf00();\n                                iVar9 = unaff_RBX;\n                            }\n                        }\n                    }\n                    return;\n                }\n                return;\n            }\n            fcn.00455540();\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.004357c0();\n            fcn.004357c0();\n            fcn.00434f40();\n            fcn.00433580();\n        }\n        fcn.00455540();\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.00435120();\n        fcn.00434f40();\n        fcn.00433580();\n    }\n    fcn.00433580();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 688
    },
    "00412a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00412a60(uint64_t arg1)\n\n{\n    uint64_t in_RAX;\n    int64_t *arg1_00;\n    ulong arg1_01;\n    uint64_t arg3;\n    int64_t *noname_1;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    uint64_t *unaff_RDI;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 8) {\n                return;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            arg1_00 = in_RAX >> 3 & 0x3f;\n            if ((*(unaff_RDI + 0x17) & 0x40) != 0) {\n                *(*0x20 + -0x30) = arg1_00;\n                *(*0x20 + -0x38) = in_RAX + arg1_00 * -8;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0xb8) = 0x412b8a;\n                uVar2 = fcn.004130e0();\n                *(*0x20 + -0x68) = uVar2;\n                arg1_01 = *(*0x20 + -0x30);\n                iVar3 = 0;\n                while( true ) {\n                    *(*0x20 + -0x40) = iVar3;\n                    iVar3 = *(*0x20 + -0x10);\n                    while (8 < uVar2) {\n                        *(*0x20 + -0x50) = uVar2;\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0xb8) = 0x412c66;\n                        fcn.00412660(arg1_01, arg1_01, 8);\n                        iVar3 = *(*0x20 + -0x18) + 1;\n                        uVar2 = *(*0x20 + -0x50) - 8;\n                    }\n                    *(*0x20 + -0xb8) = 0x412c17;\n                    fcn.00412660(arg1_01, arg1_01, uVar2);\n                    if (*(*0x20 + 0x18) == *(*0x20 + -0x40) + **(*0x20 + 0x20)) break;\n                    *(*0x20 + -0xb8) = 0x412bc6;\n                    fcn.004127a0(arg1_01, *(*0x20 + -0x68) << 3);\n                    iVar3 = **(*0x20 + 0x20) + *(*0x20 + -0x40);\n                    uVar2 = *(*0x20 + -0x68);\n                }\n                *(*0x20 + -0xb8) = 0x412cb1;\n                fcn.00412840(arg1_01, *(*0x20 + 0x20), *(*0x20 + 0x10));\n                *(*0x20 + -0xb8) = 0x412ccb;\n                fcn.0045eaa0();\n                return;\n            }\n            uVar2 = unaff_RDI[1] >> 3;\n            uVar4 = *unaff_RDI;\n            if (arg1 == uVar4) {\n                if (uVar2 < 0x41) {\n                    noname_1 = unaff_RDI[4];\n                    *(*0x20 + -0xb8) = 0x412b5c;\n                    fcn.00412660(arg1_00, noname_1, uVar2);\n                }\n                else {\n                    uVar4 = unaff_RDI[4];\n                    while( true ) {\n                        *(*0x20 + -0x78) = uVar2;\n                        *(*0x20 + -0x20) = uVar4;\n                        *(*0x20 + -0xb8) = 0x412d45;\n                        fcn.00412660(arg1_00, uVar4, 0x40);\n                        uVar2 = *(*0x20 + -0x78) - 0x40;\n                        if (uVar2 < 0x41) break;\n                        uVar4 = *(*0x20 + -0x20) + 8;\n                    }\n                    noname_1 = *(*0x20 + -0x20);\n                    *(*0x20 + -0xb8) = 0x412d67;\n                    fcn.00412660(arg1_00, noname_1, uVar2);\n                }\n                goto code_r0x00412cdb;\n            }\n            arg3 = uVar4 >> 3;\n            if (0x40 < arg3) {\n                *(*0x20 + -0x30) = uVar2;\n                iVar3 = 0;\n                while( true ) {\n                    *(*0x20 + -0x48) = iVar3;\n                    uVar4 = unaff_RDI[4];\n                    while (0x40 < uVar2) {\n                        *(*0x20 + -0x58) = uVar2;\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0xb8) = 0x412e38;\n                        fcn.00412660(arg1_00, 0, 0x40);\n                        uVar4 = *(*0x20 + -0x28) + 8;\n                        uVar2 = *(*0x20 + -0x58) - 0x40;\n                    }\n                    *(*0x20 + -0xb8) = 0x412de6;\n                    fcn.00412660(arg1_00, 0, uVar2);\n                    noname_1 = *(*0x20 + 0x20);\n                    if (*(*0x20 + 0x18) == *(*0x20 + -0x48) + *noname_1) break;\n                    *(*0x20 + -0xb8) = 0x412d78;\n                    fcn.004127a0(arg1_00, noname_1);\n                    iVar3 = *(*0x20 + -0x48) + **(*0x20 + 0x20);\n                    uVar2 = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                goto code_r0x00412cdb;\n            }\n            if (uVar4 != 0) break;\n            *(*0x20 + -0xb8) = 0x412fbc;\n            in_RAX = fcn.00431c00();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x412fd6;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n    arg1 = arg1 / uVar4;\n    uVar4 = *unaff_RDI[4];\n    do {\n        if (0x20 < arg3) break;\n        if ((arg1 & 1) != 0) {\n            *(*0x20 + -0x80) = arg3;\n            *(*0x20 + -0x78) = uVar2;\n            *(*0x20 + -0x60) = uVar4;\n            *(*0x20 + -0x70) = arg1;\n            *(*0x20 + -0xb8) = 0x412edb;\n            fcn.00412660(arg1_00, arg1_00, arg3);\n            uVar2 = *(*0x20 + -0x78);\n            uVar4 = *(*0x20 + -0x60);\n            arg1 = *(*0x20 + -0x70);\n            arg3 = *(*0x20 + -0x80);\n        }\n        arg1 = arg1 >> 1;\n        uVar4 = uVar4 | uVar4 << (arg3 & 0x3f);\n        uVar2 = uVar2 + arg3;\n        arg3 = arg3 << 1;\n    } while (arg1 != 1);\n    *(*0x20 + -0x78) = uVar2;\n    *(*0x20 + -0x60) = uVar4;\n    *(*0x20 + -0x80) = arg3;\n    while (1 < arg1) {\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0xb8) = 0x412f5f;\n        fcn.00412660(arg1_00, arg1_00, arg3);\n        uVar2 = *(*0x20 + -0x78);\n        arg3 = *(*0x20 + -0x80);\n        arg1 = *(*0x20 + -0x70) - 1;\n    }\n    *(*0x20 + -0xb8) = 0x412fb2;\n    noname_1 = arg1_00;\n    fcn.00412660(arg1_00, arg1_00, uVar2);\ncode_r0x00412cdb:\n    *(*0x20 + -0xb8) = 0x412cf0;\n    fcn.00412840(arg1_00, noname_1, *(*0x20 + 0x10));\n    return;\n}\n",
        "token_count": 2368
    },
    "004130e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t * fcn.004130e0(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    uint8_t *puVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *unaff_RBX;\n    int64_t iVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint64_t uVar13;\n    uint8_t *puVar14;\n    uint8_t *puVar15;\n    uint8_t *puVar16;\n    \n    puVar8 = NULL;\n    puVar10 = unaff_RBX;\n    puVar14 = NULL;\ncode_r0x0041320a:\n    do {\n        while( true ) {\n            for (; 0x7 < puVar8; puVar8 = puVar8 + -8) {\n                *puVar10 = puVar14;\n                puVar10 = puVar10 + 1;\n                puVar14 = puVar14 >> 8;\n            }\n            uVar1 = *in_RAX;\n            puVar5 = uVar1 & 0x7f;\n            in_RAX = in_RAX + 1;\n            if (uVar1 < '\\0') break;\n            if (puVar5 == NULL) {\n                iVar9 = puVar10 - unaff_RBX;\n                for (puVar5 = puVar8 + (-puVar8 & 7); puVar5 != NULL; puVar5 = puVar5 + -8) {\n                    *puVar10 = puVar14;\n                    puVar14 = puVar14 >> 8;\n                    puVar10 = puVar10 + 1;\n                }\n                return puVar8 + iVar9 * 8;\n            }\n            for (uVar3 = 0; uVar3 < (uVar1 & 0x7f) >> 3; uVar3 = uVar3 + 1) {\n                uVar13 = puVar14 | *in_RAX << (puVar8 & 0x3f);\n                *puVar10 = uVar13;\n                puVar14 = uVar13 >> 8;\n                in_RAX = in_RAX + 1;\n                puVar10 = puVar10 + 1;\n            }\n            if ((uVar1 & 7) != 0) {\n                puVar14 = puVar14 | *in_RAX << (puVar8 & 0x3f);\n                puVar8 = puVar8 + (uVar1 & 7);\n                in_RAX = in_RAX + 1;\n            }\n        }\n        puVar7 = puVar8;\n        puVar11 = puVar14;\n        puVar15 = in_RAX;\n        if (puVar5 != NULL) goto code_r0x00413145;\n        puVar5 = NULL;\n        puVar6 = NULL;\ncode_r0x0041341a:\n        uVar1 = *puVar15;\n        puVar5 = puVar5 | -(puVar6 < 0x40) & (uVar1 & 0x7f) << (puVar6 & 0x3f);\n        puVar15 = puVar15 + 1;\n        puVar7 = puVar8;\n        puVar11 = puVar14;\n        if (uVar1 < '\\0') {\ncode_r0x00413410:\n            puVar6 = puVar6 + 7;\n            goto code_r0x0041341a;\n        }\ncode_r0x00413145:\n        uVar13 = 0;\n        uVar3 = 0;\n        in_RAX = puVar15;\n        while( true ) {\n            uVar1 = *in_RAX;\n            puVar16 = uVar1;\n            uVar13 = uVar13 | (uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40);\n            in_RAX = in_RAX + 1;\n            if (-1 < uVar1) break;\n            uVar3 = uVar3 + 7;\n        }\n        puVar2 = uVar13 * puVar5;\n        puVar6 = puVar7;\n        puVar12 = puVar11;\n        puVar15 = puVar10;\n        if (puVar5 < 0x3a) {\n            for (; puVar15 = puVar15 + -1,  puVar6 < puVar5; puVar6 = puVar6 + 8) {\n                puVar12 = puVar12 << 8 | *puVar15;\n            }\n            if (puVar5 < puVar6) {\n                puVar15 = -(puVar6 - puVar5 < 0x40);\n                puVar12 = puVar12 >> (puVar6 - puVar5 & 0x3f) & puVar15;\n                puVar6 = puVar5;\n            }\n            puVar14 = puVar11;\n            if (puVar6 == 0x1) {\n                puVar6 = puVar2;\n                if (puVar12 == 0x1) {\n                    puVar12 = 0x1ffffffffffffff;\n                    puVar6 = 0x39;\n                }\n                goto code_r0x00413325;\n            }\n            puVar8 = puVar6 * 2;\n            puVar5 = puVar6;\n            if (0x39 < puVar8) goto code_r0x00413325;\n            for (; puVar14 = puVar12,  puVar5 < 0x41; puVar5 = puVar5 * 2) {\n                puVar8 = -(puVar5 < 0x40);\n                puVar12 = puVar14 << (puVar5 & 0x3f) & puVar8 | puVar14;\n                puVar15 = puVar6;\n                puVar16 = puVar14;\n            }\n            if (puVar6 != NULL) break;\n            puVar5 = fcn.00431c00();\n            unaff_RBX = puVar16;\n            goto code_r0x00413410;\n        }\n        uVar3 = puVar5 - puVar7 & 7;\n        puVar5 = puVar10 + -((puVar5 - puVar7) + 7U >> 3);\n        if (uVar3 != 0) {\n            puVar11 = puVar11 | (*puVar5 >> (-(uVar3 - 8) & 0x3f) & -(-(uVar3 - 8) < 0x40)) << (puVar7 & 0x3f);\n            puVar7 = puVar7 + uVar3;\n            puVar2 = puVar2 + -uVar3;\n            puVar5 = puVar5 + 1;\n        }\n        for (uVar3 = puVar2 >> 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            uVar13 = puVar11 | *puVar5 << (puVar7 & 0x3f) & -(puVar7 < 0x40);\n            *puVar10 = uVar13;\n            puVar11 = uVar13 >> 8;\n            puVar5 = puVar5 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        uVar4 = puVar2 & 7;\n        puVar8 = puVar7;\n        puVar14 = puVar11;\n        if (uVar4 != 0) {\n            puVar14 = puVar11 | ((1 << uVar4) - 1U & *puVar5) << (puVar7 & 0x3f) & -(puVar7 < 0x40);\n            puVar8 = puVar7 + uVar4;\n        }\n    } while( true );\n    puVar6 = puVar6 * SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x39)) / ZEXT816(puVar6), 0);\n    puVar12 = puVar14 & (1 << (puVar6 & 0x3f) & -(puVar6 < 0x40)) - 1;\n    puVar14 = puVar11;\ncode_r0x00413325:\n    while (puVar8 = puVar7,  puVar6 <= puVar2) {\n        puVar14 = puVar14 | puVar12 << (puVar8 & 0x3f) & -(puVar8 < 0x40);\n        for (puVar7 = puVar6 + puVar8; 0x7 < puVar7; puVar7 = puVar7 + -8) {\n            *puVar10 = puVar14;\n            puVar14 = puVar14 >> 8;\n            puVar10 = puVar10 + 1;\n        }\n        puVar2 = puVar2 + -puVar6;\n    }\n    if (puVar2 != NULL) {\n        puVar14 = puVar14 | (puVar12 & (1 << (puVar2 & 0x3f) & -(puVar2 < 0x40)) - 1) << (puVar8 & 0x3f) &\n                            -(puVar8 < 0x40);\n        puVar8 = puVar8 + puVar2;\n    }\n    goto code_r0x0041320a;\n}\n",
        "token_count": 2125
    },
    "00413580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00413580(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    piStack32 = NULL;\n    auStack24 = CONCAT88(&piStack32, 0x413660);\n    fcn.0045bc80();\n    for (iVar2 = 0; iVar2 < 0x88; iVar2 = iVar2 + 1) {\n        piStack32[iVar2 + 5] = 0x598ae0;\n    }\n    if (*0x52d358 == 1) {\n        iVar2 = 0;\n    }\n    else {\n        iVar1 = fcn.0040c8e0();\n        iVar2 = iVar1;\n    }\n    *piStack32 = iVar2;\n    return piStack32;\n}\n",
        "token_count": 248
    },
    "00413f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00414029)\n\nint64_t fcn.00413f00(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t iVar1;\n    uint8_t *in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX >> 1 < 0x44) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x413f46;\n                fcn.004226e0();\n                if (*0x54a530 != '\\0') {\n                    *(*0x20 + -0x58) = 0x413f54;\n                    fcn.00450b60();\n                }\n                *(*0x20 + -0x30) = 0;\n                *(*0x20 + -0x2c) = 0;\n                uVar7 = *0x56a738 >> 1 & 1;\n                *(*0x20 + -0x3c) = uVar7;\n                *(*0x20 + -0x10) = uVar7 * 5;\n                *(*0x20 + -0x58) = 0x413f8b;\n                iVar2 = fcn.0042c820();\n                if (iVar2 != 0) {\n                    cVar6 = '\\0';\n                    goto code_r0x00413f94;\n                }\ncode_r0x00414009:\n                uVar7 = *0x54577c & 0x80000000;\n                if (uVar7 == 0) {\n                    *0x54577c = *0x54577c + 1;\n                    LOCK();\n                }\n                *(*0x20 + -0x30) = *0x56a738;\n                *(*0x20 + -0x2c) = uVar7 == 0;\n                if (uVar7 == 0) {\n                    iVar1 = *(*0x20 + -0x3c);\n                    uVar3 = *(*0x20 + 8);\n                    iVar2 = 100;\n                    while (-1 < iVar2) {\n                        if (1 < -(iVar1 + -1)) goto code_r0x0041422d;\n                        *(*0x20 + -0x38) = iVar2;\n                        *(*0x20 + -0x58) = 0x4140a5;\n                        iVar2 = fcn.0042c820();\n                        if (iVar2 == 0) {\n                            iVar1 = *(*0x20 + -0x3c);\n                            iVar2 = *(*0x20 + -0x38);\n                            uVar3 = *(*0x20 + 8);\n                            break;\n                        }\n                        *(*0x20 + -0x18) = iVar2;\n                        *(*0x20 + -0x58) = 0x4140bc;\n                        uVar3 = fcn.00421180();\n                        *(*0x20 + -0x20) = uVar3;\n                        if (iVar2 != '\\0') {\n                            *(*0x20 + -0x58) = 0x4140d4;\n                            fcn.00421600();\n                            *(*0x20 + -0x58) = 0x4140e9;\n                            fcn.00420d20();\n                            cVar6 = '\\0';\n                            iVar2 = *(*0x20 + -0x18);\n                            goto code_r0x00413f94;\n                        }\n                        iVar1 = *(*0x20 + -0x3c);\n                        uVar3 = *(*0x20 + 8);\n                        iVar2 = *(*0x20 + -0x38) + -1;\n                    }\n                    do {\n                        if (iVar2 < 0) goto code_r0x004141d3;\n                        if (1 < -(iVar1 + -1)) {\n                            *(*0x20 + -0x58) = 0x41422d;\n                            fcn.0045e420(2);\ncode_r0x0041422d:\n                            *(*0x20 + -0x58) = 0x414239;\n                            fcn.0045e420(2);\n                            goto code_r0x00414239;\n                        }\n                        *(*0x20 + -0x38) = iVar2;\n                        iVar2 = -(iVar1 + -1) * 5;\n                        *(*0x20 + -0x58) = 0x414145;\n                        iVar4 = fcn.0042c820();\n                        if (iVar4 == 0) goto code_r0x004141d3;\n                        *(*0x20 + -0x18) = iVar4;\n                        *(*0x20 + -0x58) = 0x414165;\n                        uVar5 = fcn.00421180();\n                        *(*0x20 + -0x28) = uVar5;\n                        if (iVar4 == '\\0') goto code_r0x00414105;\n                        *(*0x20 + -0x58) = 0x41417d;\n                        fcn.00421600();\n                        *(*0x20 + -0x58) = 0x414187;\n                        iVar2 = fcn.00411640(iVar2, uVar3, param_3, param_4);\n                        if (*(*(*0x20 + -0x28) + 0x38) != iVar2) {\n                            *(*(*0x20 + -0x28) + 0x30) = iVar2;\n                            *(*0x20 + -0x58) = 0x4141c7;\n                            fcn.00420d20();\n                            cVar6 = '\\0';\n                            iVar2 = *(*0x20 + -0x18);\n                            goto code_r0x00413f94;\n                        }\n                        *(*0x20 + -0x58) = 0x4141a9;\n                        fcn.0042c660(*(*0x20 + -0x10), *(*0x20 + 8));\ncode_r0x00414105:\n                        iVar2 = *(*0x20 + -0x38) + -1;\n                        uVar3 = *(*0x20 + 8);\n                        iVar1 = *(*0x20 + -0x3c);\n                    } while( true );\n                }\n                goto code_r0x004141e8;\n            }\ncode_r0x00414239:\n            *(*0x20 + -0x58) = 0x414246;\n            in_RAX = fcn.0045e420(0x44);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x414251;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\ncode_r0x004141d3:\n    *(*0x20 + -0x58) = 0x4141e8;\n    fcn.00420d20();\ncode_r0x004141e8:\n    *(*0x20 + -0x3d) = *0x54a530;\n    if (*0x54a530 != '\\0') {\n        *(*0x20 + -0x58) = 0x4141fc;\n        fcn.00450c60();\n    }\n    *(*0x20 + -0x58) = 0x414206;\n    iVar2 = fcn.00414360();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    cVar6 = *(*0x20 + -0x3d);\ncode_r0x00413f94:\n    *(*0x20 + -0x18) = iVar2;\n    if ((*0x54a530 != '\\0') && (cVar6 == '\\0')) {\n        *(*0x20 + -0x58) = 0x413fab;\n        fcn.00450c60();\n        iVar2 = *(*0x20 + -0x18);\n    }\n    if ((*(iVar2 + 0x38) != *(iVar2 + 0x60)) && (*(iVar2 + 0x30) != *(iVar2 + 0x38))) {\n        *(*0x20 + -0x58) = 0x413fd3;\n        fcn.00411620();\n        iVar2 = *(*0x20 + -0x18);\n        *(iVar2 + 0x40) = *(iVar2 + 0x40) >> (*(iVar2 + 0x30) & 0x3f);\n        return iVar2;\n    }\n    *(*0x20 + -0x58) = 0x414008;\n    fcn.00433580();\n    goto code_r0x00414009;\n}\n",
        "token_count": 2081
    },
    "00414260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00414260(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = *0x56a738;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_RBX + 0x60) != 0) {\n                if (*(unaff_RBX + 0x58) == *0x56a738 + 1) {\n                    *(unaff_RBX + 0x58) = *0x56a738 - 1;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x28) = 0x414305;\n                    fcn.00421600();\n                }\n                else {\n                    *(unaff_RBX + 0x58) = *0x56a738;\n                    if (*(unaff_RBX + 0x38) - *(unaff_RBX + 0x60) < 1) {\n                        *(*0x20 + -0x28) = 0x4142ed;\n                        fcn.0042c660((uVar1 >> 1 & 1) * 5);\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x4142d3;\n                        fcn.0042c660((uVar1 >> 1 & 1) * 5);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x28) = 0x414325;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x414335;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 573
    },
    "00414a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00414a60(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x38) = 0x4000;\n            *(*0x20 + -0x58) = 0x414aa5;\n            fcn.00430980();\n            if (*(*0x20 + -0x30) != 0) {\n                return;\n            }\n            iVar1 = *(*0x20 + 8);\n            uVar2 = *(*0x20 + 0x10);\n            while( true ) {\n                if (uVar2 == 0) {\n                    return;\n                }\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x10) = iVar1;\n                uVar3 = uVar2;\n                while( true ) {\n                    *(*0x20 + -0x18) = uVar3;\n                    if (uVar3 < 0x1000) {\n                        bVar5 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0x40) = uVar3;\n                        *(*0x20 + -0x38) = 0x4000;\n                        *(*0x20 + -0x58) = 0x414b50;\n                        fcn.00430980();\n                        bVar5 = *(*0x20 + -0x30) == 0;\n                        uVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x18);\n                        iVar1 = *(*0x20 + -0x10);\n                    }\n                    if (!bVar5) break;\n                    uVar3 = uVar3 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar3 < 0x1000) break;\n                uVar2 = uVar2 - uVar3;\n                iVar1 = iVar1 + uVar3;\n            }\n            *(*0x20 + -0x58) = 0x414b8e;\n            fcn.0045f960();\n            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n            *(*0x20 + -0x20) = *(*0x20 + -0x50);\n            *(*0x20 + -0x58) = 0x414bad;\n            fcn.00434ec0();\n            *(*0x20 + -0x58) = 0x414bbe;\n            fcn.004357c0();\n            *(*0x20 + -0x58) = 0x414bc8;\n            fcn.004354c0();\n            *(*0x20 + -0x58) = 0x414bd9;\n            fcn.004357c0();\n            *(*0x20 + -0x58) = 0x414be5;\n            fcn.004354c0();\n            *(*0x20 + -0x58) = 0x414bea;\n            fcn.00435120();\n            *(*0x20 + -0x58) = 0x414bef;\n            fcn.00434f40();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x58) = 0x414c05;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x414c15;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1116
    },
    "00414c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00414c40(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n            *(*0x20 + -0x50) = in_RAX;\n            *(*0x20 + -0x48) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x1000;\n            *(*0x20 + -0x38) = 4;\n            *(*0x20 + -0x60) = 0x414c8e;\n            fcn.00430a00();\n            uVar3 = *(*0x20 + 8);\n            if (*(*0x20 + -0x30) == uVar3) {\n                return uVar3;\n            }\n            uVar2 = *(*0x20 + 0x10);\n            uVar4 = uVar2;\n            while( true ) {\n                if (uVar4 == 0) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar3;\n                uVar5 = uVar4;\n                while( true ) {\n                    *(*0x20 + -0x20) = uVar5;\n                    if (uVar5 < 0x1000) {\n                        bVar7 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n                        *(*0x20 + -0x50) = uVar3;\n                        *(*0x20 + -0x48) = uVar5;\n                        *(*0x20 + -0x40) = 0x1000;\n                        *(*0x20 + -0x38) = 4;\n                        *(*0x20 + -0x60) = 0x414d45;\n                        fcn.00430a00();\n                        bVar7 = *(*0x20 + -0x30) == 0;\n                        uVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar5 = *(*0x20 + -0x20);\n                        uVar2 = *(*0x20 + 0x10);\n                    }\n                    if (!bVar7) break;\n                    uVar5 = uVar5 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar5 < 0x1000) break;\n                uVar4 = uVar4 - uVar5;\n                uVar3 = uVar3 + uVar5;\n            }\n            *(*0x20 + -0x60) = 0x414d8a;\n            fcn.0045f960();\n            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n            iVar1 = *(*0x20 + -0x58);\n            *(*0x20 + -0x24) = iVar1;\n            if (iVar1 != 8) goto code_r0x00414e05;\n            do {\n                *(*0x20 + -0x60) = 0x414dad;\n                fcn.00434ec0();\n                *(*0x20 + -0x60) = 0x414dbe;\n                fcn.004357c0();\n                *(*0x20 + -0x60) = 0x414dc8;\n                fcn.004354c0();\n                *(*0x20 + -0x60) = 0x414dd9;\n                fcn.004357c0();\n                *(*0x20 + -0x60) = 0x414de5;\n                fcn.004354c0();\n                *(*0x20 + -0x60) = 0x414dea;\n                fcn.00435120();\n                *(*0x20 + -0x60) = 0x414def;\n                fcn.00434f40();\n                *(*0x20 + -0x60) = 0x414e05;\n                iVar1 = fcn.00433580();\ncode_r0x00414e05:\n            } while (iVar1 == 0x5af);\n            *(*0x20 + -0x60) = 0x414e11;\n            fcn.00434ec0();\n            *(*0x20 + -0x60) = 0x414e25;\n            fcn.004357c0();\n            *(*0x20 + -0x60) = 0x414e2f;\n            fcn.004354c0();\n            *(*0x20 + -0x60) = 0x414e45;\n            fcn.004357c0();\n            *(*0x20 + -0x60) = 0x414e4e;\n            fcn.004354c0();\n            *(*0x20 + -0x60) = 0x414e53;\n            fcn.00435120();\n            *(*0x20 + -0x60) = 0x414e58;\n            fcn.00434f40();\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x60) = 0x414e69;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x414e79;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1482
    },
    "00414ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00414ea0(void)\n\n{\n    code *pcVar1;\n    int64_t iStack32;\n    \n    fcn.00430980();\n    if (iStack32 != 0) {\n        return;\n    }\n    fcn.0045f960();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.004354c0();\n    fcn.004357c0();\n    fcn.004354c0();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00433580();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 151
    },
    "004150e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004150e0(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong *puVar5;\n    ulong arg4;\n    int64_t unaff_R14;\n    \ncode_r0x004150e0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x598384 == 0) {\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x28) = 0x41512d;\n            fcn.0040a520();\n            if ((*0x598440 != NULL) && (*(*0x598440 + 2) != 0x65)) goto code_r0x004151af;\n            if (*0x598430 != NULL) goto code_r0x0041518b;\n            *(*0x20 + -0x28) = 0x41515c;\n            *0x598430 = fcn.0040ca40(0x59ae58);\n            **0x598430 = *0x5983d0;\n            *0x5983d0 = *0x598430;\n            if (*0x598760 != '\\0') goto code_r0x0041518b;\n            iVar2 = 0;\n            do {\n                if (iVar2 < 0x40) {\n                    uVar1 = iVar2 + (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 2) * -5\n                    ;\n                    if (4 < uVar1) goto code_r0x004152f3;\n                }\n                else {\ncode_r0x0041518b:\n                    puVar5 = *0x598430;\n                    puVar3 = *0x598430 + 1;\n                    *0x598430 = (*0x598430)[1];\n                    *puVar3 = *0x598440;\n                    *0x598440 = puVar5;\ncode_r0x004151af:\n                    puVar3 = *0x598440;\n                    uVar1 = *(*0x598440 + 2);\n                    if (uVar1 < 0x65) {\n                        LOCK();\n                        *(*0x598440 + 2) = *(*0x598440 + 2) + 1;\n                        iVar2 = uVar1 * 5;\n                        puVar5 = puVar3 + uVar1 * 5 + 4;\n                        if (*0x5985b0 == 0) {\n                            puVar3[uVar1 * 5 + 3] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x415218;\n                            fcn.0045e120(iVar2, puVar3, puVar5);\n                        }\n                        arg4 = *(*0x20 + 0x18);\n                        puVar3[iVar2 + 5] = arg4;\n                        if (*0x5985b0 == 0) {\n                            puVar3[iVar2 + 6] = *(*0x20 + 0x20);\n                            puVar3[iVar2 + 7] = *(*0x20 + 0x28);\n                            puVar3[iVar2 + 4] = *(*0x20 + 8);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x415258;\n                            fcn.0045e080(*(*0x20 + 0x20), puVar3, puVar5, arg4);\n                            *(*0x20 + -0x28) = 0x415265;\n                            fcn.0045e080(*(*0x20 + 0x28), puVar3, puVar5, arg4);\n                            *(*0x20 + -0x28) = 0x415272;\n                            fcn.0045e080(*(*0x20 + 8), puVar3, puVar5, arg4);\n                        }\n                        *(*0x20 + -0x28) = 0x415285;\n                        fcn.0040a740();\n                        LOCK();\n                        *0x598374 = *0x598374 | 8;\n                        return;\n                    }\n                    iVar2 = 0x65;\n                    *(*0x20 + -0x28) = 0x4152a9;\n                    uVar1 = fcn.0045e420(0x65);\n                }\n                unaff_RSI = 0x598760;\n                *(iVar2 + 0x598760) = *(uVar1 + 0x52d274);\n                iVar2 = iVar2 + 1;\n            } while( true );\n        }\n        goto code_r0x004152fd;\n    }\n    goto code_r0x0041530f;\ncode_r0x004152f3:\n    arg1 = 5;\n    *(*0x20 + -0x28) = 0x4152fd;\n    fcn.0045e420(5);\ncode_r0x004152fd:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x28) = 0x41530e;\n    in_RAX = fcn.00433580();\ncode_r0x0041530f:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + 0x18) = arg1;\n    *(puVar4 + 0x20) = unaff_RDI;\n    *(puVar4 + 0x28) = unaff_RSI;\n    *(puVar4 + -8) = 0x41532d;\n    fcn.0045bdc0();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    arg1 = *(puVar4 + 0x18);\n    unaff_RDI = *(puVar4 + 0x20);\n    unaff_RSI = *(puVar4 + 0x28);\n    *0x20 = puVar4;\n    goto code_r0x004150e0;\n}\n",
        "token_count": 1563
    },
    "004158c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415ad1)\n// WARNING: Removing unreachable block (ram,0x00415ada)\n// WARNING: Removing unreachable block (ram,0x00415ade)\n// WARNING: Removing unreachable block (ram,0x00415aef)\n// WARNING: Removing unreachable block (ram,0x00415b23)\n// WARNING: Removing unreachable block (ram,0x00415b29)\n// WARNING: Removing unreachable block (ram,0x00415b1d)\n// WARNING: Removing unreachable block (ram,0x00415b17)\n// WARNING: Removing unreachable block (ram,0x00415b11)\n// WARNING: Removing unreachable block (ram,0x00415b0b)\n// WARNING: Removing unreachable block (ram,0x00415b05)\n// WARNING: Removing unreachable block (ram,0x00415aff)\n// WARNING: Removing unreachable block (ram,0x00415af9)\n// WARNING: Removing unreachable block (ram,0x00415b2d)\n// WARNING: Recovered jumptable eliminated as dead code\n\nvoid fcn.004158c0(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    char cVar3;\n    ulong in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t in_RDX;\n    ulong unaff_RBX;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t iVar11;\n    int64_t iVar12;\n    ulong unaff_RDI;\n    uint8_t uVar13;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if (*0x598850 != 0) {\n                return;\n            }\n            iVar5 = *(*0x20 + 8);\n            if (iVar5 != 0) {\n                if ((*(iVar5 + 0x17) & 0x1f) == 0x16) {\n                    if (*(iVar5 + 0x30) != 0) {\n                        *(*0x20 + -0x58) = iVar5;\n                        *(*0x20 + -0xd8) = 0x415965;\n                        cVar3 = fcn.00403760();\n                        if (cVar3 == '\\0') {\n                            uVar9 = 0;\n                            *(*0x20 + -0xd8) = 0x41597f;\n                            uVar4 = fcn.004119e0(0);\n                            if (uVar4 != 0) {\n                                uVar8 = *(*0x20 + 0x10);\n                                if (uVar4 == uVar8) {\n                                    iVar5 = *(*0x20 + -0x58);\n                                }\n                                else {\n                                    iVar5 = *(*0x20 + -0x58);\n                                    puVar1 = *(iVar5 + 0x30);\n                                    if (((puVar1 == NULL) || (puVar1[1] != 0)) || (0xf < *puVar1))\n                                    goto code_r0x00415e7d;\n                                }\n                                iVar11 = *(*0x20 + 0x18);\n                                if (iVar11 == 0) {\n                                    *(*0x20 + -0x48) =\n                                         CONCAT412(in_XMM15_Dd, \n                                                   CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    *(*0x20 + -0x48) = 0x416020;\n                                    *(*0x20 + -0x40) = *0x20 + 8;\n                                    *(*0x20 + -0xd0) = *0x20 + -0x48;\n                                    *(*0x20 + -0xd8) = 0x415c29;\n                                    fcn.0045bc80();\n                                    return;\n                                }\n                                if ((*(iVar11 + 0x17) & 0x1f) == 0x13) {\n                                    *(*0x20 + -0x68) = iVar11;\n                                    if ((*(iVar11 + 0x32) & 0x8000) == 0) {\n                                        if (*(iVar11 + 0x30) == 1) {\n                                            if ((*(iVar11 + 0x14) & 1) == 0) {\n                                                iVar7 = 0x38;\n                                            }\n                                            else {\n                                                iVar7 = 0x48;\n                                            }\n                                            iVar7 = *(iVar11 + iVar7);\n                                            *(*0x20 + -0x60) = iVar7;\n                                            if (iVar7 == iVar5) {\ncode_r0x00415b9d:\n                                                if ((*(iVar11 + 0x14) & 1) == 0) {\n                                                    iVar5 = 0x38;\n                                                }\n                                                else {\n                                                    iVar5 = 0x48;\n                                                }\n                                                uVar9 = *(iVar11 + 0x30);\n                                                uVar8 = (*(iVar11 + 0x32) & 0x7fff) + *(iVar11 + 0x30);\n                                                uVar4 = uVar8 & 0xffff;\n                                                if (uVar9 <= uVar4) {\n                                                    iVar12 = 0;\n                                                    for (iVar7 = 0; iVar7 < uVar4 - uVar9; iVar7 = iVar7 + 1) {\n                                                        piVar2 = *(iVar11 + iVar5 +\n                                                                   (uVar9 << 3 & uVar9 - 0x100000 >> 0x3f) + iVar7 * 8);\n                                                        uVar8 = *(piVar2 + 0x15);\n                                                        iVar12 = (uVar8 + iVar12 + -1 & -uVar8) + *piVar2;\n                                                    }\n                                                    *(*0x20 + -0x78) = iVar12;\n                                                    *(*0x20 + -0xd8) = 0x415c77;\n                                                    fcn.00415360();\n                                                    *(*0x20 + -0x38) =\n                                                         CONCAT412(in_XMM15_Dd, \n                                                                   CONCAT48(in_XMM15_Dc, \n                                                                            CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                                    *(*0x20 + -0x28) =\n                                                         CONCAT412(in_XMM15_Dd, \n                                                                   CONCAT48(in_XMM15_Dc, \n                                                                            CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                                    *(*0x20 + -0x18) =\n                                                         CONCAT412(in_XMM15_Dd, \n                                                                   CONCAT48(in_XMM15_Dc, \n                                                                            CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                                    *(*0x20 + -0x38) = 0x415fc0;\n                                                    *(*0x20 + -0x30) = *0x20 + 8;\n                                                    *(*0x20 + -0x28) = *0x20 + 0x18;\n                                                    *(*0x20 + -0x20) = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                                                    *(*0x20 + -0x18) = *(*0x20 + -0x60);\n                                                    *(*0x20 + -0x10) = *(*0x20 + -0x58);\n                                                    *(*0x20 + -0xd0) = *0x20 + -0x38;\n                                                    *(*0x20 + -0xd8) = 0x415d05;\n                                                    fcn.0045bc80();\n                                                    return;\n                                                }\n                                                *(*0x20 + -0xd8) = 0x415d2e;\n                                                fcn.0045e4e0(uVar4);\n                                            }\n                                            else {\n                                                uVar13 = *(iVar7 + 0x17) & 0x1f;\n                                                if (uVar13 == 0x16) {\n                                                    if ((*(iVar7 + 0x14) & 1) != 0) {\n    // WARNING: Could not recover jumptable at 0x00415a95. Too many branches\n    // WARNING: Treating indirect jump as call\n                                                        (**0x4ca808)();\n                                                        return;\n                                                    }\n                                                    uVar8 = *(iVar7 + 0x30);\n                                                    if (*(iVar5 + 0x30) == uVar8) goto code_r0x00415b9d;\n                                                }\n                                                else {\n                                                    uVar9 = 0;\n                                                    if (uVar13 == 0x14) {\n                                                        if (*(iVar7 + 0x40) != 0) {\n                                                            uVar9 = *(*0x20 + 8);\n                                                            *(*0x20 + -0xd8) = 0x415b85;\n                                                            iVar5 = fcn.0040a140(uVar8);\n                                                            if (iVar5 == 0) goto code_r0x00415d2e;\n                                                            iVar11 = *(*0x20 + -0x68);\n                                                        }\n                                                        goto code_r0x00415b9d;\n                                                    }\n                                                }\n                                            }\ncode_r0x00415d2e:\n                                            *(*0x20 + -0xd8) = 0x415d38;\n                                            uVar6 = fcn.00455540();\n                                            *(*0x20 + -0x50) = uVar6;\n                                            *(*0x20 + -0x70) = uVar9;\n                                            *(*0x20 + -0xd8) = 0x415d4f;\n                                            fcn.00455540();\n                                            uVar9 = 0x4aed80;\n                                            *(*0x20 + -0xd8) = 0x415d85;\n                                            fcn.00449700(0x22, uVar8, 0x4a99ee, 0xe);\n                                            *(*0x20 + -0xd8) = 0x415d8a;\n                                            fcn.00433580();\n                                        }\n                                        *(*0x20 + -0xd8) = 0x415d8f;\n                                        uVar6 = fcn.00455540();\n                                        *(*0x20 + -0x50) = uVar6;\n                                        *(*0x20 + -0x70) = uVar9;\n                                        *(*0x20 + -0xd8) = 0x415da6;\n                                        fcn.00455540();\n                                        uVar9 = 0x4aed80;\n                                        *(*0x20 + -0xd8) = 0x415dd9;\n                                        fcn.00449700(0x22, uVar8, 0x4a99ee, 0xe);\n                                        *(*0x20 + -0xd8) = 0x415dde;\n                                        fcn.00433580();\n                                    }\n                                    *(*0x20 + -0xd8) = 0x415de5;\n                                    uVar6 = fcn.00455540();\n                                    *(*0x20 + -0x50) = uVar6;\n                                    *(*0x20 + -0x70) = uVar9;\n                                    *(*0x20 + -0xd8) = 0x415dfc;\n                                    fcn.00455540();\n                                    *(*0x20 + -0xd0) = 0x4aa75f;\n                                    *(*0x20 + -200) = 0x12;\n                                    *(*0x20 + -0xd8) = 0x415e45;\n                                    fcn.00449800(0x22, uVar8, 0x4a99ee, 0xe);\n                                    *(*0x20 + -0xd8) = 0x415e4a;\n                                    fcn.00433580();\n                                }\n                                *(*0x20 + -0xd8) = 0x415e52;\n                                fcn.00455540();\n                                *(*0x20 + -0xd8) = 0x415e78;\n                                fcn.00449620(0x29, uVar8, 0x4aa057, 0x10);\n                                *(*0x20 + -0xd8) = 0x415e7d;\n                                fcn.00433580();\ncode_r0x00415e7d:\n                                *(*0x20 + -0xd8) = 0x415e8e;\n                                iVar5 = fcn.00433580();\n                                goto code_r0x00415e8e;\n                            }\n                            uVar8 = *(*0x20 + 0x10);\n                            if (uVar8 == 0x598538) {\n                                return;\n                            }\n                            in_RDX = 0x598538;\n                            for (iVar5 = 0x532f00; iVar5 != 0; iVar5 = *(iVar5 + 0x230)) {\n                                if (((((*(iVar5 + 0xc0) < uVar8 || *(iVar5 + 0xc0) == uVar8) &&\n                                      (uVar8 <= *(iVar5 + 200) && *(iVar5 + 200) != uVar8)) ||\n                                     ((*(iVar5 + 0xd0) < uVar8 || *(iVar5 + 0xd0) == uVar8 &&\n                                      (uVar8 <= *(iVar5 + 0xd8) && *(iVar5 + 0xd8) != uVar8)))) ||\n                                    ((*(iVar5 + 0xe0) < uVar8 || *(iVar5 + 0xe0) == uVar8 &&\n                                     (uVar8 <= *(iVar5 + 0xe8) && *(iVar5 + 0xe8) != uVar8)))) ||\n                                   ((*(iVar5 + 0xf0) < uVar8 || *(iVar5 + 0xf0) == uVar8 &&\n                                    (uVar8 <= *(iVar5 + 0xf8) && *(iVar5 + 0xf8) != uVar8)))) {\n                                    return;\n                                }\ncode_r0x00415e8e:\n                                in_RDX = uVar8;\n                            }\n                            *(*0x20 + -0xd8) = 0x415f13;\n                            fcn.00433580();\n                        }\n                        *(*0x20 + -0xd8) = 0x415f25;\n                        fcn.00433580();\n                    }\n                    *(*0x20 + -0xd8) = 0x415f36;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0xd8) = 0x415f3b;\n                unaff_RDI = fcn.00455540();\n                arg1 = 0x28;\n                *(*0x20 + -0xd8) = 0x415f65;\n                fcn.00449620(0x28, in_RDX, 0x4a976c, 0xd);\n                *(*0x20 + -0xd8) = 0x415f6a;\n                fcn.00433580();\n            }\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0xd8) = 0x415f7b;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x415f95;\n        fcn.0045bdc0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3684
    },
    "00416060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416060(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t *arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 0x4001) {\n                if (unaff_RBX < 8) {\n                    unaff_RBX = 8;\n                }\n                *in_RAX = unaff_RBX;\n                if (*0x5985b0 == 0) {\n                    in_RAX[1] = arg1;\n                    in_RAX[2] = unaff_RDI;\n                }\n                else {\n                    arg2 = in_RAX + 1;\n                    *(*0x20 + -0x20) = 0x4160bf;\n                    in_R8 = unaff_RDI;\n                    iVar2 = fcn.0045e080(arg1, arg2, unaff_RDI, in_R9);\n                    unaff_RDI = iVar2 + 0x10;\n                    *(*0x20 + -0x20) = 0x4160c8;\n                    in_RAX = fcn.0045e100(arg1, arg2, in_R8, in_R9);\n                }\n                *(in_RAX + 3) = in_XMM15;\n                *(in_RAX + 5) = 0;\n                if (unaff_RBX != 0) {\n                    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x4000);\n                    *(in_RAX + 0x2c) = SUB164(auVar1 / ZEXT816(unaff_RBX), 0) * unaff_RBX;\n                    in_RAX[6] = 0;\n                    if (*0x5985b0 == 0) {\n                        in_RAX[7] = unaff_RSI;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x41610d;\n                        fcn.0045e0e0(in_RAX, SUB168(auVar1 % ZEXT816(unaff_RBX), 0), in_R8, in_R9);\n                    }\n                    *(in_RAX + 8) = 1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x416125;\n                fcn.00431c00();\n            }\n            unaff_RBX = 0x20;\n            *(*0x20 + -0x20) = 0x416136;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x416155;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 930
    },
    "00416180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t * fcn.00416180(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *in_RAX;\n            if (uVar3 != 0) {\n                puVar4 = in_RAX[3];\n                if (puVar4 != NULL) {\n                    in_RAX[3] = *puVar4;\n                    in_RAX[6] = in_RAX[6] + *in_RAX;\n                    if (*(in_RAX + 8) != '\\0') {\n                        *(*0x20 + -0x18) = puVar4;\n                        *(*0x20 + -0x38) = 0x4161d6;\n                        fcn.0045eaa0();\n                        puVar4 = *(*0x20 + -0x18);\n                    }\n                    return puVar4;\n                }\n                *(*0x20 + 8) = in_RAX;\n                if (*(in_RAX + 5) < uVar3) {\n                    uVar3 = in_RAX[7];\n                    *(*0x20 + -0x38) = 0x416206;\n                    uVar3 = fcn.0040ca40(uVar3);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[4] = uVar3;\n                    *(in_RAX + 5) = *(in_RAX + 0x2c);\n                }\n                puVar4 = in_RAX[4];\n                ppcVar1 = in_RAX[1];\n                if (ppcVar1 != NULL) {\n                    *(*0x20 + -0x10) = puVar4;\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x38) = 0x416236;\n                    (*pcVar2)();\n                    in_RAX = *(*0x20 + 8);\n                    puVar4 = *(*0x20 + -0x10);\n                }\n                in_RAX[4] = in_RAX[4] + *in_RAX;\n                *(in_RAX + 5) = *(in_RAX + 5) - *in_RAX;\n                in_RAX[6] = in_RAX[6] + *in_RAX;\n                return puVar4;\n            }\n            *(*0x20 + -0x38) = 0x416266;\n            fcn.00434ec0();\n            *(*0x20 + -0x38) = 0x416277;\n            fcn.004357c0();\n            *(*0x20 + -0x38) = 0x41627c;\n            fcn.00434f40();\n            *(*0x20 + -0x38) = 0x41628d;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x416298;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 829
    },
    "00416340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416340(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    ulong *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    noname_0 = fcn.004049c0();\n    puVar1 = fcn.0040c6e0();\n    *puVar1 = 0x4164a0;\n    if (*0x5985b0 == 0) {\n        puVar1[1] = noname_0;\n    }\n    else {\n        fcn.0045e080(noname_0, param_2, param_3, param_4);\n    }\n    fcn.0043e360();\n    puVar1 = fcn.0040c6e0();\n    *puVar1 = 0x416440;\n    if (*0x5985b0 == 0) {\n        puVar1[1] = noname_0;\n    }\n    else {\n        fcn.0045e080(noname_0, param_2, param_3, param_4);\n    }\n    fcn.0043e360();\n    fcn.00405900();\n    fcn.00405900();\n    *0x59be98 = 1;\n    return;\n}\n",
        "token_count": 339
    },
    "004165c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004165c0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((*0x59be98 == '\\0' || *0x5983a4 != 0) || (*0x598384 != 0)) {\n        return 0;\n    }\n    if (in_RAX == 0) {\n        uVar1 = fcn.0041e440();\n        return uVar1 & 0xffffffffffffff00 | uVar1 <= *0x598cf0;\n    }\n    if (in_RAX == 1) {\n        if (-1 < *0x598ca0) {\n            if (*0x59be88 == 0) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = *0x59be88 & 0xffffffffffffff00 | *0x52d368 < unaff_RBX - *0x59be88;\n            }\n            return uVar1 & 0xffffffff;\n        }\n        return 0;\n    }\n    if (in_RAX == 2) {\n        return 0 < arg1 - *0x545b70;\n    }\n    return 1;\n}\n",
        "token_count": 333
    },
    "004166e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00416aac)\n// WARNING: Removing unreachable block (ram,0x00416ac3)\n\nvoid fcn.004166e0(uint64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    char cVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            piVar3 = *(unaff_R14 + 0x30);\n            if (((*piVar3 == unaff_R14) || (iVar2 = *(piVar3 + 0x1b),  1 < iVar2)) || (piVar3[0x1a] != 0)) {\n                iVar2 = *(piVar3 + 0x1b);\n                *(piVar3 + 0x1b) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(piVar3 + 0x1b) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            *(*0x20 + -0x4c) = arg1;\n            *(*0x20 + -0x30) = unaff_RBX;\n            *(*0x20 + -0x38) = in_RAX;\n            while( true ) {\n                *(*0x20 + -0x88) = 0x4167a5;\n                cVar4 = fcn.004165c0(arg1);\n                if (cVar4 == '\\0') {\n                    bVar9 = false;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4167b2;\n                    iVar5 = fcn.00421220();\n                    bVar9 = iVar5 != -1;\n                }\n                if (!bVar9) break;\n                *0x545774 = *0x545774 + 1;\n                arg1 = *(*0x20 + -0x4c);\n            }\n            *(*0x20 + -0x88) = 0x4167d5;\n            fcn.00443b80(0);\n            *(*0x20 + -0x88) = 0x4167e8;\n            cVar4 = fcn.004165c0(*(*0x20 + -0x4c));\n            if (cVar4 == '\\0') {\n                *(*0x20 + -0x88) = 0x4168cb;\n                fcn.00443ee0(0);\n                return;\n            }\n            if (*0x598818 == 1) {\n                uVar6 = 1;\n            }\n            else {\n                uVar6 = 0;\n                if (*0x598818 == 2) {\n                    uVar6 = 2;\n                }\n            }\n            *(*0x20 + -0x40) = uVar6;\n            *(*0x20 + -0x88) = 0x416839;\n            fcn.00443b80(0);\n            *(*0x20 + -0x88) = 0x416851;\n            fcn.00443b80(0);\n            iVar5 = *(*0x20 + -0x38);\n            *0x545b38 = iVar5 == 2;\n            if (*0x54a530 != '\\0') {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x28) = *0x54a560;\n                *(*0x20 + -0x88) = 0x41689c;\n                fcn.0044f960(*0x20 + -0x28);\n                *0x54a560 = *0x54a560 + 1;\n                iVar5 = *(*0x20 + -0x38);\n            }\n            iVar7 = 0;\n            while( true ) {\n                if (*0x5455b8 <= iVar7) {\n                    *(*0x20 + -0x88) = 0x416905;\n                    fcn.00417f00();\n                    *(*0x20 + -0x80) = 0x4b2930;\n                    *(*0x20 + -0x88) = 0x416915;\n                    fcn.0045bc80();\n                    *0x545b74 = *0x598388;\n                    *0x545b78 = *0x598388;\n                    if (*0x598390 < *0x598388) {\n                        *0x545b74 = *0x598390;\n                    }\n                    *0x545bb0 = *0x598cf0;\n                    *0x545ba0 = 0;\n                    *0x545b30 = *(*0x20 + -0x40);\n                    *(*0x20 + -0x88) = 0x416974;\n                    fcn.0045fdc0();\n                    *0x545b80 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x48) = *0x545b80;\n                    *0x545ba8 = *0x545b80;\n                    if (*0x54a530 != '\\0') {\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0x28) = 1;\n                        *(*0x20 + -0x88) = 0x4169d7;\n                        fcn.0044f960(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x80) = 0x4b2ab0;\n                    *(*0x20 + -0x88) = 0x4169e7;\n                    fcn.0045bc80();\n                    *(*0x20 + -0x80) = 0x4b2938;\n                    *(*0x20 + -0x88) = 0x416a09;\n                    fcn.0045bc80();\n                    uVar10 = 0;\n                    uVar11 = 0;\n                    uVar12 = 0;\n                    uVar13 = 0;\n                    iVar7 = **(in_GS_OFFSET + *0x598520);\n                    *(*0x20 + -0x88) = 0x416a25;\n                    fcn.00418da0();\n                    LOCK();\n                    *0x545b70 = *0x545b70 + 1;\n                    arg3 = *(*0x20 + -0x4c);\n                    *(*0x20 + -0x88) = 0x416a5d;\n                    fcn.0041d3c0(*0x598388, iVar5, arg3);\n                    *(*0x20 + -0x88) = 0x416a73;\n                    fcn.00419160(*(*0x20 + -0x48));\n                    if (*(*0x20 + -0x40) != 0) {\n                        *(*0x20 + -0x88) = 0x416a85;\n                        fcn.00441860();\n                    }\n                    *0x598384 = 1;\n                    *0x5985b4 = 1;\n                    *0x5985b0 = 1;\n                    *0x545ab0 = 0xffffffff;\n                    *0x545ac0 = 0xffffffff;\n                    *(*0x20 + -0x88) = 0x416aea;\n                    fcn.00419980(1, 0x598384, arg3);\n                    *(*0x20 + -0x88) = 0x416aef;\n                    fcn.0041d240();\n                    *0x59837c = 1;\n                    piVar1 = *(iVar7 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x20) = *(iVar7 + 0x30);\n                    *(*0x20 + -0x18) = CONCAT412(uVar13, CONCAT48(uVar12, CONCAT44(uVar11, uVar10)));\n                    *(*0x20 + -0x18) = 0x416ca0;\n                    *(*0x20 + -0x10) = *0x20 + -0x48;\n                    *(*0x20 + -0x80) = *0x20 + -0x18;\n                    *(*0x20 + -0x88) = 0x416b3b;\n                    fcn.0045bc80();\n                    iVar5 = **(in_GS_OFFSET + *0x598520);\n                    *(*0x20 + -0x88) = 0x416b5e;\n                    fcn.00443ee0(0);\n                    iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                    *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                    if (iVar2 == 1) {\n                        if (*(iVar5 + 0xb1) == '\\0') {\n                            bVar9 = *(*0x20 + -0x40) == 0;\n                        }\n                        else {\n                            *(iVar5 + 0x10) = 0xfffffffffffffade;\n                            bVar9 = *(*0x20 + -0x40) == 0;\n                        }\n                    }\n                    else {\n                        bVar9 = *(*0x20 + -0x40) == 0;\n                    }\n                    if (!bVar9) {\n                        *(*0x20 + -0x88) = 0x416bb5;\n                        fcn.0045bc00();\n                    }\n                    *(*0x20 + -0x88) = 0x416bc6;\n                    fcn.00443ee0(0);\n                    return;\n                }\n                piVar1 = *(*0x5455b0 + iVar7 * 8);\n                iVar2 = *(*(piVar1 + 0x10) + 0x488);\n                if (iVar2 != *0x56a738) break;\n                iVar7 = iVar7 + 1;\n            }\n            *(*0x20 + -0x50) = iVar2;\n            *(*0x20 + -0x4c) = *0x56a738;\n            *(*0x20 + -0x30) = *piVar1;\n            *(*0x20 + -0x88) = 0x416be6;\n            arg1 = *0x5455b8;\n            fcn.00434ec0();\n            *(*0x20 + -0x88) = 0x416bf7;\n            fcn.004357c0();\n            *(*0x20 + -0x88) = 0x416c05;\n            fcn.004355c0();\n            *(*0x20 + -0x88) = 0x416c16;\n            fcn.004357c0();\n            *(*0x20 + -0x88) = 0x416c25;\n            fcn.004354c0();\n            *(*0x20 + -0x88) = 0x416c36;\n            fcn.004357c0();\n            *(*0x20 + -0x88) = 0x416c3f;\n            fcn.004354c0();\n            *(*0x20 + -0x88) = 0x416c45;\n            fcn.00435120();\n            *(*0x20 + -0x88) = 0x416c4a;\n            fcn.00434f40();\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x88) = 0x416c5b;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + -8) = 0x416c6f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2990
    },
    "00416d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00416d40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong uVar3;\n    ulong arg1;\n    uchar *arg1_00;\n    ulong arg2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    char cStack41;\n    ulong uStack40;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00443b80(0);\n    while ((*0x598384 == 1 && (*0x545ab0 == *0x545ac0))) {\n        if (*0x545a20 == 0) {\n            if (*0x545aa8 < *0x545aac) {\n                bVar2 = true;\n            }\n            else {\n                bVar2 = false;\n            }\n        }\n        else {\n            bVar2 = true;\n        }\n        if (bVar2) break;\n        arg1 = 0;\n        fcn.00443b80(0);\n        *0x598380 = 0;\n        fcn.0045bc80();\n        if (*0x598380 == 0) {\n            fcn.0045fdc0();\n            uVar3 = 0x4b28f8;\n            *0x545b90 = 0x4b28f8;\n            *0x545ba8 = 0x4b28f8;\n            iVar1 = *(**(in_GS_OFFSET + *0x598520) + 0x30);\n            *(iVar1 + 0xd0) = 5;\n            if (*0x5985b0 == 0) {\n                arg2 = 0x4a82e6;\n                *(iVar1 + 200) = 0x4a82e6;\n            }\n            else {\n                arg2 = 0x4a82e6;\n                uVar3 = fcn.0045e0a0(arg1, 0x4a82e6, param_3, param_4);\n            }\n            uStack40 = uVar3;\n            if (*0x54a530 != '\\0') {\n                uStack32 = 0;\n                fcn.0044f960(&uStack32);\n            }\n            fcn.0045bc80();\n            cStack41 = '\\0';\n            auStack24 = CONCAT88(&cStack41, 0x417060);\n            arg1_00 = auStack24;\n            fcn.0045bc80();\n            if (cStack41 == '\\0') {\n                fcn.00448780();\n                *0x59837c = 0;\n                fcn.00419160(uStack40);\n                fcn.0041aea0();\n                fcn.00443ee0(0);\n                fcn.00441860();\n                fcn.0041d8c0(*0x598388);\n                fcn.00417120();\n                return;\n            }\n            iVar1 = *(**(in_GS_OFFSET + *0x598520) + 0x30);\n            *(iVar1 + 0xd0) = 0;\n            if (*0x5985b0 == 0) {\n                *(iVar1 + 200) = 0;\n            }\n            else {\n                fcn.0045df80(arg1_00, arg2, param_3, param_4);\n            }\n            fcn.0045bc80();\n            fcn.00443ee0(0);\n        }\n        else {\n            fcn.00443ee0(0);\n        }\n    }\n    fcn.00443ee0(0);\n    return;\n}\n",
        "token_count": 859
    },
    "00418600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00418600(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t arg2;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0 < *0x598848) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x78) = 0x41862c;\n                fcn.0042bbe0();\n                in_RAX = *(*0x20 + 8);\n            }\n            if (*0x598384 == 2) {\n                *(*0x20 + -0x20) = *0x545a20;\n                *0x545ab8 = in_RAX;\n                if ((*0x545a20 == 0) && (arg2 = *0x545aa8,  *0x545aac <= *0x545aa8)) {\n                    if (0 < *0x59880c) {\n                        *(*0x20 + -0x78) = 0x41867a;\n                        fcn.00419b80();\n                    }\n                    if (*0x545a20 == 0) {\n                        *0x545b08 = in_XMM15;\n                        if (*0x5985b0 == 0) {\n                            *0x545b00 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x78) = 0x4186b4;\n                            fcn.0045e080(0, arg2, arg3, in_R9);\n                        }\n                        *(*0x20 + -0x10) = *0x5455b0;\n                        *(*0x20 + -0x28) = *0x5455b8;\n                        iVar3 = 0;\n                        iVar4 = *0x5455b0;\n                        iVar5 = *0x5455b8;\n                        while( true ) {\n                            iVar2 = *0x5455b8;\n                            iVar1 = *0x5455b0;\n                            if (iVar5 <= iVar3) {\n                                for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n                                    iVar5 = *(*(iVar1 + iVar4 * 8) + 0x40);\n                                    if (iVar5 != 0) {\n                                        *(iVar5 + 8) = 0;\n                                    }\n                                }\n                                *(*0x20 + -0x78) = 0x418795;\n                                fcn.0041e0e0();\n                                return;\n                            }\n                            *(*0x20 + -0x30) = iVar3;\n                            *(*0x20 + -0x18) = *(iVar4 + iVar3 * 8);\n                            if (*0x59880c < 1) {\n                                *(*0x20 + -0x78) = 0x418725;\n                                fcn.0042ce80();\n                            }\n                            else {\n                                *(*0x20 + -0x78) = 0x418711;\n                                fcn.0042cfc0();\n                            }\n                            iVar4 = *(*(*0x20 + -0x18) + 0x1238);\n                            if ((iVar4 != 0) &&\n                               ((*(iVar4 + 0x10) != 0 || (*(*(*(*0x20 + -0x18) + 0x1240) + 0x10) != 0)))) break;\n                            *(*0x20 + -0x78) = 0x4186db;\n                            fcn.00422d60();\n                            iVar3 = *(*0x20 + -0x30) + 1;\n                            iVar4 = *(*0x20 + -0x10);\n                            iVar5 = *(*0x20 + -0x28);\n                        }\n                        *(*0x20 + -0x78) = 0x4187a5;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x38) = **(*0x20 + -0x18);\n                        *(*0x20 + -0x59) = *(*(*0x20 + -0x18) + 0x496);\n                        *(*0x20 + -0x78) = 0x4187c5;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x78) = 0x4187d6;\n                        fcn.004357c0();\n                        *(*0x20 + -0x78) = 0x4187e5;\n                        fcn.004355c0();\n                        *(*0x20 + -0x78) = 0x4187f6;\n                        fcn.004357c0();\n                        *(*0x20 + -0x78) = 0x418805;\n                        fcn.00435160();\n                        *(*0x20 + -0x78) = 0x41880a;\n                        fcn.00434f40();\n                        if (*(*(*0x20 + -0x18) + 0x1238) == 0) {\n                            *(*0x20 + -0x78) = 0x4188d1;\n                            fcn.00434ec0();\n                            *(*0x20 + -0x78) = 0x4188e5;\n                            fcn.004357c0();\n                            *(*0x20 + -0x78) = 0x4188ea;\n                            fcn.00434f40();\n                        }\n                        else {\n                            *(*0x20 + -0x28) = *(*(*(*0x20 + -0x18) + 0x1238) + 0x10);\n                            *(*0x20 + -0x78) = 0x41882d;\n                            fcn.00434ec0();\n                            *(*0x20 + -0x78) = 0x41883e;\n                            fcn.004357c0();\n                            *(*0x20 + -0x78) = 0x418848;\n                            fcn.004355c0();\n                            *(*0x20 + -0x78) = 0x41884d;\n                            fcn.00434f40();\n                        }\n                        if (*(*(*0x20 + -0x18) + 0x1240) == 0) goto code_r0x004188ac;\n                        *(*0x20 + -0x28) = *(*(*(*0x20 + -0x18) + 0x1240) + 0x10);\n                        *(*0x20 + -0x78) = 0x41886c;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x78) = 0x41887d;\n                        fcn.004357c0();\n                        *(*0x20 + -0x78) = 0x418887;\n                        fcn.004355c0();\n                        *(*0x20 + -0x78) = 0x41888c;\n                        fcn.00434f40();\n                        do {\n                            *(*0x20 + -0x78) = 0x418891;\n                            fcn.00434ec0();\n                            *(*0x20 + -0x78) = 0x418896;\n                            fcn.00435120();\n                            *(*0x20 + -0x78) = 0x41889b;\n                            fcn.00434f40();\n                            *(*0x20 + -0x78) = 0x4188ac;\n                            fcn.00433580();\ncode_r0x004188ac:\n                            *(*0x20 + -0x78) = 0x4188b1;\n                            fcn.00434ec0();\n                            *(*0x20 + -0x78) = 0x4188c5;\n                            fcn.004357c0();\n                            *(*0x20 + -0x78) = 0x4188ca;\n                            fcn.00434f40();\n                        } while( true );\n                    }\n                    *(*0x20 + -0x78) = 0x418905;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x40) = *0x545aa8;\n                *(*0x20 + -0x48) = *0x545aac;\n                *(*0x20 + -0x28) = *0x545ac8;\n                *(*0x20 + -0x30) = *0x545ad0;\n                *(*0x20 + -0x50) = *0x545ad8;\n                *(*0x20 + -0x58) = *0x545ae0;\n                *(*0x20 + -0x78) = 0x418950;\n                fcn.00434ec0();\n                *(*0x20 + -0x78) = 0x418965;\n                fcn.004357c0();\n                *(*0x20 + -0x78) = 0x41896f;\n                fcn.00435620();\n                *(*0x20 + -0x78) = 0x418985;\n                fcn.004357c0();\n                *(*0x20 + -0x78) = 0x41898f;\n                fcn.004354c0();\n                *(*0x20 + -0x78) = 0x4189a5;\n                fcn.004357c0();\n                *(*0x20 + -0x78) = 0x4189af;\n                fcn.004354c0();\n                *(*0x20 + -0x78) = 0x4189c5;\n                fcn.004357c0();\n                *(*0x20 + -0x78) = 0x4189cf;\n                fcn.004355c0();\n                *(*0x20 + -0x78) = 0x4189e5;\n                fcn.004357c0();\n                *(*0x20 + -0x78) = 0x4189ef;\n                fcn.004355c0();\n                *(*0x20 + -0x78) = 0x418a05;\n                fcn.004357c0();\n                *(*0x20 + -0x78) = 0x418a0f;\n                fcn.004355c0();\n                *(*0x20 + -0x78) = 0x418a25;\n                fcn.004357c0();\n                *(*0x20 + -0x78) = 0x418a2f;\n                fcn.004355c0();\n                *(*0x20 + -0x78) = 0x418a34;\n                fcn.00435120();\n                *(*0x20 + -0x78) = 0x418a39;\n                fcn.00434f40();\n                *(*0x20 + -0x78) = 0x418a4c;\n                fcn.00432de0();\n            }\n            *(*0x20 + -0x78) = 0x418a5d;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x418a68;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2650
    },
    "00418a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00418c2a)\n\nvoid fcn.00418a80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x598384 == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x418ab9;\n                fcn.0040a520();\n                *0x56a738 = *0x56a738 + 2;\n                *0x54577c = 0;\n                *0x56a760 = 0;\n                *0x56a9f8 = *0x56a9e0;\n                *0x56aa00 = *0x56a9e8;\n                if (*0x5985b0 == 0) {\n                    *0x56a9f0 = *0x56a9d8;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x418b1b;\n                    fcn.0045e080(*0x56a9d8, *0x56a9e0, param_3, param_4);\n                }\n                *0x56a780 = 0;\n                *0x56a788 = 0;\n                *(*0x20 + -0x28) = 0x418b45;\n                fcn.0040a740();\n                *0x545780 = 0;\n                if (*(*0x20 + 8) != 2) {\n                    *(*0x20 + -0x28) = 0x418b95;\n                    fcn.0040a520();\n                    if (*0x545770 != '\\0') {\n                        *0x545770 = '\\0';\n                        *(*0x20 + -0x28) = 0x418bb8;\n                        fcn.004372e0(1);\n                    }\n                    *(*0x20 + -0x28) = 0x418bc6;\n                    fcn.0040a740();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x418b6a;\n                fcn.0040a520();\n                *0x56a778 = 0;\n                *(*0x20 + -0x28) = 0x418b85;\n                fcn.0040a740();\n                while( true ) {\n                    *(*0x20 + -0x28) = 0x418bdb;\n                    iVar2 = fcn.00421220();\n                    if (iVar2 == -1) break;\n                    *0x545778 = *0x545778 + 1;\n                }\n                *(*0x20 + -0x28) = 0x418beb;\n                fcn.00423480();\n                do {\n                    *(*0x20 + -0x28) = 0x418bf2;\n                    cVar1 = fcn.00423580();\n                } while (cVar1 != '\\0');\n                *0x59838c = ((*0x59838c >> 1) + (((*0x59838c >> 1) + 1) / 0x6000000) * -0x6000000 + 1) * 2;\n                LOCK();\n                *(*0x20 + -0x28) = 0x418c39;\n                fcn.0042ab80();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x418c54;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x418c5f;\n        fcn.00460800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 999
    },
    "00418da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00418da0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t arg2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x544c48 != NULL) {\n        (***0x544c48)();\n    }\n    arg2 = *0x5455d8;\n    iVar3 = *0x5455d0;\n    for (iVar2 = 0; iVar2 < arg2; iVar2 = iVar2 + 1) {\n        puVar1 = *(iVar3 + iVar2 * 8);\n        if (*0x5985b0 != '\\0') {\n            fcn.004037e0();\n        }\n        *puVar1 = 0;\n    }\n    fcn.0040a520();\n    iVar3 = *0x5460c8;\n    while (iVar3 != 0) {\n        arg2 = *(iVar3 + 8);\n        if (*0x5985b0 == 0) {\n            *(iVar3 + 8) = 0;\n            iVar3 = arg2;\n        }\n        else {\n            iVar3 = arg2;\n            fcn.0045e080(0, arg2, param_3, param_4);\n            arg2 = iVar3;\n        }\n    }\n    if (*0x5985b0 == 0) {\n        *0x5460c8 = 0;\n    }\n    else {\n        fcn.0045e080(0, arg2, param_3, param_4);\n    }\n    fcn.0040a740();\n    fcn.0040a520();\n    iVar3 = *0x5460d8;\n    while (iVar3 != 0) {\n        arg2 = *(iVar3 + 0x28);\n        if (*0x5985b0 == 0) {\n            *(iVar3 + 0x28) = 0;\n            iVar3 = arg2;\n        }\n        else {\n            iVar3 = arg2;\n            fcn.0045e080(0, arg2, param_3, param_4);\n            arg2 = iVar3;\n        }\n    }\n    if (*0x5985b0 == 0) {\n        *0x5460d8 = 0;\n    }\n    else {\n        fcn.0045e080(0, arg2, param_3, param_4);\n    }\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 616
    },
    "00418f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * fcn.00418f40(uint64_t arg1)\n\n{\n    uchar *in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    char cVar7;\n    uint64_t unaff_RBX;\n    uint64_t arg1_00;\n    uchar *puVar8;\n    uchar *puVar9;\n    uint64_t unaff_RDI;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    int64_t aiStack96 [3];\n    char acStack72 [8];\n    int32_t *apiStack64 [5];\n    uchar auStack24 [16];\n    \n    puVar4 = &stack0xfffffffffffffff8;\n    if (unaff_RDI < 10000000) {\n        uVar5 = (unaff_RDI >> 1) / 500;\n        if (uVar5 == 0) {\n            if (unaff_RBX != 0) {\n                *in_RAX = 0x30;\n                if (arg1 != 0) {\n                    return in_RAX;\n                }\n                uVar5 = 0;\n                fcn.0045e4a0(1, 0);\n            }\n            arg1 = 0;\n            iVar1 = fcn.0045e420(0);\n            goto code_r0x00418fdb;\n        }\n        iVar1 = 3;\n        for (; 99 < uVar5; uVar5 = uVar5 / 10) {\ncode_r0x00418fdb:\n            iVar1 = iVar1 + -1;\n        }\n        arg1_00 = unaff_RBX - iVar1;\n        uVar2 = arg1_00 - 1;\n        uVar6 = unaff_RBX - 1;\ncode_r0x0041900c:\n        uVar10 = uVar6;\n        if ((uVar5 < 10) && (uVar10 < uVar2)) {\n            if (uVar10 < unaff_RBX) {\n                in_RAX[uVar10] = uVar5 + '0';\n                return in_RAX + (-(arg1 - uVar10) >> 0x3f & uVar10);\n            }\n            fcn.0045e420(unaff_RBX);\n            goto code_r0x0041909e;\n        }\n        uVar6 = uVar5 / 10;\n        arg1_00 = uVar5 % 10;\n        uVar5 = uVar6;\n        if (uVar10 < unaff_RBX) goto code_r0x0041903a;\n        goto code_r0x004190a6;\n    }\n    uVar5 = unaff_RDI / 1000000;\n    uVar2 = unaff_RBX - 1;\n    arg1_00 = unaff_RBX;\n    uVar6 = uVar2;\ncode_r0x004190b7:\n    uVar10 = uVar6;\n    cVar7 = uVar5;\n    if ((uVar5 < 10) && (uVar10 < uVar2)) {\n        if (uVar10 < arg1_00) {\n            in_RAX[uVar10] = cVar7 + '0';\n            return in_RAX + (-(arg1 - uVar10) >> 0x3f & uVar10);\n        }\n        fcn.0045e420(arg1_00);\n        goto code_r0x0041914c;\n    }\n    uVar5 = uVar5 / 10;\n    if (uVar10 < arg1_00) goto code_r0x004190eb;\n    goto code_r0x00419154;\ncode_r0x0041903a:\n    in_RAX[uVar10] = arg1_00 + '0';\n    uVar6 = uVar10 - 1;\n    if (uVar6 != uVar2) goto code_r0x0041900c;\n    if (uVar6 < unaff_RBX) {\n        in_RAX[uVar10 - 1] = 0x2e;\n        uVar6 = uVar10 - 2;\n        goto code_r0x0041900c;\n    }\ncode_r0x0041909e:\n    fcn.0045e420(unaff_RBX);\ncode_r0x004190a6:\n    arg1 = unaff_RBX;\n    uVar2 = arg1;\n    uVar6 = fcn.0045e420(arg1);\n    goto code_r0x004190b7;\ncode_r0x004190eb:\n    in_RAX[uVar10] = cVar7 + uVar5 * -10 + '0';\n    uVar6 = uVar10 - 1;\n    if (uVar6 == uVar2) {\n        if (arg1_00 <= uVar6) {\ncode_r0x0041914c:\n            fcn.0045e420(arg1_00);\ncode_r0x00419154:\n            uVar5 = arg1_00;\n            piVar3 = fcn.0045e420(arg1_00);\n            puVar8 = auStack24;\n            do {\n                cVar7 = arg1_00;\n                puVar9 = puVar8;\n                if (*(unaff_R14 + 0x10) <= puVar8 && puVar8 != *(unaff_R14 + 0x10)) {\n                    puVar9 = puVar8 + -0x20;\n                    *(puVar8 + -8) = puVar4;\n                    puVar4 = puVar8 + -8;\n                    LOCK();\n                    if (*piVar3 == 0) {\n                        *piVar3 = 1;\n                        if (*(piVar3 + 8) != cVar7) {\n                            *(puVar8 + -0x10) = piVar3;\n                            puVar8[0x10] = cVar7;\n                            *(puVar8 + -0x28) = 0x4191a8;\n                            puVar4 = fcn.00419360();\n                            iVar1 = *(puVar8 + -0x10);\n                            *(iVar1 + 0x20) = puVar8[0x10];\n                            *(iVar1 + 0x21) = 1;\n                            return puVar4;\n                        }\n                        *(puVar8 + -0x28) = 0x4191d4;\n                        fcn.00433580();\n                    }\n                    cVar7 = '/';\n                    *(puVar8 + -0x28) = 0x4191e5;\n                    piVar3 = fcn.00433580();\n                }\n                *(puVar9 + 8) = piVar3;\n                puVar9[0x10] = cVar7;\n                *(puVar9 + 0x18) = uVar5;\n                *(puVar9 + -8) = 0x4191f9;\n                fcn.0045bdc0();\n                piVar3 = *(puVar9 + 8);\n                arg1_00 = puVar9[0x10];\n                uVar5 = *(puVar9 + 0x18);\n                puVar8 = puVar9;\n            } while( true );\n        }\n        in_RAX[uVar10 - 1] = 0x2e;\n        uVar6 = uVar10 - 2;\n    }\n    goto code_r0x004190b7;\n}\n",
        "token_count": 1650
    },
    "00419220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419220(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x21) != '\\0') {\n                iVar2 = *(in_RAX + 0x40);\n                if (iVar2 <= unaff_RBX) {\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + 8) = in_RAX;\n                    iVar1 = *(in_RAX + 0x4c);\n                    *(*0x20 + -0x28) = 0x419265;\n                    fcn.00419560((unaff_RBX - iVar2) * iVar1);\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(in_RAX + 0x40) = unaff_RBX;\n                *(in_RAX + 0x21) = 0;\n                *(*0x20 + -0x28) = 0x41927d;\n                fcn.00419600();\n                return;\n            }\n            unaff_RBX = 0x2f;\n            *(*0x20 + -0x28) = 0x419298;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x4192a8;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 531
    },
    "004192c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004192c0(void)\n\n{\n    uint32_t *in_RAX;\n    uint64_t uVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*in_RAX != 0) {\n                return *in_RAX;\n            }\n            *in_RAX = 1;\n            if (*(in_RAX + 0x21) == '\\0') {\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x28) = 0x4192fc;\n                fcn.00419360();\n                *(*0x20 + -0x28) = 0x419306;\n                uVar1 = fcn.00419600();\n                return uVar1;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x28) = 0x41932b;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x41933b;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 434
    },
    "00419600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00419600(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *in_RAX;\n            *in_RAX = 0;\n            if (iVar1 == 1) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x419638;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x419645;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 280
    },
    "00419980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419980(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x544c30 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x544c30;\n        iVar5 = (*0x544c30)[1];\n    }\n    *0x545ac8 = in_XMM15;\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n        if (*0x545ac8 < uVar8) {\n            *0x545ac8 = CONCAT88(*0x545ad0, uVar8);\n        }\n    }\n    if (*0x544c30 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x544c30;\n        iVar5 = (*0x544c30)[1];\n    }\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n        if (*0x545ad0 < uVar8) {\n            *0x545ac8 = CONCAT88(uVar8, *0x545ac8);\n        }\n    }\n    *0x56aa10 = *0x56a9e0;\n    *0x56aa18 = *0x56a9e0;\n    if (*0x5985b0 == 0) {\n        *0x56aa08 = *0x56a9d8;\n        *0x545ad8 = *0x56a9e0;\n    }\n    else {\n        *0x545ad8 = fcn.0045e080(*0x56a9d8, iVar7, arg3, in_R9);\n    }\n    *0x545b08 = *0x545598;\n    *0x545b10 = *0x545598;\n    if (*0x5985b0 == 0) {\n        *0x545b00 = *0x545590;\n        *0x545ae0 = *0x545598;\n    }\n    else {\n        *0x545ae0 = fcn.0045e080(*0x545590, iVar7, arg3, in_R9);\n    }\n    iVar3 = SUB164(*0x545ac8, 0);\n    iVar4 = SUB164(*0x545ac8 >> 0x40, 0);\n    iVar2 = *0x545ad8;\n    *0x545aa8 = 0;\n    *0x545aac = iVar3 + iVar4 + iVar2 + *0x545ae0 + 2;\n    *0x545ae8 = 2;\n    *0x545aec = iVar3 + 2;\n    *0x545af0 = iVar3 + 2 + iVar4;\n    *0x545af4 = iVar3 + iVar4 + 2 + iVar2;\n    *0x545af8 = iVar3 + iVar4 + iVar2 + *0x545ae0 + 2;\n    return;\n}\n",
        "token_count": 921
    },
    "0041a500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041a500(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    ulong *puVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint8_t uVar8;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = *0x56aa10;\n            if (unaff_RBX < *0x56aa10) {\n                uVar4 = *(*0x56aa08 + unaff_RBX * 8);\n                unaff_RBX = uVar4 >> 0x14;\n                if (unaff_RBX < 0x40) {\n                    *(*0x20 + -0x48) = *0x56a738;\n                    *(*0x20 + -0x10) = in_RAX;\n                    unaff_RBX = *(*(unaff_RBX * 8 + 0x56a790) + (uVar4 & 0xfffff) * 8);\n                    *(*0x20 + -0x28) = unaff_RBX;\n                    iVar3 = 0;\n                    uVar5 = *0x56a738;\n                    do {\n                        if (0x3f < iVar3) {\n                            return;\n                        }\n                        uVar8 = *(iVar3 + 0x11480 + unaff_RBX);\n                        if (uVar8 != 0) {\n                            *(*0x20 + -0x30) = iVar3;\n                            *(*0x20 + -0x49) = uVar8;\n                            for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                                if ((uVar8 & 1 << (uVar4 & 0x1f)) != 0) {\n                                    uVar1 = uVar4 + iVar3 * 8;\n                                    if (uVar1 < 0x200) {\n                                        iVar3 = *(unaff_RBX + 0x10400 + uVar1 * 8);\n                                        in_R10 = in_R10 & 0xffffffffffffff00 | *(iVar3 + 99);\n                                        if (*(iVar3 + 99) == 1) {\n                                            *(*0x20 + -0x20) = uVar4;\n                                            if (*0x598350 == '\\0') {\n                                                uVar2 = *(iVar3 + 0x58);\n                                                in_R10 = uVar2;\n                                                if ((uVar2 != uVar5) && (uVar2 != uVar5 + 3)) {\ncode_r0x0041a6e5:\n                                                    *(*0x20 + -0x44) = in_R10;\n                                                    *(*0x20 + -0x80) = 0x41a6ef;\n                                                    fcn.00434ec0();\n                                                    *(*0x20 + -0x80) = 0x41a705;\n                                                    fcn.004357c0();\n                                                    *(*0x20 + -0x80) = 0x41a70e;\n                                                    fcn.004354c0();\n                                                    *(*0x20 + -0x80) = 0x41a713;\n                                                    fcn.004350e0();\n                                                    *(*0x20 + -0x80) = 0x41a71c;\n                                                    fcn.004354c0();\n                                                    *(*0x20 + -0x80) = 0x41a725;\n                                                    fcn.00435120();\n                                                    *(*0x20 + -0x80) = 0x41a72a;\n                                                    fcn.00434f40();\n                                                    *(*0x20 + -0x80) = 0x41a73b;\n                                                    fcn.00433580();\n                                                    goto code_r0x0041a73b;\n                                                }\n                                            }\n                                            *(*0x20 + -0x38) = iVar3;\n                                            *(*0x20 + -0x18) = iVar3 + 0x78;\n                                            *(*0x20 + -0x80) = 0x41a629;\n                                            fcn.0040a520();\n                                            iVar3 = *(*0x20 + -0x38);\n                                            for (puVar6 = *(iVar3 + 0x80); puVar6 != NULL; puVar6 = *puVar6) {\n                                                if (*(puVar6 + 10) == '\\x01') {\n                                                    if (*(iVar3 + 0x68) == 0) {\n                                                        *(*0x20 + -0x80) = 0x41a6e5;\n                                                        fcn.00431c00();\n                                                        goto code_r0x0041a6e5;\n                                                    }\n                                                    *(*0x20 + -0x40) = puVar6;\n                                                    if ((*(iVar3 + 0x62) & 1) == 0) {\n                                                        *(*0x20 + -0x80) = 0x41a6b0;\n                                                        fcn.0041c400();\n                                                    }\n                                                    *(*0x20 + -0x80) = 0x41a6d1;\n                                                    fcn.0041c260(0x52d260);\n                                                    iVar3 = *(*0x20 + -0x38);\n                                                    puVar6 = *(*0x20 + -0x40);\n                                                }\n                                            }\n                                            *(*0x20 + -0x80) = 0x41a645;\n                                            fcn.0040a740();\n                                            uVar4 = *(*0x20 + -0x20);\n                                            uVar5 = *(*0x20 + -0x48);\n                                            unaff_RBX = *(*0x20 + -0x28);\n                                            uVar8 = *(*0x20 + -0x49);\n                                            iVar3 = *(*0x20 + -0x30);\n                                            goto code_r0x0041a5a8;\n                                        }\ncode_r0x0041a73b:\n                                        *(*0x20 + -0x4a) = in_R10;\n                                        *(*0x20 + -0x80) = 0x41a745;\n                                        fcn.00434ec0();\n                                        *(*0x20 + -0x80) = 0x41a756;\n                                        fcn.004357c0();\n                                        *(*0x20 + -0x80) = 0x41a765;\n                                        fcn.004354c0();\n                                        *(*0x20 + -0x80) = 0x41a76a;\n                                        fcn.00435120();\n                                        *(*0x20 + -0x80) = 0x41a76f;\n                                        fcn.00434f40();\n                                        unaff_RBX = 0x2b;\n                                        *(*0x20 + -0x80) = 0x41a785;\n                                        fcn.00433580();\n                                    }\n                                    *(*0x20 + -0x80) = 0x41a792;\n                                    fcn.0045e440(0x200);\n                                    goto code_r0x0041a792;\n                                }\ncode_r0x0041a5a8:\n                            }\n                        }\n                        iVar3 = iVar3 + 1;\n                    } while( true );\n                }\ncode_r0x0041a792:\n                uVar4 = 0x40;\n                *(*0x20 + -0x80) = 0x41a79f;\n                fcn.0045e440(0x40);\n            }\n            *(*0x20 + -0x80) = 0x41a7a7;\n            in_RAX = fcn.0045e420(uVar4);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + -8) = 0x41a7b7;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1891
    },
    "0041a7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041a7e0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (**(in_RAX + 0x30) == unaff_R14) {\n        return;\n    }\n    if ((0 < *(*(unaff_R14 + 0x30) + 0xd8)) || (*(*(unaff_R14 + 0x30) + 0xd0) != 0)) {\n        return;\n    }\n    bVar1 = false;\n    do {\n        while( true ) {\n            iVar3 = *0x598d40;\n            if (*0x598864 != '\\0') {\n                if (bVar1) {\n                    fcn.0044f960(0);\n                }\n                return;\n            }\n            iVar4 = -*(in_RAX + 0x180) * *0x598d80;\n            arg4 = -*(in_RAX + 0x180);\n            if (iVar4 < 0x10000) {\n                iVar4 = 0x10000;\n                arg4 = *0x4c9f78 * *0x598d88;\n            }\n            if (0 < *0x598d40) {\n                if (*0x598d40 < iVar4) {\n                    *(in_RAX + 0x180) = *0x598d40 * *0x598d88 + *(in_RAX + 0x180) + 1;\n                    arg4 = iVar3;\n                }\n                else {\n                    *(in_RAX + 0x180) = *(in_RAX + 0x180) + arg4;\n                    arg4 = iVar4;\n                }\n                LOCK();\n                *0x598d40 = *0x598d40 - arg4;\n                if (iVar4 == arg4) {\n                    if (bVar1) {\n                        fcn.0044f960(0);\n                    }\n                    return;\n                }\n            }\n            if ((*0x54a530 != '\\0') && (!bVar1)) {\n                fcn.0044f960(0);\n                bVar1 = true;\n            }\n            fcn.0045bc80();\n            iVar3 = *(in_RAX + 0x88);\n            iVar4 = in_RAX;\n            if (*0x5985b0 == 0) {\n                *(in_RAX + 0x88) = 0;\n            }\n            else {\n                iVar3 = fcn.0045e100(in_RAX, in_RAX + 0x88, 0, arg4);\n            }\n            if (iVar3 != 0) {\n                fcn.00416d40();\n                iVar4 = in_RAX;\n            }\n            if (-1 < *(iVar4 + 0x180)) goto code_r0x0041aa56;\n            if (*(iVar4 + 0xb1) == '\\0') break;\n            fcn.0045bc00();\n        }\n        cVar2 = fcn.0041af20();\n    } while (cVar2 == '\\0');\ncode_r0x0041aa56:\n    if (bVar1) {\n        fcn.0044f960(0);\n    }\n    return;\n}\n",
        "token_count": 785
    },
    "0041ab00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041ab00(ulong noname_0, uint64_t arg2, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int64_t iVar4;\n    double dVar5;\n    int64_t in_RAX;\n    ulong uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint32_t uVar10;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    double dVar12;\n    uint64_t uVar11;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar7 = in_RAX + 0x88;\n            if (*0x5985b0 == 0) {\n                *(in_RAX + 0x88) = 0;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x41ab3e;\n                in_RAX = fcn.0045e080(0, arg2, arg3, in_R9);\n            }\n            if (*0x59837c == 0) {\n                *(in_RAX + 0x180) = 0;\n                return;\n            }\n            *(*0x20 + -0x10) = iVar7;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x68) = 0x41ab72;\n            fcn.0045fdc0();\n            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n            iVar7 = *(*0x20 + 8);\n            iVar8 = *(*(iVar7 + 0x30) + 0xa0);\n            arg2 = *(*0x20 + -0x60);\n            uVar1 = *(iVar8 + 0x1220);\n            if (uVar1 >> 0x3d == 0) {\n                *(iVar8 + 0x1220) = arg2 & 0x1fffffffffffffff | 0x4000000000000000;\n            }\n            LOCK();\n            iVar2 = *0x545ac0 + -1;\n            uVar10 = *0x545ac0 - 1;\n            uVar11 = uVar10;\n            arg3 = *0x545ab0;\n            *0x545ac0 = iVar2;\n            if (*0x545ab0 != uVar10) {\n                *(*0x20 + -0x28) = uVar1 >> 0x3d;\n                *(*0x20 + -0x38) = arg2;\n                *(iVar7 + 0xb0) = 1;\n                *(*0x20 + -0x68) = 0x41ac0a;\n                fcn.00437a40(4);\n                *(*0x20 + -0x68) = 0x41ac27;\n                uVar6 = fcn.0041c020();\n                *(*0x20 + -0x30) = uVar6;\n                uVar6 = 2;\n                *(*0x20 + -0x68) = 0x41ac45;\n                fcn.00437a40(2);\n                dVar5 = *0x598d88;\n                dVar12 = *(*0x20 + -0x30) * *0x598d88;\n                uVar11 = *(*0x20 + 8);\n                *(uVar11 + 0x180) = dVar12 + *(uVar11 + 0x180) + 1;\n                LOCK();\n                iVar2 = *0x545ac0 + 1;\n                uVar10 = *0x545ac0 + 1;\n                arg2 = uVar10;\n                *0x545ac0 = iVar2;\n                if (uVar10 <= *0x545ab0) {\n                    if (*0x545ab0 == uVar10) {\n                        if (*0x545a20 == 0) {\n                            if (*0x545aa8 < *0x545aac) {\n                                bVar3 = true;\n                            }\n                            else {\n                                bVar3 = false;\n                            }\n                        }\n                        else {\n                            bVar3 = true;\n                        }\n                        if (!bVar3) {\n                            if (*0x5985b0 == 0) {\n                                *(uVar11 + 0x88) = uVar11;\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x41acec;\n                                fcn.0045e0e0(uVar6, arg2, arg3, in_R9);\n                            }\n                        }\n                    }\n                    *(*0x20 + -0x68) = 0x41acf2;\n                    fcn.0045fdc0();\n                    iVar7 = *(*(*(*0x20 + 8) + 0x30) + 0xa0);\n                    *(*0x20 + -0x18) = iVar7;\n                    iVar8 = *(*0x20 + -0x60);\n                    *(iVar7 + 0x1210) = *(iVar7 + 0x1210) + (iVar8 - *(*0x20 + -0x38));\n                    if (*(*0x20 + -0x28) == '\\0') {\n                        *(*0x20 + -0x20) = iVar8;\n                        *(*0x20 + -0x68) = 0x41ad56;\n                        fcn.004197e0(iVar8);\n                        iVar7 = *(*0x20 + -0x18);\n                        iVar8 = *(*0x20 + -0x20);\n                    }\n                    iVar4 = *0x598d48;\n                    if (5000 < *(iVar7 + 0x1210)) {\n                        LOCK();\n                        *0x598d48 = *0x598d48 + *(iVar7 + 0x1210);\n                        *(*0x20 + -0x68) = 0x41ad8c;\n                        fcn.004192c0(iVar4, iVar8);\n                        *(*(*0x20 + -0x18) + 0x1210) = 0;\n                    }\n                    return;\n                }\n                *(*0x20 + -0x44) = uVar10;\n                *(*0x20 + -0x3c) = *0x545ab0;\n                *(*0x20 + -0x68) = 0x41adb3;\n                fcn.00434ec0(dVar12, dVar5);\n                *(*0x20 + -0x68) = 0x41adc5;\n                fcn.004357c0();\n                *(*0x20 + -0x68) = 0x41adce;\n                fcn.004354c0();\n                *(*0x20 + -0x68) = 0x41addf;\n                fcn.004357c0();\n                *(*0x20 + -0x68) = 0x41ade8;\n                fcn.004354c0();\n                *(*0x20 + -0x68) = 0x41aded;\n                fcn.00435120();\n                *(*0x20 + -0x68) = 0x41adf2;\n                fcn.00434f40();\n                *(*0x20 + -0x68) = 0x41ae05;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x40) = uVar11;\n            *(*0x20 + -0x3c) = arg3;\n            *(*0x20 + -0x68) = 0x41ae13;\n            fcn.00434ec0();\n            *(*0x20 + -0x68) = 0x41ae25;\n            fcn.004357c0();\n            *(*0x20 + -0x68) = 0x41ae2e;\n            fcn.004354c0();\n            *(*0x20 + -0x68) = 0x41ae3f;\n            fcn.004357c0();\n            *(*0x20 + -0x68) = 0x41ae48;\n            fcn.004354c0();\n            *(*0x20 + -0x68) = 0x41ae4d;\n            fcn.00435120();\n            *(*0x20 + -0x68) = 0x41ae52;\n            fcn.00434f40();\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x68) = 0x41ae65;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + -8) = 0x41ae75;\n        fcn.00460800();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2121
    },
    "0041b060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041b060(void)\n\n{\n    double dVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (dVar1 = *0x598d88,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x545b50 == 0) {\n        LOCK();\n        iVar2 = *0x598d40;\n        *0x598d40 = *0x598d40 + in_RAX;\n        return iVar2;\n    }\n    fcn.0040a520();\n    iVar2 = dVar1 * in_RAX;\n    while( true ) {\n        iVar3 = *0x545b50;\n        if ((*0x545b50 == 0) || (iVar2 < 1)) goto code_r0x0041b189;\n        if ((*0x545b50 != 0) && (*0x545b50 = *(*0x545b50 + 0xa0),  *0x545b50 == 0)) {\n            *0x545b58 = 0;\n        }\n        iVar2 = *(iVar3 + 0x180) + iVar2;\n        if (iVar2 < 0) break;\n        *(iVar3 + 0x180) = 0;\n        fcn.004372e0(0);\n    }\n    *(iVar3 + 0x180) = iVar2;\n    *(iVar3 + 0xa0) = 0;\n    iVar2 = iVar3;\n    if (*0x545b58 != 0) {\n        *(*0x545b58 + 0xa0) = iVar3;\n        iVar2 = *0x545b50;\n    }\n    *0x545b50 = iVar2;\n    *0x545b58 = iVar3;\n    iVar2 = 0;\ncode_r0x0041b189:\n    iVar3 = iVar2;\n    if (0 < iVar2) {\n        LOCK();\n        iVar3 = *0x598d40;\n        *0x598d40 = *0x598d40 + *0x598d80 * iVar2;\n    }\n    iVar2 = fcn.0040a740(iVar3);\n    return iVar2;\n}\n",
        "token_count": 540
    },
    "0041b200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0041b200(void)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    ulong *puVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    char cVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 + -0x180 && *0x20 + -0x180 != *(unaff_R14 + 0x18)) {\n            puVar10 = *0x20 + -0x200;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) >> 0xc & 1) != 0) {\n                uVar7 = *(in_RAX + 0x90) & 0xffffefff;\n                if (uVar7 < 3) {\n                    if (uVar7 == 1) goto code_r0x0041b26e;\n                }\n                else {\n                    if (4 < uVar7) {\n                        if (uVar7 == 6) {\n                            return 0;\n                        }\ncode_r0x0041b423:\n                        *(*0x20 + -0x1a8) = *(in_RAX + 0x90);\n                        puVar8 = *(in_RAX + 0x98);\n                        *(*0x20 + -0x188) = puVar8;\n                        *(*0x20 + -0x208) = 0x41b43e;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x208) = 0x41b44f;\n                        fcn.004357c0();\n                        *(*0x20 + -0x208) = 0x41b45c;\n                        fcn.00435740();\n                        *(*0x20 + -0x208) = 0x41b46d;\n                        fcn.004357c0();\n                        *(*0x20 + -0x208) = 0x41b477;\n                        fcn.004354c0();\n                        *(*0x20 + -0x208) = 0x41b488;\n                        fcn.004357c0();\n                        *(*0x20 + -0x208) = 0x41b493;\n                        fcn.004354c0();\n                        *(*0x20 + -0x208) = 0x41b498;\n                        fcn.00435120();\n                        *(*0x20 + -0x208) = 0x41b49d;\n                        fcn.00434f40();\n                        *(*0x20 + -0x208) = 0x41b4ae;\n                        fcn.00433580();\n                        while( true ) {\n                            *(*0x20 + -0x30) = *(*(*0x20 + -0x30) + 0x28);\ncode_r0x0041b4c2:\n                            if (*(*0x20 + -0x30) == 0) break;\n                            if (*(*(*0x20 + -0x30) + 0x18) != 0) {\n                                *(*0x20 + -0x208) = 0x41b4ff;\n                                fcn.0041c260(0x52d260);\n                                puVar8 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x30) + 0x28) != 0) {\n                                *(*0x20 + -0x208) = 0x41b53b;\n                                fcn.0041c260(0x52d260);\n                                puVar8 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x30) + 1) != '\\0') {\n                                *(*0x20 + -0x208) = 0x41b57f;\n                                fcn.0041c260(0x52d260);\n                                puVar8 = *(*0x20 + 8);\n                            }\n                        }\n                        if (*(puVar8 + 8) != 0) {\n                            *(*0x20 + -0x208) = 0x41b5a5;\n                            fcn.00420620(0);\n                        }\n                        iVar6 = 0;\n                        *(*0x20 + -0x208) = 0x41b5bd;\n                        uVar4 = fcn.00420a40(*(*0x20 + -0x40));\n                        *(*0x20 + -0x38) = uVar4;\n                        do {\n                            do {\n                                *(*0x20 + -0x208) = 0x41b5d2;\n                                iVar5 = fcn.00420760();\n                                if (iVar5 == 0) {\n                                    while (iVar6 = *(*0x20 + -0x50),  iVar6 != 0) {\n                                        *(*0x20 + -0x50) = *(iVar6 + 0x18);\n                                        *(iVar6 + 0x10) = 0;\n                                        *(*0x20 + -0x208) = 0x41b630;\n                                        fcn.00423260();\n                                    }\n                                    if (((*(*0x20 + -0x68) == 0) && (*(*0x20 + -0x58) == 0)) && (*(*0x20 + -0x60) == 0))\n                                    {\n                                        return *(*0x20 + -0x198);\n                                    }\n                                    iVar6 = 0x19;\n                                    *(*0x20 + -0x208) = 0x41b685;\n                                    iVar5 = fcn.00433580();\n                                }\n                                else {\n                                    iVar5 = iVar5 - *(*0x20 + -0x80);\n                                    puVar8 = *(*0x20 + -0x38);\n                                }\n                                while (cVar9 = iVar6,  puVar8 != NULL) {\n                                    if (iVar5 < *puVar8) {\n                                        puVar8 = *(puVar8 + 4);\n                                    }\n                                    else {\n                                        if (iVar5 < *puVar8 + puVar8[1]) goto code_r0x0041b5f1;\n                                        puVar8 = *(puVar8 + 6);\n                                    }\n                                }\n                                puVar8 = NULL;\ncode_r0x0041b5f1:\n                            } while ((puVar8 == NULL) || (uVar2 = *(puVar8 + 2),  uVar2 == 0));\n                            *(puVar8 + 2) = 0;\n                            for (iVar6 = 0x532f00; iVar6 != 0; iVar6 = *(iVar6 + 0x230)) {\n                                if ((*(iVar6 + 0x140) < uVar2 || *(iVar6 + 0x140) == uVar2) &&\n                                   (uVar2 <= *(iVar6 + 0x110) && *(iVar6 + 0x110) != uVar2)) goto code_r0x0041b6d6;\n                            }\n                            iVar6 = 0;\ncode_r0x0041b6d6:\n                            iVar6 = *(uVar2 + 0xc) + *(iVar6 + 0x138);\n                            if (*(uVar2 + 8) < 0) {\n                                *(*0x20 + -0x1ad) = cVar9;\n                                *(*0x20 + -0x1a0) = puVar8;\n                                *(*0x20 + -0x28) = uVar2;\n                                *(*0x20 + -0x208) = 0x41b70d;\n                                iVar5 = fcn.004134e0();\n                                iVar6 = *(iVar5 + 0x18);\n                                puVar8 = *(*0x20 + -0x1a0);\n                                cVar9 = *(*0x20 + -0x1ad);\n                            }\n                            else {\n                                iVar5 = 0;\n                            }\n                            *(*0x20 + -400) = iVar5;\n                            puVar8 = *puVar8 + *(*0x20 + -0x80);\n                            if (cVar9 == '\\0') {\n                                *(*0x20 + -0x208) = 0x41b79c;\n                                fcn.0041c260(iVar6);\n                            }\n                            else {\n                                *(*0x20 + -0x208) = 0x41b768;\n                                fcn.0041c6e0(iVar6);\n                            }\n                            iVar6 = *(*0x20 + -400);\n                            if (iVar6 != 0) {\n                                *(*0x20 + -0x208) = 0x41b7bc;\n                                fcn.00425300(2);\n                            }\n                        } while( true );\n                    }\ncode_r0x0041b26e:\n                    if (unaff_R14 != in_RAX) {\n                        iVar6 = *(in_RAX + 0x70);\n                        if (iVar6 == 0) {\n                            iVar6 = *(in_RAX + 0x38);\n                        }\n                        iVar5 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        iVar6 = *(in_RAX + 8) - iVar6;\n                        piVar1 = iVar5 + 0x22b0;\n                        *piVar1 = *piVar1 + iVar6;\n                        piVar1 = iVar5 + 0x22b8;\n                        *piVar1 = *piVar1 + 1;\n                        if (*(in_RAX + 0x70) == 0) {\n                            if (*(in_RAX + 0xb4) == '\\0') {\n                                bVar11 = *(in_RAX + 0xb9) == '\\0';\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + -0x198) = iVar6;\n                        if (bVar11) {\n                            *(*0x20 + -0x208) = 0x41b2f2;\n                            fcn.00448420();\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(in_RAX + 0xb3) = 1;\n                        }\n                        *(*0x20 + -0x210) = unaff_RBP;\n                        *(*0x20 + -0x208) = 0x41b32f;\n                        puVar3 = fcn.0045e674();\n                        uVar4 = puVar3[1];\n                        *(*0x20 + -0x80) = *puVar3;\n                        *(*0x20 + -0x78) = uVar4;\n                        if (puVar3[10] != 0) {\n                            *(*0x20 + -0x208) = 0x41b374;\n                            fcn.0041c260(0x52d260);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(*0x20 + -0x20) = in_XMM15;\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x20) = 0x41b940;\n                        *(*0x20 + -0x18) = *0x20 + -0x180;\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x200) = 0;\n                        *(*0x20 + -0x208) = 0x41b3f2;\n                        fcn.004514c0(0, *0x20 + -0x180, 0, 0x7fffffff);\n                        puVar8 = *(*0x20 + 8);\n                        *(*0x20 + -0x30) = *(puVar8 + 10);\n                        goto code_r0x0041b4c2;\n                    }\n                    *(*0x20 + -0x208) = 0x41b7d6;\n                    iVar6 = unaff_R14;\n                    in_RAX = fcn.00433580();\n                    uVar7 = iVar6;\n                }\n                if (uVar7 != 2) goto code_r0x0041b423;\n                *(*0x20 + -0x1ac) = *(in_RAX + 0x90);\n                *(*0x20 + -0x188) = *(in_RAX + 0x98);\n                *(*0x20 + -0x208) = 0x41b7fb;\n                fcn.00434ec0();\n                *(*0x20 + -0x208) = 0x41b80c;\n                fcn.004357c0();\n                *(*0x20 + -0x208) = 0x41b819;\n                fcn.00435740();\n                *(*0x20 + -0x208) = 0x41b82a;\n                fcn.004357c0();\n                *(*0x20 + -0x208) = 0x41b834;\n                fcn.004354c0();\n                *(*0x20 + -0x208) = 0x41b845;\n                fcn.004357c0();\n                *(*0x20 + -0x208) = 0x41b850;\n                fcn.004354c0();\n                *(*0x20 + -0x208) = 0x41b855;\n                fcn.00435120();\n                *(*0x20 + -0x208) = 0x41b85a;\n                fcn.00434f40();\n                *(*0x20 + -0x208) = 0x41b86b;\n                in_RAX = fcn.00433580();\n            }\n            *(*0x20 + -0x1a4) = *(in_RAX + 0x90);\n            *(*0x20 + -0x188) = *(in_RAX + 0x98);\n            *(*0x20 + -0x208) = 0x41b887;\n            fcn.00434ec0();\n            *(*0x20 + -0x208) = 0x41b898;\n            fcn.004357c0();\n            *(*0x20 + -0x208) = 0x41b8a5;\n            fcn.00435740();\n            *(*0x20 + -0x208) = 0x41b8b6;\n            fcn.004357c0();\n            *(*0x20 + -0x208) = 0x41b8c5;\n            fcn.004354c0();\n            *(*0x20 + -0x208) = 0x41b8d6;\n            fcn.004357c0();\n            *(*0x20 + -0x208) = 0x41b8e5;\n            fcn.00435620();\n            *(*0x20 + -0x208) = 0x41b8ea;\n            fcn.00435120();\n            *(*0x20 + -0x208) = 0x41b8ef;\n            fcn.00434f40();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x208) = 0x41b905;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x41b915;\n        fcn.00460800();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3606
    },
    "0041bc00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041bc00(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint32_t uVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5985b4 != '\\0') break;\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x60) = 0x41bfe5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x41bff5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n    iVar5 = *(*(unaff_R14 + 0x30) + 0x90);\n    iVar4 = in_RAX[3];\n    if ((unaff_RBX & 0xc) == 0) {\n        iVar9 = 0x7fffffffffffffff;\n        uVar8 = 0;\n    }\n    else {\n        if ((unaff_RBX >> 2 & 1) == 0) {\n            uVar8 = 0;\n            if ((unaff_RBX & 8) != 0) {\n                uVar8 = 0x4b2a18;\n            }\n        }\n        else {\n            uVar8 = 0x4b2a20;\n        }\n        iVar9 = iVar4 + 100000;\n    }\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x18) = iVar5;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x10) = uVar8;\n    if (*0x545aac <= *0x545aa8) goto code_r0x0041bccf;\n    *(*0x20 + -0x40) = iVar4;\n    *(*0x20 + -0x38) = iVar9;\n    *(*0x20 + -0x41) = (unaff_RBX >> 1 & 1) != 0;\ncode_r0x0041bf42:\n    if (*(iVar5 + 0xb1) == '\\0') {\n        bVar10 = false;\n    }\n    else if ((unaff_RBX & 1) == 0) {\n        bVar10 = *0x5460e8 != '\\0';\n    }\n    else {\n        bVar10 = true;\n    }\n    if (bVar10) {\ncode_r0x0041bccf:\n        do {\n            uVar7 = unaff_RBX;\n            if (*(iVar5 + 0xb1) == '\\0') {\n                bVar10 = false;\n            }\n            else if ((unaff_RBX & 1) == 0) {\n                bVar10 = *0x5460e8 != '\\0';\n            }\n            else {\n                bVar10 = true;\n            }\n            if (bVar10) {\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041becd;\n            }\n            *(*0x20 + -0x20) = iVar4;\n            *(*0x20 + -0x38) = iVar9;\n            if (*0x545a20 == 0) {\n                *(*0x20 + -0x60) = 0x41bd25;\n                fcn.00422e60();\n                in_RAX = *(*0x20 + 8);\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            iVar4 = *in_RAX;\n            if ((iVar4 == 0) || (iVar1 = *(iVar4 + 0x10),  iVar1 == 0)) {\n                iVar4 = 0;\n            }\n            else {\n                *(iVar4 + 0x10) = iVar1 - 1U;\n                if (0xfc < iVar1 - 1U) goto code_r0x0041bf0f;\n                iVar4 = *(iVar4 + 0x10 + iVar1 * 8);\n            }\n            if (iVar4 == 0) {\n                *(*0x20 + -0x60) = 0x41bd85;\n                iVar4 = fcn.00422c80(0, iVar5, iVar9);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x60) = 0x41bd93;\n                    fcn.0042cf00();\n                    *(*0x20 + -0x60) = 0x41bd9d;\n                    iVar4 = fcn.00422c80();\n                }\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            if (iVar4 == 0) {\n                iVar4 = *(*0x20 + -0x20);\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041becd;\n            }\n            *(*0x20 + -0x60) = 0x41bdd4;\n            fcn.0041c400(iVar4, iVar5, iVar9);\n            iVar5 = *(*0x20 + 8);\n            if (*(iVar5 + 0x18) < 2000) {\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n                iVar4 = *(*0x20 + -0x20);\n            }\n            else {\n                LOCK();\n                *0x598d28 = *0x598d28 + *(iVar5 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                if ((unaff_RBX >> 1 & 1) == 0) {\n                    iVar4 = *(*0x20 + -0x20);\n                }\n                else {\n                    *(*0x20 + -0x60) = 0x41be1d;\n                    fcn.0041b060();\n                    iVar5 = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar4 = 0;\n                }\n                iVar9 = *(iVar5 + 0x18);\n                *(iVar5 + 0x18) = 0;\n                iVar9 = *(*0x20 + -0x38) - iVar9;\n                if (iVar9 < 1) {\n                    if (*(*0x20 + -0x10) == NULL) {\n                        cVar3 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x28) = iVar9;\n                        *(*0x20 + -0x30) = iVar4;\n                        pcVar2 = **(*0x20 + -0x10);\n                        *(*0x20 + -0x60) = 0x41be62;\n                        cVar3 = (*pcVar2)();\n                        iVar5 = *(*0x20 + 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        iVar9 = *(*0x20 + -0x28);\n                        iVar4 = *(*0x20 + -0x30);\n                    }\n                    uVar7 = unaff_RBX;\n                    if (cVar3 != '\\0') goto code_r0x0041becd;\n                    iVar9 = iVar9 + 100000;\n                }\n            }\n            iVar5 = *(*0x20 + -0x18);\n            in_RAX = *(*0x20 + 8);\n        } while( true );\n    }\n    LOCK();\n    uVar7 = *0x545aa8 + 1;\n    bVar10 = *0x545aac <= *0x545aa8;\n    *0x545aa8 = uVar7;\n    if (bVar10) goto code_r0x0041bccf;\n    *(*0x20 + -0x60) = 0x41bf9f;\n    fcn.00419d80();\n    if (*(*0x20 + -0x10) == NULL) {\n        cVar3 = '\\0';\n    }\n    else {\n        pcVar2 = **(*0x20 + -0x10);\n        *(*0x20 + -0x60) = 0x41bfb2;\n        cVar3 = (*pcVar2)();\n    }\n    if (cVar3 != '\\0') {\n        iVar5 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + -0x40);\ncode_r0x0041becd:\n        if (0 < *(iVar5 + 0x18)) {\n            LOCK();\n            *0x598d28 = *0x598d28 + *(iVar5 + 0x18);\n            if ((uVar7 >> 1 & 1) != 0) {\n                iVar5 = *(iVar5 + 0x18);\n                *(*0x20 + -0x60) = 0x41bef8;\n                fcn.0041b060(iVar5 - iVar4);\n                iVar5 = *(*0x20 + 8);\n            }\n            *(iVar5 + 0x18) = 0;\n        }\n        return;\n    }\n    goto code_r0x0041bf1c;\ncode_r0x0041bf0f:\n    *(*0x20 + -0x60) = 0x41bf1c;\n    fcn.0045e420(0xfd);\ncode_r0x0041bf1c:\n    in_RAX = *(*0x20 + 8);\n    unaff_RBX = *(*0x20 + 0x10);\n    iVar5 = *(*0x20 + -0x18);\n    iVar4 = *(*0x20 + -0x40);\n    iVar9 = *(*0x20 + -0x38);\n    goto code_r0x0041bf42;\n}\n",
        "token_count": 2440
    },
    "0041c020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041c020(void)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \ncode_r0x0041c020:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar4 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x5985b4 != '\\0') {\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar5 = -in_RAX[3];\n            iVar3 = *(*(unaff_R14 + 0x30) + 0x90);\n            *(*0x20 + -0x10) = iVar3;\n            do {\n                if ((*(iVar3 + 0xb1) != '\\0' || *0x598864 != '\\0') || (unaff_RBX <= in_RAX[3] + iVar5))\n                goto code_r0x0041c1fa;\n                *(*0x20 + -0x18) = iVar5;\n                if (*0x545a20 == 0) {\n                    *(*0x20 + -0x30) = 0x41c0c5;\n                    fcn.00422e60();\n                    in_RAX = *(*0x20 + 8);\n                    iVar5 = *(*0x20 + -0x18);\n                }\n                iVar3 = *in_RAX;\n                if ((iVar3 == 0) || (iVar1 = *(iVar3 + 0x10),  iVar1 == 0)) {\n                    iVar3 = 0;\n                }\n                else {\n                    *(iVar3 + 0x10) = iVar1 - 1U;\n                    if (0xfc < iVar1 - 1U) goto code_r0x0041c20c;\n                    iVar3 = *(iVar3 + 0x10 + iVar1 * 8);\n                }\n                if (iVar3 == 0) {\n                    *(*0x20 + -0x30) = 0x41c125;\n                    iVar3 = fcn.00422c80();\n                    if (iVar3 == 0) {\n                        *(*0x20 + -0x30) = 0x41c133;\n                        fcn.0042cf00();\n                        *(*0x20 + -0x30) = 0x41c13d;\n                        iVar3 = fcn.00422c80();\n                    }\n                    iVar5 = *(*0x20 + -0x18);\n                    in_RAX = *(*0x20 + 8);\n                }\n                if (iVar3 == 0) {\n                    if (*0x545aac <= *0x545aa8) {\ncode_r0x0041c1fa:\n                        return iVar5 + in_RAX[3];\n                    }\n                    LOCK();\n                    uVar2 = *0x545aa8 + 1;\n                    bVar6 = *0x545aac <= *0x545aa8;\n                    *0x545aa8 = uVar2;\n                    if (bVar6) goto code_r0x0041c1fa;\n                    *(*0x20 + -0x30) = 0x41c192;\n                    iVar5 = fcn.00419d80(0);\n                    iVar5 = *(*0x20 + -0x18) + iVar5;\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x41c1b2;\n                    fcn.0041c400();\n                    in_RAX = *(*0x20 + 8);\n                    if (in_RAX[3] < 2000) {\n                        iVar5 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        LOCK();\n                        *0x598d28 = *0x598d28 + in_RAX[3];\n                        iVar5 = in_RAX[3];\n                        in_RAX[3] = 0;\n                        iVar5 = *(*0x20 + -0x18) + iVar5;\n                    }\n                }\n                iVar3 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + 0x10);\n            } while( true );\n        }\n        goto code_r0x0041c219;\n    }\n    goto code_r0x0041c22b;\ncode_r0x0041c20c:\n    *(*0x20 + -0x30) = 0x41c219;\n    fcn.0045e420(0xfd);\ncode_r0x0041c219:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x30) = 0x41c22a;\n    in_RAX = fcn.00433580();\ncode_r0x0041c22b:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + -8) = 0x41c23a;\n    fcn.00460800();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    *0x20 = puVar4;\n    goto code_r0x0041c020;\n}\n",
        "token_count": 1288
    },
    "0041c9c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041c9c0(ulong arg1, ulong noname_1, uint8_t *arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    char cVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    uint8_t uVar5;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t unaff_RDI;\n    uint8_t *puVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX & 7) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                iVar1 = *(unaff_RDI + 0x50);\n                puVar7 = arg3 >> 3;\n                if (*0x598350 == '\\0') {\n                    uVar5 = 1 << (arg3 & 7);\n                    if (((*0x59880c < 1) || (arg3 <= *(unaff_RDI + 0x98) && *(unaff_RDI + 0x98) != arg3)) ||\n                       (arg3 = puVar7,  (uVar5 & puVar7[*(unaff_RDI + 0x48)]) != 0)) {\n                        if ((uVar5 & puVar7[iVar1]) != 0) {\n                            return;\n                        }\n                        LOCK();\n                        puVar7[iVar1] = puVar7[iVar1] | uVar5;\n                        uVar2 = *(unaff_RDI + 0x18);\n                        arg3 = uVar2 + 0x800000000000;\n                        if (arg3 >> 0x2a < 0x40) {\n                            iVar1 = *(*((arg3 >> 0x2a) * 8 + 0x56a790) + (arg3 >> 0x16 & 0xfffff) * 8);\n                            uVar4 = uVar2 >> 0x10 & 0x3f;\n                            arg3 = iVar1 + uVar4 + 0x11440;\n                            uVar5 = 1 << (uVar2 >> 0xd & 7);\n                            if ((uVar5 & *(iVar1 + 0x11440 + uVar4)) == 0) {\n                                LOCK();\n                                *arg3 = *arg3 | uVar5;\n                            }\n                            if ((*(unaff_RDI + 0x62) & 1) != 0) {\n                                unaff_RSI[2] = unaff_RSI[2] + *(unaff_RDI + 0x68);\n                                return;\n                            }\n                            goto code_r0x0041cb31;\n                        }\n                        goto code_r0x0041cb86;\n                    }\n                }\n                else {\n                    *(*0x20 + 0x28) = unaff_RSI;\n                    *(*0x20 + -0x50) = 0x41cb1f;\n                    cVar3 = fcn.004145e0(arg1, iVar1, arg3);\n                    if (cVar3 != '\\0') {\n                        return;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RSI = *(*0x20 + 0x28);\ncode_r0x0041cb31:\n                    iVar1 = *unaff_RSI;\n                    if (iVar1 == 0) {\ncode_r0x0041cb56:\n                        *(*0x20 + -0x50) = 0x41cb65;\n                        fcn.00422960();\n                        return;\n                    }\n                    uVar2 = *(iVar1 + 0x10);\n                    if (uVar2 == 0xfd) goto code_r0x0041cb56;\n                    if (uVar2 < 0xfd) {\n                        *(iVar1 + 0x18 + uVar2 * 8) = in_RAX;\n                        *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x41cb86;\n                    fcn.0045e420(0xfd);\ncode_r0x0041cb86:\n                    *(*0x20 + -0x50) = 0x41cb93;\n                    fcn.0045e440(0x40);\n                }\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x41cba5;\n                fcn.00434ec0();\n                *(*0x20 + -0x50) = 0x41cbb6;\n                fcn.004357c0();\n                *(*0x20 + -0x50) = 0x41cbc5;\n                fcn.00435620();\n                *(*0x20 + -0x50) = 0x41cbd6;\n                fcn.004357c0();\n                *(*0x20 + -0x50) = 0x41cbe5;\n                fcn.00435620();\n                *(*0x20 + -0x50) = 0x41cbf6;\n                fcn.004357c0();\n                *(*0x20 + -0x50) = 0x41cc05;\n                fcn.00435620();\n                *(*0x20 + -0x50) = 0x41cc16;\n                fcn.004357c0();\n                *(*0x20 + -0x50) = 0x41cc1b;\n                fcn.00434f40();\n                *(*0x20 + -0x50) = 0x41cc36;\n                fcn.0041cce0(*(*0x20 + -0x18));\n                arg1 = *(*0x20 + 8);\n                unaff_RDI = -1;\n                *(*0x20 + -0x50) = 0x41cc53;\n                fcn.0041cce0(arg1);\n                *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n                *(*0x20 + -0x50) = 0x41cc6f;\n                fcn.00433580();\n            }\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x50) = 0x41cc85;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + -8) = 0x41cca9;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        arg3 = *(puVar6 + 0x30);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1763
    },
    "0041cce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041cce0(uint64_t arg1)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar2 = arg1 + 0x800000000000 >> 0x2a;\n    if (uVar2 < 0x40) {\n        iVar3 = *(uVar2 * 8 + 0x56a790);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(iVar3 + (arg1 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar3 == 0) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = *(iVar3 + 0x10400 + (arg1 >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00434f40();\n    if (iVar3 == 0) {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00434f40();\n        return;\n    }\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.004357c0();\n    fcn.004354c0();\n    fcn.004357c0();\n    fcn.004354c0();\n    fcn.004357c0();\n    fcn.00434f40();\n    if (*(iVar3 + 99) < *0x53e2d8) {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00435120();\n        fcn.00434f40();\n    }\n    else {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.00434f40();\n    }\n    uVar2 = *(iVar3 + 0x68);\n    if ((*(iVar3 + 99) == '\\x02') && (uVar2 == 0)) {\n        uVar2 = unaff_RDI + 8;\n    }\n    bVar1 = false;\n    for (uVar4 = 0; uVar4 < uVar2; uVar4 = uVar4 + 8) {\n        if ((uVar4 < 0x400) || ((unaff_RDI - 0x80 < uVar4 && (uVar4 < unaff_RDI + 0x80)))) {\n            if (bVar1) {\n                fcn.00434ec0();\n                fcn.004357c0();\n                fcn.00434f40();\n            }\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.004357c0();\n            fcn.004357c0();\n            fcn.004354c0();\n            fcn.004357c0();\n            fcn.00435620();\n            fcn.00434f40();\n            if (unaff_RDI == uVar4) {\n                fcn.00434ec0();\n                fcn.004357c0();\n                fcn.00434f40();\n            }\n            fcn.00434ec0();\n            fcn.00435120();\n            fcn.00434f40();\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00434f40();\n    }\n    return;\n}\n",
        "token_count": 959
    },
    "0041d120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d120(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t *puVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    if (*0x598350 == '\\0') {\n        uVar7 = (unaff_RBX - *(in_RAX + 0x18)) * *(in_RAX + 0x5c);\n        puVar6 = *(in_RAX + 0x50) + (uVar7 >> 0x23);\n        LOCK();\n        *puVar6 = *puVar6 | 1 << (uVar7 >> 0x20 & 7);\n        uVar7 = *(in_RAX + 0x18);\n        uVar5 = uVar7 + 0x800000000000 >> 0x2a;\n        if (uVar5 < 0x40) {\n            iVar2 = *(*(uVar5 * 8 + 0x56a790) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            uVar5 = uVar7 >> 0x10 & 0x3f;\n            puVar6 = iVar2 + uVar5 + 0x11440;\n            uVar4 = 1 << (uVar7 >> 0xd & 7);\n            if ((uVar4 & *(iVar2 + 0x11440 + uVar5)) == 0) {\n                LOCK();\n                *puVar6 = *puVar6 | uVar4;\n            }\n            piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x1248;\n            *piVar1 = *piVar1 + arg1;\n            return;\n        }\n        fcn.0045e440(0x40);\n    }\n    fcn.00433580();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 495
    },
    "0041d3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d3c0(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    ulong noname_0;\n    int64_t iVar3;\n    ulong arg2;\n    ulong unaff_RBX;\n    int64_t iVar4;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    double dVar5;\n    double dVar6;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    *(in_RAX + 0x88) = 0;\n    *(in_RAX + 0x90) = 0;\n    *(in_RAX + 0x98) = 0;\n    *(in_RAX + 0xa0) = 0;\n    *(in_RAX + 0xa8) = 0;\n    *(in_RAX + 0xb0) = 0;\n    *(in_RAX + 0xb8) = 0;\n    *(in_RAX + 0xc0) = 0;\n    *(in_RAX + 200) = unaff_RBX;\n    *(in_RAX + 0x40) = *(in_RAX + 0x50);\n    dVar5 = *0x4c9f08 * arg1;\n    iVar3 = *0x4c9f18 + dVar5;\n    dVar6 = iVar3 / dVar5 - *0x4c9f28;\n    if ((dVar6 < str.333333._0_8_) || (*0x4c9f10 < dVar6)) {\n        if (dVar5 < iVar3) {\n            iVar3 = iVar3 + -1;\n        }\n        *(in_RAX + 0xf0) = (dVar5 - iVar3) / arg1;\n    }\n    else {\n        *(in_RAX + 0xf0) = 0;\n    }\n    if (0 < *0x598818) {\n        *(in_RAX + 0xf0) = 0;\n        iVar3 = arg1;\n    }\n    iVar2 = *0x5455b8;\n    iVar1 = *0x5455b0;\n    for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n        *(*(iVar1 + iVar4 * 8) + 0x1210) = in_XMM15;\n    }\n    if (unaff_RDI == 1) {\n        if (iVar3 < 1) {\n            fcn.0041ea00(iVar3, arg1);\n        }\n        else {\n            fcn.0041ea00(iVar3, arg1);\n        }\n    }\n    else {\n        fcn.0041ea00(iVar3, arg1 - iVar3);\n    }\n    iVar1 = *(in_RAX + 0xd0);\n    *(in_RAX + 0xd0) = iVar3;\n    fcn.0041d6e0(iVar1);\n    if (0 < *0x598810) {\n        fcn.0041e300();\n        noname_0 = *(in_RAX + 0xe0);\n        arg2 = noname_0;\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004351c0(noname_0, arg2);\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.004351c0(noname_0, arg2);\n        fcn.00435120();\n        fcn.00434f40();\n    }\n    return;\n}\n",
        "token_count": 922
    },
    "0041d8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d8c0(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong noname_0;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    double dVar5;\n    double dVar6;\n    double dVar7;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    *0x598ce8 = fcn.0041e300();\n    iVar2 = unaff_RBX - *(in_RAX + 200);\n    dVar6 = *0x4c9f08;\n    if (0 < iVar2) {\n        dVar6 = *0x4c9f08 + *(in_RAX + 0xa8) / (iVar2 * arg1);\n    }\n    if (*(in_RAX + 0x50) <= *(in_RAX + 0x40)) {\n        return;\n    }\n    if (iVar2 < 1) {\n        dVar5 = 0.0;\n    }\n    else {\n        dVar5 = *(in_RAX + 0xc0) / (iVar2 * arg1);\n    }\n    uVar4 = *(in_RAX + 0x50) - *(in_RAX + 0x40);\n    if (uVar4 < 0) {\n        dVar7 = uVar4 >> 1 | uVar4 & 1;\n        dVar7 = dVar7 + dVar7;\n    }\n    else {\n        dVar7 = uVar4;\n    }\n    dVar5 = ((dVar5 + dVar6) * dVar7) / ((*0x4c9f28 - dVar6) * (*(in_RAX + 0x88) + *(in_RAX + 0x90) + *(in_RAX + 0x98)))\n    ;\n    *(in_RAX + 0x20) = (*(in_RAX + 0x28) + dVar5) * *0x4c9f18;\n    *(in_RAX + 0x28) = dVar5;\n    if (0 < *0x598810) {\n        fcn.00434ec0();\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004355c0(dVar6 * *0x4c9f68);\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.00434f40();\n        uVar3 = *(in_RAX + 0x78);\n        fcn.00434ec0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.004354c0(uVar3);\n        fcn.004357c0();\n        fcn.00434f40();\n        uVar3 = *(in_RAX + 0x40);\n        noname_0 = *(in_RAX + 0x48);\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.004351c0(noname_0, uVar3);\n        fcn.004357c0();\n        fcn.00434f40();\n        fcn.00434ec0();\n        fcn.00435120();\n        fcn.00434f40();\n        cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n        *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n        if (cVar1 == '\\x01') {\n            fcn.0040a740();\n        }\n    }\n    return;\n}\n",
        "token_count": 967
    },
    "0041dcc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041dcc0(void)\n\n{\n    int32_t *piVar1;\n    uchar auVar2 [16];\n    char cVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0xd0) < 1) {\n                return;\n            }\n            if (*0x598388 < 2) {\n                return;\n            }\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) ||\n               (piVar1 = *(*(unaff_R14 + 0x30) + 0xa0),  piVar1 == NULL)) {\n                return;\n            }\n            iVar5 = *piVar1;\n            *(*0x20 + -0x14) = iVar5;\n            iVar4 = 0;\n            while( true ) {\n                iVar6 = *0x598388;\n                if (4 < iVar4) {\n                    return;\n                }\n                uVar8 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar2 = ZEXT816(uVar8) * ZEXT816(uVar8 ^ 0xe7037ed1a0b428db);\n                *(*(unaff_R14 + 0x30) + 0xf0) = uVar8;\n                iVar6 = (SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) * (iVar6 - 1) >> 0x20;\n                if (iVar5 <= iVar6) {\n                    iVar6 = iVar6 + 1;\n                }\n                if (*0x5455b8 <= iVar6) break;\n                if (*(*(*0x5455b0 + iVar6 * 8) + 4) == 1) {\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x30) = 0x41ddd0;\n                    cVar3 = fcn.00440ec0();\n                    if (cVar3 != '\\0') {\n                        return;\n                    }\n                    iVar4 = *(*0x20 + -0x10);\n                    iVar5 = *(*0x20 + -0x14);\n                }\n                iVar4 = iVar4 + 1;\n            }\n            *(*0x20 + -0x30) = 0x41de09;\n            in_RAX = fcn.0045e420(*0x5455b8);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x41de14;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 774
    },
    "0041de20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041df22)\n\nulong fcn.0041de20(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t *piVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x59837c != 0) break;\n            unaff_RBX = 0x36;\n            *(*0x20 + -0x38) = 0x41e0aa;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x41e0bf;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x10) = unaff_RBX;\n    if (arg1 == 0) {\n        *(*0x20 + -0x38) = 0x41de5b;\n        fcn.0045fdc0();\n        arg1 = *(*0x20 + -0x30);\n        in_RAX = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    }\n    *(*0x20 + -0x20) = arg1;\n    if (10000000 < arg1 - *0x5988a0) {\n        *(*0x20 + -0x38) = 0x41dea5;\n        fcn.004192c0();\n        in_RAX = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n        arg1 = *(*0x20 + -0x20);\n    }\n    if (((unaff_RBX == 0) || (*(unaff_RBX + 0x1238) == 0)) ||\n       ((*(*(unaff_RBX + 0x1238) + 0x10) == 0 && (*(*(unaff_RBX + 0x1240) + 0x10) == 0)))) {\n        if (*0x545a20 == 0) {\n            if (*0x545aa8 < *0x545aac) {\n                bVar4 = true;\n            }\n            else {\n                bVar4 = false;\n            }\n        }\n        else {\n            bVar4 = true;\n        }\n    }\n    else {\n        bVar4 = true;\n    }\n    if (!bVar4) {\n        return 0;\n    }\n    if (*0x598448 == 0) {\n        piVar5 = NULL;\n    }\n    else {\n        piVar5 = (*0x598448 >> 0x13) << 3;\n        *0x598448 = *piVar5;\n        LOCK();\n    }\n    if (piVar5 == NULL) {\n        return 0;\n    }\n    do {\n        uVar2 = *(in_RAX + 0xd0);\n        if (uVar2 < 1) goto code_r0x0041dfb1;\n        *(*0x20 + -0x18) = uVar2;\n        LOCK();\n        puVar1 = in_RAX + 0xd0;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * (*puVar1 ^ uVar2 - 1);\n    } while (uVar2 != uVar3);\n    uVar2 = *(*0x20 + -0x18);\ncode_r0x0041dfb1:\n    if (uVar2 < 1) {\n        if (*(in_RAX + 0xf0) == 0.0) {\n            *(*0x20 + -0x38) = 0x41e035;\n            fcn.0040a2a0();\n            return 0;\n        }\n        iVar7 = arg1 - *(in_RAX + 200);\n        if ((0 < iVar7) && (*(in_RAX + 0xf0) < *(unaff_RBX + 0x1218) / iVar7)) {\n            *(*0x20 + -0x38) = 0x41e00a;\n            fcn.0040a2a0(in_RAX, piVar5, arg1, 0x598448);\n            return 0;\n        }\n        *(unaff_RBX + 0x1228) = 2;\n    }\n    else {\n        *(unaff_RBX + 0x1228) = 1;\n    }\n    *(*0x20 + -0x10) = piVar5[2];\n    *(*0x20 + -0x38) = 0x41e06b;\n    fcn.00437a40(1);\n    if (*0x54a530 != '\\0') {\n        *(*0x20 + -0x38) = 0x41e085;\n        fcn.00451040();\n    }\n    return *(*0x20 + -0x10);\n}\n",
        "token_count": 1346
    },
    "0041e0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e0e0(void)\n\n{\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack16 [8];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    *(in_RAX + 0x80) = unaff_RBX;\n    *(in_RAX + 0x50) = unaff_RBX;\n    *(in_RAX + 0x58) = *(in_RAX + 0x88);\n    *(in_RAX + 0x60) = *(in_RAX + 0x88);\n    *(in_RAX + 0x68) = *(in_RAX + 0x90);\n    *(in_RAX + 0x40) = 0xffffffffffffffff;\n    if (*0x54a530 != '\\0') {\n        fcn.0044f960(auStack16);\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "0041e240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e240(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (unaff_RBX != 0) {\n        LOCK();\n        iVar2 = *0x598cf0 + unaff_RBX;\n        iVar1 = unaff_RBX + *0x598cf0;\n        *0x598cf0 = iVar2;\n        if (*0x54a530 != '\\0') {\n            fcn.004512e0(arg1, iVar1);\n        }\n    }\n    if (*0x59837c == 0) {\n        if (arg1 != 0) {\n            LOCK();\n            *0x598cf8 = *0x598cf8 + arg1;\n        }\n    }\n    else {\n        fcn.0041d6e0();\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "0041ed40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041ed40(ulong noname_0, int64_t arg2, ulong arg3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t noname_0_00;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 8) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                if (*0x5985b0 == 0) {\n                    *(in_RAX + 8) = unaff_R14;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x41ed89;\n                    fcn.0045e080(unaff_R14, arg2, arg3, in_R9);\n                }\n                *(*0x20 + -0x20) = 0x41ed95;\n                iVar1 = fcn.0040c6e0();\n                if (*0x5985b0 == 0) {\n                    noname_0_00 = *(*0x20 + 8);\n                    *(noname_0_00 + 0x18) = iVar1;\n                }\n                else {\n                    arg2 = *(*0x20 + 8);\n                    *(*0x20 + -0x20) = 0x41edbd;\n                    iVar1 = fcn.0045df80(arg2 + 0x18, arg2, arg3, in_R9);\n                    noname_0_00 = arg2;\n                }\n                *(iVar1 + 0x20) = 0x49ffa0;\n                if (*0x5985b0 == 0) {\n                    *(iVar1 + 0x28) = noname_0_00;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x41ede9;\n                    fcn.0045e080(noname_0_00, arg2, arg3, in_R9);\n                }\n                if (*0x5985b0 == 0) {\n                    *(*(noname_0_00 + 0x18) + 0x18) = 0x4b2800;\n                    iVar1 = 0x4b2800;\n                }\n                else {\n                    arg2 = 0x4b2800;\n                    *(*0x20 + -0x20) = 0x41ee1e;\n                    fcn.0045e0a0(noname_0_00, 0x4b2800, arg3, in_R9);\n                    iVar1 = noname_0_00;\n                }\n                *(noname_0_00 + 0x38) = 0x3fd599999999999a;\n                *(noname_0_00 + 0x40) = 0x41486a0000000000;\n                *(noname_0_00 + 0x48) = 0x41cdcd6500000000;\n                *(noname_0_00 + 0x50) = 0x3f50624dd2f1a9fc;\n                *(noname_0_00 + 0x58) = 0x408f400000000000;\n                *(noname_0_00 + 0x60) = in_XMM15;\n                *(noname_0_00 + 0x30) = *0x4c9ef8;\n                if (*(noname_0_00 + 0x88) == 0) {\n                    if (*0x5985b0 == 0) {\n                        *(noname_0_00 + 0x88) = 0x4b2808;\n                    }\n                    else {\n                        arg2 = 0x4b2808;\n                        *(*0x20 + -0x20) = 0x41eeb5;\n                        fcn.0045e0a0(noname_0_00, 0x4b2808, arg3, in_R9);\n                        iVar1 = noname_0_00;\n                    }\n                }\n                if (*(noname_0_00 + 0x90) == 0) {\n                    if (*0x5985b0 == 0) {\n                        *(noname_0_00 + 0x90) = 0x4b2810;\n                    }\n                    else {\n                        arg2 = 0x4b2810;\n                        *(*0x20 + -0x20) = 0x41eef4;\n                        fcn.0045e0a0(noname_0_00, 0x4b2810, arg3, in_R9);\n                        iVar1 = noname_0_00;\n                    }\n                }\n                if (*(noname_0_00 + 0x98) == 0) {\n                    if (*0x5985b0 == 0) {\n                        *(noname_0_00 + 0x98) = 0x4b2818;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x41ef2e;\n                        fcn.0045df80(iVar1, arg2, arg3, in_R9);\n                    }\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = 0x41ef49;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x41ef54;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1367
    },
    "0041f000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f000(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    if (*(in_RAX + 0x10) != '\\0') {\n        *(in_RAX + 0x20) = 0;\n        *(in_RAX + 0x10) = 0;\n        *(*(in_RAX + 8) + 0xa0) = 0;\n        fcn.0043c020();\n    }\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 178
    },
    "0041f7a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f7a0(void)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = 0x41f7c6;\n            fcn.00434ec0();\n            unaff_RBX = *0x598da8;\n            if (*0x598d98 + *0x598da8 != 0) {\n                *(*0x20 + -0x18) = *0x598da0;\n                *(*0x20 + -0x10) = (*0x598d98 * 100) / (*0x598d98 + *0x598da8);\n                *(*0x20 + -0x30) = 0x41f809;\n                fcn.00434ec0();\n                *(*0x20 + -0x30) = 0x41f81a;\n                fcn.004357c0();\n                *(*0x20 + -0x30) = 0x41f828;\n                fcn.004354c0();\n                *(*0x20 + -0x30) = 0x41f839;\n                fcn.004357c0();\n                *(*0x20 + -0x30) = 0x41f847;\n                fcn.004354c0();\n                *(*0x20 + -0x30) = 0x41f858;\n                fcn.004357c0();\n                *(*0x20 + -0x30) = 0x41f865;\n                fcn.004354c0();\n                *(*0x20 + -0x30) = 0x41f876;\n                fcn.004357c0();\n                *(*0x20 + -0x30) = 0x41f87b;\n                fcn.00434f40();\n                if (*(*0x20 + 0x10) == '\\0') {\n                    if (*0x545858 != '\\0') {\n                        *(*0x20 + -0x30) = 0x41f892;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x30) = 0x41f8a5;\n                        fcn.004357c0();\n                        *(*0x20 + -0x30) = 0x41f8aa;\n                        fcn.00434f40();\n                        *0x545858 = '\\0';\n                    }\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x41f8b8;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x30) = 0x41f8c9;\n                    fcn.004357c0();\n                    *(*0x20 + -0x30) = 0x41f8ce;\n                    fcn.00434f40();\n                }\n                *(*0x20 + -0x30) = 0x41f8d3;\n                fcn.00434ec0();\n                *(*0x20 + -0x30) = 0x41f8d8;\n                fcn.00435120();\n                *(*0x20 + -0x30) = 0x41f8dd;\n                fcn.00434f40();\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n                *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n                if (cVar1 == '\\x01') {\n                    *(*0x20 + -0x30) = 0x41f905;\n                    fcn.0040a740();\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x41f914;\n            in_RAX = fcn.00431c00();\n        }\n        *(puVar2 + 8) = in_RAX;\n        puVar2[0x10] = unaff_RBX;\n        *(puVar2 + -8) = 0x41f925;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = puVar2[0x10];\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1101
    },
    "0041f940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0041f940(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    uint8_t *puVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = arg1;\n            uVar4 = *0x5984a8 >> 0xd;\n            if (uVar4 == 0) {\n                uVar4 = 1;\n            }\n            *(*0x20 + -0x50) = uVar4;\n            uVar7 = unaff_RDI >> 0xd;\n            uVar4 = unaff_RDI & 0x1fff;\n            unaff_RDI = uVar7;\n            if (uVar4 != 0) {\n                unaff_RDI = uVar7 + 1;\n            }\n            *(*0x20 + -0x48) = unaff_RDI;\n            *(*0x20 + -0x80) = 0x41f9b7;\n            fcn.0040a520();\n            iVar2 = *(*0x20 + 8);\n            arg1 = *(iVar2 + 0x68);\n            unaff_RBX = *(iVar2 + 0x60);\n            uVar4 = *(*0x20 + 0x10);\n            if (uVar4 < arg1) {\n                uVar7 = *(unaff_RBX + uVar4 * 8);\n                if (uVar7 < 0) {\n                    uVar7 = 0x200000;\n                }\n                else {\n                    uVar7 = uVar7 >> 0x15 & 0x1fffff;\n                }\n                if (uVar7 < *(*0x20 + -0x50)) {\ncode_r0x0041fa5b:\n                    arg1 = *(iVar2 + 0x100c8);\n                    unaff_RBX = *(iVar2 + 0x100c0);\n                    if (uVar4 >> 3 < arg1) {\n                        puVar5 = unaff_RBX + (uVar4 >> 3);\n                        LOCK();\n                        *puVar5 = *puVar5 & ~(1 << (uVar4 & 7));\n                        *(*0x20 + -0x80) = 0x41fa9f;\n                        fcn.0040a740();\n                        return 0;\n                    }\ncode_r0x0041fc3e:\n                    *(*0x20 + -0x80) = 0x41fc46;\n                    fcn.0045e440(arg1);\n                }\n                else {\n                    arg1 = uVar4;\n                    if (uVar4 >> 0xd < 0x2000) {\n                        *(*0x20 + -0x18) = uVar4 >> 0xd;\n                        arg1 = (uVar4 & 0x1fff) << 7;\n                        *(*0x20 + -0x20) = arg1;\n                        iVar2 = *(*0x20 + -0x10);\n                        unaff_RDI = *(*0x20 + -0x48);\n                        *(*0x20 + -0x80) = 0x41fa45;\n                        iVar1 = fcn.0041fe60(*(*0x20 + -0x50));\n                        if (iVar2 == 0) {\n                            uVar4 = *(*0x20 + 0x10);\n                            iVar2 = *(*0x20 + 8);\n                            goto code_r0x0041fa5b;\n                        }\n                        *(*0x20 + -0x40) = iVar1;\n                        *(*0x20 + -0x58) = iVar2;\n                        unaff_RDI = 0xffff800000000000;\n                        *(*0x20 + -0x38) = *(*0x20 + 0x10) * 0x400000 + iVar1 * 0x2000 + -0x800000000000;\n                        *(*0x20 + -0x80) = 0x41faed;\n                        iVar2 = fcn.00427200(iVar2);\n                        if (iVar2 == 0) {\n                            *(*0x20 + -0x80) = 0x41fb0b;\n                            fcn.0040a740();\n                            if (*(*(*0x20 + 8) + 0x10108) == '\\0') {\n                                *(*0x20 + -0x80) = 0x41fb3f;\n                                fcn.00414880();\n                                *(*0x20 + -0x28) = *(*0x20 + -0x58) << 0xd;\n                                *(*0x20 + -0x80) = 0x41fb59;\n                                fcn.0042cc40();\n                                *(*0x20 + -0x30) = -*(*0x20 + -0x28);\n                                *(*0x20 + -0x80) = 0x41fb72;\n                                fcn.0042cc40();\n                                *(*0x20 + -0x80) = 0x41fb7e;\n                                piVar3 = fcn.0042cd00();\n                                LOCK();\n                                *piVar3 = *piVar3 + *(*0x20 + -0x30);\n                                LOCK();\n                                piVar3 = piVar3 + 1;\n                                iVar2 = *piVar3;\n                                *piVar3 = *piVar3 + *(*0x20 + -0x28);\n                                *(*0x20 + -0x80) = 0x41fb9f;\n                                fcn.0042cde0(iVar2);\n                            }\n                            *(*0x20 + -0x80) = 0x41fbb4;\n                            fcn.0040a520();\n                            *(*0x20 + -0x80) = 0x41fbd0;\n                            fcn.004286e0(*(*0x20 + -0x58));\n                            *(*0x20 + -0x80) = 0x41fc05;\n                            fcn.00429cc0(*(*0x20 + -0x58));\n                            *(*0x20 + -0x80) = 0x41fc1a;\n                            fcn.0040a740();\n                            return *(*0x20 + -0x58) << 0xd;\n                        }\n                        unaff_RBX = 0xf;\n                        *(*0x20 + -0x80) = 0x41fc3e;\n                        fcn.00433580();\n                        goto code_r0x0041fc3e;\n                    }\n                }\n                *(*0x20 + -0x80) = 0x41fc50;\n                fcn.0045e440(0x2000);\n            }\n            *(*0x20 + -0x80) = 0x41fc58;\n            in_RAX = fcn.0045e440(arg1);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x41fc72;\n        fcn.00460800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1855
    },
    "0041fca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0041fca0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 5) {\n                if (unaff_RBX == 1) {\n                    return in_RAX;\n                }\n                if (unaff_RBX == 2) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x5555555555555555) + 0x5555555555555555 | 0x5555555555555555);\n                    goto code_r0x0041fde6;\n                }\n                if (unaff_RBX == 4) {\n                    uVar2 = ~((in_RAX & 0x7777777777777777) + 0x7777777777777777 | in_RAX | 0x7777777777777777);\ncode_r0x0041fde6:\n                    return ~(uVar2 - (-(unaff_RBX - 1 < 0x40) & uVar2 >> (unaff_RBX - 1 & 0x3f)) | uVar2);\n                }\n            }\n            else if (unaff_RBX < 0x11) {\n                if (unaff_RBX == 8) {\n                    uVar2 = ~((in_RAX & 0x7f7f7f7f7f7f7f7f) + 0x7f7f7f7f7f7f7f7f | in_RAX | 0x7f7f7f7f7f7f7f7f);\n                    goto code_r0x0041fde6;\n                }\n                if (unaff_RBX == 0x10) {\n                    uVar2 = ~((in_RAX & 0x7fff7fff7fff7fff) + 0x7fff7fff7fff7fff | in_RAX | 0x7fff7fff7fff7fff);\n                    goto code_r0x0041fde6;\n                }\n            }\n            else {\n                if (unaff_RBX == 0x20) {\n                    uVar2 = ~((in_RAX & 0x7fffffff7fffffff) + 0x7fffffff7fffffff | in_RAX | 0x7fffffff7fffffff);\n                    goto code_r0x0041fde6;\n                }\n                if (unaff_RBX == 0x40) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x7fffffffffffffff) + 0x7fffffffffffffff | 0x7fffffffffffffff);\n                    goto code_r0x0041fde6;\n                }\n            }\n            unaff_RBX = 0xb;\n            *(*0x20 + -0x20) = 0x41fe25;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x41fe35;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 865
    },
    "00420760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00420760(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00420760:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x18) = in_RAX + 0x118;\n        iVar3 = in_RAX + 0x128;\n        *(*0x20 + -0x20) = iVar3;\n        *(*0x20 + -0x10) = iVar3;\n        iVar2 = 0;\n        do {\n            if (1 < iVar2) {\n                iVar2 = *(in_RAX + 0x120);\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x50) = 0x420859;\n                    fcn.00423260(iVar2, iVar3);\n                    *(*(*0x20 + 8) + 0x120) = 0;\n                }\n                return 0;\n            }\n            piVar5 = *(*0x20 + iVar2 * 8 + -0x18);\n            iVar6 = *piVar5;\n            if (iVar6 != 0) {\n                if (*(iVar6 + 0x10) != 0) goto code_r0x0042081b;\n                if (*(in_RAX + 0x120) != 0) {\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x28) = piVar5;\n                    *(*0x20 + -0x38) = iVar6;\n                    *(*0x20 + -0x50) = 0x4207ef;\n                    fcn.00423260(iVar2, iVar3);\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    iVar3 = *(*0x20 + -0x20);\n                    piVar5 = *(*0x20 + -0x28);\n                    iVar6 = *(*0x20 + -0x38);\n                }\n                *(in_RAX + 0x120) = iVar6;\n                iVar6 = *(iVar6 + 0x18);\n                *piVar5 = iVar6;\n                if (iVar6 != 0) goto code_r0x0042081b;\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x00420886;\ncode_r0x0042081b:\n    iVar3 = *(iVar6 + 0x10);\n    uVar1 = iVar3 - 1;\n    *(iVar6 + 0x10) = uVar1;\n    if (uVar1 < 0xfc) {\n        return *(iVar6 + 0x18 + iVar3 * 8);\n    }\n    *(*0x20 + -0x50) = 0x420885;\n    in_RAX = fcn.0045e420(0xfc);\ncode_r0x00420886:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x420890;\n    fcn.0045bdc0();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x00420760;\n}\n",
        "token_count": 902
    },
    "00420b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420c96)\n// WARNING: Removing unreachable block (ram,0x00420c63)\n\nint64_t fcn.00420b60(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x10118);\n            *(*0x20 + -0x10) = uVar2;\n            uVar3 = *0x545780;\ncode_r0x00420ba0:\n            if (0x10f < uVar3) {\n                if (*0x545780 != 0xffffffff) {\n                    LOCK();\n                    *0x545780 = 0xffffffff;\n                }\n                return 0;\n            }\n            if (0x87 < (uVar3 >> 1 & 0xff)) goto code_r0x00420ce5;\n            *(*0x20 + -0xc) = uVar3;\n            if ((uVar3 & 1) == 0) {\n                if (1 < -((uVar2 >> 1 & 1) - 1)) goto code_r0x00420cd9;\n                *(*0x20 + -0x28) = 0x420c09;\n                iVar1 = fcn.0042c820();\ncode_r0x00420c40:\n                if (iVar1 != 0) {\n                    if (*0x545780 < *(*0x20 + -0xc)) {\n                        LOCK();\n                        *0x545780 = *(*0x20 + -0xc);\n                    }\n                    return iVar1;\n                }\n                uVar3 = *(*0x20 + -0xc) + 1;\n                uVar2 = *(*0x20 + -0x10);\n                goto code_r0x00420ba0;\n            }\n            if (-((uVar2 >> 1 & 1) - 1) < 2) {\n                *(*0x20 + -0x28) = 0x420c37;\n                iVar1 = fcn.0042c820();\n                goto code_r0x00420c40;\n            }\n            *(*0x20 + -0x28) = 0x420cd9;\n            fcn.0045e420(2);\ncode_r0x00420cd9:\n            *(*0x20 + -0x28) = 0x420ce5;\n            fcn.0045e420(2);\ncode_r0x00420ce5:\n            *(*0x20 + -0x28) = 0x420cf2;\n            in_RAX = fcn.0045e420(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x420cfd;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 796
    },
    "00420d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00420d20(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_RAX;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    ulong noname_0;\n    ulong arg2;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x56a738 == unaff_EBX) {\n                while( true ) {\n                    uVar1 = *in_RAX;\n                    uVar2 = uVar1;\n                    uVar3 = (uVar1 & 0x7fffffff) - 1;\n                    param_1 = uVar3;\n                    if (0x7fffffff < uVar3) break;\n                    LOCK();\n                    if (uVar1 == *in_RAX) {\n                        *in_RAX = uVar1 - 1;\n                        if (uVar1 == 0x80000000) {\n                            if (0 < *0x598810) {\n                                *(*0x20 + -0x20) = *0x598cf0;\n                                *(*0x20 + -0x28) = *0x56a760;\n                                *(*0x20 + -0x10) = *0x56a770;\n                                *(*0x20 + -0x18) = *0x56a778;\n                                *(*0x20 + -0x40) = 0x420dd1;\n                                arg2 = *0x56a770;\n                                fcn.00434ec0();\n                                *(*0x20 + -0x40) = 0x420de5;\n                                fcn.004357c0();\n                                *(*0x20 + -0x40) = 0x420df3;\n                                fcn.004354c0();\n                                *(*0x20 + -0x40) = 0x420e05;\n                                fcn.004357c0();\n                                noname_0 = *(*0x20 + -0x10);\n                                *(*0x20 + -0x40) = 0x420e1b;\n                                fcn.004354c0();\n                                *(*0x20 + -0x40) = 0x420e2c;\n                                fcn.004357c0();\n                                *(*0x20 + -0x40) = 0x420e36;\n                                fcn.004354c0();\n                                *(*0x20 + -0x40) = 0x420e47;\n                                fcn.004357c0();\n                                *(*0x20 + -0x40) = 0x420e52;\n                                fcn.004351c0(noname_0, arg2);\n                                *(*0x20 + -0x40) = 0x420e65;\n                                fcn.004357c0();\n                                *(*0x20 + -0x40) = 0x420e6a;\n                                uVar2 = fcn.00434f40();\n                            }\n                            return uVar2;\n                        }\n                        return uVar2;\n                    }\n                }\n                *(*0x20 + -0x40) = 0x420e8f;\n                fcn.00433580();\n            }\n            unaff_EBX = 0x31;\n            *(*0x20 + -0x40) = 0x420ea5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        puVar4[0x14] = param_1;\n        *(puVar4 + -8) = 0x420eb8;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x14];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 979
    },
    "00420ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00420ee0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                *(*0x20 + -0x40) = 0x420f05;\n                iVar2 = fcn.00421220();\n                if (iVar2 == -1) break;\n                *0x545778 = *0x545778 + 1;\n            }\n            if ((*0x54577c & 0x7fffffff) == 0) {\n                *(*0x20 + -0x24) = *0x56a738;\n                iVar2 = 0;\n                uVar1 = *0x56a738;\n                while( true ) {\n                    if (0x87 < iVar2) {\n                        *(*0x20 + -0x40) = 0x420fb4;\n                        fcn.0041f000();\n                        *(*0x20 + -0x40) = 0x420fb9;\n                        fcn.004266e0();\n                        return;\n                    }\n                    uVar3 = -((uVar1 >> 1 & 1) - 1);\n                    if (1 < uVar3) break;\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x10) = iVar2 * 0xc0;\n                    *(*0x20 + -0x18) = uVar3 * 5;\n                    *(*0x20 + -0x40) = 0x420f5a;\n                    fcn.0042c960(0x56aa30);\n                    *(*0x20 + -0x40) = 0x420f7b;\n                    fcn.0042c960(*(*0x20 + -0x10) + 0x56aa88);\n                    iVar2 = *(*0x20 + -0x20) + 1;\n                    uVar1 = *(*0x20 + -0x24);\n                }\n                *(*0x20 + -0x40) = 0x420fcd;\n                fcn.0045e420(2);\n            }\n            *(*0x20 + -0x40) = 0x420fde;\n            fcn.00433580();\n        }\n        *(puVar4 + -8) = 0x420fe5;\n        fcn.0045bdc0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 662
    },
    "00421000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421000(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar3 = unaff_R14;\n    if (*0x5985b0 != 0) {\n        fcn.0045e080(unaff_R14, arg2, arg3, in_R9);\n        iVar3 = *0x545768;\n    }\n    *0x545768 = iVar3;\n    fcn.0040a520();\n    *0x545770 = 1;\n    fcn.00404ba0();\n    fcn.004360a0();\n    do {\n        iVar3 = 0;\n        while (iVar2 = fcn.00421220(),  iVar2 != -1) {\n            *0x545774 = *0x545774 + 1;\n            iVar3 = iVar3 + 1;\n            if (((SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar3) >> 0x40, 0) + iVar3 >> 3) - (iVar3 >> 0x3f)) * 10\n                - iVar3 == 0) {\n                fcn.00436040();\n            }\n        }\n        while (cVar1 = fcn.00423580(),  cVar1 != '\\0') {\n            fcn.00436040();\n        }\n        fcn.0040a520();\n        if (*0x54577c == -0x80000000) {\n            *0x545770 = 1;\n            fcn.004360a0();\n        }\n        else {\n            fcn.0040a740();\n        }\n    } while( true );\n}\n",
        "token_count": 449
    },
    "00421180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00421180(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 1) != '\\0') {\n                iVar1 = *in_RAX + -2;\n                if (*(unaff_RBX + 0x58) != iVar1) {\n                    return 0;\n                }\n                LOCK();\n                if (iVar1 != *(unaff_RBX + 0x58)) {\n                    return 0;\n                }\n                *(unaff_RBX + 0x58) = *in_RAX + -1;\n                return unaff_RBX;\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x20) = 0x4211f6;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x421206;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 415
    },
    "00421220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00421268)\n// WARNING: Removing unreachable block (ram,0x0042135e)\n\nulong fcn.00421220(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            uVar5 = *0x54577c & 0x80000000;\n            if (uVar5 == 0) {\n                *0x54577c = *0x54577c + 1;\n                LOCK();\n            }\n            *(*0x20 + -0x28) = *0x56a738;\n            *(*0x20 + -0x24) = uVar5 == 0;\n            if (uVar5 != 0) {\n                *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                return 0xffffffffffffffff;\n            }\ncode_r0x004212b4:\n            do {\n                *(*0x20 + -0x50) = 0x4212c5;\n                iVar6 = fcn.00420b60();\n                if (iVar6 == 0) {\n                    uVar5 = *0x54577c & 0x80000000;\n                    if (uVar5 == 0) {\n                        *0x54577c = *0x54577c | 0x80000000;\n                        LOCK();\n                    }\n                    bVar9 = uVar5 == 0;\n                    iVar6 = -1;\ncode_r0x00421374:\n                    *(*0x20 + -0x31) = bVar9;\n                    *(*0x20 + -0x18) = iVar6;\n                    *(*0x20 + -0x50) = 0x421392;\n                    fcn.00420d20(*(*0x20 + -0x24));\n                    if (*(*0x20 + -0x31) != '\\0') {\n                        if (0 < *0x598828) {\n                            *(*0x20 + -0x48) = 0x4b2ac8;\n                            *(*0x20 + -0x50) = 0x4213b4;\n                            fcn.0045bc80();\n                        }\n                        *0x545800 = 1;\n                    }\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                    return *(*0x20 + -0x18);\n                }\n                if (*(iVar6 + 99) == '\\x01') {\n                    *(*0x20 + -0x50) = 0x4212f7;\n                    iVar7 = fcn.00421180();\n                    *(*0x20 + -0x20) = iVar7;\n                    if (iVar6 != '\\0') {\n                        *(*0x20 + -0x18) = *(iVar7 + 0x20);\n                        *(*0x20 + -0x50) = 0x421319;\n                        cVar4 = fcn.00421600();\n                        if (cVar4 == '\\0') {\n                            iVar6 = 0;\n                        }\n                        else {\n                            iVar6 = *(*0x20 + -0x18);\n                            LOCK();\n                            *0x56a788 = *0x56a788 + iVar6;\n                        }\n                        bVar9 = false;\n                        goto code_r0x00421374;\n                    }\n                    goto code_r0x004212b4;\n                }\n                iVar2 = *(iVar6 + 0x58);\n                iVar3 = *(*0x20 + -0x28);\n            } while ((iVar3 == iVar2) || (iVar2 == iVar3 + 3));\n            *(*0x20 + -0x32) = *(iVar6 + 99);\n            *(*0x20 + -0x2c) = iVar2;\n            *(*0x20 + -0x30) = iVar3;\n            *(*0x20 + -0x50) = 0x421405;\n            fcn.00434ec0();\n            *(*0x20 + -0x50) = 0x421416;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x421425;\n            fcn.004354c0();\n            *(*0x20 + -0x50) = 0x421436;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x42143f;\n            fcn.004354c0();\n            *(*0x20 + -0x50) = 0x421450;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x421459;\n            fcn.004354c0();\n            *(*0x20 + -0x50) = 0x42145e;\n            fcn.00435120();\n            *(*0x20 + -0x50) = 0x421465;\n            fcn.00434f40();\n            *(*0x20 + -0x50) = 0x421476;\n            fcn.00433580();\n        }\n        *(puVar8 + -8) = 0x42147c;\n        fcn.0045bdc0();\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1431
    },
    "004214a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004214dc)\n\nvoid fcn.004214a0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30);\n            if (((*(piVar1 + 0x1b) != 0) || (*(piVar1 + 0x18) != 0)) || (*piVar1 == unaff_R14)) {\n                uVar3 = *0x54577c & 0x80000000;\n                if (uVar3 == 0) {\n                    *0x54577c = *0x54577c + 1;\n                    LOCK();\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = *0x56a738;\n                *(*0x20 + -0x1c) = uVar3 == 0;\n                if (uVar3 == 0) {\n                    *(*0x20 + -0x38) = 0x42153d;\n                    uVar2 = fcn.00421180();\n                    *(*0x20 + -0x18) = uVar2;\n                    if (in_RAX != '\\0') {\n                        *(*0x20 + -0x38) = 0x42156e;\n                        fcn.00421600();\n                        *(*0x20 + -0x38) = 0x421585;\n                        fcn.00420d20(*(*0x20 + -0x1c));\n                        return;\n                    }\n                    *(*0x20 + -0x38) = 0x42155b;\n                    fcn.00420d20();\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                while( true ) {\n                    if ((*(in_RAX + 0x58) == *(*0x20 + -0x20)) || (*(in_RAX + 0x58) == *(*0x20 + -0x20) + 3)) break;\n                    *(*0x20 + -0x30) = 0x4b2ad0;\n                    *(*0x20 + -0x38) = 0x42159f;\n                    fcn.0045bc80();\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                return;\n            }\n            *(*0x20 + -0x38) = 0x4215e6;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4215f1;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 764
    },
    "004226e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004226e0(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    double extraout_XMM0_Qa;\n    double dVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x56a778 == 0.0) {\n        return;\n    }\n    if (*0x54a530 != '\\0') {\n        fcn.00450b60();\n    }\n    do {\n        iVar1 = *0x56a768;\n        uVar2 = in_RAX;\n        if (*0x56a770 < *0x598cf0) {\n            uVar2 = (*0x598cf0 - *0x56a770) + in_RAX;\n        }\n        if (uVar2 < 0) {\n            dVar5 = uVar2 >> 1 | uVar2 & 1;\n            dVar5 = dVar5 + dVar5;\n        }\n        else {\n            dVar5 = uVar2;\n        }\n        dVar5 = *0x56a778 * dVar5;\n        iVar3 = dVar5;\n        do {\n            if (iVar3 - unaff_RBX <= *0x56a760 - iVar1) {\ncode_r0x00422810:\n                if (*0x54a530 != '\\0') {\n                    fcn.00450c60();\n                }\n                return;\n            }\n            iVar4 = fcn.00421220(dVar5, 0);\n            if (iVar4 == -1) {\n                *0x56a778 = 0.0;\n                goto code_r0x00422810;\n            }\n            dVar5 = extraout_XMM0_Qa;\n        } while (*0x56a768 == iVar1);\n    } while( true );\n}\n",
        "token_count": 472
    },
    "00422960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00422960(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar1 = *in_RAX;\n            if (iVar1 == 0) {\n                *(*0x20 + -0x28) = 0x4229f5;\n                fcn.00422900();\n                iVar2 = **(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                bVar4 = false;\n            }\n            else if (*(iVar1 + 0x10) == 0xfd) {\n                iVar2 = in_RAX[1];\n                *in_RAX = iVar2;\n                in_RAX[1] = iVar1;\n                bVar4 = *(iVar2 + 0x10) == 0xfd;\n                if (bVar4) {\n                    *(*0x20 + -0x10) = 0xfd;\n                    *(*0x20 + -0x28) = 0x4229b9;\n                    fcn.004232c0();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x28) = 0x4229c7;\n                    iVar2 = fcn.00422fe0();\n                    **(*0x20 + 8) = iVar2;\n                    bVar4 = *(*0x20 + -0x10) == 0xfd;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n            }\n            else {\n                bVar4 = false;\n                iVar2 = iVar1;\n            }\n            if (*(iVar2 + 0x10) < 0xfd) {\n                *(iVar2 + 0x18 + *(iVar2 + 0x10) * 8) = unaff_RBX;\n                *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                if ((bVar4) && (*0x598384 == 1)) {\n                    *(*0x20 + -0x28) = 0x422a33;\n                    fcn.0041dcc0();\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x422a47;\n            in_RAX = fcn.0045e420(0xfd);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x422a57;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 790
    },
    "00422a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00422a80(uint64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char cVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x58) = 0x422ac6;\n                fcn.00422900();\n                iVar4 = **(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n            }\n            cVar6 = '\\0';\n            while( true ) {\n                if (arg1 == 0) {\n                    if ((cVar6 != '\\0') && (*0x598384 == 1)) {\n                        *(*0x20 + -0x58) = 0x422bc5;\n                        fcn.0041dcc0();\n                    }\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1;\n                while (uVar2 = *(iVar4 + 0x10),  uVar2 == 0xfd) {\n                    *(*0x20 + -0x58) = 0x422bd7;\n                    fcn.004232c0();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x58) = 0x422be5;\n                    iVar3 = fcn.00422fe0();\n                    piVar1 = *(*0x20 + 8);\n                    iVar4 = piVar1[1];\n                    *piVar1 = iVar4;\n                    piVar1[1] = iVar3;\n                    arg1 = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    cVar6 = '\\x01';\n                }\n                if (0xfd < uVar2) goto code_r0x00422c26;\n                iVar3 = uVar2 - 0xfd;\n                uVar7 = -iVar3;\n                if (SBORROW8(arg1, -iVar3) != arg1 + iVar3 < 0) {\n                    uVar7 = arg1;\n                }\n                if (unaff_RBX != (uVar2 << 3 & iVar3 >> 0x3f) + 0x18 + iVar4) {\n                    *(*0x20 + -0x30) = iVar4;\n                    *(*0x20 + -0x28) = uVar7;\n                    *(*0x20 + -0x31) = cVar6;\n                    *(*0x20 + -0x58) = 0x422b77;\n                    fcn.0045eda0(uVar7 << 3);\n                    arg1 = *(*0x20 + -0x20);\n                    iVar4 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    cVar6 = *(*0x20 + -0x31);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    uVar7 = *(*0x20 + -0x28);\n                }\n                *(iVar4 + 0x10) = *(iVar4 + 0x10) + uVar7;\n                if (arg1 < uVar7) break;\n                unaff_RDI = unaff_RDI - uVar7;\n                arg1 = arg1 - uVar7;\n                unaff_RBX = unaff_RBX + (-unaff_RDI >> 0x3f & uVar7 << 3);\n            }\n            *(*0x20 + -0x58) = 0x422c26;\n            fcn.0045e4e0(arg1);\ncode_r0x00422c26:\n            arg1 = 0xfd;\n            *(*0x20 + -0x58) = 0x422c33;\n            in_RAX = fcn.0045e4e0(0xfd);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x422c4d;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1376
    },
    "00422c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00422c80(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = *in_RAX;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x30) = 0x422caa;\n                fcn.00422900();\n                in_RAX = *(*0x20 + 8);\n                iVar3 = *in_RAX;\n            }\n            if (*(iVar3 + 0x10) == 0) {\n                iVar3 = in_RAX[1];\n                iVar2 = *in_RAX;\n                *in_RAX = iVar3;\n                in_RAX[1] = iVar2;\n                if (*(iVar3 + 0x10) == 0) {\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x30) = 0x422cdb;\n                    iVar3 = fcn.00423320();\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x30) = 0x422cf4;\n                    fcn.00423260();\n                    iVar3 = *(*0x20 + -0x18);\n                    **(*0x20 + 8) = iVar3;\n                }\n            }\n            iVar2 = *(iVar3 + 0x10);\n            uVar1 = iVar2 - 1;\n            *(iVar3 + 0x10) = uVar1;\n            if (uVar1 < 0xfd) {\n                return *(iVar3 + 0x10 + iVar2 * 8);\n            }\n            *(*0x20 + -0x30) = 0x422d45;\n            in_RAX = fcn.0045e420(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x422d50;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 628
    },
    "00422d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00422d60(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*in_RAX != 0) {\n        if (*(*in_RAX + 0x10) == 0) {\n            fcn.00423260();\n        }\n        else {\n            fcn.004232c0();\n            *(in_RAX + 4) = 1;\n        }\n        *in_RAX = 0;\n        if (*(in_RAX[1] + 0x10) == 0) {\n            fcn.00423260();\n        }\n        else {\n            fcn.004232c0();\n            *(in_RAX + 4) = 1;\n        }\n        in_RAX[1] = 0;\n    }\n    if (in_RAX[2] != 0) {\n        LOCK();\n        *0x545aa0 = *0x545aa0 + in_RAX[2];\n        in_RAX[2] = 0;\n    }\n    iVar1 = *0x598d28;\n    iVar2 = in_RAX[3];\n    if (iVar2 != 0) {\n        LOCK();\n        *0x598d28 = *0x598d28 + iVar2;\n        in_RAX[3] = 0;\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 369
    },
    "00422e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422e60(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*in_RAX != 0) {\n        if (*(in_RAX[1] + 0x10) == 0) {\n            if (*(*in_RAX + 0x10) < 5) {\n                return;\n            }\n            iVar1 = fcn.004233c0();\n            *in_RAX = iVar1;\n            *(in_RAX + 4) = 1;\n        }\n        else {\n            fcn.004232c0();\n            *(in_RAX + 4) = 1;\n            iVar1 = fcn.00422fe0();\n            in_RAX[1] = iVar1;\n        }\n        if (*0x598384 == 1) {\n            fcn.0041dcc0();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00422f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422f20(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) != 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x422f56;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x422f65;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 264
    },
    "00422f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422f80(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x422fb6;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x422fc5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 264
    },
    "00422fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422fe0(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    int64_t iStack72;\n    uint64_t uStack64;\n    int64_t *piStack56;\n    int64_t *piStack48;\n    uint64_t uStack40;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x545a28 == 0) {\n        piVar1 = NULL;\n        goto code_r0x00423009;\n    }\n    while( true ) {\n        if (*0x545a28 == 0) {\n            piVar1 = NULL;\n        }\n        else {\n            piVar1 = (*0x545a28 >> 0x13) << 3;\n            *0x545a28 = *piVar1;\n            LOCK();\n        }\n        if (piVar1 != NULL) {\n            piStack32 = piVar1;\n            fcn.00422f80();\n            piVar1 = piStack32;\n        }\ncode_r0x00423009:\n        if (piVar1 != NULL) {\n            return;\n        }\n        iStack72 = 0;\n        piStack56 = piVar1;\n        if (*0x545a78 != 0) {\n            fcn.0040a520();\n            iStack72 = *0x545a78;\n            if (*0x545a78 != 0) {\n                fcn.004257c0();\n                fcn.00425940();\n            }\n            fcn.0040a740();\n        }\n        if (iStack72 != 0) goto code_r0x004230fc;\n        auStack24 = CONCAT88(&iStack72, 0x423200);\n        fcn.0045bc80();\n        if (iStack72 != 0) break;\n        fcn.00433580();\n    }\n    fcn.0040a520();\n    fcn.00425940();\n    fcn.0040a740();\ncode_r0x004230fc:\n    uStack40 = 0;\n    piVar1 = piStack56;\n    while (uStack40 + 0x800 < 0x8001) {\n        piStack32 = *(iStack72 + 0x18) + uStack40;\n        piStack32[2] = 0;\n        uStack64 = uStack40;\n        piStack48 = piVar1;\n        uStack40 = uStack40 + 0x800;\n        fcn.0040a400();\n        piVar1 = piStack32;\n        if (uStack64 != 0) {\n            fcn.00423260();\n            piVar1 = piStack48;\n        }\n    }\n    return;\n}\n",
        "token_count": 651
    },
    "00423480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423480(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4234a5;\n            fcn.0040a520();\n            if (*0x545a20 == 0) {\n                *0x545a28 = 0;\n                if (*0x545a88 != NULL) {\n                    for (; *0x545a88 != NULL; *0x545a88 = **0x545a88) {\n                        (*0x545a88)[2] = 0x545a78;\n                    }\n                    if (*0x545a78 == 0) {\n                        *0x545a78 = *0x545a88;\n                        *0x545a80 = *0x545a90;\n                        *0x545a88 = in_XMM15;\n                    }\n                    else {\n                        **0x545a90 = *0x545a78;\n                        *(*0x545a78 + 8) = *0x545a90;\n                        *0x545a78 = *0x545a88;\n                        *0x545a88 = in_XMM15;\n                    }\n                }\n                *(*0x20 + -0x20) = 0x4234d8;\n                fcn.0040a740();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42356b;\n            fcn.00433580();\n        }\n        *(puVar1 + -8) = 0x423571;\n        fcn.0045bdc0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 483
    },
    "00423580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.00423580(void)\n\n{\n    int64_t unaff_R14;\n    bool bVar1;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    if ((*0x598384 == 0) && (*0x545a78 != 0)) {\n        fcn.0045bc80();\n        bVar1 = *0x545a78 != 0;\n        fcn.0040a740();\n        return bVar1;\n    }\n    fcn.0040a740();\n    return false;\n}\n",
        "token_count": 162
    },
    "004238e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004238e1(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x56a790);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x10400 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if ((iVar2 != 0) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) {\n        if (*(iVar2 + 99) - 1U < 2) {\n            return in_RAX & 0xffffffffffffff00 | (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX);\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 336
    },
    "00423981": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00423981(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x56a790);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x10400 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 351
    },
    "00423b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423b80(void)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    uint64_t uVar5;\n    bool bVar6;\n    int64_t in_RAX;\n    uint64_t uVar7;\n    int64_t noname_1;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (0x7fffffffffffffff < *(in_RAX + 0x10160)) {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar4 = *(unaff_R14 + 0x30);\n    if (*0x54a530 != '\\0') {\n        fcn.00450b60();\n    }\n    arg1 = *(in_RAX + 0x103d8);\n    bVar6 = false;\ncode_r0x00423c2d:\n    do {\n        if (unaff_RBX == 0) {\ncode_r0x00423d38:\n            if (bVar6) {\n                fcn.0040a740();\n            }\n            if (*0x54a530 != '\\0') {\n                fcn.00450c60();\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            return;\n        }\n        uVar7 = *(in_RAX + 0x10168);\n        if (uVar7 != 0) {\n            uVar8 = uVar7;\n            if (unaff_RBX < uVar7) {\n                uVar8 = unaff_RBX;\n            }\n            LOCK();\n            puVar2 = in_RAX + 0x10168;\n            uVar5 = *puVar2;\n            *puVar2 = *puVar2 ^ (uVar7 == uVar5) * (*puVar2 ^ uVar7 - uVar8);\n            if (uVar7 == uVar5) {\n                unaff_RBX = unaff_RBX - uVar8;\n            }\n            goto code_r0x00423c2d;\n        }\n        LOCK();\n        puVar2 = in_RAX + 0x10160;\n        uVar7 = *puVar2;\n        *puVar2 = *puVar2 + 0x200;\n        if (arg1 <= uVar7 >> 9) {\n            *(in_RAX + 0x10160) = 0x8000000000000000;\n            goto code_r0x00423d38;\n        }\n        noname_1 = iVar4;\n        if (!bVar6) {\n            fcn.0040a520();\n        }\n        uVar7 = fcn.00423dc0(arg1, noname_1, 0x200);\n        if (unaff_RBX < uVar7) {\n            LOCK();\n            *(in_RAX + 0x10168) = *(in_RAX + 0x10168) + (uVar7 - unaff_RBX);\n            unaff_RBX = 0;\n        }\n        else {\n            unaff_RBX = unaff_RBX - uVar7;\n        }\n        bVar6 = true;\n    } while( true );\n}\n",
        "token_count": 857
    },
    "00423dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00423df2)\n\nulong fcn.00423dc0(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uchar uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar8;\n    uint64_t unaff_RDI;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    uint8_t uVar13;\n    \n    do {\n        puVar7 = *0x20;\n        uVar8 = unaff_RSI;\n        uVar10 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar6 = *0x54577c & 0x80000000;\n            if (uVar6 == 0) {\n                *0x54577c = *0x54577c + 1;\n                LOCK();\n            }\n            *(*0x20 + -0x88) = *0x56a738;\n            *(*0x20 + -0x84) = uVar6 == 0;\n            if (uVar6 != 0) {\n                return 0;\n            }\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar4 = 0;\n            while( true ) {\n                if (arg3 == 0) {\n                    *(*0x20 + -0x70) = iVar4;\n                    *(*0x20 + -0xa8) = 0x423f70;\n                    fcn.00420d20(*(*0x20 + -0x84));\n                    if (*0x54a530 != '\\0') {\n                        *(*0x20 + -0xa8) = 0x423f85;\n                        fcn.0040a740();\n                        *(*0x20 + -0xa8) = 0x423f9e;\n                        fcn.00450bc0(*(*0x20 + -0x70));\n                        *(*0x20 + -0xa8) = 0x423faa;\n                        fcn.0040a520();\n                    }\n                    return *(*0x20 + -0x70);\n                }\n                uVar8 = unaff_RSI >> 9;\n                unaff_RDI = unaff_RSI;\n                uVar10 = arg3;\n                if (arg1 <= uVar8) goto code_r0x00424179;\n                uVar9 = *(unaff_RBX + uVar8 * 8);\n                uVar8 = uVar9 >> 0x14;\n                if (0x3f < uVar8) goto code_r0x0042416c;\n                uVar8 = *(*(in_RAX + 0x10170 + uVar8 * 8) + (uVar9 & 0xfffff) * 8);\n                uVar6 = unaff_RSI & 0x1ff;\n                uVar9 = uVar6;\n                unaff_RDI = uVar6 >> 3;\n                if (0x40 < unaff_RDI) break;\n                iVar1 = unaff_RDI - 0x40;\n                uVar10 = iVar1 >> 0x3f & unaff_RDI;\n                unaff_RDI = uVar10 + 0x11400 + uVar8;\n                iVar11 = uVar10 + 0x11440 + uVar8;\n                uVar10 = arg3 >> 3;\n                if (-iVar1 < uVar10 || -uVar10 == iVar1) {\n                    uVar10 = -iVar1;\n                }\n                *(*0x20 + -0x30) = arg3;\n                *(*0x20 + -0x68) = uVar10;\n                *(*0x20 + -0x58) = uVar8;\n                *(*0x20 + -0x38) = uVar9;\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x20) = iVar11;\n                *(*0x20 + -0x40) = unaff_RSI;\n                for (uVar12 = 0; uVar12 < uVar10; uVar12 = uVar12 + 1) {\n                    *(*0x20 + -0x10) = uVar12 + unaff_RDI;\n                    if (uVar10 <= uVar12) {\ncode_r0x00424154:\n                        *(*0x20 + -0xa8) = 0x42415f;\n                        fcn.0045e420(uVar10);\n                        goto code_r0x0042415f;\n                    }\n                    uVar13 = ~*(uVar12 + iVar11) & *(uVar12 + unaff_RDI);\n                    if (uVar13 != 0) {\n                        *(*0x20 + -0x60) = uVar12;\n                        for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                            if ((1 << (uVar5 & 0x1f) & uVar13) != 0) {\n                                uVar9 = uVar9 + uVar12 * 8 + uVar5;\n                                if (0x1ff < uVar9) {\n                                    *(*0x20 + -0xa8) = 0x424154;\n                                    fcn.0045e440(0x200);\n                                    goto code_r0x00424154;\n                                }\n                                *(*0x20 + -0x48) = uVar5;\n                                *(*0x20 + -0x50) = iVar4;\n                                *(*0x20 + -0x8a) = uVar13;\n                                uVar2 = *(uVar8 + 0x10400 + uVar9 * 8);\n                                *(*0x20 + -0xa8) = 0x42406e;\n                                iVar4 = fcn.00421180();\n                                *(*0x20 + -0x80) = iVar4;\n                                if (uVar2 == '\\0') {\n                                    iVar11 = *(*0x20 + -0x20);\n                                    uVar13 = *(*0x20 + -0x8a);\n                                    iVar4 = *(*0x20 + -0x50);\n                                }\n                                else {\n                                    *(*0x20 + -0x78) = *(iVar4 + 0x20);\n                                    *(*0x20 + -0xa8) = 0x4240ae;\n                                    fcn.0040a740();\n                                    *(*0x20 + -0xa8) = 0x4240ba;\n                                    uVar3 = fcn.00421600();\n                                    *(*0x20 + -0x89) = uVar3;\n                                    *(*0x20 + -0xa8) = 0x4240ca;\n                                    fcn.0040a520();\n                                    iVar4 = *(*0x20 + -0x50);\n                                    if (*(*0x20 + -0x89) != '\\0') {\n                                        iVar4 = *(*0x20 + -0x78) + *(*0x20 + -0x50);\n                                    }\n                                    iVar11 = *(*0x20 + -0x20);\n                                    uVar13 = **(*0x20 + -0x10) & ~*(*(*0x20 + -0x60) + iVar11);\n                                }\n                                uVar5 = *(*0x20 + -0x48);\n                                uVar8 = *(*0x20 + -0x58);\n                                unaff_RDI = *(*0x20 + -0x18);\n                                uVar10 = *(*0x20 + -0x68);\n                                uVar9 = *(*0x20 + -0x38);\n                                uVar12 = *(*0x20 + -0x60);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RSI = *(*0x20 + -0x40);\n                        }\n                    }\n                    in_RAX = *(*0x20 + -0x28);\n                    arg3 = *(*0x20 + -0x30);\n                }\n                unaff_RSI = unaff_RSI + uVar10 * 8;\n                arg3 = arg3 + uVar10 * -8;\n            }\ncode_r0x0042415f:\n            *(*0x20 + -0xa8) = 0x42416c;\n            fcn.0045e500(0x40);\ncode_r0x0042416c:\n            arg1 = 0x40;\n            *(*0x20 + -0xa8) = 0x424179;\n            fcn.0045e440(0x40);\ncode_r0x00424179:\n            *(*0x20 + -0xa8) = 0x424185;\n            in_RAX = fcn.0045e440(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = uVar8;\n        *(puVar7 + 0x30) = uVar10;\n        *(puVar7 + -8) = 0x4241a9;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        arg3 = *(puVar7 + 0x30);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2400
    },
    "004245e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004245e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.00460800();\n        iStackX8 = in_RAX;\n    }\n    iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0xdc8) != 0) goto code_r0x00424637;\n        iVar4 = 0;\n        iStackX8 = in_RAX;\n        iStack16 = iVar2;\n        do {\n            iVar2 = iStackX8;\n            if (0x3f < iVar4) {\n                *(iStack16 + 0xdc8) = 0x40;\n                iVar2 = iStack16;\ncode_r0x00424637:\n                uVar1 = *(iVar2 + 0xdc8) - 1;\n                if (uVar1 < 0x80) {\n                    uVar3 = *(iVar2 + 0xdc8 + *(iVar2 + 0xdc8) * 8);\n                    *(iVar2 + 0xdc8) = uVar1;\n                    return uVar3;\n                }\n                iVar4 = 0x80;\n                iVar2 = fcn.0045e420(0x80);\n            }\n            uVar3 = fcn.00416180(iVar2 + 0x16a10);\n            *(iStack16 + 0xdd0 + iVar4 * 8) = uVar3;\n            iVar4 = iVar4 + 1;\n        } while( true );\n    }\n    uVar3 = fcn.00416180();\n    return uVar3;\n}\n",
        "token_count": 458
    },
    "00425940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00425940(void)\n\n{\n    int64_t *piVar1;\n    int64_t **in_RAX;\n    int64_t **unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *unaff_RBX;\n            *(*0x20 + -0x10) = piVar1;\n            if (((piVar1 == NULL) && (unaff_RBX[1] == NULL)) && (unaff_RBX[2] == NULL)) {\n                *unaff_RBX = *in_RAX;\n                if (*in_RAX == NULL) {\n                    in_RAX[1] = unaff_RBX;\n                }\n                else {\n                    (*in_RAX)[1] = unaff_RBX;\n                }\n                *in_RAX = unaff_RBX;\n                unaff_RBX[2] = in_RAX;\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RBX[1];\n            *(*0x20 + -0x20) = unaff_RBX[2];\n            *(*0x20 + -0x38) = 0x4259bd;\n            fcn.00434ec0();\n            *(*0x20 + -0x38) = 0x4259ce;\n            fcn.004357c0();\n            *(*0x20 + -0x38) = 0x4259d8;\n            fcn.00435780();\n            *(*0x20 + -0x38) = 0x4259dd;\n            fcn.004350e0();\n            *(*0x20 + -0x38) = 0x4259e7;\n            fcn.00435780();\n            *(*0x20 + -0x38) = 0x4259ec;\n            fcn.004350e0();\n            *(*0x20 + -0x38) = 0x4259f6;\n            fcn.00435780();\n            *(*0x20 + -0x38) = 0x4259fb;\n            fcn.004350e0();\n            *(*0x20 + -0x38) = 0x425a05;\n            fcn.00435780();\n            *(*0x20 + -0x38) = 0x425a0a;\n            fcn.00435120();\n            *(*0x20 + -0x38) = 0x425a0f;\n            fcn.00434f40();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x425a25;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x425a35;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 814
    },
    "00425a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00425a60(void)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int64_t **ppiVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t **ppiVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint8_t *puVar11;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x48) = 0x425a87;\n            iVar5 = fcn.00423980();\n            if (iVar5 != 0) {\n                *(*0x20 + -0x28) = iVar5;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x425aae;\n                fcn.004214a0();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x28) + 0x18);\n                *(*0x20 + -0x29) = *(*(*0x20 + 0x10) + 10);\n                *(*0x20 + -0x10) = *(*0x20 + -0x28) + 0x78;\n                *(*0x20 + -0x48) = 0x425ae5;\n                fcn.0040a520();\n                iVar5 = *(*0x20 + -0x28);\n                uVar2 = *(*0x20 + -0x29);\n                uVar6 = *(*0x20 + -0x20);\n                ppiVar4 = iVar5 + 0x80;\n                while (ppiVar8 = ppiVar4,  ppiVar4 = *ppiVar8,  ppiVar4 != NULL) {\n                    uVar9 = *(ppiVar4 + 1);\n                    if ((uVar9 == uVar6) && (*(ppiVar4 + 10) == uVar2)) {\n                        *(*0x20 + -0x48) = 0x425b33;\n                        fcn.0040a740();\n                        iVar3 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 0;\n                    }\n                    if ((uVar6 < uVar9) || ((uVar9 == uVar6 && (uVar2 <= *(ppiVar4 + 10) && *(ppiVar4 + 10) != uVar2))))\n                    break;\n                }\n                ppiVar4 = *(*0x20 + 0x10);\n                *(ppiVar4 + 1) = uVar6;\n                *ppiVar4 = *ppiVar8;\n                *ppiVar8 = ppiVar4;\n                uVar6 = *(iVar5 + 0x18);\n                uVar9 = uVar6 + 0x800000000000;\n                uVar10 = uVar9 >> 0x2a;\n                if (uVar10 < 0x40) {\n                    uVar6 = uVar6 >> 0xd;\n                    uVar7 = (uVar6 & 0x1ff) >> 3;\n                    if (uVar7 < 0x40) {\n                        puVar11 = *(*(uVar10 * 8 + 0x56a790) + (uVar9 >> 0x16 & 0xfffff) * 8) + uVar7 + 0x11480;\n                        LOCK();\n                        *puVar11 = *puVar11 | 1 << (uVar6 & 7);\n                        *(*0x20 + -0x48) = 0x425c05;\n                        fcn.0040a740();\n                        iVar3 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 1;\n                    }\n                    *(*0x20 + -0x48) = 0x425c4b;\n                    fcn.0045e440(0x40);\n                }\n                *(*0x20 + -0x48) = 0x425c58;\n                fcn.0045e440(0x40);\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x48) = 0x425c69;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x425c79;\n        fcn.0045bdc0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1417
    },
    "00425ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00425ca0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint8_t *puVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t *piVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x48) = 0x425cc6;\n            iVar3 = fcn.00423980();\n            if (iVar3 != 0) {\n                *(*0x20 + -0x30) = iVar3;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x425ced;\n                fcn.004214a0();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x30) + 0x18);\n                *(*0x20 + -0x10) = *(*0x20 + -0x30) + 0x78;\n                *(*0x20 + -0x48) = 0x425d12;\n                fcn.0040a520();\n                iVar3 = *(*0x20 + -0x30);\n                piVar11 = iVar3 + 0x80;\n                do {\n                    piVar6 = piVar11;\n                    piVar11 = *piVar6;\n                    if (piVar11 == NULL) {\n                        piVar11 = NULL;\n                        goto code_r0x00425d50;\n                    }\n                } while ((*(piVar11 + 1) != *(*0x20 + -0x20)) || (*(piVar11 + 10) != *(*0x20 + 0x10)));\n                *piVar6 = *piVar11;\ncode_r0x00425d50:\n                *(*0x20 + -0x28) = piVar11;\n                if (*(iVar3 + 0x80) != 0) goto code_r0x00425dd8;\n                uVar7 = *(iVar3 + 0x18) + 0x800000000000;\n                uVar8 = uVar7 >> 0x2a;\n                if (uVar8 < 0x40) {\n                    uVar4 = *(iVar3 + 0x18) >> 0xd;\n                    uVar5 = (uVar4 & 0x1ff) >> 3;\n                    if (uVar5 < 0x40) {\n                        puVar9 = *(*(uVar8 * 8 + 0x56a790) + (uVar7 >> 0x16 & 0xfffff) * 8) + uVar5 + 0x11480;\n                        LOCK();\n                        *puVar9 = *puVar9 & ~(1 << (uVar4 & 7));\ncode_r0x00425dd8:\n                        *(*0x20 + -0x48) = 0x425de5;\n                        fcn.0040a740();\n                        iVar2 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x48) = 0x425e2b;\n                    fcn.0045e440(0x40);\n                }\n                *(*0x20 + -0x48) = 0x425e38;\n                fcn.0045e440(0x40);\n            }\n            unaff_BL = 0x20;\n            *(*0x20 + -0x48) = 0x425e49;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + -8) = 0x425e58;\n        fcn.0045bdc0();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1206
    },
    "00425e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00425e80(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    ulong *puVar5;\n    ulong *puVar6;\n    ulong *arg1_00;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    puVar5 = fcn.00416180();\n    fcn.0040a740();\n    *(puVar5 + 10) = 1;\n    arg1_00 = puVar5 + 2;\n    if (*0x5985b0 == 0) {\n        puVar5[2] = unaff_RBX;\n        puVar6 = puVar5;\n    }\n    else {\n        puVar6 = fcn.0045e0a0(arg1_00, unaff_RBX, in_R8, in_R9);\n    }\n    puVar6[3] = arg1;\n    if (*0x5985b0 == 0) {\n        puVar6[4] = unaff_RDI;\n        puVar6[5] = uStack0000000000000028;\n    }\n    else {\n        fcn.0045e0e0(arg1_00, puVar6 + 4, in_R8, in_R9);\n        fcn.0045e0a0(arg1_00, uStack0000000000000028, in_R8, in_R9);\n    }\n    cVar4 = fcn.00425a60();\n    if (cVar4 != '\\0') {\n        if (*0x598384 != 0) {\n            fcn.004119e0(0);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            if ((*0x62 & 1) == 0) {\n                fcn.0041c400();\n            }\n            fcn.0041c260(0x52d260);\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        return 1;\n    }\n    fcn.0040a520();\n    *0x5710f0 = *0x5710f0 - *0x5710c0;\n    *puVar5 = *0x5710d8;\n    *0x5710d8 = puVar5;\n    fcn.0040a740();\n    return 0;\n}\n",
        "token_count": 739
    },
    "00426860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00426860(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x52e860 < 0x16) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                if (*0x5985b0 == 0) {\n                    *(in_RAX + 0x100f8) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x4268af;\n                    in_RAX = fcn.0045e080(arg1, *0x52e860, arg3, in_R9);\n                }\n                *(*0x20 + 8) = in_RAX;\n                arg2 = in_RAX + 0x10090;\n                *(*0x20 + -0x30) = 0x4268c6;\n                fcn.0042be20();\n                *(*0x20 + -0x30) = 0x4268d0;\n                fcn.00428b60();\n                arg1_00 = *0x52d388;\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x10078) = *0x52d388;\n                if (*0x5985b0 == 0) {\n                    *(iVar1 + 0x100f0) = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x42690b;\n                    fcn.0045df80(arg1_00, arg2, arg3, in_R9);\n                }\n                return;\n            }\n            *(*0x20 + -0x10) = *0x52e860;\n            *(*0x20 + -0x18) = -(*0x52e860 < 0x40);\n            *(*0x20 + -0x30) = 0x42692b;\n            fcn.00434ec0();\n            *(*0x20 + -0x30) = 0x42693c;\n            fcn.004357c0();\n            arg1 = *(*0x20 + -0x18);\n            *(*0x20 + -0x30) = 0x426956;\n            fcn.004355c0();\n            *(*0x20 + -0x30) = 0x42695b;\n            fcn.00435120();\n            *(*0x20 + -0x30) = 0x426965;\n            fcn.00434f40();\n            *(*0x20 + -0x30) = 0x42696a;\n            fcn.00434ec0();\n            *(*0x20 + -0x30) = 0x42697b;\n            fcn.004357c0();\n            *(*0x20 + -0x30) = 0x426985;\n            fcn.004355c0();\n            *(*0x20 + -0x30) = 0x42698a;\n            fcn.00435120();\n            *(*0x20 + -0x30) = 0x42698f;\n            fcn.00434f40();\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0x30) = 0x4269a5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x4269ba;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1035
    },
    "004275c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004275c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10108) != '\\0') goto code_r0x00427632;\n            uVar2 = unaff_RBX + 0x800000000000U >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar1 = *(uVar2 * 8 + 0x56a790);\n                if ((iVar1 != 0) && (*(iVar1 + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8) != 0)) {\n                    return unaff_RBX;\n                }\ncode_r0x00427632:\n                *(*0x20 + -0x20) = 0x42763d;\n                iVar1 = fcn.0042bfe0();\n                if (unaff_RBX != '\\0') {\n                    return iVar1;\n                }\n                return *0x52d388;\n            }\n            *(*0x20 + -0x20) = 0x42766c;\n            in_RAX = fcn.0045e440(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x42767c;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 516
    },
    "00428420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00428420(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(in_RAX + 0x10078);\n            uVar1 = iVar2 + 0x800000000000;\n            uVar4 = uVar1 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar4 || *(in_RAX + 0x10088) == uVar4) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            arg1 = (iVar2 & 0x3fffff) >> 0xd;\n            if (-(arg1 - 0x200) < unaff_RBX) goto code_r0x00428539;\n            uVar5 = *(in_RAX + 0x68);\n            if (uVar4 < uVar5) {\n                uVar5 = *(*(in_RAX + 0x60) + uVar4 * 8);\n                if (uVar5 < 0) {\n                    uVar5 = 0x200000;\n                }\n                else {\n                    uVar5 = uVar5 >> 0x15 & 0x1fffff;\n                }\n                if (uVar5 < unaff_RBX) {\ncode_r0x00428539:\n                    *(*0x20 + -0x40) = 0x42853e;\n                    iVar2 = fcn.004276a0();\n                    if (iVar2 == 0) {\n                        if (*(*0x20 + 0x10) == 1) {\n                            *(*(*0x20 + 8) + 0x10078) = *0x52d388;\n                        }\n                        return 0;\n                    }\ncode_r0x00428578:\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x40) = 0x428594;\n                    fcn.00427200(*(*0x20 + 0x10));\n                    if (*(*(*0x20 + 8) + 0x10078) + 0x800000000000U < *(*0x20 + -0x18) + 0x800000000000U) {\n                        *(*(*0x20 + 8) + 0x10078) = *(*0x20 + -0x18);\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                if (uVar1 >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0x20) = uVar5;\n                    *(*0x20 + -0x40) = 0x428505;\n                    iVar2 = fcn.0042a2e0(arg1);\n                    if (iVar2 != -1) {\n                        iVar2 = iVar2 * 0x2000 + *(*0x20 + -0x10) * 0x400000 + -0x800000000000;\n                        unaff_RBX = (*(*0x20 + -0x10) * 0x400000 + unaff_RBX * 0x2000) - 0x800000000000;\n                        goto code_r0x00428578;\n                    }\n                    *(*0x20 + -0x40) = 0x4285e7;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x40) = 0x4285f8;\n                    fcn.004357c0();\n                    *(*0x20 + -0x40) = 0x428605;\n                    fcn.004354c0();\n                    *(*0x20 + -0x40) = 0x428616;\n                    fcn.004357c0();\n                    *(*0x20 + -0x40) = 0x428625;\n                    fcn.004354c0();\n                    *(*0x20 + -0x40) = 0x42862a;\n                    fcn.00435120();\n                    *(*0x20 + -0x40) = 0x42862f;\n                    fcn.00434f40();\n                    *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x40) = 0x428645;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x40) = 0x428656;\n                    fcn.004357c0();\n                    *(*0x20 + -0x40) = 0x428669;\n                    fcn.004354c0();\n                    *(*0x20 + -0x40) = 0x42867a;\n                    fcn.004357c0();\n                    *(*0x20 + -0x40) = 0x428685;\n                    fcn.00435620();\n                    *(*0x20 + -0x40) = 0x42868a;\n                    fcn.00435120();\n                    *(*0x20 + -0x40) = 0x42868f;\n                    fcn.00434f40();\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x40) = 0x4286a5;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x40) = 0x4286b2;\n                fcn.0045e440(0x2000);\n            }\n            *(*0x20 + -0x40) = 0x4286bd;\n            in_RAX = fcn.0045e440(uVar5);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x4286cd;\n        fcn.00460800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1551
    },
    "004286e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004286e0(uint64_t arg1)\n\n{\n    ulong uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    char unaff_DIL;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = unaff_RBX + 0x800000000000;\n            if (uVar6 < *(in_RAX + 0x10078) + 0x800000000000U) {\n                *(in_RAX + 0x10078) = unaff_RBX;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar8 = arg1 * 0x2000 + unaff_RBX;\n            iVar2 = unaff_RBX + arg1 * 0x2000 + -1;\n            if (unaff_DIL == '\\0') {\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = iVar8;\n                *(*0x20 + -0x38) = iVar2;\n                *(*0x20 + -0x60) = 0x428766;\n                fcn.00420320(iVar8);\n                in_RAX = *(*0x20 + 8);\n                iVar2 = *(*0x20 + -0x38);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar8 = *(*0x20 + -0x18);\n                uVar6 = *(*0x20 + -0x10);\n            }\n            if (arg1 == 1) {\n                if (uVar6 >> 0x23 < 0x2000) {\n                    iVar8 = (uVar6 >> 0x16 & 0x1fff) * 0x80 + *(in_RAX + 0x78 + (uVar6 >> 0x23) * 8);\n                    uVar4 = unaff_RBX & 0x3fffff;\n                    uVar6 = uVar4 >> 0x13;\n                    if (uVar6 < 8) {\n                        *(iVar8 + uVar6 * 8) = *(iVar8 + uVar6 * 8) & ~(1 << (uVar4 >> 0xd & 0x3f));\n                        goto code_r0x004288b7;\n                    }\n                    *(*0x20 + -0x60) = 0x4288e5;\n                    fcn.0045e440(8);\n                }\n                *(*0x20 + -0x60) = 0x4288f2;\n                fcn.0045e440(0x2000);\n                goto code_r0x004288f2;\n            }\n            uVar7 = iVar8 + 0x7fffffffffffU >> 0x16;\n            unaff_RBX = (unaff_RBX & 0x3fffff) >> 0xd;\n            uVar3 = (iVar2 & 0x3fffff) >> 0xd;\n            if (uVar7 == uVar6 >> 0x16) {\n                uVar6 = uVar6 >> 0x23;\n                if (0x1fff < uVar6) {\n                    *(*0x20 + -0x60) = 0x428910;\n                    uVar3 = fcn.0045e440(0x2000);\n                    goto code_r0x00428910;\n                }\n                *(*0x20 + -0x60) = 0x42885d;\n                fcn.00429dc0((uVar3 - unaff_RBX) + 1);\ncode_r0x004288f2:\n                arg1 = *(*0x20 + 0x18);\ncode_r0x004288b7:\n                *(*0x20 + -0x60) = 0x4288c9;\n                fcn.00426c20(arg1);\n                return;\n            }\n            if (uVar6 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x10) = iVar8 + 0x7fffffffffffU;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x20) = uVar6 >> 0x16;\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0x60) = 0x428812;\n                fcn.00429dc0(-(unaff_RBX - 0x200));\n                uVar6 = *(*0x20 + 8);\n                uVar7 = *(*0x20 + -0x18);\n                iVar8 = *(*0x20 + -0x20);\n                while (arg1 = iVar8 + 1,  arg1 < uVar7) {\n                    uVar3 = arg1 >> 0xd;\n                    if (0x1fff < uVar3) goto code_r0x004289af;\ncode_r0x00428910:\n                    *(*0x20 + -0x30) = arg1;\n                    uVar1 = *(uVar6 + 0x78 + uVar3 * 8);\n                    unaff_RBX = 0x40;\n                    *(*0x20 + -0x60) = 0x428936;\n                    fcn.0045eaa0(uVar1, (arg1 & 0x1fff) << 7);\n                    uVar6 = *(*0x20 + 8);\n                    uVar7 = *(*0x20 + -0x18);\n                    iVar8 = *(*0x20 + -0x30);\n                }\n                if (*(*0x20 + -0x10) >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x60) = 0x42899f;\n                    fcn.00429dc0(*(*0x20 + -0x28) + 1);\n                    goto code_r0x004288f2;\n                }\n                *(*0x20 + -0x60) = 0x4289af;\n                fcn.0045e440(0x2000);\ncode_r0x004289af:\n                *(*0x20 + -0x60) = 0x4289b9;\n                fcn.0045e440(0x2000);\n            }\n            unaff_DIL = uVar7;\n            arg1 = 0x2000;\n            *(*0x20 + -0x60) = 0x4289c6;\n            in_RAX = fcn.0045e440(0x2000);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        puVar5[0x20] = unaff_DIL;\n        *(puVar5 + -8) = 0x4289e5;\n        fcn.00460800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_DIL = puVar5[0x20];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1813
    },
    "00428b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00428b60(ulong param_1, ulong param_2, int64_t param_3, int64_t param_4)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *0x52e8a0;\n            *(*0x20 + -0x28) = *0x52e8a8;\n            *(*0x20 + -0x24) = *0x52e8ac;\n            *(*0x20 + -0x20) = *0x52e8b0;\n            *(*0x20 + -0x1c) = *0x52e8b4;\n            *(*0x20 + -0x18) = *0x52e8b8;\n            *(*0x20 + -0x14) = *0x52e8bc;\n            *(*0x20 + -0x10) = *0x52e8c0;\n            *(*0x20 + -0xc) = *0x52e8c4;\n            iVar3 = 0;\n            while( true ) {\n                if (4 < iVar3) {\n                    *(*0x20 + -0x88) = 0x428c7f;\n                    uVar4 = fcn.00414fe0();\n                    *(*0x20 + -0x60) = uVar4;\n                    *(*0x20 + -0x58) = 0x800000;\n                    *(*0x20 + -0x50) = 0x800000;\n                    iVar3 = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0x60);\n                    uVar1 = *(*0x20 + -0x58);\n                    uVar2 = *(*0x20 + -0x50);\n                    *(iVar3 + 0x100c8) = uVar1;\n                    *(iVar3 + 0x100d0) = uVar2;\n                    if (*0x5985b0 == 0) {\n                        *(iVar3 + 0x100c0) = uVar4;\n                    }\n                    else {\n                        *(*0x20 + -0x88) = 0x428cdb;\n                        fcn.0045e080(uVar4, uVar1, param_3, param_4);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x70) = iVar3;\n                arg1 = -(*(*0x20 + iVar3 * 8 + -0x30) + -0x30);\n                uVar6 = 1 << (arg1 & 0x3f) & -(arg1 < 0x40);\n                *(*0x20 + -0x68) = uVar6;\n                *(*0x20 + -0x88) = 0x428c05;\n                iVar3 = fcn.00414fe0(arg1, *0x5984a8 + uVar6 * 8 + -1);\n                if (iVar3 == 0) break;\n                *(*0x20 + -0x48) = iVar3;\n                *(*0x20 + -0x40) = 0;\n                uVar4 = *(*0x20 + -0x68);\n                *(*0x20 + -0x38) = uVar4;\n                iVar3 = *(*0x20 + 8);\n                param_3 = *(*0x20 + -0x70);\n                param_4 = param_3 * 3;\n                uVar1 = *(*0x20 + -0x48);\n                *(iVar3 + 8 + param_3 * 0x18) = 0;\n                *(iVar3 + 0x10 + param_3 * 0x18) = uVar4;\n                if (*0x5985b0 == 0) {\n                    *(iVar3 + param_3 * 0x18) = uVar1;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x428c6d;\n                    fcn.0045e0a0(arg1, uVar1, param_3, param_4);\n                }\n                iVar3 = param_3 + 1;\n            }\n            *(*0x20 + -0x88) = 0x428cf6;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x428d05;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1194
    },
    "004292c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004292c0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int32_t iVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    ulong unaff_RDI;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    uint32_t uVar13;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (((unaff_RBX & 0x3fffff) == 0) && ((arg1 & 0x3fffff) == 0)) {\n                uVar1 = *(in_RAX + 0x24);\n                uVar2 = *(in_RAX + 0x28);\n                uVar12 = unaff_RBX + 0x800000000000 >> 0x19;\n                uVar13 = -*0x5984a8;\n                uVar11 = uVar12 & uVar13;\n                if (uVar2 < uVar11) {\n                    uVar11 = uVar2;\n                }\n                uVar13 = *0x5984a8 + ((arg1 + 0x800000000000 >> 0x16) + 7 >> 3) + -1 & uVar13;\n                if (uVar13 < uVar1) {\n                    uVar13 = uVar1;\n                }\n                iVar4 = *(in_RAX + 8);\n                if (*(in_RAX + 0x10) != 0) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x3c) = uVar1;\n                    *(*0x20 + -0x40) = uVar2;\n                    *(*0x20 + -0x18) = uVar12;\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    *(*0x20 + -0x44) = uVar13;\n                    *(*0x20 + -0x48) = uVar11;\n                    *(*0x20 + -0x70) = 0x42939a;\n                    uVar3 = fcn.0042bca0();\n                    iVar9 = *(*(*0x20 + 8) + 8);\n                    if (*(*(*0x20 + 8) + 0x10) != 0) break;\n                    *(*0x20 + -0x70) = 0x42953d;\n                    fcn.0045e420(0);\n                }\n                arg1 = 0;\n                *(*0x20 + -0x70) = 0x429547;\n                fcn.0045e420(0);\n            }\n            *(*0x20 + -0x70) = 0x42954c;\n            fcn.00434ec0();\n            *(*0x20 + -0x70) = 0x42955d;\n            fcn.004357c0();\n            *(*0x20 + -0x70) = 0x429567;\n            fcn.00435620();\n            *(*0x20 + -0x70) = 0x429578;\n            fcn.004357c0();\n            *(*0x20 + -0x70) = 0x429585;\n            fcn.00435620();\n            *(*0x20 + -0x70) = 0x42958a;\n            fcn.00435120();\n            *(*0x20 + -0x70) = 0x42958f;\n            fcn.00434f40();\n            unaff_RBX = 0x2e;\n            *(*0x20 + -0x70) = 0x4295a5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x4295bf;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n    *(*0x20 + -0x20) = uVar3;\n    *(*0x20 + -0x28) = uVar2 + iVar4;\n    iVar9 = *(*0x20 + -0x44) + iVar9;\n    *(*0x20 + -0x70) = 0x4293d3;\n    fcn.0042bca0();\n    *(*0x20 + -0x70) = 0x4293e5;\n    iVar4 = fcn.0042bd20(*(*0x20 + -0x20));\n    uVar12 = iVar4 + 0x800000000000;\n    uVar5 = iVar9 + 0x800000000000;\n    if (uVar12 < uVar5) {\n        iVar7 = iVar9 - iVar4;\n    }\n    else {\n        iVar7 = 0;\n    }\n    if (iVar7 != 0) {\n        *(*0x20 + -0x20) = iVar4;\n        *(*0x20 + -0x28) = uVar12;\n        *(*0x20 + -0x30) = iVar9;\n        *(*0x20 + -0x38) = uVar5;\n        *(*0x20 + -0x70) = 0x429445;\n        fcn.0042cc40();\n        if (*(*0x20 + -0x28) < *(*0x20 + -0x38)) {\n            iVar4 = *(*0x20 + -0x30) - *(*0x20 + -0x20);\n        }\n        else {\n            iVar4 = 0;\n        }\n        LOCK();\n        *0x598dc0 = *0x598dc0 + iVar4;\n        *(*0x20 + -0x70) = 0x429499;\n        fcn.00414c40();\n        if (*(*0x20 + -0x3c) == 0) {\n            iVar6 = *(*0x20 + -0x48);\ncode_r0x004294b2:\n            iVar4 = *(*0x20 + 8);\n            *(iVar4 + 0x24) = iVar6;\n        }\n        else {\n            iVar6 = *(*0x20 + -0x48);\n            if (iVar6 < *(*0x20 + -0x3c)) goto code_r0x004294b2;\n            iVar4 = *(*0x20 + 8);\n        }\n        if (*(*0x20 + -0x40) == 0) {\n            iVar6 = *(*0x20 + -0x44);\ncode_r0x004294d8:\n            *(iVar4 + 0x28) = iVar6;\n        }\n        else {\n            iVar6 = *(*0x20 + -0x44);\n            if (*(*0x20 + -0x40) < iVar6) goto code_r0x004294d8;\n        }\n        iVar4 = *(*0x20 + -0x20);\n        uVar5 = *(*0x20 + -0x38);\n        uVar12 = *(*0x20 + -0x28);\n        iVar9 = *(*0x20 + -0x30);\n    }\n    iVar6 = *(*(*0x20 + 8) + 0x20);\n    if (iVar6 == 0) {\n        iVar10 = *(*0x20 + -0x18);\n    }\n    else {\n        iVar10 = *(*0x20 + -0x18);\n        if (iVar6 <= iVar10) goto code_r0x0042951c;\n    }\n    *(*(*0x20 + 8) + 0x20) = iVar10;\ncode_r0x0042951c:\n    if (uVar12 < uVar5) {\n        iVar9 = iVar9 - iVar4;\n    }\n    else {\n        iVar9 = 0;\n    }\n    return iVar9;\n}\n",
        "token_count": 2022
    },
    "004295e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004295e0(ulong arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = in_RAX[1];\n    if (uVar1 != 0) {\n        if (unaff_RBX == 1) {\n            uVar2 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            uVar4 = ~(1 << (uVar2 & 0x3f) & -(uVar2 < 0x40));\n            in_RAX[1] = uVar1 & uVar4;\n            in_RAX[2] = in_RAX[2] & uVar4;\n            return uVar2 * 0x2000 + *in_RAX;\n        }\n        iVar3 = fcn.004296a0();\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 321
    },
    "004297e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004297e0(void)\n\n{\n    uchar (*pauVar1) [16];\n    int64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004297e0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar4 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (in_RAX[1] == 0) {\n            return;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        iVar6 = *in_RAX;\n        uVar7 = iVar6 + 0x800000000000;\n        *(*0x20 + -0x10) = uVar7;\n        uVar5 = uVar7 >> 0x16;\n        *(*0x20 + -0x18) = uVar5;\n        uVar3 = (iVar6 & 0x3fffff) >> 0xd;\n        *(*0x20 + -0x20) = uVar3;\n        uVar2 = 0;\n        do {\n            if (0x3f < uVar2) {\n                if (*in_RAX + 0x800000000000U < *(unaff_RBX + 0x10078) + 0x800000000000U) {\n                    *(unaff_RBX + 0x10078) = *in_RAX;\n                }\n                *(*0x20 + -0x50) = 0x42996c;\n                fcn.00426c20(0x40);\n                pauVar1 = *(*0x20 + 8);\n                *pauVar1 = in_XMM15;\n                *pauVar1[1] = 0;\n                return;\n            }\n            if ((in_RAX[1] >> (uVar2 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar7 >> 0x23) goto code_r0x004299a5;\n                iVar6 = (uVar5 & 0x1fff) * 0x80 + *(unaff_RBX + 0x78 + (uVar7 >> 0x23) * 8);\n                uVar8 = uVar3 + uVar2 >> 6;\n                if (7 < uVar8) goto code_r0x00429994;\n                *(iVar6 + uVar8 * 8) = *(iVar6 + uVar8 * 8) & ~(1 << (uVar3 + uVar2 & 0x3f));\n            }\n            if ((in_RAX[2] >> (uVar2 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar7 >> 0x23) goto code_r0x00429987;\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x50) = 0x42990b;\n                fcn.00429cc0(1);\n                in_RAX = *(*0x20 + 8);\n                uVar2 = *(*0x20 + -0x28);\n                uVar3 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar7 = *(*0x20 + -0x10);\n                uVar5 = *(*0x20 + -0x18);\n            }\n            uVar2 = uVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x004299b3;\ncode_r0x00429987:\n    *(*0x20 + -0x50) = 0x429994;\n    fcn.0045e440(0x2000);\ncode_r0x00429994:\n    *(*0x20 + -0x50) = 0x4299a5;\n    fcn.0045e440(8);\ncode_r0x004299a5:\n    *(*0x20 + -0x50) = 0x4299b2;\n    in_RAX = fcn.0045e440(0x2000);\ncode_r0x004299b3:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + -8) = 0x4299c5;\n    fcn.00460800();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    *0x20 = puVar4;\n    goto code_r0x004297e0;\n}\n",
        "token_count": 1187
    },
    "00429cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429cc0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar4 = unaff_RBX >> 6;\n    if (uVar4 < 8) {\n        if (arg1 == 1) {\n            *(in_RAX + uVar4 * 8) = *(in_RAX + uVar4 * 8) | 1 << (unaff_RBX & 0x3f);\n            return;\n        }\n        uVar5 = (arg1 - 1) + unaff_RBX;\n        uVar6 = uVar5 >> 6;\n        if (uVar6 == uVar4) {\n            puVar2 = in_RAX + uVar4 * 8;\n            *puVar2 = *puVar2 | (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (unaff_RBX & 0x3f);\n            return;\n        }\n        if (uVar6 < 8) {\n            puVar2 = in_RAX + uVar4 * 8;\n            *puVar2 = *puVar2 | -1 << (unaff_RBX & 0x3f);\n            while (uVar4 = uVar4 + 1,  uVar4 < uVar6) {\n                *(in_RAX + uVar4 * 8) = 0xffffffffffffffff;\n            }\n            uVar1 = (uVar5 & 0x3f) + 1;\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 | (1 << (uVar1 & 0x3f) & -(uVar1 < 0x40)) - 1;\n            return;\n        }\n        fcn.0045e440(8);\n    }\n    fcn.0045e440(8);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 499
    },
    "00429dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429dc0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar4 = unaff_RBX >> 6;\n    if (uVar4 < 8) {\n        if (arg1 == 1) {\n            *(in_RAX + uVar4 * 8) = *(in_RAX + uVar4 * 8) & ~(1 << (unaff_RBX & 0x3f));\n            return;\n        }\n        uVar5 = (arg1 - 1) + unaff_RBX;\n        uVar6 = uVar5 >> 6;\n        if (uVar6 == uVar4) {\n            puVar2 = in_RAX + uVar4 * 8;\n            *puVar2 = *puVar2 & ~((1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (unaff_RBX & 0x3f));\n            return;\n        }\n        if (uVar6 < 8) {\n            puVar2 = in_RAX + uVar4 * 8;\n            *puVar2 = *puVar2 & ~(-1 << (unaff_RBX & 0x3f));\n            while (uVar4 = uVar4 + 1,  uVar4 < uVar6) {\n                *(in_RAX + uVar4 * 8) = 0;\n            }\n            uVar1 = (uVar5 & 0x3f) + 1;\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 & -(1 << (uVar1 & 0x3f) & -(uVar1 < 0x40));\n            return;\n        }\n        fcn.0045e440(8);\n    }\n    fcn.0045e440(8);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 495
    },
    "00429ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00429ee0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint8_t uVar2;\n    int64_t iVar3;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t in_R8;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar4 = unaff_RBX;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX;\n            if (arg1 == 1) {\n                uVar4 = unaff_RBX >> 6;\n                if (uVar4 < 8) {\n                    return *(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f) & 1;\n                }\n                *(*0x20 + -0x40) = 0x42a01c;\n                in_RAX = fcn.0045e440(8);\n                goto code_r0x0042a01c;\n            }\n            uVar4 = unaff_RBX >> 6;\n            if (uVar4 < 8) {\n                unaff_RDI = (arg1 - 1) + unaff_RBX;\n                unaff_RSI = unaff_RDI >> 6;\n                if (unaff_RSI == uVar4) {\n                    if (*0x598354 == 0) {\n                        *(*0x20 + -0x40) = 0x429fdc;\n                        uVar4 = fcn.00402100();\n                    }\n                    else {\n                        uVar4 = popcnt(*(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f) &\n                                       (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1);\n                    }\n                    return uVar4;\n                }\n                if (unaff_RSI < 8) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    *(*0x20 + -0x18) = unaff_RSI;\n                    if (*0x598354 == 0) {\n                        *(*0x20 + -0x20) = uVar4;\n                        *(*0x20 + -0x40) = 0x429f73;\n                        in_R8 = fcn.00402100();\n                        uVar4 = *(*0x20 + -0x20);\n                        unaff_RSI = *(*0x20 + -0x18);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    else {\n                        in_R8 = popcnt(*(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f));\n                    }\n                    in_RDX = *0x598354;\n                    while( true ) {\n                        uVar4 = uVar4 + 1;\n                        *(*0x20 + -0x20) = in_R8;\n                        if (unaff_RSI <= uVar4) break;\n                        if (in_RDX == 0) {\n                            *(*0x20 + -0x28) = uVar4;\n                            *(*0x20 + -0x40) = 0x42a048;\n                            in_R9 = fcn.00402100();\n                            in_RDX = *0x598354;\n                            uVar4 = *(*0x20 + -0x28);\n                            unaff_RSI = *(*0x20 + -0x18);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            in_R8 = *(*0x20 + -0x20);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        else {\n                            in_R9 = popcnt(*(in_RAX + uVar4 * 8));\n                        }\ncode_r0x0042a01c:\n                        in_R8 = in_R8 + in_R9;\n                    }\n                    uVar1 = (unaff_RDI & 0x3f) + 1;\n                    if (in_RDX == 0) {\n                        *(*0x20 + -0x40) = 0x42a0a5;\n                        iVar3 = fcn.00402100();\n                        in_R8 = *(*0x20 + -0x20);\n                    }\n                    else {\n                        iVar3 = popcnt((1 << (uVar1 & 0x3f) & -(uVar1 < 0x40)) - 1 & *(in_RAX + unaff_RSI * 8));\n                    }\n                    return iVar3 + in_R8;\n                }\n                *(*0x20 + -0x40) = 0x42a0c8;\n                fcn.0045e440(8);\n            }\n            arg1 = 8;\n            *(*0x20 + -0x40) = 0x42a0d5;\n            in_RAX = fcn.0045e440(8);\n            in_RDX = unaff_RBX;\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = uVar4;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x42a0ea;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1386
    },
    "0042a2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0042a2e0(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (unaff_RBX == 1) {\n        arg1 = arg1 >> 6;\n        while( true ) {\n            if (7 < arg1) {\n                return -1;\n            }\n            uVar2 = ~*(in_RAX + arg1 * 8);\n            if (uVar2 != 0) break;\n            arg1 = arg1 + 1;\n        }\n        iVar1 = 0;\n        if (uVar2 != 0) {\n            for (; (uVar2 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        return arg1 * 0x40 + iVar1;\n    }\n    if (0x40 < unaff_RBX) {\n        iVar1 = fcn.0042a4a0(arg1);\n        return iVar1;\n    }\n    iVar1 = fcn.0042a3a0(arg1);\n    return iVar1;\n}\n",
        "token_count": 318
    },
    "0042a660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042a660(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if ((in_RAX == 1) || (in_RAX - 2U < 2)) {\n                *(*0x20 + -0x28) = 0x42a6b0;\n                iVar1 = fcn.0040ca40(0x59ae50);\n                *(iVar1 + 0x10) = *(*0x20 + 8);\n                *(iVar1 + 0x28) = *(*0x20 + 0x10);\n                return;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x28) = 0x42a6dd;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42a6ed;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 442
    },
    "0042a700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0042a700(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 1) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x42a745;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42a750;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 288
    },
    "0042b3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042b3c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    int64_t in_RAX;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*(in_RAX + 0x90) != 6) {\n        cVar4 = fcn.00454fe0();\n        if (cVar4 == '\\0') {\n            while (*(in_RAX + 0x17c) != 2) {\n                if (*(in_RAX + 0x17c) == 1) {\n                    (**unaff_RBX)();\n                }\n                else {\n                    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    iVar3 = *(unaff_R14 + 0x30);\n                    LOCK();\n                    if (*(in_RAX + 0x17c) == 0) {\n                        *(in_RAX + 0x17c) = 1;\n                        fcn.0042b520();\n                        *(in_RAX + 0x17c) = 2;\n                    }\n                    iVar2 = *(iVar3 + 0xd8);\n                    *(iVar3 + 0xd8) = iVar2 + -1;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                }\n            }\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 416
    },
    "0042b520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042b520(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong noname_1;\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x90) != 2) {\n                LOCK();\n                if (*0x541f18 <= *0x541f08) {\n                    *0x541f08 = *0x541f08 + 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = *0x541f08;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x10) = 0;\n                *(*0x20 + -0x20) = 0x42b680;\n                *(*0x20 + -0x18) = in_RAX;\n                *(*0x20 + -0x10) = *0x541f08;\n                *(*0x20 + -0x38) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x42b5a8;\n                *0x541f08 = *0x541f08 + 1;\n                fcn.0045bc80();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                if (*0x541f28 == 0) {\n                    return;\n                }\n                noname_1 = *(*(*0x20 + 8) + 0x168);\n                if (*(*0x20 + -0x28) < *0x541f30) {\n                    if (*0x5985b0 == 0) {\n                        *(*0x541f28 + *(*0x20 + -0x28) * 8) = noname_1;\n                    }\n                    else {\n                        *(*0x20 + -0x40) = 0x42b5fd;\n                        fcn.0045e0a0(*0x541f30, noname_1, param_3, param_4);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x42b619;\n                in_RAX = fcn.0045e420(*0x541f30);\n            }\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x40) = 0x42b62a;\n            fcn.00434ec0();\n            *(*0x20 + -0x40) = 0x42b63b;\n            fcn.004357c0();\n            *(*0x20 + -0x40) = 0x42b645;\n            fcn.004354c0();\n            *(*0x20 + -0x40) = 0x42b64a;\n            fcn.00435120();\n            *(*0x20 + -0x40) = 0x42b64f;\n            fcn.00434f40();\n            *(*0x20 + -0x40) = 0x42b665;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42b670;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1021
    },
    "0042be20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042be20(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    in_RAX[1] = 0;\n    in_RAX[2] = 0x10;\n    uVar1 = fcn.0040ca40(unaff_RBX);\n    *in_RAX = uVar1;\n    if (*0x5985b0 == 0) {\n        in_RAX[4] = unaff_RBX;\n    }\n    else {\n        fcn.0045e0a0(in_RAX, unaff_RBX, param_3, param_4);\n    }\n    in_RAX[3] = 0;\n    return;\n}\n",
        "token_count": 236
    },
    "0042bfe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0042bfe0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x42c007;\n            uVar3 = fcn.0042bee0();\n            if (uVar3 == 0) {\n                if ((*(*0x20 + 8))[1] != NULL) {\n                    return ***(*0x20 + 8);\n                }\n            }\n            else {\n                arg1 = (*(*0x20 + 8))[1];\n                iVar2 = **(*0x20 + 8);\n                if (uVar3 - 1 < arg1) {\n                    iVar5 = (uVar3 - 1) * 0x10;\n                    uVar1 = *(*0x20 + 0x10) + 0x800000000000;\n                    if ((*(iVar5 + iVar2) + 0x800000000000U <= uVar1) &&\n                       (uVar1 < *(iVar2 + 8 + iVar5) + 0x800000000000U)) {\n                        return *(*0x20 + 0x10);\n                    }\n                    if (arg1 <= uVar3) {\n                        return 0;\n                    }\n                    if (uVar3 < arg1) {\n                        return *(uVar3 * 0x10 + iVar2);\n                    }\n                    *(*0x20 + -0x20) = 0x42c0b9;\n                    fcn.0045e420(arg1);\n                }\n                *(*0x20 + -0x20) = 0x42c0c5;\n                fcn.0045e420(arg1);\n            }\n            *(*0x20 + -0x20) = 0x42c0cf;\n            in_RAX = fcn.0045e420(0);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x42c0df;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 698
    },
    "0042ce80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042ce80(void)\n\n{\n    int64_t *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = in_RAX + 2;\n            if (*0x5985b5 == '\\0') {\n                in_RAX[1] = in_RAX + 0x202;\n            }\n            else {\n                in_RAX[1] = in_RAX + 4;\n            }\n            if ((in_RAX[1] - *in_RAX & 0xfU) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42cee5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42cef0;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 339
    },
    "0042cf00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042cf00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (0 < *(*(unaff_R14 + 0x30) + 0xdc)) {\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(iVar1 + 0x1260) = iVar1 + 0x1270;\n        return;\n    }\n    if ((*0x5985b5 != '\\0') && (in_RAX != 0)) {\n        fcn.00404120();\n        if (*0x5985b4 == '\\0') {\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(iVar1 + 0x1260) = iVar1 + 0x1270;\n            return;\n        }\n    }\n    fcn.0045bc80();\n    return;\n}\n",
        "token_count": 216
    },
    "0042cfc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042cfc0(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint8_t *puVar6;\n    uint8_t uVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = *(in_RAX + 0x1260) - (in_RAX + 0x1270) >> 3;\n            if (uVar4 < 0x201) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = uVar4;\n                *(in_RAX + 0x1260) = 0;\n                if (*0x598350 != '\\0') {\n                    iVar3 = 0;\n                    while (iVar3 < uVar4) {\n                        *(*0x20 + -0x18) = iVar3;\n                        uVar1 = *(in_RAX + 0x1270 + iVar3 * 8);\n                        *(*0x20 + -0x48) = 0x42d03b;\n                        fcn.0041c940(uVar1);\n                        in_RAX = *(*0x20 + 8);\n                        uVar4 = *(*0x20 + -0x10);\n                        iVar3 = *(*0x20 + -0x18) + 1;\n                    }\n                    *(*0x20 + -0x48) = 0x42d05d;\n                    fcn.0042ce80();\n                    return;\n                }\n                arg1 = 0;\n                for (iVar3 = 0; iVar3 < uVar4; iVar3 = iVar3 + 1) {\n                    uVar8 = arg1;\n                    if (0xfff < *(in_RAX + 0x1270 + iVar3 * 8)) {\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0x20) = arg1;\n                        uVar4 = 0;\n                        *(*0x20 + -0x48) = 0x42d0a5;\n                        iVar3 = fcn.004119e0(0);\n                        if (iVar3 == 0) {\n                            in_RAX = *(*0x20 + 8);\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar8 = *(*0x20 + -0x20);\n                            uVar4 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            puVar6 = *0x50 + (uVar4 >> 3);\n                            uVar7 = 1 << (uVar4 & 7);\n                            if ((uVar7 & *(*0x50 + (uVar4 >> 3))) == 0) {\n                                LOCK();\n                                *puVar6 = *puVar6 | uVar7;\n                                uVar4 = *0x18 + 0x800000000000 >> 0x2a;\n                                if (0x3f < uVar4) goto code_r0x0042d24d;\n                                iVar2 = *(*(uVar4 * 8 + 0x56a790) + (*0x18 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                                uVar4 = *0x18 >> 0x10 & 0x3f;\n                                puVar6 = iVar2 + uVar4 + 0x11440;\n                                uVar7 = 1 << (*0x18 >> 0xd & 7);\n                                if ((uVar7 & *(iVar2 + 0x11440 + uVar4)) == 0) {\n                                    LOCK();\n                                    *puVar6 = *puVar6 | uVar7;\n                                }\n                                if ((*0x62 & 1) == 0) {\n                                    uVar8 = *(*0x20 + -0x20);\n                                    arg1 = *(*0x20 + -0x10);\n                                    if (arg1 <= uVar8) goto code_r0x0042d245;\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x1270 + uVar8 * 8) = iVar3;\n                                    uVar8 = uVar8 + 1;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar4 = arg1;\n                                }\n                                else {\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x1248) = *(in_RAX + 0x1248) + *0x68;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar8 = *(*0x20 + -0x20);\n                                    uVar4 = *(*0x20 + -0x10);\n                                }\n                            }\n                            else {\n                                in_RAX = *(*0x20 + 8);\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar8 = *(*0x20 + -0x20);\n                                uVar4 = *(*0x20 + -0x10);\n                            }\n                        }\n                    }\n                    arg1 = uVar8;\n                }\n                if (arg1 < 0x201) {\n                    *(*0x20 + -0x48) = 0x42d21e;\n                    fcn.00422a80(arg1);\n                    *(*0x20 + -0x48) = 0x42d22e;\n                    fcn.0042ce80();\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x42d245;\n                fcn.0045e4a0(arg1, 0x200);\ncode_r0x0042d245:\n                *(*0x20 + -0x48) = 0x42d24d;\n                fcn.0045e420(arg1);\ncode_r0x0042d24d:\n                uVar4 = 0x40;\n                *(*0x20 + -0x48) = 0x42d25a;\n                fcn.0045e440(0x40);\n            }\n            *(*0x20 + -0x48) = 0x42d265;\n            in_RAX = fcn.0045e480(uVar4, 0x200);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42d270;\n        fcn.00460800();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1584
    },
    "0042d380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042d380(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    \n    if ((arg1 == 0x72) || (arg1 == 0xe9)) {\n        do {\n            uVar4 = *(unaff_RBX + 0x18);\n            if (uVar4 == 1) {\n                uVar4 = 0;\n                goto code_r0x0042d396;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x18;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar4 == uVar3) * (*puVar1 ^ 1);\n        } while (uVar4 != uVar3);\n        if (uVar4 == 2) {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\ncode_r0x0042d396:\n    if ((arg1 == 0x77) || (arg1 == 0xe9)) {\n        do {\n            uVar3 = *(unaff_RBX + 0x20);\n            if (uVar3 == 1) {\n                uVar3 = 0;\n                goto code_r0x0042d3ae;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x20;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar3 == uVar2) * (*puVar1 ^ 1);\n        } while (uVar3 != uVar2);\n        if (uVar3 == 2) {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\ncode_r0x0042d3ae:\n    if (uVar4 != 0) {\n        *(uVar4 + 0xa0) = *in_RAX;\n        *in_RAX = uVar4;\n    }\n    if (uVar3 != 0) {\n        *(uVar3 + 0xa0) = *in_RAX;\n        *in_RAX = uVar3;\n    }\n    return;\n}\n",
        "token_count": 527
    },
    "0042d480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0042d480(void)\n\n{\n    ulong *puVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    if (*(in_RAX + 8) == 0) {\n        iVar2 = fcn.0040ca40(0x59ae60);\n        for (uVar3 = 0; uVar3 < 0x11; uVar3 = uVar3 + 1) {\n            *(iVar2 + uVar3 * 0xf0) = *(in_RAX + 8);\n            *(in_RAX + 8) = uVar3 * 0xf0 + iVar2;\n        }\n    }\n    puVar1 = *(in_RAX + 8);\n    *(in_RAX + 8) = *puVar1;\n    fcn.0040a740();\n    return puVar1;\n}\n",
        "token_count": 267
    },
    "0042d640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042d640(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (uVar1 = _sym.imp.kernel32.dll_CreateIoCompletionPort, \n          *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00430a00();\n    if (iStack16 == 0) {\n        fcn.0045f960();\n        return uVar1 & 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 153
    },
    "0042d700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042d700(void)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*0x59839c != 0) {\n                return *0x59839c;\n            }\n            *0x59839c = 1;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_PostQueuedCompletionStatus;\n            *(*0x20 + -0x38) = *0x52d378;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x48) = 0x42d766;\n            uVar1 = fcn.00430a00();\n            if (*(*0x20 + -0x18) != 0) {\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x42d791;\n            fcn.0045f960();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42d7b0;\n            fcn.00434ec0();\n            *(*0x20 + -0x48) = 0x42d7c5;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x42d7cf;\n            fcn.004354c0();\n            *(*0x20 + -0x48) = 0x42d7e5;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x42d7ea;\n            fcn.00434f40();\n            *(*0x20 + -0x48) = 0x42d7fb;\n            fcn.00433580();\n        }\n        *(puVar2 + -8) = 0x42d805;\n        fcn.0045bdc0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 717
    },
    "0042d820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042d820(void)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    ulong *puVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x800 && *0x20 + -0x800 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x880;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar9 = *0x20 + -0x808;\n            for (iVar4 = 0x100; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar9 = 0;\n                puVar9 = puVar9 + 1;\n            }\n            *(*0x20 + -0x83c) = 0;\n            *(*0x20 + -0x830) = 0;\n            *(*0x20 + -0x838) = 0;\n            *(*0x20 + -0x828) = 0;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (*0x52d378 == -1) {\n                return 0;\n            }\n            if (in_RAX < 0) {\n                uVar5 = 0xffffffff;\n            }\n            else if (in_RAX == 0) {\n                uVar5 = 0;\n            }\n            else if (in_RAX < 1000000) {\n                uVar5 = 1;\n            }\n            else if (in_RAX < 1000000000000000) {\n                uVar5 = in_RAX / 1000000 + (in_RAX >> 0x3f);\n            }\n            else {\n                uVar5 = 1000000000;\n            }\n            iVar8 = *0x598388;\n            if (iVar8 != 0) {\n                if (iVar8 == -1) {\n                    uVar2 = 0xffffffc0;\n                }\n                else {\n                    uVar2 = SUB164((SEXT816(0x40) & 0xffffffffffffffff | ZEXT816(0x40)) / SEXT816(iVar8), 0);\n                }\n                *(*0x20 + -0x838) = uVar2;\n                if (uVar2 < 8) {\n                    *(*0x20 + -0x838) = 8;\n                }\n                *(*0x20 + -0x820) = in_RAX;\n                *(*0x20 + -0x810) = iVar4;\n                if (in_RAX != 0) {\n                    *(iVar4 + 0xe5) = 1;\n                }\n                puVar6 = *0x20 + -0x808;\n                *(*0x20 + -0x880) = _sym.imp.kernel32.dll_GetQueuedCompletionStatusEx;\n                *(*0x20 + -0x878) = *0x52d378;\n                *(*0x20 + -0x870) = puVar6;\n                *(*0x20 + -0x868) = *(*0x20 + -0x838);\n                *(*0x20 + -0x860) = *0x20 + -0x838;\n                *(*0x20 + -0x858) = uVar5;\n                *(*0x20 + -0x850) = 0;\n                *(*0x20 + -0x888) = 0x42d987;\n                fcn.00430b00();\n                unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                if (*(*0x20 + -0x848) == 0) {\n                    *(*(*0x20 + -0x810) + 0xe5) = 0;\n                    *(*0x20 + -0x888) = 0x42d9cb;\n                    fcn.0045f960();\n                    unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                    if (*(*0x20 + -0x880) != 0x102) {\n                        *(*0x20 + -0x82c) = *(*0x20 + -0x880);\n                        *(*0x20 + -0x888) = 0x42da14;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x888) = 0x42da25;\n                        fcn.004357c0();\n                        *(*0x20 + -0x888) = 0x42da31;\n                        fcn.004355c0();\n                        *(*0x20 + -0x888) = 0x42da45;\n                        fcn.004357c0();\n                        *(*0x20 + -0x888) = 0x42da4a;\n                        fcn.00434f40();\n                        uVar5 = 0x17;\n                        *(*0x20 + -0x888) = 0x42da5b;\n                        fcn.00433580();\n                        goto code_r0x0042da5b;\n                    }\n                    return 0;\n                }\n                *(*(*0x20 + -0x810) + 0xe5) = 0;\n                puVar6 = *(*0x20 + -0x820);\n                uVar3 = 0;\n                while( true ) {\n                    uVar5 = uVar3;\n                    if (*(*0x20 + -0x838) < uVar5 || *(*0x20 + -0x838) == uVar5) {\n                        return *(*0x20 + -0x828);\n                    }\n                    if (0x3f < uVar3) break;\n                    *(*0x20 + -0x834) = uVar5;\n                    iVar4 = *(*0x20 + uVar3 * 0x20 + -0x800);\n                    if (iVar4 == 0) {\n                        *0x59839c = 0;\n                        if (puVar6 == NULL) {\n                            *(*0x20 + -0x888) = 0x42daa5;\n                            fcn.0042d700();\n                            puVar6 = *(*0x20 + -0x820);\n                            uVar5 = *(*0x20 + -0x834);\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x818) = iVar4;\n                        *(*0x20 + -0x83c) = 0;\n                        uVar1 = *(*(iVar4 + 0x20) + 8);\n                        *(*0x20 + -0x880) = *0x544bb8;\n                        *(*0x20 + -0x878) = uVar1;\n                        *(*0x20 + -0x870) = iVar4;\n                        *(*0x20 + -0x868) = *0x20 + -0x83c;\n                        *(*0x20 + -0x860) = 0;\n                        *(*0x20 + -0x858) = *0x20 + -0x830;\n                        *(*0x20 + -0x888) = 0x42dafc;\n                        fcn.00430a80();\n                        unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                        if (*(*0x20 + -0x850) == 0) {\n                            *(*0x20 + -0x888) = 0x42db1f;\n                            fcn.0045f960();\n                            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                            uVar5 = *(*0x20 + -0x880);\n                        }\n                        else {\n                            uVar5 = 0;\n                        }\n                        *(*0x20 + -0x888) = 0x42db49;\n                        fcn.0042dba0(uVar5);\n                        puVar6 = *(*0x20 + -0x820);\n                        uVar5 = *(*0x20 + -0x834);\n                    }\ncode_r0x0042da5b:\n                    uVar3 = uVar5 + 1;\n                }\n                *(*0x20 + -0x888) = 0x42db76;\n                fcn.0045e420(0x40);\n            }\n            *(*0x20 + -0x888) = 0x42db7b;\n            in_RAX = fcn.00431c00();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42db86;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2011
    },
    "0042dd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042dd20(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong uVar3;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x598508 == 0) {\n                arg1 = 0x598b80;\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_GetSystemDirectoryA;\n                *(*0x20 + -0x40) = 0x598b80;\n                *(*0x20 + -0x38) = 0x104;\n                *(*0x20 + -0x50) = 0x42dd71;\n                fcn.00430900();\n                unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                uVar1 = *(*0x20 + -0x30);\n                if ((uVar1 != 0) && (uVar1 < 0x105)) {\n                    *(uVar1 + 0x598b80) = 0x5c;\n                    *0x598508 = uVar1 + 1;\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    goto code_r0x0042ddbe;\n                }\n            }\n            else {\ncode_r0x0042ddbe:\n                if (*0x598351 == '\\0') {\n                    uVar1 = *0x598508;\n                    if (*0x598508 < 0x106) {\n                        uVar1 = *0x598508 + unaff_RBX;\n                        if (uVar1 < 0x106) {\n                            uVar3 = 0x598b80;\n                        }\n                        else {\n                            *(*0x20 + -0x18) = *0x598508;\n                            *(*0x20 + -0x50) = 0x42de66;\n                            uVar3 = fcn.00445800(0x105);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(*0x20 + -0x20) = uVar1;\n                        *(*0x20 + -0x10) = uVar3;\n                        *(*0x20 + -0x50) = 0x42de97;\n                        fcn.0045eda0(unaff_RBX);\n                        if (*(*0x20 + -0x20) != 0) {\n                            *(*0x20 + -0x48) = _sym.imp.kernel32.dll_LoadLibraryA;\n                            *(*0x20 + -0x40) = *(*0x20 + -0x10);\n                            *(*0x20 + -0x50) = 0x42debf;\n                            fcn.00430880();\n                            return *(*0x20 + -0x38);\n                        }\n                        uVar1 = 0;\n                        *(*0x20 + -0x50) = 0x42deeb;\n                        fcn.0045e420(0);\n                    }\n                    *(*0x20 + -0x50) = 0x42def5;\n                    fcn.0045e480(uVar1, 0x105);\n                }\n                else if (unaff_RBX != 0) {\n                    *(*0x20 + -0x48) = *0x544b78;\n                    *(*0x20 + -0x40) = in_RAX;\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x30) = 0x800;\n                    *(*0x20 + -0x50) = 0x42ddf7;\n                    fcn.00430980();\n                    return *(*0x20 + -0x28);\n                }\n                arg1 = 0;\n                *(*0x20 + -0x50) = 0x42deff;\n                fcn.0045e420(0);\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x50) = 0x42df10;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x42df25;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1193
    },
    "0042df40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042df40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xd8 && *0x20 + -0xd8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x158;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0xf4) = 0x32336c656e72656b;\n            *(*0x20 + -0xef) = 0x6c6c642e32336c;\n            *(*0x20 + -0x158) = _sym.imp.kernel32.dll_LoadLibraryA;\n            *(*0x20 + -0x150) = *0x20 + -0xf4;\n            *(*0x20 + -0x160) = 0x42dfa5;\n            fcn.00430880();\n            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n            if (*(*0x20 + -0x148) != 0) {\n                *(*0x20 + -0x128) = *(*0x20 + -0x148);\n                *(*0x20 + -0xab) = 0x69446c6c44646441;\n                uVar4 = 0x79726f74636572;\n                *(*0x20 + -0xa3) = 0x79726f74636572;\n                uVar3 = 0x10;\n                *(*0x20 + -0x160) = 0x42e007;\n                iVar1 = fcn.0042dc60(0x10);\n                if (*0x5985b0 != 0) {\n                    *(*0x20 + -0x160) = 0x42e025;\n                    fcn.0045df80(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x544b60;\n                }\n                *0x544b60 = iVar1;\n                *(*0x20 + -0x23) = 0x6f74636556646441;\n                *(*0x20 + -0x1b) = 0x69746e6f43646572;\n                *(*0x20 + -0x18) = 0x65756e69746e6f43;\n                uVar5 = 0x72656c646e6148;\n                *(*0x20 + -0x10) = 0x72656c646e6148;\n                uVar4 = 0x1b;\n                *(*0x20 + -0x160) = 0x42e087;\n                uVar3 = fcn.0042dc60(0x1b);\n                if (*0x5985b0 != 0) {\n                    *(*0x20 + -0x160) = 0x42e0a5;\n                    fcn.0045df80(uVar4, uVar5, param_3, param_4);\n                    uVar3 = *0x544b68;\n                }\n                *0x544b68 = uVar3;\n                uVar4 = 0x7262694c64616f4c;\n                *(*0x20 + -0xca) = 0x7262694c64616f4c;\n                *(*0x20 + -0xc3) = 0x41784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42e0e5;\n                iVar1 = fcn.0042dc60(0xf);\n                if (*0x5985b0 != 0) {\n                    *(*0x20 + -0x160) = 0x42e105;\n                    fcn.0045df80(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x544b78;\n                }\n                *0x544b78 = iVar1;\n                *(*0x20 + -0xd9) = 0x7262694c64616f4c;\n                uVar4 = 0x57784579726172;\n                *(*0x20 + -0xd2) = 0x57784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42e13d;\n                iVar2 = fcn.0042dc60(0xf);\n                iVar1 = iVar2;\n                if (*0x5985b0 != 0) {\n                    *(*0x20 + -0x160) = 0x42e15b;\n                    iVar2 = fcn.0045df80(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x544b80;\n                }\n                *0x544b80 = iVar1;\n                if ((iVar2 == 0) || (*0x544b78 == 0)) {\n                    *0x598351 = false;\n                }\n                else {\n                    *0x598351 = *0x544b60 != 0;\n                }\n                *(*0x20 + -0x101) = 0x3233697061766461;\n                *(*0x20 + -0xfc) = 0x6c6c642e323369;\n                *(*0x20 + -0x160) = 0x42e1b4;\n                iVar1 = fcn.0042dd20(0xd);\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x79) = 0x75466d6574737953;\n                    *(*0x20 + -0x77) = 0x636e75466d657473;\n                    uVar5 = 0x3633306e6f6974;\n                    *(*0x20 + -0x6f) = 0x3633306e6f6974;\n                    uVar4 = 0x12;\n                    *(*0x20 + -0x160) = 0x42e208;\n                    uVar3 = fcn.0042dc60(0x12);\n                    if (*0x5985b0 != 0) {\n                        *(*0x20 + -0x160) = 0x42e226;\n                        fcn.0045df80(uVar4, uVar5, param_3, param_4);\n                        uVar3 = *0x544ba0;\n                    }\n                    *0x544ba0 = uVar3;\n                    *(*0x20 + -0x116) = 0x6c642e6c6c64746e;\n                    *(*0x20 + -0x10e) = 0x6c;\n                    *(*0x20 + -0x160) = 0x42e24e;\n                    iVar1 = fcn.0042dd20(10);\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x138) = iVar1;\n                        *(*0x20 + -0x67) = 0x6f4674696157744e;\n                        *(*0x20 + -0x61) = 0x6c676e6953726f46;\n                        uVar5 = 0x7463656a624f65;\n                        *(*0x20 + -0x59) = 0x7463656a624f65;\n                        uVar4 = 0x16;\n                        *(*0x20 + -0x160) = 0x42e2a7;\n                        uVar3 = fcn.0042dc60(0x16);\n                        if (*0x5985b0 != 0) {\n                            *(*0x20 + -0x160) = 0x42e2c5;\n                            fcn.0045df80(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x544b88;\n                        }\n                        *0x544b88 = uVar3;\n                        *(*0x20 + -0x8a) = 0x75437465476c7452;\n                        *(*0x20 + -0x89) = 0x7275437465476c74;\n                        uVar5 = 0x626550746e6572;\n                        *(*0x20 + -0x81) = 0x626550746e6572;\n                        uVar4 = 0x11;\n                        *(*0x20 + -0x160) = 0x42e315;\n                        uVar3 = fcn.0042dc60(0x11);\n                        if (*0x5985b0 != 0) {\n                            *(*0x20 + -0x160) = 0x42e333;\n                            fcn.0045df80(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x544ba8;\n                        }\n                        *0x544ba8 = uVar3;\n                        *(*0x20 + -0x3a) = 0x744e7465476c7452;\n                        *(*0x20 + -0x33) = 0x6e6f697372655674;\n                        uVar5 = 0x737265626d754e;\n                        *(*0x20 + -0x2b) = 0x737265626d754e;\n                        uVar4 = 0x17;\n                        *(*0x20 + -0x160) = 0x42e385;\n                        uVar3 = fcn.0042dc60(0x17);\n                        if (*0x5985b0 != 0) {\n                            *(*0x20 + -0x160) = 0x42e3a5;\n                            fcn.0045df80(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x544bb0;\n                        }\n                        *0x544bb0 = uVar3;\n                        *(*0x20 + -0x120) = 0x6c642e6d6d6e6977;\n                        *(*0x20 + -0x118) = 0x6c;\n                        *(*0x20 + -0x160) = 0x42e3cd;\n                        iVar1 = fcn.0042dd20(10);\n                        if (iVar1 != 0) {\n                            *(*0x20 + -0x130) = iVar1;\n                            *(*0x20 + -0xbb) = 0x69676542656d6974;\n                            uVar4 = 0x646f697265506e;\n                            *(*0x20 + -0xb3) = 0x646f697265506e;\n                            uVar3 = 0x10;\n                            *(*0x20 + -0x160) = 0x42e414;\n                            iVar1 = fcn.0042dc60(0x10);\n                            if (*0x5985b0 != 0) {\n                                *(*0x20 + -0x160) = 0x42e432;\n                                fcn.0045df80(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x544bc0;\n                            }\n                            *0x544bc0 = iVar1;\n                            *(*0x20 + -0xe7) = 0x50646e45656d6974;\n                            uVar4 = 0x646f6972655064;\n                            *(*0x20 + -0xe1) = 0x646f6972655064;\n                            uVar3 = 0xe;\n                            *(*0x20 + -0x160) = 0x42e467;\n                            iVar2 = fcn.0042dc60(0xe);\n                            iVar1 = iVar2;\n                            if (*0x5985b0 != 0) {\n                                *(*0x20 + -0x160) = 0x42e485;\n                                iVar2 = fcn.0045df80(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x544bc8;\n                            }\n                            *0x544bc8 = iVar1;\n                            if ((*0x544bc0 != 0) && (iVar2 != 0)) {\n                                *(*0x20 + -0x10c) = 0x642e32335f327377;\n                                *(*0x20 + -0x109) = 0x6c6c642e32335f;\n                                *(*0x20 + -0x160) = 0x42e4cc;\n                                iVar1 = fcn.0042dd20(0xb);\n                                if (iVar1 != 0) {\n                                    *(*0x20 + -0x51) = 0x764f746547415357;\n                                    *(*0x20 + -0x4a) = 0x657070616c726576;\n                                    uVar4 = 0x746c7573655264;\n                                    *(*0x20 + -0x42) = 0x746c7573655264;\n                                    uVar3 = 0x17;\n                                    *(*0x20 + -0x160) = 0x42e525;\n                                    iVar2 = fcn.0042dc60(0x17);\n                                    iVar1 = iVar2;\n                                    if (*0x5985b0 != 0) {\n                                        *(*0x20 + -0x160) = 0x42e545;\n                                        iVar2 = fcn.0045df80(uVar3, uVar4, param_3, param_4);\n                                        iVar1 = *0x544bb8;\n                                    }\n                                    *0x544bb8 = iVar1;\n                                    if (iVar2 != 0) {\n                                        *(*0x20 + -0x9b) = 0x7465675f656e6977;\n                                        *(*0x20 + -0x9a) = 0x5f7465675f656e69;\n                                        *(*0x20 + -0x92) = 0x6e6f6973726576;\n                                        *(*0x20 + -0x160) = 0x42e59a;\n                                        iVar1 = fcn.0042dc60(0x11);\n                                        if (iVar1 != 0) {\n                                            *(*0x20 + -0x160) = 0x42e5a9;\n                                            fcn.0042f020();\n                                        }\n                                        return;\n                                    }\n                                    *(*0x20 + -0x160) = 0x42e5ca;\n                                    fcn.00433580();\n                                }\n                                *(*0x20 + -0x160) = 0x42e5db;\n                                fcn.00433580();\n                            }\n                            *(*0x20 + -0x160) = 0x42e5ec;\n                            fcn.00433580();\n                        }\n                        *(*0x20 + -0x160) = 0x42e5fd;\n                        fcn.00433580();\n                    }\n                    *(*0x20 + -0x160) = 0x42e60e;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x160) = 0x42e61f;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x160) = 0x42e630;\n            fcn.00433580();\n        }\n        *(puVar6 + -8) = 0x42e636;\n        fcn.0045bdc0();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3552
    },
    "0042e7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042e8bf)\n// WARNING: Removing unreachable block (ram,0x0042e8d4)\n\nulong fcn.0042e7e0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    int64_t iStack80;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00430980();\n    if (iStack80 != 0) {\n        for (iVar1 = 0; iVar1 < 0x40; iVar1 = iVar1 + 1) {\n        }\n    }\n    fcn.00430880();\n    return 0;\n}\n",
        "token_count": 186
    },
    "0042e900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042e900(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x598347 == '\\0') {\n        if (in_AL != '\\0') {\n            fcn.00430880();\n            return uStack16;\n        }\n        fcn.00430880();\n        return uStack16;\n    }\n    return 0;\n}\n",
        "token_count": 141
    },
    "0042f020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f020(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x60) = in_RAX;\n            *(*0x20 + -0x3a) = 0x6574737953746547;\n            *(*0x20 + -0x32) = 0x467341656d69546d;\n            uVar4 = 0x656d6954656c69;\n            *(*0x20 + -0x2a) = 0x656d6954656c69;\n            uVar3 = 0x18;\n            *(*0x20 + -0x98) = 0x42f08a;\n            iVar1 = fcn.0042dc60(0x18);\n            iVar2 = iVar1;\n            if (*0x5985b0 != 0) {\n                *(*0x20 + -0x98) = 0x42f0a8;\n                iVar1 = fcn.0045df80(uVar3, uVar4, param_3, param_4);\n                iVar2 = *0x544b70;\n            }\n            *0x544b70 = iVar2;\n            if (iVar1 != 0) {\n                uVar4 = 0x7265507972657551;\n                *(*0x20 + -0x52) = 0x7265507972657551;\n                *(*0x20 + -0x4a) = 0x65636e616d726f66;\n                param_3 = 0x7265746e756f43;\n                *(*0x20 + -0x42) = 0x7265746e756f43;\n                uVar3 = 0x18;\n                *(*0x20 + -0x98) = 0x42f0f5;\n                iVar2 = fcn.0042dc60(0x18);\n                if (*0x5985b0 != 0) {\n                    *(*0x20 + -0x98) = 0x42f113;\n                    fcn.0045df80(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x544b90;\n                }\n                *0x544b90 = iVar2;\n                *(*0x20 + -0x22) = 0x7265507972657551;\n                *(*0x20 + -0x1a) = 0x65636e616d726f66;\n                *(*0x20 + -0x18) = 0x724665636e616d72;\n                uVar4 = 0x79636e65757165;\n                *(*0x20 + -0x10) = 0x79636e65757165;\n                uVar3 = 0x1a;\n                *(*0x20 + -0x98) = 0x42f169;\n                iVar1 = fcn.0042dc60(0x1a);\n                iVar2 = iVar1;\n                if (*0x5985b0 != 0) {\n                    *(*0x20 + -0x98) = 0x42f187;\n                    iVar1 = fcn.0045df80(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x544b98;\n                }\n                *0x544b98 = iVar2;\n                if ((*0x544b90 != 0) && (iVar1 != 0)) {\n                    *(*0x20 + -0x70) = 0;\n                    *(*0x20 + -0x90) = iVar1;\n                    *(*0x20 + -0x88) = *0x20 + -0x70;\n                    *(*0x20 + -0x98) = 0x42f1ba;\n                    fcn.00430880();\n                    unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                    iVar2 = *(*0x20 + -0x70);\n                    if (iVar2 != 0) {\n                        if (iVar2 < 0x80000000) {\n                            *(*0x20 + -0x68) = iVar2;\n                            *(*0x20 + -0x90) = *0x544b90;\n                            *(*0x20 + -0x88) = 0x5984e0;\n                            *(*0x20 + -0x98) = 0x42f20d;\n                            fcn.00430880();\n                            uVar7 = 0;\n                            iVar1 = 1000000000;\n                            for (iVar2 = 0x1e; -1 < iVar2; iVar2 = iVar2 + -1) {\n                                iVar6 = *(*0x20 + -0x68) << (iVar2 & 0x3f);\n                                if (iVar6 <= iVar1) {\n                                    iVar1 = iVar1 - iVar6;\n                                    uVar7 = uVar7 | 1 << (iVar2 & 0x1f);\n                                }\n                            }\n                            if (*(*0x20 + -0x68) <= iVar1) {\n                                uVar7 = 0x7fffffff;\n                            }\n                            *0x598352 = 1;\n                            *0x5984d8 = uVar7;\n                            return;\n                        }\n                        *(*0x20 + -0x98) = 0x42f295;\n                        fcn.00433580();\n                    }\n                    *(*0x20 + -0x98) = 0x42f2a6;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x98) = 0x42f2b7;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x98) = 0x42f2c8;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42f2d3;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1555
    },
    "0042f380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f380(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int16_t *piVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \ncode_r0x0042f380:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x68) = 0x42f3a5;\n        iVar1 = fcn.00430820();\n        uVar6 = 0;\n        iVar7 = 0;\n        for (uVar4 = 0; uVar4 < 0x1000000; uVar4 = uVar4 + 1) {\n            if (*(iVar1 + uVar4 * 2) == 0) {\n                if (uVar6 == uVar4) {\n                    *(*0x20 + -0x28) = iVar1;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x68) = 0x42f3ef;\n                    iVar1 = fcn.00445720(iVar7);\n                    uVar6 = *(*0x20 + -0x38);\n                    *0x5455f8 = uVar6;\n                    *0x545600 = uVar6;\n                    if (*0x5985b0 != 0) {\n                        *(*0x20 + -0x68) = 0x42f425;\n                        fcn.0045df80(iVar7, uVar6, param_3, param_4);\n                        iVar1 = *0x5455f0;\n                    }\n                    *0x5455f0 = iVar1;\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar1 = 0;\n                    iVar9 = 0x1000000;\n                    iVar5 = iVar7;\n                    goto code_r0x0042f45a;\n                }\n                uVar6 = uVar4 + 1;\n                iVar7 = iVar7 + 1;\n            }\n        }\n        goto code_r0x0042f5a5;\n    }\n    goto code_r0x0042f5b3;\ncode_r0x0042f45a:\n    if (uVar6 <= iVar1) {\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_FreeEnvironmentStringsW;\n        *(*0x20 + -0x58) = iVar5;\n        *(*0x20 + -0x68) = 0x42f4e5;\n        fcn.00430880();\n        *(*0x20 + -0x18) = 0x4973e0;\n        *(*0x20 + -0x10) = 0x4b2868;\n        *(*0x20 + -0x68) = 0x42f51e;\n        uVar2 = fcn.0045a240(1);\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_SetConsoleCtrlHandler;\n        *(*0x20 + -0x58) = uVar2;\n        *(*0x20 + -0x50) = 1;\n        *(*0x20 + -0x68) = 0x42f53c;\n        fcn.00430900();\n        *(*0x20 + -0x68) = 0x42f553;\n        fcn.0042e640();\n        return;\n    }\n    if (iVar9 == 0) goto code_r0x0042f59a;\n    *(*0x20 + -0x30) = iVar1;\n    *(*0x20 + -0x40) = iVar9;\n    *(*0x20 + -0x20) = iVar7;\n    *(*0x20 + -0x68) = 0x42f47d;\n    uVar2 = fcn.0044a340();\n    iVar7 = *0x5455f0;\n    uVar6 = *(*0x20 + -0x30);\n    uVar4 = *0x5455f8;\n    if (*0x5455f8 <= uVar6) goto code_r0x0042f58f;\n    *(*0x5455f0 + 8 + uVar6 * 0x10) = iVar1;\n    if (*0x5985b0 == 0) {\n        *(iVar7 + uVar6 * 0x10) = uVar2;\n        uVar4 = uVar6;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x42f4bd;\n        fcn.0045df80(iVar7, uVar6, param_3, param_4);\n        uVar4 = uVar6;\n    }\n    piVar3 = *(*0x20 + -0x20);\n    iVar9 = *(*0x20 + -0x40);\n    while( true ) {\n        if (iVar9 == 0) {\n            *(*0x20 + -0x68) = 0x42f58f;\n            fcn.0045e420(0);\n            goto code_r0x0042f58f;\n        }\n        if (*piVar3 == 0) break;\n        iVar9 = iVar9 + -1;\n        piVar3 = piVar3 + (-iVar9 >> 0x3f & 2);\n    }\n    iVar1 = uVar4 + 1;\n    iVar9 = iVar9 + -1;\n    iVar7 = piVar3 + (-iVar9 >> 0x3f & 2);\n    uVar6 = *(*0x20 + -0x38);\n    iVar5 = *(*0x20 + -0x28);\n    goto code_r0x0042f45a;\ncode_r0x0042f58f:\n    *(*0x20 + -0x68) = 0x42f59a;\n    fcn.0045e420(uVar4);\ncode_r0x0042f59a:\n    *(*0x20 + -0x68) = 0x42f5a5;\n    fcn.0045e420(0);\ncode_r0x0042f5a5:\n    *(*0x20 + -0x68) = 0x42f5b2;\n    fcn.0045e420(0x1000000);\ncode_r0x0042f5b3:\n    *(puVar8 + -8) = 0x42f5b8;\n    fcn.0045bdc0();\n    *0x20 = puVar8;\n    goto code_r0x0042f380;\n}\n",
        "token_count": 1597
    },
    "0042f640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042f640(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t arg1_00;\n    int64_t iStack56;\n    \n    if (in_RAX == 1) {\n        fcn.00430880();\n    }\n    else if (in_RAX == 2) {\n        fcn.00430880();\n    }\n    arg1_00 = arg1;\n    if (0x40000000 < arg1_00) {\n        fcn.0045e460(arg1_00, 0x40000000);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = 0;\n    do {\n        if (arg1_00 <= iVar3) {\ncode_r0x0042f77a:\n            fcn.00430a80();\n            return 0;\n        }\n        if (0x7f < *(unaff_RBX + iVar3)) {\n            fcn.00430900();\n            if (iStack56 != 0) {\n                uVar2 = fcn.0042f800(arg1);\n                return uVar2;\n            }\n            goto code_r0x0042f77a;\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 324
    },
    "0042fb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042fb60(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iStack96;\n    uint64_t uStack72;\n    uint64_t uStack56;\n    \n    if (in_RAX < 0) {\n        fcn.00430900();\n        uStack56 = uStack72;\n    }\n    else {\n        fcn.0045fdc0();\n        iVar2 = 0;\n        while( true ) {\n            iVar1 = _sym.imp.kernel32.dll_WaitForMultipleObjects;\n            iVar2 = in_RAX - iVar2;\n            for (iVar3 = 0x1e; -1 < iVar3; iVar3 = iVar3 + -1) {\n                iVar4 = 1000000 << (iVar3 & 0x3f);\n                if (iVar4 <= iVar2) {\n                    iVar2 = iVar2 - iVar4;\n                }\n            }\n            fcn.00430a00();\n            if (uStack56 != 1) break;\n            fcn.0045fdc0();\n            iVar2 = iVar1 - iStack96;\n            if (in_RAX <= iVar2) {\n                return 0xffffffff;\n            }\n        }\n    }\n    if (uStack56 < 0x81) {\n        if (uStack56 == 0) {\n            return 0;\n        }\n        if (uStack56 == 0x80) {\n            fcn.0045bc80();\n            return 0xffffffff;\n        }\n    }\n    else {\n        if (uStack56 == 0x102) {\n            return 0xffffffff;\n        }\n        if (uStack56 == 0xffffffff) {\n            fcn.0045bc80();\n            return 0xffffffff;\n        }\n    }\n    fcn.0045bc80();\n    return 0xffffffff;\n}\n",
        "token_count": 424
    },
    "0042fe60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042fe60(void)\n\n{\n    int64_t iStack16;\n    \n    fcn.00430880();\n    if (iStack16 == 0) {\n        fcn.0045bc80();\n    }\n    return;\n}\n",
        "token_count": 55
    },
    "0042fee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042fee0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iStack16;\n    \n    if (*(in_RAX + 0x318) == 0) {\n        fcn.00430a00();\n        *(in_RAX + 0x318) = iStack16;\n        if (iStack16 == 0) {\n            fcn.0045bc80();\n        }\n        fcn.00430a00();\n        *(in_RAX + 800) = iStack16;\n        if (iStack16 == 0) {\n            fcn.0045bc80();\n            fcn.00430880();\n            *(in_RAX + 0x318) = 0;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "004301e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004301e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint uVar6;\n    uint in_XMM15_Db;\n    uint uVar7;\n    uint in_XMM15_Dc;\n    uint uVar8;\n    uint in_XMM15_Dd;\n    uint uVar9;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x68) = 0;\n            *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_DuplicateHandle;\n            *(*0x20 + -0xa8) = 0xffffffffffffffff;\n            *(*0x20 + -0xa0) = 0xfffffffffffffffe;\n            *(*0x20 + -0x98) = 0xffffffffffffffff;\n            *(*0x20 + -0x90) = *0x20 + -0x68;\n            *(*0x20 + -0x88) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x78) = 2;\n            *(*0x20 + -0xb8) = 0x430253;\n            fcn.00430b80();\n            uVar6 = 0;\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            if (*(*0x20 + -0x70) != 0) {\n                iVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x30);\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x10) = iVar2 + 0x308;\n                *(*0x20 + -0xb8) = 0x430297;\n                fcn.0040a520();\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x310) = *(*0x20 + -0x68);\n                if ((*(iVar2 + 0x328) == 0) && (*0x598347 != '\\0')) {\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_CreateWaitableTimerExW;\n                    *(*0x20 + -0xa8) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x98) = 2;\n                    *(*0x20 + -0x90) = 0x100003;\n                    *(*0x20 + -0xb8) = 0x4302e6;\n                    fcn.00430a00();\n                    uVar6 = 0;\n                    uVar7 = 0;\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    iVar2 = *(*0x20 + -0x88);\n                    *(*(*0x20 + -0x18) + 0x328) = iVar2;\n                    if (iVar2 != 0) goto code_r0x00430317;\n                }\n                else {\ncode_r0x00430317:\n                    *(*0x20 + -0xb8) = 0x430325;\n                    fcn.0040a740();\n                    *(*0x20 + -0x48) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x38) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x28) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_VirtualQuery;\n                    *(*0x20 + -0xa8) = *0x20 + -0x48;\n                    *(*0x20 + -0xa0) = *0x20 + -0x48;\n                    *(*0x20 + -0x98) = 0x30;\n                    *(*0x20 + -0xb8) = 0x430365;\n                    fcn.00430980();\n                    puVar3 = **(in_GS_OFFSET + *0x598520);\n                    if (*(*0x20 + -0x90) != 0) {\n                        iVar2 = *(*0x20 + -0x40);\n                        uVar1 = iVar2 + 0x4000;\n                        *(*0x20 + -0x60) = uVar1;\n                        uVar4 = puVar3[1];\n                        *(*0x20 + -0x50) = uVar4;\n                        if ((uVar1 <= uVar4) && ((uVar4 - iVar2) - 0x4000 < 0x4000001)) {\n                            *puVar3 = uVar1;\n                            puVar3[2] = iVar2 + 0x53a0U;\n                            puVar3[3] = iVar2 + 0x53a0U;\n                            *(*0x20 + -0xb8) = 0x4303ce;\n                            fcn.0045ddc0();\n                            return;\n                        }\n                        *(*0x20 + -0xb8) = 0x4303f5;\n                        fcn.00434ec0();\n                        *(*0x20 + -0xb8) = 0x430406;\n                        fcn.004357c0();\n                        *(*0x20 + -0xb8) = 0x430410;\n                        fcn.00435620();\n                        *(*0x20 + -0xb8) = 0x430425;\n                        fcn.004357c0();\n                        *(*0x20 + -0xb8) = 0x43042f;\n                        fcn.00435620();\n                        *(*0x20 + -0xb8) = 0x430445;\n                        fcn.004357c0();\n                        *(*0x20 + -0xb8) = 0x43044a;\n                        fcn.00434f40();\n                        *(*0x20 + -0xb8) = 0x43045b;\n                        fcn.00433580();\n                    }\n                    *(*0x20 + -0xb8) = 0x430465;\n                    fcn.0045f960();\n                    *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                    *(*0x20 + -0xb8) = 0x430485;\n                    fcn.00434ec0();\n                    *(*0x20 + -0xb8) = 0x430496;\n                    fcn.004357c0();\n                    *(*0x20 + -0xb8) = 0x4304a5;\n                    fcn.004354c0();\n                    *(*0x20 + -0xb8) = 0x4304aa;\n                    fcn.00435120();\n                    *(*0x20 + -0xb8) = 0x4304af;\n                    fcn.00434f40();\n                    *(*0x20 + -0xb8) = 0x4304c5;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0xb8) = 0x4304ca;\n                fcn.0045f960();\n                *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                *(*0x20 + -0xb8) = 0x4304e9;\n                fcn.00434ec0();\n                *(*0x20 + -0xb8) = 0x4304fa;\n                fcn.004357c0();\n                *(*0x20 + -0xb8) = 0x430505;\n                fcn.004354c0();\n                *(*0x20 + -0xb8) = 0x43050a;\n                fcn.00435120();\n                *(*0x20 + -0xb8) = 0x43050f;\n                fcn.00434f40();\n                *(*0x20 + -0xb8) = 0x430525;\n                fcn.00433580();\n            }\n            *(*0x20 + -0xb8) = 0x43052a;\n            fcn.0045f960();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n            *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n            *(*0x20 + -0xb8) = 0x430549;\n            fcn.00434ec0();\n            *(*0x20 + -0xb8) = 0x43055a;\n            fcn.004357c0();\n            *(*0x20 + -0xb8) = 0x430565;\n            fcn.004354c0();\n            *(*0x20 + -0xb8) = 0x43056a;\n            fcn.00435120();\n            *(*0x20 + -0xb8) = 0x43056f;\n            fcn.00434f40();\n            *(*0x20 + -0xb8) = 0x430585;\n            fcn.00433580();\n        }\n        *(puVar5 + -8) = 0x43058b;\n        fcn.0045bdc0();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2292
    },
    "00430740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00430740(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x278) = in_RAX;\n    if (*(iVar1 + 0xe0) == 0) {\n        bVar2 = false;\n    }\n    else if (*(iVar1 + 0x2b0) == 0) {\n        *(iVar1 + 0x2b8) = unaff_R14;\n        *(iVar1 + 0x2a8) = in_stack_00000000;\n        *(iVar1 + 0x2b0) = auStackX8;\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    fcn.0045db80();\n    if (bVar2) {\n        *(iVar1 + 0x2b0) = 0;\n    }\n    return *(iVar1 + 0x290);\n}\n",
        "token_count": 256
    },
    "00430ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00430ea0(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    ulong arg1;\n    char cVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    ulong *puVar8;\n    uint64_t **ppuVar9;\n    uint64_t *puVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar12;\n    uint in_XMM15_Da;\n    uint uVar13;\n    uint in_XMM15_Db;\n    uint uVar14;\n    uint in_XMM15_Dc;\n    uint uVar15;\n    uint in_XMM15_Dd;\n    uint uVar16;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x4d8 && *0x20 + -0x4d8 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x558;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_R14 + 0x30) != in_RAX) {\n                LOCK();\n                if (*(in_RAX + 0x330) != 0) {\n                    LOCK();\n                    puVar2 = in_RAX + 0x300;\n                    uVar3 = *puVar2;\n                    *puVar2 = *puVar2 + 1;\n                    return uVar3;\n                }\n                *(in_RAX + 0x330) = 1;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = in_RAX + 0x308;\n                *(*0x20 + -0x560) = 0x430f0d;\n                fcn.0040a520();\n                if (*(*(*0x20 + -0x10) + 0x310) == 0) {\n                    *(*0x20 + -0x560) = 0x430f2e;\n                    uVar6 = fcn.0040a740();\n                    iVar7 = *(*0x20 + -0x10);\n                    *(iVar7 + 0x330) = 0;\n                    LOCK();\n                    piVar1 = iVar7 + 0x300;\n                    *piVar1 = *piVar1 + 1;\n                    return uVar6;\n                }\n                *(*0x20 + -0x510) = 0;\n                uVar4 = *(*(*0x20 + -0x10) + 0x310);\n                *(*0x20 + -0x558) = _sym.imp.kernel32.dll_DuplicateHandle;\n                *(*0x20 + -0x550) = 0xffffffffffffffff;\n                *(*0x20 + -0x548) = uVar4;\n                *(*0x20 + -0x540) = 0xffffffffffffffff;\n                *(*0x20 + -0x538) = *0x20 + -0x510;\n                *(*0x20 + -0x530) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x520) = 2;\n                *(*0x20 + -0x560) = 0x430fac;\n                fcn.00430b80();\n                uVar13 = 0;\n                uVar14 = 0;\n                uVar15 = 0;\n                uVar16 = 0;\n                if (*(*0x20 + -0x518) != 0) break;\n                *(*0x20 + -0x560) = 0x4312e5;\n                fcn.0045f960();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                *(*0x20 + -0x508) = *(*0x20 + -0x558);\n                *(*0x20 + -0x560) = 0x431305;\n                fcn.00434ec0();\n                *(*0x20 + -0x560) = 0x431316;\n                fcn.004357c0();\n                *(*0x20 + -0x560) = 0x431325;\n                fcn.004354c0();\n                *(*0x20 + -0x560) = 0x43132a;\n                fcn.00435120();\n                *(*0x20 + -0x560) = 0x43132f;\n                fcn.00434f40();\n                *(*0x20 + -0x560) = 0x431345;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x560) = 0x431356;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x431365;\n        fcn.0045bdc0();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n    *(*0x20 + -0x560) = 0x430fd9;\n    fcn.0040a740();\n    *(*0x20 + -0x4ff) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n    puVar8 = *0x20 + -0x4f0;\n    for (iVar7 = 0x9a; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *(*0x20 + -0x18) = *0x20 + -0x4f0 & 0xfffffffffffffff0;\n    *((*0x20 + -0x4f0 & 0xfffffffffffffff0) + 0x30) = 0x100001;\n    *(*0x20 + -0x560) = 0x431014;\n    fcn.0040a520();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SuspendThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x43102e;\n    fcn.00430880();\n    if (*(*0x20 + -0x548) == -1) {\n        *(*0x20 + -0x560) = 0x431265;\n        fcn.0040a740();\n        *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n        *(*0x20 + -0x550) = *(*0x20 + -0x510);\n        *(*0x20 + -0x560) = 0x43127f;\n        uVar6 = fcn.00430880();\n        iVar7 = *(*0x20 + -0x10);\n        *(iVar7 + 0x330) = 0;\n        LOCK();\n        piVar1 = iVar7 + 0x300;\n        *piVar1 = *piVar1 + 1;\n        return uVar6;\n    }\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_GetThreadContext;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x548) = *(*0x20 + -0x18);\n    *(*0x20 + -0x560) = 0x431075;\n    fcn.00430900();\n    *(*0x20 + -0x560) = 0x431095;\n    fcn.0040a740();\n    iVar7 = *(*0x20 + -0x18);\n    uVar6 = *(iVar7 + 0x98);\n    ppuVar9 = *(*0x20 + -0x10);\n    puVar10 = *ppuVar9;\n    if (((((puVar10 == NULL) || (uVar6 <= *puVar10)) || (puVar10[1] < uVar6 || puVar10[1] == uVar6)) &&\n        (((puVar10 = ppuVar9[10],  puVar10 == NULL || (uVar6 <= *puVar10)) ||\n         (puVar10[1] < uVar6 || puVar10[1] == uVar6)))) &&\n       (((puVar10 = ppuVar9[0x12],  puVar10 == NULL || (uVar6 <= *puVar10)) ||\n        (puVar10[1] < uVar6 || puVar10[1] == uVar6)))) {\n        puVar10 = NULL;\n    }\n    if (puVar10 == NULL) {\n        bVar12 = false;\n        goto code_r0x00431140;\n    }\n    if (*(puVar10 + 0xb1) == '\\0') {\n        if (*(puVar10[6] + 0xa0) == 0) {\n            bVar12 = false;\n            goto code_r0x00431140;\n        }\n        if (*(*(puVar10[6] + 0xa0) + 0x22c0) == '\\0') {\n            bVar12 = false;\n            goto code_r0x00431140;\n        }\n    }\n    bVar12 = (*(puVar10 + 0x12) & 0xffffefff) == 2;\ncode_r0x00431140:\n    if (bVar12) {\n        uVar4 = *(iVar7 + 0xf8);\n        arg1 = *(iVar7 + 0x98);\n        *(*0x20 + -0x560) = 0x431165;\n        cVar5 = fcn.00434980(arg1);\n        if (cVar5 != '\\0') {\n            iVar7 = *(*0x20 + -0x18);\n            puVar8 = *(iVar7 + 0x98) + -8;\n            *puVar8 = uVar4;\n            *(iVar7 + 0x98) = puVar8;\n            *(iVar7 + 0xf8) = fcn.0045f460;\n            *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SetThreadContext;\n            *(*0x20 + -0x550) = *(*0x20 + -0x510);\n            *(*0x20 + -0x548) = iVar7;\n            *(*0x20 + -0x560) = 0x4311b9;\n            fcn.00430900();\n        }\n        ppuVar9 = *(*0x20 + -0x10);\n    }\n    *(ppuVar9 + 0x66) = 0;\n    LOCK();\n    *(ppuVar9 + 0x60) = *(ppuVar9 + 0x60) + 1;\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_ResumeThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x431205;\n    fcn.00430880();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x431231;\n    uVar6 = fcn.00430880();\n    return uVar6;\n}\n",
        "token_count": 2699
    },
    "00431380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431380(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t *piVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x4313a7;\n            fcn.0044bc60();\n            *(*0x20 + -0x20) = 0x4313ac;\n            piVar1 = fcn.0044c400();\n            if ((unaff_RBX < 8) || (arg1 = 0x2e656d69746e7572,  *piVar1 != 0x2e656d69746e7572)) {\n                if ((unaff_R14 == 0) || ((arg1 = *(unaff_R14 + 0x30),  arg1 == 0 || (*(arg1 + 0xc0) == 0)))) {\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4313f8;\n                fcn.00433580();\n            }\n            unaff_RBX = *(*0x20 + 0x18);\n            *(*0x20 + -0x20) = 0x431407;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x43141c;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 563
    },
    "00431440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431440(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) || (*(*(unaff_R14 + 0x30) + 0xc0) == 0)) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x431486;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x431496;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 347
    },
    "00431d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00431d00(ulong noname_0, uint64_t arg2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar8 = *(unaff_R14 + 0x30);\n    uVar6 = *(iVar8 + 0xa0);\n    uVar7 = uVar6;\n    if (*(uVar6 + 0x70) != 0) goto code_r0x00431d6f;\n    if (*0x5460d8 == 0) goto code_r0x00431d6f;\n    fcn.0040a520();\n    arg2 = uVar6 + 0x68;\n    iStack40 = iVar8;\n    uStack24 = arg2;\n    uStack16 = uVar6;\n    while( true ) {\n        while ((iVar8 = *0x5460d8,  *(uVar6 + 0x70) < *(uVar6 + 0x78) >> 1 && (*0x5460d8 != 0))) {\n            if (*0x5985b0 == 0) {\n                puVar1 = *0x5460d8 + 0x28;\n                *0x5460d8 = *(*0x5460d8 + 0x28);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.0045e120(uVar6, arg2, *0x5460d8);\n                arg2 = fcn.0045e0a0(uVar6, 0, iVar8, iVar8 + 0x28);\n            }\n            uVar9 = *(uVar6 + 0x70) + 1;\n            iVar5 = *(uVar6 + 0x68);\n            uVar7 = *(uVar6 + 0x78);\n            arg4 = uVar7;\n            if (uVar7 < uVar9) {\n                iVar4 = iVar8;\n                iVar5 = fcn.00445800(uVar7);\n                *(uStack16 + 0x78) = uVar7;\n                uVar6 = uStack16;\n                arg2 = uStack24;\n                if (*0x5985b0 == 0) {\n                    *(uStack16 + 0x68) = iVar5;\n                }\n                else {\n                    iVar5 = fcn.0045df80(uVar7, uStack16, iVar4, arg4);\n                }\n            }\n            *(uVar6 + 0x70) = uVar9;\n            if (*0x5985b0 == 0) {\n                *(iVar5 + -8 + uVar9 * 8) = iVar8;\n            }\n            else {\n                fcn.0045e100(uVar6, arg2, iVar8, arg4);\n            }\n        }\n        fcn.0040a740();\n        iVar8 = iStack40;\n        uVar7 = uStack16;\ncode_r0x00431d6f:\n        iVar5 = *(uVar7 + 0x70);\n        if (iVar5 == 0) {\n            iVar4 = 0;\n            goto code_r0x00431dbb;\n        }\n        iVar4 = *(*(uVar7 + 0x68) + -8 + iVar5 * 8);\n        if (*0x5985b0 == 0) {\n            *(*(uVar7 + 0x68) + -8 + iVar5 * 8) = 0;\n        }\n        else {\n            fcn.0045e100(iVar5, arg2, 0, iVar4);\n        }\n        uVar6 = iVar5 - 1;\n        arg2 = *(uVar7 + 0x78);\n        if (uVar6 <= arg2) break;\n        fcn.0045e4a0(uVar6, arg2);\n    }\n    *(uVar7 + 0x70) = uVar6;\ncode_r0x00431dbb:\n    iVar3 = *(iVar8 + 0xd8);\n    *(iVar8 + 0xd8) = iVar3 + -1;\n    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    if (iVar4 == 0) {\n        iVar4 = fcn.0040c6e0();\n    }\n    *(iVar4 + 1) = 1;\n    return iVar4;\n}\n",
        "token_count": 1175
    },
    "00431f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431f20(ulong arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uchar (*in_RAX) [16];\n    int64_t iVar4;\n    int64_t arg1_00;\n    uint64_t uVar5;\n    int64_t arg1_01;\n    int64_t arg2_00;\n    int64_t arg2_01;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t arg3;\n    int64_t iVar8;\n    ulong in_R9;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    if (*0x5985b0 == 0) {\n        *(in_RAX[2] + 8) = 0;\n    }\n    else {\n        in_RAX = fcn.0045e100(arg1, arg2, 0, in_R9);\n    }\n    if (*in_RAX[2] != 0) {\n        fcn.00432200();\n    }\n    if (*(in_RAX[1] + 8) != 0) {\n        fcn.00432240();\n    }\n    if ((*in_RAX)[1] == '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg3 = *(unaff_R14 + 0x30);\n    arg2_00 = *(arg3 + 0xa0);\n    if (*(arg2_00 + 0x70) == *(arg2_00 + 0x78)) {\n        arg1_00 = 0;\n        iVar4 = 0;\n        iVar8 = arg3;\n        iVar9 = arg2_00;\n        while( true ) {\n            uVar5 = *(iVar9 + 0x70);\n            if (uVar5 <= *(iVar9 + 0x78) >> 1) break;\n            uVar7 = uVar5 - 1;\n            if (uVar5 <= uVar7) {\ncode_r0x004321da:\n                fcn.0045e420(uVar5);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar6 = *(*(iVar9 + 0x68) + -8 + uVar5 * 8);\n            if (*0x5985b0 == 0) {\n                *(*(iVar9 + 0x68) + -8 + uVar5 * 8) = 0;\n                arg1_01 = arg1_00;\n                arg2_01 = iVar4;\n                arg1_00 = iVar6;\n            }\n            else {\n                fcn.0045e0c0(arg1_00, iVar4, iVar8, iVar9);\n                arg1_01 = arg1_00;\n                arg2_01 = iVar4;\n                arg1_00 = iVar6;\n            }\n            uVar5 = *(iVar9 + 0x78);\n            if (uVar5 < uVar7) {\n                fcn.0045e4a0(uVar7, uVar5);\n                goto code_r0x004321da;\n            }\n            *(iVar9 + 0x70) = uVar7;\n            iVar4 = arg1_00;\n            if (arg2_01 != 0) {\n                if (*0x5985b0 == 0) {\n                    *(arg1_01 + 0x28) = arg1_00;\n                    iVar4 = arg2_01;\n                }\n                else {\n                    fcn.0045e0c0(arg1_01, arg2_01, iVar8, iVar9);\n                    iVar4 = arg2_01;\n                }\n            }\n        }\n        iVar6 = iVar4;\n        fcn.0040a520();\n        if (*0x5985b0 == 0) {\n            *(arg1_00 + 0x28) = *0x5460d8;\n            *0x5460d8 = iVar4;\n        }\n        else {\n            fcn.0045e080(*0x5460d8, iVar6, iVar8, iVar9);\n            fcn.0045e080(iVar4, iVar6, iVar8, iVar9);\n        }\n        fcn.0040a740();\n    }\n    if (*0x5985b0 == 0) {\n        *in_RAX = in_XMM15;\n        *(*in_RAX + 8) = in_XMM15;\n        *(in_RAX[1] + 8) = in_XMM15;\n        *(in_RAX[2] + 8) = in_XMM15;\n        *(in_RAX[3] + 8) = in_XMM15;\n    }\n    else {\n        fcn.00411580();\n    }\n    uVar7 = *(arg2_00 + 0x70) + 1;\n    iVar4 = *(arg2_00 + 0x68);\n    uVar5 = *(arg2_00 + 0x78);\n    if (uVar5 < uVar7) {\n        iVar8 = arg3;\n        iVar9 = arg2_00;\n        iVar4 = fcn.00445800(uVar5);\n        *(arg2_00 + 0x78) = uVar5;\n        if (*0x5985b0 == 0) {\n            *(arg2_00 + 0x68) = iVar4;\n        }\n        else {\n            uVar5 = arg2_00 + 0x68;\n            iVar4 = fcn.0045df80(uVar5, arg2_00, iVar8, iVar9);\n        }\n    }\n    *(arg2_00 + 0x70) = uVar7;\n    if (*0x5985b0 == 0) {\n        *(iVar4 + -8 + uVar7 * 8) = in_RAX;\n    }\n    else {\n        fcn.0045df80(uVar5, iVar4, arg3, arg2_00);\n    }\n    iVar2 = *(arg3 + 0xd8);\n    *(arg3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 1449
    },
    "00432280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432280(ulong param_1, ulong param_2, int64_t param_3, ulong param_4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t noname_0;\n    ulong uVar4;\n    uchar *noname_1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = unaff_R14;\n            noname_0 = *(*0x20 + -0x28);\n            while( true ) {\n                iVar3 = *(noname_0 + 0x28);\n                if (iVar3 == 0) {\n                    return;\n                }\n                noname_1 = *0x20 + 8;\n                if (*(iVar3 + 8) != noname_1) {\n                    return;\n                }\n                arg3 = noname_0 + 0x28;\n                if (*(iVar3 + 2) != '\\0') break;\n                uVar4 = *(iVar3 + 0x18);\n                if (*0x5985b0 == 0) {\n                    *(iVar3 + 0x18) = 0;\n                }\n                else {\n                    param_4 = 0;\n                    *(*0x20 + -0x40) = 0x43230b;\n                    iVar3 = fcn.0045e120(noname_0, noname_1, arg3);\n                    param_3 = arg3;\n                }\n                *(*0x20 + -0x20) = uVar4;\n                if (*0x5985b0 == 0) {\n                    *(noname_0 + 0x28) = *(iVar3 + 0x28);\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x432330;\n                    fcn.0045e0e0(noname_0, noname_1, param_3, param_4);\n                }\n                *(*0x20 + -0x40) = 0x4322a9;\n                fcn.00431f20(noname_0, noname_1);\n                pcVar1 = **(*0x20 + -0x20);\n                *(*0x20 + -0x40) = 0x4322b3;\n                (*pcVar1)();\n                noname_0 = *(*0x20 + -0x28);\n            }\n            *(*0x20 + -0x10) = arg3;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x40) = 0x432345;\n            cVar2 = fcn.00432a00(noname_0, noname_1, param_3, param_4);\n            if (cVar2 != '\\0') {\n                uVar4 = *(*(*0x20 + -0x18) + 0x28);\n                if (*0x5985b0 == 0) {\n                    noname_1 = *(*0x20 + -0x28);\n                    *(noname_1 + 0x28) = uVar4;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x432370;\n                    fcn.0045e080(uVar4, noname_1, param_3, param_4);\n                }\n                *(*0x20 + -0x40) = 0x432375;\n                fcn.00431f20(uVar4, noname_1);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x4323a5;\n            fcn.00433580();\n        }\n        *(puVar5 + -8) = 0x4323ab;\n        fcn.0045bdc0();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 966
    },
    "004323c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004323c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    for (; in_RAX != 0; in_RAX = *(in_RAX + 0x18)) {\n        uVar2 = *(in_RAX + 0x10);\n        if (*(in_RAX + 8) != 0) {\n            iVar1 = fcn.0040a140(uVar2);\n            if (iVar1 == 0) {\n                iVar1 = fcn.0040a140(uVar2);\n                if (iVar1 != 0) {\n                    (**(iVar1 + 0x18))();\n                    uVar2 = fcn.00409fe0();\n                    *(in_RAX + 8) = 0x496000;\n                    if (*0x5985b0 == 0) {\n                        *(in_RAX + 0x10) = uVar2;\n                    }\n                    else {\n                        fcn.0045df80(0x496000, in_RAX + 0x10, param_3, param_4);\n                    }\n                }\n            }\n            else {\n                (**(iVar1 + 0x18))();\n                uVar2 = fcn.00409fe0();\n                *(in_RAX + 8) = 0x496000;\n                if (*0x5985b0 == 0) {\n                    *(in_RAX + 0x10) = uVar2;\n                }\n                else {\n                    fcn.0045df80(0x496000, in_RAX + 0x10, param_3, param_4);\n                }\n            }\n        }\n    }\n    fcn.00457d60();\n    return;\n}\n",
        "token_count": 459
    },
    "00432540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432540(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((*(in_RAX + 0x18) != 0) && (fcn.00432540(),  *(*(in_RAX + 0x18) + 0x32) == '\\0')) {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00434f40();\n    }\n    if (*(in_RAX + 0x32) != '\\0') {\n        return;\n    }\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00434f40();\n    fcn.00407d00(*(in_RAX + 8));\n    if (*(in_RAX + 0x30) != '\\0') {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00434f40();\n    }\n    fcn.00434ec0();\n    fcn.00435120();\n    fcn.00434f40();\n    return;\n}\n",
        "token_count": 295
    },
    "00432a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00432a00(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    ulong uVar2;\n    int64_t arg1;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint8_t *arg2;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \ncode_r0x00432a00:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x40;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        arg2 = *(in_RAX + 0x30);\n        iVar6 = 0;\n        uVar8 = 0;\n        do {\n            uVar1 = *arg2;\n            arg2 = arg2 + 1;\n            if (uVar1 < 0x80) {\n                if (uVar8 < 0) goto code_r0x00432cca;\n                uVar7 = (uVar1 << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n                uVar3 = uVar7;\n                iVar6 = 0;\n                uVar8 = 0;\n                goto code_r0x00432a8e;\n            }\n            if (uVar8 < 0) goto code_r0x00432ce5;\n            iVar6 = ((uVar1 & 0xffffff7f) << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n            uVar8 = uVar8 + 7;\n        } while (uVar8 < 0x1d);\n        goto code_r0x00432ccf;\n    }\n    goto code_r0x00432ceb;\n    while( true ) {\n        if (uVar8 < 0) goto code_r0x00432cc5;\n        iVar6 = ((uVar1 & 0xffffff7f) << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n        uVar8 = uVar8 + 7;\n        if (0x1c < uVar8) break;\ncode_r0x00432a8e:\n        uVar1 = *arg2;\n        arg2 = arg2 + 1;\n        if (uVar1 < 0x80) {\n            if (uVar8 < 0) goto code_r0x00432caa;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x2c) = uVar7;\n            uVar7 = *(*(in_RAX + 0x38) - uVar3);\n            uVar8 = (uVar1 << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n            goto code_r0x00432b0c;\n        }\n    }\ncode_r0x00432caf:\n    *(*0x20 + -0x48) = 0x432cc5;\n    fcn.00432de0();\ncode_r0x00432cc5:\n    *(*0x20 + -0x48) = 0x432cca;\n    fcn.00431ba0();\ncode_r0x00432cca:\n    *(*0x20 + -0x48) = 0x432ccf;\n    fcn.00431ba0();\ncode_r0x00432ccf:\n    *(*0x20 + -0x48) = 0x432ce5;\n    fcn.00432de0();\ncode_r0x00432ce5:\n    *(*0x20 + -0x48) = 0x432cea;\n    in_RAX = fcn.00431ba0();\ncode_r0x00432ceb:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x432cf5;\n    fcn.0045bdc0();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x00432a00;\ncode_r0x00432c88:\n    *(*0x20 + -0x48) = 0x432c8d;\n    fcn.00431ba0();\ncode_r0x00432c8d:\n    *(*0x20 + -0x48) = 0x432ca5;\n    fcn.00432de0();\ncode_r0x00432ca5:\n    *(*0x20 + -0x48) = 0x432caa;\n    fcn.00431ba0();\ncode_r0x00432caa:\n    *(*0x20 + -0x48) = 0x432caf;\n    fcn.00431ba0();\n    goto code_r0x00432caf;\ncode_r0x00432b0c:\n    do {\n        uVar8 = uVar8 - 1;\n        if (uVar8 < 0) {\n            return 1;\n        }\n        iVar6 = 0;\n        uVar4 = 0;\n        while( true ) {\n            uVar1 = *arg2;\n            arg2 = arg2 + 1;\n            if (uVar1 < 0x80) break;\n            if (uVar4 < 0) goto code_r0x00432ca5;\n            iVar6 = ((uVar1 & 0xffffff7f) << (uVar4 & 0x1f) & -(uVar4 < 0x20)) + iVar6;\n            uVar4 = uVar4 + 7;\n            if (0x1c < uVar4) goto code_r0x00432c8d;\n        }\n        if (uVar4 < 0) goto code_r0x00432c88;\n        uVar9 = 1 << (uVar8 & 0x1f) & -(uVar8 < 0x20);\n    } while ((uVar9 & uVar7) == 0);\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -0x18) = arg2;\n    uVar2 = *(*(in_RAX + 0x38) - ((uVar1 << (uVar4 & 0x1f) & -(uVar4 < 0x20)) + iVar6));\n    *(*0x20 + -0x10) = in_RAX + 0x18;\n    uVar4 = uVar7 & ~uVar9;\n    if (*0x5985b0 == 0) {\n        *(in_RAX + 0x18) = uVar2;\n    }\n    else {\n        *(*0x20 + -0x48) = 0x432b90;\n        in_RAX = fcn.0045e080(uVar2, arg2, uVar8, uVar4);\n    }\n    *(*0x20 + -0x2d) = uVar4;\n    *(*(in_RAX + 0x38) - uVar3) = uVar4;\n    uVar2 = *(in_RAX + 0x20);\n    *(*0x20 + -0x20) = uVar2;\n    *(*0x20 + -0x48) = 0x432bb4;\n    uVar3 = fcn.00432d00(uVar2, arg2, uVar8, uVar4);\n    arg1 = *(*0x20 + -0x20);\n    if ((arg1 == 0) || (*(arg1 + 0x31) == '\\0')) {\n        if (*0x5985b0 == 0) {\n            in_RAX = *(*0x20 + 8);\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            *(*0x20 + -0x48) = 0x432bee;\n            uVar3 = fcn.0045e0a0(arg1, 0, uVar8, uVar4);\n            in_RAX = *(*0x20 + 8);\n        }\n        if ((*(in_RAX + 0x20) == 0) || (*(*(in_RAX + 0x20) + 0x30) == '\\0')) {\n            arg2 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x2c);\n            uVar8 = *(*0x20 + -0x28);\n            uVar7 = *(*0x20 + -0x2d);\n            goto code_r0x00432b0c;\n        }\n        uVar8 = uVar3 & 0xffffffffffffff00 | *(*0x20 + -0x2d) == '\\0';\n    }\n    else {\n        uVar8 = 1;\n    }\n    return uVar8;\n}\n",
        "token_count": 2081
    },
    "00432d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432d00(ulong *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong *arg2;\n    ulong *in_RAX;\n    ulong uVar1;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    ulong *puStackX8;\n    code **ppcStackX16;\n    \n    puStackX8 = in_RAX;\n    ppcStackX16 = unaff_RBX;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (puStackX8 != NULL) {\n        uVar1 = fcn.00433520();\n        arg2 = puStackX8;\n        if (*0x5985b0 == 0) {\n            *puStackX8 = uVar1;\n        }\n        else {\n            fcn.0045df80(arg1, noname_1, arg3, arg4);\n        }\n        arg2[4] = in_stack_00000000;\n        if (*0x5985b0 == 0) {\n            arg2[5] = &puStackX8;\n        }\n        else {\n            arg1 = arg2 + 5;\n            fcn.0045df80(arg1, arg2, arg3, arg4);\n        }\n    }\n    (**ppcStackX16)();\n    if (puStackX8 != NULL) {\n        puStackX8[4] = 0;\n        if (*0x5985b0 == 0) {\n            puStackX8[5] = 0;\n        }\n        else {\n            fcn.0045df80(arg1, ppcStackX16, arg3, arg4);\n        }\n    }\n    return;\n}\n",
        "token_count": 422
    },
    "00432de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432de0(ulong param_1, ulong param_2, int64_t param_3, char *param_4)\n\n{\n    char **ppcVar1;\n    code *pcVar2;\n    char cVar3;\n    ulong in_RAX;\n    char *pcVar4;\n    ulong uVar5;\n    char *pcVar6;\n    int64_t iVar7;\n    char *pcVar8;\n    int64_t iVar9;\n    ulong unaff_RBX;\n    ulong uVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    char *pcVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar9 = *(unaff_R14 + 0x30);\n            if (*(iVar9 + 0x90) == unaff_R14) {\n                if (*(iVar9 + 0xc0) == 0) {\n                    *(*0x20 + -0x48) = unaff_R14;\n                    if (*(iVar9 + 0xd0) == 0) {\n                        if (*(iVar9 + 0xd8) == 0) {\n                            *(*0x20 + -0x40) = in_XMM15;\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            *(*0x20 + -0x38) = in_RAX;\n                            *(*0x20 + -0x30) = unaff_RBX;\n                            *(*0x20 + -0x28) = *(unaff_R14 + 0x20);\n                            *(*0x20 + -0x50) = unaff_R14 + 0x20;\n                            if (*0x5985b0 == 0) {\n                                *(unaff_R14 + 0x20) = *0x20 + -0x40;\n                            }\n                            else {\n                                *(*0x20 + -0xc0) = 0x432ec5;\n                                fcn.0045e0e0(param_1, unaff_R14 + 0x20, param_3, param_4);\n                            }\n                            LOCK();\n                            *0x5983ac = *0x5983ac + 1;\n                            *(*0x20 + -0xc0) = 0x432ef3;\n                            fcn.00432640(*0x20 + 8);\ncode_r0x00432ef3:\n                            do {\n                                iVar9 = *(*0x20 + -0x48);\n                                pcVar4 = *(iVar9 + 0x28);\n                                if (pcVar4 == NULL) {\n                                    *(*0x20 + -0xc0) = 0x43318d;\n                                    fcn.004323c0();\n                                    *(*0x20 + -0xc0) = 0x43319b;\n                                    fcn.004339e0();\n                                    _pe_dos_header = 0;\n                                    return;\n                                }\n                                iVar7 = iVar9 + 0x28;\n                                if (*pcVar4 != '\\0') {\n                                    if (*(pcVar4 + 0x20) != 0) {\n                                        *(*(pcVar4 + 0x20) + 0x31) = 1;\n                                    }\n                                    if (*0x5985b0 == 0) {\n                                        *(pcVar4 + 0x20) = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x432f47;\n                                        pcVar4 = fcn.0045e0e0(iVar7, pcVar4 + 0x20, param_3, param_4);\n                                    }\n                                    if (pcVar4[2] == '\\0') {\n                                        if (*0x5985b0 == 0) {\n                                            *(pcVar4 + 0x18) = 0;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x432f74;\n                                            pcVar4 = fcn.0045e0e0(iVar7, pcVar4 + 0x18, param_3, param_4);\n                                        }\n                                        uVar5 = *(pcVar4 + 0x28);\n                                        if (*0x5985b0 == 0) {\n                                            *(iVar9 + 0x28) = uVar5;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x432f92;\n                                            fcn.0045e0a0(iVar7, uVar5, param_3, param_4);\n                                        }\n                                        *(*0x20 + -0xc0) = 0x432f97;\n                                        fcn.00431f20(iVar7, uVar5);\n                                        goto code_r0x00432ef3;\n                                    }\n                                }\n                                *pcVar4 = '\\x01';\n                                pcVar8 = pcVar4 + 0x20;\n                                if (*0x5985b0 == 0) {\n                                    *(pcVar4 + 0x20) = *0x20 + -0x40;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x432fcf;\n                                    pcVar4 = fcn.0045e0e0(iVar7, pcVar8, param_3, param_4);\n                                }\n                                *(*0x20 + -0x58) = iVar7;\n                                *(*0x20 + -0x70) = pcVar4;\n                                *(*0x20 + -0x60) = pcVar8;\n                                if (pcVar4[2] == '\\0') {\n                                    *(*0x20 + -0xc0) = 0x433030;\n                                    uVar5 = fcn.00433520();\n                                    *(*0x20 + -0x40) = uVar5;\n                                    pcVar2 = **(*(*0x20 + -0x70) + 0x18);\n                                    *(*0x20 + -0xc0) = 0x433043;\n                                    (*pcVar2)();\n                                    iVar9 = *(*0x20 + -0x70);\n                                    cVar3 = '\\x01';\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x432ff3;\n                                    cVar3 = fcn.00432a00(iVar7, pcVar8, param_3, param_4);\n                                    if (cVar3 == '\\0') {\n                                        iVar9 = *(*0x20 + -0x70);\n                                    }\n                                    else {\n                                        iVar9 = *(*0x20 + -0x70);\n                                        if (*(*(iVar9 + 0x20) + 0x30) == '\\0') {\n                                            *(*0x20 + -0x9a) = cVar3;\n                                            *(*0x20 + -0xc0) = 0x433018;\n                                            fcn.00432640(0);\n                                            cVar3 = *(*0x20 + -0x9a);\n                                            iVar9 = *(*0x20 + -0x70);\n                                        }\n                                    }\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                iVar7 = *(*0x20 + -0x48);\n                                if (*(iVar7 + 0x28) != iVar9) goto code_r0x00433325;\n                                if (*0x5985b0 == 0) {\n                                    *(iVar9 + 0x20) = 0;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x43308c;\n                                    cVar3 = fcn.0045e0c0(iVar7, iVar9, param_3, param_4);\n                                }\n                                uVar5 = *(iVar9 + 0x10);\n                                *(*0x20 + -0x98) = uVar5;\n                                uVar10 = *(iVar9 + 8);\n                                *(*0x20 + -0x88) = uVar10;\n                                if (cVar3 != '\\0') {\n                                    if (*0x5985b0 == 0) {\n                                        *(iVar9 + 0x18) = 0;\n                                    }\n                                    else {\n                                        param_4 = NULL;\n                                        *(*0x20 + -0xc0) = 0x4330ca;\n                                        cVar3 = fcn.0045e120(iVar7, uVar5, iVar9);\n                                    }\n                                    *(*0x20 + -0x99) = cVar3;\n                                    if (*0x5985b0 == 0) {\n                                        *(iVar7 + 0x28) = *(iVar9 + 0x28);\n                                        param_3 = iVar9;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x4330f4;\n                                        fcn.0045e0e0(iVar7, uVar5, iVar9, param_4);\n                                        param_3 = iVar9;\n                                    }\n                                    *(*0x20 + -0xc0) = 0x4330fc;\n                                    fcn.00431f20(iVar7, uVar5);\n                                    cVar3 = *(*0x20 + -0x99);\n                                    iVar7 = *(*0x20 + -0x48);\n                                    uVar5 = *(*0x20 + -0x98);\n                                    uVar10 = *(*0x20 + -0x88);\n                                }\n                            } while (*(*0x20 + -0x10) == '\\0');\n                            iVar9 = *(*0x20 + -0x28);\n                            if (*0x5985b0 == 0) {\n                                *(iVar7 + 0x20) = iVar9;\n                                pcVar4 = *(*0x20 + -0x50);\n                            }\n                            else {\n                                pcVar4 = *(*0x20 + -0x50);\n                                *(*0x20 + -0xc0) = 0x433145;\n                                cVar3 = fcn.0045e0e0(iVar7, uVar5, param_3, param_4);\n                            }\n                            if (((iVar9 == 0) || (*(iVar9 + 0x32) == '\\0')) || (*(iVar9 + 0x31) == '\\0')) {\n                                LOCK();\n                                *0x5983ac = *0x5983ac + -1;\n                                pcVar8 = *(iVar7 + 0x28);\n                                if (cVar3 == '\\0') {\n                                    pcVar6 = pcVar8;\n                                    pcVar12 = *(pcVar8 + 0x28);\n                                    pcVar8 = *(pcVar8 + 0x28);\n                                }\n                                else {\n                                    pcVar6 = NULL;\n                                    pcVar12 = pcVar8;\n                                    pcVar8 = 0x5983ac;\n                                }\n                                while ((pcVar12 != NULL && (*pcVar12 == '\\0'))) {\n                                    if (pcVar12[2] == '\\0') {\n                                        ppcVar1 = pcVar12 + 0x28;\n                                        pcVar6 = pcVar12;\n                                        pcVar12 = *ppcVar1;\n                                        pcVar8 = *ppcVar1;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x80) = pcVar6;\n                                        if (pcVar6 == NULL) {\n                                            uVar10 = *(pcVar12 + 0x28);\n                                            if (*0x5985b0 == 0) {\n                                                *(iVar7 + 0x28) = uVar10;\n                                                param_4 = *(*0x20 + -0x50);\n                                            }\n                                            else {\n                                                *(*0x20 + -0xc0) = 0x433239;\n                                                fcn.0045e100(iVar7, uVar5, uVar10, pcVar4);\n                                                param_4 = pcVar4;\n                                            }\n                                        }\n                                        else {\n                                            uVar10 = *(pcVar12 + 0x28);\n                                            if (*0x5985b0 == 0) {\n                                                *(pcVar6 + 0x28) = uVar10;\n                                            }\n                                            else {\n                                                param_4 = pcVar6 + 0x28;\n                                                *(*0x20 + -0xc0) = 0x43320a;\n                                                fcn.0045e100(iVar7, uVar5, uVar10, param_4);\n                                            }\n                                        }\n                                        uVar10 = *(pcVar12 + 0x28);\n                                        *(*0x20 + -0x78) = uVar10;\n                                        *(*0x20 + -0xc0) = 0x43324a;\n                                        fcn.00431f20(uVar10, uVar5);\n                                        iVar7 = *(*0x20 + -0x48);\n                                        uVar5 = *(*0x20 + -0x98);\n                                        uVar10 = *(*0x20 + -0x88);\n                                        pcVar4 = *(*0x20 + -0x50);\n                                        pcVar12 = *(*0x20 + -0x78);\n                                        pcVar6 = *(*0x20 + -0x80);\n                                        pcVar8 = pcVar12;\n                                    }\n                                }\n                                if (*0x5985b0 == 0) {\n                                    *(iVar7 + 0x20) = *(*0x20 + -0x28);\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x433289;\n                                    fcn.0045e0e0(iVar7, uVar5, pcVar8, param_4);\n                                }\n                                while( true ) {\n                                    iVar9 = *(iVar7 + 0x20);\n                                    if (iVar9 == 0) goto code_r0x004332e5;\n                                    if (*(iVar9 + 0x31) == '\\0') break;\n                                    if (*0x5985b0 == 0) {\n                                        *(iVar7 + 0x20) = *(iVar9 + 0x18);\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x4332b0;\n                                        fcn.0045e0e0(iVar7, uVar5, pcVar8, param_4);\n                                    }\n                                }\n                                if (iVar9 == 0) goto code_r0x004332e5;\n                                do {\n                                    *(iVar7 + 0x110) = uVar10;\n                                    *(iVar7 + 0x118) = uVar5;\n                                    *(*0x20 + -0xc0) = 0x4332d1;\n                                    fcn.0045bc00();\n                                    uVar10 = 0xf;\n                                    *(*0x20 + -0xc0) = 0x4332e5;\n                                    fcn.00433580();\ncode_r0x004332e5:\n                                    *(iVar7 + 0xf0) = 0;\n                                } while( true );\n                            }\n                            *(iVar7 + 0x110) = *(iVar9 + 0x28);\n                            *(iVar7 + 0x118) = *(iVar9 + 0x20);\n                            *(*0x20 + -0xc0) = 0x433313;\n                            fcn.0045bc00();\n                            *(*0x20 + -0xc0) = 0x433325;\n                            fcn.00433580();\ncode_r0x00433325:\n                            *(*0x20 + -0xc0) = 0x433336;\n                            fcn.00433580();\n                        }\n                        *(*0x20 + -0xc0) = 0x43333b;\n                        fcn.00434ec0();\n                        *(*0x20 + -0xc0) = 0x43334c;\n                        fcn.004357c0();\n                        *(*0x20 + -0xc0) = 0x433351;\n                        fcn.00434f40();\n                        *(*0x20 + -0xc0) = 0x433366;\n                        fcn.00407d00();\n                        *(*0x20 + -0xc0) = 0x43336b;\n                        fcn.00434ec0();\n                        *(*0x20 + -0xc0) = 0x433370;\n                        fcn.00435120();\n                        *(*0x20 + -0xc0) = 0x433375;\n                        fcn.00434f40();\n                        *(*0x20 + -0xc0) = 0x433386;\n                        fcn.00433580();\n                    }\n                    *(*0x20 + -0xc0) = 0x43338b;\n                    fcn.00434ec0();\n                    *(*0x20 + -0xc0) = 0x43339c;\n                    fcn.004357c0();\n                    *(*0x20 + -0xc0) = 0x4333a5;\n                    fcn.00434f40();\n                    *(*0x20 + -0xc0) = 0x4333ba;\n                    fcn.00407d00();\n                    *(*0x20 + -0xc0) = 0x4333bf;\n                    fcn.00434ec0();\n                    *(*0x20 + -0xc0) = 0x4333c5;\n                    fcn.00435120();\n                    *(*0x20 + -0xc0) = 0x4333ca;\n                    fcn.00434f40();\n                    *(*0x20 + -0xc0) = 0x4333cf;\n                    fcn.00434ec0();\n                    *(*0x20 + -0xc0) = 0x4333e5;\n                    fcn.004357c0();\n                    *(*0x20 + -0xc0) = 0x4333ea;\n                    fcn.00434f40();\n                    iVar9 = *(*(*0x20 + -0x48) + 0x30);\n                    param_1 = *(iVar9 + 200);\n                    *(*0x20 + -0x68) = param_1;\n                    *(*0x20 + -0x90) = *(iVar9 + 0xd0);\n                    *(*0x20 + -0xc0) = 0x433410;\n                    fcn.00434ec0();\n                    *(*0x20 + -0xc0) = 0x43341f;\n                    fcn.004357c0();\n                    *(*0x20 + -0xc0) = 0x433425;\n                    fcn.00434f40();\n                    *(*0x20 + -0xc0) = 0x43342a;\n                    fcn.00434ec0();\n                    *(*0x20 + -0xc0) = 0x43342f;\n                    fcn.00435120();\n                    *(*0x20 + -0xc0) = 0x433434;\n                    fcn.00434f40();\n                    *(*0x20 + -0xc0) = 0x433445;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0xc0) = 0x43344a;\n                fcn.00434ec0();\n                *(*0x20 + -0xc0) = 0x43345b;\n                fcn.004357c0();\n                *(*0x20 + -0xc0) = 0x433465;\n                fcn.00434f40();\n                *(*0x20 + -0xc0) = 0x43347a;\n                fcn.00407d00();\n                *(*0x20 + -0xc0) = 0x43347f;\n                fcn.00434ec0();\n                *(*0x20 + -0xc0) = 0x433485;\n                fcn.00435120();\n                *(*0x20 + -0xc0) = 0x43348a;\n                fcn.00434f40();\n                *(*0x20 + -0xc0) = 0x43349b;\n                fcn.00433580();\n            }\n            *(*0x20 + -0xc0) = 0x4334a5;\n            fcn.00434ec0();\n            *(*0x20 + -0xc0) = 0x4334b6;\n            fcn.004357c0();\n            *(*0x20 + -0xc0) = 0x4334bb;\n            fcn.00434f40();\n            *(*0x20 + -0xc0) = 0x4334d0;\n            fcn.00407d00();\n            *(*0x20 + -0xc0) = 0x4334d5;\n            fcn.00434ec0();\n            *(*0x20 + -0xc0) = 0x4334da;\n            fcn.00435120();\n            *(*0x20 + -0xc0) = 0x4334df;\n            fcn.00434f40();\n            unaff_RBX = 0x15;\n            *(*0x20 + -0xc0) = 0x4334f0;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + -8) = 0x433505;\n        fcn.0045bdc0();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 4858
    },
    "00433540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00433540(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    piVar1 = *(unaff_R14 + 0x20);\n    if ((((piVar1 != NULL) && (*(piVar1 + 0x32) == '\\0')) && (*(piVar1 + 6) == '\\0')) && (in_RAX == *piVar1)) {\n        *(piVar1 + 6) = 1;\n        return piVar1[1];\n    }\n    return 0;\n}\n",
        "token_count": 134
    },
    "004338c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004338c0(void)\n\n{\n    uint in_EAX;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0xc4) == 0) {\n        *(*(unaff_R14 + 0x30) + 0xc4) = in_EAX;\n    }\n    fcn.0045bc80();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 102
    },
    "00433b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00433b60(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x571078 == 0) {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00434f40();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xc0;\n    *piVar1 = *piVar1 + 1;\n    if (*(*(unaff_R14 + 0x30) + 0xd8) < 0) {\n        *(*(unaff_R14 + 0x30) + 0xd8) = 1;\n    }\n    iVar3 = *(unaff_R14 + 0x30);\n    iVar2 = *(iVar3 + 0xdc);\n    if (iVar2 != 0) {\n        if (iVar2 != 1) {\n            if (iVar2 == 2) {\n                *(iVar3 + 0xdc) = 3;\n                fcn.00434ec0();\n                fcn.004357c0();\n                fcn.00434f40();\n                fcn.0042f5c0();\n            }\n            fcn.0042f5c0();\n            return 0;\n        }\n        *(iVar3 + 0xdc) = 2;\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00434f40();\n        return 0;\n    }\n    *(iVar3 + 0xdc) = 1;\n    iVar2 = *0x5983a4;\n    LOCK();\n    *0x5983a4 = *0x5983a4 + 1;\n    fcn.0040a4e0(iVar2);\n    if ((0 < *0x598830) || (0 < *0x59882c)) {\n        fcn.00440f60();\n    }\n    fcn.00437500();\n    return 1;\n}\n",
        "token_count": 505
    },
    "00433ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00433ce0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t in_RAX;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*(in_RAX + 0xf0) != 0) {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00435620();\n        fcn.00434f40();\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00435620();\n        fcn.004357c0();\n        fcn.00435620();\n        fcn.004357c0();\n        fcn.00435620();\n        fcn.004357c0();\n        fcn.00434f40();\n    }\n    uVar6 = *0x52d26c;\n    uVar2 = *(*(unaff_R14 + 0x30) + 0xc4);\n    if (uVar2 == 0) {\n        bVar8 = (*0x52d26c >> 1 & 1) != 0;\n    }\n    else {\n        bVar8 = true;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    uVar7 = uVar1;\n    if ((uVar1 == 0) && (uVar7 = *0x52d26c >> 2,  1 < uVar2)) {\n        uVar7 = 2;\n    }\n    if (uVar7 != 0) {\n        piVar3 = *(in_RAX + 0x30);\n        iVar4 = piVar3[0x12];\n        if (*piVar3 == in_RAX) {\n            if ((1 < uVar7) || (1 < *(piVar3 + 0xc4))) {\n                fcn.00434ec0();\n                fcn.004357c0();\n                fcn.00434f40();\n                fcn.00453ba0(0);\n            }\n        }\n        else {\n            fcn.00434ec0();\n            fcn.00435120();\n            fcn.00434f40();\n            fcn.00454940();\n            fcn.00453ba0(0);\n        }\n        if ((*0x598345 == '\\0') && (iVar4 != in_RAX | bVar8)) {\n            *0x598345 = '\\x01';\n            fcn.00454b80();\n        }\n    }\n    fcn.0040a740();\n    LOCK();\n    iVar5 = *0x5983a4 + -1;\n    bVar8 = *0x5983a4 != 1;\n    *0x5983a4 = iVar5;\n    if (bVar8) {\n        fcn.0040a520();\n        fcn.0040a520();\n    }\n    return uVar6 & 1;\n}\n",
        "token_count": 760
    },
    "00433fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00433fa0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    if (*(iVar3 + 0x90) != unaff_R14) {\n        iVar2 = *(iVar3 + 0xd8);\n        *(iVar3 + 0xd8) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        return 0;\n    }\n    iVar2 = *(iVar3 + 0xd8);\n    if ((((iVar2 == 1) && (*(iVar3 + 0xc0) == 0)) && (*(iVar3 + 0xc4) == 0)) &&\n       ((*(iVar3 + 0xd0) == 0 && (*(iVar3 + 0xdc) == 0)))) {\n        if (((*(unaff_R14 + 0x90) & 0xffffefff) == 2) && (*(unaff_R14 + 0x70) == 0)) {\n            if (*(iVar3 + 0x2b0) != 0) {\n                iVar2 = *(iVar3 + 0xd8);\n                *(iVar3 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return 0;\n            }\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            return 1;\n        }\n        iVar2 = *(iVar3 + 0xd8);\n        *(iVar3 + 0xd8) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        return 0;\n    }\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return 0;\n}\n",
        "token_count": 659
    },
    "004340e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004340e0(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.0044bc60();\n    if (uVar1 != 0) {\n        return uVar1 & 0xffffffffffffff00 | *(uVar1 + 0x28) == '\\x01';\n    }\n    return 0;\n}\n",
        "token_count": 82
    },
    "00434680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00434680(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int64_t in_RAX;\n    char unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_BL != '\\0') {\n                return;\n            }\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x29) = param_1;\n            uVar1 = *(in_RAX + 0x90);\n            if ((uVar1 == 0x1001) || (uVar1 - 0x1003 < 2)) {\n                *(*0x20 + -0x50) = 0x4346d2;\n                fcn.004375a0(uVar1 & 0xffffefff);\n                if (*(*0x20 + -0x29) != '\\0') {\n                    *(*0x20 + -0x50) = 0x4346ec;\n                    fcn.004372e0(1);\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x24) = *(in_RAX + 0x90);\n            *(*0x20 + -0x20) = *(in_RAX + 0x98);\n            *(*0x20 + -0x50) = 0x434725;\n            fcn.00434ec0();\n            *(*0x20 + -0x50) = 0x434736;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x434745;\n            fcn.00435740();\n            *(*0x20 + -0x50) = 0x434756;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x434765;\n            fcn.004354c0();\n            *(*0x20 + -0x50) = 0x434776;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x434785;\n            fcn.004354c0();\n            *(*0x20 + -0x50) = 0x43478a;\n            fcn.00435120();\n            *(*0x20 + -0x50) = 0x43478f;\n            fcn.00434f40();\n            uVar2 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar2;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x50) = 0x4347af;\n            fcn.00434ec0();\n            *(*0x20 + -0x50) = 0x4347c5;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x4347cf;\n            fcn.00435740();\n            *(*0x20 + -0x50) = 0x4347e5;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x4347ef;\n            fcn.004354c0();\n            *(*0x20 + -0x50) = 0x434805;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x434810;\n            fcn.004354c0();\n            *(*0x20 + -0x50) = 0x434815;\n            fcn.00435120();\n            *(*0x20 + -0x50) = 0x43481a;\n            fcn.00434f40();\n            unaff_BL = '\\x13';\n            *(*0x20 + -0x50) = 0x43482b;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        puVar3[0x11] = param_1;\n        *(puVar3 + -8) = 0x43483e;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        param_1 = puVar3[0x11];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1156
    },
    "004604a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004604a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    iVar1 = **(in_GS_OFFSET + *0x598520);\n    *(iVar1 + 0xb4) = 1;\n    if (*(iVar1 + 0xb2) == '\\0') {\n        fcn.0045bc00();\n    }\n    else {\n        fcn.0045bc00();\n    }\n    *(iVar1 + 0xb4) = 0;\n    return;\n}\n",
        "token_count": 119
    },
    "00434f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00434f40(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n    *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n    if (cVar1 == '\\x01') {\n        fcn.0040a740();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00434fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00434fa0(uint64_t arg1)\n\n{\n    uint64_t arg2;\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x434fdd;\n            fcn.00434d40(arg1);\n            if (unaff_R14 == 0) {\ncode_r0x0043507d:\n                *(*0x20 + -0x38) = 0x435091;\n                fcn.00457920(*(*0x20 + 0x18));\n                return;\n            }\n            if ((*(unaff_R14 + 0xf8) == 0) || (0 < *(*(unaff_R14 + 0x30) + 0xdc))) goto code_r0x0043507d;\n            iVar1 = *(unaff_R14 + 0x108) - *(unaff_R14 + 0x100);\n            arg1_00 = iVar1;\n            if (*(*0x20 + 0x10) < iVar1) {\n                arg1_00 = *(*0x20 + 0x10);\n            }\n            iVar2 = unaff_R14;\n            if (*(*0x20 + 8) != *(unaff_R14 + 0xf8) + (*(unaff_R14 + 0x100) & -iVar1 >> 0x3f)) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = 0x43504c;\n                fcn.0045eda0(arg1_00);\n                arg1_00 = *(*0x20 + -0x18);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            arg2 = *(iVar2 + 0x108);\n            unaff_RBX = *(iVar2 + 0x100);\n            arg1 = arg1_00 + unaff_RBX;\n            if (arg1 <= arg2) {\n                *(iVar2 + 0x100) = arg1;\n                return;\n            }\n            *(*0x20 + -0x38) = 0x4350ad;\n            in_RAX = fcn.0045e4a0(arg1, arg2);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x4350c5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 869
    },
    "004360a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004360a0(uint64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uchar unaff_DIL;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg2 = *(unaff_R14 + 0x30);\n            arg3 = *(arg2 + 0x90);\n            if ((*(arg3 + 0x90) == 2) || (*(arg3 + 0x90) == 0x1002)) {\n                if (*0x5985b0 == 0) {\n                    *(arg2 + 0x250) = unaff_RBX;\n                    *(arg2 + 0x248) = in_RAX;\n                }\n                else {\n                    arg4 = arg2 + 0x250;\n                    *(*0x20 + -0x20) = 0x43611e;\n                    fcn.0045e0c0(param_1, arg2, arg3, arg4);\n                    *(*0x20 + -0x20) = 0x43612a;\n                    fcn.0045df80(param_1, arg2, arg3, arg4);\n                }\n                *(arg3 + 0xb0) = param_1;\n                *(arg2 + 600) = unaff_DIL;\n                *(arg2 + 0x260) = unaff_RSI;\n                iVar2 = *(arg2 + 0xd8);\n                *(arg2 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                *(*0x20 + -0x20) = 0x436176;\n                fcn.0045bc00();\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x436192;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        puVar3[0x19] = unaff_DIL;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x4361b0;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        unaff_DIL = puVar3[0x19];\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 834
    },
    "004362a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004362a0(ulong noname_0, uint64_t arg2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t iVar10;\n    uint64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar5 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar5 + 0xa0);\n    uVar7 = uVar4;\n    if (*(uVar4 + 0x9b8) != 0) goto code_r0x00436305;\n    arg4 = unaff_R14;\n    fcn.0040a520();\n    arg2 = uVar4 + 0x9b0;\n    iStack40 = iVar5;\n    uStack24 = arg2;\n    uStack16 = uVar4;\n    do {\n        while ((uVar7 = *0x5460c8,  uVar9 = *(uVar4 + 0x9c0) >> 1,  *(uVar4 + 0x9b8) < uVar9 &&\n               (uVar9 = *0x5460c8,  *0x5460c8 != 0))) {\n            if (*0x5985b0 == 0) {\n                puVar1 = *0x5460c8 + 8;\n                *0x5460c8 = *(*0x5460c8 + 8);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.0045e120(uVar4, arg2, *0x5460c8);\n                fcn.0045e120(uVar4, arg2, uVar7);\n            }\n            uVar8 = *(uVar4 + 0x9b8) + 1;\n            iVar5 = *(uVar4 + 0x9b0);\n            uVar9 = *(uVar4 + 0x9c0);\n            arg4 = uVar9;\n            if (uVar9 < uVar8) {\n                arg3 = uVar7;\n                iVar5 = fcn.00445800(uVar9);\n                *(uStack16 + 0x9c0) = uVar9;\n                uVar4 = uStack16;\n                arg2 = uStack24;\n                if (*0x5985b0 == 0) {\n                    *(uStack16 + 0x9b0) = iVar5;\n                }\n                else {\n                    iVar5 = fcn.0045df80(uVar9, uStack16, arg3, arg4);\n                }\n            }\n            *(uVar4 + 0x9b8) = uVar8;\n            if (*0x5985b0 == 0) {\n                *(iVar5 + -8 + uVar8 * 8) = uVar7;\n            }\n            else {\n                fcn.0045e100(uVar4, arg2, uVar7, arg4);\n            }\n        }\n        fcn.0040a740();\n        iVar5 = iStack40;\n        uVar7 = uStack16;\n        if (*(uStack16 + 0x9b8) == 0) {\n            uVar6 = fcn.0040c6e0();\n            arg2 = *(uStack16 + 0x9b0);\n            uVar4 = *(uStack16 + 0x9c0);\n            uVar8 = *(uStack16 + 0x9b8) + 1;\n            if (uVar4 < uVar8) {\n                arg2 = fcn.00445800(uVar4);\n                *(uStack16 + 0x9c0) = uVar4;\n                if (*0x5985b0 == 0) {\n                    *(uStack16 + 0x9b0) = arg2;\n                }\n                else {\n                    arg2 = fcn.0045df80(uVar4, uStack16, uVar9, arg4);\n                }\n            }\n            *(uVar7 + 0x9b8) = uVar8;\n            if (*0x5985b0 == 0) {\n                *((arg2 - 8) + uVar8 * 8) = uVar6;\n            }\n            else {\n                fcn.0045df80(uVar7, arg2, uVar9, arg4);\n            }\n        }\ncode_r0x00436305:\n        uVar4 = *(uVar7 + 0x9b8);\n        arg4 = *(uVar7 + 0x9b0);\n        uVar9 = uVar4 - 1;\n        if (uVar9 < uVar4) {\n            iVar10 = *((arg4 - 8) + uVar4 * 8);\n            if (*0x5985b0 == 0) {\n                *((arg4 - 8) + uVar4 * 8) = 0;\n            }\n            else {\n                arg4 = 0;\n                fcn.0045e120(uVar9, arg2, uVar7);\n            }\n            uVar4 = *(uVar7 + 0x9c0);\n            if (uVar9 <= uVar4) {\n                *(uVar7 + 0x9b8) = uVar9;\n                if (*(iVar10 + 0x18) == 0) {\n                    iVar3 = *(iVar5 + 0xd8);\n                    *(iVar5 + 0xd8) = iVar3 + -1;\n                    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return iVar10;\n                }\n                fcn.00433580();\n            }\n            uVar4 = fcn.0045e4a0(uVar9, uVar4);\n        }\n        arg2 = uVar4;\n        fcn.0045e420(uVar4);\n    } while( true );\n}\n",
        "token_count": 1445
    },
    "004365a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004365a0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t arg1;\n    uint64_t uVar5;\n    int64_t arg1_00;\n    int64_t arg2;\n    int64_t arg2_00;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t arg3;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    if (*(in_RAX + 0x18) == 0) {\n        if (*(in_RAX + 0x34) == '\\0') {\n            if (*(in_RAX + 8) == 0) {\n                if (*(in_RAX + 0x10) == 0) {\n                    if (*(in_RAX + 0x40) == 0) {\n                        if (*(in_RAX + 0x50) == 0) {\n                            if (*(unaff_R14 + 0x88) == 0) {\n                                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                                *piVar1 = *piVar1 + 1;\n                                arg3 = *(unaff_R14 + 0x30);\n                                arg2 = *(arg3 + 0xa0);\n                                if (*(arg2 + 0x9b8) == *(arg2 + 0x9c0)) {\n                                    arg1 = 0;\n                                    iVar4 = 0;\n                                    iVar8 = arg3;\n                                    iVar9 = arg2;\n                                    while( true ) {\n                                        uVar5 = *(iVar9 + 0x9b8);\n                                        if (uVar5 <= *(iVar9 + 0x9c0) >> 1) break;\n                                        uVar7 = uVar5 - 1;\n                                        if (uVar5 <= uVar7) {\ncode_r0x00436851:\n                                            fcn.0045e420(uVar5);\n                                            goto code_r0x0043685c;\n                                        }\n                                        iVar6 = *(*(iVar9 + 0x9b0) + -8 + uVar5 * 8);\n                                        if (*0x5985b0 == 0) {\n                                            *(*(iVar9 + 0x9b0) + -8 + uVar5 * 8) = 0;\n                                            arg1_00 = arg1;\n                                            arg2_00 = iVar4;\n                                            arg1 = iVar6;\n                                        }\n                                        else {\n                                            fcn.0045e0c0(arg1, iVar4, iVar8, iVar9);\n                                            arg1_00 = arg1;\n                                            arg2_00 = iVar4;\n                                            arg1 = iVar6;\n                                        }\n                                        uVar5 = *(iVar9 + 0x9c0);\n                                        if (uVar5 < uVar7) {\n                                            fcn.0045e4a0(uVar7, uVar5);\n                                            goto code_r0x00436851;\n                                        }\n                                        *(iVar9 + 0x9b8) = uVar7;\n                                        iVar4 = arg1;\n                                        if (arg2_00 != 0) {\n                                            if (*0x5985b0 == 0) {\n                                                *(arg1_00 + 8) = arg1;\n                                                iVar4 = arg2_00;\n                                            }\n                                            else {\n                                                fcn.0045e0c0(arg1_00, arg2_00, iVar8, iVar9);\n                                                iVar4 = arg2_00;\n                                            }\n                                        }\n                                    }\n                                    iVar6 = iVar4;\n                                    fcn.0040a520();\n                                    if (*0x5985b0 == 0) {\n                                        *(arg1 + 8) = *0x5460c8;\n                                        *0x5460c8 = iVar4;\n                                    }\n                                    else {\n                                        fcn.0045e080(*0x5460c8, iVar6, iVar8, iVar9);\n                                        fcn.0045e080(iVar4, iVar6, iVar8, iVar9);\n                                    }\n                                    fcn.0040a740();\n                                }\n                                uVar7 = *(arg2 + 0x9b8) + 1;\n                                iVar4 = *(arg2 + 0x9b0);\n                                uVar5 = *(arg2 + 0x9c0);\n                                if (uVar5 < uVar7) {\n                                    iVar8 = arg3;\n                                    iVar9 = arg2;\n                                    iVar4 = fcn.00445800(uVar5);\n                                    *(arg2 + 0x9c0) = uVar5;\n                                    if (*0x5985b0 == 0) {\n                                        *(arg2 + 0x9b0) = iVar4;\n                                    }\n                                    else {\n                                        uVar5 = arg2 + 0x9b0;\n                                        iVar4 = fcn.0045df80(uVar5, arg2, iVar8, iVar9);\n                                    }\n                                }\n                                *(arg2 + 0x9b8) = uVar7;\n                                if (*0x5985b0 == 0) {\n                                    *(iVar4 + -8 + uVar7 * 8) = in_RAX;\n                                }\n                                else {\n                                    fcn.0045df80(uVar5, iVar4, arg3, arg2);\n                                }\n                                iVar2 = *(arg3 + 0xd8);\n                                *(arg3 + 0xd8) = iVar2 + -1;\n                                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                return;\n                            }\ncode_r0x0043685c:\n                            fcn.00433580();\n                        }\n                        fcn.00433580();\n                    }\n                    fcn.00433580();\n                }\n                fcn.00433580();\n            }\n            fcn.00433580();\n        }\n        fcn.00433580();\n    }\n    fcn.00433580();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1367
    },
    "00436a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436a40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t arg1;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x90) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x436a7b;\n                fcn.0040a520();\n                uVar4 = *0x545598 + 1;\n                iVar3 = *0x545590;\n                arg1 = *0x5455a0;\n                iVar2 = *0x545590;\n                if (*0x5455a0 < uVar4) {\n                    *(*0x20 + -0x58) = 0x436aa9;\n                    iVar3 = fcn.00445800(*0x5455a0);\n                    arg1 = *0x5455a0;\n                    iVar2 = iVar3;\n                    if (*0x5985b0 != 0) {\n                        *(*0x20 + -0x58) = 0x436ace;\n                        iVar3 = fcn.0045df80(*0x5455a0, param_2, param_3, param_4);\n                        iVar2 = *0x545590;\n                    }\n                }\n                *0x545590 = iVar2;\n                *0x545598 = uVar4;\n                if (*0x5985b0 == 0) {\n                    param_2 = *(*0x20 + 8);\n                    *(iVar3 + -8 + uVar4 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(*0x20 + 8);\n                    *(*0x20 + -0x58) = 0x436afc;\n                    fcn.0045e0a0(arg1, param_2, param_3, param_4);\n                }\n                if (*0x545598 != 0) {\n                    iVar3 = *0x544bd0;\n                    if ((*0x544bd0 != *0x545590) && (iVar3 = *0x545590,  *0x5985b0 != '\\0')) {\n                        *(*0x20 + -0x10) = *0x545590;\n                        *(*0x20 + -0x58) = 0x436b33;\n                        fcn.004037e0();\n                        iVar3 = *(*0x20 + -0x10);\n                    }\n                    *0x544bd0 = iVar3;\n                    uVar1 = *0x5983d8;\n                    *0x5983d8 = *0x545598;\n                    *(*0x20 + -0x58) = 0x436b65;\n                    fcn.0040a740(uVar1);\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x436b79;\n                fcn.0045e420(0);\n            }\n            *(*0x20 + -0x58) = 0x436b8a;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x436b95;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 913
    },
    "00437100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437100(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    ulong arg1;\n    int64_t arg2;\n    uint64_t arg2_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (**(unaff_R14 + 0x30) != unaff_R14) {\n        fcn.00454460(0x20);\n    }\n    fcn.0040a520();\n    if (unaff_RBX < 0) {\n        uVar4 = fcn.004370a0();\n        *(in_RAX + 0xb8) = uVar4;\n    }\n    else {\n        *(in_RAX + 0xb8) = unaff_RBX;\n    }\n    uVar4 = *(in_RAX + 0xb8);\n    arg2 = in_RAX;\n    uVar2 = fcn.0045dec0();\n    fcn.0045de00(uVar4, arg2);\n    uVar3 = fcn.0045dec0();\n    if ((uVar2 | uVar3) == 0) {\n        uVar3 = 1;\n    }\n    arg2_00 = uVar2;\n    *(in_RAX + 0xf0) = CONCAT44(uVar3, uVar2);\n    piVar1 = *(in_RAX + 0x50);\n    if (piVar1 != NULL) {\n        arg2_00 = *piVar1 + 0x13a0;\n        piVar1[3] = arg2_00;\n    }\n    if (*0x5985b0 == 0) {\n        *(in_RAX + 0x120) = *0x544bd8;\n    }\n    else {\n        fcn.0045e080(*0x544bd8, arg2_00, param_3, param_4);\n    }\n    if (*0x5985b0 != '\\0') {\n        fcn.004037e0();\n    }\n    arg1 = 0x544bd8;\n    *0x544bd8 = in_RAX;\n    fcn.0040a740();\n    uVar4 = fcn.0040c6e0();\n    if (*0x5985b0 == 0) {\n        *(in_RAX + 0x110) = uVar4;\n    }\n    else {\n        fcn.0045df80(arg1, arg2_00, param_3, param_4);\n    }\n    return;\n}\n",
        "token_count": 651
    },
    "004372e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004372e0(uchar param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x29) = param_1;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x54a530 != '\\0') {\n                *(*0x20 + -0x50) = 0x43730f;\n                fcn.00451040();\n                in_RAX = *(*0x20 + 8);\n            }\n            uVar2 = *(in_RAX + 0x90);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            if ((uVar2 & 0xffffefff) == 4) {\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x50) = 0x43734c;\n                fcn.00437a40(1);\n                *(*0x20 + -0x50) = 0x437367;\n                fcn.00442000(*(*0x20 + -0x29));\n                *(*0x20 + -0x50) = 0x43736c;\n                fcn.0043a3c0();\n                iVar3 = *(*(*0x20 + -0x18) + 0xd8);\n                *(*(*0x20 + -0x18) + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x24) = *(in_RAX + 0x90);\n            *(*0x20 + -0x20) = *(in_RAX + 0x98);\n            *(*0x20 + -0x50) = 0x4373c5;\n            fcn.00434ec0();\n            *(*0x20 + -0x50) = 0x4373d6;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x4373e5;\n            fcn.00435740();\n            *(*0x20 + -0x50) = 0x4373f6;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x437405;\n            fcn.004354c0();\n            *(*0x20 + -0x50) = 0x437416;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x437425;\n            fcn.004354c0();\n            *(*0x20 + -0x50) = 0x43742a;\n            fcn.00435120();\n            *(*0x20 + -0x50) = 0x43742f;\n            fcn.00434f40();\n            uVar4 = *(*(*0x20 + -0x10) + 0x90);\n            param_1 = uVar4;\n            *(*0x20 + -0x28) = uVar4;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x50) = 0x43744f;\n            fcn.00434ec0();\n            *(*0x20 + -0x50) = 0x437465;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x43746f;\n            fcn.00435740();\n            *(*0x20 + -0x50) = 0x437485;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x43748f;\n            fcn.004354c0();\n            *(*0x20 + -0x50) = 0x4374a5;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x4374b0;\n            fcn.004354c0();\n            *(*0x20 + -0x50) = 0x4374b5;\n            fcn.00435120();\n            *(*0x20 + -0x50) = 0x4374ba;\n            fcn.00434f40();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x50) = 0x4374cb;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        puVar5[0x18] = param_1;\n        *(puVar5 + -8) = 0x4374df;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        param_1 = puVar5[0x18];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1364
    },
    "00437a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00437a40(ulong arg1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint32_t unaff_EBX;\n    int64_t iVar4;\n    uchar *puVar5;\n    bool bVar6;\n    ulong uStack64;\n    uchar auStack24 [16];\n    \n    if ((((unaff_EBX >> 0xc & 1) != 0) || ((arg1 >> 0xc & 1) != 0)) || (unaff_EBX == arg1)) {\n        auStack24 = CONCAT412(arg1, CONCAT48(unaff_EBX, 0x437de0));\n        uStack64 = auStack24;\n        fcn.0045bc80();\n    }\n    iVar3 = 0;\n    puVar5 = NULL;\n    while( true ) {\n        LOCK();\n        if (unaff_EBX == *(in_RAX + 0x90)) break;\n        if ((unaff_EBX == 4) && (*(in_RAX + 0x90) == 1)) {\n            fcn.00433580();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if (iVar3 == 0) {\n            fcn.0045fdc0();\n            puVar5 = uStack64 + 5000;\n        }\n        fcn.0045fdc0();\n        if (uStack64 < puVar5) {\n            iVar4 = 0;\n            while( true ) {\n                if (iVar4 < 10) {\n                    bVar6 = *(in_RAX + 0x90) != unaff_EBX;\n                }\n                else {\n                    bVar6 = false;\n                }\n                if (!bVar6) break;\n                uStack64 = CONCAT44(uStack64._4_4_, 1);\n                fcn.0045db40();\n                iVar4 = iVar4 + 1;\n            }\n        }\n        else {\n            uStack64 = 0x4b2ad0;\n            fcn.0045bc80();\n            fcn.0045fdc0();\n            puVar5 = 0x4b3494;\n        }\n        iVar3 = iVar3 + 1;\n    }\n    *(in_RAX + 0x90) = arg1;\n    if (unaff_EBX == 2) {\n        if ((*0x598343 != '\\0') || ((*(in_RAX + 0xbd) & 7) == 0)) {\n            *(in_RAX + 0xbc) = 1;\n        }\n        *(in_RAX + 0xbd) = *(in_RAX + 0xbd) + '\\x01';\n    }\n    if (*(in_RAX + 0xbc) != '\\0') {\n        if (unaff_EBX == 1) {\n            fcn.0045fdc0();\n            *(in_RAX + 200) = uStack64 + (*(in_RAX + 200) - *(in_RAX + 0xc0));\n            *(in_RAX + 0xc0) = 0;\n        }\n        else if ((unaff_EBX == 4) &&\n                (((cVar1 = *(in_RAX + 0xb0),  cVar1 == '\\x15' || (cVar1 == '\\x16')) || (cVar1 == '\\x17')))) {\n            fcn.0045fdc0();\n            LOCK();\n            *0x546658 = *0x546658 + (uStack64 - *(in_RAX + 0xc0)) * 8;\n            *(in_RAX + 0xc0) = 0;\n        }\n        if (arg1 == 1) {\n            fcn.0045fdc0();\n            *(in_RAX + 0xc0) = uStack64;\n        }\n        else if (arg1 == 2) {\n            *(in_RAX + 0xbc) = 0;\n            fcn.00409140();\n            *(in_RAX + 200) = 0;\n        }\n        else if ((arg1 == 4) &&\n                (((cVar1 = *(in_RAX + 0xb0),  cVar1 == '\\x15' || (cVar1 == '\\x16')) || (cVar1 == '\\x17')))) {\n            fcn.0045fdc0();\n            *(in_RAX + 0xc0) = uStack64;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 999
    },
    "00437e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00437e80(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 2) && (arg1 == 0x1009)) {\n                do {\n                    LOCK();\n                } while (*(in_RAX + 0x90) != 2);\n                *(in_RAX + 0x90) = 0x1009;\n                return 2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x437ee5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x437ef8;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 403
    },
    "00437fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437fa0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    ulong arg1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    arg1 = 0;\n    fcn.00443b80(0);\n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0xd0) = unaff_RBX;\n    if (*0x5985b0 == 0) {\n        *(iVar1 + 200) = in_RAX;\n    }\n    else {\n        fcn.0045df80(arg1, unaff_RBX, param_3, param_4);\n    }\n    fcn.0045bc80();\n    return;\n}\n",
        "token_count": 234
    },
    "004380e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004380e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0045bc80();\n    iVar3 = **(in_GS_OFFSET + *0x598520);\n    piVar1 = *(iVar3 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar4 = *(iVar3 + 0x30);\n    *(iVar4 + 0xd0) = 0;\n    if (*0x5985b0 == 0) {\n        *(iVar4 + 200) = 0;\n    }\n    else {\n        fcn.0045e0e0(param_1, iVar4 + 200, param_3, param_4);\n    }\n    fcn.00443ee0(0);\n    iVar2 = *(iVar4 + 0xd8);\n    *(iVar4 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(iVar3 + 0xb1) != '\\0')) {\n        *(iVar3 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "00438500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00438500(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    int32_t iVar5;\n    uchar in_AL;\n    ulong uVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x00438500:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x58;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_AL;\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n        if (*0x598394 != 0) {\n            *(*0x20 + -0x60) = 0x438545;\n            uVar6 = fcn.0042d820();\n            *(*0x20 + -0x28) = uVar6;\n            *(*0x20 + -0x60) = 0x438554;\n            fcn.0043c020();\n        }\n        *(*0x20 + -0x60) = 0x438565;\n        fcn.0040a520();\n        iVar5 = *0x5983a0;\n        iVar2 = *0x598388;\n        if (*0x5983a0 != 0) {\n            *0x5983a0 = 0;\n            iVar2 = iVar5;\n        }\n        *(*0x20 + -0x60) = 0x43858b;\n        uVar6 = fcn.0043f780(*0x598388, iVar2);\n        cVar4 = *0x5460f8;\n        *(*0x20 + -0x18) = uVar6;\n        *0x5460e8 = 0;\n        if (*0x5460f8 != '\\0') {\n            *0x5460f8 = '\\0';\n            *(*0x20 + -0x60) = 0x4385c5;\n            fcn.0040a820(cVar4);\n        }\n        *(*0x20 + -0x60) = 0x4385d3;\n        fcn.0040a740();\n        iVar7 = *(*0x20 + -0x18);\n        do {\n            if (iVar7 == 0) {\n                *(*0x20 + -0x60) = 0x438645;\n                fcn.0045fdc0();\n                iVar7 = **(in_GS_OFFSET + *0x598520);\n                *(*0x20 + -0x30) = *(*0x20 + -0x58);\n                if (*(*0x20 + 8) != '\\0') {\n                    *(*0x20 + -0x60) = 0x438685;\n                    fcn.0044f960(0);\n                }\n                *(*0x20 + -0x60) = 0x43868a;\n                fcn.0043a3c0();\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(iVar7 + 0xb1) != '\\0')) {\n                    *(iVar7 + 0x10) = 0xfffffffffffffade;\n                }\n                return *(*0x20 + -0x30);\n            }\n            iVar3 = *(iVar7 + 0x38);\n            *(*0x20 + -0x10) = *(iVar7 + 8);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x60) = 0x438638;\n                fcn.00439800(0xffffffffffffffff);\n            }\n            else {\n                *(iVar7 + 0x38) = 0;\n                if (*(iVar3 + 0xa8) != 0) goto code_r0x004386c6;\n                *(iVar3 + 0xa8) = iVar7;\n                *(*0x20 + -0x60) = 0x438625;\n                fcn.0040a820();\n            }\n            iVar7 = *(*0x20 + -0x10);\n        } while( true );\n    }\n    goto code_r0x004386d8;\ncode_r0x004386c6:\n    *(*0x20 + -0x60) = 0x4386d7;\n    in_AL = fcn.00433580();\ncode_r0x004386d8:\n    puVar8[8] = in_AL;\n    *(puVar8 + -8) = 0x4386e5;\n    fcn.0045bdc0();\n    in_AL = puVar8[8];\n    *0x20 = puVar8;\n    goto code_r0x00438500;\n}\n",
        "token_count": 1195
    },
    "004388a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004388a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x598344 == '\\0') {\n        *0x598344 = '\\x01';\n        fcn.004393c0();\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00438940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00438940(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    uchar in_AL;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(unaff_R14 + 0x30);\n            if (iVar2 != 0x545c20) {\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x30) = 0x43897a;\n                fcn.004305a0();\n                iVar2 = *(*(*0x20 + -0x18) + 0x50);\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x30) = 0x438994;\n                    fcn.00446860();\n                    if (*0x5985b0 == 0) {\n                        iVar2 = *(*0x20 + -0x18);\n                        *(iVar2 + 0x50) = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x4389c5;\n                        iVar2 = fcn.0045e0a0(*(*0x20 + -0x18) + 0x50, 0, param_3, param_4);\n                    }\n                }\n                *(*0x20 + -0x30) = 0x4389d5;\n                fcn.0040a520(iVar2);\n                iVar2 = *(*0x20 + -0x18);\n                piVar3 = 0x544bd8;\n                while (iVar5 = *piVar3,  iVar5 != 0) {\n                    if (iVar5 == iVar2) {\n                        iVar5 = *(iVar2 + 0x120);\n                        if (*0x5985b0 == 0) {\n                            *piVar3 = iVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x438a18;\n                            fcn.0045e0a0(iVar2, iVar5, param_3, param_4);\n                        }\n                        *(iVar2 + 0xec) = 2;\n                        if (*0x5985b0 == 0) {\n                            *(iVar2 + 0x270) = *0x5460e0;\n                            *0x5460e0 = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x438a4f;\n                            iVar5 = *0x5460e0;\n                            fcn.0045e0a0(iVar2, *0x5460e0, param_3, param_4);\n                            *(*0x20 + -0x30) = 0x438a5b;\n                            fcn.0045e080(iVar2, iVar5, param_3, param_4);\n                        }\n                        *(*0x20 + -0x30) = 0x438a69;\n                        fcn.0040a740();\n                        iVar2 = *0x598478;\n                        LOCK();\n                        *0x598478 = *0x598478 + *(*(*0x20 + -0x18) + 0x100);\n                        *(*0x20 + -0x30) = 0x438a86;\n                        fcn.00440180(*(*0x20 + -0x18), iVar2);\n                        *(*0x20 + -0x30) = 0x438a8b;\n                        fcn.0043a080();\n                        *(*0x20 + -0x30) = 0x438a99;\n                        fcn.0040a520();\n                        *0x546040 = *0x546040 + 1;\n                        *(*0x20 + -0x30) = 0x438aa5;\n                        fcn.00440340();\n                        *(*0x20 + -0x30) = 0x438ab3;\n                        fcn.0040a740();\n                        *(*0x20 + -0x30) = 0x438abd;\n                        fcn.00430640();\n                        if (*(*0x20 + 8) != '\\0') {\n                            uVar1 = *(*(*0x20 + -0x18) + 0xec);\n                            *(*(*0x20 + -0x18) + 0xec) = 1;\n                            return uVar1;\n                        }\n                        *(*0x20 + -0x30) = 0x438af1;\n                        uVar4 = fcn.004301a0();\n                        return uVar4;\n                    }\n                    piVar3 = iVar5 + 0x120;\n                }\n                *(*0x20 + -0x30) = 0x438b0c;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x30) = 0x438b11;\n            fcn.00440180();\n            *(*0x20 + -0x30) = 0x438b16;\n            fcn.0043a080();\n            *(*0x20 + -0x30) = 0x438b25;\n            fcn.0040a520();\n            *0x546040 = *0x546040 + 1;\n            *(*0x20 + -0x30) = 0x438b31;\n            fcn.00440340();\n            *(*0x20 + -0x30) = 0x438b3f;\n            fcn.0040a740();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x30) = 0x438b56;\n            fcn.0040a8a0();\n            *(*(*(*0x20 + -0x10) + 0x30) + 0x118) = 0;\n            *(*0x20 + -0x30) = 0x438b7b;\n            in_AL = fcn.00433580();\n        }\n        puVar6[8] = in_AL;\n        *(puVar6 + -8) = 0x438b85;\n        fcn.0045bdc0();\n        in_AL = puVar6[8];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1537
    },
    "00438ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438ba0(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    char cVar7;\n    ulong in_RAX;\n    int64_t iVar8;\n    ulong arg1;\n    int64_t iVar9;\n    ulong arg2;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar11 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            arg2 = *(*(*0x20 + -0x28) + 0x30);\n            *(*0x20 + -0x38) = arg2;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x68) = 0x438bf9;\n            fcn.0040a520();\n            if (*0x546110 == 0) {\n                *0x546110 = *0x598388 + -1;\n                if (*0x5985b0 == 0) {\n                    *0x546108 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x438c3c;\n                    fcn.0045df80(arg1, arg2, param_3, param_4);\n                }\n                iVar10 = *0x5455b8;\n                iVar9 = *0x5455b0;\n                iVar8 = *(*0x20 + -0x10);\n                for (iVar12 = 0; iVar12 < iVar10; iVar12 = iVar12 + 1) {\n                    iVar5 = *(iVar9 + iVar12 * 8);\n                    if (iVar8 != iVar5) {\n                        puVar2 = iVar5 + 0x2270;\n                        uVar3 = *puVar2;\n                        *puVar2 = 1;\n                        param_3 = uVar3;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x438c7b;\n                fcn.00440e20();\n                for (iVar8 = *0x546050; iVar8 != 0; iVar8 = *(iVar8 + 8)) {\n                    LOCK();\n                    if (*(iVar8 + 0x2270) == 1) {\n                        *(iVar8 + 0x2270) = 0;\n                        *(*0x20 + -0x18) = iVar8;\n                        pcVar6 = **(*0x20 + 8);\n                        *(*0x20 + -0x68) = 0x438cba;\n                        (*pcVar6)();\n                        *0x546110 = *0x546110 + -1;\n                        iVar8 = *(*0x20 + -0x18);\n                    }\n                }\n                *(*0x20 + -0x4c) = *0x546110;\n                *(*0x20 + -0x68) = 0x438ce5;\n                fcn.0040a740();\n                pcVar6 = **(*0x20 + 8);\n                *(*0x20 + -0x68) = 0x438cf4;\n                (*pcVar6)();\n                *(*0x20 + -0x20) = *0x5455b0;\n                *(*0x20 + -0x40) = *0x5455b8;\n                iVar9 = *0x5455b0;\n                iVar10 = *0x5455b8;\n                for (iVar8 = 0; iVar8 < iVar10; iVar8 = iVar8 + 1) {\n                    iVar12 = *(iVar9 + iVar8 * 8);\n                    if (*(iVar12 + 4) == 2) {\n                        if (*(iVar12 + 0x2270) == 1) {\n                            LOCK();\n                            bVar13 = *(iVar12 + 4) == 2;\n                            if (bVar13) {\n                                *(iVar12 + 4) = 0;\n                            }\n                            param_3 = param_3 & 0xffffffffffffff00 | bVar13;\n                        }\n                        else {\n                            param_3 = 0;\n                        }\n                    }\n                    else {\n                        param_3 = 0;\n                    }\n                    if (param_3 != '\\0') {\n                        *(*0x20 + -0x48) = iVar8;\n                        if (*0x54a530 != '\\0') {\n                            *(*0x20 + -0x30) = iVar12;\n                            *(*0x20 + -0x68) = 0x438d77;\n                            fcn.00451220();\n                            *(*0x20 + -0x68) = 0x438d85;\n                            fcn.00450aa0();\n                            iVar12 = *(*0x20 + -0x30);\n                        }\n                        *(iVar12 + 0x14) = *(iVar12 + 0x14) + 1;\n                        *(*0x20 + -0x68) = 0x438d95;\n                        fcn.0043a080();\n                        iVar9 = *(*0x20 + -0x20);\n                        iVar10 = *(*0x20 + -0x40);\n                        iVar8 = *(*0x20 + -0x48);\n                    }\n                }\n                if (0 < *(*0x20 + -0x4c)) {\n                    while( true ) {\n                        *(*0x20 + -0x68) = 0x438dcb;\n                        cVar7 = fcn.0040ac80();\n                        if (cVar7 != '\\0') break;\n                        *(*0x20 + -0x68) = 0x438dba;\n                        fcn.00440e20();\n                    }\n                    *0x546118 = 0;\n                }\n                if (*0x546110 == 0) {\n                    iVar8 = 0;\n                    while( true ) {\n                        if (*0x5455b8 <= iVar8) {\n                            *(*0x20 + -0x68) = 0x438e25;\n                            iVar8 = *0x5455b8;\n                            fcn.0040a520();\n                            if (*0x5985b0 == 0) {\n                                *0x546108 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x438e49;\n                                fcn.0045e080(0, iVar8, param_3, param_4);\n                            }\n                            *(*0x20 + -0x68) = 0x438e57;\n                            fcn.0040a740();\n                            iVar4 = *(*(*0x20 + -0x38) + 0xd8);\n                            *(*(*0x20 + -0x38) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        if (*(*(*0x5455b0 + iVar8 * 8) + 0x2270) != 0) break;\n                        iVar8 = iVar8 + 1;\n                    }\n                    *(*0x20 + -0x68) = 0x438e9e;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x68) = 0x438eaf;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x68) = 0x438ec5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x438ed0;\n        fcn.00460800();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1963
    },
    "00438ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00438ee0(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    LOCK();\n    puVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x2270;\n    if (*puVar1 != 1) {\n        return *puVar1;\n    }\n    *puVar1 = 0;\n    (***0x546108)();\n    fcn.0040a520();\n    iVar3 = *0x546110 + -1;\n    bVar4 = *0x546110 == 1;\n    *0x546110 = iVar3;\n    if (bVar4) {\n        fcn.0040a820();\n    }\n    uVar2 = fcn.0040a740();\n    return uVar2;\n}\n",
        "token_count": 257
    },
    "00438fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00438fa0(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t *noname_0;\n    int64_t iVar3;\n    int64_t arg1_00;\n    int64_t arg2;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.004438c0();\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg2 = unaff_R14;\n    iVar4 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0xa0) == 0) {\n        fcn.00440000();\n    }\n    if (*0x5460e0 != 0) {\n        fcn.0040a520();\n        iStack32 = *0x5460e0;\n        iVar3 = 0;\n        while (iStack32 != 0) {\n            if (*(iStack32 + 0xec) == 2) {\n                arg1_00 = *(iStack32 + 0x270);\n                if (*0x5985b0 == 0) {\n                    *(iStack32 + 0x270) = iVar3;\n                    iVar3 = iStack32;\n                    iStack32 = arg1_00;\n                }\n                else {\n                    fcn.0045df80(arg1_00, arg2, in_R8, in_R9);\n                    iVar3 = iStack32;\n                    iStack32 = arg1_00;\n                }\n            }\n            else {\n                if (*(iStack32 + 0xec) == 0) {\n                    auStack24 = CONCAT88(&iStack32, 0x439240);\n                    fcn.0045bc80();\n                    unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                }\n                iStack32 = *(iStack32 + 0x270);\n            }\n        }\n        if (*0x5985b0 != 0) {\n            fcn.0045df80(0, arg2, in_R8, in_R9);\n            iVar3 = *0x5460e0;\n        }\n        *0x5460e0 = iVar3;\n        fcn.0040a740();\n    }\n    noname_0 = fcn.0040c6e0();\n    if (*0x5985b0 == 0) {\n        noname_0[0x11] = unaff_RBX;\n    }\n    else {\n        noname_0 = fcn.0045e080(unaff_RBX, arg2, in_R8, in_R9);\n    }\n    fcn.00437100();\n    iVar3 = fcn.0043e220();\n    if (*0x5985b0 == 0) {\n        *noname_0 = iVar3;\n    }\n    else {\n        iVar3 = fcn.0045df80(unaff_RBX, arg2, in_R8, in_R9);\n    }\n    if (*0x5985b0 == 0) {\n        *(iVar3 + 0x30) = noname_0;\n    }\n    else {\n        fcn.0045e080(noname_0, arg2, in_R8, in_R9);\n    }\n    if (in_RAX == *(*(iVar4 + 0x30) + 0xa0)) {\n        fcn.00440180();\n    }\n    iVar2 = *(*(iVar4 + 0x30) + 0xd8);\n    *(*(iVar4 + 0x30) + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    fcn.00443a20();\n    return noname_0;\n}\n",
        "token_count": 990
    },
    "00439440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439440(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    ulong uStack32;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iStack24 = fcn.00438fa0(0xffffffffffffffff);\n    iStack16 = fcn.0043e220();\n    *(iStack16 + 0x40) = 0x45df41;\n    iVar4 = *(iStack16 + 8) + -0x20;\n    *(iStack16 + 0x38) = iVar4;\n    *(iStack16 + 0x60) = 0;\n    *(iStack16 + 0x48) = iStack16;\n    *(iStack16 + 0x78) = *(iStack16 + 0x40);\n    *(iStack16 + 0x70) = iVar4;\n    *(iStack16 + 0x80) = *(iStack16 + 0x38);\n    fcn.00437a40(6);\n    iVar4 = iStack24;\n    if (*0x5985b0 == 0) {\n        *(iStack16 + 0x30) = iStack24;\n        iVar2 = iStack16;\n    }\n    else {\n        iVar2 = fcn.0045e0a0(iStack16 + 0x30, iStack24, param_3, param_4);\n    }\n    if (*0x5985b0 == 0) {\n        *(iVar4 + 0x90) = iVar2;\n    }\n    else {\n        iVar2 = fcn.0045df80(iVar4 + 0x90, iVar4, param_3, param_4);\n    }\n    *(iVar4 + 0xe9) = 1;\n    *(iVar4 + 0x23c) = *(iVar4 + 0x23c) + 1;\n    *(iVar4 + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = iVar4;\n    LOCK();\n    iVar4 = *0x546000 + 1;\n    *0x546000 = *0x546000 + 1;\n    *(iVar2 + 0x98) = iVar4;\n    *(iVar2 + 0xbb) = 1;\n    if (*0x54a530 != '\\0') {\n        fcn.00450d20();\n        *(iStack16 + 0xd8) = *(iStack16 + 0xd8) + 1;\n        uStack32 = *(iStack16 + 0x98);\n        fcn.0044f960(&uStack32);\n        iVar2 = iStack16;\n    }\n    fcn.00436a40(iVar2);\n    iVar1 = *0x546048;\n    LOCK();\n    *0x546048 = *0x546048 + 1;\n    uVar3 = fcn.00439700(iVar1);\n    *(iStack24 + 0x128) = uVar3;\n    *0x59836c = *0x59836c + 1;\n    *0x598418 = iStack24;\n    return;\n}\n",
        "token_count": 791
    },
    "00439700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004397a0)\n\nuint64_t fcn.00439700(void)\n\n{\n    bool bVar1;\n    char in_AL;\n    uint64_t uVar2;\n    \n    bVar1 = false;\n    while( true ) {\n        while (*0x598418 == 1) {\n            fcn.0045fda0();\n        }\n        if ((*0x598418 != 0) || (in_AL != '\\0')) break;\n        if (!bVar1) {\n            LOCK();\n            *0x598370 = *0x598370 + 1;\n        }\n        fcn.0045fcc0();\n        bVar1 = true;\n    }\n    LOCK();\n    uVar2 = *0x598418;\n    *0x598418 = *0x598418 ^ *0x598418 ^ 1;\n    return uVar2;\n}\n",
        "token_count": 197
    },
    "00439800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439800(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x30) = 0x43983b;\n            iVar3 = fcn.00438fa0(arg1);\n            *(iVar3 + 0xa8) = *(*0x20 + 0x10);\n            if (((unaff_R14 == 0) || (arg1 = *(unaff_R14 + 0x30),  arg1 == 0)) ||\n               ((*(*0x20 + -0x10) = iVar3,  *(arg1 + 0x238) == 0 && (*(arg1 + 0xe8) == '\\0')))) {\n                *(*0x20 + -0x30) = 0x439926;\n                fcn.004399a0();\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x439894;\n            fcn.0040a520();\n            if (*0x5986c0 != 0) {\n                iVar3 = *(*0x20 + -0x10);\n                *(iVar3 + 0x128) = *0x5986a8;\n                *0x5986a8 = iVar3;\n                if (*0x5986b0 != '\\0') {\n                    *0x5986b0 = '\\0';\n                    *(*0x20 + -0x30) = 0x4398dd;\n                    fcn.0040a820();\n                }\n                *(*0x20 + -0x30) = 0x4398eb;\n                fcn.0040a740();\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            unaff_RBX = 0x2a;\n            *(*0x20 + -0x30) = 0x43996b;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x439985;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 930
    },
    "004399a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004399a0(void)\n\n{\n    ulong *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x59834a == '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x40) = 0x439a65;\n                fcn.004438c0();\n                *(*0x20 + -0x40) = 0x439a6f;\n                fcn.00430040();\n                *(*0x20 + -0x40) = 0x439a7b;\n                fcn.00443a20();\n                return;\n            }\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            if (*0x544970 != 0) {\n                *(*0x20 + -0x20) = *in_RAX;\n                *(*0x20 + -0x18) = in_RAX + 0xb;\n                *(*0x20 + -0x10) = fcn.0045bbc0;\n                *(*0x20 + -0x40) = 0x439a0f;\n                fcn.004438c0();\n                *(*0x20 + -0x38) = *0x544970;\n                *(*0x20 + -0x30) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x439a29;\n                fcn.0045db80();\n                *(*0x20 + -0x40) = 0x439a47;\n                fcn.00443a20();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x439a96;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x439aa5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 652
    },
    "00439ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439ac0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (*0x5986c0 != 0) {\n        iVar2 = *(iVar3 + 0xd8);\n        *(iVar3 + 0xd8) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        return;\n    }\n    *0x5986c0 = 1;\n    fcn.00439800(0xffffffffffffffff);\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "00439ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439ca0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            if (*(iVar1 + 0xd8) == 0) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    if (*(iVar1 + 0xe4) == '\\0') {\n                        *(*0x20 + -0x10) = unaff_R14;\n                        *(*0x20 + -0x30) = 0x439cf9;\n                        fcn.0040a520();\n                        *(*0x20 + -0x30) = 0x439d07;\n                        fcn.004419a0();\n                        *(*0x20 + -0x30) = 0x439d15;\n                        fcn.0040a740();\n                        *(*0x20 + -0x18) = unaff_R14;\n                        *(*0x20 + -0x30) = 0x439d2c;\n                        fcn.0040a8a0();\n                        *(*(*(*0x20 + -0x18) + 0x30) + 0x118) = 0;\n                        *(*0x20 + -0x30) = 0x439d55;\n                        fcn.00440000();\n                        *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x439d85;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x30) = 0x439d96;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x30) = 0x439da7;\n            fcn.00433580();\n        }\n        *(puVar2 + -8) = 0x439dad;\n        fcn.0045bdc0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 569
    },
    "00439de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439de0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    ulong uVar5;\n    char cVar6;\n    uchar unaff_BL;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x28) = *(unaff_R14 + 0x30);\n            *(*0x20 + -0x50) = 0x439e25;\n            fcn.0040a520();\n            iVar4 = *(*0x20 + 8);\n            if (iVar4 == 0) {\n                if (*(*0x20 + 0x10) == '\\0') {\n                    *(*0x20 + -0x50) = 0x439e4f;\n                    iVar4 = fcn.00441e00();\n                    if (iVar4 == 0) {\n                        *(*0x20 + -0x50) = 0x439f65;\n                        fcn.0040a740();\n                        iVar2 = *(*(*0x20 + -0x28) + 0xd8);\n                        *(*(*0x20 + -0x28) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    goto code_r0x00439e59;\n                }\n            }\n            else {\ncode_r0x00439e59:\n                iVar3 = *0x546020;\n                if (*0x546020 != 0) {\n                    *0x546020 = *(*0x546020 + 0x128);\n                    *0x546028 = *0x546028 + -1;\n                }\n                *(*0x20 + -0x20) = iVar4;\n                if (iVar3 == 0) {\n                    *(*0x20 + -0x50) = 0x439e8c;\n                    uVar5 = fcn.004370a0();\n                    *(*0x20 + -0x30) = uVar5;\n                    uVar5 = 0;\n                    if (*(*0x20 + 0x10) != '\\0') {\n                        uVar5 = 0x4b29e0;\n                    }\n                    *(*0x20 + -0x18) = uVar5;\n                    *(*0x20 + -0x50) = 0x439ebf;\n                    fcn.0040a740();\n                    *(*0x20 + -0x50) = 0x439ed3;\n                    fcn.00439800(*(*0x20 + -0x30));\n                    iVar2 = *(*(*0x20 + -0x28) + 0xd8);\n                    *(*(*0x20 + -0x28) + 0xd8) = iVar2 + -1;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return;\n                }\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x50) = 0x439f1c;\n                fcn.0040a740();\n                iVar4 = *(*0x20 + -0x10);\n                if (*(iVar4 + 0xe4) == '\\0') {\n                    if (*(iVar4 + 0xa8) == 0) {\n                        cVar6 = *(*0x20 + 0x10);\n                        if (cVar6 == '\\0') {\n                            cVar6 = '\\0';\ncode_r0x00439f9b:\n                            *(iVar4 + 0xe4) = cVar6;\n                            *(iVar4 + 0xa8) = *(*0x20 + -0x20);\n                            *(*0x20 + -0x50) = 0x439fb8;\n                            fcn.0040a820();\n                            iVar2 = *(*(*0x20 + -0x28) + 0xd8);\n                            *(*(*0x20 + -0x28) + 0xd8) = iVar2 + -1;\n                            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        iVar3 = *(*0x20 + -0x20);\n                        do {\n                        } while (*(iVar3 + 0x194) != *(iVar3 + 0x194));\n                        if ((*(iVar3 + 0x194) == *(iVar3 + 400)) && (*(iVar3 + 0x998) == 0)) goto code_r0x00439f9b;\n                        *(*0x20 + -0x50) = 0x43a027;\n                        fcn.00433580();\n                    }\n                    *(*0x20 + -0x50) = 0x43a038;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x50) = 0x43a049;\n                fcn.00433580();\n            }\n            unaff_BL = 0x24;\n            *(*0x20 + -0x50) = 0x43a05a;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar7 + 8) = in_RAX;\n        puVar7[0x10] = unaff_BL;\n        *(puVar7 + -8) = 0x43a069;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        unaff_BL = puVar7[0x10];\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1498
    },
    "0043a080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a080(void)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (uVar1 = *0x546060,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    do {\n    } while (*(in_RAX + 0x194) != *(in_RAX + 0x194));\n    if (((*(in_RAX + 0x194) != *(in_RAX + 400)) || (*(in_RAX + 0x998) != 0)) || (*0x546078 != 0)) {\n        fcn.00439de0();\n        return;\n    }\n    if ((*0x54a530 != '\\0') || (*0x54a531 != '\\0')) {\n        iVar2 = *0x55a5b8;\n        if ((*0x54a578 == 0) && (*0x54a531 == '\\0')) {\n            iVar2 = 0;\n        }\n        if (iVar2 != 0) {\n            fcn.00439de0();\n            return;\n        }\n    }\n    if (*0x59837c != 0) {\n        if ((*(in_RAX + 0x1238) == 0) || ((*(*(in_RAX + 0x1238) + 0x10) == 0 && (*(*(in_RAX + 0x1240) + 0x10) == 0)))) {\n            if (*0x545a20 == 0) {\n                if (*0x545aa8 < *0x545aac) {\n                    bVar5 = true;\n                }\n                else {\n                    bVar5 = false;\n                }\n            }\n            else {\n                bVar5 = true;\n            }\n        }\n        else {\n            bVar5 = true;\n        }\n        if (bVar5) {\n            fcn.00439de0();\n            return;\n        }\n    }\n    if ((*0x54605c + *0x546058 == 0) && (LOCK(),  *0x54605c == 0)) {\n        *0x54605c = 1;\n        *0x546060 = 0;\n        fcn.00439de0(in_RAX, uVar1);\n        return;\n    }\n    fcn.0040a520();\n    if (*0x5460e8 != '\\0') {\n        *(in_RAX + 4) = 3;\n        iVar3 = *0x5460ec + -1;\n        bVar5 = *0x5460ec == 1;\n        *0x5460ec = iVar3;\n        if (bVar5) {\n            fcn.0040a820();\n        }\n        fcn.0040a740();\n        return;\n    }\n    if (*(in_RAX + 0x2270) == 0) {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(in_RAX + 0x2270) == 1;\n        if (bVar5) {\n            *(in_RAX + 0x2270) = 0;\n        }\n    }\n    if (bVar5) {\n        (***0x546108)();\n        iVar3 = *0x546110 + -1;\n        bVar5 = *0x546110 == 1;\n        *0x546110 = iVar3;\n        if (bVar5) {\n            fcn.0040a820();\n        }\n    }\n    if (*0x546078 == 0) {\n        if ((*0x546058 == *0x598388 + -1) && (*0x546008 != 0)) {\n            fcn.0040a740();\n            fcn.00439de0();\n            return;\n        }\n        iVar2 = *(in_RAX + 0x1200);\n        iVar4 = *(in_RAX + 0x1208);\n        if ((iVar2 != 0) && ((iVar4 == 0 || (iVar2 <= iVar4)))) {\n            iVar4 = iVar2;\n        }\n        fcn.00441c60();\n        fcn.0040a740();\n        if (iVar4 != 0) {\n            fcn.0043bf40();\n        }\n        return;\n    }\n    fcn.0040a740();\n    fcn.00439de0();\n    return;\n}\n",
        "token_count": 1020
    },
    "0043a3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043a3f3)\n\nvoid fcn.0043a3c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x54605c != 0) {\n                return;\n            }\n            LOCK();\n            *0x54605c = 1;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n            *(*0x20 + -0x30) = 0x43a429;\n            fcn.0040a520();\n            *(*0x20 + -0x30) = 0x43a430;\n            iVar3 = fcn.00441fa0();\n            if (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x30) = 0x43a4a7;\n                fcn.0040a740();\n                *(*0x20 + -0x30) = 0x43a4b6;\n                fcn.00439de0();\n                iVar2 = *(*(*0x20 + -0x18) + 0xd8);\n                *(*(*0x20 + -0x18) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            LOCK();\n            if (-1 < *0x54605c + -1) {\n                *(*0x20 + -0x30) = 0x43a45d;\n                *0x54605c = *0x54605c + -1;\n                fcn.0040a740();\n                iVar2 = *(*(*0x20 + -0x18) + 0xd8);\n                *(*(*0x20 + -0x18) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x43a4fd;\n            *0x54605c = *0x54605c + -1;\n            fcn.00433580();\n        }\n        *(puVar4 + -8) = 0x43a505;\n        fcn.0045bdc0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 762
    },
    "0043a520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a520(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(unaff_R14 + 0x30);\n            if ((*(iVar2 + 0x130) != 0) && (*(*(iVar2 + 0x130) + 0xe8) == iVar2)) {\n                *(*0x20 + -0x18) = unaff_R14;\n                if (*(iVar2 + 0xa0) != 0) {\n                    *(*0x20 + -0x50) = 0x43a570;\n                    fcn.00440180();\n                    *(*0x20 + -0x50) = 0x43a575;\n                    fcn.0043a080();\n                }\n                *(*0x20 + -0x50) = 0x43a57f;\n                fcn.004402e0();\n                *(*0x20 + -0x50) = 0x43a585;\n                fcn.004388e0();\n                uVar1 = *(*(*(*(*0x20 + -0x18) + 0x30) + 0x130) + 0x90);\n                if ((uVar1 & 0xffffefff) == 1) {\n                    *(*0x20 + -0x50) = 0x43a5b6;\n                    fcn.00440000();\n                    *(*(*(*0x20 + -0x18) + 0x30) + 0xa8) = 0;\n                    return;\n                }\n                *(*0x20 + -0x2c) = uVar1;\n                *(*0x20 + -0x50) = 0x43a5dd;\n                fcn.00434ec0();\n                *(*0x20 + -0x50) = 0x43a5ee;\n                fcn.004357c0();\n                *(*0x20 + -0x50) = 0x43a5f9;\n                fcn.004354c0();\n                *(*0x20 + -0x50) = 0x43a60a;\n                fcn.004357c0();\n                *(*0x20 + -0x50) = 0x43a60f;\n                fcn.00434f40();\n                iVar2 = *(*(*(*0x20 + -0x18) + 0x30) + 0x130);\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = unaff_R14;\n                *(*0x20 + -0x30) = *(iVar2 + 0x90);\n                *(*0x20 + -0x28) = *(iVar2 + 0x98);\n                *(*0x20 + -0x50) = 0x43a645;\n                fcn.00434ec0();\n                *(*0x20 + -0x50) = 0x43a656;\n                fcn.004357c0();\n                *(*0x20 + -0x50) = 0x43a665;\n                fcn.00435740();\n                *(*0x20 + -0x50) = 0x43a676;\n                fcn.004357c0();\n                *(*0x20 + -0x50) = 0x43a685;\n                fcn.004354c0();\n                *(*0x20 + -0x50) = 0x43a696;\n                fcn.004357c0();\n                *(*0x20 + -0x50) = 0x43a6a5;\n                fcn.004354c0();\n                *(*0x20 + -0x50) = 0x43a6aa;\n                fcn.00435120();\n                *(*0x20 + -0x50) = 0x43a6af;\n                fcn.00434f40();\n                *(*0x20 + -0x34) = *(*(*0x20 + -0x20) + 0x90);\n                *(*0x20 + -0x28) = *(*(*0x20 + -0x20) + 0x98);\n                *(*0x20 + -0x50) = 0x43a6cf;\n                fcn.00434ec0();\n                *(*0x20 + -0x50) = 0x43a6e5;\n                fcn.004357c0();\n                *(*0x20 + -0x50) = 0x43a6ef;\n                fcn.00435740();\n                *(*0x20 + -0x50) = 0x43a705;\n                fcn.004357c0();\n                *(*0x20 + -0x50) = 0x43a70f;\n                fcn.004354c0();\n                *(*0x20 + -0x50) = 0x43a725;\n                fcn.004357c0();\n                *(*0x20 + -0x50) = 0x43a730;\n                fcn.004354c0();\n                *(*0x20 + -0x50) = 0x43a735;\n                fcn.00435120();\n                *(*0x20 + -0x50) = 0x43a73a;\n                fcn.00434f40();\n                *(*0x20 + -0x50) = 0x43a74b;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x50) = 0x43a75c;\n            fcn.00433580();\n        }\n        *(puVar3 + -8) = 0x43a765;\n        fcn.0045bdc0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1399
    },
    "0043a780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a780(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0xe8);\n            if (*(unaff_R14 + 0x30) != iVar1) {\n                if (*(iVar1 + 0xa8) == 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x28) = 0x43a7bf;\n                    fcn.004402e0();\n                    *(*0x20 + -0x28) = 0x43a7c5;\n                    uVar2 = fcn.00440180();\n                    *(*(*0x20 + -0x10) + 0xa8) = uVar2;\n                    *(*0x20 + -0x28) = 0x43a7de;\n                    fcn.0040a820();\n                    *(*0x20 + -0x28) = 0x43a7e5;\n                    fcn.00439ca0();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x43a805;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x28) = 0x43a816;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43a825;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 496
    },
    "0043a840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a840(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5460e8 != '\\0') {\n                if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\ncode_r0x0043a892:\n                    *(*0x20 + -0x28) = 0x43a897;\n                    uVar2 = fcn.00440180();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x43a8aa;\n                    fcn.0040a520();\n                    *(*(*0x20 + -0x10) + 4) = 3;\n                    iVar1 = *0x5460ec + -1;\n                    bVar5 = *0x5460ec == 1;\n                    *0x5460ec = iVar1;\n                    if (bVar5) {\n                        *(*0x20 + -0x28) = 0x43a8d6;\n                        fcn.0040a820();\n                    }\n                    *(*0x20 + -0x28) = 0x43a8e5;\n                    fcn.0040a740();\n                    *(*0x20 + -0x28) = 0x43a8ea;\n                    fcn.00439ca0();\n                    return;\n                }\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                iVar1 = *0x54605c + -1;\n                iVar3 = *0x54605c + -1;\n                *0x54605c = iVar1;\n                if (-1 < iVar3) goto code_r0x0043a892;\n                *(*0x20 + -0x28) = 0x43a905;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x28) = 0x43a916;\n            fcn.00433580();\n        }\n        *(puVar4 + -8) = 0x43a91c;\n        fcn.0045bdc0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 630
    },
    "0043a940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a940(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int64_t arg1;\n    int64_t *in_RAX;\n    int64_t *piVar2;\n    int64_t iVar3;\n    char unaff_BL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    arg1 = *(unaff_R14 + 0x30);\n    if (*0x541f04 != '\\0') {\n        fcn.0042b3c0();\n    }\n    iVar3 = arg1;\n    if (*0x5985b0 == 0) {\n        *(arg1 + 0x90) = in_RAX;\n        piVar2 = in_RAX;\n    }\n    else {\n        piVar2 = fcn.0045df80(arg1, arg1 + 0x90, arg3, arg4);\n    }\n    if (*0x5985b0 == 0) {\n        piVar2[6] = iVar3;\n    }\n    else {\n        fcn.0045e080(iVar3, piVar2 + 6, arg3, arg4);\n    }\n    fcn.00437a40(2);\n    in_RAX[0x15] = 0;\n    *(in_RAX + 0xb1) = 0;\n    in_RAX[2] = *in_RAX + 0x13a0;\n    if (unaff_BL == '\\0') {\n        piVar1 = *(arg1 + 0xa0) + 0x10;\n        *piVar1 = *piVar1 + 1;\n    }\n    if (*(arg1 + 0xe0) != *0x546120) {\n        fcn.00430dc0();\n    }\n    if (*0x54a530 != '\\0') {\n        if ((in_RAX[0xe] != 0) && (*(in_RAX + 0xbb) != '\\0')) {\n            fcn.00451160();\n        }\n        fcn.00450e00();\n    }\n    fcn.0045bbe0();\n    return;\n}\n",
        "token_count": 527
    },
    "0043aac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043ae2f)\n// WARNING: Removing unreachable block (ram,0x0043ae34)\n\nint64_t fcn.0043aac0(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    ulong noname_2;\n    char cVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    uint64_t uVar9;\n    uint64_t noname_1;\n    int32_t iVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    int64_t iStack256;\n    int64_t iStack128;\n    ulong uStack120;\n    uint64_t uStack112;\n    ulong uStack104;\n    int64_t iStack96;\n    int64_t iStack88;\n    int64_t iStack80;\n    ulong uStack72;\n    int64_t iStack64;\n    int64_t iStack56;\n    int64_t iStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    uint64_t uStack16;\n    \n    while (&iStack128 < *(unaff_R14 + 0x10) || &iStack128 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iStack80 = *(unaff_R14 + 0x30);\ncode_r0x0043aaf2:\n    while (uVar9 = *(iStack80 + 0xa0),  *0x5460e8 != '\\0') {\n        fcn.0043a840();\n    }\n    uStack16 = uVar9;\n    if (*(uVar9 + 0x2270) != 0) {\n        fcn.00438ee0();\n    }\n    uVar4 = fcn.0043c560();\n    if (((*0x54a530 != '\\0') || (*0x54a531 != '\\0')) && (iStack32 = fcn.0044f7a0(),  iStack32 != 0)) {\n        fcn.00437a40(1);\n        fcn.00451040();\n        return iStack32;\n    }\n    if ((*0x59837c != 0) && (iVar5 = fcn.0041de20(uVar4),  iVar5 != 0)) {\n        return iVar5;\n    }\n    if ((*(uStack16 + 0x10) * -0x3ef368eb < 0x4325c54) && (0 < *0x546078)) {\n        fcn.0040a520();\n        iStack40 = fcn.00441a00();\n        fcn.0040a740();\n        if (iStack40 != 0) {\n            return iStack40;\n        }\n    }\n    if ((*0x598374 & 0xc) == 0xc) {\n        LOCK();\n        if (*0x598374 == 0xd) {\n            *0x598374 = 1;\n            iVar5 = *0x544c10;\n        }\n        else {\n            iVar5 = 0;\n        }\n        if (iVar5 != 0) {\n            fcn.004372e0(1);\n        }\n    }\n    uVar9 = 1;\n    iVar5 = **0x53d950;\n    if (iVar5 != 0) {\n        fcn.0045db80();\n        iStack256 = iVar5;\n    }\n    iVar5 = fcn.00442420();\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    if (*0x546078 != 0) {\n        fcn.0040a520();\n        iStack48 = fcn.00441a00();\n        fcn.0040a740();\n        if (iStack48 != 0) {\n            return iStack48;\n        }\n    }\n    if (*0x598394 == 0) {\n        bVar11 = false;\n    }\n    else if (*0x598398 == 0) {\n        bVar11 = false;\n    }\n    else {\n        bVar11 = *0x546008 != 0;\n    }\n    if ((bVar11) && (iVar5 = fcn.0042d820(),  iVar5 != 0)) {\n        uStack16 = iVar5;\n        fcn.0043c020();\n        fcn.00437a40(1);\n        if (*0x54a530 != '\\0') {\n            fcn.00451040();\n        }\n        return uStack16;\n    }\n    if (*(iStack80 + 0xe4) == '\\0') {\n        uVar9 = *0x546058;\n        bVar11 = *0x54605c * 2 < *0x598388 - *0x546058;\n    }\n    else {\n        bVar11 = true;\n    }\n    if (bVar11) goto code_r0x0043adc5;\n    uVar9 = 0;\n    goto code_r0x0043ae3e;\ncode_r0x0043adc5:\n    if (*(iStack80 + 0xe4) == '\\0') {\n        *(iStack80 + 0xe4) = 1;\n        LOCK();\n        *0x54605c = *0x54605c + 1;\n        *0x546060 = 0;\n    }\n    iVar5 = fcn.0043b7e0();\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    if (!bVar11) {\n        if (uVar9 == 0) {\n            uVar9 = 0;\n        }\ncode_r0x0043ae3e:\n        if (*0x59837c == 0) {\n            cVar3 = '\\0';\n        }\n        else {\n            if ((*(uStack16 + 0x1238) == 0) ||\n               ((*(*(uStack16 + 0x1238) + 0x10) == 0 && (*(*(uStack16 + 0x1240) + 0x10) == 0)))) {\n                if (*0x545a20 == 0) {\n                    if (*0x545aa8 < *0x545aac) {\n                        bVar11 = true;\n                    }\n                    else {\n                        bVar11 = false;\n                    }\n                }\n                else {\n                    bVar11 = true;\n                }\n            }\n            else {\n                bVar11 = true;\n            }\n            if (bVar11) {\n                cVar3 = fcn.0041e840();\n            }\n            else {\n                cVar3 = '\\0';\n            }\n        }\n        noname_1 = uStack16;\n        if (cVar3 == '\\0') goto code_r0x0043aeed;\n        while( true ) {\n            if (*0x598448 == 0) {\n                piVar8 = NULL;\n            }\n            else {\n                piVar8 = (*0x598448 >> 0x13) << 3;\n                *0x598448 = *piVar8;\n                LOCK();\n            }\n            if (piVar8 != NULL) {\n                *(noname_1 + 0x1228) = 3;\n                uStack16 = piVar8[2];\n                fcn.00437a40(1);\n                if (*0x54a530 != '\\0') {\n                    fcn.00451040();\n                }\n                return uStack16;\n            }\n            fcn.0041e920();\ncode_r0x0043aeed:\n            noname_2 = *0x545680;\n            uVar4 = *0x545640;\n            uStack24 = *0x5455b0;\n            iStack128 = *0x5455b8;\n            uStack120 = *0x5455c0;\n            uStack72 = *0x545630;\n            uStack104 = *0x545670;\n            fcn.0040a520();\n            if ((*0x5460e8 != '\\0') || (*(uStack16 + 0x2270) != 0)) {\n                fcn.0040a740();\n                goto code_r0x0043aaf2;\n            }\n            if (*0x546078 != 0) {\n                iStack56 = fcn.00441a00();\n                fcn.0040a740();\n                return iStack56;\n            }\n            if (*(iStack80 + 0xe4) == '\\0') {\n                noname_1 = *0x546060 & 0xffffff00 | *0x546060 == 1;\n            }\n            else {\n                noname_1 = 0;\n            }\n            if (noname_1 != '\\0') break;\n            uVar6 = fcn.00440180();\n            if (uVar6 == uStack16) {\n                fcn.00441c60();\n                fcn.0040a740();\n                iStack64 = iStack128;\n                uVar1 = *(iStack80 + 0xe4);\n                noname_1 = uVar1;\n                uVar6 = uVar9;\n                if (uVar1 == 0) {\ncode_r0x0043b15b:\n                    iVar5 = *0x546008;\n                    noname_1 = uVar1;\n                    if (*0x598394 == 0) {\n                        bVar11 = false;\n                    }\n                    else if ((*0x598398 == 0) && (uVar6 == 0)) {\n                        bVar11 = false;\n                    }\n                    else {\n                        *0x546008 = 0;\n                        bVar11 = iVar5 != 0;\n                    }\n                    if (!bVar11) {\n                        if ((uVar6 != 0 && *0x598394 != 0) && ((*0x546010 == 0 || (uVar6 < *0x546010)))) {\n                            fcn.0042d700();\n                        }\ncode_r0x0043b584:\n                        fcn.00439ca0();\n                        goto code_r0x0043aaf2;\n                    }\n                    *0x546010 = uVar6;\n                    if (*(iStack80 + 0xa0) == 0) {\n                        if (*(iStack80 + 0xe4) == '\\0') {\n                            uStack112 = uVar6;\n                            fcn.0045fdc0();\n                            iVar7 = fcn.0042d820();\n                            iVar5 = *0x546008;\n                            *0x546010 = 0;\n                            *0x546008 = iStack256;\n                            if ((*0x598420 == 0) || (iVar7 != 0)) {\n                                fcn.0040a520(iVar5);\n                                iStack96 = fcn.00441e00();\n                                fcn.0040a740();\n                                if (iStack96 == 0) {\n                                    fcn.0043c020();\n                                    goto code_r0x0043b584;\n                                }\n                                fcn.00440000();\n                                if (iVar7 != 0) {\n                                    uStack16 = iVar7;\n                                    fcn.0043c020();\n                                    fcn.00437a40(1);\n                                    if (*0x54a530 != '\\0') {\n                                        fcn.00451040();\n                                    }\n                                    return uStack16;\n                                }\n                                if (uVar1 != 0) {\n                                    *(iStack80 + 0xe4) = 1;\n                                    LOCK();\n                                    *0x54605c = *0x54605c + 1;\n                                    *0x546060 = 0;\n                                }\n                            }\n                            else {\n                                fcn.00439ca0();\n                            }\n                            goto code_r0x0043aaf2;\n                        }\n                        fcn.00433580();\n                    }\n                    fcn.00433580();\n                }\n                else {\n                    *(iStack80 + 0xe4) = 0;\n                    LOCK();\n                    iVar2 = *0x54605c + -1;\n                    iVar10 = *0x54605c + -1;\n                    *0x54605c = iVar2;\n                    if (-1 < iVar10) {\n                        iVar5 = fcn.0043bb60(uStack120, noname_1, uVar4);\n                        if (iVar5 == 0) {\n                            iStack88 = fcn.0043bd60();\n                            if (iStack88 != 0) {\n                                fcn.00440000();\n                                *(iStack80 + 0xe4) = 1;\n                                LOCK();\n                                *0x54605c = *0x54605c + 1;\n                                *0x546060 = 0;\n                                *(iStack88 + 0x1228) = 3;\n                                fcn.00437a40(1);\n                                if (*0x54a530 != '\\0') {\n                                    fcn.00451040();\n                                }\n                                return iStack64;\n                            }\n                            uVar6 = fcn.0043bcc0(uStack120, noname_1, noname_2, uVar9);\n                            goto code_r0x0043b15b;\n                        }\n                        fcn.00440000();\n                        *(iStack80 + 0xe4) = 1;\n                        LOCK();\n                        *0x54605c = *0x54605c + 1;\n                        *0x546060 = 0;\n                        goto code_r0x0043aaf2;\n                    }\n                }\n                fcn.00433580();\n            }\n            fcn.00433580();\n        }\n        *(iStack80 + 0xe4) = 1;\n        LOCK();\n        *0x54605c = *0x54605c + 1;\n        *0x546060 = 0;\n        fcn.0040a740();\n    }\n    goto code_r0x0043aaf2;\n}\n",
        "token_count": 3063
    },
    "0043bd60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043bd60(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((*0x59837c == 0) || (*0x598d78 >> 0x20 <= *0x598d78)) {\n        return 0;\n    }\n    if (*0x545a20 == 0) {\n        if (*0x545aa8 < *0x545aac) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n    }\n    else {\n        bVar1 = true;\n    }\n    if (!bVar1) {\n        return 0;\n    }\n    fcn.0040a520();\n    iVar3 = fcn.00441fa0();\n    if (iVar3 == 0) {\n        fcn.0040a740();\n        return 0;\n    }\n    if ((*0x59837c != 0) && (cVar2 = fcn.0041e840(),  cVar2 != '\\0')) {\n        if (*0x598448 == 0) {\n            piVar4 = NULL;\n        }\n        else {\n            piVar4 = (*0x598448 >> 0x13) << 3;\n            *0x598448 = *piVar4;\n            LOCK();\n        }\n        if (piVar4 != NULL) {\n            fcn.0040a740();\n            return iVar3;\n        }\n        fcn.00441c60();\n        fcn.0040a740();\n        fcn.0041e920();\n        return 0;\n    }\n    fcn.00441c60();\n    fcn.0040a740();\n    return 0;\n}\n",
        "token_count": 446
    },
    "0043bfa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043bfa0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xe4) != '\\0') {\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                if (-1 < *0x54605c + -1) {\n                    *(*0x20 + -0x20) = 0x43bfe9;\n                    *0x54605c = *0x54605c + -1;\n                    fcn.0043a3c0();\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x43c005;\n                *0x54605c = *0x54605c + -1;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x20) = 0x43c016;\n            fcn.00433580();\n        }\n        *(puVar1 + -8) = 0x43c01c;\n        fcn.0045bdc0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 373
    },
    "0043c020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.0043c020(void)\n\n{\n    int64_t *in_RAX;\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t arg1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack64;\n    uchar auStack48 [40];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar2 = *in_RAX;\n    if (iVar2 == 0) {\n        return in_RAX;\n    }\n    if (*0x54a530 != '\\0') {\n        for (; iVar2 != 0; iVar2 = *(iVar2 + 0xa0)) {\n            fcn.00451040();\n        }\n    }\n    arg1 = 0;\n    iStack64 = *in_RAX;\n    iVar2 = iStack64;\n    iVar4 = 0;\n    while (iVar3 = iVar2,  iVar3 != 0) {\n        fcn.00437a40(1);\n        arg1 = arg1 + 1;\n        iVar4 = iVar3;\n        iVar2 = *(iVar3 + 0xa0);\n    }\n    *in_RAX = 0;\n    piVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (piVar1 == NULL) {\n        fcn.0040a520();\n        iVar2 = *0x546068;\n        iVar3 = *0x546070;\n        if ((iVar4 != 0) && (*(iVar4 + 0xa0) = 0,  iVar2 = iStack64,  iVar3 = iVar4,  *0x546070 != 0)) {\n            *(*0x546070 + 0xa0) = iStack64;\n            iVar2 = *0x546068;\n        }\n        *0x546070 = iVar3;\n        *0x546068 = iVar2;\n        *0x546078 = *0x546078 + arg1;\n        fcn.0040a740();\n        piVar1 = (**0x4b2968)(*0x4b2968, 0x4b2968);\n        return piVar1;\n    }\n    iVar4 = *0x546058;\n    iVar2 = 0;\n    auStack48._0_16_ = in_XMM15;\n    while( true ) {\n        iVar3 = iStack64;\n        if ((iVar4 <= iVar2) || (iStack64 == 0)) break;\n        if (iStack64 != 0) {\n            iStack64 = *(iStack64 + 0xa0);\n        }\n        *(iVar3 + 0xa0) = 0;\n        if (auStack48._8_8_ == 0) {\n            auStack48._0_8_ = iVar3;\n        }\n        else {\n            *(auStack48._8_8_ + 0xa0) = iVar3;\n        }\n        auStack48._0_16_ = CONCAT88(iVar3, auStack48._0_8_);\n        iVar2 = iVar2 + 1;\n    }\n    if (0 < iVar2) {\n        fcn.0040a520();\n        if (auStack48._8_8_ != 0) {\n            *(auStack48._8_8_ + 0xa0) = 0;\n            if (*0x546070 == 0) {\n                *0x546068 = auStack48._0_8_;\n            }\n            else {\n                *(*0x546070 + 0xa0) = auStack48._0_8_;\n            }\n            *0x546070 = auStack48._8_8_;\n        }\n        *0x546078 = *0x546078 + iVar2;\n        fcn.0040a740();\n        (**0x4b2968)(*0x4b2968, 0x4b2968);\n        arg1 = arg1 - iVar2;\n    }\n    if (iStack64 != 0) {\n        piVar1 = fcn.004422e0(arg1);\n    }\n    return piVar1;\n}\n",
        "token_count": 972
    },
    "0043c300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c300(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    uint8_t uVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t noname_1;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = *(unaff_R14 + 0x30);\n            if (*(uVar4 + 0xd8) == 0) {\n                *(*0x20 + -0x18) = uVar4;\n                if (*(uVar4 + 0x130) != 0) {\n                    *(*0x20 + -0x38) = 0x43c33d;\n                    fcn.0043a520();\n                    noname_0 = *(*(*0x20 + -0x18) + 0x130);\n                    unaff_RBX = 0;\n                    *(*0x20 + -0x38) = 0x43c353;\n                    fcn.0043a940(noname_0, param_2, param_3, param_4);\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                if (*(uVar4 + 0xe8) == '\\0') {\n                    while( true ) {\n                        param_2 = *(uVar4 + 0xa0);\n                        *(param_2 + 0x22c0) = 0;\n                        if ((*(uVar4 + 0xe4) != '\\0') &&\n                           ((*(param_2 + 0x998) != 0 || (*(param_2 + 0x194) != *(param_2 + 400))))) break;\n                        *(*0x20 + -0x38) = 0x43c3b1;\n                        iVar3 = fcn.0043aac0();\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x19) = unaff_RBX;\n                        *(*0x20 + -0x1a) = uVar4;\n                        noname_1 = *(*0x20 + -0x18);\n                        if (*(noname_1 + 0xe4) != '\\0') {\n                            *(*0x20 + -0x38) = 0x43c3d1;\n                            fcn.0043bfa0();\n                            iVar3 = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x1a);\n                            noname_1 = *(*0x20 + -0x18);\n                            unaff_RBX = *(*0x20 + -0x19);\n                        }\n                        if (*0x546080 == '\\0') {\n                            uVar1 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x38) = 0x43c3fc;\n                            uVar1 = fcn.00454fe0();\n                            uVar1 = uVar1 ^ 1;\n                            uVar4 = *(*0x20 + -0x1a);\n                            noname_1 = *(*0x20 + -0x18);\n                            unaff_RBX = *(*0x20 + -0x19);\n                            iVar3 = *(*0x20 + -0x10);\n                        }\n                        if (uVar1 == 0) {\ncode_r0x0043c4d1:\n                            if (uVar4 != '\\0') {\n                                *(*0x20 + -0x38) = 0x43c4da;\n                                fcn.0043a3c0();\n                                iVar3 = *(*0x20 + -0x10);\n                                noname_1 = *(*0x20 + -0x18);\n                                unaff_RBX = *(*0x20 + -0x19);\n                            }\n                            if (*(iVar3 + 0xe8) == 0) {\n                                *(*0x20 + -0x38) = 0x43c4fc;\n                                fcn.0043a940(uVar4, noname_1, param_3, param_4);\n                                return;\n                            }\n                            *(*0x20 + -0x38) = 0x43c36c;\n                            fcn.0043a780();\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                        else {\n                            *(*0x20 + -0x38) = 0x43c42c;\n                            fcn.0040a520();\n                            if (*0x546080 == '\\0') {\n                                cVar2 = '\\x01';\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x43c44b;\n                                cVar2 = fcn.00454fe0();\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0x38) = 0x43c4bd;\n                                fcn.0040a740();\n                                iVar3 = *(*0x20 + -0x10);\n                                uVar4 = *(*0x20 + -0x1a);\n                                noname_1 = *(*0x20 + -0x18);\n                                unaff_RBX = *(*0x20 + -0x19);\n                                goto code_r0x0043c4d1;\n                            }\n                            unaff_RBX = *(*0x20 + -0x10);\n                            *(unaff_RBX + 0xa0) = 0;\n                            uVar4 = unaff_RBX;\n                            if (*0x546090 != 0) {\n                                *(*0x546090 + 0xa0) = unaff_RBX;\n                                uVar4 = *0x546088;\n                            }\n                            *0x546088 = uVar4;\n                            *0x546098 = *0x546098 + 1;\n                            *(*0x20 + -0x38) = 0x43c4a5;\n                            *0x546090 = unaff_RBX;\n                            fcn.0040a740();\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                    }\n                    *(*0x20 + -0x38) = 0x43c517;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x38) = 0x43c528;\n                fcn.00433580();\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x38) = 0x43c539;\n            fcn.00433580();\n        }\n        *(puVar5 + -8) = 0x43c53f;\n        fcn.0045bdc0();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1599
    },
    "0043c560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043c560(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar1 = *(in_RAX + 0x1200);\n    iVar2 = *(in_RAX + 0x1208);\n    if ((iVar1 != 0) && ((iVar2 == 0 || (iVar1 <= iVar2)))) {\n        iVar2 = iVar1;\n    }\n    if (iVar2 == 0) {\n        return unaff_RBX;\n    }\n    if (unaff_RBX == 0) {\n        fcn.0045fdc0();\n        unaff_R14 = **(in_GS_OFFSET + *0x598520);\n        unaff_RBX = iStack64;\n    }\n    if ((unaff_RBX < iVar2) &&\n       ((in_RAX != *(*(unaff_R14 + 0x30) + 0xa0) || (*(in_RAX + 0x229c) <= *(in_RAX + 0x2298) >> 2)))) {\n        return unaff_RBX;\n    }\n    fcn.0040a520();\n    if (*(in_RAX + 0x2288) != 0) {\n        fcn.0044e600();\n        do {\n            if (*(in_RAX + 0x2288) == 0) break;\n            iVar1 = fcn.0044e9e0();\n        } while (iVar1 == 0);\n    }\n    if ((in_RAX == *(*(unaff_R14 + 0x30) + 0xa0)) && (*(in_RAX + 0x2288) >> 2 < *(in_RAX + 0x229c))) {\n        fcn.0044ee00();\n    }\n    fcn.0040a740();\n    return unaff_RBX;\n}\n",
        "token_count": 494
    },
    "0043c900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043c900(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(*0x20 + -0x38) = 0x43c945;\n                fcn.00437a40(1);\n                *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                *(*0x20 + -0x38) = 0x43c974;\n                fcn.0040a520();\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0xa0) = 0;\n                iVar2 = iVar1;\n                if (*0x546070 != 0) {\n                    *(*0x546070 + 0xa0) = iVar1;\n                    iVar2 = *0x546068;\n                }\n                *0x546068 = iVar2;\n                *0x546078 = *0x546078 + 1;\n                *(*0x20 + -0x38) = 0x43c9c5;\n                *0x546070 = iVar1;\n                fcn.0040a740();\n                *(*0x20 + -0x38) = 0x43c9ca;\n                fcn.0043c300();\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x1c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = *(in_RAX + 0x98);\n            *(*0x20 + -0x38) = 0x43c9f6;\n            fcn.00434ec0();\n            *(*0x20 + -0x38) = 0x43ca07;\n            fcn.004357c0();\n            *(*0x20 + -0x38) = 0x43ca11;\n            fcn.00435740();\n            *(*0x20 + -0x38) = 0x43ca25;\n            fcn.004357c0();\n            *(*0x20 + -0x38) = 0x43ca2f;\n            fcn.004354c0();\n            *(*0x20 + -0x38) = 0x43ca45;\n            fcn.004357c0();\n            *(*0x20 + -0x38) = 0x43ca50;\n            fcn.004354c0();\n            *(*0x20 + -0x38) = 0x43ca55;\n            fcn.00435120();\n            *(*0x20 + -0x38) = 0x43ca5a;\n            fcn.00434f40();\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x18) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x38) = 0x43ca7a;\n            fcn.00434ec0();\n            *(*0x20 + -0x38) = 0x43ca8b;\n            fcn.004357c0();\n            *(*0x20 + -0x38) = 0x43ca95;\n            fcn.00435740();\n            *(*0x20 + -0x38) = 0x43caa6;\n            fcn.004357c0();\n            *(*0x20 + -0x38) = 0x43cab0;\n            fcn.004354c0();\n            *(*0x20 + -0x38) = 0x43cac5;\n            fcn.004357c0();\n            *(*0x20 + -0x38) = 0x43cad0;\n            fcn.004354c0();\n            *(*0x20 + -0x38) = 0x43cad5;\n            fcn.00435120();\n            *(*0x20 + -0x38) = 0x43cada;\n            fcn.00434f40();\n            *(*0x20 + -0x38) = 0x43caeb;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43caf6;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1204
    },
    "0043cc60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043cc60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x54a530 != '\\0') {\n        *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n        fcn.0044f960(0);\n    }\n    fcn.0043c900();\n    return;\n}\n",
        "token_count": 140
    },
    "0043cce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043cce0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x54a530 != '\\0') {\n                unaff_RBX = 0;\n                *(*0x20 + -0x48) = 0x43cd12;\n                fcn.00450fc0();\n                in_RAX = *(*0x20 + 8);\n            }\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                if (*(in_RAX + 0xb4) == '\\0') goto code_r0x0043cd5c;\n                *(*0x20 + -0x48) = 0x43cd45;\n                iVar1 = fcn.0044bc60();\n                if (iVar1 != 0) {\n                    if ((*(iVar1 + 0x29) & 2) == 0) {\ncode_r0x0043cd5c:\n                        *(*0x20 + -0x48) = 0x43cd6b;\n                        fcn.00437e80(0x1009);\n                        *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                        *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                        *(*0x20 + -0x48) = 0x43cda5;\n                        fcn.004375a0(9);\n                        *(*0x20 + -0x48) = 0x43cdaa;\n                        fcn.0043c300();\n                        return;\n                    }\n                    *(*0x20 + -0x48) = 0x43cdb9;\n                    uVar2 = fcn.0044c400();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x48) = 0x43cdc8;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x48) = 0x43cdd9;\n                    fcn.004357c0();\n                    *(*0x20 + -0x48) = 0x43cde8;\n                    fcn.004357c0();\n                    *(*0x20 + -0x48) = 0x43cdf9;\n                    fcn.004357c0();\n                    *(*0x20 + -0x48) = 0x43cdfe;\n                    fcn.00434f40();\n                    *(*0x20 + -0x48) = 0x43ce0f;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x48) = 0x43ce25;\n                in_RAX = fcn.00433580();\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x2c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x48) = 0x43ce47;\n            fcn.00434ec0();\n            *(*0x20 + -0x48) = 0x43ce58;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x43ce65;\n            fcn.00435740();\n            *(*0x20 + -0x48) = 0x43ce76;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x43ce85;\n            fcn.004354c0();\n            *(*0x20 + -0x48) = 0x43ce96;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x43cea5;\n            fcn.004354c0();\n            *(*0x20 + -0x48) = 0x43ceaa;\n            fcn.00435120();\n            *(*0x20 + -0x48) = 0x43ceaf;\n            fcn.00434f40();\n            *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x48) = 0x43cecf;\n            fcn.00434ec0();\n            *(*0x20 + -0x48) = 0x43cee5;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x43ceef;\n            fcn.00435740();\n            *(*0x20 + -0x48) = 0x43cf05;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x43cf0f;\n            fcn.004354c0();\n            *(*0x20 + -0x48) = 0x43cf25;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x43cf30;\n            fcn.004354c0();\n            *(*0x20 + -0x48) = 0x43cf35;\n            fcn.00435120();\n            *(*0x20 + -0x48) = 0x43cf3a;\n            fcn.00434f40();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x48) = 0x43cf4b;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43cf56;\n        fcn.00460800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1517
    },
    "0043d3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d3c0(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    if ((**(unaff_R14 + 0x30) != unaff_R14) && ((*(unaff_R14 + 0x30))[10] != unaff_R14)) {\n        *(unaff_R14 + 0x40) = in_RAX;\n        *(unaff_R14 + 0x38) = unaff_RBX;\n        *(unaff_R14 + 0x58) = in_XMM15_Da;\n        *(unaff_R14 + 0x5c) = in_XMM15_Db;\n        *(unaff_R14 + 0x60) = in_XMM15_Dc;\n        *(unaff_R14 + 100) = in_XMM15_Dd;\n        if (*(unaff_R14 + 0x50) != 0) {\n            fcn.00436a20();\n        }\n        return;\n    }\n    fcn.00433580();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 296
    },
    "0043d420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d420(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14 + 0xb7) = 1;\n    fcn.0043d3c0();\n    unaff_R14[0xe] = unaff_RBX;\n    unaff_R14[0xf] = in_RAX;\n    fcn.00437a40(3);\n    uVar1 = unaff_R14[0xe];\n    if ((uVar1 <= *unaff_R14 && *unaff_R14 != uVar1) || (unaff_R14[1] < uVar1)) {\n        fcn.0045bc80();\n    }\n    if (*0x54a530 != '\\0') {\n        fcn.0045bc80();\n        fcn.0043d3c0();\n    }\n    if (*0x5460f8 != '\\0') {\n        fcn.0045bc80();\n        fcn.0043d3c0();\n    }\n    if (*(*(unaff_R14[6] + 0xa0) + 0x2270) != 0) {\n        fcn.0045bc80();\n        fcn.0043d3c0();\n    }\n    *(unaff_R14[6] + 0x26c) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    iVar2 = *(unaff_R14[6] + 0xa0);\n    *(iVar2 + 0x38) = 0;\n    *(unaff_R14[6] + 0xb0) = iVar2;\n    *(unaff_R14[6] + 0xa0) = 0;\n    *(iVar2 + 4) = 2;\n    if (*0x5460e8 != '\\0') {\n        fcn.0045bc80();\n        fcn.0043d3c0();\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 564
    },
    "0043dd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043ddf7)\n\nulong fcn.0043dd20(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*0x5460ec == 0x7fffffff) {\n        return 0;\n    }\n    if ((in_RAX != 0) && (*(in_RAX + 4) == 2)) {\n        LOCK();\n        if (*(in_RAX + 4) == 2) {\n            *(in_RAX + 4) = 0;\n            fcn.00440060();\n            fcn.0043dee0();\n            return 1;\n        }\n    }\n    if (*0x546050 != 0) {\n        fcn.0045bc80();\n    }\n    return 0;\n}\n",
        "token_count": 170
    },
    "0043dee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043dee0(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    \n    if (*(*(*(unaff_R14 + 0x30) + 0xa0) + 0x14) != *(*(unaff_R14 + 0x30) + 0x26c)) {\n        if (*0x54a530 != '\\0') {\n            fcn.0045bc80();\n        }\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0043e460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0043e460(uint64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uchar auVar5 [16];\n    char cVar6;\n    uint8_t uVar7;\n    int64_t in_RAX;\n    int64_t iVar8;\n    ulong uVar9;\n    uint64_t uVar10;\n    int64_t *piVar11;\n    int64_t iVar12;\n    ulong unaff_RBX;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (in_RAX == 0) {\n                *(*0x20 + -0x50) = 0x43e49d;\n                fcn.00433680();\n            }\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg1 = *(unaff_R14 + 0x30);\n            *(*0x20 + -0x30) = arg1;\n            *(*0x20 + -0x18) = *(arg1 + 0xa0);\n            *(*0x20 + -0x50) = 0x43e4c7;\n            iVar8 = fcn.0043ed00();\n            if (iVar8 == 0) {\n                *(*0x20 + -0x50) = 0x43e4d6;\n                uVar9 = fcn.0043e220();\n                *(*0x20 + -0x28) = uVar9;\n                arg1 = 6;\n                *(*0x20 + -0x50) = 0x43e4e7;\n                fcn.00437a40(6);\n                *(*0x20 + -0x50) = 0x43e4f1;\n                fcn.00436a40();\n                iVar8 = *(*0x20 + -0x28);\n            }\n            if (*(iVar8 + 8) != 0) {\n                arg1 = *(iVar8 + 0x90);\n                if (*(iVar8 + 0x90) == 6) {\n                    *(*0x20 + -0x28) = iVar8;\n                    *(*0x20 + -0x38) = *(iVar8 + 8);\n                    *(*0x20 + -0x20) = iVar8 + 0x38;\n                    *(*0x20 + -0x50) = 0x43e53a;\n                    fcn.0045eaa0();\n                    iVar8 = *(*0x20 + -0x38);\n                    iVar12 = *(*0x20 + -0x28);\n                    *(iVar12 + 0x38) = iVar8 + -0x20;\n                    *(iVar12 + 0x80) = iVar8 + -0x20;\n                    *(iVar12 + 0x40) = 0x45df41;\n                    *(iVar12 + 0x48) = iVar12;\n                    *(*0x20 + -0x50) = 0x43e577;\n                    fcn.004483a0(iVar12, iVar12, in_R8, in_R9);\n                    *(*(*0x20 + -0x28) + 0x128) = *(*0x20 + 0x18);\n                    *(*0x20 + -0x50) = 0x43e592;\n                    uVar9 = fcn.0043e840();\n                    if (*0x5985b0 == 0) {\n                        iVar8 = *(*0x20 + -0x28);\n                        *(iVar8 + 0x130) = uVar9;\n                    }\n                    else {\n                        iVar8 = *(*0x20 + -0x28);\n                        *(*0x20 + -0x50) = 0x43e5c5;\n                        fcn.0045df80(iVar8 + 0x130, iVar8, in_R8, in_R9);\n                    }\n                    *(iVar8 + 0x138) = **(*0x20 + 8);\n                    *(*0x20 + -0x50) = 0x43e5e5;\n                    cVar6 = fcn.00454fe0();\n                    if (cVar6 == '\\0') {\n                        iVar12 = *(*(*0x20 + -0x30) + 0x90);\n                        if (iVar12 == 0) {\n                            iVar8 = *(*0x20 + -0x28);\n                        }\n                        else if (*0x5985b0 == 0) {\n                            iVar8 = *(*0x20 + -0x28);\n                            *(iVar8 + 0x168) = *(iVar12 + 0x168);\n                        }\n                        else {\n                            *(*0x20 + -0x50) = 0x43e64c;\n                            iVar8 = fcn.0045e0e0(iVar8, *(*0x20 + -0x30), *(*0x20 + -0x28) + 0x168, in_R9);\n                        }\n                        if (*0x541f04 != '\\0') {\n                            *(iVar8 + 0x17c) = 2;\n                        }\n                    }\n                    else {\n                        LOCK();\n                        *0x546048 = *0x546048 + 1;\n                        iVar8 = *(*0x20 + -0x28);\n                    }\n                    uVar10 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                    auVar5 = ZEXT816(uVar10) * ZEXT816(uVar10 ^ 0xe7037ed1a0b428db);\n                    *(*(unaff_R14 + 0x30) + 0xf0) = uVar10;\n                    uVar7 = SUB161(auVar5, 0) ^ SUB161(auVar5 >> 0x40, 0);\n                    *(iVar8 + 0xbd) = uVar7;\n                    if ((uVar7 & 7) == 0) {\n                        *(iVar8 + 0xbc) = 1;\n                    }\n                    *(*0x20 + -0x50) = 0x43e6c5;\n                    fcn.00437a40(1);\n                    piVar11 = *(*0x20 + -0x28);\n                    iVar12 = piVar11[1] - *piVar11;\n                    iVar8 = *(*0x20 + -0x18);\n                    if (iVar8 == 0) {\n                        LOCK();\n                        *0x598d10 = *0x598d10 + iVar12;\n                    }\n                    else {\n                        iVar4 = *(iVar8 + 0x22a8);\n                        iVar2 = iVar4 + iVar12;\n                        *(iVar8 + 0x22a8) = iVar2;\n                        if (0x3ffe < iVar4 + 0x1fff + iVar12) {\n                            LOCK();\n                            *0x598d10 = *0x598d10 + iVar2;\n                            *(iVar8 + 0x22a8) = 0;\n                        }\n                    }\n                    iVar12 = *0x546000;\n                    if (*(iVar8 + 0x188) == *(iVar8 + 0x180)) {\n                        LOCK();\n                        iVar2 = *0x546000 + 1;\n                        *0x546000 = *0x546000 + 0x10;\n                        *(iVar8 + 0x180) = iVar2;\n                        *(iVar8 + 0x188) = iVar12 + 0x11;\n                    }\n                    piVar11[0x13] = *(iVar8 + 0x180);\n                    *(iVar8 + 0x180) = *(iVar8 + 0x180) + 1;\n                    if (*0x54a530 != '\\0') {\n                        *(*0x20 + -0x50) = 0x43e79b;\n                        fcn.00450d20();\n                        piVar11 = *(*0x20 + -0x28);\n                    }\n                    iVar3 = *(*(*0x20 + -0x30) + 0xd8);\n                    *(*(*0x20 + -0x30) + 0xd8) = iVar3 + -1;\n                    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return piVar11;\n                }\n                *(*0x20 + -0x50) = 0x43e7e7;\n                fcn.00433580();\n            }\n            unaff_RBX = 0x1c;\n            *(*0x20 + -0x50) = 0x43e7f8;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        *(puVar13 + 0x18) = arg1;\n        *(puVar13 + -8) = 0x43e80d;\n        fcn.0045bdc0();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        arg1 = *(puVar13 + 0x18);\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 2251
    },
    "0043e840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0043e840(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    uchar *puVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    uint64_t noname_1;\n    ulong *puVar8;\n    uchar *unaff_RBP;\n    int32_t iVar9;\n    int64_t iVar10;\n    ulong uVar11;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x350 && *0x20 + -0x350 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x3d0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x598834 < 1) || (*(in_RAX + 0x98) == 0)) {\n                return NULL;\n            }\n            *(*0x20 + 8) = in_RAX;\n            puVar8 = *(in_RAX + 0x130);\n            if (puVar8 == NULL) {\n                uVar11 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *puVar8;\n                uVar11 = puVar8[1];\n            }\n            *(*0x20 + -0x48) = uVar4;\n            *(*0x20 + -0x378) = uVar11;\n            iVar9 = uVar11 + 1;\n            if (*0x598834 < iVar9) {\n                iVar9 = *0x598834;\n            }\n            *(*0x20 + -0x370) = iVar9;\n            *(*0x20 + -0x3d8) = 0x43e8e5;\n            uVar4 = fcn.00445720(iVar9);\n            if (*(*0x20 + -0x370) != 0) {\n                *(*0x20 + -0x38) = uVar4;\n                iVar10 = *(*0x20 + -0x370) + -1;\n                noname_1 = -iVar10 >> 0x3f & 0x28;\n                *(*0x20 + -0x3d8) = 0x43e92d;\n                fcn.004114a0(iVar10);\n                *(*0x20 + -0x3e0) = unaff_RBP;\n                *(*0x20 + -0x3d8) = 0x43e94f;\n                fcn.0045e5ce();\n                *(*0x20 + -0x3d0) = 0;\n                uVar11 = 100;\n                *(*0x20 + -0x3d8) = 0x43e987;\n                uVar4 = fcn.004514c0(0, noname_1, *0x20 + -0x368, 100);\n                *(*0x20 + -0x380) = uVar4;\n                *(*0x20 + -0x3d8) = 0x43e99e;\n                puVar5 = fcn.00445720(uVar4);\n                iVar10 = *(*0x20 + -0x380);\n                iVar7 = iVar10;\n                if (100 < iVar10) {\n                    iVar7 = 100;\n                }\n                if (puVar5 != *0x20 + -0x368) {\n                    *(*0x20 + -0x40) = puVar5;\n                    *(*0x20 + -0x3d8) = 0x43e9ce;\n                    fcn.0045eda0(iVar7 << 3);\n                    puVar5 = *(*0x20 + -0x40);\n                    iVar10 = *(*0x20 + -0x380);\n                }\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x30) = puVar5;\n                *(*0x20 + -0x28) = iVar10;\n                *(*0x20 + -0x20) = iVar10;\n                *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x98);\n                puVar8 = *(*(*0x20 + 8) + 0x128);\n                *(*0x20 + -0x10) = puVar8;\n                if (*0x5985b0 == 0) {\n                    puVar8 = *(*0x20 + -0x38);\n                    *puVar8 = *(*0x20 + -0x30);\n                    uVar1 = *(*0x20 + -0x24);\n                    uVar2 = *(*0x20 + -0x20);\n                    uVar3 = *(*0x20 + -0x1c);\n                    *(puVar8 + 1) = *(*0x20 + -0x28);\n                    *(puVar8 + 0xc) = uVar1;\n                    *(puVar8 + 2) = uVar2;\n                    *(puVar8 + 0x14) = uVar3;\n                    uVar1 = *(*0x20 + -0x14);\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar3 = *(*0x20 + -0xc);\n                    *(puVar8 + 3) = *(*0x20 + -0x18);\n                    *(puVar8 + 0x1c) = uVar1;\n                    *(puVar8 + 4) = uVar2;\n                    *(puVar8 + 0x24) = uVar3;\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43ea86;\n                    fcn.004112e0(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x3d8) = 0x43ea92;\n                puVar6 = fcn.0040c6e0();\n                uVar4 = *(*0x20 + -0x370);\n                puVar6[1] = uVar4;\n                puVar6[2] = uVar4;\n                if (*0x5985b0 == 0) {\n                    *puVar6 = *(*0x20 + -0x38);\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43eac5;\n                    puVar6 = fcn.0045e080(*(*0x20 + -0x38), puVar8, iVar10, uVar11);\n                }\n                return puVar6;\n            }\n            *(*0x20 + -0x3d8) = 0x43eae5;\n            in_RAX = fcn.0045e4e0(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x43eaf0;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1663
    },
    "0043eb00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043eb00(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar (*unaff_RBX) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX[9] == 6) {\n                if (*0x52d268 != *(*unaff_RBX + 8) - **unaff_RBX) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + -0x68) = 0x43eb5a;\n                    fcn.00446860();\n                    unaff_RBX = *(*0x20 + 0x10);\n                    *unaff_RBX = in_XMM15;\n                    *unaff_RBX[1] = 0;\n                    in_RAX = *(*0x20 + 8);\n                }\n                *unaff_RBX[10] = *(in_RAX + 0x9a0);\n                *(in_RAX + 0x9a0) = unaff_RBX;\n                iVar2 = *(in_RAX + 0x9a8) + 1;\n                *(in_RAX + 0x9a8) = iVar2;\n                if (0x3f < iVar2) {\n                    *(*0x20 + -0x48) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    iVar2 = 0;\n                    while (0x1f < *(in_RAX + 0x9a8)) {\n                        piVar1 = *(in_RAX + 0x9a0);\n                        if (piVar1 != NULL) {\n                            *(in_RAX + 0x9a0) = piVar1[0x14];\n                        }\n                        *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n                        if (*piVar1 == 0) {\n                            piVar1[0x14] = *(*0x20 + -0x18);\n                            *(*0x20 + -0x18) = piVar1;\n                            if (*(*0x20 + -0x10) == 0) {\n                                *(*0x20 + -0x10) = piVar1;\n                            }\n                        }\n                        else {\n                            piVar1[0x14] = *(*0x20 + -0x48);\n                            *(*0x20 + -0x48) = piVar1;\n                            if (*(*0x20 + -0x40) == 0) {\n                                *(*0x20 + -0x40) = piVar1;\n                            }\n                        }\n                        iVar2 = iVar2 + 1;\n                    }\n                    *(*0x20 + -0x4c) = iVar2;\n                    *(*0x20 + -0x68) = 0x43ec45;\n                    fcn.0040a520();\n                    *(*0x20 + -0x28) = *(*0x20 + -0x18);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x18) != 0) {\n                        *(*(*0x20 + -0x10) + 0xa0) = *0x5460b0;\n                        *0x5460b0 = *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x38) = *(*0x20 + -0x48);\n                    *(*0x20 + -0x30) = *(*0x20 + -0x40);\n                    if (*(*0x20 + -0x48) != 0) {\n                        *(*(*0x20 + -0x40) + 0xa0) = *0x5460a8;\n                        *0x5460a8 = *(*0x20 + -0x38);\n                    }\n                    *0x5460b8 = *0x5460b8 + *(*0x20 + -0x4c);\n                    *(*0x20 + -0x68) = 0x43ecc5;\n                    fcn.0040a740();\n                }\n                return;\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x68) = 0x43ecdb;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x43eceb;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1213
    },
    "0043ed00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0043ed00(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    do {\n        piVar1 = *(in_RAX + 0x9a0);\n        if ((piVar1 != NULL) || ((*0x5460a8 == 0 && (*0x5460b0 == 0)))) {\n            if (piVar1 != NULL) {\n                *(in_RAX + 0x9a0) = piVar1[0x14];\n                *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n                if ((*piVar1 != 0) && (*0x52d268 != piVar1[1] - *piVar1)) {\n                    fcn.0045bc80();\n                }\n                if (*piVar1 == 0) {\n                    fcn.0045bc80();\n                    piVar1[2] = *piVar1 + 0x13a0;\n                }\n                return piVar1;\n            }\n            return NULL;\n        }\n        fcn.0040a520();\n        while (*(in_RAX + 0x9a8) < 0x20) {\n            if (*0x5460a8 == 0) {\n                if (*0x5460b0 == 0) break;\n                iVar2 = *0x5460b0;\n                *0x5460b0 = *(*0x5460b0 + 0xa0);\n            }\n            else {\n                iVar2 = *0x5460a8;\n                *0x5460a8 = *(*0x5460a8 + 0xa0);\n            }\n            *0x5460b8 = *0x5460b8 + -1;\n            *(iVar2 + 0xa0) = *(in_RAX + 0x9a0);\n            *(in_RAX + 0x9a0) = iVar2;\n            *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + 1;\n        }\n        fcn.0040a740();\n    } while( true );\n}\n",
        "token_count": 552
    },
    "0043efa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043efa0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack72 [48];\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar2 = 0;\n    auStack72._0_16_ = in_XMM15;\n    auStack24 = in_XMM15;\n    while( true ) {\n        piVar1 = *(in_RAX + 0x9a0);\n        if (piVar1 == NULL) break;\n        if (piVar1 != NULL) {\n            *(in_RAX + 0x9a0) = piVar1[0x14];\n        }\n        *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n        if (*piVar1 == 0) {\n            piVar1[0x14] = auStack24._0_8_;\n            auStack24 = CONCAT88(auStack24._8_8_, piVar1);\n            if (auStack24._8_8_ == 0) {\n                auStack24 = CONCAT88(piVar1, piVar1);\n            }\n        }\n        else {\n            piVar1[0x14] = auStack72._0_8_;\n            auStack72._0_16_ = CONCAT88(auStack72._8_8_, piVar1);\n            if (auStack72._8_8_ == 0) {\n                auStack72._0_16_ = CONCAT88(piVar1, piVar1);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0040a520();\n    if (auStack24._0_8_ != 0) {\n        *(auStack24._8_8_ + 0xa0) = *0x5460b0;\n        *0x5460b0 = auStack24._0_8_;\n    }\n    if (auStack72._0_8_ != 0) {\n        *(auStack72._8_8_ + 0xa0) = *0x5460a8;\n        *0x5460a8 = auStack72._0_8_;\n    }\n    *0x5460b8 = *0x5460b8 + iVar2;\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 603
    },
    "0043f100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f100(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iVar2;\n    \n    iVar2 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0x23c) == 0) {\n        fcn.0045bc80();\n        unaff_R14 = **(in_GS_OFFSET + *0x598520);\n    }\n    piVar1 = *(iVar2 + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + -1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if ((*(iVar2 + 0x23c) == 0) && (*(iVar2 + 0x238) == 0)) {\n        *(iVar2 + 0x130) = 0;\n        *(unaff_R14 + 0xe8) = 0;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0043f1e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f1e0(ulong noname_0, uint64_t arg2, uint64_t arg3)\n\n{\n    uint32_t *puVar1;\n    uint64_t arg1;\n    uint *in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint unaff_EBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = unaff_EBX;\n            in_RAX[1] = 3;\n            *(in_RAX + 0x26e) = 0;\n            *(in_RAX + 0x270) = 0x80;\n            if (*0x5985b0 == 0) {\n                *(in_RAX + 0x26c) = in_RAX + 0x272;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43f23c;\n                in_RAX = fcn.0045e080(in_RAX + 0x272, arg2, arg3, in_R9);\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(in_RAX + 0x1c) = 0;\n            *(in_RAX + 0x1e) = 0x20;\n            if (*0x5985b0 == 0) {\n                *(in_RAX + 0x1a) = in_RAX + 0x20;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43f271;\n                in_RAX = fcn.0045e080(in_RAX + 0x20, arg2, arg3, in_R9);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x43f285;\n            fcn.0042ce80(in_RAX + 0x498);\n            if (*(*(*0x20 + 8) + 0x40) == 0) {\n                uVar5 = *(*0x20 + 0x10);\n                arg2 = uVar5;\n                if (uVar5 != 0) {\n                    *(*0x20 + -0x20) = 0x43f2ba;\n                    uVar2 = fcn.00413580();\n                    *(*(*0x20 + 8) + 0x40) = uVar2;\n                    uVar5 = *(*0x20 + 0x10);\n                    goto code_r0x0043f2c7;\n                }\n                if (*0x598460 != 0) {\n                    *(*(*0x20 + 8) + 0x40) = *0x598460;\n                    goto code_r0x0043f2c7;\n                }\n            }\n            else {\n                uVar5 = *(*0x20 + 0x10);\ncode_r0x0043f2c7:\n                arg1 = *0x545678;\n                arg2 = (uVar5 / 0x20) * 0x20;\n                uVar4 = uVar5 % 0x20;\n                if (-1 < uVar4) {\n                    arg2 = -(uVar4 < 0x20);\n                    uVar4 = 1 << (uVar4 & 0x1f) & -(uVar4 < 0x20);\n                    arg3 = uVar4;\n                    uVar3 = ((uVar5 >> 0x1f) >> 0x1b) + uVar5 >> 5;\n                    if (uVar3 < *0x545678) {\n                        puVar1 = *0x545670 + uVar3 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | uVar4;\n                        if (uVar3 < *0x545638) {\n                            puVar1 = *0x545630 + uVar3 * 4;\n                            LOCK();\n                            *puVar1 = *puVar1 & ~uVar4;\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x43f33f;\n                        arg2 = *0x545630;\n                        fcn.0045e420(*0x545638);\n                    }\n                    *(*0x20 + -0x20) = 0x43f347;\n                    fcn.0045e420(arg1);\n                }\n                *(*0x20 + -0x20) = 0x43f34c;\n                fcn.00431ba0();\n            }\n            unaff_EBX = 0xf;\n            *(*0x20 + -0x20) = 0x43f35d;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_EBX;\n        *(puVar6 + -8) = 0x43f36c;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_EBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1280
    },
    "0043f380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f380(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    while (*(in_RAX + 400) != *(in_RAX + 0x194)) {\n        uVar3 = *(in_RAX + 0x194) - 1;\n        *(in_RAX + 0x194) = uVar3;\n        param_2 = *(in_RAX + 0x198 + (uVar3 & 0xff) * 8);\n        *(param_2 + 0xa0) = *0x546068;\n        if (*0x546070 == 0) {\n            *0x546070 = param_2;\n        }\n        *0x546078 = *0x546078 + 1;\n        *0x546068 = param_2;\n    }\n    iVar2 = *(in_RAX + 0x998);\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = *0x546068;\n        if (*0x546070 == 0) {\n            *0x546070 = iVar2;\n        }\n        *0x546078 = *0x546078 + 1;\n        *0x546068 = iVar2;\n        *(in_RAX + 0x998) = 0;\n        param_2 = iVar2;\n    }\n    if (*(in_RAX + 0x2288) != 0) {\n        fcn.0040a520();\n        fcn.0040a520();\n        param_2 = *(in_RAX + 0x2288);\n        fcn.0044e3c0(param_2);\n        *(in_RAX + 0x2288) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        if (*0x5985b0 == 0) {\n            *(in_RAX + 0x2280) = 0;\n            iVar2 = in_RAX;\n        }\n        else {\n            param_2 = 0;\n            iVar2 = fcn.0045e0a0(in_RAX + 0x2280, 0, param_3, param_4);\n        }\n        *(iVar2 + 0x2298) = 0;\n        *(iVar2 + 0x229c) = 0;\n        uVar1 = *(iVar2 + 0x1200);\n        *(iVar2 + 0x1200) = 0;\n        fcn.0040a740(uVar1);\n        fcn.0040a740();\n    }\n    if (*0x598384 != 0) {\n        fcn.0042cfc0();\n        fcn.00422d60(in_RAX + 0x1238);\n    }\n    fcn.004115e0(in_RAX + 0x9c8);\n    *(in_RAX + 0x9b8) = 0;\n    *(in_RAX + 0x9c0) = 0x80;\n    if (*0x5985b0 == 0) {\n        *(in_RAX + 0x9b0) = in_RAX + 0x9c8;\n        iVar2 = in_RAX;\n    }\n    else {\n        iVar2 = fcn.0045e080(in_RAX + 0x9c8, param_2, param_3, param_4);\n    }\n    fcn.004115e0(iVar2 + 0x80);\n    *(in_RAX + 0x70) = 0;\n    *(in_RAX + 0x78) = 0x20;\n    if (*0x5985b0 == 0) {\n        *(in_RAX + 0x68) = in_RAX + 0x80;\n    }\n    else {\n        fcn.0045e080(in_RAX + 0x80, in_RAX, param_3, param_4);\n    }\n    fcn.0045bc80();\n    fcn.004136e0(*(in_RAX + 0x40));\n    *(in_RAX + 0x40) = 0;\n    fcn.0043efa0();\n    fcn.0044f8a0();\n    *(in_RAX + 0x1210) = 0;\n    *(in_RAX + 4) = 4;\n    return;\n}\n",
        "token_count": 1110
    },
    "0043f780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043f780(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    int32_t in_EAX;\n    ulong uVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    int64_t *piVar11;\n    uint32_t uVar12;\n    int64_t *unaff_RBX;\n    int64_t *piVar13;\n    uint64_t uVar14;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    uint32_t uVar16;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar15 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar15 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((-1 < *0x598388) && (0 < in_EAX)) {\n                *(*0x20 + -0x70) = *0x598388;\n                *(*0x20 + 8) = in_EAX;\n                if (*0x54a530 != '\\0') {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = in_EAX;\n                    unaff_RBX = 0x1;\n                    unaff_RSI = 0x1;\n                    *(*0x20 + -0xb8) = 0x43f7fc;\n                    fcn.0044f960(*0x20 + -0x38);\n                }\n                *(*0x20 + -0xb8) = 0x43f805;\n                fcn.0045fdc0();\n                unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                iVar6 = *(*0x20 + -0xb0);\n                if (*0x546128 == 0) {\n                    uVar10 = *(*0x20 + -0x70);\n                }\n                else {\n                    uVar10 = *(*0x20 + -0x70);\n                    *0x546130 = *0x546130 + uVar10 * (iVar6 - *0x546128);\n                }\n                *(*0x20 + -0x40) = iVar6;\n                uVar12 = *(*0x20 + 8);\n                uVar9 = uVar12;\n                *(*0x20 + -0x6c) = ((uVar12 + 0x1f >> 0x1f) >> 0x1b) + 0x1f + uVar12 >> 5;\n                *0x546128 = iVar6;\n                if (*0x5455b8 < uVar12) {\n                    *(*0x20 + -0xb8) = 0x43f897;\n                    fcn.0040a520();\n                    iVar1 = *(*0x20 + 8);\n                    if (*0x5455c0 < iVar1) {\n                        *(*0x20 + -0x50) = iVar1;\n                        *(*0x20 + -0xb8) = 0x43f8dc;\n                        uVar4 = fcn.00445720(iVar1);\n                        *(*0x20 + -0x10) = uVar4;\n                        uVar4 = *(*0x20 + -0x50);\n                        *(*0x20 + -0xb8) = 0x43f906;\n                        fcn.004114a0(uVar4);\n                        *0x5455b8 = *(*0x20 + -0x50);\n                        *0x5455c0 = *0x5455b8;\n                        if (*0x5985b0 == 0) {\n                            *0x5455b0 = *(*0x20 + -0x10);\n                            piVar13 = *0x5455b8;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x43f947;\n                            fcn.0045e0e0(uVar4, *0x5455b8, uVar9, iVar6);\n                            piVar13 = *0x5455b8;\n                        }\ncode_r0x0043f94e:\n                        *0x5455b8 = piVar13;\n                        unaff_RSI = *0x545638;\n                        uVar10 = *(*0x20 + -0x6c);\n                        uVar9 = uVar10;\n                        if (*0x545640 < uVar10) {\n                            *(*0x20 + -0x58) = uVar10;\n                            *(*0x20 + -0xb8) = 0x43f9b3;\n                            uVar4 = fcn.004455c0(*0x545638);\n                            unaff_RBX = *(*0x20 + -0x58);\n                            piVar13 = unaff_RBX;\n                            piVar5 = unaff_RBX;\n                            if (*0x5985b0 != 0) {\n                                *(*0x20 + -0xb8) = 0x43f9e5;\n                                piVar13 = *0x545638;\n                                *0x545638 = unaff_RBX;\n                                piVar5 = *0x545640;\n                                *0x545640 = unaff_RBX;\n                                fcn.0045df80(piVar13, piVar5, uVar9, iVar6);\n                                uVar4 = *0x545630;\n                                piVar13 = *0x545638;\n                                piVar5 = *0x545640;\n                            }\n                            *0x545640 = piVar5;\n                            *0x545638 = piVar13;\n                            *0x545630 = uVar4;\n                            *(*0x20 + -0xb8) = 0x43f9ff;\n                            uVar4 = fcn.004455c0(*0x545678);\n                            *0x545680 = *(*0x20 + -0x58);\n                            piVar13 = *0x545680;\n                            if (*0x5985b0 != 0) {\n                                *(*0x20 + -0xb8) = 0x43fa30;\n                                piVar13 = *0x545678;\n                                *0x545678 = *0x545680;\n                                fcn.0045df80(piVar13, *0x545680, uVar9, iVar6);\n                                uVar4 = *0x545670;\n                                piVar13 = *0x545678;\n                            }\ncode_r0x0043fa32:\n                            *0x545678 = piVar13;\n                            *0x545670 = uVar4;\n                            *(*0x20 + -0xb8) = 0x43fa3e;\n                            fcn.0040a740();\n                            uVar10 = *(*0x20 + -0x70);\n                            uVar9 = *(*0x20 + 8);\n                            goto code_r0x0043fa80;\n                        }\n                        unaff_RBX = uVar10;\n                        piVar5 = *0x545640;\n                        if (unaff_RBX <= *0x545640) {\n                            piVar5 = *0x545680;\n                            *0x545638 = unaff_RBX;\n                            uVar4 = *0x545670;\n                            piVar13 = unaff_RBX;\n                            if (unaff_RBX <= *0x545680) goto code_r0x0043fa32;\n                            goto code_r0x0043ffb2;\n                        }\n                        goto code_r0x0043ffba;\n                    }\n                    unaff_RSI = iVar1;\n                    piVar5 = *0x5455c0;\n                    piVar13 = unaff_RSI;\n                    if (unaff_RSI <= *0x5455c0) goto code_r0x0043f94e;\n                }\n                else {\ncode_r0x0043fa80:\n                    while( true ) {\n                        piVar13 = uVar10;\n                        if (uVar9 <= uVar10) break;\n                        unaff_RSI = uVar10;\n                        piVar11 = *0x5455b8;\n                        piVar5 = piVar13;\n                        if (*0x5455b8 <= unaff_RSI) goto code_r0x0043ffaa;\n                        *(*0x20 + -0x60) = uVar10;\n                        *(*0x20 + -0x48) = unaff_RSI;\n                        iVar6 = (*0x5455b0)[unaff_RSI];\n                        if (iVar6 == 0) {\n                            *(*0x20 + -0xb8) = 0x43fac7;\n                            iVar6 = fcn.0040c6e0();\n                            piVar13 = *(*0x20 + -0x60);\n                        }\n                        *(*0x20 + -0x28) = iVar6;\n                        *(*0x20 + -0xb8) = 0x43fae5;\n                        fcn.0043f1e0(iVar6, piVar13, uVar9);\n                        piVar11 = *0x5455b8;\n                        piVar5 = *0x5455b0;\n                        if (*0x5455b8 <= *(*0x20 + -0x48)) goto code_r0x0043ffa5;\n                        piVar5 = *0x5455b0 + *(*0x20 + -0x48);\n                        if (*0x5985b0 != '\\0') {\n                            *(*0x20 + -0x18) = piVar5;\n                            piVar13 = *(*0x20 + -0x28);\n                            *(*0x20 + -0xb8) = 0x43fb2f;\n                            fcn.004037e0();\n                            piVar5 = *(*0x20 + -0x18);\n                        }\n                        *piVar5 = *(*0x20 + -0x28);\n                        uVar10 = *(*0x20 + -0x60) + 1;\n                        uVar9 = *(*0x20 + 8);\n                        unaff_RBX = piVar13;\n                    }\n                    *(*0x20 + -0x20) = unaff_R14;\n                    piVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    if (piVar2 == NULL) {\ncode_r0x0043fbff:\n                        piVar5 = *(*0x20 + -0x20);\ncode_r0x0043fc07:\n                        *(piVar5[6] + 0xa0) = 0;\n                        piVar13 = *0x5455b0;\n                        if (*0x5455b8 != NULL) {\n                            iVar6 = **0x5455b0;\n                            *(iVar6 + 0x38) = 0;\n                            *(iVar6 + 4) = 0;\n                            *(*0x20 + -0xb8) = 0x43fc45;\n                            fcn.00440000();\n                            if (*0x54a530 != '\\0') {\n                                *(*0x20 + -0xb8) = 0x43fc53;\n                                fcn.00450e00();\n                            }\n                            goto code_r0x0043fc53;\n                        }\n                    }\n                    else {\n                        if (uVar9 <= *piVar2) {\n                            if (piVar2 == NULL) goto code_r0x0043fbff;\n                            if (*0x54a530 != '\\0') {\n                                *(unaff_R14 + 0xe0) = piVar2;\n                                unaff_RSI = NULL;\n                                *(*0x20 + -0xb8) = 0x43fb95;\n                                fcn.0044f960(0);\n                                *(*0x20 + -0xb8) = 0x43fbad;\n                                fcn.00450aa0();\n                            }\n                            piVar5 = *(*0x20 + -0x20);\n                            *(*(piVar5[6] + 0xa0) + 0x38) = 0;\n                            goto code_r0x0043fc07;\n                        }\n                        piVar2[1] = 1;\n                        *(*0x20 + -0xb8) = 0x43fbfd;\n                        fcn.00413e20();\n                        piVar13 = unaff_RBX;\ncode_r0x0043fc53:\n                        *0x598460 = 0;\n                        uVar12 = *(*0x20 + -0x70);\n                        uVar10 = *(*0x20 + 8);\n                        uVar16 = uVar10;\n                        while (piVar11 = *0x5455b8,  piVar5 = uVar12,  uVar10 < uVar12) {\n                            piVar13 = uVar10;\n                            unaff_RSI = *0x5455b8;\n                            if (*0x5455b8 <= piVar13) goto code_r0x0043ff90;\n                            *(*0x20 + -100) = uVar10;\n                            *(*0x20 + -0xb8) = 0x43fc7a;\n                            fcn.0043f380();\n                            uVar16 = *(*0x20 + 8);\n                            uVar12 = *(*0x20 + -0x70);\n                            unaff_RSI = piVar11;\n                            uVar10 = *(*0x20 + -100) + 1;\n                        }\n                        if (uVar16 == *0x5455b8) {\ncode_r0x0043fd49:\n                            uVar9 = uVar16;\n                            iVar6 = *(*0x20 + -0x20);\n                            iVar8 = 0;\n                            while( true ) {\n                                uVar16 = uVar16 - 1;\n                                *(*0x20 + -0x30) = iVar8;\n                                if (uVar16 < 0) {\n                                    *0x545740 = uVar9;\n                                    *0x545750 = 0;\n                                    for (uVar10 = 1; uVar16 = uVar9,  uVar14 = uVar9,  uVar12 = uVar10, \n                                        uVar10 <= uVar16; uVar10 = uVar10 + 1) {\n                                        while (uVar16 = uVar14,  uVar16 != 0) {\n                                            piVar5 = *(*0x20 + -0x70);\n                                            uVar14 = uVar12 % uVar14;\n                                            uVar12 = uVar16;\n                                        }\n                                        if (uVar12 == 1) {\n                                            uVar14 = *0x545750 + 1;\n                                            iVar7 = *0x545748;\n                                            if (*0x545758 < uVar14) {\n                                                *(*0x20 + -0x5c) = uVar10;\n                                                *(*0x20 + -0xb8) = 0x43fe8e;\n                                                iVar8 = *0x545748;\n                                                iVar7 = fcn.00445800(*0x545758);\n                                                iVar3 = iVar7;\n                                                if (*0x5985b0 != 0) {\n                                                    *(*0x20 + -0xb8) = 0x43feb3;\n                                                    iVar7 = fcn.0045df80(*0x545758, piVar5, iVar8, iVar6);\n                                                    iVar3 = *0x545748;\n                                                }\n                                                *0x545748 = iVar3;\n                                                piVar5 = *(*0x20 + -0x70);\n                                                uVar10 = *(*0x20 + -0x5c);\n                                                uVar9 = *(*0x20 + 8);\n                                                iVar8 = *(*0x20 + -0x30);\n                                            }\n                                            *0x545750 = uVar14;\n                                            *(iVar7 + -4 + uVar14 * 4) = uVar10;\n                                        }\n                                    }\n                                    *0x598388 = uVar16;\n                                    if (uVar16 != piVar5) {\n                                        *(*0x20 + -0xb8) = 0x43ff05;\n                                        fcn.00419660(uVar9);\n                                        iVar8 = *(*0x20 + -0x30);\n                                    }\n                                    return iVar8;\n                                }\n                                if (*0x5455b8 <= uVar16) break;\n                                iVar7 = (*0x5455b0)[uVar16];\n                                if (*(*(iVar6 + 0x30) + 0xa0) != iVar7) {\n                                    *(iVar7 + 4) = 0;\n                                    iVar3 = *0x546020;\n                                    do {\n                                    } while (*(iVar7 + 0x194) != *(iVar7 + 0x194));\n                                    if ((*(iVar7 + 0x194) == *(iVar7 + 400)) && (*(iVar7 + 0x998) == 0)) {\n                                        *(*0x20 + -0x68) = uVar16;\n                                        piVar13 = *(*0x20 + -0x40);\n                                        *(*0x20 + -0xb8) = 0x43fdcc;\n                                        fcn.00441c60();\n                                        uVar9 = *(*0x20 + 8);\n                                        piVar5 = *(*0x20 + -0x70);\n                                        uVar16 = *(*0x20 + -0x68);\n                                        iVar6 = *(*0x20 + -0x20);\n                                        iVar8 = *(*0x20 + -0x30);\n                                    }\n                                    else {\n                                        if (*0x546020 != 0) {\n                                            *0x546020 = *(*0x546020 + 0x128);\n                                            *0x546028 = *0x546028 + -1;\n                                        }\n                                        *(iVar7 + 0x38) = iVar3;\n                                        *(iVar7 + 8) = iVar8;\n                                        iVar8 = iVar7;\n                                    }\n                                }\n                            }\n                            *(*0x20 + -0xb8) = 0x43ff70;\n                            fcn.0045e420(*0x5455b8);\ncode_r0x0043ff70:\n                            *(*0x20 + -0xb8) = 0x43ff78;\n                            fcn.0045e4a0(piVar13, piVar5);\ncode_r0x0043ff78:\n                            *(*0x20 + -0xb8) = 0x43ff85;\n                            fcn.0045e4a0(piVar13, piVar5);\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x43fccc;\n                            fcn.0040a520();\n                            piVar11 = *(*0x20 + 8);\n                            piVar5 = piVar11;\n                            piVar13 = *0x5455c0;\n                            if (piVar11 <= *0x5455c0) {\n                                piVar13 = *(*0x20 + -0x6c);\n                                piVar5 = *0x545640;\n                                *0x5455b8 = piVar11;\n                                if (piVar13 <= *0x545640) {\n                                    piVar5 = *0x545680;\n                                    *0x545638 = piVar13;\n                                    if (piVar13 <= *0x545680) {\n                                        *(*0x20 + -0xb8) = 0x43fd3e;\n                                        *0x545678 = piVar13;\n                                        fcn.0040a740();\n                                        uVar16 = *(*0x20 + 8);\n                                        piVar5 = *(*0x20 + -0x70);\n                                        goto code_r0x0043fd49;\n                                    }\n                                    goto code_r0x0043ff70;\n                                }\n                                goto code_r0x0043ff78;\n                            }\n                        }\n                        *(*0x20 + -0xb8) = 0x43ff90;\n                        piVar11 = piVar13;\n                        fcn.0045e4a0(piVar5, piVar13);\n                        piVar5 = piVar11;\ncode_r0x0043ff90:\n                        *(*0x20 + -0xb8) = 0x43ff9b;\n                        fcn.0045e420(unaff_RSI);\n                    }\n                    piVar11 = NULL;\n                    *(*0x20 + -0xb8) = 0x43ffa5;\n                    fcn.0045e420(0);\ncode_r0x0043ffa5:\n                    *(*0x20 + -0xb8) = 0x43ffaa;\n                    fcn.0045e420(piVar11);\n                    unaff_RBX = piVar13;\ncode_r0x0043ffaa:\n                    *(*0x20 + -0xb8) = 0x43ffb2;\n                    fcn.0045e420(piVar11);\ncode_r0x0043ffb2:\n                    *(*0x20 + -0xb8) = 0x43ffba;\n                    fcn.0045e4a0(unaff_RBX, piVar5);\ncode_r0x0043ffba:\n                    *(*0x20 + -0xb8) = 0x43ffc5;\n                    fcn.0045e4a0(unaff_RBX, piVar5);\n                }\n                *(*0x20 + -0xb8) = 0x43ffcd;\n                fcn.0045e4a0(unaff_RSI, piVar5);\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0xb8) = 0x43ffde;\n            in_EAX = fcn.00433580();\n        }\n        *(puVar15 + 8) = in_EAX;\n        *(puVar15 + -8) = 0x43ffe8;\n        fcn.0045bdc0();\n        in_EAX = *(puVar15 + 8);\n        *0x20 = puVar15;\n    } while( true );\n}\n",
        "token_count": 4891
    },
    "00440000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440000(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00440060();\n    fcn.00413e20();\n    if (*0x54a530 != '\\0') {\n        fcn.00450a40();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00440060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440060(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0xa0) != 0) {\n        fcn.00433580();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((*(in_RAX + 0x38) == 0) && (*(in_RAX + 4) == 0)) {\n        *(*(unaff_R14 + 0x30) + 0xa0) = in_RAX;\n        *(in_RAX + 0x38) = *(unaff_R14 + 0x30);\n        *(in_RAX + 4) = 1;\n        return;\n    }\n    do {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.00435120();\n        fcn.00434f40();\n        fcn.00433580();\n    } while( true );\n}\n",
        "token_count": 284
    },
    "00440180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00440180(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            iVar3 = *(iVar1 + 0xa0);\n            if (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x18) = iVar3;\n                iVar2 = *(iVar3 + 0x38);\n                *(*0x20 + -0x30) = iVar2;\n                if ((iVar2 == iVar1) && (*(iVar3 + 4) == 1)) {\n                    *(*0x20 + -0x20) = unaff_R14;\n                    if (*0x54a530 != '\\0') {\n                        *(*0x20 + -0x48) = 0x4401de;\n                        fcn.00450aa0();\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    *(*(*(*0x20 + -0x20) + 0x30) + 0xa0) = 0;\n                    *(iVar3 + 0x38) = 0;\n                    *(iVar3 + 4) = 0;\n                    return;\n                }\n                *(*0x20 + -0x28) = *(iVar3 + 4);\n                *(*0x20 + -0x48) = 0x44021d;\n                fcn.00434ec0();\n                *(*0x20 + -0x48) = 0x44022e;\n                fcn.004357c0();\n                *(*0x20 + -0x48) = 0x440238;\n                fcn.00435740();\n                *(*0x20 + -0x48) = 0x440249;\n                fcn.004357c0();\n                *(*0x20 + -0x48) = 0x440253;\n                fcn.00435740();\n                *(*0x20 + -0x48) = 0x440265;\n                fcn.004357c0();\n                *(*0x20 + -0x48) = 0x44026f;\n                fcn.00435620();\n                *(*0x20 + -0x48) = 0x440285;\n                fcn.004357c0();\n                *(*0x20 + -0x48) = 0x44028f;\n                fcn.004354c0();\n                *(*0x20 + -0x48) = 0x440294;\n                fcn.00435120();\n                *(*0x20 + -0x48) = 0x440299;\n                fcn.00434f40();\n                *(*0x20 + -0x48) = 0x4402aa;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x48) = 0x4402bb;\n            fcn.00433580();\n        }\n        *(puVar4 + -8) = 0x4402c5;\n        fcn.0045bdc0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 821
    },
    "00440340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440340(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x59834b != '\\0') || (*0x598349 != '\\0')) {\n                return;\n            }\n            if (*0x5983a4 != 0) {\n                return;\n            }\n            if (*0x59834a == '\\0') {\n                if (*0x598344 == '\\0') {\n                    uVar3 = 0;\n                }\n                else {\n                    *(*0x20 + -0x50) = 0x4403ac;\n                    *0x598418 = fcn.00439700();\n                    uVar3 = *0x59836c != 0;\n                }\n            }\n            else {\n                uVar3 = 0;\n            }\n            uVar5 = *0x546028;\n            iVar6 = (((*0x546030 - *0x546040) - *0x546028) - *0x54602c) - *0x54603c;\n            if (uVar3 < iVar6) {\n                return;\n            }\n            if (-1 < iVar6) {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x440660;\n                *(*0x20 + -0x10) = *0x20 + -0x28;\n                *(*0x20 + -0x50) = 0x440437;\n                fcn.00436ba0();\n                if (*(*0x20 + -0x28) == 0) {\n                    *(*0x20 + -0x50) = 0x44044d;\n                    fcn.0040a740();\n                    *(*0x20 + -0x50) = 0x44045e;\n                    fcn.00433680();\n                }\n                if (*0x598420 != 0) {\n                    *(*0x20 + -0x50) = 0x44046d;\n                    iVar1 = fcn.0044f260();\n                    iVar4 = 0x7fffffffffffffff;\n                    if (iVar1 < 0x7fffffffffffffff) {\n                        *(*0x20 + -0x50) = 0x44049d;\n                        *0x598420 = iVar1;\n                        iVar2 = fcn.00441e00();\n                        iVar6 = *0x54605c;\n                        iVar1 = *0x546020;\n                        if (iVar2 != 0) {\n                            if (*0x546020 != 0) {\n                                *0x546028 = *0x546028 - 1;\n                                LOCK();\n                                *0x54605c = *0x54605c + 1;\n                                puVar7 = *0x546020 + 0xe4;\n                                *0x546020 = *(*0x546020 + 0x128);\n                                *puVar7 = 1;\n                                *(iVar1 + 0xa8) = iVar2;\n                                *(*0x20 + -0x50) = 0x4404fb;\n                                fcn.0040a820(iVar1, iVar6);\n                                return;\n                            }\n                            *(*0x20 + -0x50) = 0x440534;\n                            iVar4 = *0x546020;\n                            fcn.00433580();\n                        }\n                        *(*0x20 + -0x50) = 0x440545;\n                        iVar1 = fcn.00433580();\n                        goto code_r0x00440545;\n                    }\n                }\n                iVar1 = 0;\n                iVar4 = *0x5455b0;\n                uVar5 = *0x5455b8;\n                while( true ) {\n                    if (uVar5 <= iVar1) {\n                        *(*0x20 + -0x50) = 0x440575;\n                        fcn.0040a740();\n                        *(*0x20 + -0x50) = 0x440586;\n                        fcn.00433680();\n                        return;\n                    }\n                    if (*(*(iVar4 + iVar1 * 8) + 0x2288) != 0) break;\ncode_r0x00440545:\n                    iVar1 = iVar1 + 1;\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = *0x546030 - *0x546040;\n            *(*0x20 + -0x2c) = *0x546028;\n            *(*0x20 + -0x30) = *0x54602c;\n            *(*0x20 + -0x34) = *0x54603c;\n            *(*0x20 + -0x50) = 0x4405a7;\n            fcn.00434ec0();\n            *(*0x20 + -0x50) = 0x4405b8;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x4405c5;\n            fcn.004355c0();\n            *(*0x20 + -0x50) = 0x4405d6;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x4405e5;\n            fcn.004355c0();\n            *(*0x20 + -0x50) = 0x4405f6;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x440605;\n            fcn.004355c0();\n            *(*0x20 + -0x50) = 0x440616;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x440625;\n            fcn.004355c0();\n            *(*0x20 + -0x50) = 0x44062a;\n            fcn.00435120();\n            *(*0x20 + -0x50) = 0x44062f;\n            fcn.00434f40();\n            *(*0x20 + -0x50) = 0x440645;\n            fcn.00433580();\n        }\n        *(puVar7 + -8) = 0x44064b;\n        fcn.0045bdc0();\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1569
    },
    "00440be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00440be0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    bool bVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    iVar5 = 0;\n    for (iVar4 = 0; iVar4 < *0x5455b8; iVar4 = iVar4 + 1) {\n        iVar2 = *(*0x5455b0 + iVar4 * 8);\n        if (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            if ((iVar1 == 1) || (iVar1 == 2)) {\n                if (*(iVar2 + 0x18) == *(iVar2 + 0x10)) {\n                    iVar6 = *(iVar2 + 0x20) + 10000000;\n                    if (iVar6 <= in_RAX) {\n                        fcn.00440ec0();\n                    }\n                    bVar3 = iVar6 <= in_RAX;\n                }\n                else {\n                    *(iVar2 + 0x18) = *(iVar2 + 0x10);\n                    *(iVar2 + 0x20) = in_RAX;\n                    bVar3 = false;\n                }\n            }\n            else {\n                bVar3 = false;\n            }\n            if (iVar1 == 2) {\n                if ((bVar3) || (*(iVar2 + 0x28) == *(iVar2 + 0x14))) {\n                    do {\n                    } while (*(iVar2 + 0x194) != *(iVar2 + 0x194));\n                    if (*(iVar2 + 0x194) == *(iVar2 + 400)) {\n                        if (*(iVar2 + 0x998) == 0) {\n                            bVar3 = 0 < *0x54605c + *0x546058;\n                        }\n                        else {\n                            bVar3 = false;\n                        }\n                    }\n                    else {\n                        bVar3 = false;\n                    }\n                    if ((!bVar3) || (*(iVar2 + 0x30) + 10000000 <= in_RAX)) {\n                        fcn.0040a740();\n                        fcn.004402e0();\n                        LOCK();\n                        if (*(iVar2 + 4) == 2) {\n                            *(iVar2 + 4) = 0;\n                            if (*0x54a530 != '\\0') {\n                                fcn.00451220();\n                                fcn.00450aa0();\n                            }\n                            *(iVar2 + 0x14) = *(iVar2 + 0x14) + 1;\n                            fcn.0043a080();\n                            iVar5 = iVar5 + 1;\n                        }\n                        fcn.004402e0();\n                        fcn.0040a520();\n                    }\n                }\n                else {\n                    *(iVar2 + 0x28) = *(iVar2 + 0x14);\n                    *(iVar2 + 0x30) = in_RAX;\n                }\n            }\n        }\n    }\n    fcn.0040a740();\n    return iVar5;\n}\n",
        "token_count": 745
    },
    "00440e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00440e20(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x5455b8,  iVar1 = *0x5455b0,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar5 = 0;\n    for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n        if (*(*(iVar1 + iVar4 * 8) + 4) == 1) {\n            uVar3 = fcn.00440ec0();\n            uVar5 = uVar5 & 0xff | uVar3;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 230
    },
    "00440ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00440ec0(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    piVar1 = *(in_RAX + 0x38);\n    if ((piVar1 != NULL) && (*(unaff_R14 + 0x30) != piVar1)) {\n        iVar2 = piVar1[0x12];\n        if ((iVar2 != 0) && (*piVar1 != iVar2)) {\n            *(iVar2 + 0xb1) = 1;\n            *(iVar2 + 0x10) = 0xfffffffffffffade;\n            if (*0x598838 == 0) {\n                *(in_RAX + 0x22c0) = 1;\n                fcn.00430ea0();\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "00440f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440f60(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char in_AL;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStack176;\n    int64_t iStack48;\n    int64_t iStack40;\n    ulong uStack32;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    while (&iStack48 < *(unaff_R14 + 0x10) || &iStack48 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0045fdc0();\n    if (*0x5984f8 == 0) {\n        *0x5984f8 = iStack176;\n    }\n    fcn.0040a520();\n    iVar4 = *0x5984f8;\n    uVar1 = *0x546058;\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.004355c0(iStack176 - iVar4 >> 0x3f, (iStack176 - iVar4) / 1000000);\n    fcn.004357c0();\n    fcn.004355c0();\n    fcn.004357c0();\n    fcn.004355c0(uVar1);\n    fcn.004357c0();\n    fcn.004355c0();\n    fcn.004357c0();\n    fcn.004355c0();\n    fcn.004357c0();\n    fcn.004354c0();\n    fcn.004357c0();\n    fcn.004355c0();\n    fcn.004357c0();\n    fcn.004355c0();\n    fcn.00434f40();\n    if (in_AL != '\\0') {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00435160();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.00435160();\n        fcn.00435120();\n        fcn.00434f40();\n    }\n    iVar3 = *0x5455b8;\n    iStack16 = *0x5455b0;\n    for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n        iVar2 = *(iStack16 + iVar4 * 8);\n        uVar1 = *(iVar2 + 400);\n        if (in_AL == '\\0') {\n            fcn.00434ec0();\n            fcn.004350e0();\n            fcn.00434f40();\n            if (iVar4 == 0) {\n                fcn.00434ec0();\n                fcn.004357c0();\n                fcn.00434f40();\n            }\n            fcn.00434ec0();\n            fcn.004354c0(uVar1);\n            fcn.00434f40();\n            if (iVar4 == *0x5455b8 + -1) {\n                fcn.00434ec0();\n                fcn.004357c0();\n                fcn.00434f40();\n            }\n        }\n        else {\n            iStack48 = iVar2;\n            iStack24 = *(iVar2 + 0x38);\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.004355c0();\n            fcn.004357c0();\n            fcn.004354c0();\n            fcn.004357c0();\n            fcn.004354c0();\n            fcn.004357c0();\n            fcn.004354c0();\n            fcn.004357c0();\n            fcn.00434f40();\n            if (iStack24 == 0) {\n                fcn.00434ec0();\n                fcn.004357c0();\n                fcn.00434f40();\n            }\n            else {\n                fcn.00434ec0();\n                fcn.004355c0();\n                fcn.00434f40();\n            }\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.004354c0(uVar1);\n            fcn.004357c0();\n            fcn.004355c0();\n            fcn.004357c0();\n            fcn.004355c0();\n            fcn.00435120();\n            fcn.00434f40();\n        }\n    }\n    iVar4 = *0x544bd8;\n    if (in_AL == '\\0') {\n        fcn.0040a700();\n        return;\n    }\n    while (iVar4 != 0) {\n        iStack24 = *(iVar4 + 0xa0);\n        iStack40 = iVar4;\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.00434f40();\n        if (iStack24 == 0) {\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.00434f40();\n        }\n        else {\n            fcn.00434ec0();\n            fcn.004355c0();\n            fcn.00434f40();\n        }\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00434f40();\n        if (*(iStack40 + 0x90) == 0) {\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.00434f40();\n        }\n        else {\n            fcn.00434ec0();\n            fcn.004354c0();\n            fcn.00434f40();\n        }\n        uStack32 = *(iStack40 + 200);\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.00435160();\n        fcn.004357c0();\n        fcn.00435160();\n        fcn.004357c0();\n        fcn.00434f40();\n        if (*(iStack40 + 0x130) == 0) {\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.00434f40();\n        }\n        else {\n            fcn.00434ec0();\n            fcn.004354c0();\n            fcn.00434f40();\n        }\n        fcn.00434ec0();\n        fcn.00435120();\n        fcn.00434f40();\n        iVar4 = *(iStack40 + 0x120);\n    }\n    fcn.00436ba0();\n    fcn.0040a700();\n    return;\n}\n",
        "token_count": 1627
    },
    "004422e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004422e0(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    uchar (*unaff_RBX) [16];\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar1 = *(in_RAX + 400);\n    iVar7 = 0;\n    for (iVar6 = *(in_RAX + 0x194); (iVar2 = **unaff_RBX,  iVar2 != 0 && (iVar6 - iVar1 < 0x100)); iVar6 = iVar6 + 1) {\n        if ((iVar2 != 0) && (iVar3 = *(iVar2 + 0xa0),  **unaff_RBX = iVar3,  iVar3 == 0)) {\n            *(*unaff_RBX + 8) = 0;\n        }\n        *(in_RAX + 0x198 + iVar6 * 8) = iVar2;\n        iVar7 = iVar7 + 1;\n    }\n    *(in_RAX + 0x194) = iVar6;\n    if (**unaff_RBX != 0) {\n        fcn.0040a520();\n        iVar2 = *(*unaff_RBX + 8);\n        uVar4 = **unaff_RBX;\n        uVar5 = *0x546068;\n        iVar3 = *0x546070;\n        if ((iVar2 != 0) && (*(iVar2 + 0xa0) = 0,  uVar5 = uVar4,  iVar3 = iVar2,  *0x546070 != 0)) {\n            *(*0x546070 + 0xa0) = uVar4;\n            uVar5 = *0x546068;\n        }\n        *0x546070 = iVar3;\n        *0x546068 = uVar5;\n        *0x546078 = *0x546078 + (arg1 - iVar7);\n        *unaff_RBX = in_XMM15;\n        fcn.0040a740();\n    }\n    return;\n}\n",
        "token_count": 541
    },
    "004425e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004425e0(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    \n    while (uVar5 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n        arg1 = arg1 & 0xffffffff;\n    }\n    do {\n        while( true ) {\n            iVar2 = *(in_RAX + 400);\n            uVar6 = *(in_RAX + 0x194) - iVar2;\n            uVar6 = uVar6 - (uVar6 >> 1);\n            if (uVar6 == 0) break;\n            if (uVar6 < 0x81) {\n                for (uVar7 = 0; uVar7 < uVar6; uVar7 = uVar7 + 1) {\n                    *(unaff_RBX + (uVar7 + uVar5 & 0xff) * 8) = *(in_RAX + 0x198 + (uVar7 + iVar2 & 0xff) * 8);\n                }\n                LOCK();\n                if (iVar2 == *(in_RAX + 400)) {\n                    *(in_RAX + 400) = uVar6 + iVar2;\n                    return uVar6;\n                }\n            }\n        }\n        if ((unaff_DIL == '\\0') || (uVar3 = *(in_RAX + 0x998),  uVar3 == 0)) {\n            return 0;\n        }\n        if (*(in_RAX + 4) == 1) {\n            fcn.0045bc80();\n            uVar5 = arg1 & 0xffffffff;\n        }\n        LOCK();\n        puVar1 = in_RAX + 0x998;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n    } while (uVar3 != uVar4);\n    *(unaff_RBX + (uVar5 & 0xff) * 8) = uVar3;\n    return 1;\n}\n",
        "token_count": 565
    },
    "00442780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00442780(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    int64_t in_RAX;\n    int32_t iVar5;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar1 = *(in_RAX + 0x194);\n            *(*0x20 + -0xc) = uVar1;\n            *(*0x20 + -0x30) = 0x4427bd;\n            iVar4 = fcn.004425e0(uVar1);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            iVar5 = iVar4 + -1 + *(*0x20 + -0xc);\n            arg1._0_1_ = iVar5;\n            iVar2 = *(*0x20 + 8);\n            uVar3 = *(iVar2 + 0x198 + arg1 * 8);\n            if (iVar4 == 1) {\n                return uVar3;\n            }\n            if ((*(*0x20 + -0xc) - *(iVar2 + 400)) + -1 + iVar4 < 0x100) {\n                *(iVar2 + 0x194) = iVar5;\n                return uVar3;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x30) = 0x442838;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = arg1;\n        *(puVar6 + -8) = 0x44284c;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_1_ = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 590
    },
    "00442880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00442880(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 1) {\n                if (*in_RAX == 2) {\n                    return;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *in_RAX = 1;\n                uVar5 = 0;\n                while (uVar5 <= in_RAX[1] && in_RAX[1] != uVar5) {\n                    *(*0x20 + -0xe8) = uVar5;\n                    *(*0x20 + -0x130) = 0x4428f1;\n                    fcn.00442880();\n                    in_RAX = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0xe8) + 1;\n                }\n                if (in_RAX[2] == 0) {\n                    *in_RAX = 2;\n                    return;\n                }\n                if (*0x598620 == '\\0') {\n                    uVar3 = 0;\n                    uVar4 = 0;\n                    uVar7 = 0;\n                }\n                else {\n                    *(*0x20 + -0x130) = 0x442925;\n                    fcn.0045fdc0();\n                    uVar3 = *(*0x20 + -0x128);\n                    in_RAX = *(*0x20 + 8);\n                    uVar4 = *0x598638;\n                    uVar7 = *0x598630;\n                }\n                *(*0x20 + -0xe0) = uVar4;\n                *(*0x20 + -0xd8) = uVar7;\n                *(*0x20 + -0x100) = uVar3;\n                *(*0x20 + -0x18) = in_RAX + in_RAX[1] + 3;\n                uVar5 = 0;\n                while (uVar5 <= in_RAX[2] && in_RAX[2] != uVar5) {\n                    *(*0x20 + -0xf0) = uVar5;\n                    pcVar1 = *(uVar5 * 8 + *(*0x20 + -0x18));\n                    *(*0x20 + -0x130) = 0x4429ab;\n                    (*pcVar1)(uVar4);\n                    in_RAX = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0xe0);\n                    uVar3 = *(*0x20 + -0x100);\n                    uVar5 = *(*0x20 + -0xf0) + 1;\n                }\n                if (*0x598620 == '\\0') goto code_r0x00442b73;\n                *(*0x20 + -0x130) = 0x4429e5;\n                fcn.0045fdc0(uVar4, uVar3);\n                uVar9 = 0;\n                uVar10 = 0;\n                uVar11 = 0;\n                uVar12 = 0;\n                unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                *(*0x20 + -0xc0) = *0x598630;\n                *(*0x20 + -200) = *0x598638;\n                uVar4 = *(*0x20 + -0x128);\n                *(*0x20 + -0x108) = uVar4;\n                *(*0x20 + -0x130) = 0x442a28;\n                fcn.0044bc60();\n                *(*0x20 + -0x130) = 0x442a2d;\n                uVar3 = fcn.0044c4a0();\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0xf8) = uVar4;\n                *(*0x20 + -0xb8) = CONCAT412(uVar12, CONCAT48(uVar11, CONCAT44(uVar10, uVar9)));\n                *(*0x20 + -0xb0) = CONCAT412(uVar12, CONCAT48(uVar11, CONCAT44(uVar10, uVar9)));\n                *(*0x20 + -0x130) = 0x442a4b;\n                fcn.00434ec0();\n                *(*0x20 + -0x130) = 0x442a5c;\n                fcn.004357c0();\n                *(*0x20 + -0x130) = 0x442a6e;\n                fcn.004357c0();\n                *(*0x20 + -0x130) = 0x442a7f;\n                fcn.004357c0();\n                *(*0x20 + -0x130) = 0x442a85;\n                fcn.00434f40();\n                *(*0x20 + -0x130) = 0x442aa6;\n                uVar4 = fcn.00418f40(0x18);\n                *(*0x20 + -0x130) = 0x442ab9;\n                uVar3 = fcn.00449920(0x18);\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + -0xd0) = uVar4;\n                *(*0x20 + -0x130) = 0x442acb;\n                fcn.00434ec0();\n                *(*0x20 + -0x130) = 0x442add;\n                fcn.004357c0();\n                *(*0x20 + -0x130) = 0x442aee;\n                fcn.004357c0();\n                *(*0x20 + -0x130) = 0x442af3;\n                fcn.00434f40();\n                *(*0x20 + -0x130) = 0x442b12;\n                uVar4 = fcn.00418f40(0x18);\n                *(*0x20 + -0x130) = 0x442b25;\n                uVar3 = fcn.00449920(0x18);\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + -0xd0) = uVar4;\n                *(*0x20 + -0x130) = 0x442b37;\n                fcn.00434ec0();\n                *(*0x20 + -0x130) = 0x442b49;\n                fcn.004357c0();\n                *(*0x20 + -0x130) = 0x442b5a;\n                fcn.004357c0();\n                *(*0x20 + -0x130) = 0x442b5f;\n                fcn.00434f40();\n                uVar5 = *(*0x20 + -200) - *(*0x20 + -0xe0);\n                uVar6 = 0x17;\n                while (cVar2 = uVar5,  9 < uVar5) {\n                    uVar5 = uVar5 / 10;\n                    if (0x17 < uVar6) goto code_r0x00442d49;\n                    *(*0x20 + (uVar6 - 0xb8)) = cVar2 + uVar5 * -10 + '0';\n                    uVar6 = uVar6 - 1;\n                }\n                if (uVar6 < 0x18) {\n                    *(*0x20 + (uVar6 - 0xb8)) = cVar2 + '0';\n                    *(*0x20 + -0x130) = 0x442c05;\n                    uVar4 = fcn.00449920(-(uVar6 - 0x18));\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0xd0) = *0x20 + ((uVar6 & uVar6 - 0x18 >> 0x3f) - 0xb8);\n                    *(*0x20 + -0x130) = 0x442c17;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x130) = 0x442c29;\n                    fcn.004357c0();\n                    *(*0x20 + -0x130) = 0x442c3a;\n                    fcn.004357c0();\n                    *(*0x20 + -0x130) = 0x442c3f;\n                    fcn.00434f40();\n                    uVar6 = *(*0x20 + -0xc0) - *(*0x20 + -0xd8);\n                    uVar5 = 0x17;\n                    while (cVar2 = uVar6,  9 < uVar6) {\n                        uVar6 = uVar6 / 10;\n                        if (0x17 < uVar5) goto code_r0x00442d2f;\n                        *(*0x20 + (uVar5 - 0xb8)) = cVar2 + uVar6 * -10 + '0';\n                        uVar5 = uVar5 - 1;\n                    }\n                    if (uVar5 < 0x18) {\n                        *(*0x20 + (uVar5 - 0xb8)) = cVar2 + '0';\n                        *(*0x20 + -0x130) = 0x442cca;\n                        uVar4 = fcn.00449920(-(uVar5 - 0x18));\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0xd0) = *0x20 + ((uVar5 & uVar5 - 0x18 >> 0x3f) - 0xb8);\n                        *(*0x20 + -0x130) = 0x442cdc;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x130) = 0x442cee;\n                        fcn.004357c0();\n                        *(*0x20 + -0x130) = 0x442cff;\n                        fcn.004357c0();\n                        *(*0x20 + -0x130) = 0x442d05;\n                        fcn.00434f40();\n                        *(*0x20 + -0x130) = 0x442d0a;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x130) = 0x442d0f;\n                        fcn.00435120();\n                        *(*0x20 + -0x130) = 0x442d14;\n                        fcn.00434f40();\n                        in_RAX = *(*0x20 + 8);\ncode_r0x00442b73:\n                        *in_RAX = 2;\n                        return;\n                    }\n                    *(*0x20 + -0x130) = 0x442d2f;\n                    fcn.0045e420(0x18);\ncode_r0x00442d2f:\n                    *(*0x20 + -0x130) = 0x442d3c;\n                    fcn.0045e420(0x18);\n                }\n                *(*0x20 + -0x130) = 0x442d49;\n                fcn.0045e420(0x18);\ncode_r0x00442d49:\n                *(*0x20 + -0x130) = 0x442d56;\n                fcn.0045e420(0x18);\n            }\n            *(*0x20 + -0x130) = 0x442d67;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x442d72;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2827
    },
    "00442d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00442d80(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint in_EAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = unaff_RBX;\n    *0x598360 = in_EAX;\n    if (*0x5985b0 != 0) {\n        fcn.0045e0c0(arg1, arg2, arg3, arg4);\n        uVar1 = *0x544be0;\n    }\n    *0x544be0 = uVar1;\n    return;\n}\n",
        "token_count": 191
    },
    "00442de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00442f1a)\n// WARNING: Removing unreachable block (ram,0x00442f2b)\n// WARNING: Removing unreachable block (ram,0x00442f3c)\n// WARNING: Removing unreachable block (ram,0x00442f4d)\n// WARNING: Removing unreachable block (ram,0x00442f5e)\n// WARNING: Removing unreachable block (ram,0x00442f6f)\n// WARNING: Removing unreachable block (ram,0x00442f85)\n// WARNING: Removing unreachable block (ram,0x00442f96)\n// WARNING: Removing unreachable block (ram,0x00442fa7)\n// WARNING: Removing unreachable block (ram,0x00442fb8)\n\nulong fcn.00442de0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    LOCK();\n    LOCK();\n    LOCK();\n    *0x598510 = 0x2a;\n    *0x598518 = 0x30000000003;\n    return 0x2a;\n}\n",
        "token_count": 282
    },
    "004433c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004433c0(uint64_t param_1, uint64_t param_2, int64_t param_3, int64_t param_4)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t arg1;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x598800 = 1;\n            *0x598820 = 1;\n            *0x598840 = 1;\n            *(*0x20 + -0x88) = 0x443407;\n            uVar3 = fcn.004070e0();\n            *0x545488 = 7;\n            if (*0x5985b0 != 0) {\n                *(*0x20 + -0x88) = 0x44342e;\n                fcn.0045df80(param_1, param_2, param_3, param_4);\n                uVar3 = *0x545480;\n            }\n            *0x545480 = uVar3;\n            *0x544c18 = 0x545480;\n            uVar3 = *0x545480;\n            iVar5 = *0x545488;\n            while( true ) {\n                if (iVar5 == 0) {\n                    *0x598844 = (*0x598848 | *0x59884c | *0x598850) != 0;\n                    *(*0x20 + -0x88) = 0x443616;\n                    fcn.004070e0();\n                    *(*0x20 + -0x88) = 0x44361b;\n                    fcn.00459b40();\n                    *0x5983b4 = *0x52d26c;\n                    return;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0x80) = uVar3;\n                *(*0x20 + -0x78) = iVar5;\n                *(*0x20 + -0x70) = 0x2c;\n                *(*0x20 + -0x88) = 0x443486;\n                fcn.00402740(uVar3, iVar5);\n                unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                param_1 = *(*0x20 + -0x68);\n                if (param_1 < 0) {\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar9 = 0;\n                    iVar4 = 0;\n                    param_1 = *(*0x20 + -0x60);\n                }\n                else {\n                    param_2 = *(*0x20 + -0x60);\n                    if (param_2 < param_1) goto code_r0x00443712;\n                    if (param_2 < param_1 + 1) goto code_r0x0044370a;\n                    iVar5 = param_2 - param_1;\n                    iVar9 = iVar5 + -1;\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar4 = (param_1 + 1 & -iVar9 >> 0x3f) + iVar7;\n                }\n                *(*0x20 + -0x60) = iVar9;\n                *(*0x20 + -0x10) = iVar4;\n                *(*0x20 + -0x50) = param_1;\n                *(*0x20 + -0x80) = iVar7;\n                *(*0x20 + -0x78) = param_1;\n                *(*0x20 + -0x70) = 0x3d;\n                *(*0x20 + -0x88) = 0x443514;\n                fcn.00402740(param_1, iVar5);\n                unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                arg1 = *(*0x20 + -0x68);\n                if (-1 < arg1) break;\ncode_r0x00443451:\n                iVar5 = *(*0x20 + -0x60);\n                uVar3 = *(*0x20 + -0x10);\n            }\n            uVar6 = *(*0x20 + -0x50);\n            param_2 = uVar6;\n            if (arg1 <= uVar6) {\n                if (arg1 + 1 <= uVar6) {\n                    iVar5 = (uVar6 - arg1) + -1;\n                    piVar1 = *(*0x20 + -0x28);\n                    if ((((arg1 == 0xe) && (*piVar1 == 0x69666f72706d656d)) && (*(piVar1 + 1) == 0x6172656c)) &&\n                       (*(piVar1 + 0xc) == 0x6574)) {\n                        *(*0x20 + -0x88) = 0x4435a5;\n                        uVar3 = fcn.00449f80();\n                        if (iVar5 != '\\0') {\n                            *0x52d358 = uVar3;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x58) = arg1;\n                        *(*0x20 + -0x38) = iVar5;\n                        *(*0x20 + -0x30) = (arg1 + 1 & -iVar5 >> 0x3f) + piVar1;\n                        *(*0x20 + -0x40) = *0x53e298;\n                        iVar9 = *0x53e290;\n                        param_3 = *0x53e298;\n                        for (param_4 = 0; param_4 < param_3; param_4 = param_4 + 1) {\n                            uVar6 = *(iVar9 + 8);\n                            uVar3 = *(iVar9 + 0x10);\n                            if (uVar6 == arg1) {\n                                *(*0x20 + -0x48) = param_4;\n                                *(*0x20 + -0x18) = iVar9;\n                                *(*0x20 + -0x20) = uVar3;\n                                *(*0x20 + -0x88) = 0x443673;\n                                cVar2 = fcn.004025e0(uVar6, iVar5);\n                                if (cVar2 == '\\0') {\n                                    arg1 = *(*0x20 + -0x58);\n                                    iVar5 = *(*0x20 + -0x38);\n                                    iVar9 = *(*0x20 + -0x18);\n                                    param_3 = *(*0x20 + -0x40);\n                                    param_4 = *(*0x20 + -0x48);\n                                }\n                                else {\n                                    uVar3 = *(*0x20 + -0x38);\n                                    *(*0x20 + -0x88) = 0x4436b5;\n                                    iVar5 = fcn.00449f80();\n                                    if ((iVar5 == iVar5) && (uVar3 != '\\0')) {\n                                        **(*0x20 + -0x20) = iVar5;\n                                    }\n                                    arg1 = *(*0x20 + -0x58);\n                                    iVar5 = *(*0x20 + -0x38);\n                                    iVar9 = *(*0x20 + -0x18);\n                                    param_3 = *(*0x20 + -0x40);\n                                    param_4 = *(*0x20 + -0x48);\n                                }\n                            }\n                            iVar9 = iVar9 + 0x18;\n                        }\n                    }\n                    goto code_r0x00443451;\n                }\n                *(*0x20 + -0x88) = 0x443705;\n                fcn.0045e4e0(uVar6);\n                arg1 = uVar6;\n            }\n            *(*0x20 + -0x88) = 0x44370a;\n            fcn.0045e460(arg1, param_2);\ncode_r0x0044370a:\n            param_1 = param_2;\n            *(*0x20 + -0x88) = 0x443712;\n            param_2 = param_1;\n            fcn.0045e4e0(param_1);\ncode_r0x00443712:\n            *(*0x20 + -0x88) = 0x443717;\n            fcn.0045e460(param_1, param_2);\n        }\n        *(puVar8 + -8) = 0x44371d;\n        fcn.0045bdc0();\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2039
    },
    "00443a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443a20(void)\n\n{\n    int32_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            piVar1 = in_RAX + 0x28;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = iVar2 + -1;\n            if (-1 < iVar2) goto code_r0x00443a96;\n            if ((iVar2 != -1) && (iVar2 != -0x40000001)) {\n                LOCK();\n                piVar1 = in_RAX + 0x2c;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar2 == 1) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x20) = 0x443a70;\n                    fcn.0040a520();\n                    if (*(*(*0x20 + 8) + 0x20) != 0) {\n                        *(*0x20 + -0x20) = 0x443a8a;\n                        fcn.0040a820();\n                    }\n                    *(*0x20 + -0x20) = 0x443a96;\n                    fcn.0040a740();\n                }\ncode_r0x00443a96:\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = 0x443adb;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x443ae6;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 633
    },
    "00443b00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00443b00(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong in_RDX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*(in_RAX + 0x28) != 0) {\n        fcn.0045de00(arg1, in_RDX);\n        *(in_RAX + 0x28) = uStack32;\n    }\n    fcn.004361e0();\n    return;\n}\n",
        "token_count": 156
    },
    "00443b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00443b80(ulong arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint32_t *in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int32_t *piVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar11;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) break;\n            unaff_BL = 0x1d;\n            *(*0x20 + -0x68) = 0x443e87;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        puVar10[0x28] = unaff_SIL;\n        *(puVar10 + -8) = 0x443ea5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_SIL = puVar10[0x28];\n        *0x20 = puVar10;\n    } while( true );\n    while( true ) {\n        uVar3 = *in_RAX;\n        if (uVar3 == 0) break;\n        LOCK();\n        if (uVar3 == *in_RAX) {\n            *in_RAX = uVar3 - 1;\n            return uVar3;\n        }\n    }\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + -0x3d) = unaff_SIL;\n    *(*0x20 + -0x3e) = unaff_BL;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x68) = 0x443bf8;\n    iVar4 = fcn.004362a0(arg1, uVar3);\n    *(*0x20 + -0x18) = iVar4;\n    uVar5 = *(*0x20 + 8);\n    *(iVar4 + 0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    *(iVar4 + 0x30) = 0;\n    uVar5 = uVar5 >> 3;\n    uVar7 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar5) >> 0x40, 0);\n    uVar7 = (uVar7 + uVar5 >> 1 | CARRY8(uVar7, uVar5) << 0x3f) >> 7;\n    iVar6 = uVar5 + uVar7 * -0xfb;\n    *(*0x20 + -0x28) = iVar6;\n    uVar3 = *(*0x20 + 0x18);\n    if ((*(*0x20 + 0x18) & 1) == 0) {\n        iVar8 = 0;\n    }\n    else if (*0x5983f0 == 0) {\n        iVar8 = 0;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x443c65;\n        fcn.0045de00(iVar6, uVar7);\n        iVar8 = *(*0x20 + -0x60);\n        *(*(*0x20 + -0x18) + 0x28) = 0xffffffffffffffff;\n        iVar6 = *(*0x20 + -0x28);\n        iVar4 = *(*0x20 + -0x18);\n        uVar3 = *(*0x20 + 0x18);\n    }\n    if (((uVar3 >> 1 & 1) != 0) && (*0x598470 != 0)) {\n        if (iVar8 == 0) {\n            *(*0x20 + -0x68) = 0x443cbe;\n            fcn.0045de00(iVar6, 0);\n            iVar8 = *(*0x20 + -0x60);\n            iVar6 = *(*0x20 + -0x28);\n            iVar4 = *(*0x20 + -0x18);\n        }\n        *(iVar4 + 0x20) = iVar8;\n    }\n    *(*0x20 + -0x38) = iVar8;\n    iVar6 = iVar6 * 0x40;\n    *(*0x20 + -0x30) = iVar6;\n    *(*0x20 + -0x20) = iVar6 + 0x546660;\n    do {\n        *(*0x20 + -0x10) = iVar6 + 0x546660;\n        *(*0x20 + -0x68) = 0x443d25;\n        fcn.0040a520();\n        piVar9 = *(*0x20 + -0x30) + 0x546670;\n        LOCK();\n        *piVar9 = *piVar9 + 1;\n        piVar2 = *(*0x20 + 8);\n        do {\n            iVar1 = *piVar2;\n            bVar11 = iVar1 == 0;\n            if (bVar11) goto code_r0x00443d54;\n            *(*0x20 + -0x3c) = iVar1;\n            LOCK();\n        } while (iVar1 != *piVar2);\n        *piVar2 = iVar1 + -1;\n        bVar11 = *(*0x20 + -0x3c) == 0;\ncode_r0x00443d54:\n        if (!bVar11) {\n            LOCK();\n            iVar1 = *piVar9;\n            *piVar9 = *piVar9 + -1;\n            *(*0x20 + -0x68) = 0x443e0e;\n            fcn.0040a740(iVar1);\ncode_r0x00443e0e:\n            iVar4 = *(*(*0x20 + -0x18) + 0x28);\n            if (0 < iVar4) {\n                *(*0x20 + -0x68) = 0x443e38;\n                fcn.0042b060(iVar4 - *(*0x20 + -0x38));\n            }\n            *(*0x20 + -0x68) = 0x443e45;\n            uVar5 = fcn.004365a0();\n            return uVar5;\n        }\n        *(*0x20 + -0x68) = 0x443d71;\n        fcn.00444100(*(*0x20 + -0x18));\n        *(*0x20 + -0x68) = 0x443d9b;\n        fcn.004360a0(*(*0x20 + -0x3d));\n        if (*(*(*0x20 + -0x18) + 0x30) == 0) {\n            piVar2 = *(*0x20 + 8);\n            do {\n                iVar1 = *piVar2;\n                if (iVar1 == 0) goto code_r0x00443dc6;\n                LOCK();\n            } while (iVar1 != *piVar2);\n            *piVar2 = iVar1 + -1;\ncode_r0x00443dc6:\n            bVar11 = iVar1 != 0;\n        }\n        else {\n            bVar11 = true;\n        }\n        if (bVar11) goto code_r0x00443e0e;\n        iVar6 = *(*0x20 + -0x30);\n    } while( true );\n}\n",
        "token_count": 1964
    },
    "00443ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00443ee0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    int32_t *arg1_00;\n    uint64_t uVar4;\n    uchar unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            *in_RAX = *in_RAX + 1;\n            uVar2 = in_RAX >> 3;\n            uVar4 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar2) >> 0x40, 0);\n            iVar6 = (uVar2 + ((uVar4 + uVar2 >> 1 | CARRY8(uVar4, uVar2) << 0x3f) >> 7) * -0xfb) * 0x40;\n            if (*(iVar6 + 0x546670) == 0) {\n                return SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar2), 0);\n            }\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = iVar6 + 0x546670;\n            *(*0x20 + -0x30) = iVar6;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x20) = iVar6 + 0x546660;\n            *(*0x20 + -0x50) = 0x443f73;\n            fcn.0040a520();\n            if (**(*0x20 + -0x10) == 0) {\n                *(*0x20 + -0x50) = 0x444029;\n                uVar3 = fcn.0040a740();\n                return uVar3;\n            }\n            uVar3 = *(*0x20 + -0x18);\n            *(*0x20 + -0x50) = 0x443fa5;\n            iVar6 = fcn.004444a0(*(*0x20 + -0x30));\n            *(*0x20 + -0x28) = iVar6;\n            *(*0x20 + -0x38) = uVar3;\n            if (iVar6 != 0) {\n                LOCK();\n                **(*0x20 + -0x10) = **(*0x20 + -0x10) + -1;\n            }\n            *(*0x20 + -0x50) = 0x443fcf;\n            fcn.0040a740();\n            iVar6 = *(*0x20 + -0x28);\n            if (iVar6 == 0) {\n                return 0;\n            }\n            arg1 = *(iVar6 + 0x20);\n            if (arg1 != 0) {\n                arg1 = *(*0x20 + 0x18) + 3;\n                *(*0x20 + -0x50) = 0x443ffe;\n                fcn.004590c0();\n                iVar6 = *(*0x20 + -0x28);\n            }\n            if (*(iVar6 + 0x30) == 0) break;\n            unaff_BL = 0x1a;\n            *(*0x20 + -0x50) = 0x4440c9;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x4440dd;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n    arg1_00 = *(*0x20 + 0x10);\n    if (*(*0x20 + 0x10) != 0) {\n        arg1_00 = *(*0x20 + -0x18);\n        do {\n            iVar1 = *arg1_00;\n            if (iVar1 == 0) goto code_r0x004440a5;\n            LOCK();\n        } while (iVar1 != *arg1_00);\n        *arg1_00 = iVar1 + -1;\ncode_r0x004440a5:\n        if (iVar1 != 0) {\n            *(iVar6 + 0x30) = 1;\n        }\n    }\n    *(*0x20 + -0x50) = 0x444055;\n    uVar3 = fcn.00443b00(arg1_00);\n    if ((*(*(*0x20 + -0x28) + 0x30) == 1) && (*(*(unaff_R14 + 0x30) + 0xd8) == 0)) {\n        *(*0x20 + -0x50) = 0x44407c;\n        uVar3 = fcn.0045bc00();\n    }\n    return uVar3;\n}\n",
        "token_count": 1288
    },
    "00444100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00444100(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *noname_1;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t *piVar4;\n    int64_t **unaff_RDI;\n    int64_t **arg3;\n    int64_t *arg4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00444100:\n    puVar3 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar3 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar4 = arg1 + 1;\n        if (*0x5985b0 == 0) {\n            *arg1 = unaff_R14;\n            arg1[3] = unaff_RBX;\n            *(arg1 + 1) = in_XMM15;\n        }\n        else {\n            uVar5 = unaff_RDI & 0xffffffff;\n            *(*0x20 + -0x28) = 0x44414a;\n            fcn.0045e120(arg1, piVar4, uVar5);\n            *(*0x20 + -0x28) = 0x444156;\n            fcn.0045e0c0(arg1, piVar4, uVar5, arg1 + 3);\n            *(*0x20 + -0x28) = 0x444165;\n            fcn.0045e120(arg1, piVar4, uVar5);\n            *(*0x20 + -0x28) = 0x44416d;\n            in_RAX = fcn.0045e120(arg1, piVar4, uVar5);\n            unaff_RDI = uVar5 & 0xffffffff;\n        }\n        arg3 = in_RAX + 8;\n        piVar1 = *(in_RAX + 8);\n        noname_1 = NULL;\n        while (arg4 = piVar1,  arg4 != NULL) {\n            if (unaff_RBX == arg4[3]) {\n                if (unaff_RDI == '\\0') {\n                    if (arg4[9] == 0) {\n                        if (*0x5985b0 == 0) {\n                            arg4[8] = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x444357;\n                            fcn.0045e080(arg1, piVar4, arg3, arg4);\n                        }\n                    }\n                    else if (*0x5985b0 == 0) {\n                        *(arg4[9] + 0x40) = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44433d;\n                        fcn.0045e080(arg1, piVar4, arg3, arg4);\n                    }\n                    if (*0x5985b0 == 0) {\n                        arg4[9] = arg1;\n                        arg1[8] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x444379;\n                        fcn.0045e080(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x444385;\n                        fcn.0045df80(arg1, piVar4, arg3, arg4);\n                    }\n                }\n                else {\n                    if (*0x5985b0 == 0) {\n                        *arg3 = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x4441d1;\n                        fcn.0045e080(arg1, piVar4, arg3, arg4);\n                    }\n                    *(arg1 + 6) = *(arg4 + 6);\n                    arg1[4] = arg4[4];\n                    if (*0x5985b0 == 0) {\n                        arg1[7] = arg4[7];\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x4441fc;\n                        fcn.0045df80(arg1, piVar4, arg3, arg4);\n                    }\n                    iVar2 = arg4[2];\n                    if (*0x5985b0 == 0) {\n                        arg1[2] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44421a;\n                        iVar2 = fcn.0045df80(arg1, piVar4, arg3, arg4);\n                    }\n                    if (*0x5985b0 == 0) {\n                        arg1[1] = arg4[1];\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44423b;\n                        fcn.0045df80(arg1, piVar4, arg3, arg4);\n                    }\n                    if (iVar2 != 0) {\n                        if (*0x5985b0 == 0) {\n                            *(iVar2 + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44425d;\n                            fcn.0045e080(arg1, piVar4, arg3, arg4);\n                        }\n                    }\n                    if (arg1[1] != 0) {\n                        if (*0x5985b0 == 0) {\n                            *(arg1[1] + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44427e;\n                            fcn.0045e080(arg1, piVar4, arg3, arg4);\n                        }\n                    }\n                    if (*0x5985b0 == 0) {\n                        arg1[8] = arg4;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x444296;\n                        fcn.0045e120(arg1, piVar4, arg3);\n                    }\n                    iVar2 = arg4[9];\n                    if (*0x5985b0 == 0) {\n                        arg1[9] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x4442b2;\n                        iVar2 = fcn.0045df80(arg1, piVar4, arg3, arg4);\n                    }\n                    if (iVar2 == 0) {\n                        if (*0x5985b0 == 0) {\n                            arg1[9] = arg4;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x4442cd;\n                            fcn.0045e120(arg1, piVar4, arg3);\n                        }\n                    }\n                    if (*0x5985b0 == 0) {\n                        arg4[7] = 0;\n                        *(arg4 + 1) = in_XMM15;\n                        arg4[9] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x4442fb;\n                        fcn.0045df80(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x444305;\n                        fcn.0045df80(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x44430e;\n                        fcn.0045df80(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x444317;\n                        fcn.0045df80(arg1, piVar4, arg3, arg4);\n                    }\n                }\n                return;\n            }\n            if (unaff_RBX < arg4[3]) {\n                arg3 = arg4 + 2;\n            }\n            else {\n                arg3 = arg4 + 1;\n            }\n            noname_1 = arg4;\n            piVar1 = *arg3;\n        }\n        unaff_RDI = *(unaff_R14 + 0x30);\n        piVar4 = unaff_RDI[0x1e] + 0xa0761d6478bd642f;\n        uVar5 = piVar4 ^ 0xe7037ed1a0b428db;\n        unaff_RDI[0x1e] = piVar4;\n        *(arg1 + 6) = SUB164(ZEXT816(piVar4) * ZEXT816(uVar5), 0) ^ SUB164(ZEXT816(piVar4) * ZEXT816(uVar5) >> 0x40, 0)\n                      | 1;\n        if (*0x5985b0 == 0) {\n            arg1[7] = noname_1;\n            *arg3 = arg1;\n        }\n        else {\n            *(*0x20 + -0x28) = 0x4443eb;\n            unaff_RDI = arg3;\n            fcn.0045e0a0(arg1, noname_1, arg3, uVar5);\n            *(*0x20 + -0x28) = 0x4443f3;\n            arg3 = unaff_RDI;\n            fcn.0045e080(arg1, noname_1, unaff_RDI, uVar5);\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = in_RAX;\n        do {\n            iVar2 = arg1[7];\n            if ((iVar2 == 0) || (*(iVar2 + 0x30) <= *(arg1 + 6))) {\n                return;\n            }\n            if (*(iVar2 + 0x10) == arg1) {\n                *(*0x20 + -0x28) = 0x444445;\n                fcn.00444960(arg1, iVar2, arg3, uVar5);\n            }\n            else {\n                if (*(iVar2 + 8) != arg1) goto code_r0x00444451;\n                *(*0x20 + -0x28) = 0x444437;\n                fcn.00444800(arg1, iVar2, arg3, uVar5);\n            }\n            arg1 = *(*0x20 + 0x18);\n        } while( true );\n    }\n    goto code_r0x00444466;\ncode_r0x00444451:\n    unaff_RBX = 0x4ca418;\n    *(*0x20 + -0x28) = 0x444465;\n    in_RAX = fcn.00432de0();\ncode_r0x00444466:\n    *(puVar3 + 8) = in_RAX;\n    *(puVar3 + 0x10) = unaff_RBX;\n    *(puVar3 + 0x18) = arg1;\n    puVar3[0x20] = unaff_RDI;\n    *(puVar3 + -8) = 0x44447f;\n    fcn.0045bdc0();\n    in_RAX = *(puVar3 + 8);\n    unaff_RBX = *(puVar3 + 0x10);\n    arg1 = *(puVar3 + 0x18);\n    unaff_RDI = puVar3[0x20];\n    *0x20 = puVar3;\n    goto code_r0x00444100;\n}\n",
        "token_count": 2621
    },
    "004444a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004444a0(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int64_t *arg2;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t noname_0;\n    int64_t noname_1;\n    ulong uVar6;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    arg2 = in_RAX + 8;\n    noname_0 = *(in_RAX + 8);\n    piVar5 = arg2;\n    while( true ) {\n        if (noname_0 == 0) {\n            return 0;\n        }\n        if (unaff_RBX == *(noname_0 + 0x18)) break;\n        if (unaff_RBX < *(noname_0 + 0x18)) {\n            piVar5 = noname_0 + 0x10;\n        }\n        else {\n            piVar5 = noname_0 + 8;\n        }\n        noname_0 = *piVar5;\n        param_3 = unaff_RBX;\n    }\n    if (*(noname_0 + 0x20) == 0) {\n        uStack56 = 0;\n    }\n    else {\n        fcn.0045de00(noname_0, arg2);\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n    }\n    iVar3 = *(noname_0 + 0x40);\n    if (iVar3 == 0) {\n        while( true ) {\n            while (*(noname_0 + 8) != 0) {\n                if ((*(noname_0 + 0x10) != 0) &&\n                   (uVar2 = *(*(noname_0 + 0x10) + 0x30),  puVar1 = *(noname_0 + 8) + 0x30, \n                   uVar2 <= *puVar1 && *puVar1 != uVar2)) goto code_r0x00444742;\n                fcn.00444800(noname_0, arg2, param_3, param_4);\n            }\n            if (*(noname_0 + 0x10) == 0) break;\ncode_r0x00444742:\n            fcn.00444960(noname_0, arg2, param_3, param_4);\n        }\n        iVar3 = *(noname_0 + 0x38);\n        if (iVar3 == 0) {\n            if (*0x5985b0 == 0) {\n                *(in_RAX + 8) = 0;\n            }\n            else {\n                fcn.0045e0a0(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*(iVar3 + 0x10) == noname_0) {\n            if (*0x5985b0 == 0) {\n                *(iVar3 + 0x10) = 0;\n            }\n            else {\n                fcn.0045e0a0(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x5985b0 == 0) {\n            *(iVar3 + 8) = 0;\n        }\n        else {\n            fcn.0045e0a0(noname_0, 0, param_3, param_4);\n        }\n    }\n    else {\n        if (*0x5985b0 == 0) {\n            *piVar5 = iVar3;\n        }\n        else {\n            fcn.0045e0e0(noname_0, arg2, param_3, param_4);\n        }\n        *(iVar3 + 0x30) = *(noname_0 + 0x30);\n        noname_1 = *(noname_0 + 0x38);\n        if (*0x5985b0 == 0) {\n            *(iVar3 + 0x38) = noname_1;\n        }\n        else {\n            fcn.0045e0a0(noname_0, noname_1, param_3, param_4);\n        }\n        iVar4 = *(noname_0 + 0x10);\n        if (*0x5985b0 == 0) {\n            *(iVar3 + 0x10) = iVar4;\n        }\n        else {\n            noname_1 = iVar3 + 0x10;\n            iVar4 = fcn.0045df80(noname_0, noname_1, param_3, param_4);\n        }\n        if (iVar4 != 0) {\n            if (*0x5985b0 == 0) {\n                *(iVar4 + 0x38) = iVar3;\n            }\n            else {\n                fcn.0045e0e0(noname_0, noname_1, param_3, param_4);\n            }\n        }\n        iVar4 = *(noname_0 + 8);\n        if (*0x5985b0 == 0) {\n            *(iVar3 + 8) = iVar4;\n        }\n        else {\n            noname_1 = iVar3 + 8;\n            iVar4 = fcn.0045df80(noname_0, noname_1, param_3, param_4);\n        }\n        if (iVar4 != 0) {\n            if (*0x5985b0 == 0) {\n                *(iVar4 + 0x38) = iVar3;\n            }\n            else {\n                fcn.0045e0e0(noname_0, noname_1, param_3, param_4);\n            }\n        }\n        if (*(iVar3 + 0x40) == 0) {\n            if (*0x5985b0 == 0) {\n                *(iVar3 + 0x48) = 0;\n            }\n            else {\n                fcn.0045e0a0(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x5985b0 == 0) {\n            *(iVar3 + 0x48) = *(noname_0 + 0x48);\n        }\n        else {\n            fcn.0045e0a0(noname_0, *(noname_0 + 0x48), param_3, param_4);\n        }\n        *(iVar3 + 0x20) = uStack56;\n        if (*0x5985b0 == 0) {\n            *(noname_0 + 0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            uVar6 = 0;\n            fcn.0045e0a0(noname_0, 0, param_3, param_4);\n            fcn.0045e0a0(noname_0, uVar6, param_3, param_4);\n        }\n    }\n    if (*0x5985b0 == 0) {\n        *(noname_0 + 0x38) = 0;\n        *(noname_0 + 0x18) = 0;\n        *(noname_0 + 8) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    }\n    else {\n        uVar6 = 0;\n        fcn.0045e0a0(noname_0, 0, param_3, param_4);\n        fcn.0045e0e0(noname_0, uVar6, param_3, param_4);\n        fcn.0045e0a0(noname_0, uVar6, param_3, param_4);\n        fcn.0045e0a0(noname_0, uVar6, param_3, param_4);\n    }\n    *(noname_0 + 0x30) = 0;\n    return noname_0;\n}\n",
        "token_count": 1950
    },
    "00444800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00444800(ulong noname_0, ulong noname_1, int64_t noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg3 = *(unaff_RBX + 8);\n            arg1 = *(unaff_RBX + 0x38);\n            arg2 = *(arg3 + 0x10);\n            if (*0x5985b0 == 0) {\n                *(arg3 + 0x10) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg3;\n                *(unaff_RBX + 8) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x44484a;\n                fcn.0045e0c0(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x444853;\n                fcn.0045e100(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x44485c;\n                in_RAX = fcn.0045e0a0(arg1, arg2, arg3, arg4);\n                noname_2 = arg3;\n            }\n            if (arg2 != 0) {\n                if (*0x5985b0 == 0) {\n                    *(arg2 + 0x38) = unaff_RBX;\n                }\n                else {\n                    arg2 = arg2 + 0x38;\n                    *(*0x20 + -0x20) = 0x444885;\n                    in_RAX = fcn.0045e0c0(arg1, arg2, noname_2, arg4);\n                }\n            }\n            if (*0x5985b0 == 0) {\n                *(arg3 + 0x38) = arg1;\n            }\n            else {\n                arg2 = arg3 + 0x38;\n                *(*0x20 + -0x20) = 0x4448a6;\n                in_RAX = fcn.0045e080(arg1, arg2, noname_2, arg4);\n            }\n            if (arg1 == 0) {\n                if (*0x5985b0 == 0) {\n                    *(in_RAX + 8) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x44491a;\n                fcn.0045e080(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 0x10) == unaff_RBX) {\n                if (*0x5985b0 == 0) {\n                    *(arg1 + 0x10) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4448d2;\n                fcn.0045e080(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 8) == unaff_RBX) {\n                if (*0x5985b0 == 0) {\n                    *(arg1 + 8) = arg3;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x4448f8;\n                    fcn.0045e080(arg3, arg2, noname_2, arg4);\n                }\n                return;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x20) = 0x444935;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x444945;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1059
    },
    "00444960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00444960(ulong noname_0, ulong noname_1, int64_t noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg3 = *(unaff_RBX + 0x10);\n            arg1 = *(unaff_RBX + 0x38);\n            arg2 = *(arg3 + 8);\n            if (*0x5985b0 == 0) {\n                *(arg3 + 8) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg3;\n                *(unaff_RBX + 0x10) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x4449aa;\n                fcn.0045e0c0(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x4449b3;\n                fcn.0045e100(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x4449bc;\n                in_RAX = fcn.0045e0a0(arg1, arg2, arg3, arg4);\n                noname_2 = arg3;\n            }\n            if (arg2 != 0) {\n                if (*0x5985b0 == 0) {\n                    *(arg2 + 0x38) = unaff_RBX;\n                }\n                else {\n                    arg2 = arg2 + 0x38;\n                    *(*0x20 + -0x20) = 0x4449e5;\n                    in_RAX = fcn.0045e0c0(arg1, arg2, noname_2, arg4);\n                }\n            }\n            if (*0x5985b0 == 0) {\n                *(arg3 + 0x38) = arg1;\n            }\n            else {\n                arg2 = arg3 + 0x38;\n                *(*0x20 + -0x20) = 0x444a06;\n                in_RAX = fcn.0045e080(arg1, arg2, noname_2, arg4);\n            }\n            if (arg1 == 0) {\n                if (*0x5985b0 == 0) {\n                    *(in_RAX + 8) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x444a7a;\n                fcn.0045e080(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 0x10) == unaff_RBX) {\n                if (*0x5985b0 == 0) {\n                    *(arg1 + 0x10) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x444a32;\n                fcn.0045e080(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 8) == unaff_RBX) {\n                if (*0x5985b0 == 0) {\n                    *(arg1 + 8) = arg3;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x444a58;\n                    fcn.0045e080(arg3, arg2, noname_2, arg4);\n                }\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x444a95;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x444aa5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1063
    },
    "00444c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00444c80(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_RBX;\n    \n    if (*(unaff_RBX + 0xf8) < *0x532fb0) {\n        return 0;\n    }\n    if (*(unaff_RBX + 0xf8) <= *0x532fb8) {\n        uVar1 = *in_RAX;\n        if (uVar1 < 0xc000008f) {\n            if (uVar1 < 0xc0000006) {\n                if ((uVar1 != 0x80000003) && (uVar1 != 0xc0000005)) {\n                    return 0;\n                }\n            }\n            else if (((uVar1 != 0xc000001d) && (uVar1 != 0xc000008d)) && (uVar1 != 0xc000008e)) {\n                return 0;\n            }\n        }\n        else if (uVar1 < 0xc0000092) {\n            if ((uVar1 != 0xc000008f) && (uVar1 != 0xc0000091)) {\n                return 0;\n            }\n        }\n        else if (((uVar1 != 0xc0000093) && (uVar1 != 0xc0000094)) && (uVar1 != 0xc0000095)) {\n            return 0;\n        }\n        if ((*(arg1 + 0xb7) != '\\0') || (cVar2 = fcn.004340e0(),  cVar2 != '\\0')) {\n            fcn.00444f60(arg1);\n        }\n        *(arg1 + 0xf0) = *in_RAX;\n        *(arg1 + 0x110) = *(in_RAX + 8);\n        *(arg1 + 0x118) = *(in_RAX + 10);\n        *(arg1 + 0x120) = *(unaff_RBX + 0xf8);\n        if ((*(unaff_RBX + 0xf8) != NULL) && (*(unaff_RBX + 0xf8) != fcn.0045f460)) {\n            puVar3 = *(unaff_RBX + 0x98) + -8;\n            *(unaff_RBX + 0x98) = puVar3;\n            *puVar3 = *(unaff_RBX + 0xf8);\n        }\n        *(unaff_RBX + 0xf8) = 0x45df60;\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 594
    },
    "00444f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00444f00(ulong arg1)\n\n{\n    if ((*0x59834b == '\\0') && (*0x598349 == '\\0')) {\n        if (*0x59834d != '\\0') {\n            return 0;\n        }\n        fcn.00444f60(arg1);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 82
    },
    "00444f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00444f60(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    ulong *unaff_R14;\n    ulong *puVar4;\n    \n    puVar4 = unaff_R14;\n    if (*0x5983a4 != 0) {\n        fcn.0042f5c0();\n    }\n    *0x5983a4 = 1;\n    *puVar4 = 0;\n    puVar4[2] = 0x13a0;\n    puVar4[3] = 0x13a0;\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.004350e0();\n    fcn.00435620();\n    fcn.004350e0();\n    fcn.00435620();\n    fcn.004350e0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    piVar2 = puVar4[6];\n    if (((*(piVar2 + 0x1d) != '\\0') && (*piVar2 == arg1)) && (piVar2[0x12] != 0)) {\n        if (*0x59834a != '\\0') {\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.00434f40();\n        }\n        arg1 = *(puVar4[6] + 0x90);\n    }\n    fcn.00434ec0();\n    fcn.00435120();\n    fcn.00434f40();\n    *(puVar4[6] + 0xc4) = 2;\n    *(puVar4[6] + 0x98) = arg1;\n    uVar1 = *(unaff_R14[6] + 0xf9);\n    uVar3 = uVar1;\n    if ((uVar1 == 0) && (uVar3 = *0x52d26c >> 2,  1 < *(unaff_R14[6] + 0xc4))) {\n        uVar3 = 2;\n    }\n    if (uVar3 != 0) {\n        fcn.00453c00(0);\n        fcn.00454b80();\n        fcn.00406ba0();\n    }\n    fcn.0042f5c0();\n    return;\n}\n",
        "token_count": 599
    },
    "004455c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004455c0(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= arg1) {\n                uVar2 = *in_RAX * unaff_RBX;\n                uVar4 = uVar2;\n                goto code_r0x0044562a;\n            }\n            uVar4 = *in_RAX;\n            *(*0x20 + -0x18) = uVar4;\n            auVar1 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n            uVar2 = SUB168(auVar1, 0);\n            if (((SUB168(auVar1 >> 0x40, 0) == 0) && (uVar2 < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                uVar4 = arg1 * *(*0x20 + -0x18);\ncode_r0x0044562a:\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + -0x20) = uVar4;\n                if (in_RAX[1] == 0) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x48) = 0x445649;\n                    iVar3 = fcn.0040bd20(0);\n                    uVar4 = *(*0x20 + -0x20);\n                    if (uVar4 < *(*0x20 + -0x28)) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x44566c;\n                        fcn.0045eaa0(uVar4, iVar3 + uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x445685;\n                    iVar3 = fcn.0040bd20(1);\n                    uVar4 = *(*0x20 + -0x20);\n                    if ((uVar4 != 0) && (*0x5985b0 != '\\0')) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x4456a7;\n                        fcn.00411fe0(uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x48) = 0x4456c5;\n                fcn.0045eda0(uVar4);\n                return *(*0x20 + -0x10);\n            }\n            unaff_RBX = 0x4ca2a8;\n            *(*0x20 + -0x48) = 0x4456e8;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x445705;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1019
    },
    "00445800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00445800(char *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    char *in_RAX;\n    ulong uVar3;\n    uint8_t uVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint64_t uVar7;\n    char *unaff_RBX;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    char **unaff_RSI;\n    int64_t unaff_RDI;\n    char *pcVar10;\n    char *pcVar11;\n    char *pcVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar8 = unaff_RBX - unaff_RDI;\n            if (-1 < unaff_RBX) break;\n            unaff_RBX = 0x4ca2c8;\n            *(*0x20 + -0x60) = 0x445e98;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + 0x28) = unaff_RSI;\n        *(puVar9 + -8) = 0x445eb7;\n        fcn.0045bdc0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        unaff_RSI = *(puVar9 + 0x28);\n        *0x20 = puVar9;\n    } while( true );\n    pcVar10 = *unaff_RSI;\n    if (pcVar10 == NULL) {\n        return 0x598538;\n    }\n    pcVar12 = arg1 * 2;\n    pcVar5 = unaff_RBX;\n    if ((unaff_RBX == pcVar12 || SBORROW8(unaff_RBX, pcVar12) != unaff_RBX + arg1 * -2 < 0) &&\n       (pcVar5 = pcVar12,  0xff < arg1)) {\n        for (; 0 < arg1; arg1 = arg1 + (arg1 + ((arg1 + 0x300 >> 0x3f) >> 0x3e) + 0x300 >> 2)) {\n            if (unaff_RBX <= arg1) {\n                pcVar5 = arg1;\n                pcVar12 = arg1;\n                if (0 < arg1) goto code_r0x0044586e;\n                break;\n            }\n        }\n        pcVar5 = unaff_RBX;\n        pcVar12 = unaff_RBX;\n    }\ncode_r0x0044586e:\n    do {\n        if (pcVar10 == 0x1) {\n            if (0x7fff < pcVar5) {\n                pcVar10 = pcVar5;\n                if (pcVar5 <= pcVar5 + 0x2000) {\n                    pcVar10 = pcVar5 + 0x1fff & 0xffffffffffffe000;\n                }\ncode_r0x00445939:\n                pcVar5 = pcVar5 & 0xffffffffffffff00 | 0x1000000000000 < pcVar5;\n                pcVar12 = unaff_RBX;\n                pcVar11 = pcVar10;\n                goto code_r0x00445c66;\n            }\n            if (0x3f8 < pcVar5) {\n                pcVar10 = pcVar5 + -0x381 >> 7;\n                if (pcVar10 < 0xf9) {\n                    pcVar12 = \n                    \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                    ;\n                    pcVar10 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                              [pcVar10];\n                    if (pcVar10 < 0x44) {\n                        pcVar10 = *(pcVar10 * 2 + 0x530400);\n                        goto code_r0x00445939;\n                    }\n                    goto code_r0x00445df9;\n                }\n                goto code_r0x00445e06;\n            }\n            pcVar10 = pcVar5 + 7 >> 3;\n            if (pcVar10 < 0x81) {\n                pcVar12 = 0x5302c0;\n                pcVar10 = pcVar10[0x5302c0];\n                if (pcVar10 < 0x44) {\n                    pcVar10 = *(pcVar10 * 2 + 0x530400);\n                    goto code_r0x00445939;\n                }\n                goto code_r0x00445e13;\n            }\n        }\n        else {\n            if (pcVar10 == 0x8) {\n                pcVar10 = pcVar5 * 8;\n                if (0x7fff < pcVar10) {\n                    if (pcVar10 <= pcVar10 + 0x2000) {\n                        pcVar10 = pcVar10 + 0x1fff & 0xffffffffffffe000;\n                    }\ncode_r0x00445a14:\n                    iVar8 = iVar8 << 3;\n                    pcVar12 = unaff_RBX << 3;\n                    pcVar11 = pcVar10 >> 3;\n                    pcVar5 = 0x200000000000 < pcVar5;\n                    goto code_r0x00445c66;\n                }\n                if (0x3f8 < pcVar10) {\n                    pcVar6 = pcVar10 + -0x381 >> 7;\n                    if (pcVar6 < 0xf9) {\n                        pcVar12 = \n                        \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        ;\n                        pcVar6 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                 [pcVar6];\n                        if (pcVar6 < 0x44) {\n                            pcVar10 = *(pcVar6 * 2 + 0x530400);\n                            goto code_r0x00445a14;\n                        }\n                        goto code_r0x00445dc5;\n                    }\n                    goto code_r0x00445dd2;\n                }\n                pcVar6 = pcVar10 + 7 >> 3;\n                pcVar10 = pcVar5;\n                if (pcVar6 < 0x81) {\n                    pcVar12 = 0x5302c0;\n                    pcVar6 = pcVar6[0x5302c0];\n                    if (pcVar6 < 0x44) {\n                        pcVar10 = *(pcVar6 * 2 + 0x530400);\n                        goto code_r0x00445a14;\n                    }\n                    goto code_r0x00445ddf;\n                }\n            }\n            else {\n                if ((pcVar10 & pcVar10 + -1) == 0) {\n                    pcVar11 = NULL;\n                    if (pcVar10 != NULL) {\n                        for (; (pcVar10 >> pcVar11 & 1) == 0; pcVar11 = pcVar11 + 1) {\n                        }\n                    }\n                    uVar4 = pcVar11;\n                    iVar8 = iVar8 << (uVar4 & 0x3f);\n                    pcVar12 = unaff_RBX << (uVar4 & 0x3f);\n                    uVar7 = pcVar5 << (uVar4 & 0x3f);\n                    if (0x7fff < uVar7) {\n                        if (uVar7 <= uVar7 + 0x2000) {\n                            uVar7 = uVar7 + 0x1fff & 0xffffffffffffe000;\n                        }\ncode_r0x00445b34:\n                        pcVar11 = uVar7 >> (uVar4 & 0x3f);\n                        pcVar10 = pcVar11 << (uVar4 & 0x3f);\n                        pcVar5 = pcVar5 & 0xffffff00 | 0x1000000000000U >> (uVar4 & 0x3f) < pcVar5;\ncode_r0x00445c66:\n                        pcVar6 = 0x1000000000000;\n                        if ((pcVar5 == '\\0') && (pcVar10 < 0x1000000000001)) {\n                            *(*0x20 + 8) = in_RAX;\n                            *(*0x20 + -0x20) = unaff_RBX;\n                            *(*0x20 + -0x30) = iVar8;\n                            *(*0x20 + -0x38) = pcVar11;\n                            if (unaff_RSI[1] == NULL) {\n                                *(*0x20 + -0x28) = pcVar10;\n                                *(*0x20 + -0x40) = pcVar12;\n                                *(*0x20 + -0x60) = 0x445ca8;\n                                uVar3 = fcn.0040bd20(0);\n                                *(*0x20 + -0x10) = uVar3;\n                                *(*0x20 + -0x60) = 0x445cc5;\n                                fcn.0045eaa0();\n                                iVar8 = *(*0x20 + -0x30);\n                                uVar3 = *(*0x20 + -0x10);\n                            }\n                            else {\n                                *(*0x20 + 0x28) = unaff_RSI;\n                                *(*0x20 + -0x60) = 0x445ce9;\n                                uVar3 = fcn.0040bd20(1);\n                                iVar8 = *(*0x20 + -0x30);\n                                if ((iVar8 != 0) && (*0x5985b0 != '\\0')) {\n                                    *(*0x20 + -0x10) = uVar3;\n                                    iVar1 = **(*0x20 + 0x28);\n                                    iVar2 = (*(*0x20 + 0x28))[1];\n                                    *(*0x20 + -0x60) = 0x445d1d;\n                                    fcn.00411fe0((iVar8 - iVar1) + iVar2);\n                                    uVar3 = *(*0x20 + -0x10);\n                                    iVar8 = *(*0x20 + -0x30);\n                                }\n                            }\n                            *(*0x20 + -0x10) = uVar3;\n                            *(*0x20 + -0x60) = 0x445d36;\n                            fcn.0045eda0(iVar8);\n                            return *(*0x20 + -0x10);\n                        }\n                        iVar8 = 0x4ca2c8;\n                        *(*0x20 + -0x60) = 0x445d65;\n                        fcn.00432de0();\n                        unaff_RBX = pcVar5;\n                        in_RAX = pcVar6;\ncode_r0x00445d65:\n                        *(*0x20 + -0x60) = 0x445d6f;\n                        fcn.0045e420(0x44);\ncode_r0x00445d6f:\n                        *(*0x20 + -0x60) = 0x445d79;\n                        fcn.0045e440(0xf9);\ncode_r0x00445d79:\n                        *(*0x20 + -0x60) = 0x445d85;\n                        fcn.0045e420(0x44);\n                        pcVar6 = unaff_RBX;\n                        pcVar11 = pcVar10;\n                        goto code_r0x00445d85;\n                    }\n                    if (0x3f8 < uVar7) {\n                        pcVar6 = uVar7 - 0x381 >> 7;\n                        if (pcVar6 < 0xf9) {\n                            pcVar6 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                     [pcVar6];\n                            if (pcVar6 < 0x44) {\n                                uVar7 = *(pcVar6 * 2 + 0x530400);\n                                goto code_r0x00445b34;\n                            }\n                            goto code_r0x00445d8f;\n                        }\n                        goto code_r0x00445d9c;\n                    }\n                    pcVar6 = uVar7 + 7 >> 3;\n                    if (pcVar6 < 0x81) {\n                        pcVar6 = pcVar6[0x5302c0];\n                        if (pcVar6 < 0x44) {\n                            uVar7 = *(pcVar6 * 2 + 0x530400);\n                            goto code_r0x00445b34;\n                        }\n                        goto code_r0x00445da9;\n                    }\n                }\n                else {\n                    uVar7 = pcVar5 * pcVar10;\n                    iVar8 = iVar8 * pcVar10;\n                    pcVar12 = unaff_RBX * pcVar10;\n                    if (0x7fff < uVar7) {\n                        if (uVar7 < uVar7 + 0x2000 || uVar7 - (uVar7 + 0x2000) == 0) {\n                            uVar7 = uVar7 + 0x1fff & 0xffffffffffffe000;\n                        }\ncode_r0x00445c32:\n                        *(*0x20 + -0x18) = uVar7 / pcVar10;\n                        pcVar5 = CONCAT71(SUB167(ZEXT816(pcVar5) * ZEXT816(pcVar10) >> 0x48, 0), \n                                          SUB168(ZEXT816(pcVar5) * ZEXT816(pcVar10) >> 0x40, 0) != 0);\n                        pcVar10 = pcVar10 * *(*0x20 + -0x18);\n                        pcVar11 = *(*0x20 + -0x18);\n                        goto code_r0x00445c66;\n                    }\n                    if (0x3f8 < uVar7) {\n                        uVar7 = uVar7 - 0x381 >> 7;\n                        if (uVar7 < 0xf9) {\n                            if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                [uVar7] < 0x44) {\n                                uVar7 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                          [uVar7] * 2 + 0x530400);\n                                goto code_r0x00445c32;\n                            }\n                            goto code_r0x00445d65;\n                        }\n                        goto code_r0x00445d6f;\n                    }\n                    uVar7 = uVar7 + 7 >> 3;\n                    pcVar6 = unaff_RBX;\n                    pcVar11 = pcVar10;\n                    if (uVar7 < 0x81) {\n                        uVar7 = *(uVar7 + 0x5302c0);\n                        if (uVar7 < 0x44) {\n                            uVar7 = *(uVar7 * 2 + 0x530400);\n                            goto code_r0x00445c32;\n                        }\n                        goto code_r0x00445d79;\n                    }\ncode_r0x00445d85:\n                    pcVar12 = in_RAX;\n                    *(*0x20 + -0x60) = 0x445d8f;\n                    fcn.0045e440(0x81);\ncode_r0x00445d8f:\n                    *(*0x20 + -0x60) = 0x445d9c;\n                    fcn.0045e420(0x44);\ncode_r0x00445d9c:\n                    *(*0x20 + -0x60) = 0x445da9;\n                    fcn.0045e440(0xf9);\ncode_r0x00445da9:\n                    *(*0x20 + -0x60) = 0x445db6;\n                    fcn.0045e420(0x44);\n                }\n                *(*0x20 + -0x60) = 0x445dc5;\n                fcn.0045e440(0x81);\n                pcVar5 = pcVar11;\ncode_r0x00445dc5:\n                *(*0x20 + -0x60) = 0x445dd2;\n                fcn.0045e420(0x44);\ncode_r0x00445dd2:\n                *(*0x20 + -0x60) = 0x445ddf;\n                fcn.0045e440(0xf9);\ncode_r0x00445ddf:\n                *(*0x20 + -0x60) = 0x445dec;\n                fcn.0045e420(0x44);\n                pcVar10 = pcVar5;\n            }\n            *(*0x20 + -0x60) = 0x445df9;\n            fcn.0045e440(0x81);\n            pcVar5 = pcVar6;\ncode_r0x00445df9:\n            *(*0x20 + -0x60) = 0x445e06;\n            fcn.0045e420(0x44);\ncode_r0x00445e06:\n            *(*0x20 + -0x60) = 0x445e13;\n            fcn.0045e440(0xf9);\ncode_r0x00445e13:\n            *(*0x20 + -0x60) = 0x445e25;\n            fcn.0045e420(0x44);\n        }\n        unaff_RBX = pcVar5;\n        *(*0x20 + -0x60) = 0x445e32;\n        in_RAX = fcn.0045e440(0x81);\n        pcVar5 = pcVar12;\n    } while( true );\n}\n",
        "token_count": 4427
    },
    "00445ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong * fcn.00445ee0(void)\n\n{\n    uint8_t in_AL;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_AL < 2) {\n                iVar3 = in_AL * 0x40;\n                iVar1 = *(iVar3 + 0x5989c8);\n                if (iVar1 != 0) goto code_r0x00445f7e;\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar3 + 0x5989c8;\n                *(*0x20 + -0x40) = 0x445f45;\n                iVar1 = fcn.00424320();\n                if (iVar1 != 0) {\n                    if (*(iVar1 + 0x60) == 0) {\n                        if (*(iVar1 + 0x28) == 0) {\n                            *(iVar1 + 0x68) = 0x2000 << (*(*0x20 + 8) & 0x3f);\n                            puVar2 = NULL;\n                            do {\n                                if (0x7fff < puVar2) {\n                                    *(*0x20 + -0x20) = iVar1;\n                                    *(*0x20 + -0x40) = 0x44600f;\n                                    fcn.00425940();\n                                    iVar1 = *(*0x20 + -0x20);\ncode_r0x00445f7e:\n                                    puVar2 = *(iVar1 + 0x28);\n                                    if (puVar2 != NULL) {\n                                        *(iVar1 + 0x28) = *puVar2;\n                                        *(iVar1 + 0x60) = *(iVar1 + 0x60) + 1;\n                                        if (*(iVar1 + 0x28) == 0) {\n                                            *(*0x20 + -0x10) = puVar2;\n                                            *(*0x20 + -0x40) = 0x445fb5;\n                                            fcn.004257c0();\n                                            puVar2 = *(*0x20 + -0x10);\n                                        }\n                                        return puVar2;\n                                    }\n                                    *(*0x20 + -0x40) = 0x445fd8;\n                                    iVar1 = fcn.00433580();\n                                }\n                                puVar4 = *(iVar1 + 0x18) + puVar2;\n                                *puVar4 = *(iVar1 + 0x28);\n                                *(iVar1 + 0x28) = puVar4;\n                                puVar2 = puVar2 + *(iVar1 + 0x68);\n                            } while( true );\n                        }\n                        *(*0x20 + -0x40) = 0x44602f;\n                        fcn.00433580();\n                    }\n                    *(*0x20 + -0x40) = 0x446045;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x40) = 0x446056;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x40) = 0x446065;\n            in_AL = fcn.0045e420(2);\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x44606f;\n        fcn.0045bdc0();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 894
    },
    "00446080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00446080(void)\n\n{\n    int16_t iVar1;\n    ulong *in_RAX;\n    uint64_t uVar2;\n    uint8_t unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = in_RAX + 0x100000000000 >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar4 = *(*(*(uVar2 * 8 + 0x56a790) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x10400 +\n                         (in_RAX >> 0xd & 0x1ff) * 8);\n                if (*(iVar4 + 99) == '\\x02') {\n                    *(*0x20 + -0x18) = iVar4;\n                    if (*(iVar4 + 0x28) == 0) {\n                        if (unaff_BL < 2) {\n                            *(*0x20 + 0x10) = unaff_BL;\n                            *(*0x20 + -0x10) = in_RAX;\n                            *(*0x20 + -0x38) = 0x446136;\n                            fcn.00425940(unaff_BL * 0x40 + 8, 0x5989c0);\n                            unaff_BL = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + -0x10);\n                            iVar4 = *(*0x20 + -0x18);\n                            goto code_r0x00446145;\n                        }\n                    }\n                    else {\ncode_r0x00446145:\n                        *in_RAX = *(iVar4 + 0x28);\n                        *(iVar4 + 0x28) = in_RAX;\n                        iVar1 = *(iVar4 + 0x60);\n                        *(iVar4 + 0x60) = iVar1 + -1;\n                        if (*0x598384 != 0) {\n                            return;\n                        }\n                        if (iVar1 != 1) {\n                            return;\n                        }\n                        if (unaff_BL < 2) {\n                            *(*0x20 + -0x38) = 0x446193;\n                            fcn.004257c0(unaff_BL * 0x40 + 8, 0x5989c0);\n                            *(*(*0x20 + -0x18) + 0x28) = 0;\n                            *(*0x20 + -0x38) = 0x4461b1;\n                            fcn.00425300(1);\n                            return;\n                        }\n                        *(*0x20 + -0x38) = 0x4461c5;\n                        fcn.0045e420(2);\n                    }\n                    *(*0x20 + -0x38) = 0x4461cf;\n                    fcn.0045e420(2);\n                }\n                unaff_BL = 0x21;\n                *(*0x20 + -0x38) = 0x4461e5;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x38) = 0x4461f2;\n            in_RAX = fcn.0045e440(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        *(puVar3 + -8) = 0x446205;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 927
    },
    "00446220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00446220(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = unaff_BL;\n            if (uVar4 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x10) = uVar4 * 0x40 + 0x5989c0;\n                *(*0x20 + -0x40) = 0x446271;\n                fcn.0040a520();\n                uVar4 = 0;\n                puVar3 = NULL;\n                while( true ) {\n                    *(*0x20 + -0x28) = uVar4;\n                    *(*0x20 + -0x20) = puVar3;\n                    if (0x3fff < uVar4) break;\n                    *(*0x20 + -0x40) = 0x446285;\n                    puVar3 = fcn.00445ee0();\n                    *puVar3 = *(*0x20 + -0x20);\n                    uVar4 = (0x2000 << (*(*0x20 + 0x10) & 0x3f)) + *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = 0x4462d4;\n                fcn.0040a740();\n                iVar1 = *(*0x20 + 8);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar1 + 0x468 + iVar2 * 0x10) = *(*0x20 + -0x20);\n                *(iVar1 + 0x470 + iVar2 * 0x10) = *(*0x20 + -0x28);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x446315;\n            in_RAX = fcn.0045e420(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x446325;\n        fcn.00460800();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 698
    },
    "00446340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00446340(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_BL;\n            if (uVar2 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_BL;\n                iVar4 = uVar2 * 0x10;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x28) = *(in_RAX + 0x468 + iVar4);\n                *(*0x20 + -0x20) = *(in_RAX + 0x470 + iVar4);\n                *(*0x20 + -0x10) = uVar2 * 0x40 + 0x5989c0;\n                *(*0x20 + -0x40) = 0x4463b4;\n                fcn.0040a520();\n                puVar3 = *(*0x20 + -0x28);\n                uVar2 = *(*0x20 + -0x20);\n                while (*(*0x20 + -0x20) = uVar2,  0x4000 < uVar2) {\n                    *(*0x20 + -0x28) = *puVar3;\n                    *(*0x20 + -0x40) = 0x4463d7;\n                    fcn.00446080();\n                    puVar3 = *(*0x20 + -0x28);\n                    uVar2 = *(*0x20 + -0x20) - (0x2000 << (*(*0x20 + 0x10) & 0x3f));\n                }\n                *(*0x20 + -0x28) = puVar3;\n                *(*0x20 + -0x40) = 0x44640f;\n                fcn.0040a740();\n                iVar4 = *(*0x20 + -0x18);\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x468 + iVar4) = *(*0x20 + -0x28);\n                *(iVar1 + 0x470 + iVar4) = *(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x44644a;\n            in_RAX = fcn.0045e420(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x446459;\n        fcn.00460800();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 776
    },
    "00446480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00446480(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    ulong *puVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.00460800();\n    }\n    for (uVar1 = 0; uVar1 < 2; uVar1 = uVar1 + 1) {\n        fcn.0040a520();\n        puVar2 = *(in_RAX + 0x468 + uVar1 * 0x10);\n        while (puVar2 != NULL) {\n            puVar2 = *puVar2;\n            fcn.00446080();\n        }\n        *(uVar1 * 0x10 + 0x468 + in_RAX) = in_XMM15;\n        fcn.0040a740();\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "00446580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00446580(void)\n\n{\n    uint32_t uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    int64_t iVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = in_RAX;\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar11 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar7 = *(unaff_R14 + 0x30);\n            if (*piVar7 == unaff_R14) {\n                if ((uVar1 - 1 & uVar1) == 0) {\n                    if (*0x598808 != 0) {\n                        iVar3 = *0x5984a8 + -1;\n                        uVar6 = -*0x5984a8;\n                        piVar7 = (in_RAX & 0xffffffff) + iVar3 & uVar6;\n                        *(*0x20 + -0x18) = piVar7 & 0xffffffff;\n                        *(*0x20 + -0x78) = 0x44660b;\n                        puVar2 = fcn.004147e0();\n                        if (puVar2 != NULL) {\n                            return puVar2;\n                        }\n                        uVar10 = 0x1a;\n                        *(*0x20 + -0x78) = 0x446634;\n                        fcn.00433580();\n                        goto code_r0x00446634;\n                    }\n                    *(*0x20 + 8) = uVar1;\n                    if (0x7fff < uVar1) {\n                        piVar7 = in_RAX & 0xffffffff;\n                        iVar3 = 0;\n                        uVar6 = piVar7 >> 0xd;\n                        uVar10 = uVar6;\n                        for (; 1 < uVar6; uVar6 = uVar6 >> 1) {\ncode_r0x00446634:\n                            iVar3 = iVar3 + 1;\n                        }\n                        *(*0x20 + -0x18) = uVar10;\n                        *(*0x20 + -0x20) = piVar7;\n                        *(*0x20 + -0x40) = iVar3;\n                        *(*0x20 + -0x78) = 0x446665;\n                        fcn.0040a520();\n                        if (*(*0x20 + -0x40) < 0x23) {\n                            iVar3 = *(*(*0x20 + -0x40) * 0x10 + 0x599248);\n                            if (iVar3 == 0) {\n                                uVar4 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x28) = iVar3;\n                                *(*0x20 + -0x78) = 0x446699;\n                                fcn.004257c0();\n                                uVar4 = *(*0x20 + -0x28);\n                            }\n                            *(*0x20 + -0x48) = uVar4;\n                            *(*0x20 + -0x78) = 0x4466b1;\n                            fcn.0040a740();\n                            iVar3 = *(*0x20 + -0x48);\n                            if (iVar3 == 0) {\n                                *(*0x20 + -0x78) = 0x4466d1;\n                                iVar3 = fcn.00424320(1);\n                                if (iVar3 == 0) {\n                                    uVar10 = 0xd;\n                                    *(*0x20 + -0x78) = 0x44670e;\n                                    fcn.00433580();\n                                    goto code_r0x0044670e;\n                                }\n                                *(iVar3 + 0x68) = *(*0x20 + -0x20);\n                            }\n                            return *(iVar3 + 0x18);\n                        }\ncode_r0x0044670e:\n                        uVar9 = uVar10;\n                        uVar6 = 0x23;\n                        *(*0x20 + -0x78) = 0x446718;\n                        uVar1 = fcn.0045e420(0x23);\n                        goto code_r0x00446718;\n                    }\n                    uVar6 = in_RAX & 0xffffffff;\n                    uVar9 = 0;\n                    while( true ) {\n                        uVar5 = uVar6;\n                        uVar1 = in_RAX;\n                        if (uVar1 < 0x2001) break;\ncode_r0x00446718:\n                        uVar9 = uVar9 + 1;\n                        in_RAX = uVar1 >> 1;\n                    }\n                    if ((piVar7[0x14] == 0) || (piVar7[0x1a] != 0)) {\n                        if ((uVar9 & 0xff) < 2) {\n                            *(*0x20 + -0x51) = uVar9;\n                            *(*0x20 + -0x10) = (uVar9 & 0xff) * 0x40 + 0x5989c0;\n                            *(*0x20 + -0x78) = 0x446767;\n                            fcn.0040a520();\n                            *(*0x20 + -0x78) = 0x446771;\n                            uVar4 = fcn.00445ee0();\n                            *(*0x20 + -0x50) = uVar4;\n                            *(*0x20 + -0x78) = 0x446785;\n                            fcn.0040a740();\n                            return *(*0x20 + -0x50);\n                        }\n                    }\n                    else {\n                        iVar3 = *(piVar7[0x14] + 0x40);\n                        if ((uVar9 & 0xff) < 2) {\n                            iVar8 = (uVar9 & 0xff) * 0x10;\n                            puVar2 = *(iVar3 + 0x468 + iVar8);\n                            if (puVar2 == NULL) {\n                                *(*0x20 + -0x38) = iVar3;\n                                *(*0x20 + -0x30) = iVar8;\n                                *(*0x20 + -0x78) = 0x4467c5;\n                                fcn.00446220();\n                                iVar8 = *(*0x20 + -0x30);\n                                iVar3 = *(*0x20 + -0x38);\n                                puVar2 = *(iVar3 + 0x468 + iVar8);\n                                uVar5 = *(*0x20 + 8);\n                            }\n                            *(iVar3 + 0x468 + iVar8) = *puVar2;\n                            piVar7 = iVar3 + 0x470 + iVar8;\n                            *piVar7 = *piVar7 - uVar5;\n                            return puVar2;\n                        }\n                        *(*0x20 + -0x78) = 0x446812;\n                        fcn.0045e420(2);\n                    }\n                    *(*0x20 + -0x78) = 0x44681c;\n                    fcn.0045e420(2);\n                }\n                *(*0x20 + -0x78) = 0x44682d;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x78) = 0x44683e;\n            uVar1 = fcn.00433580();\n        }\n        *(puVar11 + 8) = uVar1;\n        *(puVar11 + -8) = 0x446848;\n        fcn.00460800();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1800
    },
    "00446860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00446860(void)\n\n{\n    int64_t *piVar1;\n    ulong *in_RAX;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    \n    do {\n        iVar9 = *0x598dc0;\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar8 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = unaff_RBX - in_RAX;\n            if ((uVar6 & uVar6 - 1) == 0) {\n                if (*0x598808 != 0) {\n                    LOCK();\n                    *0x598dc0 = in_RAX + (*0x598dc0 - unaff_RBX);\n                    *(*0x20 + -0x80) = 0x44694e;\n                    fcn.00414a60(0x598dc0, iVar9);\n                    return;\n                }\n                puVar5 = in_RAX;\n                uVar7 = uVar6;\n                if (0x7fff < uVar6) {\n                    uVar6 = in_RAX + 0x100000000000 >> 0x2a;\n                    if (uVar6 < 0x40) {\n                        uVar4 = in_RAX >> 0xd;\n                        iVar9 = *(*(*(uVar6 * 8 + 0x56a790) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x10400\n                                 + (uVar4 & 0x1ff) * 8);\n                        puVar5 = uVar4 & 0x100 | *(iVar9 + 99);\n                        if (*(iVar9 + 99) == 2) {\n                            if (*0x598384 == 0) {\n                                *(*0x20 + -0x80) = 0x446936;\n                                fcn.00425300(1);\n                                return;\n                            }\n                            iVar10 = 0;\n                            for (uVar6 = *(iVar9 + 0x20); 1 < uVar6; uVar6 = uVar6 >> 1) {\n                                iVar10 = iVar10 + 1;\n                            }\n                            *(*0x20 + -0x50) = iVar9;\n                            *(*0x20 + -0x48) = iVar10;\n                            *(*0x20 + -0x80) = 0x446986;\n                            fcn.0040a520();\n                            if (*(*0x20 + -0x48) < 0x23) {\n                                *(*0x20 + -0x80) = 0x4469a9;\n                                fcn.00425940(0x599248);\n                                *(*0x20 + -0x80) = 0x4469b7;\n                                fcn.0040a740();\n                                return;\n                            }\n                            *(*0x20 + -0x80) = 0x4469c5;\n                            in_RAX = fcn.0045e420(0x23);\n                        }\n                        *(*0x20 + -0x20) = in_RAX;\n                        *(*0x20 + -0x58) = *(iVar9 + 0x18);\n                        *(*0x20 + -0x80) = 0x4469d8;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x80) = 0x4469e5;\n                        fcn.00435620();\n                        *(*0x20 + -0x80) = 0x4469ea;\n                        fcn.004350e0();\n                        *(*0x20 + -0x80) = 0x4469f4;\n                        fcn.00435740();\n                        *(*0x20 + -0x80) = 0x4469f9;\n                        fcn.00435120();\n                        *(*0x20 + -0x80) = 0x4469fe;\n                        fcn.00434f40();\n                        uVar7 = 0xe;\n                        *(*0x20 + -0x80) = 0x446a0f;\n                        fcn.00433580();\n                    }\n                    iVar2 = 0x40;\n                    *(*0x20 + -0x80) = 0x446a1c;\n                    uVar6 = fcn.0045e440(0x40);\n                    goto code_r0x00446a1c;\n                }\n                *(*0x20 + -0x10) = unaff_R14;\n                uVar3 = 0;\n                for (; iVar2 = uVar3,  0x2000 < uVar7; uVar7 = uVar7 >> 1) {\ncode_r0x00446a1c:\n                    uVar3 = iVar2 + 1;\n                }\n                *(*0x20 + -0x28) = puVar5;\n                iVar9 = *(*(*(*0x20 + -0x10) + 0x30) + 0xa0);\n                if ((iVar9 == 0) || (*(*(*(*0x20 + -0x10) + 0x30) + 0xd0) != 0)) {\n                    if ((uVar3 & 0xff) < 2) {\n                        *(*0x20 + -0x59) = uVar3;\n                        *(*0x20 + -0x18) = (uVar3 & 0xff) * 0x40 + 0x5989c0;\n                        *(*0x20 + -0x80) = 0x446a79;\n                        fcn.0040a520();\n                        *(*0x20 + -0x80) = 0x446a88;\n                        fcn.00446080();\n                        *(*0x20 + -0x80) = 0x446a94;\n                        fcn.0040a740();\n                        return;\n                    }\n                }\n                else {\n                    iVar9 = *(iVar9 + 0x40);\n                    if ((uVar3 & 0xff) < 2) {\n                        iVar10 = (uVar3 & 0xff) * 0x10;\n                        if (0x7fff < *(iVar9 + 0x470 + iVar10)) {\n                            *(*0x20 + -0x30) = uVar6;\n                            *(*0x20 + -0x40) = iVar9;\n                            *(*0x20 + -0x38) = iVar10;\n                            *(*0x20 + -0x80) = 0x446ad6;\n                            fcn.00446340();\n                            uVar6 = *(*0x20 + -0x30);\n                            puVar5 = *(*0x20 + -0x28);\n                            iVar9 = *(*0x20 + -0x40);\n                            iVar10 = *(*0x20 + -0x38);\n                        }\n                        *puVar5 = *(iVar9 + 0x468 + iVar10);\n                        *(iVar9 + 0x468 + iVar10) = puVar5;\n                        piVar1 = iVar9 + 0x470 + iVar10;\n                        *piVar1 = *piVar1 + uVar6;\n                        return;\n                    }\n                    *(*0x20 + -0x80) = 0x446b1a;\n                    fcn.0045e420(2);\n                }\n                *(*0x20 + -0x80) = 0x446b25;\n                fcn.0045e420(2);\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x80) = 0x446b36;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x446b46;\n        fcn.00460800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1923
    },
    "00446b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00446b60(uint64_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t in_RAX;\n    uint64_t uVar8;\n    ulong uVar9;\n    int32_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    while (puVar10 = *0x20,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x00446d31:\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + -8) = 0x446d4f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        *0x20 = puVar10;\n    }\n    puVar10 = *0x20 + -0x60;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x28) = unaff_RSI;\n    *(*0x20 + -0x10) = unaff_RSI;\n    *(*0x20 + -0x28) = in_RAX;\n    uVar3 = arg1[0x23];\n    uVar4 = *arg1;\n    uVar5 = arg1[1];\n    uVar6 = arg1[2];\n    uVar11 = *unaff_RBX;\n    *(*0x20 + -0x30) = uVar11;\n    uVar13 = 0;\n    uVar8 = in_RAX;\n    do {\n        if (uVar11 <= uVar13) {\n            return;\n        }\n        *(*0x20 + -0x40) = uVar13;\n        uVar12 = *((uVar13 >> 3) + *(unaff_RBX + 2));\n        while (uVar12 != '\\0') {\n            uVar7 = 0;\n            if (uVar12 != 0) {\n                for (; (uVar12 >> uVar7 & 1) == 0; uVar7 = uVar7 + 1) {\n                }\n            }\n            uVar12 = uVar12 & uVar12 - 1;\n            *(*0x20 + -0x49) = uVar12;\n            iVar1 = uVar7 + uVar13;\n            puVar2 = in_RAX + iVar1 * 8;\n            while( true ) {\n                uVar13 = *(in_RAX + iVar1 * 8);\n                *(*0x20 + -0x48) = uVar13;\n                if (unaff_RDI != 0) {\n                    if (uVar13 - 1 < 0xfff) {\n                        if (*0x598820 != 0) {\n                            *(*0x20 + -0x20) = puVar2;\n                            arg1 = *(unaff_R14 + 0x30);\n                            *(arg1 + 0xf9) = 2;\n                            *(*0x20 + -0x68) = 0x446cb0;\n                            uVar9 = fcn.0044c400();\n                            *(*0x20 + -0x18) = uVar9;\n                            *(*0x20 + -0x38) = unaff_RSI;\n                            *(*0x20 + -0x68) = 0x446cbf;\n                            fcn.00434ec0();\n                            *(*0x20 + -0x68) = 0x446cd0;\n                            fcn.004357c0();\n                            *(*0x20 + -0x68) = 0x446cdf;\n                            fcn.004357c0();\n                            *(*0x20 + -0x68) = 0x446cf0;\n                            fcn.004357c0();\n                            *(*0x20 + -0x68) = 0x446cfa;\n                            fcn.00435740();\n                            *(*0x20 + -0x68) = 0x446d0b;\n                            fcn.004357c0();\n                            *(*0x20 + -0x68) = 0x446d15;\n                            fcn.00435620();\n                            *(*0x20 + -0x68) = 0x446d1a;\n                            fcn.00435120();\n                            *(*0x20 + -0x68) = 0x446d1f;\n                            fcn.00434f40();\n                            unaff_RBX = 0x1e;\n                            *(*0x20 + -0x68) = 0x446d30;\n                            in_RAX = fcn.00433580();\n                            goto code_r0x00446d31;\n                        }\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                    else {\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                }\n                if ((uVar13 < uVar4) || (uVar5 <= uVar13)) goto code_r0x00446bde;\n                if (uVar3 <= uVar8) {\n                    *(in_RAX + iVar1 * 8) = uVar13 + uVar6;\n                    goto code_r0x00446bde;\n                }\n                LOCK();\n                uVar11 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar13 == uVar11) * (*puVar2 ^ *(*0x20 + -0x48) + uVar6);\n                if (uVar13 == uVar11) break;\n                uVar8 = *(*0x20 + -0x28);\n                unaff_RSI = *(*0x20 + -0x10);\n            }\n            uVar8 = *(*0x20 + -0x28);\n            unaff_RSI = *(*0x20 + -0x10);\ncode_r0x00446bde:\n            uVar13 = *(*0x20 + -0x40);\n            uVar11 = *(*0x20 + -0x30);\n        }\n        uVar13 = uVar13 + 8;\n    } while( true );\n}\n",
        "token_count": 1601
    },
    "00447380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00447380(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *in_RAX;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t unaff_RBX;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x130 && *0x20 + -0x130 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1b0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX[0xe] == 0) {\n                iVar8 = in_RAX[1];\n                iVar1 = *in_RAX;\n                if (iVar1 != 0) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x130) = iVar8;\n                    *(*0x20 + -0x138) = iVar1;\n                    iVar2 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x160) = iVar8 - in_RAX[7];\n                    iVar2 = *(iVar2 + 0xa0);\n                    *(*0x20 + -0x140) = iVar8 - iVar1;\n                    iVar8 = unaff_RBX - (iVar8 - iVar1);\n                    if (iVar2 == 0) {\n                        LOCK();\n                        uVar9 = *0x598d10;\n                        *0x598d10 = *0x598d10 + iVar8;\n                    }\n                    else {\n                        iVar3 = *(iVar2 + 0x22a8);\n                        iVar1 = iVar3 + iVar8;\n                        *(iVar2 + 0x22a8) = iVar1;\n                        uVar9 = iVar8 + iVar3 + 0x1fff;\n                        if (0x3ffe < uVar9) {\n                            LOCK();\n                            *0x598d10 = *0x598d10 + iVar1;\n                            *(iVar2 + 0x22a8) = 0;\n                            uVar9 = 0x598d10;\n                        }\n                    }\n                    *(*0x20 + -0x148) = unaff_RBX;\n                    *(*0x20 + -0x1b8) = 0x447467;\n                    uVar5 = fcn.00446580();\n                    *(*0x20 + -0x150) = uVar5;\n                    *(*0x20 + -0x158) = uVar9;\n                    *(*0x20 + -0x1c0) = unaff_RBP;\n                    *(*0x20 + -0x1b8) = 0x44748f;\n                    fcn.0045e686();\n                    uVar6 = *(*0x20 + -0x138);\n                    *(*0x20 + -0x128) = uVar6;\n                    uVar7 = *(*0x20 + -0x130);\n                    *(*0x20 + -0x120) = uVar7;\n                    *(*0x20 + -0x118) = uVar9 - uVar7;\n                    iVar8 = *(*0x20 + 8);\n                    if (*(iVar8 + 0xb8) == '\\0') {\n                        if ((*(*0x20 + -0x148) < *(*0x20 + -0x140)) &&\n                           (uVar9 = *(*0x20 + -0x148) & 0xffffffffffffff00 | *(iVar8 + 0xb9),  *(iVar8 + 0xb9) != 0)) {\n                            *(*0x20 + -0x1b8) = 0x4476a8;\n                            fcn.00433580();\n                            goto code_r0x004476a8;\n                        }\n                        for (iVar8 = *(iVar8 + 0x148); iVar8 != 0; iVar8 = *(iVar8 + 0x40)) {\n                            uVar9 = *(iVar8 + 0x18);\n                            if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                               (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                                *(iVar8 + 0x18) = uVar9 + *(*0x20 + -0x118);\n                            }\n                        }\n                        iVar8 = *(*0x20 + -0x160);\n                    }\n                    else {\n                        uVar11 = 0;\n                        for (uVar9 = *(iVar8 + 0x148); uVar9 != 0; uVar9 = *(uVar9 + 0x40)) {\n                            unaff_RBX = *(*(uVar9 + 0x50) + 0x18) + *(uVar9 + 0x18);\n                            if (((unaff_RBX < uVar6) || (uVar7 <= unaff_RBX)) || (unaff_RBX <= uVar11)) {\n                                unaff_RBX = uVar11;\n                            }\ncode_r0x004476a8:\n                            uVar11 = unaff_RBX;\n                        }\n                        *(*0x20 + -0x10) = uVar11;\n                        *(*0x20 + -0x1b8) = 0x4476f5;\n                        iVar8 = fcn.00447200(*0x20 + -0x128);\n                        iVar8 = *(*0x20 + -0x160) - iVar8;\n                    }\n                    *(*0x20 + -0x1b8) = 0x447554;\n                    fcn.0045eda0(iVar8);\n                    iVar8 = *(*0x20 + 8);\n                    uVar9 = *(iVar8 + 0x50);\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        *(iVar8 + 0x50) = *(*0x20 + -0x118) + uVar9;\n                    }\n                    uVar9 = *(iVar8 + 0x68);\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        *(iVar8 + 0x68) = uVar9 + *(*0x20 + -0x118);\n                    }\n                    *(*0x20 + -0x1b8) = 0x4475ba;\n                    fcn.00447100();\n                    piVar4 = *(*0x20 + 8);\n                    uVar9 = piVar4[4];\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        piVar4[4] = *(*0x20 + -0x118) + uVar9;\n                    }\n                    if (*(*0x20 + -0x10) != 0) {\n                        *(*0x20 + -0x10) = *(*0x20 + -0x10) + *(*0x20 + -0x118);\n                    }\n                    iVar8 = *(*0x20 + -0x150);\n                    *piVar4 = iVar8;\n                    iVar1 = *(*0x20 + -0x158);\n                    piVar4[1] = iVar1;\n                    piVar4[2] = iVar8 + 0x13a0;\n                    piVar4[7] = iVar1 - *(*0x20 + -0x160);\n                    iVar8 = *(*0x20 + -0x118);\n                    piVar4[0x10] = piVar4[0x10] + iVar8;\n                    *(*0x20 + -0x1b0) = 0;\n                    *(*0x20 + -0x1b8) = 0x447675;\n                    fcn.004514c0(0, iVar8, 0, 0x7fffffff);\n                    *(*0x20 + -0x1b8) = 0x447687;\n                    fcn.00446860();\n                    return;\n                }\n                *(*0x20 + -0x1b8) = 0x447725;\n                fcn.00433580();\n            }\n            unaff_RBX = 0x27;\n            *(*0x20 + -0x1b8) = 0x447736;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x447746;\n        fcn.0045bdc0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2174
    },
    "004483a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004483a0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t *arg3;\n    int64_t **in_RAX;\n    int64_t *arg1;\n    int64_t **arg2;\n    int64_t **unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (unaff_RBX == NULL) {\n        arg1 = 0x448380;\n    }\n    else {\n        arg1 = *unaff_RBX;\n    }\n    arg2 = *in_RAX + -1;\n    arg3 = in_RAX[1];\n    *arg2 = arg3;\n    *in_RAX = arg2;\n    in_RAX[1] = arg1;\n    if (*0x5985b0 == 0) {\n        in_RAX[3] = unaff_RBX;\n    }\n    else {\n        fcn.0045e0c0(arg1, arg2, arg3, arg4);\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "00448420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00448420(void)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 0) {\n                if (((*(in_RAX + 0x12) >> 0xc & 1) != 0) ||\n                   (((in_RAX == *(unaff_R14[6] + 0x90) && (unaff_R14 != *(unaff_R14[6] + 0x90))) &&\n                    (*(in_RAX + 0x12) == 2)))) {\n                    if (in_RAX[0xe] == 0) {\n                        if (*(in_RAX + 0xb4) == '\\0') {\n                            bVar5 = *(in_RAX + 0xb9) == '\\0';\n                        }\n                        else {\n                            bVar5 = false;\n                        }\n                    }\n                    else {\n                        bVar5 = false;\n                    }\n                    if (bVar5) {\n                        if ((*(unaff_R14[6] + 0x90) != in_RAX) || (*(in_RAX[6] + 0x2b0) == 0)) {\n                            if (0 < *0x598814) {\n                                return;\n                            }\n                            *(*0x20 + 8) = in_RAX;\n                            iVar2 = in_RAX[0x27];\n                            *(*0x20 + -0x20) = 0x4484ec;\n                            iVar2 = fcn.0044bc60(iVar2);\n                            if ((iVar2 != 0) && (*(iVar2 + 0x28) == '\\x06')) {\n                                return;\n                            }\n                            piVar1 = *(*0x20 + 8);\n                            uVar3 = piVar1[1] - *piVar1;\n                            if (uVar3 >> 1 < 0x2000) {\n                                return;\n                            }\n                            if (uVar3 >> 2 <= (piVar1[1] - piVar1[7]) + 800U) {\n                                return;\n                            }\n                            *(*0x20 + -0x20) = 0x448554;\n                            fcn.00447380();\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x448585;\n                        fcn.00433580();\n                    }\n                    *(*0x20 + -0x20) = 0x448596;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x20) = 0x4485a7;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x20) = 0x4485b8;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4485c5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 804
    },
    "00448780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00448780(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    iVar5 = *0x5455b8;\n    iVar4 = *0x5455b0;\n    if (*0x598840 == 0) {\n        return;\n    }\n    uVar8 = 0;\n    uVar7 = 0;\n    for (iVar6 = 0; iVar6 < iVar5; iVar6 = iVar6 + 1) {\n        iVar1 = *(iVar4 + iVar6 * 8);\n        iVar2 = *(iVar1 + 0x22b0);\n        iVar3 = *(iVar1 + 0x22b8);\n        *(iVar1 + 0x22b0) = in_XMM15_Da;\n        *(iVar1 + 0x22b4) = in_XMM15_Db;\n        *(iVar1 + 0x22b8) = in_XMM15_Dc;\n        *(iVar1 + 0x22bc) = in_XMM15_Dd;\n        uVar7 = uVar7 + iVar2;\n        uVar8 = uVar8 + iVar3;\n    }\n    if (uVar8 != 0) {\n        uVar8 = uVar7 / uVar8 + 0x13a0;\n        if (*0x52d398 < uVar8) {\n            uVar8 = *0x52d398;\n        }\n        if (uVar8 < 0x2000) {\n            uVar8 = 0x2000;\n        }\n        uVar7 = 0;\n        while (*0x52d268 = 1 << (uVar7 & 0x1f) & -(uVar7 < 0x20),  *0x52d268 < uVar8) {\n            uVar7 = uVar7 + 1;\n        }\n        return;\n    }\n    *0x52d268 = 0x2000;\n    return;\n}\n",
        "token_count": 513
    },
    "00448b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00448b80(uchar param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uchar auVar4 [16];\n    int32_t iVar5;\n    uint32_t **in_RAX;\n    int64_t iVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int32_t iVar9;\n    uint64_t *puVar10;\n    int64_t iVar11;\n    ulong unaff_RBX;\n    uint64_t uVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    int32_t *piVar14;\n    int64_t unaff_R14;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX[3] == NULL) {\n                return 0;\n            }\n            *(*0x20 + -0x68) = in_RAX[3];\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            puVar3 = *in_RAX;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x20) = in_RAX[1];\n            uVar12 = *puVar3;\n            *(*0x20 + -0xa8) = 0x448be9;\n            iVar6 = fcn.0044b9e0();\n            iVar8 = *(*0x20 + -0x68);\n            if (iVar6 == iVar8) {\n                iVar5 = -1;\n            }\n            else {\n                *(*0x20 + -0x68) = iVar8 + -1;\n                uVar12 = *(*0x20 + -0x20);\n                *(*0x20 + -0xa8) = 0x448c25;\n                iVar5 = fcn.0044ca40(1);\n                iVar8 = *(*0x20 + -0x68);\n            }\n            *(*0x20 + -0x68) = iVar8;\n            if (iVar5 == -1) {\n                iVar5 = 0;\n            }\n            *(*0x20 + -0x74) = iVar5;\n            iVar8 = *(*0x20 + 8);\n            iVar6 = *(iVar8 + 0x38) - *(iVar8 + 0x28);\n            if (iVar6 == 0) {\n                iVar9 = 0;\n                iVar6 = 0;\n                goto code_r0x00448d0e;\n            }\n            iVar11 = *(*0x20 + -0x18);\n            if (*(iVar11 + 0x2b) < 2) {\n                uVar12 = *(*0x20 + -0x20);\n                piVar14 = NULL;\n            }\n            else {\n                uVar2 = *(iVar11 + *(iVar11 + 0x1c) * 4 + 0x30);\n                uVar12 = *(*0x20 + -0x20);\n                piVar14 = uVar2 + *(uVar12 + 0x140) & (uVar2 == 0xffffffff) - 1;\n            }\n            *(*0x20 + -0x60) = iVar6;\n            if ((piVar14 != NULL) && (iVar1 = *piVar14,  0 < iVar1)) {\n                iVar9 = piVar14[1];\n                if (iVar9 < 1) {\n                    iVar9 = 0;\n                    iVar6 = 0;\ncode_r0x00448d0e:\n                    *(*0x20 + -0x28) = iVar6;\n                    *(*0x20 + -0x6c) = iVar9;\n                    *(*0x20 + -0xa8) = 0x448d1f;\n                    iVar5 = fcn.004488a0();\n                    if (iVar5 < 1) {\n                        iVar6 = *(*0x20 + -0x18);\n                        iVar11 = *(*0x20 + -0x20);\ncode_r0x00448e0e:\n                        if (iVar8 != '\\0') {\ncode_r0x00448e96:\n                            return *(*0x20 + -0x6c);\n                        }\n                        if (*(iVar6 + 0x2b) < 3) {\n                            puVar10 = NULL;\n                        }\n                        else {\n                            uVar2 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x34);\n                            iVar11 = *(iVar11 + 0x140);\n                            puVar10 = uVar2 + iVar11 & (uVar2 == 0xffffffff) - 1;\n                        }\n                        if (puVar10 == NULL) goto code_r0x00448e96;\n                        uVar12 = *puVar10;\n                        if (-1 < uVar12) {\n                            *(*0x20 + -0x40) = puVar10;\n                            auVar4 = ZEXT816(0x10) * ZEXT816(uVar12);\n                            if ((SUB168(auVar4 >> 0x40, 0) == 0) &&\n                               (iVar11 = *(*0x20 + -0x40) + 8,  SUB168(auVar4, 0) <= -iVar11)) goto code_r0x00448e96;\n                            *(*0x20 + -0xa8) = 0x448ee5;\n                            fcn.00457560();\n                        }\n                        *(*0x20 + -0xa8) = 0x448eea;\n                        fcn.00457560();\ncode_r0x00448eea:\n                        *(*0x20 + -0xa8) = 0x448ef5;\n                        uVar7 = fcn.0044c400();\n                        *(*0x20 + -0x28) = uVar7;\n                        *(*0x20 + -0x48) = iVar11;\n                        *(*0x20 + -0x50) = **(*0x20 + -0x38);\n                        *(*0x20 + -0xa8) = 0x448f11;\n                        fcn.00434ec0();\n                        *(*0x20 + -0xa8) = 0x448f25;\n                        fcn.004357c0();\n                        *(*0x20 + -0xa8) = 0x448f31;\n                        fcn.004355c0(*(*0x20 + -0x74));\n                        *(*0x20 + -0xa8) = 0x448f45;\n                        fcn.004357c0();\n                        *(*0x20 + -0xa8) = 0x448f4f;\n                        fcn.004355c0();\n                        *(*0x20 + -0xa8) = 0x448f65;\n                        fcn.004357c0();\n                        *(*0x20 + -0xa8) = 0x448f74;\n                        fcn.004357c0();\n                        *(*0x20 + -0xa8) = 0x448f85;\n                        fcn.004357c0();\n                        *(*0x20 + -0xa8) = 0x448f8f;\n                        fcn.00435620();\n                        *(*0x20 + -0xa8) = 0x448fa5;\n                        fcn.004357c0();\n                        *(*0x20 + -0xa8) = 0x448faa;\n                        fcn.00434f40();\n                        *(*0x20 + -0xa8) = 0x448fbb;\n                        fcn.00433580();\n                    }\n                    else {\n                        if (uVar12 != 0) {\n                            iVar6 = *(*0x20 + -0x18);\n                            iVar11 = *(*0x20 + -0x20);\n                            goto code_r0x00448e0e;\n                        }\n                        iVar6 = *(*0x20 + -0x18);\n                        if (*(iVar6 + 0x2b) == '\\0') {\n                            iVar11 = *(*0x20 + -0x20);\n                            piVar14 = NULL;\n                        }\n                        else {\n                            uVar2 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x2c);\n                            iVar11 = *(*0x20 + -0x20);\n                            piVar14 = uVar2 + *(iVar11 + 0x140) & (uVar2 == 0xffffffff) - 1;\n                        }\n                        *(*0x20 + -0x70) = iVar5;\n                        if ((piVar14 != NULL) && (iVar5 = *piVar14,  0 < iVar5)) {\n                            *(*0x20 + -0x38) = piVar14;\n                            if ((-1 < *(*0x20 + -0x74)) && (*(*0x20 + -0x74) < iVar5)) goto code_r0x00448e0e;\n                            goto code_r0x00448eea;\n                        }\n                    }\n                    *(*0x20 + -0xa8) = 0x448fc6;\n                    uVar7 = fcn.0044c400();\n                    *(*0x20 + -0x28) = uVar7;\n                    *(*0x20 + -0x48) = iVar11;\n                    *(*0x20 + -0x58) = *(*(*0x20 + 8) + 0x40);\n                    *(*0x20 + -0xa8) = 0x448fe6;\n                    fcn.00434ec0();\n                    *(*0x20 + -0xa8) = 0x448ff7;\n                    fcn.004357c0();\n                    *(*0x20 + -0xa8) = 0x449006;\n                    fcn.004357c0();\n                    *(*0x20 + -0xa8) = 0x449017;\n                    fcn.004357c0();\n                    *(*0x20 + -0xa8) = 0x449025;\n                    fcn.00435620();\n                    *(*0x20 + -0xa8) = 0x449036;\n                    fcn.004357c0();\n                    *(*0x20 + -0xa8) = 0x449045;\n                    fcn.00435620(*(*0x20 + -0x70) << 3);\n                    *(*0x20 + -0xa8) = 0x44904a;\n                    fcn.00435120();\n                    *(*0x20 + -0xa8) = 0x44904f;\n                    fcn.00434f40();\n                    uVar12 = 0x10;\n                    *(*0x20 + -0xa8) = 0x449065;\n                    fcn.00433580();\n                }\n                else {\n                    *(*0x20 + -0x30) = piVar14;\n                    if ((-1 < iVar5) && (iVar5 < iVar1)) {\n                        iVar6 = piVar14 + (iVar9 + 7 >> 3) * iVar5 + 8;\n                        goto code_r0x00448d0e;\n                    }\n                }\n                *(*0x20 + -0xa8) = 0x44906d;\n                uVar7 = fcn.0044c400();\n                *(*0x20 + -0x28) = uVar7;\n                *(*0x20 + -0x48) = uVar12;\n                *(*0x20 + -0x50) = **(*0x20 + -0x30);\n                *(*0x20 + -0xa8) = 0x449089;\n                fcn.00434ec0();\n                *(*0x20 + -0xa8) = 0x44909a;\n                fcn.004357c0();\n                *(*0x20 + -0xa8) = 0x4490a6;\n                fcn.004355c0(*(*0x20 + -0x74));\n                *(*0x20 + -0xa8) = 0x4490b7;\n                fcn.004357c0();\n                *(*0x20 + -0xa8) = 0x4490c5;\n                fcn.004355c0();\n                *(*0x20 + -0xa8) = 0x4490d6;\n                fcn.004357c0();\n                *(*0x20 + -0xa8) = 0x4490e5;\n                fcn.004357c0();\n                *(*0x20 + -0xa8) = 0x4490f6;\n                fcn.004357c0();\n                *(*0x20 + -0xa8) = 0x449105;\n                fcn.00435620();\n                *(*0x20 + -0xa8) = 0x449116;\n                fcn.004357c0();\n                *(*0x20 + -0xa8) = 0x44911b;\n                fcn.00434f40();\n                uVar12 = 0x10;\n                *(*0x20 + -0xa8) = 0x44912c;\n                fcn.00433580();\n            }\n            *(*0x20 + -0xa8) = 0x449134;\n            uVar7 = fcn.0044c400();\n            *(*0x20 + -0x28) = uVar7;\n            *(*0x20 + -0x48) = uVar12;\n            *(*0x20 + -0x58) = *(*(*0x20 + 8) + 0x38);\n            *(*0x20 + -0xa8) = 0x449154;\n            fcn.00434ec0();\n            *(*0x20 + -0xa8) = 0x449165;\n            fcn.004357c0();\n            *(*0x20 + -0xa8) = 0x449174;\n            fcn.004357c0();\n            *(*0x20 + -0xa8) = 0x449185;\n            fcn.004357c0();\n            param_1 = *(*0x20 + -0x60);\n            *(*0x20 + -0xa8) = 0x449197;\n            fcn.00435620();\n            *(*0x20 + -0xa8) = 0x4491a8;\n            fcn.004357c0();\n            *(*0x20 + -0xa8) = 0x4491b2;\n            fcn.00435620();\n            *(*0x20 + -0xa8) = 0x4491b7;\n            fcn.00435120();\n            *(*0x20 + -0xa8) = 0x4491bc;\n            fcn.00434f40();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0xa8) = 0x4491cd;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        puVar13[0x18] = param_1;\n        *(puVar13 + -8) = 0x4491e5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        param_1 = puVar13[0x18];\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 3503
    },
    "00449340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00449340(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t unaff_RDI;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t *unaff_R14;\n    bool bVar11;\n    \n    do {\n        puVar5 = *0x20;\n        if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n            puVar5 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            unaff_RDI = 0;\n            uVar6 = 0;\n            iVar8 = 0;\n            iVar9 = unaff_RBX;\n            for (uVar7 = 0; uVar7 < arg1; uVar7 = uVar7 + 1) {\n                if (*(iVar9 + 8) != 0) {\n                    iVar1 = iVar8 + *(iVar9 + 8);\n                    if (iVar1 < iVar8) goto code_r0x0044952d;\n                    unaff_RDI = unaff_RDI + 1;\n                    uVar6 = uVar7;\n                    iVar8 = iVar1;\n                }\n                iVar9 = iVar9 + 0x10;\n            }\n            if (unaff_RDI == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            uVar10 = unaff_RDI;\n            if (unaff_RDI == 1) {\n                if (in_RAX != 0) {\ncode_r0x00449400:\n                    if (uVar6 < arg1) {\n                        return *(unaff_RBX + uVar6 * 0x10);\n                    }\n                    goto code_r0x0044951d;\n                }\n                if (uVar6 < arg1) {\n                    unaff_RDI = *(unaff_RBX + uVar6 * 0x10);\n                    if ((*unaff_R14 < unaff_RDI || *unaff_R14 == unaff_RDI) &&\n                       (uVar7 = uVar6,  uVar10 = unaff_RDI,  unaff_RDI < unaff_R14[1])) goto code_r0x00449421;\n                    goto code_r0x00449400;\n                }\n            }\n            else {\ncode_r0x00449421:\n                *(*0x20 + -0x70) = 0x449429;\n                uVar2 = fcn.00449a40();\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x48) = iVar8;\n                puVar4 = *(*0x20 + -0x10);\n                iVar9 = *(*0x20 + 0x18);\n                iVar8 = 0;\n                while( true ) {\n                    if (iVar9 <= iVar8) {\n                        return uVar2;\n                    }\n                    uVar6 = puVar4[1];\n                    unaff_RDI = uVar10;\n                    if (uVar6 < uVar10) {\n                        unaff_RDI = uVar6;\n                    }\n                    if (arg1 == *puVar4) {\n                        bVar11 = uVar10 < uVar6;\n                        uVar3 = arg1;\n                        arg1 = uVar10;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = iVar8;\n                        *(*0x20 + -0x18) = puVar4;\n                        *(*0x20 + -0x20) = arg1;\n                        *(*0x20 + -0x40) = uVar7;\n                        *(*0x20 + -0x38) = uVar10;\n                        *(*0x20 + -0x50) = uVar6;\n                        *(*0x20 + -0x70) = 0x4494c6;\n                        fcn.0045eda0(unaff_RDI);\n                        arg1 = *(*0x20 + -0x38);\n                        uVar6 = *(*0x20 + -0x50);\n                        bVar11 = arg1 < uVar6;\n                        puVar4 = *(*0x20 + -0x18);\n                        uVar7 = *(*0x20 + -0x40);\n                        iVar9 = *(*0x20 + 0x18);\n                        iVar8 = *(*0x20 + -0x30);\n                        uVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x20);\n                    }\n                    if (bVar11) break;\n                    puVar4 = puVar4 + 2;\n                    iVar8 = iVar8 + 1;\n                    uVar7 = uVar7 - uVar6;\n                    uVar10 = arg1 - uVar6;\n                    arg1 = uVar3 + (uVar6 & -uVar7 >> 0x3f);\n                }\n                *(*0x20 + -0x70) = 0x44951d;\n                fcn.0045e4e0(arg1);\ncode_r0x0044951d:\n                *(*0x20 + -0x70) = 0x449525;\n                fcn.0045e420(arg1);\n            }\n            *(*0x20 + -0x70) = 0x44952d;\n            fcn.0045e420(arg1);\ncode_r0x0044952d:\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x70) = 0x44953e;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x449558;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1532
    },
    "00449920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00449920(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint8_t *unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return 0;\n            }\n            if (arg1 == 1) {\n                arg1 = *unaff_RBX * 8 + 0x5389e0;\n                if (arg1 != 0) {\n                    return arg1;\n                }\n            }\n            else {\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                if ((in_RAX == 0) || (0x20 < arg1)) {\n                    *(*0x20 + -0x30) = 0x4499a5;\n                    in_RAX = fcn.0040bd20(0);\n                    arg1 = *(*0x20 + 0x18);\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x30) = 0x4499b9;\n                fcn.0045eda0(arg1);\n                unaff_RBX = *(*0x20 + 0x18);\n                if (-1 < unaff_RBX) {\n                    arg1 = *(*0x20 + -0x10);\n                    if (unaff_RBX <= -arg1) {\n                        return arg1;\n                    }\n                    if (arg1 != 0) {\n                        *(*0x20 + -0x30) = 0x4499fa;\n                        fcn.004574e0();\n                    }\n                    *(*0x20 + -0x30) = 0x4499ff;\n                    fcn.00457520();\n                }\n                *(*0x20 + -0x30) = 0x449a05;\n                fcn.004574e0();\n            }\n            *(*0x20 + -0x30) = 0x449a0a;\n            in_RAX = fcn.004574e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x449a1f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 702
    },
    "0044a060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.0044a060(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0;\n            }\n            cVar1 = *(unaff_RBX + -1 + in_RAX);\n            if (cVar1 - 0x30U < 10) {\n                *(*0x20 + -0x28) = 0x44a17d;\n                uVar4 = fcn.00449f80();\n                if ((unaff_RBX != '\\0') && (-1 < uVar4)) {\n                    return uVar4;\n                }\n                return 0;\n            }\n            if ((cVar1 != 'B') || (unaff_RBX < 2)) {\n                return 0;\n            }\n            cVar1 = *(unaff_RBX + -2 + in_RAX);\n            if (cVar1 - 0x30U < 10) {\n                *(*0x20 + -0x28) = 0x44a149;\n                uVar4 = fcn.00449f80();\n                if ((unaff_RBX != '\\x01') && (-1 < uVar4)) {\n                    return uVar4;\n                }\n                return 0;\n            }\n            if (cVar1 != 'i') {\n                return 0;\n            }\n            if (unaff_RBX < 4) {\n                return 0;\n            }\n            uVar2 = *(unaff_RBX + -3 + in_RAX);\n            if (uVar2 < 0x4c) {\n                if (uVar2 == 0x47) {\n                    iVar5 = 3;\n                }\n                else {\n                    if (uVar2 != 0x4b) {\n                        return 0;\n                    }\n                    iVar5 = 1;\n                }\n            }\n            else if (uVar2 == 0x4d) {\n                iVar5 = 2;\n            }\n            else {\n                if (uVar2 != 0x54) {\n                    return 0;\n                }\n                iVar5 = 4;\n            }\n            iVar8 = 1;\n            for (iVar6 = 0; iVar6 < iVar5; iVar6 = iVar6 + 1) {\n                iVar8 = iVar8 << 10;\n            }\n            *(*0x20 + -0x10) = iVar8;\n            unaff_RBX = unaff_RBX + -3;\n            *(*0x20 + -0x28) = 0x44a1c9;\n            uVar4 = fcn.00449f80();\n            if ((unaff_RBX == '\\0') || (uVar4 < 0)) {\n                return 0;\n            }\n            uVar3 = *(*0x20 + -0x10);\n            if (uVar3 != 0) {\n                if (SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(uVar3), 0) < uVar4) {\n                    return 0;\n                }\n                if (uVar4 * uVar3 < 0x8000000000000000) {\n                    return uVar4 * uVar3;\n                }\n                return 0;\n            }\n            *(*0x20 + -0x28) = 0x44a247;\n            in_RAX = fcn.00431c00();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + -8) = 0x44a257;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1039
    },
    "0044acc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.0044acc0(void)\n\n{\n    ulong in_RAX;\n    uint64_t arg1;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack144;\n    ulong uStack136;\n    uchar auStack128 [16];\n    uchar auStack112 [16];\n    uchar auStack96 [16];\n    ulong uStack80;\n    ulong uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    ulong uStack32;\n    \n    while (auStack128 < *(unaff_R14 + 0x10) || auStack128 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iStack144 = SUB168(in_XMM15, 0);\n    uStack136 = SUB168(in_XMM15 >> 0x40, 0);\n    auStack128 = in_XMM15;\n    auStack112 = in_XMM15;\n    fcn.004553e0();\n    if ((iStack144 == 0) && (auStack128._0_8_ == 0)) {\n        return 0;\n    }\n    arg1 = 0;\n    iVar2 = 0;\n    uVar3 = 0;\n    while( true ) {\n        uVar1 = fcn.0045a120();\n        fcn.0045a120(iStack144);\n        auStack96._8_8_ = SUB168(in_XMM15 >> 0x40, 0);\n        uStack64 = fcn.0045e6d0();\n        auStack96 = CONCAT88(auStack96._8_8_, in_RAX);\n        uStack72 = auStack128._0_8_;\n        uStack56 = auStack128._0_8_;\n        uStack48 = uStack136;\n        uStack32 = auStack128._8_8_;\n        uVar3 = uVar3 + 1;\n        uStack80 = uVar1;\n        if (arg1 < uVar3) {\n            iVar2 = fcn.00445800(arg1);\n        }\n        if (*0x5985b0 == 0) {\n            *(uVar3 * 0x58 + -0x58 + iVar2) = auStack96._0_8_;\n            fcn.0045ea3a(in_RAX, arg1, uVar3 * 0x58 + -0x50);\n        }\n        else {\n            fcn.004112e0(auStack96);\n        }\n        if (auStack112._0_8_ == 0) break;\n        fcn.004553e0();\n    }\n    fcn.004553e0();\n    return iVar2;\n}\n",
        "token_count": 637
    },
    "0044af40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0044af40(ulong param_1, ulong param_2, int64_t *param_3, ulong param_4)\n\n{\n    int64_t *piVar1;\n    uint uVar2;\n    int64_t **ppiVar3;\n    int64_t *arg2;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x70) = 0x44af65;\n            ppiVar3 = fcn.0040c6e0();\n            *(*0x20 + -0x18) = ppiVar3;\n            for (iVar5 = 0x532f00; iVar5 != 0; iVar5 = *(iVar5 + 0x230)) {\n                if (*(iVar5 + 0x228) == '\\0') {\n                    *(*0x20 + -0x10) = iVar5;\n                    piVar1 = ppiVar3[1];\n                    piVar8 = piVar1 + 1;\n                    piVar7 = *ppiVar3;\n                    piVar6 = ppiVar3[2];\n                    arg2 = piVar7;\n                    param_3 = piVar6;\n                    if (piVar6 < piVar8) {\n                        *(*0x20 + -0x70) = 0x44afc5;\n                        arg2 = fcn.00445800(piVar6);\n                        ppiVar3 = *(*0x20 + -0x18);\n                        ppiVar3[2] = piVar6;\n                        if (*0x5985b0 == 0) {\n                            *ppiVar3 = arg2;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x44afe5;\n                            arg2 = fcn.0045df80(piVar6, piVar7, param_3, param_4);\n                        }\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    ppiVar3[1] = piVar8;\n                    if (*0x5985b0 == 0) {\n                        arg2[piVar1] = iVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x70) = 0x44b011;\n                        ppiVar3 = fcn.0045e080(iVar5, arg2, param_3, param_4);\n                    }\n                    if ((*(iVar5 + 0x200) == 0) && (*(iVar5 + 0x208) == 0)) {\n                        iVar9 = *(iVar5 + 0xd8) - *(iVar5 + 0xd0);\n                        *(*0x20 + -0x28) = iVar9;\n                        *(*0x20 + -0x70) = 0x44b04b;\n                        uVar2 = fcn.00413000();\n                        iVar5 = *(*0x20 + -0x10);\n                        *(iVar5 + 0x200) = uVar2;\n                        if (*0x5985b0 == 0) {\n                            *(iVar5 + 0x208) = iVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x44b07a;\n                            iVar5 = fcn.0045e0c0(iVar5 + 0x208, arg2, param_3, param_4);\n                        }\n                        iVar10 = *(iVar5 + 0xe8) - *(iVar5 + 0xe0);\n                        *(*0x20 + -0x20) = iVar10;\n                        *(*0x20 + -0x70) = 0x44b09c;\n                        uVar2 = fcn.00413000();\n                        iVar5 = *(*0x20 + -0x10);\n                        *(iVar5 + 0x210) = uVar2;\n                        iVar9 = *(*0x20 + -0x20) + *(*0x20 + -0x28);\n                        if (*0x5985b0 == 0) {\n                            *(iVar5 + 0x218) = iVar10;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x44b0d8;\n                            iVar5 = fcn.0045e0c0(iVar9, iVar5 + 0x218, param_3, param_4);\n                        }\n                        LOCK();\n                        *0x598d18 = *0x598d18 + iVar9;\n                        ppiVar3 = *(*0x20 + -0x18);\n                    }\n                }\n            }\n            piVar1 = ppiVar3[1];\n            piVar7 = NULL;\n            while( true ) {\n                if (piVar1 <= piVar7) goto code_r0x0044b15c;\n                iVar5 = (*ppiVar3)[piVar7];\n                if (*(iVar5 + 0x1f8) != '\\0') break;\n                piVar7 = piVar7 + 1;\n            }\n            if (*0x5985b0 == 0) {\n                **ppiVar3 = iVar5;\n            }\n            else {\n                *(*0x20 + -0x70) = 0x44b127;\n                ppiVar3 = fcn.0045e0e0(piVar7, piVar1, param_3, param_4);\n            }\n            piVar1 = *ppiVar3;\n            piVar6 = ppiVar3[1];\n            if (piVar7 < piVar6) {\n                if (*0x5985b0 == 0) {\n                    piVar1[piVar7] = 0x532f00;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x44b15b;\n                    ppiVar3 = fcn.0045e080(0x532f00, piVar1, param_3, param_4);\n                }\ncode_r0x0044b15c:\n                if (*0x5985b0 != '\\0') {\n                    *(*0x20 + -0x70) = 0x44b174;\n                    fcn.004037e0();\n                    ppiVar3 = *(*0x20 + -0x18);\n                }\n                uVar4 = *0x544c30;\n                *0x544c30 = ppiVar3;\n                return uVar4;\n            }\n            *(*0x20 + -0x70) = 0x44b198;\n            fcn.0045e420(piVar6);\n        }\n        *(puVar11 + -8) = 0x44b19e;\n        fcn.0045bdc0();\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1627
    },
    "0044b1c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044b1c0(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    char cVar6;\n    uint32_t **in_RAX;\n    uint32_t **ppuVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint32_t *puVar10;\n    ulong uVar11;\n    ulong *arg2;\n    uint32_t *arg1;\n    uint32_t *puVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    uint32_t *arg1_00;\n    uint32_t *puVar14;\n    int64_t unaff_R14;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar10 = *in_RAX;\n            uVar2 = *puVar10;\n            *(*0x20 + -0xdc) = uVar2;\n            if (((((uVar2 == 0xfffffff1) && (*(puVar10 + 1) == '\\0')) && (*(puVar10 + 5) == '\\0')) &&\n                ((*(puVar10 + 6) == '\\x01' && (*(puVar10 + 7) == '\\b')))) &&\n               (puVar14 = *(puVar10 + 6),  in_RAX[0x16] == puVar14)) {\n                *(*0x20 + 8) = in_RAX;\n                arg1 = in_RAX[0x11];\n                puVar10 = in_RAX[0x10];\n                arg1_00 = arg1 + -1;\n                puVar1 = NULL;\n                do {\n                    puVar12 = puVar1;\n                    if (arg1_00 <= puVar12) {\n                        if (arg1 == NULL) goto code_r0x0044b710;\n                        *(*0x20 + -0xd8) = arg1_00;\n                        *(*0x20 + -0x60) = arg1;\n                        puVar12 = *puVar10;\n                        *(*0x20 + -0x100) = 0x44b466;\n                        uVar11 = fcn.0044b9e0();\n                        puVar10 = *(*(*0x20 + 8) + 0x88);\n                        arg1_00 = *(*(*0x20 + 8) + 0x80);\n                        puVar14 = *(*0x20 + -0xd8);\n                        if (puVar10 <= puVar14) goto code_r0x0044b705;\n                        *(*0x20 + -0xd0) = uVar11;\n                        *(*0x20 + -0x100) = 0x44b4a5;\n                        iVar8 = fcn.0044b9e0();\n                        *(*0x20 + -200) = iVar8;\n                        iVar9 = *(*0x20 + 8);\n                        puVar10 = *(iVar9 + 0xa0);\n                        *(*0x20 + -0x80) = puVar10;\n                        arg1_00 = *(*0x20 + -0xd0);\n                        if ((arg1_00 != puVar10) || (*(iVar9 + 0xa8) != iVar8)) goto code_r0x0044b656;\n                        arg2 = *(iVar9 + 0x1e0);\n                        arg1_00 = *(iVar9 + 0x1e8);\n                        *(*0x20 + -0x60) = arg1_00;\n                        iVar9 = 0;\n                        goto code_r0x0044b51a;\n                    }\n                    puVar14 = puVar10[puVar12 * 2];\n                    puVar1 = puVar12 + 1;\n                    if (arg1 <= puVar1) goto code_r0x0044b84d;\n                } while (puVar10[puVar12 * 2] <= puVar10[puVar12 * 2 + 2]);\n                arg1 = in_RAX[0xe];\n                puVar14 = in_RAX[0xd];\n                uVar2 = puVar10[puVar12 * 2 + 1];\n                if (uVar2 < arg1) {\n                    puVar10 = puVar10[puVar12 * 2 + 3];\n                    if (puVar10 < arg1) {\n                        *(*0x20 + -0xb8) = puVar12;\n                        *(*0x20 + -0x60) = puVar1;\n                        if (puVar1 < arg1_00) {\n                            *(*0x20 + -0x38) = uVar2 + puVar14;\n                            *(*0x20 + -0x100) = 0x44b2e6;\n                            uVar11 = fcn.0044c400(puVar10 + puVar14);\n                            ppuVar7 = *(*0x20 + 8);\n                        }\n                        else {\n                            uVar11 = 0x4a80ad;\n                            ppuVar7 = in_RAX;\n                            in_RAX = 0x3;\n                        }\n                        *(*0x20 + -0x58) = uVar11;\n                        *(*0x20 + -0xb0) = in_RAX;\n                        *(*0x20 + -0x100) = 0x44b314;\n                        uVar11 = fcn.0044c400();\n                        iVar9 = *(*0x20 + 8);\n                        arg1 = *(iVar9 + 0x88);\n                        iVar8 = *(iVar9 + 0x80);\n                        puVar10 = *(*0x20 + -0xb8);\n                        if (puVar10 < arg1) {\n                            if (*(*0x20 + -0x60) < arg1) {\n                                *(*0x20 + -0x68) = *(iVar8 + puVar10 * 8);\n                                *(*0x20 + -0x60) = ppuVar7;\n                                *(*0x20 + -0x40) = uVar11;\n                                *(*0x20 + -0x70) = *(iVar8 + 8 + puVar10 * 8);\n                                *(*0x20 + -0x48) = *(iVar9 + 0x1a8);\n                                *(*0x20 + -0x78) = *(iVar9 + 0x1b0);\n                                *(*0x20 + -0x100) = 0x44b394;\n                                fcn.00434ec0();\n                                *(*0x20 + -0x100) = 0x44b3a5;\n                                fcn.004357c0();\n                                *(*0x20 + -0x100) = 0x44b3b2;\n                                fcn.00435620();\n                                *(*0x20 + -0x100) = 0x44b3b7;\n                                fcn.004350e0();\n                                *(*0x20 + -0x100) = 0x44b3cc;\n                                fcn.004357c0();\n                                *(*0x20 + -0x100) = 0x44b3dd;\n                                fcn.004357c0();\n                                *(*0x20 + -0x100) = 0x44b3ea;\n                                fcn.00435620();\n                                *(*0x20 + -0x100) = 0x44b3ef;\n                                fcn.004350e0();\n                                *(*0x20 + -0x100) = 0x44b405;\n                                fcn.004357c0();\n                                *(*0x20 + -0x100) = 0x44b416;\n                                fcn.004357c0();\n                                *(*0x20 + -0x100) = 0x44b42b;\n                                fcn.004357c0();\n                                *(*0x20 + -0x100) = 0x44b430;\n                                fcn.00435120();\n                                *(*0x20 + -0x100) = 0x44b435;\n                                fcn.00434f40();\n                                iVar9 = *(*0x20 + -0xb8);\n                                puVar12 = *(*0x20 + 8);\n                                arg1 = NULL;\n                                while (arg1 <= iVar9) {\n                                    arg1_00 = *(puVar12 + 0x1c);\n                                    puVar10 = *(puVar12 + 0x22);\n                                    if (puVar10 <= arg1) {\ncode_r0x0044b806:\n                                        *(*0x20 + -0x100) = 0x44b811;\n                                        fcn.0045e420(puVar10);\n                                        break;\n                                    }\n                                    puVar10 = *(*(puVar12 + 0x20) + 4 + arg1 * 8);\n                                    if (arg1_00 <= puVar10) {\ncode_r0x0044b7fb:\n                                        *(*0x20 + -0x100) = 0x44b806;\n                                        fcn.0045e420(arg1_00);\n                                        goto code_r0x0044b806;\n                                    }\n                                    *(*0x20 + -0xc0) = arg1;\n                                    *(*0x20 + -0x100) = 0x44b7cc;\n                                    uVar11 = fcn.0044c400();\n                                    arg1 = *(*(*0x20 + 8) + 0x88);\n                                    arg1_00 = *(*(*0x20 + 8) + 0x80);\n                                    puVar14 = *(*0x20 + -0xc0);\n                                    if (arg1 <= puVar14) {\n                                        *(*0x20 + -0x100) = 0x44b7fb;\n                                        fcn.0045e420(arg1);\n                                        goto code_r0x0044b7fb;\n                                    }\ncode_r0x0044b71a:\n                                    *(*0x20 + -0x60) = puVar12;\n                                    *(*0x20 + -0x40) = uVar11;\n                                    *(*0x20 + -0x68) = arg1_00[puVar14 * 2];\n                                    *(*0x20 + -0x100) = 0x44b73a;\n                                    fcn.00434ec0();\n                                    *(*0x20 + -0x100) = 0x44b74b;\n                                    fcn.004357c0();\n                                    *(*0x20 + -0x100) = 0x44b758;\n                                    fcn.00435620();\n                                    *(*0x20 + -0x100) = 0x44b75d;\n                                    fcn.004350e0();\n                                    *(*0x20 + -0x100) = 0x44b772;\n                                    fcn.004357c0();\n                                    *(*0x20 + -0x100) = 0x44b777;\n                                    fcn.00435120();\n                                    *(*0x20 + -0x100) = 0x44b77c;\n                                    fcn.00434f40();\n                                    iVar9 = *(*0x20 + -0xb8);\n                                    puVar12 = *(*0x20 + 8);\n                                    arg1 = *(*0x20 + -0xc0) + 1;\n                                }\n                                *(*0x20 + -0x100) = 0x44b825;\n                                fcn.00433580();\n                            }\n                            *(*0x20 + -0x100) = 0x44b830;\n                            fcn.0045e420(arg1);\n                        }\n                        *(*0x20 + -0x100) = 0x44b83b;\n                        puVar10 = arg1;\n                        fcn.0045e420(arg1);\n                    }\n                    *(*0x20 + -0x100) = 0x44b845;\n                    fcn.0045e420(arg1);\n                }\n                *(*0x20 + -0x100) = 0x44b84d;\n                fcn.0045e420(arg1);\ncode_r0x0044b84d:\n                *(*0x20 + -0x100) = 0x44b855;\n                in_RAX = fcn.0045e420(arg1);\n            }\n            *(*0x20 + -0x90) = *(puVar10 + 1);\n            *(*0x20 + -0x98) = *(puVar10 + 5);\n            *(*0x20 + -0xa0) = *(puVar10 + 6);\n            *(*0x20 + -0xa8) = *(puVar10 + 7);\n            *(*0x20 + -0x80) = *(puVar10 + 6);\n            *(*0x20 + -0x88) = in_RAX[0x16];\n            *(*0x20 + -0x40) = in_RAX[0x35];\n            *(*0x20 + -0x60) = in_RAX[0x36];\n            *(*0x20 + -0x100) = 0x44b8b1;\n            fcn.00434ec0();\n            *(*0x20 + -0x100) = 0x44b8c5;\n            fcn.004357c0();\n            *(*0x20 + -0x100) = 0x44b8ce;\n            fcn.00435620();\n            *(*0x20 + -0x100) = 0x44b8df;\n            fcn.004357c0();\n            *(*0x20 + -0x100) = 0x44b8e9;\n            fcn.004354c0();\n            *(*0x20 + -0x100) = 0x44b8fa;\n            fcn.004357c0();\n            *(*0x20 + -0x100) = 0x44b905;\n            fcn.004354c0();\n            *(*0x20 + -0x100) = 0x44b916;\n            fcn.004357c0();\n            *(*0x20 + -0x100) = 0x44b925;\n            fcn.004354c0();\n            *(*0x20 + -0x100) = 0x44b936;\n            fcn.004357c0();\n            *(*0x20 + -0x100) = 0x44b945;\n            fcn.004354c0();\n            *(*0x20 + -0x100) = 0x44b956;\n            fcn.004357c0();\n            *(*0x20 + -0x100) = 0x44b965;\n            fcn.00435620();\n            *(*0x20 + -0x100) = 0x44b976;\n            fcn.004357c0();\n            *(*0x20 + -0x100) = 0x44b985;\n            fcn.00435620();\n            *(*0x20 + -0x100) = 0x44b996;\n            fcn.004357c0();\n            *(*0x20 + -0x100) = 0x44b9ab;\n            fcn.004357c0();\n            *(*0x20 + -0x100) = 0x44b9b0;\n            fcn.00435120();\n            *(*0x20 + -0x100) = 0x44b9b5;\n            fcn.00434f40();\n            *(*0x20 + -0x100) = 0x44b9c6;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + -8) = 0x44b9d1;\n        fcn.0045bdc0();\n        in_RAX = *(puVar13 + 8);\n        *0x20 = puVar13;\n    } while( true );\ncode_r0x0044b51a:\n    if (arg1_00 <= iVar9) {\n        return;\n    }\n    *(*0x20 + -0x30) = *arg2;\n    uVar3 = *(arg2 + 0xc);\n    uVar4 = *(arg2 + 2);\n    uVar5 = *(arg2 + 0x14);\n    *(*0x20 + -0x28) = *(arg2 + 1);\n    *(*0x20 + -0x24) = uVar3;\n    *(*0x20 + -0x20) = uVar4;\n    *(*0x20 + -0x1c) = uVar5;\n    uVar3 = *(arg2 + 0x1c);\n    uVar4 = *(arg2 + 4);\n    uVar5 = *(arg2 + 0x24);\n    *(*0x20 + -0x18) = *(arg2 + 3);\n    *(*0x20 + -0x14) = uVar3;\n    *(*0x20 + -0x10) = uVar4;\n    *(*0x20 + -0xc) = uVar5;\n    puVar14 = *(*0x20 + -0x10);\n    if (*(puVar14 + 2) != *(*0x20 + -0x18)) {\ncode_r0x0044b59f:\n        iVar9 = *(*(*0x20 + 8) + 0x1d0);\n        *(*0x20 + -0x40) = iVar9;\n        *(*0x20 + -0x60) = *(*(*0x20 + 8) + 0x1d8);\n        puVar10 = *(*0x20 + -0x30);\n        *(*0x20 + -0x48) = puVar10;\n        *(*0x20 + -0x78) = *(*0x20 + -0x28);\n        *(*0x20 + -0x100) = 0x44b5ea;\n        fcn.00434ec0();\n        *(*0x20 + -0x100) = 0x44b5fb;\n        fcn.004357c0();\n        *(*0x20 + -0x100) = 0x44b610;\n        fcn.004357c0();\n        *(*0x20 + -0x100) = 0x44b625;\n        fcn.004357c0();\n        *(*0x20 + -0x100) = 0x44b63a;\n        fcn.004357c0();\n        *(*0x20 + -0x100) = 0x44b63f;\n        fcn.00435120();\n        *(*0x20 + -0x100) = 0x44b645;\n        fcn.00434f40();\n        *(*0x20 + -0x100) = 0x44b656;\n        fcn.00433580();\ncode_r0x0044b656:\n        *(*0x20 + -0x88) = *(iVar9 + 0xa8);\n        *(*0x20 + -0x100) = 0x44b667;\n        fcn.00434ec0();\n        *(*0x20 + -0x100) = 0x44b678;\n        fcn.004357c0();\n        *(*0x20 + -0x100) = 0x44b685;\n        fcn.00435620();\n        *(*0x20 + -0x100) = 0x44b696;\n        fcn.004357c0();\n        *(*0x20 + -0x100) = 0x44b6a5;\n        fcn.00435620();\n        *(*0x20 + -0x100) = 0x44b6b6;\n        fcn.004357c0();\n        *(*0x20 + -0x100) = 0x44b6c5;\n        fcn.00435620();\n        *(*0x20 + -0x100) = 0x44b6d6;\n        fcn.004357c0();\n        *(*0x20 + -0x100) = 0x44b6e5;\n        fcn.00435620();\n        *(*0x20 + -0x100) = 0x44b6ea;\n        fcn.00435120();\n        *(*0x20 + -0x100) = 0x44b6ef;\n        fcn.00434f40();\n        puVar12 = 0x16;\n        *(*0x20 + -0x100) = 0x44b705;\n        fcn.00433580();\ncode_r0x0044b705:\n        *(*0x20 + -0x100) = 0x44b710;\n        fcn.0045e420(puVar10);\ncode_r0x0044b710:\n        *(*0x20 + -0x100) = 0x44b71a;\n        uVar11 = fcn.0045e420(0);\n        goto code_r0x0044b71a;\n    }\n    *(*0x20 + -0x78) = iVar9;\n    *(*0x20 + -0x50) = arg2;\n    *(*0x20 + -0x100) = 0x44b585;\n    cVar6 = fcn.004025e0(*(*0x20 + -0x18), arg2);\n    if (cVar6 == '\\0') goto code_r0x0044b59f;\n    arg2 = *(*0x20 + -0x50) + 0x28;\n    iVar9 = *(*0x20 + -0x78) + 1;\n    arg1_00 = *(*0x20 + -0x60);\n    goto code_r0x0044b51a;\n}\n",
        "token_count": 4867
    },
    "0044b9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0044b9e0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t *puVar5;\n    int64_t iVar6;\n    \n    uVar3 = unaff_RBX & 0xffffffff;\n    uVar4 = *(in_RAX + 0xb0) + uVar3;\n    iVar1 = *(in_RAX + 0x150);\n    puVar5 = *(in_RAX + 0x148);\n    if (1 < iVar1) {\n        for (iVar6 = 0; iVar6 < iVar1; iVar6 = iVar6 + 1) {\n            if (((*puVar5 <= uVar3) && (uVar3 < puVar5[1])) || ((iVar6 == iVar1 + -1 && (puVar5[1] == uVar3)))) {\n                uVar4 = (puVar5[2] + uVar3) - *puVar5;\n                break;\n            }\n            puVar5 = puVar5 + 3;\n        }\n        if (*(in_RAX + 0xb8) < uVar4) {\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.00435620();\n            fcn.004357c0();\n            fcn.00435620();\n            fcn.004357c0();\n            fcn.00435620();\n            fcn.00435120();\n            fcn.00434f40();\n            fcn.00433580();\n            pcVar2 = swi(3);\n            uVar4 = (*pcVar2)();\n            return uVar4;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 407
    },
    "0044bc60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044bc60(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_RAX;\n    int64_t iVar2;\n    uint32_t *puVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t *arg1;\n    int64_t unaff_RBX;\n    int64_t *piVar6;\n    int64_t *in_R9;\n    \n    for (iVar4 = 0x532f00; iVar4 != 0; iVar4 = *(iVar4 + 0x230)) {\n        if ((*(iVar4 + 0xa0) < in_RAX || *(iVar4 + 0xa0) == in_RAX) &&\n           (in_RAX <= *(iVar4 + 0xa8) && *(iVar4 + 0xa8) != in_RAX)) goto code_r0x0044bca0;\n    }\n    iVar4 = 0;\ncode_r0x0044bca0:\n    if (iVar4 == 0) {\n        return 0;\n    }\n    arg1 = *(iVar4 + 0xb0);\n    iVar2 = in_RAX - arg1;\n    uVar1 = iVar2;\n    uVar5 = *(iVar4 + 0x150);\n    piVar6 = *(iVar4 + 0x148);\n    if (uVar5 < 2) goto code_r0x0044bcdc;\n    unaff_RBX = 0;\n    do {\n        uVar1 = iVar2;\n        if (unaff_RBX < uVar5) {\n            puVar3 = piVar6[2];\n            if (in_RAX < puVar3) {\n                return 0;\n            }\n            in_R9 = piVar6;\n            if (in_RAX < (piVar6[1] - *piVar6) + puVar3) {\n                uVar1 = *piVar6 + (in_RAX - puVar3);\n                goto code_r0x0044bcdc;\n            }\n        }\n        else {\ncode_r0x0044bcdc:\n            uVar5 = arg1 + (uVar1 - *(iVar4 + 0xa0));\n            arg1 = (uVar5 >> 0xc) * 0x14 + *(iVar4 + 0x98);\n            in_RAX = (uVar5 & 0xfff) >> 8;\n            uVar5 = *arg1;\n            if (in_RAX < 0x10) {\n                puVar3 = *(arg1 + 1 + in_RAX) + *arg1;\n                do {\n                    arg1 = puVar3;\n                    in_RAX = *(iVar4 + 0x88);\n                    uVar5 = *(iVar4 + 0x80);\n                    puVar3 = arg1 + 1;\n                    if (in_RAX <= puVar3) goto code_r0x0044bd78;\n                    in_R9 = uVar5 + puVar3 * 8;\n                } while (*in_R9 < uVar1 || *in_R9 == uVar1);\n                if (arg1 < in_RAX) {\n                    puVar3 = *(uVar5 + 4 + arg1 * 8);\n                    arg1 = *(iVar4 + 0x70);\n                    in_RAX = *(iVar4 + 0x68);\n                    if (puVar3 < arg1) {\n                        return puVar3 + in_RAX;\n                    }\n                    fcn.0045e420(arg1);\n                }\n                fcn.0045e420(in_RAX);\ncode_r0x0044bd78:\n                fcn.0045e420(in_RAX);\n            }\n            iVar4 = 0x10;\n            iVar2 = fcn.0045e440(0x10);\n        }\n        piVar6 = in_R9 + 3;\n        unaff_RBX = unaff_RBX + 1;\n    } while( true );\n}\n",
        "token_count": 870
    },
    "0044cdc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044cdc0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    bool bVar7;\n    char cVar8;\n    ulong *in_RAX;\n    int64_t iVar9;\n    ulong arg1;\n    uint64_t uVar10;\n    int64_t arg2;\n    uint64_t *unaff_RBX;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uint8_t uVar13;\n    int64_t *piVar14;\n    int64_t *piVar15;\n    int64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX < 9) {\n                uVar13 = *(unaff_RBX + 0x17) & 0x1f;\n                if ((uVar13 != 0xd) && (uVar13 != 0xe)) {\n                    if (*unaff_RBX != 0) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x10) = *in_RAX;\n                        *(*0x20 + -0x48) = in_RAX[1];\n                        *(*0x20 + -0x40) = in_RAX[2];\n                        arg1 = 0;\n                        *(*0x20 + -0x90) = 0x44ce4e;\n                        cVar8 = fcn.0044d0a0(0);\n                        if (cVar8 == '\\0') {\n                            piVar14 = *(*0x20 + 8);\n                            piVar14[1] = *(*0x20 + -0x48);\n                            piVar14[2] = *(*0x20 + -0x40);\n                            if (*0x5985b0 == 0) {\n                                *piVar14 = *(*0x20 + -0x10);\n                            }\n                            else {\n                                *(*0x20 + -0x90) = 0x44cec5;\n                                fcn.0045e0a0(arg1, *(*0x20 + -0x10), param_3, param_4);\n                            }\n                            piVar15 = *(*0x20 + 0x10);\n                            piVar14[4] = -*(piVar15 + 0x15) & piVar14[4] + (*(piVar15 + 0x15) - 1);\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x30) = in_XMM15;\n                            *(*0x20 + -0x20) = in_XMM15;\n                            *(*0x20 + -0x38) = 1;\n                            arg2 = piVar14[3];\n                            *(*0x20 + -0x30) = arg2;\n                            arg4 = piVar14[4];\n                            *(*0x20 + -0x28) = arg4;\n                            iVar9 = *piVar15;\n                            *(*0x20 + -0x18) = iVar9;\n                            iVar1 = *piVar14;\n                            iVar2 = piVar14[1];\n                            if (iVar2 == 0) {\n                                bVar7 = true;\n                            }\n                            else {\n                                if (*(iVar1 + -0x28 + iVar2 * 0x28) == 1) {\n                                    iVar3 = *(iVar1 + -8 + iVar2 * 0x28);\n                                    if ((arg2 == *(iVar1 + -0x20 + iVar2 * 0x28) + iVar3) &&\n                                       (arg2 = *(iVar1 + -0x18 + iVar2 * 0x28) + iVar3,  arg4 == arg2)) {\n                                        arg2 = iVar3 + iVar9;\n                                        *(iVar1 + -8 + iVar2 * 0x28) = arg2;\n                                        uVar13 = 1;\n                                    }\n                                    else {\n                                        uVar13 = 0;\n                                    }\n                                }\n                                else {\n                                    uVar13 = 0;\n                                }\n                                bVar7 = uVar13 ^ 1;\n                            }\n                            if (bVar7) {\n                                uVar11 = piVar14[1] + 1;\n                                iVar9 = *piVar14;\n                                uVar10 = piVar14[2];\n                                if (uVar10 < uVar11) {\n                                    *(*0x20 + -0x90) = 0x44cfa5;\n                                    iVar9 = fcn.00445800(uVar10);\n                                    piVar14 = *(*0x20 + 8);\n                                    piVar14[2] = uVar10;\n                                    if (*0x5985b0 == 0) {\n                                        *piVar14 = iVar9;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x90) = 0x44cfc5;\n                                        iVar9 = fcn.0045df80(uVar10, arg2, piVar15, arg4);\n                                    }\n                                    piVar15 = *(*0x20 + 0x10);\n                                }\n                                piVar14[1] = uVar11;\n                                *(iVar9 + -0x28 + uVar11 * 0x28) = *(*0x20 + -0x38);\n                                iVar9 = iVar9 + uVar11 * 0x28;\n                                uVar4 = *(*0x20 + -0x2c);\n                                uVar5 = *(*0x20 + -0x28);\n                                uVar6 = *(*0x20 + -0x24);\n                                *(iVar9 + -0x20) = *(*0x20 + -0x30);\n                                *(iVar9 + -0x1c) = uVar4;\n                                *(iVar9 + -0x18) = uVar5;\n                                *(iVar9 + -0x14) = uVar6;\n                                uVar4 = *(*0x20 + -0x1c);\n                                uVar5 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x14);\n                                *(iVar9 + -0x10) = *(*0x20 + -0x20);\n                                *(iVar9 + -0xc) = uVar4;\n                                *(iVar9 + -8) = uVar5;\n                                *(iVar9 + -4) = uVar6;\n                            }\n                            piVar14[4] = piVar14[4] + *piVar15;\n                        }\n                        else {\n                            piVar14 = *(*0x20 + 8);\n                            piVar15 = *(*0x20 + 0x10);\n                            uVar10 = *(piVar15 + 0x15);\n                            uVar10 = piVar14[5] + (uVar10 - 1) & -uVar10;\n                            piVar14[5] = uVar10;\n                            piVar14[5] = uVar10 + *piVar15;\n                        }\n                        piVar14[3] = piVar14[3] + 8;\n                        return;\n                    }\n                    in_RAX[4] = -*(unaff_RBX + 0x15) & in_RAX[4] + (*(unaff_RBX + 0x15) - 1);\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x44d050;\n                fcn.00432de0();\n            }\n            unaff_RBX = 0x4ca2d8;\n            *(*0x20 + -0x90) = 0x44d065;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x44d075;\n        fcn.0045bdc0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1933
    },
    "0044d6e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0044d6e0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong arg1;\n    uint64_t in_RAX;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    uint64_t *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg3;\n    uint64_t arg3_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x598394 == 0) {\n                *(*0x20 + -0x58) = 0x44d711;\n                fcn.0042d280();\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            if (*unaff_RBX == 0) {\n                *unaff_RBX = in_RAX;\n                iVar3 = *(in_RAX + 0x2280);\n                arg1_00 = *(in_RAX + 0x2290);\n                arg3_00 = *(in_RAX + 0x2288) + 1;\n                if (arg1_00 < arg3_00) {\n                    *(*0x20 + -0x10) = *(in_RAX + 0x2288);\n                    *(*0x20 + -0x58) = 0x44d766;\n                    arg3 = arg3_00;\n                    iVar3 = fcn.00445800(arg1_00);\n                    in_RAX = *(*0x20 + 8);\n                    *(in_RAX + 0x2290) = arg1_00;\n                    if (*0x5985b0 == 0) {\n                        *(in_RAX + 0x2280) = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = 0x44d796;\n                        iVar3 = fcn.0045df80(in_RAX, in_RAX + 0x2280, arg3, arg4);\n                        arg1_00 = in_RAX;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(in_RAX + 0x2288) = arg3_00;\n                if (*0x5985b0 == 0) {\n                    *(iVar3 + -8 + arg3_00 * 8) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x44d7d4;\n                    fcn.0045e0c0(arg1_00, in_RAX, arg3_00, arg4);\n                }\n                arg1 = *(in_RAX + 0x2290);\n                *(*0x20 + -0x58) = 0x44d7f1;\n                fcn.0044f320(arg1, in_RAX, arg3_00, arg4);\n                iVar3 = *(*0x20 + 8);\n                if (*(iVar3 + 0x2288) != 0) {\n                    if (**(iVar3 + 0x2280) == *(*0x20 + 0x10)) {\n                        *(iVar3 + 0x1200) = *(*(*0x20 + 0x10) + 8);\n                    }\n                    LOCK();\n                    piVar1 = iVar3 + 0x2298;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    return iVar2;\n                }\n                *(*0x20 + -0x58) = 0x44d83e;\n                fcn.0045e420(0);\n            }\n            unaff_RBX = 0x22;\n            *(*0x20 + -0x58) = 0x44d84f;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44d85f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1111
    },
    "0044db00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044db00(ulong noname_0, uint64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    ulong arg1;\n    int64_t in_RAX;\n    ulong uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = *(in_RAX + 0x2288);\n            if (unaff_RBX < uVar5) {\n                piVar3 = *(*(in_RAX + 0x2280) + unaff_RBX * 8);\n                if (in_RAX == *piVar3) {\n                    *piVar3 = 0;\n                    uVar5 = *(in_RAX + 0x2288);\n                    arg3 = uVar5 - 1;\n                    if (unaff_RBX == arg3) {\ncode_r0x0044db96:\n                        arg4 = *(in_RAX + 0x2288);\n                        if (arg3 < arg4) {\n                            if (*0x5985b0 == 0) {\n                                *(*(in_RAX + 0x2280) + -8 + uVar5 * 8) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x44dbd0;\n                                in_RAX = fcn.0045e0e0(uVar5, arg2, arg3, arg4);\n                            }\n                            arg2 = *(in_RAX + 0x2290);\n                            if (arg3 <= arg2) {\n                                *(in_RAX + 0x2288) = arg3;\n                                uVar5 = unaff_RBX;\n                                if (unaff_RBX != arg3) {\n                                    *(*0x20 + 8) = in_RAX;\n                                    *(*0x20 + 0x10) = unaff_RBX;\n                                    uVar4 = *(in_RAX + 0x2280);\n                                    arg1 = *(in_RAX + 0x2290);\n                                    *(*0x20 + -0x38) = 0x44dc25;\n                                    uVar4 = fcn.0044f320(arg1, uVar4, arg3, arg4);\n                                    *(*0x20 + -0x10) = uVar4;\n                                    uVar4 = *(*(*0x20 + 8) + 0x2290);\n                                    *(*0x20 + -0x38) = 0x44dc51;\n                                    fcn.0044f4a0(uVar4);\n                                    in_RAX = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + 0x10);\n                                    uVar5 = *(*0x20 + -0x10);\n                                }\n                                if (unaff_RBX == 0) {\n                                    if (*(in_RAX + 0x2288) == 0) {\n                                        *(in_RAX + 0x1200) = 0;\n                                    }\n                                    else {\n                                        *(in_RAX + 0x1200) = *(**(in_RAX + 0x2280) + 8);\n                                    }\n                                }\n                                LOCK();\n                                piVar1 = in_RAX + 0x2298;\n                                iVar2 = *piVar1;\n                                *piVar1 = *piVar1 + -1;\n                                if (iVar2 == 1) {\n                                    *(in_RAX + 0x1208) = 0;\n                                }\n                                return uVar5;\n                            }\n                            *(*0x20 + -0x38) = 0x44dcc5;\n                            fcn.0045e4a0(arg3, arg2);\n                        }\n                        uVar5 = arg4;\n                        *(*0x20 + -0x38) = 0x44dcd0;\n                        fcn.0045e420(uVar5);\ncode_r0x0044dcd0:\n                        *(*0x20 + -0x38) = 0x44dcd8;\n                        fcn.0045e420(uVar5);\n                    }\n                    else if (arg3 < uVar5) {\n                        if (unaff_RBX < uVar5) {\n                            if (*0x5985b0 == 0) {\n                                *(*(in_RAX + 0x2280) + unaff_RBX * 8) = *(*(in_RAX + 0x2280) + -8 + uVar5 * 8);\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x44db96;\n                                in_RAX = fcn.0045e120(uVar5, arg2, arg3);\n                            }\n                            goto code_r0x0044db96;\n                        }\n                        goto code_r0x0044dcd0;\n                    }\n                    *(*0x20 + -0x38) = 0x44dce5;\n                    fcn.0045e420(uVar5);\n                }\n                unaff_RBX = 0x13;\n                *(*0x20 + -0x38) = 0x44dcf6;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x38) = 0x44dcfe;\n            in_RAX = fcn.0045e420(uVar5);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x44dd0e;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1408
    },
    "0044dd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044dd20(ulong noname_0, uint64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint64_t arg1;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t arg3;\n    ulong arg1_00;\n    int64_t in_RAX;\n    int64_t arg1_01;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t arg3_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x2288) != 0) {\n                arg3 = ***(in_RAX + 0x2280);\n                if (in_RAX == arg3) {\n                    ***(in_RAX + 0x2280) = 0;\n                    arg1_01 = *(in_RAX + 0x2288);\n                    arg1 = arg1_01 - 1;\n                    if (0 < arg1) {\n                        if (*0x5985b0 == 0) {\n                            **(in_RAX + 0x2280) = (*(in_RAX + 0x2280))[arg1_01 + -1];\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44dd94;\n                            in_RAX = fcn.0045e0e0(arg1_01, arg2, arg3, arg4);\n                        }\n                    }\n                    arg3_00 = *(in_RAX + 0x2288);\n                    if (arg1 < arg3_00) {\n                        if (*0x5985b0 == 0) {\n                            *(*(in_RAX + 0x2280) + -8 + arg1_01 * 8) = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44ddce;\n                            in_RAX = fcn.0045e0e0(arg1_01, arg2, arg3_00, arg4);\n                        }\n                        arg2 = *(in_RAX + 0x2290);\n                        if (arg1 <= arg2) {\n                            *(in_RAX + 0x2288) = arg1;\n                            if (0 < arg1) {\n                                *(*0x20 + 8) = in_RAX;\n                                arg1_00 = *(in_RAX + 0x2290);\n                                *(*0x20 + -0x30) = 0x44de07;\n                                fcn.0044f4a0(arg1_00);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            if (*(in_RAX + 0x2288) == 0) {\n                                *(in_RAX + 0x1200) = 0;\n                            }\n                            else {\n                                *(in_RAX + 0x1200) = *(**(in_RAX + 0x2280) + 8);\n                            }\n                            LOCK();\n                            piVar1 = in_RAX + 0x2298;\n                            iVar2 = *piVar1;\n                            *piVar1 = *piVar1 + -1;\n                            if (iVar2 == 1) {\n                                *(in_RAX + 0x1208) = 0;\n                            }\n                            return;\n                        }\n                        *(*0x20 + -0x30) = 0x44de67;\n                        fcn.0045e4a0(arg1, arg2);\n                    }\n                    *(*0x20 + -0x30) = 0x44de72;\n                    fcn.0045e420(arg3_00);\n                }\n                *(*0x20 + -0x30) = 0x44de85;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x30) = 0x44de8f;\n            in_RAX = fcn.0045e420(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x44de9a;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1028
    },
    "0044e9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0044e9e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t *arg2;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x0044e9e0:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar2 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\ncode_r0x0044ea07:\n        if (*(in_RAX + 0x2288) == 0) goto code_r0x0044ec25;\n        arg2 = **(in_RAX + 0x2280);\n        if (in_RAX != *arg2) {\n            unaff_RBX = 0xf;\n            *(*0x20 + -0x30) = 0x44ec25;\n            fcn.00433580();\n            goto code_r0x0044ec25;\n        }\n        uVar1 = *(arg2 + 8);\n        if (9 < uVar1) {\n            *(*0x20 + -0x30) = 0x44ebbb;\n            fcn.0044f6e0();\n            in_RAX = *(*0x20 + 8);\n            goto code_r0x0044ebc5;\n        }\n        *(*0x20 + -0x10) = arg2;\n        switch(uVar1) {\n        case 0:\n        case 5:\n            *(*0x20 + -0x30) = 0x44eaf0;\n            fcn.0044f6e0();\n            in_RAX = *(*0x20 + 8);\n            break;\n        case 1:\n            if (unaff_RBX < arg2[1]) {\n                return arg2[1];\n            }\n            LOCK();\n            if (uVar1 == *(arg2 + 8)) {\n                *(arg2 + 8) = 2;\n                *(*0x20 + -0x30) = 0x44ebe5;\n                fcn.0044ec60(unaff_RBX);\n                return 0;\n            }\n            goto code_r0x0044ea07;\n        default:\n            *(*0x20 + -0x30) = 0x44ebaa;\n            fcn.0044f6e0();\n            in_RAX = *(*0x20 + 8);\n            break;\n        case 3:\n            LOCK();\n            if (uVar1 != *(arg2 + 8)) goto code_r0x0044ea07;\n            *(arg2 + 8) = 4;\n            *(*0x20 + -0x30) = 0x44ea9f;\n            fcn.0044dd20(in_RAX, arg2, param_3, param_4);\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 4) {\n                *(*(*0x20 + -0x10) + 0x40) = 5;\n            }\n            else {\n                *(*0x20 + -0x30) = 0x44eabf;\n                fcn.0044f6e0();\n            }\n            in_RAX = *(*0x20 + 8);\n            LOCK();\n            *(in_RAX + 0x229c) = *(in_RAX + 0x229c) + -1;\n            if (*(in_RAX + 0x2288) == 0) {\n                return -1;\n            }\n            break;\n        case 6:\n            *(*0x20 + -0x28) = 0x4b2ad0;\n            *(*0x20 + -0x30) = 0x44eb0f;\n            fcn.0045bc80();\n            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n            in_RAX = *(*0x20 + 8);\n            break;\n        case 7:\n        case 8:\n            goto code_r0x0044eb30;\n        }\n        goto code_r0x0044ebc5;\n    }\n    goto code_r0x0044ec30;\ncode_r0x0044eb30:\n    LOCK();\n    if (uVar1 != *(arg2 + 8)) goto code_r0x0044ea07;\n    *(arg2 + 8) = 9;\n    arg2[1] = arg2[7];\n    *(*0x20 + -0x30) = 0x44eb65;\n    fcn.0044dd20(in_RAX, arg2, param_3, param_4);\n    *(*0x20 + -0x30) = 0x44eb74;\n    fcn.0044d6e0(in_RAX, arg2, param_3, param_4);\n    LOCK();\n    if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n        *(*(*0x20 + -0x10) + 0x40) = 1;\n    }\n    else {\n        *(*0x20 + -0x30) = 0x44eb94;\n        fcn.0044f6e0();\n    }\n    in_RAX = *(*0x20 + 8);\ncode_r0x0044ebc5:\n    unaff_RBX = *(*0x20 + 0x10);\n    goto code_r0x0044ea07;\ncode_r0x0044ec25:\n    *(*0x20 + -0x30) = 0x44ec2f;\n    in_RAX = fcn.0045e420(0);\ncode_r0x0044ec30:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44ec3f;\n    fcn.00460800();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044e9e0;\n}\n",
        "token_count": 1495
    },
    "0044ec60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044ec60(int64_t arg1)\n\n{\n    code **arg2;\n    ulong arg4;\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.00460800();\n    }\n    arg2 = *(unaff_RBX + 0x18);\n    arg4 = *(unaff_RBX + 0x30);\n    iVar1 = *(unaff_RBX + 0x10);\n    if (iVar1 < 1) {\n        fcn.0044dd20(arg1, arg2, *(unaff_RBX + 0x28), arg4);\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 0;\n        }\n        else {\n            fcn.0044f6e0();\n        }\n    }\n    else {\n        iVar1 = iVar1 * ((arg1 - *(unaff_RBX + 8)) / iVar1 + 1) + *(unaff_RBX + 8);\n        *(unaff_RBX + 8) = iVar1;\n        if (iVar1 < 0) {\n            *(unaff_RBX + 8) = 0x7fffffffffffffff;\n        }\n        fcn.0044f4a0(*(in_RAX + 0x2290));\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 1;\n        }\n        else {\n            fcn.0044f6e0();\n        }\n        if (*(in_RAX + 0x2288) == 0) {\n            *(in_RAX + 0x1200) = 0;\n        }\n        else {\n            *(in_RAX + 0x1200) = *(**(in_RAX + 0x2280) + 8);\n        }\n    }\n    fcn.0040a740();\n    (**arg2)(arg4);\n    fcn.0040a520();\n    return;\n}\n",
        "token_count": 509
    },
    "0044ee00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044ee00(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    ulong *arg1;\n    ulong *arg2;\n    ulong *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    ulong *arg1_00;\n    ulong *puVar8;\n    int32_t iVar9;\n    ulong *arg4;\n    ulong *in_R10;\n    uint64_t unaff_R12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar10;\n    \ncode_r0x0044ee00:\n    puVar5 = *0x20;\n    puVar8 = in_R10;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(in_RAX + 0x1208) = 0;\n        piVar6 = *(in_RAX + 0x2280);\n        *(*0x20 + -0x18) = piVar6;\n        arg1 = *(in_RAX + 0x2288);\n        *(*0x20 + -0x30) = arg1;\n        arg2 = *(in_RAX + 0x2290);\n        *(*0x20 + -0x28) = arg2;\n        puVar4 = NULL;\n        piVar7 = NULL;\n        arg1_00 = NULL;\n        arg4 = NULL;\n        uVar3 = unaff_R12;\ncode_r0x0044ee60:\n        puVar8 = arg1_00;\n        if (puVar4 < arg1) {\n            *(*0x20 + -0x20) = puVar4;\n            *(*0x20 + -0x3c) = arg4;\n            *(*0x20 + -0x38) = arg1_00;\n            *(*0x20 + -0x3d) = piVar7;\n            puVar8 = piVar6[puVar4];\n            *(*0x20 + -0x10) = puVar8;\n            uVar3 = in_RAX;\n        }\n        else {\n            for (; puVar8 < arg1; puVar8 = puVar8 + 1) {\n                if (arg1 <= puVar8) goto code_r0x0044f0a9;\n                piVar7 = piVar6 + puVar8;\n                if (*0x5985b0 == 0) {\n                    piVar6[puVar8] = 0;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x44f027;\n                    in_RAX = fcn.0045e0c0(arg1, arg2, puVar8, arg4);\n                    in_R10 = arg1_00;\n                }\n            }\n            iVar9 = arg4;\n            LOCK();\n            puVar1 = in_RAX + 0x229c;\n            arg4 = *puVar1;\n            *puVar1 = *puVar1 + -iVar9;\n            LOCK();\n            puVar1 = in_RAX + 0x2298;\n            puVar8 = *puVar1;\n            *puVar1 = *puVar1 + -iVar9;\n            if (arg1_00 <= arg2) {\n                *(in_RAX + 0x2288) = arg1_00;\n                *(in_RAX + 0x2290) = arg2;\n                if (*0x5985b0 == 0) {\n                    *(in_RAX + 0x2280) = piVar6;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x44f077;\n                    in_RAX = fcn.0045e0e0(arg1, arg2, puVar8, arg4);\n                }\n                if (arg1_00 == NULL) {\n                    *(in_RAX + 0x1200) = 0;\n                }\n                else {\n                    *(in_RAX + 0x1200) = *(*piVar6 + 8);\n                }\n                return;\n            }\n            *(*0x20 + -0x68) = 0x44f0a9;\n            arg1 = arg1_00;\n            fcn.0045e4a0(arg1_00, arg2);\ncode_r0x0044f0a9:\n            *(*0x20 + -0x68) = 0x44f0b1;\n            fcn.0045e420(arg1);\n            puVar4 = arg1_00;\n            arg1_00 = puVar8;\n            puVar8 = in_R10;\n        }\ncode_r0x0044f0b4:\n        uVar2 = *(puVar8 + 8);\n        unaff_R12 = uVar2;\n        in_RAX = uVar3;\n        in_R10 = puVar8;\n        switch(unaff_R12) {\n        case 0:\n        case 5:\n            *(*0x20 + -0x68) = 0x44f0fb;\n            fcn.0044f6e0();\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar4 = *(*0x20 + -0x20);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg1_00 = *(*0x20 + -0x38);\n            arg4 = *(*0x20 + -0x3c);\n            puVar8 = *(*0x20 + -0x10);\n            uVar3 = *(*0x20 + 8);\n            goto code_r0x0044f0b4;\n        case 1:\n            if (piVar7 != '\\0') {\n                if (arg1 <= arg1_00) goto code_r0x0044f23b;\n                if (*0x5985b0 == 0) {\n                    piVar6[arg1_00] = puVar8;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x44eeb7;\n                    fcn.0045e120(arg1, arg2, arg1_00);\n                    arg4 = puVar8;\n                }\n                *(*0x20 + -0x68) = 0x44eec8;\n                fcn.0044f320(arg2, arg2, arg1_00, arg4);\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + -0x30);\n                arg2 = *(*0x20 + -0x28);\n                puVar4 = *(*0x20 + -0x20);\n                piVar6 = *(*0x20 + -0x18);\n                piVar7 = *(*0x20 + -0x3d);\n                arg1_00 = *(*0x20 + -0x38);\n                arg4 = *(*0x20 + -0x3c);\n            }\n            arg1_00 = arg1_00 + 1;\n            goto code_r0x0044ee58;\n        case 2:\n        case 4:\n        case 9:\n            *(*0x20 + -0x68) = 0x44f1be;\n            fcn.0044f6e0();\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar4 = *(*0x20 + -0x20);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg1_00 = *(*0x20 + -0x38);\n            arg4 = *(*0x20 + -0x3c);\n            puVar8 = *(*0x20 + -0x10);\n            uVar3 = *(*0x20 + 8);\n            goto code_r0x0044f0b4;\n        case 3:\n            LOCK();\n            if (uVar2 == *(puVar8 + 8)) {\n                *(puVar8 + 8) = 4;\n                *puVar8 = 0;\n                LOCK();\n                bVar10 = *(puVar8 + 8) == 4;\n                if (bVar10) {\n                    *(puVar8 + 8) = 5;\n                }\n                in_R10 = puVar8 & 0xffffffffffffff00 | bVar10;\n                if (!bVar10) {\n                    *(*0x20 + -0x68) = 0x44ef1c;\n                    fcn.0044f6e0();\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    puVar4 = *(*0x20 + -0x20);\n                    piVar6 = *(*0x20 + -0x18);\n                    arg1_00 = *(*0x20 + -0x38);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_RAX = *(*0x20 + 8);\n                }\n                arg4 = arg4 + 1;\n                piVar7 = 0x1;\n                unaff_R12 = in_RAX;\n                goto code_r0x0044ee58;\n            }\n            goto code_r0x0044f0b4;\n        case 6:\n            *(*0x20 + -0x60) = 0x4b2ad0;\n            *(*0x20 + -0x68) = 0x44f145;\n            fcn.0045bc80();\n            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar4 = *(*0x20 + -0x20);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg1_00 = *(*0x20 + -0x38);\n            arg4 = *(*0x20 + -0x3c);\n            puVar8 = *(*0x20 + -0x10);\n            uVar3 = *(*0x20 + 8);\n            goto code_r0x0044f0b4;\n        case 7:\n        case 8:\n            goto code_r0x0044f18f;\n        default:\n            *(*0x20 + -0x68) = 0x44f1fb;\n            fcn.0044f6e0();\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg4 = *(*0x20 + -0x3c);\n            uVar3 = *(*0x20 + 8);\n            puVar4 = *(*0x20 + -0x20);\n            arg1_00 = *(*0x20 + -0x38);\n            puVar8 = *(*0x20 + -0x10);\n            goto code_r0x0044f0b4;\n        }\n    }\n    goto code_r0x0044f246;\ncode_r0x0044f18f:\n    LOCK();\n    if (uVar2 == *(puVar8 + 8)) goto code_r0x0044f19c;\n    goto code_r0x0044f0b4;\ncode_r0x0044f19c:\n    *(puVar8 + 8) = 9;\n    puVar8[1] = puVar8[7];\n    unaff_R12 = uVar3;\n    if (arg1_00 < arg1) {\n        if (*0x5985b0 == 0) {\n            piVar6[arg1_00] = puVar8;\n        }\n        else {\n            *(*0x20 + -0x68) = 0x44ef87;\n            fcn.0045e120(arg1, arg2, arg1_00);\n            arg4 = puVar8;\n        }\n        *(*0x20 + -0x68) = 0x44ef98;\n        fcn.0044f320(arg2, arg2, arg1_00, arg4);\n        LOCK();\n        if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n            *(*(*0x20 + -0x10) + 0x40) = 1;\n        }\n        else {\n            *(*0x20 + -0x68) = 0x44efb8;\n            fcn.0044f6e0();\n        }\n        arg1_00 = *(*0x20 + -0x38) + 1;\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + -0x30);\n        arg2 = *(*0x20 + -0x28);\n        puVar4 = *(*0x20 + -0x20);\n        piVar6 = *(*0x20 + -0x18);\n        piVar7 = 0x1;\n        arg4 = *(*0x20 + -0x3c);\ncode_r0x0044ee58:\n        puVar4 = puVar4 + 1;\n        uVar3 = unaff_R12;\n        goto code_r0x0044ee60;\n    }\n    *(*0x20 + -0x68) = 0x44f23b;\n    fcn.0045e420(arg1);\ncode_r0x0044f23b:\n    *(*0x20 + -0x68) = 0x44f245;\n    in_RAX = fcn.0045e420(arg1);\ncode_r0x0044f246:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x44f250;\n    fcn.0045bdc0();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    in_R10 = puVar8;\n    goto code_r0x0044ee00;\n}\n",
        "token_count": 3264
    },
    "0044f320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044f320(uint64_t arg1, ulong noname_1, uint64_t arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar4;\n    bool bVar5;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar4 = unaff_RBX < unaff_RDI;\n            bVar5 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44f351;\n                fcn.0044f6e0();\n                arg1 = *(*0x20 + 0x10);\n                bVar4 = arg1 < *(*0x20 + 0x20);\n                bVar5 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar4 && !bVar5) {\n                iVar2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (iVar2 < 1) {\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x28) = 0x44f388;\n                    fcn.0044f6e0();\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                while (0 < unaff_RDI) {\n                    arg3 = unaff_RDI - 1 >> 2;\n                    if (unaff_RBX <= arg3) goto code_r0x0044f43a;\n                    arg4 = *(in_RAX + arg3 * 8);\n                    if (*(arg4 + 8) == iVar2 || *(arg4 + 8) < iVar2) break;\n                    if (unaff_RBX <= unaff_RDI) goto code_r0x0044f42f;\n                    if (*0x5985b0 == 0) {\n                        *(in_RAX + unaff_RDI * 8) = arg4;\n                        unaff_RDI = arg3;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44f3e6;\n                        unaff_RDI = arg3;\n                        in_RAX = fcn.0045e120(arg1, iVar2, arg3);\n                        arg3 = unaff_RDI;\n                    }\n                }\n                if (unaff_RDI < unaff_RBX) {\n                    iVar2 = *(in_RAX + unaff_RDI * 8);\n                    if (iVar2 != iVar1) {\n                        if (*0x5985b0 == 0) {\n                            *(in_RAX + unaff_RDI * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44f414;\n                            unaff_RDI = fcn.0045e0e0(iVar2, in_RAX + unaff_RDI * 8, arg3, arg4);\n                        }\n                    }\n                    return unaff_RDI;\n                }\n                *(*0x20 + -0x28) = 0x44f42f;\n                fcn.0045e420(unaff_RBX);\ncode_r0x0044f42f:\n                *(*0x20 + -0x28) = 0x44f43a;\n                fcn.0045e420(unaff_RBX);\ncode_r0x0044f43a:\n                *(*0x20 + -0x28) = 0x44f445;\n                fcn.0045e420(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44f450;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045e420(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x44f46a;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1290
    },
    "0044f4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044f4a0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    uint64_t arg3;\n    uint64_t arg4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    int64_t iVar8;\n    bool bVar9;\n    bool bVar10;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar9 = unaff_RBX < unaff_RDI;\n            bVar10 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44f4d1;\n                fcn.0044f6e0();\n                arg1 = *(*0x20 + 0x10);\n                bVar9 = arg1 < *(*0x20 + 0x20);\n                bVar10 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar9 && !bVar10) {\n                arg2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (arg2 < 1) {\n                    *(*0x20 + -0x10) = arg2;\n                    *(*0x20 + -0x28) = 0x44f508;\n                    fcn.0044f6e0();\n                    in_RAX = *(*0x20 + 8);\n                    arg2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar2 = *(in_RAX + unaff_RDI * 8);\n                arg3 = unaff_RDI;\n                while( true ) {\n                    unaff_RDI = arg3 * 4;\n                    arg4 = unaff_RDI + 1;\n                    if (unaff_RBX <= arg4) break;\n                    if (unaff_RBX <= arg4) goto code_r0x0044f67c;\n                    iVar8 = *(*(in_RAX + 8 + arg3 * 0x20) + 8);\n                    uVar7 = unaff_RDI + 2;\n                    uVar5 = arg4;\n                    iVar6 = iVar8;\n                    if (uVar7 < unaff_RBX) {\n                        if (unaff_RBX <= uVar7) goto code_r0x0044f671;\n                        iVar6 = *(*(in_RAX + 0x10 + arg3 * 0x20) + 8);\n                        uVar5 = uVar7;\n                        if (iVar8 <= iVar6) {\n                            uVar5 = arg4;\n                            iVar6 = iVar8;\n                        }\n                    }\n                    arg4 = unaff_RDI + 3;\n                    uVar7 = uVar5;\n                    iVar8 = iVar6;\n                    if (arg4 < unaff_RBX) {\n                        if (unaff_RBX <= arg4) goto code_r0x0044f666;\n                        iVar3 = *(*(in_RAX + 0x18 + arg3 * 0x20) + 8);\n                        uVar1 = unaff_RDI + 4;\n                        uVar7 = arg4;\n                        iVar8 = iVar3;\n                        if (uVar1 < unaff_RBX) {\n                            if (unaff_RBX <= uVar1) goto code_r0x0044f65b;\n                            iVar8 = *(*(in_RAX + 0x20 + arg3 * 0x20) + 8);\n                            uVar7 = uVar1;\n                            if (iVar3 <= iVar8) {\n                                uVar7 = arg4;\n                                iVar8 = iVar3;\n                            }\n                        }\n                        if (iVar6 <= iVar8) {\n                            uVar7 = uVar5;\n                            iVar8 = iVar6;\n                        }\n                    }\n                    if (arg2 <= iVar8) break;\n                    if (unaff_RBX <= uVar7) goto code_r0x0044f650;\n                    if (unaff_RBX <= arg3) goto code_r0x0044f645;\n                    if (*0x5985b0 == 0) {\n                        *(in_RAX + arg3 * 8) = *(in_RAX + uVar7 * 8);\n                        arg3 = uVar7;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44f605;\n                        in_RAX = fcn.0045e120(arg1, arg2, arg3);\n                        arg3 = uVar7;\n                    }\n                }\n                if (arg3 < unaff_RBX) {\n                    iVar8 = *(in_RAX + arg3 * 8);\n                    if (iVar8 != iVar2) {\n                        if (*0x5985b0 == 0) {\n                            *(in_RAX + arg3 * 8) = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44f630;\n                            fcn.0045e0e0(iVar8, arg2, arg3, arg4);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x44f645;\n                fcn.0045e420(unaff_RBX);\ncode_r0x0044f645:\n                *(*0x20 + -0x28) = 0x44f650;\n                fcn.0045e420(unaff_RBX);\ncode_r0x0044f650:\n                *(*0x20 + -0x28) = 0x44f65b;\n                fcn.0045e420(unaff_RBX);\ncode_r0x0044f65b:\n                *(*0x20 + -0x28) = 0x44f666;\n                fcn.0045e420(unaff_RBX);\ncode_r0x0044f666:\n                *(*0x20 + -0x28) = 0x44f671;\n                fcn.0045e420(unaff_RBX);\ncode_r0x0044f671:\n                *(*0x20 + -0x28) = 0x44f67c;\n                fcn.0045e420(unaff_RBX);\ncode_r0x0044f67c:\n                *(*0x20 + -0x28) = 0x44f687;\n                fcn.0045e420(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44f692;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045e420(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x44f6ac;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1882
    },
    "0044f7a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044f7a0(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    bool bVar2;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.00460800();\n    }\n    uVar1 = *0x55a5b8;\n    if ((*0x54a578 == 0) && (*0x54a531 == '\\0')) {\n        uVar1 = 0;\n    }\n    if (uVar1 == 0) {\n        return 0;\n    }\n    fcn.0040a520();\n    uVar1 = *0x55a5b8;\n    if ((*0x54a578 == 0) && (*0x54a531 == '\\0')) {\n        uVar1 = 0;\n    }\n    if (uVar1 != 0) {\n        LOCK();\n        bVar2 = uVar1 == *0x55a5b8;\n        *0x55a5b8 = *0x55a5b8 ^ bVar2 * *0x55a5b8;\n        if (bVar2) {\n            fcn.0040a740();\n            return uVar1;\n        }\n    }\n    fcn.0040a740();\n    return 0;\n}\n",
        "token_count": 315
    },
    "0044f8a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044f8a0(void)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.00460800();\n    }\n    puVar1 = *(in_RAX + 0x11d0);\n    *(in_RAX + 0x11d0) = 0;\n    if (puVar1 == NULL) {\n        return;\n    }\n    fcn.0040a520();\n    *puVar1 = 0;\n    puVar2 = puVar1;\n    if (*0x54a578 != NULL) {\n        **0x54a580 = puVar1;\n        puVar2 = *0x54a578;\n    }\n    *0x54a578 = puVar2;\n    *0x54a580 = puVar1;\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 243
    },
    "0044f960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044f960(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar1 = fcn.004501a0();\n    if ((*0x54a530 == '\\0') && (*(iVar1 + 0x268) == '\\0')) {\n        fcn.00450240();\n        return;\n    }\n    noname_1 = unaff_RBX;\n    if ((0 < unaff_RBX) && (*(iVar1 + 0x90) == unaff_R14)) {\n        noname_1 = unaff_RBX + 1;\n    }\n    fcn.0044fa80(unaff_RBX & 0xffffffff, noname_1, 0, noname_1);\n    fcn.00450240();\n    return;\n}\n",
        "token_count": 246
    },
    "00450080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00450080(uint64_t arg1)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            iVar2 = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = iVar2;\n            if (unaff_R14 == iVar2) {\n                *(*0x20 + -0x48) = 0x450105;\n                arg1 = fcn.00454460(arg1);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x18);\n            }\n            else if (iVar2 == 0) {\n                arg1 = 0;\n            }\n            else {\n                *(*0x20 + -0x48) = 0x4500e5;\n                arg1 = fcn.004545e0(unaff_RBX, unaff_RBX);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x18);\n            }\n            unaff_RSI = arg1 - 1;\n            if (0 < arg1) {\n                arg1 = unaff_RSI;\n            }\n            if ((0 < arg1) && (*(iVar2 + 0x98) == 1)) {\n                arg1 = arg1 - 1;\n            }\n            if (arg1 <= unaff_RDI) {\n                *(*0x20 + -0x48) = 0x450145;\n                uVar1 = fcn.00450540(arg1);\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x450159;\n            in_RAX = fcn.0045e4a0(arg1, unaff_RDI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x450178;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 821
    },
    "004501a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004501a0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if (*(iVar2 + 0xa0) != 0) {\n        return iVar2;\n    }\n    fcn.0040a520();\n    return iVar2;\n}\n",
        "token_count": 177
    },
    "00450240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00450240(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (in_EAX == -1) {\n        fcn.0040a740();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n    *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + -1;\n    if ((iVar1 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "004502c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004502c0(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint unaff_EBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar7 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x54a528 == 0) {\n                uVar6 = 1;\n            }\n            else {\n                uVar6 = *0x54a528 & 0xffffffffffffff00 | *(*(unaff_R14 + 0x30) + 0x90) != *0x54a528;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x19) = uVar6;\n            if (uVar6 != '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x38) = 0x450319;\n                fcn.0040a520();\n                in_RAX = *(*0x20 + 8);\n                uVar6 = *(*0x20 + -0x19);\n            }\n            puVar3 = *0x54a578;\n            puVar2 = *0x54a580;\n            if ((in_RAX != NULL) && (*in_RAX = 0,  puVar3 = in_RAX,  puVar2 = in_RAX,  *0x54a578 != NULL)) {\n                **0x54a580 = in_RAX;\n                puVar3 = *0x54a578;\n                puVar2 = in_RAX;\n            }\n            *0x54a580 = puVar2;\n            *0x54a578 = puVar3;\n            if (*0x54a570 == NULL) {\n                *(*0x20 + -0x38) = 0x450388;\n                puVar3 = fcn.004147e0();\n                if (puVar3 != NULL) goto code_r0x00450391;\n            }\n            else {\n                puVar3 = *0x54a570;\n                *0x54a570 = **0x54a570;\ncode_r0x00450391:\n                *(*0x20 + -0x18) = puVar3;\n                *(*0x20 + -0x10) = puVar3;\n                *puVar3 = 0;\n                puVar3[2] = 0;\n                *(*0x20 + -0x38) = 0x4503ad;\n                fcn.0045de00(uVar6, 0);\n                unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                iVar1 = *(*0x20 + -0x10);\n                uVar6 = *(*0x20 + -0x30) >> 6;\n                if (*(iVar1 + 8) == *(*0x20 + -0x30) >> 6) {\n                    uVar6 = *(iVar1 + 8) + 1;\n                }\n                *(iVar1 + 8) = uVar6;\n                if (*(iVar1 + 0x10) < 0xfbe8) {\n                    *(iVar1 + 0x418 + *(iVar1 + 0x10)) = 0x41;\n                    uVar4 = *(iVar1 + 0x10) + 1;\n                    *(iVar1 + 0x10) = uVar4;\n                    for (uVar5 = *(*0x20 + 0x10); 0x7f < uVar5; uVar5 = uVar5 >> 7) {\n                        if (0xfbe7 < uVar4) goto code_r0x004504f2;\n                        *(iVar1 + 0x418 + uVar4) = uVar5 | 0x80;\n                        uVar4 = uVar4 + 1;\n                    }\n                    if (uVar4 < 0xfbe8) {\n                        *(iVar1 + 0x418 + uVar4) = uVar5;\n                        uVar4 = uVar4 + 1;\n                        *(iVar1 + 0x10) = uVar4;\n                        for (; 0x7f < uVar6; uVar6 = uVar6 >> 7) {\n                            if (0xfbe7 < uVar4) goto code_r0x004504d5;\n                            *(iVar1 + 0x418 + uVar4) = uVar6 | 0x80;\n                            uVar4 = uVar4 + 1;\n                        }\n                        if (uVar4 < 0xfbe8) {\n                            *(iVar1 + 0x418 + uVar4) = uVar6;\n                            *(iVar1 + 0x10) = uVar4 + 1;\n                            if (*(*0x20 + -0x19) != '\\0') {\n                                *(*0x20 + -0x38) = 0x4504b9;\n                                fcn.0040a740();\n                            }\n                            return *(*0x20 + -0x18);\n                        }\n                        *(*0x20 + -0x38) = 0x4504d5;\n                        fcn.0045e420(0xfbe8);\ncode_r0x004504d5:\n                        *(*0x20 + -0x38) = 0x4504e5;\n                        fcn.0045e420(0xfbe8);\n                    }\n                    *(*0x20 + -0x38) = 0x4504f2;\n                    fcn.0045e420(0xfbe8);\ncode_r0x004504f2:\n                    *(*0x20 + -0x38) = 0x4504ff;\n                    fcn.0045e420(0xfbe8);\n                }\n                *(*0x20 + -0x38) = 0x45050c;\n                fcn.0045e420(0xfbe8);\n            }\n            unaff_EBX = 0x14;\n            *(*0x20 + -0x38) = 0x45051d;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_EBX;\n        *(puVar7 + -8) = 0x45052c;\n        fcn.00460800();\n        in_RAX = *(puVar7 + 8);\n        unaff_EBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1583
    },
    "00450920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00450920(void)\n\n{\n    int64_t **in_RAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX + 7U & 0xfffffffffffffff8;\n            if ((*in_RAX == NULL) || (0xfff8 < in_RAX[1] + uVar2)) {\n                if (uVar2 < 0xfff9) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x450988;\n                    piVar1 = fcn.004147e0();\n                    if (piVar1 != NULL) {\n                        in_RAX = *(*0x20 + 8);\n                        *piVar1 = *in_RAX;\n                        *in_RAX = piVar1;\n                        in_RAX[1] = NULL;\n                        uVar2 = *(*0x20 + -0x10);\n                        goto code_r0x004509ac;\n                    }\n                    goto code_r0x004509e5;\n                }\n            }\n            else {\ncode_r0x004509ac:\n                piVar1 = in_RAX[1];\n                if (piVar1 < 0xfff8) {\n                    in_RAX[1] = piVar1 + uVar2;\n                    return *in_RAX + piVar1 + 1;\n                }\n                *(*0x20 + -0x28) = 0x4509e5;\n                fcn.0045e440(0xfff8);\ncode_r0x004509e5:\n                *(*0x20 + -0x28) = 0x4509f6;\n                fcn.00433580();\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x28) = 0x450a07;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x450a17;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 670
    },
    "00450aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00450aa0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044f960(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "00450b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450b60(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x11d8) == '\\0') {\n                *(iVar1 + 0x11d8) = 1;\n                *(iVar1 + 0x11e0) = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x450bb4;\n            fcn.00433580();\n        }\n        *(puVar2 + -8) = 0x450bba;\n        fcn.0045bdc0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 298
    },
    "00450bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450bc0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (*(iVar1 + 0x11d8) != '\\0') {\n        if (*(iVar1 + 0x11e0) == 0) {\n            fcn.0044f960(0);\n        }\n        *(iVar1 + 0x11e0) = *(iVar1 + 0x11e0) + in_RAX;\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00450c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450c60(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x11d8) != '\\0') {\n                if (*(iVar1 + 0x11e0) != 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    *(*0x20 + -0x20) = *(iVar1 + 0x11e0);\n                    *(*0x20 + -0x18) = *(iVar1 + 0x11e8);\n                    *(*0x20 + -0x50) = 0x450cd9;\n                    fcn.0044f960(*0x20 + -0x20);\n                    iVar1 = *(*0x20 + -0x10);\n                }\n                *(iVar1 + 0x11d8) = 0;\n                return;\n            }\n            *(*0x20 + -0x50) = 0x450d05;\n            fcn.00433580();\n        }\n        *(puVar2 + -8) = 0x450d0b;\n        fcn.0045bdc0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 430
    },
    "00450e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450e00(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n            iVar2 = *(*(iVar1 + 0x30) + 0xa0);\n            *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n            if (*(iVar2 + 0x1228) == 0) {\n                if (*(iVar1 + 0xe0) == iVar2) {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = *(iVar1 + 0x98);\n                    *(*0x20 + -0x68) = 0x450ee9;\n                    fcn.0044f960(*0x20 + -0x38);\n                    return;\n                }\n                *(iVar1 + 0xe0) = iVar2;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x30) = *(iVar1 + 0x98);\n                *(*0x20 + -0x28) = *(iVar1 + 0xd8);\n                *(*0x20 + -0x68) = 0x450f2e;\n                fcn.0044f960(*0x20 + -0x30);\n                return;\n            }\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x20) = *(iVar1 + 0x98);\n            *(*0x20 + -0x18) = *(iVar1 + 0xd8);\n            if (*(iVar2 + 0x1228) < 4) {\n                *(*0x20 + -0x10) = *(*(iVar2 + 0x1228) * 8 + 0x55a5e8);\n                *(*0x20 + -0x68) = 0x450ea8;\n                fcn.0044f960(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x68) = 0x450f45;\n            fcn.0045e420(4);\n        }\n        *(puVar3 + -8) = 0x450f4b;\n        fcn.0045bdc0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 694
    },
    "00451220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00451220(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044f960(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "00453160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00453160(ulong arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uint uVar4;\n    int64_t in_RAX;\n    char cVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar uVar7;\n    int64_t unaff_RDI;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar1 = *(in_RAX + 0x2b);\n            if (uVar1 < 6) {\n                uVar9 = 0;\n            }\n            else {\n                uVar2 = *(in_RAX + 0x2b + *(in_RAX + 0x1c) * 4 + 0x15);\n                uVar9 = uVar2 + *(unaff_RBX + 0x140) & (uVar2 == 0xffffffff) - 1;\n            }\n            if (uVar9 == 0) {\n                return;\n            }\n            *(*0x20 + -0x40) = uVar9;\n            *(*0x20 + 0x18) = arg1;\n            if (uVar1 < 7) {\n                uVar9 = 0;\n            }\n            else {\n                uVar2 = *(in_RAX + 0x2b + *(in_RAX + 0x1c) * 4 + 0x19);\n                uVar9 = uVar2 + *(unaff_RBX + 0x140) & (uVar2 == 0xffffffff) - 1;\n            }\n            *(*0x20 + -0x48) = uVar9;\n            *(*0x20 + -0x90) = 0x453238;\n            uVar4 = fcn.0044ca40(3);\n            puVar3 = *(*0x20 + -0x48);\n            if (puVar3 == NULL) {\n                uVar7 = 0xff;\n            }\n            else {\n                uVar7 = *puVar3;\n            }\n            *(*0x20 + -0x5c) = uVar7;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0xc) = 0;\n            *(*0x20 + -0x20) = 0x453660;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x10) = uVar4;\n            *(*0x20 + -0xc) = uVar7;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x38) = 0x453580;\n            *(*0x20 + -0x30) = *(*0x20 + 0x18);\n            *(*0x20 + -0x28) = *0x20 + -0x20;\n            *(*0x20 + -0x5b) = 1;\n            unaff_RDI = *(*0x20 + -0x40);\n            uVar9 = 0;\n            cVar5 = '\\0';\n            while (uVar9 < 0xab) {\n                *(*0x20 + -0x5a) = cVar5;\n                uVar1 = *(unaff_RDI + uVar9);\n                uVar8 = uVar9 + 1;\n                *(*0x20 + -0x58) = uVar8;\n                if (uVar1 < 0xfd) {\n                    if (uVar1 == 0xfb) {\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x45331d;\n                            fcn.00434ec0();\n                            *(*0x20 + -0x90) = 0x45332e;\n                            fcn.004357c0();\n                            *(*0x20 + -0x90) = 0x453333;\n                            fcn.00434f40();\n                        }\n                        *(*0x20 + -0x90) = 0x453338;\n                        fcn.00434ec0();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x90) = 0x453349;\n                        fcn.004357c0();\n                        *(*0x20 + -0x90) = 0x45334e;\n                        fcn.00434f40();\n                        uVar9 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                    }\n                    else if (uVar1 == 0xfc) {\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x45337c;\n                            fcn.00434ec0();\n                            *(*0x20 + -0x90) = 0x45338d;\n                            fcn.004357c0();\n                            *(*0x20 + -0x90) = 0x453392;\n                            fcn.00434f40();\n                        }\n                        *(*0x20 + -0x90) = 0x453397;\n                        fcn.00434ec0();\n                        unaff_RBX = 3;\n                        *(*0x20 + -0x90) = 0x4533a8;\n                        fcn.004357c0();\n                        *(*0x20 + -0x90) = 0x4533ad;\n                        fcn.00434f40();\n                        uVar9 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                    }\n                    else {\ncode_r0x0045343e:\n                        *(*0x20 + -0x59) = uVar1;\n                        *(*0x20 + -0x50) = uVar9;\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x453455;\n                            fcn.00434ec0();\n                            unaff_RBX = 2;\n                            *(*0x20 + -0x90) = 0x453466;\n                            fcn.004357c0();\n                            *(*0x20 + -0x90) = 0x45346b;\n                            fcn.00434f40();\n                            uVar9 = *(*0x20 + -0x50);\n                            unaff_RDI = *(*0x20 + -0x40);\n                            uVar8 = *(*0x20 + -0x58);\n                        }\n                        if (0xaa < uVar8) {\n                            *(*0x20 + -0x90) = 0x453525;\n                            fcn.0045e420(0xab);\n                            break;\n                        }\n                        unaff_RBX = *(uVar9 + 1 + unaff_RDI);\n                        *(*0x20 + -0x90) = 0x4534ab;\n                        (**(*0x20 + -0x38))();\n                        if (*(*0x20 + -0x59) < *(*0x20 + -0x5c)) {\n                            cVar5 = *(*0x20 + -0x5a);\n                        }\n                        else {\n                            cVar5 = *(*0x20 + -0x5a) + '\\x01';\n                        }\n                        uVar9 = *(*0x20 + -0x50) + 2;\n                    }\ncode_r0x004534fd:\n                    *(*0x20 + -0x5b) = 0;\n                }\n                else {\n                    if (uVar1 == 0xfd) {\n                        *(*0x20 + -0x90) = 0x4534d8;\n                        fcn.00434ec0();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x90) = 0x4534e9;\n                        fcn.004357c0();\n                        *(*0x20 + -0x90) = 0x4534ee;\n                        fcn.00434f40();\n                        uVar9 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                        goto code_r0x004534fd;\n                    }\n                    if (uVar1 != 0xfe) {\n                        if (uVar1 == 0xff) {\n                            return;\n                        }\n                        goto code_r0x0045343e;\n                    }\n                    if (*(*0x20 + -0x5b) == '\\0') {\n                        *(*0x20 + -0x90) = 0x4533e5;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x90) = 0x4533f6;\n                        fcn.004357c0();\n                        *(*0x20 + -0x90) = 0x4533fb;\n                        fcn.00434f40();\n                    }\n                    *(*0x20 + -0x90) = 0x453405;\n                    fcn.00434ec0();\n                    unaff_RBX = 1;\n                    *(*0x20 + -0x90) = 0x453416;\n                    fcn.004357c0();\n                    *(*0x20 + -0x90) = 0x45341b;\n                    fcn.00434f40();\n                    *(*0x20 + -0x5b) = 1;\n                    uVar9 = *(*0x20 + -0x58);\n                    cVar5 = *(*0x20 + -0x5a);\n                }\n                unaff_RDI = *(*0x20 + -0x40);\n            }\n            arg1 = 0xab;\n            *(*0x20 + -0x90) = 0x45352f;\n            in_RAX = fcn.0045e420(0xab);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x453549;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2539
    },
    "00453940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00453940(ulong param_1, ulong param_2)\n\n{\n    ulong arg1;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    arg1 = *(in_RAX + 0x128);\n    iVar2 = fcn.0044bc60();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00454680(in_RAX, param_2, 0);\n    }\n    if ((cVar1 != '\\0') && (*(in_RAX + 0x98) != 1)) {\n        iVar2 = fcn.004539e0(arg1);\n    }\n    return iVar2;\n}\n",
        "token_count": 227
    },
    "00453fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00453fe0(ulong arg1)\n\n{\n    ulong arg1_00;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.004354c0();\n    fcn.004357c0();\n    fcn.00434f40();\n    for (uVar3 = 0; uVar3 < unaff_RBX; uVar3 = uVar3 + 1) {\n        arg1_00 = *(in_RAX + uVar3 * 8);\n        uVar4 = uVar3;\n        fcn.0044bc60();\n        cVar1 = fcn.00454740(uVar4 & 0xffffff00 | uVar3 == 0);\n        if (cVar1 != '\\0') {\n            fcn.004541a0(arg1_00);\n        }\n    }\n    if (unaff_RBX == 100) {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00434f40();\n    }\n    iVar2 = fcn.0044bc60();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00454740();\n    }\n    if ((cVar1 != '\\0') && (unaff_RDI != 1)) {\n        iVar2 = fcn.004539e0(uStack0000000000000028);\n    }\n    return iVar2;\n}\n",
        "token_count": 476
    },
    "00454680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00454680(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n        unaff_EDI = unaff_EDI & 0xff;\n    }\n    iVar1 = *(unaff_R14 + 0x30);\n    if (((1 < *(iVar1 + 0xc4)) && (arg1 != 0)) && ((*(iVar1 + 0x90) == arg1 || (arg1 == *(iVar1 + 0x98))))) {\n        return 1;\n    }\n    uVar2 = fcn.00454740(unaff_EDI);\n    return uVar2;\n}\n",
        "token_count": 217
    },
    "00454740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.00454740(uint64_t param_1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    char unaff_SIL;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    bool bVar4;\n    int64_t iStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n        param_1 = param_1 & 0xff;\n    }\n    arg2 = *0x52d26c;\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    uVar3 = uVar1;\n    if ((uVar1 == 0) && (arg2 = *0x52d26c >> 2,  uVar3 = arg2,  1 < *(*(unaff_R14 + 0x30) + 0xc4))) {\n        arg2 = 2;\n        uVar3 = arg2;\n    }\n    if (1 < uVar3) {\n        return true;\n    }\n    if (in_RAX == 0) {\n        return false;\n    }\n    if ((((unaff_DIL == '\\x15') && (unaff_SIL != '\\t')) && (unaff_SIL != '\\x12')) && (unaff_SIL != '\\x0e')) {\n        return false;\n    }\n    uVar3 = param_1;\n    piVar2 = fcn.0044c400();\n    if ((((unaff_RBX == 0xf) && (uVar3 = 0x2e656d69746e7572,  *piVar2 == 0x2e656d69746e7572)) &&\n        ((*(piVar2 + 1) == 0x61706f67 && ((*(piVar2 + 0xc) == 0x696e && (*(piVar2 + 0xe) == 'c')))))) &&\n       (arg2 = param_1 & 0xff,  param_1 == '\\0')) {\n        return true;\n    }\n    fcn.00402740(uVar3, arg2);\n    if (iStack32 < 0) {\n        bVar4 = false;\n    }\n    else {\n        if (unaff_RBX < 8) {\n            bVar4 = false;\n        }\n        else {\n            bVar4 = *piVar2 == 0x2e656d69746e7572;\n        }\n        if (bVar4) {\n            if (((unaff_RBX < 9) || (*piVar2 != 0x2e656d69746e7572)) || (*(piVar2 + 1) < 0x41)) {\n                bVar4 = false;\n            }\n            else {\n                bVar4 = *(piVar2 + 1) < 0x5b;\n            }\n        }\n        else {\n            bVar4 = true;\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 716
    },
    "00454b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00454b80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 != 0) && (in_RAX != iVar1)) {\n        fcn.00434ec0();\n        fcn.00435120();\n        fcn.00434f40();\n        fcn.00454940();\n        fcn.00453ca0(0);\n    }\n    fcn.00436c60();\n    return;\n}\n",
        "token_count": 186
    },
    "004550c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004550c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x544c00 != 0) {\n        uStack64 = SUB168(in_XMM15, 0);\n        uStack48 = SUB168(in_XMM15 >> 0x40, 0);\n        uStack56 = uStack64;\n        for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n            fcn.004551e0(&uStack64);\n        }\n        uStack64 = 0;\n        fcn.004553e0();\n        return;\n    }\n    for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00435620();\n        fcn.00435120();\n        fcn.00434f40();\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "004551e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004551e0(ulong *arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    *arg1 = in_RAX;\n    iVar1 = 0;\n    do {\n        if (unaff_RBX < iVar1) {\n            return iVar1;\n        }\n        fcn.004553e0();\n        if (arg1[3] == 0) {\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.00434f40();\n        }\n        else {\n            fcn.0044a280();\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.00435120();\n            fcn.00434f40();\n        }\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00434f40();\n        if (arg1[1] != 0) {\n            fcn.0044a280();\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.004357c0();\n            fcn.004354c0();\n            fcn.004350e0();\n            fcn.00434f40();\n        }\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00435620();\n        fcn.00435120();\n        fcn.00434f40();\n        iVar1 = iVar1 + 1;\n    } while (arg1[5] != 0);\n    return iVar1;\n}\n",
        "token_count": 413
    },
    "00455460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00455460(int64_t arg1)\n\n{\n    ulong in_RAX;\n    code *pcVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x544c08 == 0) {\n                return;\n            }\n            if ((*0x5983a4 == 0) && (unaff_RDI = unaff_R14,  *(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n                pcVar1 = vtable..0;\n            }\n            else {\n                pcVar1 = 0x4b2828;\n            }\n            if (arg1 != 0) {\n                *(*0x20 + -0x28) = in_RAX;\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = *pcVar1;\n                *(*0x20 + -0x40) = 0x4554e7;\n                (*pcVar1)();\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x40) = 0x455505;\n            in_RAX = fcn.0045e420(0);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x45551f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 600
    },
    "00455540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00455540(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar1 = *(in_RAX + 0x28);\n            *(*0x20 + -0x20) = 0x455565;\n            fcn.004556e0();\n            *(*0x20 + -0x20) = 0x45556a;\n            iVar2 = fcn.00455e40();\n            if ((*(*(*0x20 + 8) + 0x14) & 2) == 0) {\n                return iVar2;\n            }\n            if (uVar1 != 0) {\n                return iVar2 + (-(uVar1 - 1) >> 0x3f & 1);\n            }\n            *(*0x20 + -0x20) = 0x4555b4;\n            in_RAX = fcn.0045e4e0(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4555bf;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 422
    },
    "004561c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004561c0(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar4 = 0;\n    iVar5 = 0;\n    while( true ) {\n        uVar1 = *(in_RAX + 1 + iVar4);\n        uVar3 = iVar4 * 7;\n        if (uVar3 < 0) {\n            fcn.00431ba0();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        iVar5 = iVar5 + ((uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((uVar1 & 0x80) == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    if (iVar5 == 1) {\n        uVar3 = uVar3 & 0xffffffffffffff00 | *(in_RAX + 2) == '_';\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 321
    },
    "00456260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00456260(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    int64_t *piVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    int64_t *piVar15;\n    int64_t iVar16;\n    int64_t iVar17;\n    int64_t arg4;\n    int64_t iVar18;\n    int64_t iVar19;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x230 && *0x20 + -0x230 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0x2b0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x533130 == 0) {\n                return in_RAX;\n            }\n            *(*0x20 + -0x1b8) = in_XMM15;\n            *(*0x20 + -0x1a8) = in_XMM15;\n            *(*0x20 + -0x198) = in_XMM15;\n            if (*0x533068 < 9) {\n                *(*0x20 + -0x2c0) = unaff_RBP;\n                *(*0x20 + -0x2b8) = 0x4562da;\n                fcn.0045e698();\n                unaff_RBP = *(*0x20 + -0x2c0);\n                *(*0x20 + -0x1a8) = *0x20 + -0xf8;\n            }\n            *(*0x20 + -0x2b8) = 0x456305;\n            uVar5 = fcn.0040d2a0(*0x20 + -0x1b8);\n            if (*0x544c30 == NULL) {\n                piVar15 = NULL;\n                piVar6 = NULL;\n                piVar10 = NULL;\n            }\n            else {\n                piVar6 = **0x544c30;\n                piVar15 = (*0x544c30)[1];\n                piVar10 = (*0x544c30)[2];\n            }\n            if (piVar15 != NULL) {\n                *(*0x20 + -0x238) = uVar5;\n                iVar17 = *piVar6;\n                iVar11 = (-(piVar10 + -1) >> 0x3f & 8) + piVar6;\n                *(*0x20 + -0x1f0) = iVar11;\n                iVar19 = piVar15 + -1;\n                *(*0x20 + -0x240) = iVar19;\n                iVar8 = 0;\n                do {\n                    if (iVar19 <= iVar8) {\n                        return uVar5;\n                    }\n                    *(*0x20 + -0x248) = iVar8;\n                    *(*0x20 + -0x218) = iVar17;\n                    iVar16 = *(iVar11 + iVar8 * 8);\n                    *(*0x20 + -0x1f8) = iVar16;\n                    arg4 = *(iVar17 + 0x160);\n                    *(*0x20 + -0x200) = arg4;\n                    iVar18 = *(iVar17 + 0x168);\n                    *(*0x20 + -0x250) = iVar18;\n                    iVar12 = 0;\n                    while (iVar12 < iVar18) {\n                        *(*0x20 + -600) = iVar12;\n                        uVar1 = *(arg4 + iVar12 * 4);\n                        if (*(iVar17 + 0x220) == 0) {\n                            iVar19 = uVar1 + *(iVar17 + 0x128);\n                        }\n                        else {\n                            *(*0x20 + -0x2b8) = 0x45655c;\n                            piVar6 = fcn.0040f160(uVar1);\n                            iVar19 = *piVar6;\n                        }\n                        *(*0x20 + -0x220) = iVar19;\n                        uVar1 = *(iVar19 + 0x10);\n                        *(*0x20 + -0x2b8) = 0x45657f;\n                        piVar6 = fcn.0040f160(uVar1);\n                        iVar19 = *piVar6;\n                        uVar9 = piVar6[2];\n                        iVar8 = *(*0x20 + -0x220);\n                        for (iVar11 = 0; iVar11 < piVar6[1]; iVar11 = iVar11 + 1) {\n                            iVar17 = *(iVar19 + iVar11 * 8);\n                            if (iVar17 == iVar8) goto code_r0x004564e2;\n                        }\n                        uVar13 = piVar6[1] + 1;\n                        if (uVar9 < uVar13) {\n                            *(*0x20 + -0x2b8) = 0x4565b9;\n                            iVar19 = fcn.00445800(uVar9);\n                            iVar8 = *(*0x20 + -0x220);\n                        }\n                        *(*0x20 + -0x210) = iVar19;\n                        *(*0x20 + -0x260) = uVar13;\n                        *(*0x20 + -0x268) = uVar9;\n                        if (*0x5985b0 == 0) {\n                            *(iVar19 + -8 + uVar13 * 8) = iVar8;\n                        }\n                        else {\n                            *(*0x20 + -0x2b8) = 0x4565f3;\n                            fcn.0045e0e0(uVar9, iVar19, iVar17, arg4);\n                        }\n                        uVar9 = *(iVar8 + 0x10);\n                        *(*0x20 + -0x2b8) = 0x456607;\n                        puVar7 = fcn.0040f4a0(uVar9);\n                        puVar7[1] = *(*0x20 + -0x260);\n                        puVar7[2] = *(*0x20 + -0x268);\n                        if (*0x5985b0 == 0) {\n                            *puVar7 = *(*0x20 + -0x210);\n                        }\n                        else {\n                            *(*0x20 + -0x2b8) = 0x456645;\n                            fcn.0045e0a0(uVar9, *(*0x20 + -0x210), iVar17, arg4);\n                        }\ncode_r0x004564e2:\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar8 = *(*0x20 + -0x248);\n                        iVar11 = *(*0x20 + -0x1f0);\n                        iVar19 = *(*0x20 + -0x240);\n                        iVar16 = *(*0x20 + -0x1f8);\n                        iVar17 = *(*0x20 + -0x218);\n                        arg4 = *(*0x20 + -0x200);\n                        iVar18 = *(*0x20 + -0x250);\n                        iVar12 = *(*0x20 + -600) + 1;\n                    }\n                    if (*(iVar16 + 0x220) == 0) {\n                        *(*0x20 + -0x2b8) = 0x4563d3;\n                        uVar5 = fcn.0040d2a0(0);\n                        uVar13 = *0x545658 + 1;\n                        uVar9 = *0x545660;\n                        iVar19 = *0x545650;\n                        if (*0x545660 < uVar13) {\n                            *(*0x20 + -0x230) = uVar5;\n                            *(*0x20 + -0x2b8) = 0x45640c;\n                            iVar8 = *0x545650;\n                            iVar19 = fcn.00445800(*0x545660);\n                            uVar9 = *0x545660;\n                            iVar11 = iVar19;\n                            if (*0x5985b0 != 0) {\n                                *(*0x20 + -0x2b8) = 0x456431;\n                                iVar19 = fcn.0045df80(*0x545660, iVar8, iVar17, arg4);\n                                iVar11 = *0x545650;\n                            }\n                            *0x545650 = iVar11;\n                            uVar5 = *(*0x20 + -0x230);\n                        }\n                        *0x545658 = uVar13;\n                        if (*0x5985b0 == 0) {\n                            *(iVar19 + -8 + uVar13 * 8) = uVar5;\n                            iVar19 = *(*0x20 + -0x1f8);\n                            *(iVar19 + 0x220) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x2b8) = 0x45646f;\n                            fcn.0045df80(uVar9, iVar19, iVar17, arg4);\n                            iVar19 = *(*0x20 + -0x1f8);\n                            *(*0x20 + -0x2b8) = 0x456489;\n                            fcn.0045df80(iVar19, iVar19 + 0x220, iVar17, arg4);\n                        }\n                        iVar8 = *(iVar19 + 0x160);\n                        *(*0x20 + -0x200) = iVar8;\n                        iVar11 = *(iVar19 + 0x168);\n                        *(*0x20 + -0x250) = iVar11;\n                        iVar17 = 0;\n                        while (iVar17 < iVar11) {\n                            *(*0x20 + -600) = iVar17;\n                            iVar2 = *(iVar8 + iVar17 * 4);\n                            *(*0x20 + -0x26c) = iVar2;\n                            iVar17 = iVar2 + *(iVar19 + 0x128);\n                            *(*0x20 + -0x208) = iVar17;\n                            uVar1 = *(iVar17 + 0x10);\n                            *(*0x20 + -0x2b8) = 0x4566a5;\n                            piVar6 = fcn.0040f160(uVar1);\n                            iVar19 = *piVar6;\n                            *(*0x20 + -0x210) = iVar19;\n                            iVar8 = piVar6[1];\n                            *(*0x20 + -0x260) = iVar8;\n                            iVar11 = 0;\n                            while (iVar11 < iVar8) {\n                                *(*0x20 + -0x268) = iVar11;\n                                *(*0x20 + -0x228) = *(iVar19 + iVar11 * 8);\n                                *(*0x20 + -0x1e8) = in_XMM15;\n                                *(*0x20 + -0x1d8) = in_XMM15;\n                                *(*0x20 + -0x1c8) = in_XMM15;\n                                *(*0x20 + -0x2c0) = unaff_RBP;\n                                *(*0x20 + -0x2b8) = 0x45678f;\n                                fcn.0045e6b9();\n                                unaff_RBP = *(*0x20 + -0x2c0);\n                                *(*0x20 + -0x1d8) = *0x20 + -0x188;\n                                *(*0x20 + -0x2b8) = 0x4567a8;\n                                uVar4 = fcn.0044a560();\n                                *(*0x20 + -0x1dc) = uVar4;\n                                *(*0x20 + -0x2b8) = 0x4567cc;\n                                cVar3 = fcn.00456820(*0x20 + -0x1e8);\n                                if (cVar3 != '\\0') {\n                                    uVar5 = *(*0x20 + -0x228);\n                                    goto code_r0x004566d7;\n                                }\n                                iVar19 = *(*0x20 + -0x210);\n                                iVar8 = *(*0x20 + -0x260);\n                                iVar11 = *(*0x20 + -0x268) + 1;\n                            }\n                            uVar5 = *(*0x20 + -0x208);\ncode_r0x004566d7:\n                            *(*0x20 + -0x228) = uVar5;\n                            uVar9 = *(*0x20 + -0x26c);\n                            *(*0x20 + -0x2b8) = 0x4566fe;\n                            puVar7 = fcn.0040f4a0(uVar9);\n                            if (*0x5985b0 == 0) {\n                                *puVar7 = *(*0x20 + -0x228);\n                            }\n                            else {\n                                *(*0x20 + -0x2b8) = 0x456729;\n                                fcn.0045e0a0(uVar9, *(*0x20 + -0x228), iVar17, arg4);\n                            }\n                            iVar19 = *(*0x20 + -0x1f8);\n                            iVar8 = *(*0x20 + -0x200);\n                            iVar11 = *(*0x20 + -0x250);\n                            iVar17 = *(*0x20 + -600) + 1;\n                        }\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar8 = *(*0x20 + -0x248);\n                        iVar11 = *(*0x20 + -0x1f0);\n                        iVar19 = *(*0x20 + -0x240);\n                        iVar16 = *(*0x20 + -0x1f8);\n                    }\n                    iVar8 = iVar8 + 1;\n                    iVar17 = iVar16;\n                } while( true );\n            }\n            *(*0x20 + -0x2b8) = 0x456805;\n            fcn.0045e420(0);\n        }\n        *(puVar14 + -8) = 0x45680b;\n        in_RAX = fcn.0045bdc0();\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 3208
    },
    "00458ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00458ce0(void)\n\n{\n    if (*0x5985b0 != '\\0') {\n        fcn.004037e0();\n    }\n    fcn.00463be0();\n    return;\n}\n",
        "token_count": 50
    },
    "00458d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00458d40(ulong arg1)\n\n{\n    if (*0x5985b0 != '\\0') {\n        fcn.004037e0();\n    }\n    fcn.00463ba0();\n    return;\n}\n",
        "token_count": 53
    },
    "00459060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00459060(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = in_RAX;\n    if (*0x5985b0 != 0) {\n        fcn.0045df80(arg1, arg2, arg3, arg4);\n        uVar1 = *0x544c48;\n    }\n    *0x544c48 = uVar1;\n    return;\n}\n",
        "token_count": 169
    },
    "004591c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004591c0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x4591e9;\n            iVar3 = fcn.0042d480();\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x10) = iVar3 + 0x28;\n            *(*0x20 + -0x38) = 0x459205;\n            fcn.0040a520();\n            iVar3 = *(*0x20 + -0x18);\n            if ((*(iVar3 + 0x20) == 0) || (*(iVar3 + 0x20) == 1)) {\n                if ((*(iVar3 + 0x18) == 0) || (*(iVar3 + 0x18) == 1)) {\n                    *(iVar3 + 8) = *(*0x20 + 8);\n                    *(iVar3 + 0x30) = 0;\n                    uVar4 = *(iVar3 + 0x10);\n                    while( true ) {\n                        if ((uVar4 >> 1 & 1) == 0) {\n                            bVar6 = false;\n                        }\n                        else {\n                            LOCK();\n                            bVar6 = uVar4 == *(iVar3 + 0x10);\n                            if (bVar6) {\n                                *(iVar3 + 0x10) = uVar4 ^ 2;\n                            }\n                            bVar6 = !bVar6;\n                        }\n                        if (!bVar6) break;\n                        uVar4 = *(iVar3 + 0x10);\n                    }\n                    *(iVar3 + 0x38) = *(iVar3 + 0x38) + 1;\n                    *(iVar3 + 0x18) = 0;\n                    *(iVar3 + 0x88) = 0;\n                    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n                    *(iVar3 + 0x20) = 0;\n                    *(iVar3 + 0xe0) = 0;\n                    *(iVar3 + 0xe8) = iVar3;\n                    uVar4 = *(iVar3 + 0x10);\n                    uVar1 = *(iVar3 + 0x30);\n                    if (*(iVar3 + 0x88) < 0) {\n                        uVar1 = *(iVar3 + 0x30) | 4;\n                    }\n                    while( true ) {\n                        LOCK();\n                        if (uVar4 == *(iVar3 + 0x10)) break;\n                        uVar4 = *(iVar3 + 0x10);\n                    }\n                    *(iVar3 + 0x10) = uVar4 & 2 | uVar1;\n                    *(*0x20 + -0x38) = 0x4592e5;\n                    fcn.0040a740();\n                    *(*0x20 + -0x38) = 0x4592f4;\n                    iVar2 = fcn.0042d640();\n                    if (iVar2 != 0) {\n                        *(*0x20 + -0x1c) = iVar2;\n                        *(*0x20 + -0x38) = 0x45930d;\n                        fcn.0042d300();\n                        return 0;\n                    }\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x459345;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x38) = 0x459356;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x459365;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1036
    },
    "00459380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00459380(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x30) != '\\0') {\n                if ((*(in_RAX + 0x20) == 0) || (*(in_RAX + 0x20) == 1)) {\n                    if ((*(in_RAX + 0x18) == 0) || (*(in_RAX + 0x18) == 1)) {\n                        *(*0x20 + -0x20) = 0x4593cd;\n                        fcn.0042d300();\n                        return;\n                    }\n                    *(*0x20 + -0x20) = 0x4593e8;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x20) = 0x4593f9;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x20) = 0x45940a;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x459415;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 416
    },
    "00459420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00459420(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    uint32_t uVar6;\n    int64_t arg2;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x28;\n            *(*0x20 + -0x40) = 0x459451;\n            fcn.0040a520();\n            iVar5 = *(*0x20 + 8);\n            if (*(iVar5 + 0x30) == '\\0') break;\n            *(*0x20 + -0x40) = 0x45964c;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x459657;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n    *(iVar5 + 0x30) = 1;\n    *(iVar5 + 0x38) = *(iVar5 + 0x38) + 1;\n    *(iVar5 + 0x90) = *(iVar5 + 0x90) + 1;\n    uVar10 = *(iVar5 + 0x10);\n    uVar6 = *(iVar5 + 0x30);\n    if (*(iVar5 + 0x88) < 0) {\n        uVar6 = *(iVar5 + 0x30) | 4;\n    }\n    arg3 = uVar6 | 8;\n    if (*(iVar5 + 0xe0) < 0) {\n        uVar6 = uVar6 | 8;\n    }\n    while( true ) {\n        LOCK();\n        if (uVar10 == *(iVar5 + 0x10)) break;\n        uVar10 = *(iVar5 + 0x10);\n    }\n    *(iVar5 + 0x10) = uVar10 & 2 | uVar6;\n    do {\n        uVar2 = *(iVar5 + 0x18);\n        if (uVar2 == 1) {\n            iVar7 = 0;\n            goto code_r0x00459502;\n        }\n        if (uVar2 == 0) {\n            iVar7 = 0;\n            goto code_r0x00459502;\n        }\n        *(*0x20 + -0x28) = uVar2;\n        LOCK();\n        puVar1 = iVar5 + 0x18;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * *puVar1;\n    } while (uVar2 != uVar3);\n    iVar7 = *(*0x20 + -0x28);\n    if (*(*0x20 + -0x28) == 2) {\n        iVar7 = 0;\n    }\ncode_r0x00459502:\n    do {\n        arg2 = 0;\n        uVar2 = *(iVar5 + 0x20);\n        if (uVar2 == 1) {\n            iVar9 = 0;\n            goto code_r0x0045953a;\n        }\n        if (uVar2 == 0) {\n            iVar9 = 0;\n            goto code_r0x0045953a;\n        }\n        *(*0x20 + -0x28) = uVar2;\n        LOCK();\n        puVar1 = iVar5 + 0x20;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * *puVar1;\n        if (uVar2 == uVar3) {\n            iVar9 = *(*0x20 + -0x28);\n            if (*(*0x20 + -0x28) == 2) {\n                iVar9 = arg2;\n            }\ncode_r0x0045953a:\n            *(*0x20 + -0x18) = iVar7;\n            *(*0x20 + -0x20) = iVar9;\n            if (*(iVar5 + 0x58) != 0) {\n                *(*0x20 + -0x40) = 0x459554;\n                fcn.0044d880();\n                if (*0x5985b0 == 0) {\n                    iVar5 = *(*0x20 + 8);\n                    *(iVar5 + 0x58) = 0;\n                }\n                else {\n                    arg2 = 0;\n                    *(*0x20 + -0x40) = 0x459585;\n                    iVar5 = fcn.0045e0a0(*(*0x20 + 8) + 0x58, 0, arg3, in_R9);\n                }\n            }\n            if (*(iVar5 + 0xb0) != 0) {\n                *(*0x20 + -0x40) = 0x4595a8;\n                fcn.0044d880();\n                if (*0x5985b0 == 0) {\n                    *(*(*0x20 + 8) + 0xb0) = 0;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x4595d6;\n                    fcn.0045e080(0, arg2, arg3, in_R9);\n                }\n            }\n            *(*0x20 + -0x40) = 0x4595e5;\n            fcn.0040a740();\n            iVar4 = *0x598398;\n            if (*(*0x20 + -0x18) != 0) {\n                LOCK();\n                *0x598398 = *0x598398 + -1;\n                *(*0x20 + -0x40) = 0x45960b;\n                fcn.004361e0(iVar4);\n            }\n            iVar4 = *0x598398;\n            if (*(*0x20 + -0x20) != 0) {\n                LOCK();\n                *0x598398 = *0x598398 + -1;\n                *(*0x20 + -0x40) = 0x459631;\n                fcn.004361e0(iVar4);\n            }\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1587
    },
    "004597a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004597a0(ulong param_1, int64_t param_2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    char cVar5;\n    int64_t *unaff_R14;\n    uchar auStackX8 [32];\n    int64_t iStack56;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    if (unaff_R14[0xe] < auStackX8) {\n        fcn.00433580();\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    unaff_R14[0x15] = 0;\n    iVar2 = *(unaff_R14[6] + 0xb0);\n    *(unaff_R14[6] + 0xb0) = 0;\n    cVar5 = fcn.0043dd20();\n    if (cVar5 != '\\0') {\n        if (*0x541f04 != '\\0') {\n            fcn.0045bc80();\n        }\n        if (*0x54a530 != '\\0') {\n            iVar3 = *(unaff_R14[6] + 0xa0);\n            if ((iVar3 != iVar2) || (*(iVar3 + 0x14) != *(unaff_R14[6] + 0x26c))) {\n                fcn.0045bc80();\n            }\n        }\n        piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n        fcn.00437a40(2);\n        unaff_R14[0xe] = 0;\n        *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n        if (*(unaff_R14 + 0xb1) == '\\0') {\n            unaff_R14[2] = *unaff_R14 + 0x13a0;\n        }\n        else {\n            unaff_R14[2] = -0x522;\n        }\n        *(unaff_R14 + 0xb7) = 0;\n        if ((*0x546080 != '\\0') && (cVar5 = fcn.00454fe0(),  cVar5 == '\\0')) {\n            fcn.00436000();\n        }\n        return;\n    }\n    unaff_R14[0x1a] = 0;\n    if (*0x54a530 != '\\0') {\n        while ((iVar2 != 0 && (param_2 = unaff_R14[6],  *(param_2 + 0x26c) == *(iVar2 + 0x14)))) {\n            iStack56 = 0x4b2ad0;\n            fcn.0045bc80();\n        }\n        fcn.0045de00(unaff_R14, param_2);\n        unaff_R14[0x1a] = iStack56;\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    fcn.0045bc00();\n    unaff_R14[0xe] = 0;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    *(unaff_R14 + 0xb7) = 0;\n    return;\n}\n",
        "token_count": 817
    },
    "00459a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00459a60(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (((3 < in_RAX) || (*0x598390 < 2)) || (*0x598388 <= *0x546058 + 1 + *0x54605c)) {\n        return 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    do {\n    } while (*(iVar1 + 0x194) != *(iVar1 + 0x194));\n    if ((*(iVar1 + 0x194) == *(iVar1 + 400)) && (*(iVar1 + 0x998) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "00459d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00459d60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t *puVar5;\n    ulong *puVar6;\n    uint64_t arg1;\n    uint64_t arg2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    if (*0x545730 == 0) {\n        iVar3 = fcn.0040d220();\n        if (*0x5985b0 != 0) {\n            fcn.0045df80(param_1, param_2, param_3, param_4);\n            iVar3 = *0x545730;\n        }\n        *0x545730 = iVar3;\n        uVar4 = fcn.0040d220();\n        if (*0x5985b0 != 0) {\n            fcn.0045df80(param_1, param_2, param_3, param_4);\n            uVar4 = *0x545738;\n        }\n        *0x545738 = uVar4;\n        *0x545728 = 0xffffffff;\n    }\n    uVar4 = *0x545738;\n    puVar5 = fcn.0040fc40(in_RAX);\n    uVar2 = *0x545728;\n    uVar1 = *puVar5;\n    if (uVar4 == '\\0') {\n        arg1 = *0x545728;\n        *0x545728 = *0x545728 - 1;\n        arg2 = *0x545728;\n        puVar6 = fcn.0040f4a0(arg1);\n        if (*0x5985b0 == 0) {\n            *puVar6 = in_RAX;\n        }\n        else {\n            fcn.0045e080(in_RAX, arg2, param_3, param_4);\n        }\n        puVar5 = fcn.0040fde0(in_RAX);\n        *puVar5 = uVar2;\n        uVar1 = uVar2;\n    }\n    fcn.0040a740();\n    return uVar1;\n}\n",
        "token_count": 557
    },
    "0045a240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0045a240(uchar param_1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int64_t in_RAX;\n    int64_t **ppiVar3;\n    ulong *puVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t *arg1;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX != 0) && ((*(in_RAX + 0x17) & 0x1f) == 0x13)) {\n                *(*0x20 + -0x98) = in_XMM15;\n                *(*0x20 + -0x88) = in_XMM15;\n                *(*0x20 + -0x78) = in_XMM15;\n                *(*0x20 + -0x68) = in_XMM15;\n                if ((*(in_RAX + 0x14) & 1) == 0) {\n                    iVar7 = 0x38;\n                }\n                else {\n                    iVar7 = 0x48;\n                }\n                arg1_00 = *(in_RAX + 0x30);\n                if (arg1_00 < 0x100001) {\n                    *(*0x20 + -0xb0) = in_RAX;\n                    *(*0x20 + -0xc0) = iVar7 + in_RAX;\n                    *(*0x20 + -0xb8) = unaff_RBX;\n                    *(*0x20 + -200) = arg1_00;\n                    iVar7 = 0;\n                    while (iVar7 < arg1_00) {\n                        *(*0x20 + -0xd0) = iVar7;\n                        *(*0x20 + -0x100) = 0x45a305;\n                        fcn.0044cdc0();\n                        in_RAX = *(*0x20 + -0xb0);\n                        unaff_RBX = *(*0x20 + -0xb8);\n                        arg1_00 = *(*0x20 + -200);\n                        iVar7 = *(*0x20 + -0xd0) + 1;\n                    }\n                    arg2 = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x60) = arg2;\n                    uVar1 = *(in_RAX + 0x14);\n                    arg1_00 = uVar1;\n                    uVar2 = *(in_RAX + 0x30);\n                    piVar10 = uVar2;\n                    arg1 = (*(in_RAX + 0x32) & 0x7fff) + uVar2 & 0xffff;\n                    if (piVar10 <= arg1) {\n                        arg4 = uVar2;\n                        arg3 = piVar10 << 3;\n                        uVar9 = piVar10 + -0x20000 >> 0x3f & arg3;\n                        arg1 = arg1 - arg4;\n                        if (arg1 == 0x1) {\n                            if ((uVar1 & 1) == 0) {\n                                iVar7 = 0x38;\n                            }\n                            else {\n                                iVar7 = 0x48;\n                            }\n                            arg1 = *(iVar7 + in_RAX + uVar9);\n                            if (*arg1 == 8) {\n                                if ((uVar1 & 1) == 0) {\n                                    iVar7 = 0x38;\n                                }\n                                else {\n                                    iVar7 = 0x48;\n                                }\n                                uVar6 = *(*(iVar7 + in_RAX + uVar9) + 0x17) & 0x1f;\n                                arg1 = uVar6;\n                                cVar5 = uVar6;\n                                if ((cVar5 != '\\r') && (cVar5 != '\\x0e')) {\n                                    if (*0x52d370 == 0) {\n                                        *(*0x20 + -0x78) = arg2 + 8;\n                                    }\n                                    arg1 = (*(*0x20 + -0x78) + 7U & 0xfffffffffffffff8) + *(*0x20 + -0x70);\n                                    if (arg1 < 0x201) {\n                                        *(*0x20 + -0xa8) = 0;\n                                        *(*0x20 + -0xa0) = 0;\n                                        *(*0x20 + -0xa8) = unaff_RBX;\n                                        *(*0x20 + -0xa0) = 0;\n                                        *(*0x20 + -0x100) = 0x45a454;\n                                        fcn.0040a520();\n                                        iVar7 = *0x598328;\n                                        *(*0x20 + -0x100) = 0x45a46c;\n                                        ppiVar3 = fcn.0040d6c0(*0x20 + -0xa8);\n                                        arg1 = *ppiVar3;\n                                        if (iVar7 != '\\0') {\n                                            *(*0x20 + -0xd8) = arg1;\n                                            *(*0x20 + -0x100) = 0x45a5f9;\n                                            fcn.0040a740();\n                                            return *(*0x20 + -0xd8) * 5 + 0x461480;\n                                        }\n                                        iVar7 = *0x598328;\n                                        if (*0x598328 == 0) {\n                                            *(*0x20 + -0x100) = 0x45a487;\n                                            iVar7 = fcn.0040d220();\n                                            if (*0x5985b0 != 0) {\n                                                *(*0x20 + -0x100) = 0x45a4a5;\n                                                fcn.0045df80(arg1, arg2, arg3, arg4);\n                                                iVar7 = *0x598328;\n                                            }\n                                        }\n                                        *0x598328 = iVar7;\n                                        bVar11 = *0x598330 < 2000;\n                                        if (*0x598330 < 2000) {\n                                            *(*0x20 + -0x108) = unaff_RBP;\n                                            *(*0x20 + -0x100) = 0x45a4d3;\n                                            iVar7 = fcn.0045e6d0();\n                                            unaff_RBP = *(*0x20 + -0x108);\n                                            *(*0x20 + -0x58) = *(*0x20 + -0xa8);\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x98);\n                                            *(*0x20 + -0x44) = *(*0x20 + -0x94);\n                                            *(*0x20 + -0x40) = *(*0x20 + -0x90);\n                                            *(*0x20 + -0x3c) = *(*0x20 + -0x8c);\n                                            *(*0x20 + -0x38) = *(*0x20 + -0x88);\n                                            *(*0x20 + -0x34) = *(*0x20 + -0x84);\n                                            *(*0x20 + -0x30) = *(*0x20 + -0x80);\n                                            *(*0x20 + -0x2c) = *(*0x20 + -0x7c);\n                                            *(*0x20 + -0x28) = *(*0x20 + -0x78);\n                                            *(*0x20 + -0x24) = *(*0x20 + -0x74);\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x1c) = *(*0x20 + -0x6c);\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x68);\n                                            *(*0x20 + -0x14) = *(*0x20 + -100);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0xc) = *(*0x20 + -0x5c);\n                                            if (bVar11) {\n                                                *(*0x20 + -0xe0) = iVar7;\n                                                *(*0x20 + -200) = iVar7 * 5;\n                                                if (*0x5985b0 == 0) {\n                                                    *(*0x20 + -0x108) = unaff_RBP;\n                                                    *(*0x20 + -0x100) = 0x45a56f;\n                                                    fcn.0045ea3a();\n                                                }\n                                                else {\n                                                    *(*0x20 + -0x100) = 0x45a58c;\n                                                    fcn.004112e0(*0x20 + -0x58);\n                                                }\n                                                *(*0x20 + -0x100) = 0x45a5a5;\n                                                puVar4 = fcn.0040db00(*0x20 + -0xa8);\n                                                *puVar4 = *(*0x20 + -0xe0);\n                                                *0x598330 = *0x598330 + 1;\n                                                *(*0x20 + -0x100) = 0x45a5c5;\n                                                fcn.0040a740();\n                                                return *(*0x20 + -200) + 0x461480;\n                                            }\n                                            arg1 = 0x7d0;\n                                            *(*0x20 + -0x100) = 0x45a627;\n                                            fcn.0045e420(2000);\n                                        }\n                                        *(*0x20 + -0x100) = 0x45a636;\n                                        fcn.0040a740();\n                                        *(*0x20 + -0x100) = 0x45a647;\n                                        fcn.00433580();\n                                    }\n                                    *(*0x20 + -0x100) = 0x45a65a;\n                                    fcn.00432de0();\n                                }\n                                *(*0x20 + -0x100) = 0x45a66d;\n                                fcn.00432de0();\n                            }\n                            *(*0x20 + -0x100) = 0x45a685;\n                            fcn.00432de0();\n                        }\n                        *(*0x20 + -0x100) = 0x45a698;\n                        fcn.00432de0();\n                    }\n                    *(*0x20 + -0x100) = 0x45a6a5;\n                    fcn.0045e4e0(arg1);\n                }\n                *(*0x20 + -0x100) = 0x45a6b2;\n                fcn.0045e460(arg1_00, 0x100000);\n                param_1 = arg1_00;\n            }\n            unaff_RBX = 0x4ca2f8;\n            *(*0x20 + -0x100) = 0x45a6c5;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = param_1;\n        *(puVar8 + -8) = 0x45a6d9;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        param_1 = puVar8[0x18];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2762
    },
    "0045a700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045a700(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    ulong uStackX32;\n    uchar auStack32 [8];\n    ulong uStack24;\n    uint uStack16;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + *0x598520) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + *0x598520);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x30);\n    if (*0x598351 == '\\0') {\n        *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_LoadLibraryW;\n        *(iVar2 + 0x2c8) = 1;\n        *(iVar2 + 0x2d0) = auStackX16;\n    }\n    else {\n        *(iVar2 + 0x2c0) = *0x544b80;\n        *(iVar2 + 0x2c8) = 3;\n        uStack24 = 0;\n        uStack16 = 0x800;\n        *(iVar2 + 0x2d0) = auStack32;\n    }\n    fcn.00403880(iVar2 + 0x2c0);\n    iStackX24 = *(iVar2 + 0x2d8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043f100();\n    return;\n}\n",
        "token_count": 453
    },
    "0045db80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045db80(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t in_GS_OFFSET;\n    code *pcStackX8;\n    ulong uStackX16;\n    \n    piVar5 = *(in_GS_OFFSET + *0x598520);\n    iVar1 = *piVar5;\n    if (((iVar1 != 0) && (iVar1 != (*(iVar1 + 0x30))[10])) && (iVar2 = **(iVar1 + 0x30),  iVar1 != iVar2)) {\n        pcVar4 = fcn.0045ae60();\n        *piVar5 = iVar2;\n        uVar6 = *(iVar2 + 0x38) - 0x40U & 0xfffffffffffffff0;\n        *(uVar6 + 0x30) = iVar1;\n        *(uVar6 + 0x28) = *(iVar1 + 8) - *0x20;\n        *(uVar6 - 8) = 0x45dbe3;\n        uVar3 = (*pcVar4)(uStackX16);\n        iVar1 = *(*(uVar6 + 0x30) + 8);\n        iVar2 = *(uVar6 + 0x28);\n        **(in_GS_OFFSET + *0x598520) = *(uVar6 + 0x30);\n        *((iVar1 - iVar2) + 0x18) = uVar3;\n        return;\n    }\n    uVar3 = (*pcStackX8)(uStackX16);\n    *(*0x20 + 0x18) = uVar3;\n    return;\n}\n",
        "token_count": 394
    },
    "0045de00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045de00(ulong noname_0, ulong arg2)\n\n{\n    if (*0x598a8b == '\\x01') {\n        rdtscp();\n    }\n    else {\n        rdtsc();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "0045de40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045de40(uint64_t arg1)\n\n{\n    uchar (*in_RAX) [16];\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    uchar auVar9 [16];\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    uchar auVar12 [16];\n    uchar auVar13 [16];\n    \n    if (*0x59834f == '\\0') {\n        uVar1 = unaff_RBX ^ *0x598600 ^ 0xa0761d6478bd642f;\n        if (arg1 == 0) {\n            return uVar1;\n        }\n        if (arg1 < 4) {\n            uVar2 = CONCAT12(in_RAX[-1][arg1 + 0xf], CONCAT11((*in_RAX)[arg1 >> 1], (*in_RAX)[0]));\n            uVar3 = 0;\n        }\n        else if (arg1 == 4) {\n            uVar2 = **in_RAX;\n            uVar3 = **in_RAX;\n        }\n        else if (arg1 < 8) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 0xc);\n        }\n        else if (arg1 == 8) {\n            uVar2 = **in_RAX;\n            uVar3 = uVar2;\n        }\n        else if (arg1 < 0x11) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 8);\n        }\n        else {\n            uVar3 = arg1;\n            uVar2 = uVar1;\n            uVar4 = uVar1;\n            if (0x30 < arg1) {\n                for (; 0x30 < uVar3; uVar3 = uVar3 - 0x30) {\n                    auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                    auVar6 = ZEXT816(*(in_RAX[1] + 8) ^ uVar2) * ZEXT816(*in_RAX[1] ^ 0x8ebc6af09c88c6e3);\n                    auVar7 = ZEXT816(*(in_RAX[2] + 8) ^ uVar4) * ZEXT816(*in_RAX[2] ^ 0x589965cc75374cc3);\n                    uVar1 = SUB168(auVar5 >> 0x40, 0) ^ SUB168(auVar5, 0);\n                    in_RAX = in_RAX[3];\n                    uVar2 = SUB168(auVar6 >> 0x40, 0) ^ SUB168(auVar6, 0);\n                    uVar4 = SUB168(auVar7 >> 0x40, 0) ^ SUB168(auVar7, 0);\n                }\n                uVar1 = uVar1 ^ uVar2 ^ uVar4;\n            }\n            for (; 0x10 < uVar3; uVar3 = uVar3 - 0x10) {\n                auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                uVar1 = SUB168(auVar5 >> 0x40, 0) ^ SUB168(auVar5, 0);\n                in_RAX = in_RAX[1];\n            }\n            uVar2 = *(in_RAX[-1] + uVar3);\n            uVar3 = *(in_RAX[-1] + uVar3 + 8);\n        }\n        auVar5 = ZEXT816(uVar1 ^ uVar3) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n        auVar5 = ZEXT816(SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n        return SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n    }\n    auVar5 = pinsrw(ZEXT816(unaff_RBX), arg1, 4);\n    auVar5 = pshufhw(auVar5, auVar5, 0);\n    auVar6 = aesenc(auVar5 ^ *0x598940, auVar5 ^ *0x598940);\n    if (arg1 < 0x10) {\n        if (arg1 == 0) {\n            auVar5 = aesenc(auVar6, auVar6);\n            return SUB168(auVar5, 0);\n        }\n        if ((in_RAX[1] & 0xff0) == 0) {\n            auVar5 = pshufb(*(in_RAX[-1] + arg1), *(arg1 * 0x10 + 0x4cb360));\n        }\n        else {\n            auVar5 = *in_RAX & *(arg1 * 0x10 + 0x4cb260);\n        }\n    }\n    else {\n        if (arg1 != 0x10) {\n            if (arg1 < 0x21) {\n                auVar5 = aesenc(auVar5 ^ *0x598950, auVar5 ^ *0x598950);\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                return SUB168(auVar5, 0) ^ SUB168(auVar6, 0);\n            }\n            if (arg1 < 0x41) {\n                auVar7 = aesenc(auVar5 ^ *0x598950, auVar5 ^ *0x598950);\n                auVar8 = aesenc(auVar5 ^ *0x598960, auVar5 ^ *0x598960);\n                auVar5 = aesenc(auVar5 ^ *0x598970, auVar5 ^ *0x598970);\n                auVar8 = *(in_RAX[-2] + arg1) ^ auVar8;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                return SUB168(auVar5, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar8, 0);\n            }\n            if (arg1 < 0x81) {\n                auVar7 = aesenc(auVar5 ^ *0x598950, auVar5 ^ *0x598950);\n                auVar8 = aesenc(auVar5 ^ *0x598960, auVar5 ^ *0x598960);\n                auVar9 = aesenc(auVar5 ^ *0x598970, auVar5 ^ *0x598970);\n                auVar10 = aesenc(auVar5 ^ *0x598980, auVar5 ^ *0x598980);\n                auVar11 = aesenc(auVar5 ^ *0x598990, auVar5 ^ *0x598990);\n                auVar12 = aesenc(auVar5 ^ *0x5989a0, auVar5 ^ *0x5989a0);\n                auVar5 = aesenc(auVar5 ^ *0x5989b0, auVar5 ^ *0x5989b0);\n                auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n                auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n                auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(in_RAX[2] ^ auVar8, in_RAX[2] ^ auVar8);\n                auVar9 = aesenc(in_RAX[3] ^ auVar9, in_RAX[3] ^ auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar13 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar9 = aesenc(auVar10, auVar10);\n                auVar10 = aesenc(auVar11, auVar11);\n                auVar11 = aesenc(auVar12, auVar12);\n                auVar12 = aesenc(auVar13, auVar13);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                       SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n            }\n            auVar7 = aesenc(auVar5 ^ *0x598950, auVar5 ^ *0x598950);\n            auVar8 = aesenc(auVar5 ^ *0x598960, auVar5 ^ *0x598960);\n            auVar9 = aesenc(auVar5 ^ *0x598970, auVar5 ^ *0x598970);\n            auVar10 = aesenc(auVar5 ^ *0x598980, auVar5 ^ *0x598980);\n            auVar11 = aesenc(auVar5 ^ *0x598990, auVar5 ^ *0x598990);\n            auVar12 = aesenc(auVar5 ^ *0x5989a0, auVar5 ^ *0x5989a0);\n            auVar5 = aesenc(auVar5 ^ *0x5989b0, auVar5 ^ *0x5989b0);\n            auVar6 = *(in_RAX[-8] + arg1) ^ auVar6;\n            auVar7 = *(in_RAX[-7] + arg1) ^ auVar7;\n            auVar8 = *(in_RAX[-6] + arg1) ^ auVar8;\n            auVar9 = *(in_RAX[-5] + arg1) ^ auVar9;\n            auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n            auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n            auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n            auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n            uVar1 = arg1 - 1 >> 7;\n            do {\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, *in_RAX);\n                auVar7 = aesenc(auVar7, in_RAX[1]);\n                auVar8 = aesenc(auVar8, in_RAX[2]);\n                auVar9 = aesenc(auVar9, in_RAX[3]);\n                auVar10 = aesenc(auVar10, in_RAX[4]);\n                auVar11 = aesenc(auVar11, in_RAX[5]);\n                auVar12 = aesenc(auVar12, in_RAX[6]);\n                auVar5 = aesenc(auVar5, in_RAX[7]);\n                in_RAX = in_RAX[8];\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            auVar13 = aesenc(auVar5, auVar5);\n            auVar5 = aesenc(auVar6, auVar6);\n            auVar6 = aesenc(auVar7, auVar7);\n            auVar7 = aesenc(auVar8, auVar8);\n            auVar8 = aesenc(auVar9, auVar9);\n            auVar9 = aesenc(auVar10, auVar10);\n            auVar10 = aesenc(auVar11, auVar11);\n            auVar11 = aesenc(auVar12, auVar12);\n            auVar12 = aesenc(auVar13, auVar13);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                   SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n        }\n        auVar5 = *in_RAX;\n    }\n    auVar5 = aesenc(auVar5 ^ auVar6, auVar5 ^ auVar6);\n    auVar5 = aesenc(auVar5, auVar5);\n    auVar5 = aesenc(auVar5, auVar5);\n    return SUB168(auVar5, 0);\n}\n",
        "token_count": 3918
    },
    "0045de60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045de60(void)\n\n{\n    uchar (*pauVar1) [16];\n    uchar (*pauVar2) [16];\n    uchar (**in_RAX) [16];\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auVar4 [16];\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    uchar auVar9 [16];\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    uchar auVar12 [16];\n    \n    if (*0x59834f == '\\0') {\n        while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n            fcn.0045bdc0();\n        }\n        uVar3 = fcn.00408e80(in_RAX[1]);\n        return uVar3;\n    }\n    pauVar1 = in_RAX[1];\n    pauVar2 = *in_RAX;\n    auVar4 = pinsrw(ZEXT816(unaff_RBX), pauVar1, 4);\n    auVar4 = pshufhw(auVar4, auVar4, 0);\n    auVar5 = aesenc(auVar4 ^ *0x598940, auVar4 ^ *0x598940);\n    if (pauVar1 < 0x10) {\n        if (pauVar1 == NULL) {\n            auVar4 = aesenc(auVar5, auVar5);\n            return SUB168(auVar4, 0);\n        }\n        if ((pauVar2[1] & 0xff0) == 0) {\n            auVar4 = pshufb(*(*pauVar1 + pauVar2[-1]), *(pauVar1 * 0x10 + 0x4cb360));\n        }\n        else {\n            auVar4 = *pauVar2 & *(pauVar1 * 0x10 + 0x4cb260);\n        }\n    }\n    else {\n        if (pauVar1 != 0x10) {\n            if (pauVar1 < 0x21) {\n                auVar4 = aesenc(auVar4 ^ *0x598950, auVar4 ^ *0x598950);\n                auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n                auVar5 = aesenc(*pauVar2 ^ auVar5, *pauVar2 ^ auVar5);\n                auVar6 = aesenc(auVar4, auVar4);\n                auVar4 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, auVar5);\n                return SUB168(auVar4, 0) ^ SUB168(auVar5, 0);\n            }\n            if (pauVar1 < 0x41) {\n                auVar6 = aesenc(auVar4 ^ *0x598950, auVar4 ^ *0x598950);\n                auVar7 = aesenc(auVar4 ^ *0x598960, auVar4 ^ *0x598960);\n                auVar4 = aesenc(auVar4 ^ *0x598970, auVar4 ^ *0x598970);\n                auVar7 = *(*pauVar1 + pauVar2[-2]) ^ auVar7;\n                auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n                auVar5 = aesenc(*pauVar2 ^ auVar5, *pauVar2 ^ auVar5);\n                auVar6 = aesenc(pauVar2[1] ^ auVar6, pauVar2[1] ^ auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar4, auVar4);\n                auVar4 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                return SUB168(auVar4, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar5, 0) ^ SUB168(auVar7, 0);\n            }\n            if (pauVar1 <= pe_nt_image_headers64) {\n                auVar6 = aesenc(auVar4 ^ *0x598950, auVar4 ^ *0x598950);\n                auVar7 = aesenc(auVar4 ^ *0x598960, auVar4 ^ *0x598960);\n                auVar8 = aesenc(auVar4 ^ *0x598970, auVar4 ^ *0x598970);\n                auVar9 = aesenc(auVar4 ^ *0x598980, auVar4 ^ *0x598980);\n                auVar10 = aesenc(auVar4 ^ *0x598990, auVar4 ^ *0x598990);\n                auVar11 = aesenc(auVar4 ^ *0x5989a0, auVar4 ^ *0x5989a0);\n                auVar4 = aesenc(auVar4 ^ *0x5989b0, auVar4 ^ *0x5989b0);\n                auVar9 = *(*pauVar1 + pauVar2[-4]) ^ auVar9;\n                auVar10 = *(*pauVar1 + pauVar2[-3]) ^ auVar10;\n                auVar11 = *(*pauVar1 + pauVar2[-2]) ^ auVar11;\n                auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n                auVar5 = aesenc(*pauVar2 ^ auVar5, *pauVar2 ^ auVar5);\n                auVar6 = aesenc(pauVar2[1] ^ auVar6, pauVar2[1] ^ auVar6);\n                auVar7 = aesenc(pauVar2[2] ^ auVar7, pauVar2[2] ^ auVar7);\n                auVar8 = aesenc(pauVar2[3] ^ auVar8, pauVar2[3] ^ auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar4, auVar4);\n                auVar4 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar9 = aesenc(auVar10, auVar10);\n                auVar10 = aesenc(auVar11, auVar11);\n                auVar11 = aesenc(auVar12, auVar12);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                return SUB168(auVar4, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^\n                       SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0);\n            }\n            auVar6 = aesenc(auVar4 ^ *0x598950, auVar4 ^ *0x598950);\n            auVar7 = aesenc(auVar4 ^ *0x598960, auVar4 ^ *0x598960);\n            auVar8 = aesenc(auVar4 ^ *0x598970, auVar4 ^ *0x598970);\n            auVar9 = aesenc(auVar4 ^ *0x598980, auVar4 ^ *0x598980);\n            auVar10 = aesenc(auVar4 ^ *0x598990, auVar4 ^ *0x598990);\n            auVar11 = aesenc(auVar4 ^ *0x5989a0, auVar4 ^ *0x5989a0);\n            auVar4 = aesenc(auVar4 ^ *0x5989b0, auVar4 ^ *0x5989b0);\n            auVar5 = *(*pauVar1 + pauVar2[-8]) ^ auVar5;\n            auVar6 = *(*pauVar1 + pauVar2[-7]) ^ auVar6;\n            auVar7 = *(*pauVar1 + pauVar2[-6]) ^ auVar7;\n            auVar8 = *(*pauVar1 + pauVar2[-5]) ^ auVar8;\n            auVar9 = *(*pauVar1 + pauVar2[-4]) ^ auVar9;\n            auVar10 = *(*pauVar1 + pauVar2[-3]) ^ auVar10;\n            auVar11 = *(*pauVar1 + pauVar2[-2]) ^ auVar11;\n            auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n            uVar3 = pauVar1[-1] + 0xf >> 7;\n            do {\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, *pauVar2);\n                auVar6 = aesenc(auVar6, pauVar2[1]);\n                auVar7 = aesenc(auVar7, pauVar2[2]);\n                auVar8 = aesenc(auVar8, pauVar2[3]);\n                auVar9 = aesenc(auVar9, pauVar2[4]);\n                auVar10 = aesenc(auVar10, pauVar2[5]);\n                auVar11 = aesenc(auVar11, pauVar2[6]);\n                auVar4 = aesenc(auVar4, pauVar2[7]);\n                pauVar2 = pauVar2[8];\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar4, auVar4);\n            auVar4 = aesenc(auVar5, auVar5);\n            auVar5 = aesenc(auVar6, auVar6);\n            auVar6 = aesenc(auVar7, auVar7);\n            auVar7 = aesenc(auVar8, auVar8);\n            auVar8 = aesenc(auVar9, auVar9);\n            auVar9 = aesenc(auVar10, auVar10);\n            auVar10 = aesenc(auVar11, auVar11);\n            auVar11 = aesenc(auVar12, auVar12);\n            auVar4 = aesenc(auVar4, auVar4);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            return SUB168(auVar4, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^\n                   SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0);\n        }\n        auVar4 = *pauVar2;\n    }\n    auVar4 = aesenc(auVar4 ^ auVar5, auVar4 ^ auVar5);\n    auVar4 = aesenc(auVar4, auVar4);\n    auVar4 = aesenc(auVar4, auVar4);\n    return SUB168(auVar4, 0);\n}\n",
        "token_count": 3199
    },
    "0045de80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045de80(void)\n\n{\n    uint32_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar auVar1 [16];\n    \n    if (*0x59834f != '\\0') {\n        auVar1 = pinsrd(ZEXT816(unaff_RBX), *in_RAX, 2);\n        auVar1 = aesenc(auVar1, *0x598940);\n        auVar1 = aesenc(auVar1, *0x598950);\n        auVar1 = aesenc(auVar1, *0x598960);\n        return SUB168(auVar1, 0);\n    }\n    auVar1 = ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db) * ZEXT816(*in_RAX ^ unaff_RBX ^ *0x598600 ^ 0xa0761d6478bd642f);\n    auVar1 = ZEXT816(0x1d8e4e27c47d124b) * ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0));\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 287
    },
    "0045dec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045dec0(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar auVar1 [16];\n    \n    if (*0x59834f != '\\0') {\n        auVar1 = pinsrq(ZEXT816(unaff_RBX), *in_RAX, 1);\n        auVar1 = aesenc(auVar1, *0x598940);\n        auVar1 = aesenc(auVar1, *0x598950);\n        auVar1 = aesenc(auVar1, *0x598960);\n        return SUB168(auVar1, 0);\n    }\n    auVar1 = ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db) * ZEXT816(*in_RAX ^ unaff_RBX ^ *0x598600 ^ 0xa0761d6478bd642f);\n    auVar1 = ZEXT816(0x1d8e4e27c47d1247) * ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0));\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 287
    },
    "0045eaa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045eaa0(void)\n\n{\n    uint *puVar1;\n    uchar auVar2 [32];\n    uchar (*in_RAX) [32];\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar (*pauVar5) [32];\n    uchar (*pauVar6) [32];\n    uchar auVar7 [16];\n    uchar in_YMM0 [32];\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while( true ) {\n        while( true ) {\n            if (unaff_RBX == 0) {\n                return;\n            }\n            if (unaff_RBX < 3) {\n                (*in_RAX)[0] = 0;\n                in_RAX[-1][unaff_RBX + 0x1f] = 0;\n                return;\n            }\n            if (unaff_RBX < 5) {\n                **in_RAX = 0;\n                *(in_RAX[-1] + unaff_RBX + 0x1e) = 0;\n                return;\n            }\n            if (unaff_RBX < 8) {\n                **in_RAX = 0;\n                *(in_RAX[-1] + unaff_RBX + 0x1c) = 0;\n                return;\n            }\n            if (unaff_RBX == 8) {\n                **in_RAX = 0;\n                return;\n            }\n            if (unaff_RBX < 0x11) {\n                **in_RAX = 0;\n                *(in_RAX[-1] + unaff_RBX + 0x18) = 0;\n                return;\n            }\n            if (unaff_RBX < 0x21) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            if (unaff_RBX < 0x41) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                *(*in_RAX + 0x10) = in_XMM15_Da;\n                *(*in_RAX + 0x14) = in_XMM15_Db;\n                *(*in_RAX + 0x18) = in_XMM15_Dc;\n                *(*in_RAX + 0x1c) = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            if (unaff_RBX < 0x81) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                *(*in_RAX + 0x10) = in_XMM15_Da;\n                *(*in_RAX + 0x14) = in_XMM15_Db;\n                *(*in_RAX + 0x18) = in_XMM15_Dc;\n                *(*in_RAX + 0x1c) = in_XMM15_Dd;\n                *in_RAX[1] = in_XMM15_Da;\n                *(in_RAX[1] + 4) = in_XMM15_Db;\n                *(in_RAX[1] + 8) = in_XMM15_Dc;\n                *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[1] + 0x10) = in_XMM15_Da;\n                *(in_RAX[1] + 0x14) = in_XMM15_Db;\n                *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            if (unaff_RBX < 0x101) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                *(*in_RAX + 0x10) = in_XMM15_Da;\n                *(*in_RAX + 0x14) = in_XMM15_Db;\n                *(*in_RAX + 0x18) = in_XMM15_Dc;\n                *(*in_RAX + 0x1c) = in_XMM15_Dd;\n                *in_RAX[1] = in_XMM15_Da;\n                *(in_RAX[1] + 4) = in_XMM15_Db;\n                *(in_RAX[1] + 8) = in_XMM15_Dc;\n                *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[1] + 0x10) = in_XMM15_Da;\n                *(in_RAX[1] + 0x14) = in_XMM15_Db;\n                *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n                *in_RAX[2] = in_XMM15_Da;\n                *(in_RAX[2] + 4) = in_XMM15_Db;\n                *(in_RAX[2] + 8) = in_XMM15_Dc;\n                *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[2] + 0x10) = in_XMM15_Da;\n                *(in_RAX[2] + 0x14) = in_XMM15_Db;\n                *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n                *in_RAX[3] = in_XMM15_Da;\n                *(in_RAX[3] + 4) = in_XMM15_Db;\n                *(in_RAX[3] + 8) = in_XMM15_Dc;\n                *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[3] + 0x10) = in_XMM15_Da;\n                *(in_RAX[3] + 0x14) = in_XMM15_Db;\n                *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n                puVar1 = in_RAX[-4] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-4] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-3] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-3] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            auVar7 = SUB3216(in_YMM0, 0);\n            if ((*0x598a86 != '\\x01') || (unaff_RBX < 0x800)) break;\n            if (*0x598a83 == '\\x01') {\n                auVar7 = vpxor_avx(auVar7, auVar7);\n                in_YMM0 = ZEXT1632(auVar7);\n                if (0x1ffffff < unaff_RBX) goto code_r0x0045ec41;\n            }\n            uVar4 = unaff_RBX & 7;\n            for (uVar3 = unaff_RBX >> 3; unaff_RBX = uVar4,  uVar3 != 0; uVar3 = uVar3 - 1) {\n                **in_RAX = 0;\n                in_RAX = *in_RAX + 8;\n            }\n        }\n        if (*0x598a83 == '\\x01') break;\n        do {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[4] = in_XMM15_Da;\n            *(in_RAX[4] + 4) = in_XMM15_Db;\n            *(in_RAX[4] + 8) = in_XMM15_Dc;\n            *(in_RAX[4] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[4] + 0x10) = in_XMM15_Da;\n            *(in_RAX[4] + 0x14) = in_XMM15_Db;\n            *(in_RAX[4] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[4] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[5] = in_XMM15_Da;\n            *(in_RAX[5] + 4) = in_XMM15_Db;\n            *(in_RAX[5] + 8) = in_XMM15_Dc;\n            *(in_RAX[5] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[5] + 0x10) = in_XMM15_Da;\n            *(in_RAX[5] + 0x14) = in_XMM15_Db;\n            *(in_RAX[5] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[5] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[6] = in_XMM15_Da;\n            *(in_RAX[6] + 4) = in_XMM15_Db;\n            *(in_RAX[6] + 8) = in_XMM15_Dc;\n            *(in_RAX[6] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[6] + 0x10) = in_XMM15_Da;\n            *(in_RAX[6] + 0x14) = in_XMM15_Db;\n            *(in_RAX[6] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[6] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[7] = in_XMM15_Da;\n            *(in_RAX[7] + 4) = in_XMM15_Db;\n            *(in_RAX[7] + 8) = in_XMM15_Dc;\n            *(in_RAX[7] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[7] + 0x10) = in_XMM15_Da;\n            *(in_RAX[7] + 0x14) = in_XMM15_Db;\n            *(in_RAX[7] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[7] + 0x1c) = in_XMM15_Dd;\n            unaff_RBX = unaff_RBX - 0x100;\n            in_RAX = in_RAX[8];\n        } while (0xff < unaff_RBX);\n    }\n    auVar7 = vpxor_avx(auVar7, auVar7);\n    in_YMM0 = ZEXT1632(auVar7);\n    if (unaff_RBX < 0x2000000) {\n        do {\n            pauVar5 = in_RAX;\n            uVar3 = unaff_RBX;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            *pauVar5 = auVar2;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            pauVar5[1] = auVar2;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            pauVar5[2] = auVar2;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            pauVar5[3] = auVar2;\n            unaff_RBX = uVar3 - 0x80;\n            in_RAX = pauVar5[4];\n        } while (0x7f < uVar3 - 0x80);\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-1] + uVar3) = auVar2;\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-2] + uVar3) = auVar2;\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-3] + uVar3) = auVar2;\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-4] + uVar3) = auVar2;\n        vzeroupper_avx();\n        return;\n    }\ncode_r0x0045ec41:\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *in_RAX = auVar2;\n    uVar3 = in_RAX + (unaff_RBX - (in_RAX[1] & 0xffffffffffffffe0));\n    pauVar5 = in_RAX[1] & 0xffffffffffffffe0;\n    do {\n        pauVar6 = pauVar5;\n        uVar4 = uVar3;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        *pauVar6 = auVar2;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        pauVar6[1] = auVar2;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        pauVar6[2] = auVar2;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        pauVar6[3] = auVar2;\n        uVar3 = uVar4 - 0x80;\n        pauVar5 = pauVar6[4];\n    } while (0x7f < uVar4 - 0x80);\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-1] + uVar4) = auVar2;\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-2] + uVar4) = auVar2;\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-3] + uVar4) = auVar2;\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-4] + uVar4) = auVar2;\n    vzeroupper_avx();\n    return;\n}\n",
        "token_count": 5096
    },
    "0045eda0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045eda0(uint64_t arg1)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    ulong uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    uint uVar32;\n    uint uVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uint uVar37;\n    uint uVar38;\n    uint uVar39;\n    uint uVar40;\n    uint uVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint uVar45;\n    uint uVar46;\n    uint uVar47;\n    uint uVar48;\n    uint uVar49;\n    uint uVar50;\n    uint uVar51;\n    uint uVar52;\n    uint uVar53;\n    uint uVar54;\n    uint uVar55;\n    uint uVar56;\n    uint uVar57;\n    uint uVar58;\n    uint uVar59;\n    uint uVar60;\n    uint uVar61;\n    uint uVar62;\n    uint uVar63;\n    uint uVar64;\n    uint uVar65;\n    uint uVar66;\n    uchar (*in_RAX) [32];\n    uint64_t uVar67;\n    uchar (*unaff_RBX) [32];\n    uint64_t uVar68;\n    int64_t iVar69;\n    ulong *puVar70;\n    uchar (*pauVar71) [32];\n    ulong *puVar72;\n    uchar (*pauVar73) [32];\n    uchar (*pauVar74) [32];\n    uchar *puVar75;\n    bool bVar76;\n    uchar auVar77 [32];\n    uchar auVar78 [32];\n    uchar auVar79 [32];\n    uchar auVar80 [32];\n    uchar auVar81 [32];\n    \n    while( true ) {\n        if (arg1 == 0) {\n            return;\n        }\n        if (arg1 < 3) {\n            uVar2 = unaff_RBX[-1][arg1 + 0x1f];\n            (*in_RAX)[0] = (*unaff_RBX)[0];\n            in_RAX[-1][arg1 + 0x1f] = uVar2;\n            return;\n        }\n        if (arg1 < 4) {\n            uVar2 = (*unaff_RBX)[2];\n            **in_RAX = **unaff_RBX;\n            (*in_RAX)[2] = uVar2;\n            return;\n        }\n        if (arg1 < 5) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 8) {\n            uVar3 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x1c) = uVar3;\n            return;\n        }\n        if (arg1 == 8) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 0x11) {\n            uVar4 = *(unaff_RBX[-1] + arg1 + 0x18);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x18) = uVar4;\n            return;\n        }\n        if (arg1 < 0x21) break;\n        if (arg1 < 0x41) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar11 = *puVar1;\n            uVar12 = puVar1[1];\n            uVar13 = puVar1[2];\n            uVar14 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar15 = *puVar1;\n            uVar16 = puVar1[1];\n            uVar17 = puVar1[2];\n            uVar18 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar11;\n            puVar1[1] = uVar12;\n            puVar1[2] = uVar13;\n            puVar1[3] = uVar14;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar15;\n            puVar1[1] = uVar16;\n            puVar1[2] = uVar17;\n            puVar1[3] = uVar18;\n            return;\n        }\n        if (arg1 < 0x81) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar19 = *puVar1;\n            uVar20 = puVar1[1];\n            uVar21 = puVar1[2];\n            uVar22 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar23 = *puVar1;\n            uVar24 = puVar1[1];\n            uVar25 = puVar1[2];\n            uVar26 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar27 = *puVar1;\n            uVar28 = puVar1[1];\n            uVar29 = puVar1[2];\n            uVar30 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar31 = *puVar1;\n            uVar32 = puVar1[1];\n            uVar33 = puVar1[2];\n            uVar34 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar19;\n            puVar1[1] = uVar20;\n            puVar1[2] = uVar21;\n            puVar1[3] = uVar22;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar23;\n            puVar1[1] = uVar24;\n            puVar1[2] = uVar25;\n            puVar1[3] = uVar26;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar27;\n            puVar1[1] = uVar28;\n            puVar1[2] = uVar29;\n            puVar1[3] = uVar30;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar31;\n            puVar1[1] = uVar32;\n            puVar1[2] = uVar33;\n            puVar1[3] = uVar34;\n            return;\n        }\n        if (arg1 < 0x101) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            uVar19 = *unaff_RBX[2];\n            uVar20 = *(unaff_RBX[2] + 4);\n            uVar21 = *(unaff_RBX[2] + 8);\n            uVar22 = *(unaff_RBX[2] + 0xc);\n            uVar23 = *(unaff_RBX[2] + 0x10);\n            uVar24 = *(unaff_RBX[2] + 0x14);\n            uVar25 = *(unaff_RBX[2] + 0x18);\n            uVar26 = *(unaff_RBX[2] + 0x1c);\n            uVar27 = *unaff_RBX[3];\n            uVar28 = *(unaff_RBX[3] + 4);\n            uVar29 = *(unaff_RBX[3] + 8);\n            uVar30 = *(unaff_RBX[3] + 0xc);\n            uVar31 = *(unaff_RBX[3] + 0x10);\n            uVar32 = *(unaff_RBX[3] + 0x14);\n            uVar33 = *(unaff_RBX[3] + 0x18);\n            uVar34 = *(unaff_RBX[3] + 0x1c);\n            puVar1 = unaff_RBX[-4] + arg1;\n            uVar35 = *puVar1;\n            uVar36 = puVar1[1];\n            uVar37 = puVar1[2];\n            uVar38 = puVar1[3];\n            puVar1 = unaff_RBX[-4] + arg1 + 0x10;\n            uVar39 = *puVar1;\n            uVar40 = puVar1[1];\n            uVar41 = puVar1[2];\n            uVar42 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1;\n            uVar43 = *puVar1;\n            uVar44 = puVar1[1];\n            uVar45 = puVar1[2];\n            uVar46 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1 + 0x10;\n            uVar47 = *puVar1;\n            uVar48 = puVar1[1];\n            uVar49 = puVar1[2];\n            uVar50 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar51 = *puVar1;\n            uVar52 = puVar1[1];\n            uVar53 = puVar1[2];\n            uVar54 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar55 = *puVar1;\n            uVar56 = puVar1[1];\n            uVar57 = puVar1[2];\n            uVar58 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar59 = *puVar1;\n            uVar60 = puVar1[1];\n            uVar61 = puVar1[2];\n            uVar62 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar63 = *puVar1;\n            uVar64 = puVar1[1];\n            uVar65 = puVar1[2];\n            uVar66 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            *in_RAX[2] = uVar19;\n            *(in_RAX[2] + 4) = uVar20;\n            *(in_RAX[2] + 8) = uVar21;\n            *(in_RAX[2] + 0xc) = uVar22;\n            *(in_RAX[2] + 0x10) = uVar23;\n            *(in_RAX[2] + 0x14) = uVar24;\n            *(in_RAX[2] + 0x18) = uVar25;\n            *(in_RAX[2] + 0x1c) = uVar26;\n            *in_RAX[3] = uVar27;\n            *(in_RAX[3] + 4) = uVar28;\n            *(in_RAX[3] + 8) = uVar29;\n            *(in_RAX[3] + 0xc) = uVar30;\n            *(in_RAX[3] + 0x10) = uVar31;\n            *(in_RAX[3] + 0x14) = uVar32;\n            *(in_RAX[3] + 0x18) = uVar33;\n            *(in_RAX[3] + 0x1c) = uVar34;\n            puVar1 = in_RAX[-4] + arg1;\n            *puVar1 = uVar35;\n            puVar1[1] = uVar36;\n            puVar1[2] = uVar37;\n            puVar1[3] = uVar38;\n            puVar1 = in_RAX[-4] + arg1 + 0x10;\n            *puVar1 = uVar39;\n            puVar1[1] = uVar40;\n            puVar1[2] = uVar41;\n            puVar1[3] = uVar42;\n            puVar1 = in_RAX[-3] + arg1;\n            *puVar1 = uVar43;\n            puVar1[1] = uVar44;\n            puVar1[2] = uVar45;\n            puVar1[3] = uVar46;\n            puVar1 = in_RAX[-3] + arg1 + 0x10;\n            *puVar1 = uVar47;\n            puVar1[1] = uVar48;\n            puVar1[2] = uVar49;\n            puVar1[3] = uVar50;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar51;\n            puVar1[1] = uVar52;\n            puVar1[2] = uVar53;\n            puVar1[3] = uVar54;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar55;\n            puVar1[1] = uVar56;\n            puVar1[2] = uVar57;\n            puVar1[3] = uVar58;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar59;\n            puVar1[1] = uVar60;\n            puVar1[2] = uVar61;\n            puVar1[3] = uVar62;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar63;\n            puVar1[1] = uVar64;\n            puVar1[2] = uVar65;\n            puVar1[3] = uVar66;\n            return;\n        }\n        if ((*0x59834e & 1) != 0) {\n            if (in_RAX - unaff_RBX < arg1) {\n                uVar3 = **unaff_RBX;\n                uVar5 = *(*unaff_RBX + 4);\n                uVar6 = *(*unaff_RBX + 8);\n                uVar7 = *(*unaff_RBX + 0xc);\n                uVar8 = *(*unaff_RBX + 0x10);\n                uVar9 = *(*unaff_RBX + 0x14);\n                uVar10 = *(*unaff_RBX + 0x18);\n                uVar11 = *(*unaff_RBX + 0x1c);\n                puVar75 = *in_RAX + arg1;\n                uVar12 = *unaff_RBX[1];\n                uVar13 = *(unaff_RBX[1] + 4);\n                uVar14 = *(unaff_RBX[1] + 8);\n                uVar15 = *(unaff_RBX[1] + 0xc);\n                uVar16 = *(unaff_RBX[1] + 0x10);\n                uVar17 = *(unaff_RBX[1] + 0x14);\n                uVar18 = *(unaff_RBX[1] + 0x18);\n                uVar19 = *(unaff_RBX[1] + 0x1c);\n                uVar20 = *unaff_RBX[2];\n                uVar21 = *(unaff_RBX[2] + 4);\n                uVar22 = *(unaff_RBX[2] + 8);\n                uVar23 = *(unaff_RBX[2] + 0xc);\n                uVar24 = *(unaff_RBX[2] + 0x10);\n                uVar25 = *(unaff_RBX[2] + 0x14);\n                uVar26 = *(unaff_RBX[2] + 0x18);\n                uVar27 = *(unaff_RBX[2] + 0x1c);\n                uVar68 = puVar75 & 0x1f;\n                uVar28 = *unaff_RBX[3];\n                uVar29 = *(unaff_RBX[3] + 4);\n                uVar30 = *(unaff_RBX[3] + 8);\n                uVar31 = *(unaff_RBX[3] + 0xc);\n                uVar32 = *(unaff_RBX[3] + 0x10);\n                uVar33 = *(unaff_RBX[3] + 0x14);\n                uVar34 = *(unaff_RBX[3] + 0x18);\n                uVar35 = *(unaff_RBX[3] + 0x1c);\n                uVar67 = puVar75 ^ uVar68;\n                auVar81 = vmovdqu_avx(*(unaff_RBX[-1] + arg1));\n                iVar69 = unaff_RBX + (arg1 - uVar68);\n                arg1 = arg1 - uVar68;\n                if (0x100000 < arg1) {\n                    arg1 = arg1 - 0x80;\n                    do {\n                        auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                        auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                        auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                        auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                        iVar69 = iVar69 + -0x80;\n                        auVar77 = vmovntdq_avx(auVar77);\n                        *(uVar67 - 0x20) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar78);\n                        *(uVar67 - 0x40) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar79);\n                        *(uVar67 - 0x60) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar80);\n                        *(uVar67 - 0x80) = auVar77;\n                        uVar67 = uVar67 - 0x80;\n                        bVar76 = 0x7f < arg1;\n                        arg1 = arg1 - 0x80;\n                    } while (bVar76 && arg1 != 0);\n                    auVar81 = vmovdqu_avx(auVar81);\n                    *(puVar75 + -0x20) = auVar81;\n                    vzeroupper_avx();\n                    **in_RAX = uVar3;\n                    *(*in_RAX + 4) = uVar5;\n                    *(*in_RAX + 8) = uVar6;\n                    *(*in_RAX + 0xc) = uVar7;\n                    *(*in_RAX + 0x10) = uVar8;\n                    *(*in_RAX + 0x14) = uVar9;\n                    *(*in_RAX + 0x18) = uVar10;\n                    *(*in_RAX + 0x1c) = uVar11;\n                    *in_RAX[1] = uVar12;\n                    *(in_RAX[1] + 4) = uVar13;\n                    *(in_RAX[1] + 8) = uVar14;\n                    *(in_RAX[1] + 0xc) = uVar15;\n                    *(in_RAX[1] + 0x10) = uVar16;\n                    *(in_RAX[1] + 0x14) = uVar17;\n                    *(in_RAX[1] + 0x18) = uVar18;\n                    *(in_RAX[1] + 0x1c) = uVar19;\n                    *in_RAX[2] = uVar20;\n                    *(in_RAX[2] + 4) = uVar21;\n                    *(in_RAX[2] + 8) = uVar22;\n                    *(in_RAX[2] + 0xc) = uVar23;\n                    *(in_RAX[2] + 0x10) = uVar24;\n                    *(in_RAX[2] + 0x14) = uVar25;\n                    *(in_RAX[2] + 0x18) = uVar26;\n                    *(in_RAX[2] + 0x1c) = uVar27;\n                    *in_RAX[3] = uVar28;\n                    *(in_RAX[3] + 4) = uVar29;\n                    *(in_RAX[3] + 8) = uVar30;\n                    *(in_RAX[3] + 0xc) = uVar31;\n                    *(in_RAX[3] + 0x10) = uVar32;\n                    *(in_RAX[3] + 0x14) = uVar33;\n                    *(in_RAX[3] + 0x18) = uVar34;\n                    *(in_RAX[3] + 0x1c) = uVar35;\n                    return;\n                }\n                arg1 = arg1 - 0x80;\n                do {\n                    auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                    auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                    auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                    auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                    iVar69 = iVar69 + -0x80;\n                    *(uVar67 - 0x20) = auVar77;\n                    *(uVar67 - 0x40) = auVar78;\n                    *(uVar67 - 0x60) = auVar79;\n                    *(uVar67 - 0x80) = auVar80;\n                    uVar67 = uVar67 - 0x80;\n                    bVar76 = 0x7f < arg1;\n                    arg1 = arg1 - 0x80;\n                } while (bVar76 && arg1 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *(puVar75 + -0x20) = auVar81;\n                vzeroupper_avx();\n                **in_RAX = uVar3;\n                *(*in_RAX + 4) = uVar5;\n                *(*in_RAX + 8) = uVar6;\n                *(*in_RAX + 0xc) = uVar7;\n                *(*in_RAX + 0x10) = uVar8;\n                *(*in_RAX + 0x14) = uVar9;\n                *(*in_RAX + 0x18) = uVar10;\n                *(*in_RAX + 0x1c) = uVar11;\n                *in_RAX[1] = uVar12;\n                *(in_RAX[1] + 4) = uVar13;\n                *(in_RAX[1] + 8) = uVar14;\n                *(in_RAX[1] + 0xc) = uVar15;\n                *(in_RAX[1] + 0x10) = uVar16;\n                *(in_RAX[1] + 0x14) = uVar17;\n                *(in_RAX[1] + 0x18) = uVar18;\n                *(in_RAX[1] + 0x1c) = uVar19;\n                *in_RAX[2] = uVar20;\n                *(in_RAX[2] + 4) = uVar21;\n                *(in_RAX[2] + 8) = uVar22;\n                *(in_RAX[2] + 0xc) = uVar23;\n                *(in_RAX[2] + 0x10) = uVar24;\n                *(in_RAX[2] + 0x14) = uVar25;\n                *(in_RAX[2] + 0x18) = uVar26;\n                *(in_RAX[2] + 0x1c) = uVar27;\n                *in_RAX[3] = uVar28;\n                *(in_RAX[3] + 4) = uVar29;\n                *(in_RAX[3] + 8) = uVar30;\n                *(in_RAX[3] + 0xc) = uVar31;\n                *(in_RAX[3] + 0x10) = uVar32;\n                *(in_RAX[3] + 0x14) = uVar33;\n                *(in_RAX[3] + 0x18) = uVar34;\n                *(in_RAX[3] + 0x1c) = uVar35;\n                return;\n            }\n            if (0xfffff < arg1) {\n                puVar1 = unaff_RBX[-4] + arg1;\n                uVar3 = *puVar1;\n                uVar5 = puVar1[1];\n                uVar6 = puVar1[2];\n                uVar7 = puVar1[3];\n                uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n                uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n                uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n                uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n                uVar12 = *(unaff_RBX[-3] + arg1);\n                uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n                uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n                uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n                uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n                uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n                uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n                uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n                uVar20 = *(unaff_RBX[-2] + arg1);\n                uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n                uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n                uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n                uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n                uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n                uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n                uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n                uVar28 = *(unaff_RBX[-1] + arg1);\n                uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n                uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n                uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n                uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n                uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n                uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n                uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n                auVar81 = vmovdqu_avx(*unaff_RBX);\n                pauVar74 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n                iVar69 = arg1 - (pauVar74 - in_RAX);\n                pauVar73 = unaff_RBX + (pauVar74 - in_RAX);\n                uVar67 = iVar69 - 0x80;\n                pauVar71 = pauVar74;\n                do {\n                    auVar77 = vmovdqu_avx(*pauVar73);\n                    auVar78 = vmovdqu_avx(pauVar73[1]);\n                    auVar79 = vmovdqu_avx(pauVar73[2]);\n                    auVar80 = vmovdqu_avx(pauVar73[3]);\n                    pauVar73 = pauVar73[4];\n                    auVar77 = vmovntdq_avx(auVar77);\n                    *pauVar71 = auVar77;\n                    auVar77 = vmovntdq_avx(auVar78);\n                    pauVar71[1] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar79);\n                    pauVar71[2] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar80);\n                    pauVar71[3] = auVar77;\n                    pauVar71 = pauVar71[4];\n                    bVar76 = 0x7f < uVar67;\n                    uVar67 = uVar67 - 0x80;\n                } while (bVar76 && uVar67 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *in_RAX = auVar81;\n                vzeroupper_avx();\n                *(pauVar74 + iVar69 + -0x80) = uVar3;\n                *(pauVar74 + iVar69 + -0x7c) = uVar5;\n                *(pauVar74 + iVar69 + -0x78) = uVar6;\n                *(pauVar74 + iVar69 + -0x74) = uVar7;\n                *(pauVar74 + iVar69 + -0x70) = uVar8;\n                *(pauVar74 + iVar69 + -0x6c) = uVar9;\n                *(pauVar74 + iVar69 + -0x68) = uVar10;\n                *(pauVar74 + iVar69 + -100) = uVar11;\n                *(pauVar74 + iVar69 + -0x60) = uVar12;\n                *(pauVar74 + iVar69 + -0x5c) = uVar13;\n                *(pauVar74 + iVar69 + -0x58) = uVar14;\n                *(pauVar74 + iVar69 + -0x54) = uVar15;\n                *(pauVar74 + iVar69 + -0x50) = uVar16;\n                *(pauVar74 + iVar69 + -0x4c) = uVar17;\n                *(pauVar74 + iVar69 + -0x48) = uVar18;\n                *(pauVar74 + iVar69 + -0x44) = uVar19;\n                *(pauVar74 + iVar69 + -0x40) = uVar20;\n                *(pauVar74 + iVar69 + -0x3c) = uVar21;\n                *(pauVar74 + iVar69 + -0x38) = uVar22;\n                *(pauVar74 + iVar69 + -0x34) = uVar23;\n                *(pauVar74 + iVar69 + -0x30) = uVar24;\n                *(pauVar74 + iVar69 + -0x2c) = uVar25;\n                *(pauVar74 + iVar69 + -0x28) = uVar26;\n                *(pauVar74 + iVar69 + -0x24) = uVar27;\n                *(pauVar74 + iVar69 + -0x20) = uVar28;\n                *(pauVar74 + iVar69 + -0x1c) = uVar29;\n                *(pauVar74 + iVar69 + -0x18) = uVar30;\n                *(pauVar74 + iVar69 + -0x14) = uVar31;\n                *(pauVar74 + iVar69 + -0x10) = uVar32;\n                *(pauVar74 + iVar69 + -0xc) = uVar33;\n                *(pauVar74 + iVar69 + -8) = uVar34;\n                *(pauVar74 + iVar69 + -4) = uVar35;\n                return;\n            }\n            uVar3 = *(unaff_RBX[-4] + arg1);\n            uVar5 = *(unaff_RBX[-4] + arg1 + 4);\n            uVar6 = *(unaff_RBX[-4] + arg1 + 8);\n            uVar7 = *(unaff_RBX[-4] + arg1 + 0xc);\n            uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n            uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n            uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n            uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n            pauVar73 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n            uVar12 = *(unaff_RBX[-3] + arg1);\n            uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n            uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n            uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n            uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n            uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n            uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n            uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n            uVar20 = *(unaff_RBX[-2] + arg1);\n            uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n            uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n            uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n            uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n            uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n            uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n            uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n            uVar28 = *(unaff_RBX[-1] + arg1);\n            uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n            uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n            uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n            uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n            uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n            uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n            uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            auVar81 = vmovdqu_avx(*unaff_RBX);\n            pauVar71 = unaff_RBX + (pauVar73 - in_RAX);\n            uVar67 = (arg1 - (pauVar73 - in_RAX)) - 0x80;\n            do {\n                uVar68 = uVar67;\n                auVar77 = vmovdqu_avx(*pauVar71);\n                auVar78 = vmovdqu_avx(pauVar71[1]);\n                auVar79 = vmovdqu_avx(pauVar71[2]);\n                auVar80 = vmovdqu_avx(pauVar71[3]);\n                pauVar71 = pauVar71[4];\n                *pauVar73 = auVar77;\n                pauVar73[1] = auVar78;\n                pauVar73[2] = auVar79;\n                pauVar73[3] = auVar80;\n                pauVar73 = pauVar73[4];\n                uVar67 = uVar68 - 0x80;\n            } while (0x7f < uVar68 && uVar68 - 0x80 != 0);\n            auVar81 = vmovdqu_avx(auVar81);\n            *in_RAX = auVar81;\n            vzeroupper_avx();\n            *(pauVar73[-4] + uVar68) = uVar3;\n            *(pauVar73[-4] + uVar68 + 4) = uVar5;\n            *(pauVar73[-4] + uVar68 + 8) = uVar6;\n            *(pauVar73[-4] + uVar68 + 0xc) = uVar7;\n            *(pauVar73[-4] + uVar68 + 0x10) = uVar8;\n            *(pauVar73[-4] + uVar68 + 0x14) = uVar9;\n            *(pauVar73[-4] + uVar68 + 0x18) = uVar10;\n            *(pauVar73[-4] + uVar68 + 0x1c) = uVar11;\n            *(pauVar73[-3] + uVar68) = uVar12;\n            *(pauVar73[-3] + uVar68 + 4) = uVar13;\n            *(pauVar73[-3] + uVar68 + 8) = uVar14;\n            *(pauVar73[-3] + uVar68 + 0xc) = uVar15;\n            *(pauVar73[-3] + uVar68 + 0x10) = uVar16;\n            *(pauVar73[-3] + uVar68 + 0x14) = uVar17;\n            *(pauVar73[-3] + uVar68 + 0x18) = uVar18;\n            *(pauVar73[-3] + uVar68 + 0x1c) = uVar19;\n            *(pauVar73[-2] + uVar68) = uVar20;\n            *(pauVar73[-2] + uVar68 + 4) = uVar21;\n            *(pauVar73[-2] + uVar68 + 8) = uVar22;\n            *(pauVar73[-2] + uVar68 + 0xc) = uVar23;\n            *(pauVar73[-2] + uVar68 + 0x10) = uVar24;\n            *(pauVar73[-2] + uVar68 + 0x14) = uVar25;\n            *(pauVar73[-2] + uVar68 + 0x18) = uVar26;\n            *(pauVar73[-2] + uVar68 + 0x1c) = uVar27;\n            *(pauVar73[-1] + uVar68) = uVar28;\n            *(pauVar73[-1] + uVar68 + 4) = uVar29;\n            *(pauVar73[-1] + uVar68 + 8) = uVar30;\n            *(pauVar73[-1] + uVar68 + 0xc) = uVar31;\n            *(pauVar73[-1] + uVar68 + 0x10) = uVar32;\n            *(pauVar73[-1] + uVar68 + 0x14) = uVar33;\n            *(pauVar73[-1] + uVar68 + 0x18) = uVar34;\n            *(pauVar73[-1] + uVar68 + 0x1c) = uVar35;\n            return;\n        }\n        if ((in_RAX < unaff_RBX) || (*unaff_RBX + arg1 <= in_RAX)) {\n            if (arg1 < 0x801) {\n                do {\n                    arg1 = arg1 - 0x100;\n                    uVar48 = *(*unaff_RBX + 4);\n                    uVar49 = *(*unaff_RBX + 8);\n                    uVar50 = *(*unaff_RBX + 0xc);\n                    uVar51 = *(*unaff_RBX + 0x10);\n                    uVar52 = *(*unaff_RBX + 0x14);\n                    uVar53 = *(*unaff_RBX + 0x18);\n                    uVar54 = *(*unaff_RBX + 0x1c);\n                    uVar55 = *unaff_RBX[1];\n                    uVar56 = *(unaff_RBX[1] + 4);\n                    uVar57 = *(unaff_RBX[1] + 8);\n                    uVar58 = *(unaff_RBX[1] + 0xc);\n                    uVar59 = *(unaff_RBX[1] + 0x10);\n                    uVar60 = *(unaff_RBX[1] + 0x14);\n                    uVar61 = *(unaff_RBX[1] + 0x18);\n                    uVar62 = *(unaff_RBX[1] + 0x1c);\n                    uVar63 = *unaff_RBX[2];\n                    uVar64 = *(unaff_RBX[2] + 4);\n                    uVar65 = *(unaff_RBX[2] + 8);\n                    uVar66 = *(unaff_RBX[2] + 0xc);\n                    uVar3 = *(unaff_RBX[2] + 0x10);\n                    uVar5 = *(unaff_RBX[2] + 0x14);\n                    uVar6 = *(unaff_RBX[2] + 0x18);\n                    uVar7 = *(unaff_RBX[2] + 0x1c);\n                    uVar8 = *unaff_RBX[3];\n                    uVar9 = *(unaff_RBX[3] + 4);\n                    uVar10 = *(unaff_RBX[3] + 8);\n                    uVar11 = *(unaff_RBX[3] + 0xc);\n                    uVar12 = *(unaff_RBX[3] + 0x10);\n                    uVar13 = *(unaff_RBX[3] + 0x14);\n                    uVar14 = *(unaff_RBX[3] + 0x18);\n                    uVar15 = *(unaff_RBX[3] + 0x1c);\n                    uVar16 = *unaff_RBX[4];\n                    uVar17 = *(unaff_RBX[4] + 4);\n                    uVar18 = *(unaff_RBX[4] + 8);\n                    uVar19 = *(unaff_RBX[4] + 0xc);\n                    uVar20 = *(unaff_RBX[4] + 0x10);\n                    uVar21 = *(unaff_RBX[4] + 0x14);\n                    uVar22 = *(unaff_RBX[4] + 0x18);\n                    uVar23 = *(unaff_RBX[4] + 0x1c);\n                    uVar24 = *unaff_RBX[5];\n                    uVar25 = *(unaff_RBX[5] + 4);\n                    uVar26 = *(unaff_RBX[5] + 8);\n                    uVar27 = *(unaff_RBX[5] + 0xc);\n                    uVar28 = *(unaff_RBX[5] + 0x10);\n                    uVar29 = *(unaff_RBX[5] + 0x14);\n                    uVar30 = *(unaff_RBX[5] + 0x18);\n                    uVar31 = *(unaff_RBX[5] + 0x1c);\n                    uVar32 = *unaff_RBX[6];\n                    uVar33 = *(unaff_RBX[6] + 4);\n                    uVar34 = *(unaff_RBX[6] + 8);\n                    uVar35 = *(unaff_RBX[6] + 0xc);\n                    uVar36 = *(unaff_RBX[6] + 0x10);\n                    uVar37 = *(unaff_RBX[6] + 0x14);\n                    uVar38 = *(unaff_RBX[6] + 0x18);\n                    uVar39 = *(unaff_RBX[6] + 0x1c);\n                    uVar40 = *unaff_RBX[7];\n                    uVar41 = *(unaff_RBX[7] + 4);\n                    uVar42 = *(unaff_RBX[7] + 8);\n                    uVar43 = *(unaff_RBX[7] + 0xc);\n                    uVar44 = *(unaff_RBX[7] + 0x10);\n                    uVar45 = *(unaff_RBX[7] + 0x14);\n                    uVar46 = *(unaff_RBX[7] + 0x18);\n                    uVar47 = *(unaff_RBX[7] + 0x1c);\n                    **in_RAX = **unaff_RBX;\n                    *(*in_RAX + 4) = uVar48;\n                    *(*in_RAX + 8) = uVar49;\n                    *(*in_RAX + 0xc) = uVar50;\n                    *(*in_RAX + 0x10) = uVar51;\n                    *(*in_RAX + 0x14) = uVar52;\n                    *(*in_RAX + 0x18) = uVar53;\n                    *(*in_RAX + 0x1c) = uVar54;\n                    *in_RAX[1] = uVar55;\n                    *(in_RAX[1] + 4) = uVar56;\n                    *(in_RAX[1] + 8) = uVar57;\n                    *(in_RAX[1] + 0xc) = uVar58;\n                    *(in_RAX[1] + 0x10) = uVar59;\n                    *(in_RAX[1] + 0x14) = uVar60;\n                    *(in_RAX[1] + 0x18) = uVar61;\n                    *(in_RAX[1] + 0x1c) = uVar62;\n                    *in_RAX[2] = uVar63;\n                    *(in_RAX[2] + 4) = uVar64;\n                    *(in_RAX[2] + 8) = uVar65;\n                    *(in_RAX[2] + 0xc) = uVar66;\n                    *(in_RAX[2] + 0x10) = uVar3;\n                    *(in_RAX[2] + 0x14) = uVar5;\n                    *(in_RAX[2] + 0x18) = uVar6;\n                    *(in_RAX[2] + 0x1c) = uVar7;\n                    *in_RAX[3] = uVar8;\n                    *(in_RAX[3] + 4) = uVar9;\n                    *(in_RAX[3] + 8) = uVar10;\n                    *(in_RAX[3] + 0xc) = uVar11;\n                    *(in_RAX[3] + 0x10) = uVar12;\n                    *(in_RAX[3] + 0x14) = uVar13;\n                    *(in_RAX[3] + 0x18) = uVar14;\n                    *(in_RAX[3] + 0x1c) = uVar15;\n                    *in_RAX[4] = uVar16;\n                    *(in_RAX[4] + 4) = uVar17;\n                    *(in_RAX[4] + 8) = uVar18;\n                    *(in_RAX[4] + 0xc) = uVar19;\n                    *(in_RAX[4] + 0x10) = uVar20;\n                    *(in_RAX[4] + 0x14) = uVar21;\n                    *(in_RAX[4] + 0x18) = uVar22;\n                    *(in_RAX[4] + 0x1c) = uVar23;\n                    *in_RAX[5] = uVar24;\n                    *(in_RAX[5] + 4) = uVar25;\n                    *(in_RAX[5] + 8) = uVar26;\n                    *(in_RAX[5] + 0xc) = uVar27;\n                    *(in_RAX[5] + 0x10) = uVar28;\n                    *(in_RAX[5] + 0x14) = uVar29;\n                    *(in_RAX[5] + 0x18) = uVar30;\n                    *(in_RAX[5] + 0x1c) = uVar31;\n                    *in_RAX[6] = uVar32;\n                    *(in_RAX[6] + 4) = uVar33;\n                    *(in_RAX[6] + 8) = uVar34;\n                    *(in_RAX[6] + 0xc) = uVar35;\n                    *(in_RAX[6] + 0x10) = uVar36;\n                    *(in_RAX[6] + 0x14) = uVar37;\n                    *(in_RAX[6] + 0x18) = uVar38;\n                    *(in_RAX[6] + 0x1c) = uVar39;\n                    *in_RAX[7] = uVar40;\n                    *(in_RAX[7] + 4) = uVar41;\n                    *(in_RAX[7] + 8) = uVar42;\n                    *(in_RAX[7] + 0xc) = uVar43;\n                    *(in_RAX[7] + 0x10) = uVar44;\n                    *(in_RAX[7] + 0x14) = uVar45;\n                    *(in_RAX[7] + 0x18) = uVar46;\n                    *(in_RAX[7] + 0x1c) = uVar47;\n                    unaff_RBX = unaff_RBX[8];\n                    in_RAX = in_RAX[8];\n                } while (0xff < arg1);\n            }\n            else {\n                if ((*0x598a86 == '\\x01') && (((unaff_RBX | in_RAX) & 7) != 0)) {\n                    for (; arg1 != 0; arg1 = arg1 - 1) {\n                        (*in_RAX)[0] = (*unaff_RBX)[0];\n                        unaff_RBX = *unaff_RBX + 1;\n                        in_RAX = *in_RAX + 1;\n                    }\n                    return;\n                }\n                uVar68 = arg1 & 7;\n                for (uVar67 = arg1 >> 3; arg1 = uVar68,  uVar67 != 0; uVar67 = uVar67 - 1) {\n                    **in_RAX = **unaff_RBX;\n                    unaff_RBX = *unaff_RBX + 8;\n                    in_RAX = *in_RAX + 8;\n                }\n            }\n        }\n        else {\n            uVar67 = arg1 >> 3;\n            uVar68 = arg1 & 7;\n            puVar70 = *unaff_RBX + arg1;\n            puVar72 = *in_RAX + arg1;\n            while( true ) {\n                if (uVar67 == 0) break;\n                uVar67 = uVar67 - 1;\n                puVar72[-1] = puVar70[-1];\n                puVar70 = puVar70 + -1;\n                puVar72 = puVar72 + -1;\n            }\n            in_RAX = puVar72 - uVar68;\n            unaff_RBX = puVar70 - uVar68;\n            arg1 = uVar68;\n        }\n    }\n    uVar3 = *(*unaff_RBX + 4);\n    uVar5 = *(*unaff_RBX + 8);\n    uVar6 = *(*unaff_RBX + 0xc);\n    puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n    uVar7 = *puVar1;\n    uVar8 = puVar1[1];\n    uVar9 = puVar1[2];\n    uVar10 = puVar1[3];\n    **in_RAX = **unaff_RBX;\n    *(*in_RAX + 4) = uVar3;\n    *(*in_RAX + 8) = uVar5;\n    *(*in_RAX + 0xc) = uVar6;\n    puVar1 = in_RAX[-1] + arg1 + 0x10;\n    *puVar1 = uVar7;\n    puVar1[1] = uVar8;\n    puVar1[2] = uVar9;\n    puVar1[3] = uVar10;\n    return;\n}\n",
        "token_count": 13217
    },
    "0045fdc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045fdc0(void)\n\n{\n    if (*0x598352 == '\\0') {\n        return;\n    }\n    fcn.0042eea0();\n    return;\n}\n",
        "token_count": 42
    },
    "0045fe60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0045fe60(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    if (*0x598352 == '\\0') {\n        return (*0x7ffe0014 + -0x19db1ded53e8000) * 0x5fca6af2bd215e5c;\n    }\n    iVar1 = fcn.0042ef20();\n    return iVar1;\n}\n",
        "token_count": 101
    },
    "004603c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004603c0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    ulong in_R9;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    uVar7 = 0;\n    uVar8 = 0;\n    uVar9 = 0;\n    uVar10 = 0;\n    iVar2 = **(in_GS_OFFSET + *0x598520);\n    puVar5 = *0x20;\n    do {\n        puVar1 = iVar2 + 0x10;\n        puVar6 = puVar5;\n        if (*puVar1 <= puVar5 && puVar5 != *puVar1) {\n            puVar6 = puVar5 + -0x60;\n            *(puVar5 + -8) = unaff_RBP;\n            unaff_RBP = puVar5 + -8;\n            if (*0x5985b0 == 0) {\n                *0x544be8 = 0x45f860;\n            }\n            else {\n                *(puVar5 + -0x68) = 0x42ed65;\n                fcn.0045e0a0(arg1, 0x45f860, arg3, in_R9);\n            }\n            arg1_00 = 0;\n            while( true ) {\n                if (0x35 < arg1_00) {\n                    *(puVar5 + -0x68) = 0x42edd5;\n                    fcn.0042df40();\n                    *(puVar5 + -0x68) = 0x42edda;\n                    fcn.00444ac0();\n                    *(puVar5 + -0x68) = 0x42eddf;\n                    fcn.00444b60();\n                    *(puVar5 + -0x68) = 0x42ede5;\n                    fcn.0042e9c0();\n                    *(puVar5 + -0x68) = 0x42edec;\n                    *0x5983b0 = fcn.0042e900();\n                    *(puVar5 + -0x68) = 0x42edf7;\n                    fcn.0042ea80();\n                    *(puVar5 + -0x68) = 0x42edfc;\n                    *0x598390 = fcn.0042e7e0();\n                    *(puVar5 + -0x38) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x28) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x18) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x60) = _sym.imp.kernel32.dll_GetSystemInfo;\n                    *(puVar5 + -0x58) = puVar5 + -0x38;\n                    *(puVar5 + -0x68) = 0x42ee2e;\n                    fcn.00430880();\n                    *0x5984a8 = *(puVar5 + -0x34);\n                    *(puVar5 + -0x60) = _sym.imp.kernel32.dll_SetProcessPriorityBoost;\n                    *(puVar5 + -0x58) = 0xffffffffffffffff;\n                    *(puVar5 + -0x50) = 1;\n                    *(puVar5 + -0x68) = 0x42ee6d;\n                    fcn.00430900();\n                    return;\n                }\n                uVar3 = *(arg1_00 + 0x4b13e9);\n                if (uVar3 < 0x80) {\n                    uVar4 = arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(puVar5 + -0x40) = arg1_00;\n                    *(puVar5 + -0x68) = 0x42edb4;\n                    uVar3 = fcn.004575e0(arg1_00);\n                    arg1_00 = 0x36;\n                    uVar4 = *(puVar5 + -0x40);\n                }\n                if (99 < uVar4) break;\n                arg3 = 0x5988c0;\n                *(uVar4 + 0x5988c0) = uVar3;\n                *0x598364 = *0x598364 + 1;\n            }\n            arg1 = 100;\n            *(puVar5 + -0x68) = 0x42ee93;\n            fcn.0045e420(100);\n        }\n        *(puVar6 + -8) = 0x42ee99;\n        fcn.0045bdc0();\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1165
    },
    "004605a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00436eaf)\n\nvoid fcn.004605a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1;\n    int64_t arg2;\n    uchar *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    \n    uVar6 = 0;\n    uVar7 = 0;\n    uVar8 = 0;\n    uVar9 = 0;\n    iVar2 = **(in_GS_OFFSET + *0x598520);\n    puVar4 = *0x20;\n    do {\n        puVar5 = puVar4;\n        if (*(iVar2 + 0x10) <= puVar4 && puVar4 != *(iVar2 + 0x10)) {\n            puVar5 = puVar4 + -0x50;\n            *(puVar4 + -8) = unaff_RBP;\n            unaff_RBP = puVar4 + -8;\n            *(puVar4 + -0x20) = iVar2;\n            *0x546038 = 10000;\n            iVar2 = 0x532f00;\n            while (iVar2 != 0) {\n                *(puVar4 + -0x18) = iVar2;\n                *(puVar4 + -0x58) = 0x436d3a;\n                fcn.0044b1c0();\n                iVar2 = *(*(puVar4 + -0x18) + 0x230);\n            }\n            for (iVar2 = 0; iVar2 < 2; iVar2 = iVar2 + 1) {\n                *(iVar2 * 0x40 + 0x5989c8) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n            }\n            for (iVar2 = 0; iVar2 < 0x23; iVar2 = iVar2 + 1) {\n                *(iVar2 * 0x10 + 0x599248) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n            }\n            *(puVar4 + -0x58) = 0x436d9a;\n            fcn.0040aec0();\n            *(puVar4 + -0x58) = 0x436da5;\n            fcn.00401080();\n            *0x598354 = *0x598a8a;\n            *0x598355 = *0x598a8f;\n            *0x598353 = *0x598a87;\n            *(puVar4 + -0x58) = 0x436dd1;\n            fcn.00403420();\n            *(puVar4 + -0x58) = 0x436de6;\n            fcn.0042f2e0(8);\n            uVar1 = *(*(puVar4 + -0x20) + 0x30);\n            *(puVar4 + -0x58) = 0x436dfe;\n            fcn.00437100(uVar1);\n            *(puVar4 + -0x58) = 0x436e05;\n            fcn.0044af40();\n            *(puVar4 + -0x58) = 0x436e0a;\n            fcn.00456260();\n            *(puVar4 + -0x58) = 0x436e0f;\n            fcn.00409b40();\n            *(puVar4 + -0x58) = 0x436e14;\n            fcn.00449200();\n            *(puVar4 + -0x58) = 0x436e25;\n            fcn.0042f380();\n            *(puVar4 + -0x58) = 0x436e2a;\n            fcn.004433c0();\n            *(puVar4 + -0x58) = 0x436e2f;\n            fcn.004162c0();\n            if (*0x53d940 != '\\0') {\n                *0x52d358 = 0;\n            }\n            *(puVar4 + -0x58) = 0x436e51;\n            fcn.0040a520();\n            *(puVar4 + -0x58) = 0x436e57;\n            fcn.0045fdc0();\n            uVar6 = 0;\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            iVar2 = **(in_GS_OFFSET + *0x598520);\n            *0x546008 = *(puVar4 + -0x50);\n            *(puVar4 + -0x34) = *0x598390;\n            *(puVar4 + -0x58) = 0x436e93;\n            fcn.004070e0();\n            *(puVar4 + -0x58) = 0x436e98;\n            fcn.00449f80();\n            arg2 = 0;\n            arg1 = *(puVar4 + -0x34);\n            *(puVar4 + -0x58) = 0x436ebe;\n            iVar3 = fcn.0043f780();\n            if (iVar3 == 0) {\n                *(puVar4 + -0x58) = 0x436ed7;\n                fcn.0040a740();\n                if (1 < *0x598800) {\n                    *0x5985b5 = 1;\n                    *0x5985b0 = CONCAT31(*0x5985b1, 1);\n                    *(puVar4 + -0x10) = *0x5455b0;\n                    *(puVar4 + -0x28) = *0x5455b8;\n                    iVar2 = 0;\n                    arg1 = *0x5455b0;\n                    arg2 = *0x5455b8;\n                    while (iVar2 < arg2) {\n                        *(puVar4 + -0x30) = iVar2;\n                        iVar2 = *(arg1 + iVar2 * 8);\n                        *(puVar4 + -0x58) = 0x436fad;\n                        fcn.0042ce80(arg1, iVar2 + 0x1260);\n                        arg1 = *(puVar4 + -0x10);\n                        arg2 = *(puVar4 + -0x28);\n                        iVar2 = *(puVar4 + -0x30) + 1;\n                    }\n                }\n                if (*0x53e168 == 0) {\n                    *0x53e168 = 7;\n                    if (*0x5985b0 == 0) {\n                        *0x53e160 = 0x4a8706;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x436f50;\n                        fcn.0045df80(arg1, arg2, param_3, param_4);\n                    }\n                }\n                if (*0x53e1a8 == 1) {\n                    *0x53e1a8 = 0;\n                    if (*0x5985b0 == 0) {\n                        *0x53e1a0 = 0;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x436f89;\n                        fcn.0045df80(arg1, arg2, param_3, param_4);\n                    }\n                }\n                return;\n            }\n            *(puVar4 + -0x58) = 0x436fdb;\n            fcn.00433580();\n        }\n        *(puVar5 + -8) = 0x436fe5;\n        fcn.0045bdc0();\n        puVar4 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1782
    },
    "004605c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004605c0(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int64_t iStack24;\n    int64_t *piStack16;\n    \n    piStack16 = **(in_GS_OFFSET + *0x598520);\n    if (*piStack16 == 0) {\n        iStack24 = piStack16[1];\n        if (iStack24 == 0) {\n            iStack24 = 0x2000;\n        }\n        piStack16[1] = &iStack24;\n        *piStack16 = &stack0x000003e8 + -iStack24;\n    }\n    piStack16[2] = *piStack16 + 0x13a0;\n    piStack16[3] = *piStack16 + 0x13a0;\n    fcn.004387a0();\n    fcn.00438940();\n    return;\n}\n",
        "token_count": 199
    },
    "004606a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004431cc)\n// WARNING: Removing unreachable block (ram,0x004431ce)\n// WARNING: Removing unreachable block (ram,0x004431d4)\n// WARNING: Removing unreachable block (ram,0x004431ef)\n// WARNING: Removing unreachable block (ram,0x004431f5)\n// WARNING: Removing unreachable block (ram,0x004431f7)\n// WARNING: Removing unreachable block (ram,0x004431fd)\n// WARNING: Removing unreachable block (ram,0x00443210)\n// WARNING: Removing unreachable block (ram,0x00443216)\n// WARNING: Removing unreachable block (ram,0x0044322f)\n// WARNING: Removing unreachable block (ram,0x00443231)\n// WARNING: Removing unreachable block (ram,0x0044323d)\n// WARNING: Removing unreachable block (ram,0x00443257)\n// WARNING: Removing unreachable block (ram,0x00443259)\n// WARNING: Removing unreachable block (ram,0x00443276)\n// WARNING: Removing unreachable block (ram,0x00443281)\n// WARNING: Removing unreachable block (ram,0x00443292)\n// WARNING: Removing unreachable block (ram,0x0044323a)\n// WARNING: Removing unreachable block (ram,0x004432a5)\n// WARNING: Removing unreachable block (ram,0x004432b6)\n// WARNING: Removing unreachable block (ram,0x004432c7)\n// WARNING: Removing unreachable block (ram,0x004432d8)\n// WARNING: Removing unreachable block (ram,0x004432e9)\n\nvoid fcn.004606a0(void)\n\n{\n    uint64_t *puVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t in_GS_OFFSET;\n    \n    iVar4 = **(in_GS_OFFSET + *0x598520);\n    puVar8 = *0x20;\n    do {\n        puVar1 = iVar4 + 0x10;\n        puVar9 = puVar8;\n        if (*puVar1 <= puVar8 && puVar8 != *puVar1) {\n            puVar9 = puVar8 + -0x40;\n            *(puVar8 + -8) = unaff_RBP;\n            unaff_RBP = puVar8 + -8;\n            *(puVar8 + -0x1c) = 0;\n            *(puVar8 + -0x20) = 0;\n            *(puVar8 + -0x24) = 0;\n            *(puVar8 + -0x10) = 0;\n            *(puVar8 + -0x18) = 0;\n            *(puVar8 + -0x28) = 0;\n            uVar5 = 0;\n            iVar7 = 0xb3a4b57ce31;\n            for (iVar6 = 0x1e; -1 < iVar6; iVar6 = iVar6 + -1) {\n                iVar10 = 1000000000 << (iVar6 & 0x3f);\n                if (iVar10 <= iVar7) {\n                    iVar7 = iVar7 - iVar10;\n                    uVar5 = uVar5 | 1 << (iVar6 & 0x1f);\n                }\n            }\n            if (iVar7 < 1000000000) {\n                *(puVar8 + -0x1c) = iVar7;\n            }\n            else {\n                *(puVar8 + -0x1c) = 0;\n                uVar5 = 0x7fffffff;\n            }\n            if ((uVar5 == 0x3039) && (*(puVar8 + -0x1c) == 0xd431)) {\n                *(puVar8 + -0x2c) = 0;\n                *(puVar8 + -0x2c) = 1;\n                piVar2 = puVar8 + -0x2c;\n                LOCK();\n                if (*piVar2 == 1) {\n                    *piVar2 = 2;\n                    if (*(puVar8 + -0x2c) == 2) {\n                        *(puVar8 + -0x2c) = 4;\n                        LOCK();\n                        if (*piVar2 == 5) {\n                            *piVar2 = 6;\n                        }\n                        else {\n                            if (*(puVar8 + -0x2c) == 4) {\n                                *(puVar8 + -0x2c) = 0xffffffff;\n                                LOCK();\n                                if (*piVar2 == -1) {\n                                    *piVar2 = -2;\n                                    if (*(puVar8 + -0x2c) == -2) {\n                                        *(puVar8 + -0x28) = 0x1010101;\n                                        puVar3 = puVar8 + -0x27;\n                                        LOCK();\n                                        *puVar3 = *puVar3 | 0xf0;\n                                        if ((((puVar8[-0x28] == '\\x01') && (puVar8[-0x27] == -0xf)) &&\n                                            (puVar8[-0x26] == '\\x01')) && (puVar8[-0x25] == '\\x01')) {\n                                            *(puVar8 + -0x28) = 0xffffffff;\n                                            LOCK();\n                                            *puVar3 = *puVar3 & 1;\n                                            if (((puVar8[-0x28] == -1) && (puVar8[-0x27] == '\\x01')) &&\n                                               ((puVar8[-0x26] == -1 && (puVar8[-0x25] == -1)))) {\n                                                *(puVar8 + -0x10) = 0xffffffffffffffff;\n                                                *(puVar8 + -0x48) = 0x44330b;\n                                                fcn.00433580();\n                                            }\n                                            *(puVar8 + -0x48) = 0x44331c;\n                                            fcn.00433580();\n                                        }\n                                        *(puVar8 + -0x48) = 0x44332d;\n                                        fcn.00433580();\n                                    }\n                                    *(puVar8 + -0x48) = 0x44333e;\n                                    fcn.00433580();\n                                }\n                                *(puVar8 + -0x48) = 0x44334f;\n                                fcn.00433580();\n                            }\n                            *(puVar8 + -0x48) = 0x443365;\n                            fcn.00433580();\n                        }\n                        *(puVar8 + -0x48) = 0x443376;\n                        fcn.00433580();\n                    }\n                    *(puVar8 + -0x48) = 0x443387;\n                    fcn.00433580();\n                }\n                *(puVar8 + -0x48) = 0x443398;\n                fcn.00433580();\n            }\n            *(puVar8 + -0x48) = 0x4433a9;\n            fcn.00433580();\n        }\n        *(puVar9 + -8) = 0x4433af;\n        fcn.0045bdc0();\n        puVar8 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1643
    },
    "004607e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004607e0(void)\n\n{\n    uint uVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t **ppuVar4;\n    int64_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t *puVar10;\n    ulong uVar11;\n    uint64_t uVar12;\n    ulong *puVar13;\n    ulong uVar14;\n    uint64_t uVar15;\n    ulong unaff_RBX;\n    uchar *puVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar9 = **(in_GS_OFFSET + *0x598520);\n    puVar16 = *0x20;\n    do {\n        puVar17 = puVar16;\n        if (*(iVar9 + 0x10) <= puVar16 + -0x128 && puVar16 + -0x128 != *(iVar9 + 0x10)) {\n            puVar17 = puVar16 + -0x1a8;\n            *(puVar16 + -8) = unaff_RBP;\n            unaff_RBP = puVar16 + -8;\n            puVar13 = *(iVar9 + 0x30);\n            puVar2 = puVar13[3];\n            if (puVar2[2] != 0xfffffffffffffb2e) {\n                *(puVar16 + -0xf8) = iVar9;\n                puVar10 = puVar13[0x12];\n                *(puVar16 + -0xb8) = puVar10;\n                if (puVar2 == puVar10) break;\n                *(puVar16 + -0xd8) = puVar13;\n                *(puVar16 + -0x150) = puVar2;\n                *(puVar16 + -0xe0) = *puVar13;\n                *(puVar16 + -0xe8) = puVar13[10];\n                *(puVar16 + -0x1b0) = 0x44823b;\n                fcn.00434ec0();\n                *(puVar16 + -0x1b0) = 0x44824c;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x448256;\n                fcn.00435620();\n                *(puVar16 + -0x1b0) = 0x448267;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x448274;\n                fcn.00435740();\n                *(puVar16 + -0x1b0) = 0x448285;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x448292;\n                fcn.00435740();\n                *(puVar16 + -0x1b0) = 0x4482a5;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x4482b2;\n                fcn.00435740();\n                *(puVar16 + -0x1b0) = 0x4482c5;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x4482d2;\n                fcn.00435740();\n                *(puVar16 + -0x1b0) = 0x4482d7;\n                fcn.00435120();\n                *(puVar16 + -0x1b0) = 0x4482dc;\n                fcn.00434f40();\n                iVar5 = *(*(puVar16 + -0xf8) + 0x30);\n                *(puVar16 + -0x40) = *(iVar5 + 8);\n                uVar1 = *(iVar5 + 0x14);\n                uVar6 = *(iVar5 + 0x18);\n                uVar7 = *(iVar5 + 0x1c);\n                *(puVar16 + -0x38) = *(iVar5 + 0x10);\n                *(puVar16 + -0x34) = uVar1;\n                *(puVar16 + -0x30) = uVar6;\n                *(puVar16 + -0x2c) = uVar7;\n                uVar1 = *(iVar5 + 0x24);\n                uVar6 = *(iVar5 + 0x28);\n                uVar7 = *(iVar5 + 0x2c);\n                *(puVar16 + -0x28) = *(iVar5 + 0x20);\n                *(puVar16 + -0x24) = uVar1;\n                *(puVar16 + -0x20) = uVar6;\n                *(puVar16 + -0x1c) = uVar7;\n                uVar1 = *(iVar5 + 0x34);\n                uVar6 = *(iVar5 + 0x38);\n                uVar7 = *(iVar5 + 0x3c);\n                *(puVar16 + -0x18) = *(iVar5 + 0x30);\n                *(puVar16 + -0x14) = uVar1;\n                *(puVar16 + -0x10) = uVar6;\n                *(puVar16 + -0xc) = uVar7;\n                *(puVar16 + -0x1b0) = 0x448345;\n                fcn.00453ca0(*(puVar16 + -0x18));\n                *(puVar16 + -0x1b0) = 0x448356;\n                fcn.00433580();\n            }\n            unaff_RBX = 0x17;\n            *(puVar16 + -0x1b0) = 0x448367;\n            fcn.00433580();\n        }\n        *(puVar17 + -8) = 0x44836d;\n        fcn.0045bdc0();\n        puVar16 = puVar17;\n    } while( true );\n    if (*(puVar10 + 0xb7) == '\\0') {\n        *(puVar16 + -0xb0) = puVar13[1];\n        uVar1 = *(puVar13 + 0x14);\n        uVar6 = *(puVar13 + 3);\n        uVar7 = *(puVar13 + 0x1c);\n        *(puVar16 + -0xa8) = *(puVar13 + 2);\n        *(puVar16 + -0xa4) = uVar1;\n        *(puVar16 + -0xa0) = uVar6;\n        *(puVar16 + -0x9c) = uVar7;\n        uVar1 = *(puVar13 + 0x24);\n        uVar6 = *(puVar13 + 5);\n        uVar7 = *(puVar13 + 0x2c);\n        *(puVar16 + -0x98) = *(puVar13 + 4);\n        *(puVar16 + -0x94) = uVar1;\n        *(puVar16 + -0x90) = uVar6;\n        *(puVar16 + -0x8c) = uVar7;\n        uVar1 = *(puVar13 + 0x34);\n        uVar6 = *(puVar13 + 7);\n        uVar7 = *(puVar13 + 0x3c);\n        *(puVar16 + -0x88) = *(puVar13 + 6);\n        *(puVar16 + -0x84) = uVar1;\n        *(puVar16 + -0x80) = uVar6;\n        *(puVar16 + -0x7c) = uVar7;\n        *(*(iVar9 + 0x30) + 0x10) = 0;\n        *(*(iVar9 + 0x30) + 0x30) = 0;\n        *(*(iVar9 + 0x30) + 8) = 0;\n        *(*(iVar9 + 0x30) + 0x18) = 0;\n        puVar13 = puVar10[2];\n        *(puVar16 + -0x100) = puVar13;\n        if ((puVar13 == 0xfffffffffffffade) &&\n           ((((iVar9 = *(iVar9 + 0x30),  *(iVar9 + 0xd8) != 0 || (*(iVar9 + 0xc0) != 0)) || (*(iVar9 + 0xd0) != 0)) ||\n            (*(*(iVar9 + 0xa0) + 4) != 1)))) {\n            puVar10[2] = *puVar10 + 0x13a0;\n            *(puVar16 + -0x1a8) = puVar10 + 7;\n            *(puVar16 + -0x1b0) = 0x447894;\n            fcn.0045bbe0();\n            puVar10 = *(puVar16 + -0xb8);\n            puVar13 = *(puVar16 + -0x100);\n        }\n        uVar15 = *puVar10;\n        if (uVar15 != 0) {\n            uVar3 = puVar10[7];\n            uVar12 = uVar3 - 8;\n            *(puVar16 + -0x178) = uVar12;\n            if (uVar12 < uVar15) {\n                *(puVar16 + -0x108) = uVar15;\n                *(puVar16 + -0x110) = uVar3;\n                *(puVar16 + -0x118) = puVar10[1];\n                *(puVar16 + -0x120) = *(puVar16 + -0xa8);\n                *(puVar16 + -0x128) = *(puVar16 + -0xb0);\n                *(puVar16 + -0x130) = *(puVar16 + -0x88);\n                *(puVar16 + -0x138) = puVar10[8];\n                *(puVar16 + -0x140) = puVar10[0xc];\n                *(puVar16 + -0xc0) = puVar10[10];\n                *(puVar16 + -0x1b0) = 0x44794b;\n                fcn.00434ec0();\n                *(puVar16 + -0x1b0) = 0x44795c;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x447966;\n                fcn.00435620();\n                *(puVar16 + -0x1b0) = 0x447977;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x447985;\n                fcn.00435620();\n                *(puVar16 + -0x1b0) = 0x447996;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x4479a5;\n                fcn.00435620();\n                *(puVar16 + -0x1b0) = 0x4479b6;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x4479c5;\n                fcn.00435620();\n                *(puVar16 + -0x1b0) = 0x4479d6;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x4479e5;\n                fcn.00435620();\n                *(puVar16 + -0x1b0) = 0x4479f6;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x447a05;\n                fcn.00435620();\n                *(puVar16 + -0x1b0) = 0x447a16;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x447a25;\n                fcn.00435620();\n                *(puVar16 + -0x1b0) = 0x447a36;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x447a45;\n                fcn.00435620();\n                *(puVar16 + -0x1b0) = 0x447a56;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x447a65;\n                fcn.00435620();\n                *(puVar16 + -0x1b0) = 0x447a76;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x447a85;\n                fcn.00435740();\n                *(puVar16 + -0x1b0) = 0x447a96;\n                fcn.004357c0();\n                *(puVar16 + -0x1b0) = 0x447a9b;\n                fcn.00434f40();\n                puVar10 = *(puVar16 + -0xb8);\n                puVar13 = *(puVar16 + -0x100);\n                uVar12 = *(puVar16 + -0x178);\n            }\n            if (*puVar10 < uVar12 || *puVar10 == uVar12) {\n                if (puVar13 != 0xfffffffffffffade) {\ncode_r0x00447b42:\n                    uVar15 = puVar10[1];\n                    uVar12 = *puVar10;\n                    *(puVar16 + -0x160) = uVar15 - uVar12;\n                    uVar3 = puVar10[8];\n                    *(puVar16 + -0x1b0) = 0x447b5a;\n                    iVar9 = fcn.0044bc60(uVar15 - uVar12, uVar3);\n                    uVar15 = *(puVar16 + -0x160);\n                    uVar12 = uVar15 << 1;\n                    if (iVar9 != 0) {\n                        *(puVar16 + -0x148) = uVar12;\n                        *(puVar16 + -0x1b0) = 0x447b74;\n                        iVar8 = fcn.0044c8c0();\n                        for (uVar12 = *(puVar16 + -0x148);\n                            uVar12 - (*(*(puVar16 + -0xb8) + 8) - *(*(puVar16 + -0xb8) + 0x38)) < iVar8 + 0x13a0U;\n                            uVar12 = uVar12 << 1) {\n                        }\n                        uVar15 = *(puVar16 + -0x160);\n                    }\n                    if (*(puVar16 + -0x100) == -0x113) {\n                        uVar12 = uVar15;\n                    }\n                    if ((uVar12 <= *0x52d398) && (uVar12 <= *0x52d390)) {\n                        *(puVar16 + -0x158) = uVar12;\n                        *(puVar16 + -0x1b0) = 0x447be5;\n                        fcn.00437a40(8);\n                        *(puVar16 + -0x1b0) = 0x447bf7;\n                        fcn.00447380();\n                        *(puVar16 + -0x1b0) = 0x447c0e;\n                        fcn.00437a40(2);\n                        *(puVar16 + -0x1a8) = *(puVar16 + -0xb8) + 0x38;\n                        *(puVar16 + -0x1b0) = 0x447c25;\n                        fcn.0045bbe0();\n                        return;\n                    }\n                    if (*0x52d390 <= *0x52d398) goto code_r0x00447d3b;\n                    *(puVar16 + -0x1b0) = 0x447c59;\n                    fcn.00434ec0();\n                    *(puVar16 + -0x1b0) = 0x447c6a;\n                    fcn.004357c0();\n                    *(puVar16 + -0x1b0) = 0x447c76;\n                    fcn.004354c0();\n                    *(puVar16 + -0x1b0) = 0x447c87;\n                    fcn.004357c0();\n                    *(puVar16 + -0x1b0) = 0x447c8c;\n                    fcn.00434f40();\n                    do {\n                        *(puVar16 + -0x108) = **(puVar16 + -0xb8);\n                        *(puVar16 + -0x110) = (*(puVar16 + -0xb8))[1];\n                        *(puVar16 + -0x1b0) = 0x447cb0;\n                        fcn.00434ec0();\n                        *(puVar16 + -0x1b0) = 0x447cc5;\n                        fcn.004357c0();\n                        *(puVar16 + -0x1b0) = 0x447ccf;\n                        fcn.00435620();\n                        *(puVar16 + -0x1b0) = 0x447ce5;\n                        fcn.004357c0();\n                        *(puVar16 + -0x1b0) = 0x447cf2;\n                        fcn.00435620();\n                        *(puVar16 + -0x1b0) = 0x447d05;\n                        fcn.004357c0();\n                        *(puVar16 + -0x1b0) = 0x447d12;\n                        fcn.00435620();\n                        *(puVar16 + -0x1b0) = 0x447d25;\n                        fcn.004357c0();\n                        *(puVar16 + -0x1b0) = 0x447d2a;\n                        fcn.00434f40();\n                        *(puVar16 + -0x1b0) = 0x447d3b;\n                        fcn.00433580();\ncode_r0x00447d3b:\n                        *(puVar16 + -0x1b0) = 0x447d45;\n                        fcn.00434ec0();\n                        *(puVar16 + -0x1b0) = 0x447d56;\n                        fcn.004357c0();\n                        *(puVar16 + -0x1b0) = 0x447d65;\n                        fcn.004354c0();\n                        *(puVar16 + -0x1b0) = 0x447d76;\n                        fcn.004357c0();\n                        *(puVar16 + -0x1b0) = 0x447d7b;\n                        fcn.00434f40();\n                    } while( true );\n                }\n                ppuVar4 = *(*(puVar16 + -0xf8) + 0x30);\n                if (*ppuVar4 != puVar10) {\n                    if ((ppuVar4[0x14] != NULL) || (*(ppuVar4 + 0x1b) != 0)) {\n                        if (*(puVar10 + 0xb3) != '\\0') {\n                            *(puVar10 + 0xb3) = 0;\n                            *(puVar16 + -0x1b0) = 0x447b0a;\n                            fcn.00448420();\n                            puVar10 = *(puVar16 + -0xb8);\n                            puVar13 = *(puVar16 + -0x100);\n                        }\n                        if (*(puVar10 + 0xb2) != '\\0') {\n                            *(puVar16 + -0x1b0) = 0x447b2d;\n                            fcn.0043cce0(puVar13);\n                        }\n                        *(puVar16 + -0x1b0) = 0x447b3a;\n                        fcn.0043cc60();\n                        puVar10 = *(puVar16 + -0xb8);\n                        goto code_r0x00447b42;\n                    }\n                    *(puVar16 + -0x1b0) = 0x447db6;\n                    fcn.00433580();\n                }\n                *(puVar16 + -0x1b0) = 0x447dc7;\n                puVar10 = fcn.00433580();\n            }\n            puVar13 = *(puVar10 + 0x12);\n            *(puVar16 + -0x17c) = *(puVar10 + 0x12);\n            *(puVar16 + -0x100) = puVar10[0x13];\n            *(puVar16 + -0x1b0) = 0x447de6;\n            fcn.00434ec0();\n            *(puVar16 + -0x1b0) = 0x447df7;\n            fcn.004357c0();\n            *(puVar16 + -0x1b0) = 0x447e05;\n            fcn.00435740();\n            *(puVar16 + -0x1b0) = 0x447e16;\n            fcn.004357c0();\n            *(puVar16 + -0x1b0) = 0x447e25;\n            fcn.004354c0();\n            *(puVar16 + -0x1b0) = 0x447e36;\n            fcn.004357c0();\n            *(puVar16 + -0x1b0) = 0x447e45;\n            fcn.00435620();\n            *(puVar16 + -0x1b0) = 0x447e56;\n            fcn.004357c0();\n            *(puVar16 + -0x1b0) = 0x447e5b;\n            fcn.00434f40();\n            *(puVar16 + -0x108) = **(puVar16 + -0xb8);\n            *(puVar16 + -0x1b0) = 0x447e73;\n            fcn.00434ec0();\n            *(puVar16 + -0x1b0) = 0x447e85;\n            fcn.004357c0();\n            *(puVar16 + -0x1b0) = 0x447e8f;\n            fcn.00435620();\n            *(puVar16 + -0x1b0) = 0x447ea5;\n            fcn.004357c0();\n            *(puVar16 + -0x1b0) = 0x447eb2;\n            fcn.00435620();\n            *(puVar16 + -0x1b0) = 0x447eb7;\n            fcn.00435120();\n            *(puVar16 + -0x1b0) = 0x447ebc;\n            fcn.00434f40();\n            *(puVar16 + -0x1b0) = 0x447ecd;\n            fcn.00433580();\n        }\n        unaff_RBX = 0x19;\n        *(puVar16 + -0x1b0) = 0x447ede;\n        puVar10 = fcn.00433580();\n    }\n    *(puVar16 + -0x78) = puVar13[1];\n    uVar1 = *(puVar13 + 0x14);\n    uVar6 = *(puVar13 + 3);\n    uVar7 = *(puVar13 + 0x1c);\n    *(puVar16 + -0x70) = *(puVar13 + 2);\n    *(puVar16 + -0x6c) = uVar1;\n    *(puVar16 + -0x68) = uVar6;\n    *(puVar16 + -100) = uVar7;\n    uVar1 = *(puVar13 + 0x24);\n    uVar6 = *(puVar13 + 5);\n    uVar7 = *(puVar13 + 0x2c);\n    *(puVar16 + -0x60) = *(puVar13 + 4);\n    *(puVar16 + -0x5c) = uVar1;\n    *(puVar16 + -0x58) = uVar6;\n    *(puVar16 + -0x54) = uVar7;\n    uVar1 = *(puVar13 + 0x34);\n    uVar6 = *(puVar13 + 7);\n    uVar7 = *(puVar13 + 0x3c);\n    *(puVar16 + -0x50) = *(puVar13 + 6);\n    *(puVar16 + -0x4c) = uVar1;\n    *(puVar16 + -0x48) = uVar6;\n    *(puVar16 + -0x44) = uVar7;\n    puVar10[0xe] = *(puVar16 + -0x78);\n    puVar10[0xf] = *(puVar16 + -0x70);\n    uVar15 = puVar10[8];\n    *(puVar16 + -0x1b0) = 0x447f32;\n    iVar9 = fcn.0044bc60(uVar15);\n    if (iVar9 != 0) goto code_r0x004481b6;\n    uVar11 = 9;\n    uVar14 = 0x4a8a4f;\n    iVar9 = 0;\n    do {\n        *(puVar16 + -0x168) = uVar11;\n        *(puVar16 + -0xf0) = uVar14;\n        *(puVar16 + -0x170) = iVar9;\n        puVar13 = *(puVar16 + -0xb8);\n        *(puVar16 + -0x108) = puVar13[7];\n        *(puVar16 + -0x110) = *puVar13;\n        *(puVar16 + -0x118) = puVar13[1];\n        *(puVar16 + -0x120) = *(puVar16 + -0x70);\n        *(puVar16 + -0x128) = *(puVar16 + -0x78);\n        *(puVar16 + -0x130) = *(puVar16 + -0x50);\n        *(puVar16 + -0x138) = puVar13[8];\n        *(puVar16 + -0x140) = puVar13[0xc];\n        *(puVar16 + -0xc0) = puVar13[10];\n        *(puVar16 + -0x1b0) = 0x447fd6;\n        fcn.00434ec0();\n        *(puVar16 + -0x1b0) = 0x447fe7;\n        fcn.004357c0();\n        *(puVar16 + -0x1b0) = 0x447ff9;\n        fcn.004357c0();\n        *(puVar16 + -0x1b0) = 0x44800a;\n        fcn.004357c0();\n        *(puVar16 + -0x1b0) = 0x448014;\n        fcn.00435620();\n        *(puVar16 + -0x1b0) = 0x448025;\n        fcn.004357c0();\n        *(puVar16 + -0x1b0) = 0x448032;\n        fcn.00435620();\n        *(puVar16 + -0x1b0) = 0x448045;\n        fcn.004357c0();\n        *(puVar16 + -0x1b0) = 0x448052;\n        fcn.00435620();\n        *(puVar16 + -0x1b0) = 0x448065;\n        fcn.004357c0();\n        *(puVar16 + -0x1b0) = 0x448072;\n        fcn.00435620();\n        *(puVar16 + -0x1b0) = 0x448085;\n        fcn.004357c0();\n        *(puVar16 + -0x1b0) = 0x448092;\n        fcn.00435620();\n        *(puVar16 + -0x1b0) = 0x4480a5;\n        fcn.004357c0();\n        *(puVar16 + -0x1b0) = 0x4480b2;\n        fcn.00435620();\n        *(puVar16 + -0x1b0) = 0x4480c5;\n        fcn.004357c0();\n        *(puVar16 + -0x1b0) = 0x4480cf;\n        fcn.00435620();\n        *(puVar16 + -0x1b0) = 0x4480e5;\n        fcn.004357c0();\n        *(puVar16 + -0x1b0) = 0x4480ef;\n        fcn.00435620();\n        *(puVar16 + -0x1b0) = 0x448105;\n        fcn.004357c0();\n        *(puVar16 + -0x1b0) = 0x448112;\n        fcn.00435620();\n        *(puVar16 + -0x1b0) = 0x448125;\n        fcn.004357c0();\n        *(puVar16 + -0x1b0) = 0x44812f;\n        fcn.00435620();\n        *(puVar16 + -0x1b0) = 0x448145;\n        fcn.004357c0();\n        *(puVar16 + -0x1b0) = 0x448152;\n        fcn.00435740();\n        *(puVar16 + -0x1b0) = 0x448165;\n        fcn.004357c0();\n        *(puVar16 + -0x1b0) = 0x44816a;\n        fcn.00434f40();\n        *(*(*(puVar16 + -0xf8) + 0x30) + 0xf9) = 2;\n        *(puVar16 + -0x1b0) = 0x4481a5;\n        fcn.00453ca0(*(puVar16 + -0x50));\n        unaff_RBX = 0x20;\n        *(puVar16 + -0x1b0) = 0x4481b6;\n        iVar9 = fcn.00433580();\ncode_r0x004481b6:\n        *(puVar16 + -200) = unaff_RBX;\n        *(puVar16 + -0xd0) = iVar9;\n        *(puVar16 + -0x1b0) = 0x4481cb;\n        uVar11 = fcn.0044c400();\n        *(puVar16 + -0xf0) = uVar11;\n        *(puVar16 + -0x168) = unaff_RBX;\n        uVar1 = **(puVar16 + -0xd0);\n        *(puVar16 + -0x1b0) = 0x4481f1;\n        iVar9 = fcn.0044b9e0(uVar1);\n        iVar9 = *(*(puVar16 + -0xb8) + 0x40) - iVar9;\n        uVar11 = *(puVar16 + -0x168);\n        uVar14 = *(puVar16 + -0xf0);\n    } while( true );\n}\n",
        "token_count": 7095
    },
    "00464500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00464500(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    char cVar3;\n    int32_t *in_RAX;\n    ulong uVar4;\n    ulong *puVar5;\n    uchar *puVar6;\n    int32_t *piVar7;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar auStackX16 [8];\n    ulong uStackX24;\n    ulong uStackX32;\n    ulong uStack0000000000000028;\n    \n    uStackX24 = arg1;\n    uStack0000000000000028 = unaff_RSI;\n    while (uStackX32 = unaff_RDI,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n        unaff_RDI = uStackX32;\n    }\n    if (*(in_RAX + 2) == NULL) {\n        cVar3 = '\\0';\n    }\n    else {\n        cVar3 = **(in_RAX + 2);\n    }\n    fcn.0040d6c0(auStackX16);\n    if ((cVar3 != '\\0') && (uVar4 = fcn.00464860(uStack0000000000000028),  unaff_RDI != '\\0')) {\n        return uVar4;\n    }\n    LOCK();\n    if (*in_RAX == 0) {\n        *in_RAX = 1;\n    }\n    else {\n        fcn.00464ca0();\n    }\n    puVar5 = *(in_RAX + 2);\n    if (puVar5 == NULL) {\n        uVar4 = 0;\n        cVar3 = '\\0';\n    }\n    else {\n        cVar3 = *(puVar5 + 1);\n        uVar4 = *puVar5;\n    }\n    puVar5 = fcn.0040d6c0(auStackX16);\n    uVar2 = *puVar5;\n    if (uVar4 == '\\0') {\n        uVar2 = *(in_RAX + 4);\n        piVar7 = in_RAX;\n        fcn.0040d6c0(auStackX16);\n        if (uVar2 == '\\0') {\n            if (cVar3 == '\\0') {\n                fcn.00464aa0();\n                puVar5 = fcn.0040c6e0();\n                if (*0x5985b0 == 0) {\n                    *puVar5 = uVar4;\n                }\n                else {\n                    puVar5 = fcn.0045e080(uVar4, piVar7, in_R8, in_R9);\n                }\n                *(puVar5 + 1) = 1;\n                fcn.00458ce0(in_RAX, in_RAX + 2);\n            }\n            puVar5 = fcn.0040c6e0();\n            *puVar5 = uStackX32;\n            if (*0x5985b0 == 0) {\n                puVar5[1] = uStack0000000000000028;\n            }\n            else {\n                fcn.0045e0a0(uStackX32, uStack0000000000000028, in_R8, in_R9);\n            }\n            uVar4 = fcn.0040c6e0();\n            fcn.00458ce0();\n            puVar6 = auStackX16;\n            puVar5 = fcn.0040db00(puVar6);\n            if (*0x5985b0 == 0) {\n                *puVar5 = uVar4;\n            }\n            else {\n                fcn.0045e0a0(puVar6, uVar4, in_R8, in_R9);\n            }\n        }\n        else {\n            uStackX32 = fcn.00464860(uStack0000000000000028);\n            fcn.004649c0();\n        }\n    }\n    else {\n        cVar3 = fcn.00458d40(0);\n        if (cVar3 != '\\0') {\n            puVar6 = auStackX16;\n            piVar7 = in_RAX;\n            puVar5 = fcn.0040db00(puVar6);\n            if (*0x5985b0 == 0) {\n                *puVar5 = uVar2;\n            }\n            else {\n                fcn.0045df80(puVar6, piVar7, in_R8, in_R9);\n            }\n        }\n        uStackX32 = fcn.00464860(uStack0000000000000028);\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + -1;\n    if (iVar1 != 1) {\n        fcn.00464fa0();\n    }\n    return uStackX32;\n}\n",
        "token_count": 1115
    },
    "00464860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00464860(ulong arg1)\n\n{\n    ulong *puVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong *puVar3;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    puVar3 = *in_RAX;\n    if (puVar3 == *0x544c80) {\n        return 0;\n    }\n    if (puVar3 != NULL) {\n        return *puVar3;\n    }\n    puVar3 = fcn.0040c6e0();\n    *puVar3 = unaff_RBX;\n    if (*0x5985b0 == 0) {\n        puVar3[1] = arg1;\n    }\n    else {\n        puVar3 = fcn.0045e0a0(unaff_RBX, arg1, in_R8, in_R9);\n    }\n    while( true ) {\n        cVar2 = fcn.00458d40(puVar3);\n        if (cVar2 != '\\0') {\n            return unaff_RBX;\n        }\n        puVar1 = *in_RAX;\n        if (puVar1 == *0x544c80) break;\n        if (puVar1 != NULL) {\n            return *puVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 355
    },
    "004649c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004649c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar2 = *(in_RAX + 0x18) + 1;\n    *(in_RAX + 0x18) = iVar2;\n    if (*(in_RAX + 0x10) == NULL) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = **(in_RAX + 0x10);\n    }\n    if (iVar3 <= iVar2) {\n        puVar1 = fcn.0040c6e0();\n        if (*0x5985b0 == 0) {\n            *puVar1 = *(in_RAX + 0x10);\n        }\n        else {\n            fcn.0045e0a0(in_RAX, *(in_RAX + 0x10), param_3, param_4);\n        }\n        fcn.00458ce0();\n        if (*0x5985b0 == 0) {\n            *(in_RAX + 0x10) = 0;\n        }\n        else {\n            fcn.0045e0a0(in_RAX, 0, param_3, param_4);\n        }\n        *(in_RAX + 0x18) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 384
    },
    "00464aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00464aa0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    ulong *puVar3;\n    ulong arg1;\n    ulong *noname_0;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStack120;\n    int64_t iStack112;\n    int64_t *piStack104;\n    ulong *puStack96;\n    uchar auStack32 [24];\n    \n    while (auStack32 < *(unaff_R14 + 0x10) || auStack32 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*(in_RAX + 0x10) == 0) {\n        arg1 = 0;\n        uVar2 = fcn.0040d2a0(0);\n        if (*0x5985b0 == 0) {\n            *(in_RAX + 0x10) = uVar2;\n            iVar4 = in_RAX;\n        }\n        else {\n            iVar4 = in_RAX + 0x10;\n            fcn.0045df80(arg1, iVar4, param_3, param_4);\n        }\n        fcn.0045e6cb();\n        fcn.0040e060(&piStack104, iVar4, param_3, param_4);\n        while (piStack104 != NULL) {\n            iVar4 = *piStack104;\n            iStack112 = piStack104[1];\n            noname_0 = *puStack96;\n            puVar3 = puStack96;\n            iStack120 = iVar4;\n            cVar1 = fcn.00464c20();\n            if (cVar1 == '\\0') {\n                iVar4 = in_RAX;\n                puVar3 = fcn.0040db00(&iStack120);\n                if (*0x5985b0 == 0) {\n                    *puVar3 = noname_0;\n                    puVar3 = noname_0;\n                }\n                else {\n                    fcn.0045e080(noname_0, iVar4, param_3, param_4);\n                    puVar3 = noname_0;\n                }\n            }\n            fcn.0040e2e0(puVar3, iVar4);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 544
    },
    "00464ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00464ca0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar7 = *in_RAX;\n    bVar3 = false;\n    bVar1 = false;\n    iVar5 = 0;\n    while( true ) {\n        while( true ) {\n            while( true ) {\n                uVar8 = uVar7 & 5;\n                if (uVar8 == 1) {\n                    cVar2 = fcn.00459a60();\n                }\n                else {\n                    cVar2 = '\\0';\n                }\n                if (cVar2 == '\\0') break;\n                if (((!bVar1) && ((uVar7 >> 1 & 1) == 0)) && (uVar7 >> 3 != 0)) {\n                    LOCK();\n                    if (uVar7 == *in_RAX) {\n                        *in_RAX = uVar7 | 2;\n                        bVar1 = true;\n                    }\n                }\n                fcn.00459ae0();\n                uVar7 = *in_RAX;\n            }\n            uVar9 = uVar7;\n            if ((uVar7 & 4) == 0) {\n                uVar9 = uVar7 | 1;\n            }\n            if (uVar8 != 0) {\n                uVar9 = uVar9 + 8;\n            }\n            if ((bVar3) && ((uVar7 & 1) != 0)) {\n                uVar9 = uVar9 | 4;\n            }\n            if (bVar1) {\n                if ((uVar9 >> 1 & 1) == 0) {\n                    fcn.00459680();\n                }\n                uVar9 = uVar9 & 0xfffffffd;\n            }\n            LOCK();\n            if (uVar7 == *in_RAX) break;\n            uVar7 = *in_RAX;\n        }\n        *in_RAX = uVar9;\n        if (uVar8 == 0) break;\n        if (iVar5 == 0) {\n            iVar5 = fcn.0045a0a0();\n        }\n        fcn.00459f60(1);\n        if (bVar3) {\n            bVar3 = true;\n        }\n        else {\n            iVar6 = fcn.0045a0a0();\n            bVar3 = 1000000 < iVar6 - iVar5;\n        }\n        uVar7 = *in_RAX;\n        if ((uVar7 >> 2 & 1) != 0) {\n            if (((uVar7 & 3) != 0) || (uVar7 >> 3 == 0)) {\n                fcn.00459680();\n            }\n            if ((bVar3) && (uVar7 >> 3 != 1)) {\n                iVar4 = -7;\n            }\n            else {\n                iVar4 = -0xb;\n            }\n            LOCK();\n            uVar7 = *in_RAX;\n            *in_RAX = *in_RAX + iVar4;\n            return uVar7;\n        }\n        bVar1 = true;\n    }\n    return uVar7;\n}\n",
        "token_count": 802
    },
    "00465080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00465080(void)\n\n{\n    int32_t *in_RAX;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    bool bVar1;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    code **ppcStack24;\n    code **ppcStack16;\n    \n    while (ppcStack24 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    LOCK();\n    bVar1 = in_RAX[1] == 0;\n    if (bVar1) {\n        in_RAX[1] = 1;\n    }\n    if (!bVar1) {\n        fcn.00464ca0();\n    }\n    auStack56 = CONCAT88(in_RAX + 1, 0x465200);\n    ppcStack16 = auStack56;\n    if (*in_RAX == 0) {\n        auStack40 = CONCAT88(in_RAX, 0x4651c0);\n        ppcStack24 = auStack40;\n        (**unaff_RBX)(in_RAX, unaff_RBX);\n        (**ppcStack24)();\n    }\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 314
    },
    "00465260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00465260(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    ulong in_RDX;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (unaff_RBX != 0) {\n        piVar1 = fcn.004655e0();\n        if (*piVar1 == 0) {\n            *piVar1 = unaff_RBX;\n            if (*0x5985b0 == 0) {\n                piVar1[1] = arg1;\n            }\n            else {\n                fcn.0045df80(unaff_RBX, in_RDX, in_R8, in_R9);\n            }\n        }\n        else {\n            fcn.00465ea0(arg1);\n        }\n        fcn.00459a40();\n        return;\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "00465340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00465340(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    piVar1 = fcn.004655e0();\n    arg1 = *piVar1;\n    *piVar1 = 0;\n    if (*0x5985b0 == 0) {\n        piVar1[1] = 0;\n    }\n    else {\n        fcn.0045e0e0(arg1, piVar1[1], param_3, param_4);\n    }\n    if ((arg1 == 0) && (arg1 = fcn.00466080(),  arg1 == 0)) {\n        arg1 = fcn.00465420();\n    }\n    fcn.00459a40();\n    if ((arg1 == 0) && (*(in_RAX + 0x20) != NULL)) {\n        (***(in_RAX + 0x20))();\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "00465420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00465420(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar3 = *(in_RAX + 8);\n    iVar4 = 0;\n    while (iVar4 < iVar3) {\n        iVar4 = iVar4 + 1;\n        if (iVar3 == -1) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (unaff_RBX + iVar4) % iVar3;\n        }\n        iVar2 = fcn.00466100(iVar3, iVar2 * 0x80 + 0x10);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    uVar1 = *(in_RAX + 0x18);\n    if (uVar1 <= unaff_RBX) {\n        return 0;\n    }\n    iVar3 = *(in_RAX + 0x10);\n    iVar2 = unaff_RBX * 0x80;\n    iVar4 = *(iVar3 + iVar2);\n    if (iVar4 == 0) {\n        iVar3 = 0;\n        while( true ) {\n            if (uVar1 <= iVar3) {\n                *(in_RAX + 0x18) = 0;\n                return 0;\n            }\n            if (uVar1 == 0xffffffffffffffff) {\n                iVar4 = 0;\n            }\n            else {\n                iVar4 = (iVar3 + unaff_RBX) % uVar1;\n            }\n            iVar4 = fcn.00466100(uVar1, iVar4 * 0x80 + 0x10);\n            if (iVar4 != 0) break;\n            iVar3 = iVar3 + 1;\n        }\n        return iVar4;\n    }\n    *(iVar3 + iVar2) = 0;\n    if (*0x5985b0 == 0) {\n        *(iVar3 + 8 + iVar2) = 0;\n    }\n    else {\n        fcn.0045e080(0, iVar3, iVar4, *(iVar3 + 8 + iVar2));\n    }\n    return iVar4;\n}\n",
        "token_count": 556
    },
    "00465660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00465660(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t arg2;\n    uint64_t uVar5;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (&ppcStack16 < *(unaff_R14 + 0x10) || &ppcStack16 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    ppcStack16 = NULL;\n    fcn.00459a40();\n    LOCK();\n    if (*0x598540 == 0) {\n        *0x598540 = 1;\n    }\n    else {\n        fcn.00464ca0();\n    }\n    auStack32 = CONCAT88(0x598540, 0x465900);\n    ppcStack16 = auStack32;\n    uVar2 = fcn.00459a20();\n    iVar3 = *in_RAX;\n    if (in_RAX[1] < uVar2 || in_RAX[1] == uVar2) {\n        if (iVar3 == 0) {\n            uVar5 = *0x545698 + 1;\n            iVar3 = *0x545690;\n            uVar4 = *0x5456a0;\n            iVar1 = *0x545690;\n            if ((*0x5456a0 < uVar5) &&\n               (arg2 = *0x545690,  iVar3 = fcn.00445800(*0x5456a0),  iVar1 = iVar3,  *0x5985b0 != 0)) {\n                iVar3 = fcn.0045df80(*0x5456a0, arg2, uVar4, in_R9);\n                iVar1 = *0x545690;\n            }\n            *0x545690 = iVar1;\n            *0x545698 = uVar5;\n            if (*0x5985b0 == 0) {\n                *(iVar3 + -8 + uVar5 * 8) = in_RAX;\n            }\n            else {\n                fcn.0045e080(in_RAX, iVar3, uVar4, in_R9);\n            }\n        }\n        uVar4 = fcn.00406300();\n        iVar3 = fcn.00445720(uVar4);\n        if (uVar4 != 0) {\n            fcn.00458ce0();\n            in_RAX[1] = uVar4;\n            if (uVar2 < uVar4) {\n                (**ppcStack16)();\n                return uVar2 * 0x80 + iVar3;\n            }\n            fcn.0045e420(uVar4);\n        }\n        fcn.0045e420(0);\n        fcn.00432280();\n        return 0;\n    }\n    (**ppcStack16)();\n    return uVar2 * 0x80 + iVar3;\n}\n",
        "token_count": 689
    },
    "00465b00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00465b00(uint64_t arg1)\n\n{\n    int64_t arg4;\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t arg1_00;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        arg1_00 = arg1;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            arg1_00 = in_RAX[2];\n            arg4 = in_RAX[1];\n            uVar2 = *in_RAX >> 0x20;\n            if (uVar2 == *in_RAX + arg1_00) {\n                return 0;\n            }\n            uVar3 = uVar2 & arg1_00 - 1;\n            if (uVar3 < arg1_00) {\n                arg2 = uVar3 * 0x10;\n                if (*(arg4 + arg2) == 0) {\n                    uVar3 = 0;\n                    if (unaff_RBX != 0) {\n                        uVar3 = arg1;\n                    }\n                    iVar1 = 0x497b00;\n                    if (unaff_RBX != 0) {\n                        iVar1 = unaff_RBX;\n                    }\n                    *(arg4 + arg2) = iVar1;\n                    if (*0x5985b0 == 0) {\n                        *(arg4 + 8 + arg2) = uVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x465b8f;\n                        in_RAX = fcn.0045e0e0(arg2 + 8, arg2, arg1_00 - 1, arg4);\n                    }\n                    LOCK();\n                    *in_RAX = *in_RAX + 0x100000000;\n                    return 1;\n                }\n                return 0;\n            }\n            *(*0x20 + -0x20) = 0x465bcf;\n            in_RAX = fcn.0045e420(arg1_00);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1_00;\n        *(puVar4 + -8) = 0x465be5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 733
    },
    "00465c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00465c00(void)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    char cVar3;\n    uint64_t *in_RAX;\n    int64_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t arg2;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    int64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                iVar5 = uVar1 >> 0x20;\n                if (uVar1 == iVar5) {\n                    return 0;\n                }\n                uVar6 = iVar5 - 1;\n                arg4 = uVar1 & 0xffffffff;\n                LOCK();\n                uVar7 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar7) * (*in_RAX ^ (uVar6 << 0x20 | arg4));\n            } while (uVar1 != uVar7);\n            uVar1 = in_RAX[2];\n            uVar9 = uVar6 & uVar1 - 1U;\n            uVar7 = in_RAX[1];\n            if (uVar9 < uVar1) {\n                arg3 = uVar9 * 0x10;\n                iVar4 = *(uVar7 + arg3);\n                uVar2 = *(uVar7 + 8 + arg3);\n                if (iVar4 == 0x497b00) {\n                    *(*0x20 + -0x10) = uVar7;\n                    *(*0x20 + -0x28) = 0x497b00;\n                    *(*0x20 + -0x20) = arg3;\n                    *(*0x20 + -0x18) = uVar2;\n                    in_RAX = NULL;\n                    *(*0x20 + -0x48) = 0x465ca5;\n                    cVar3 = fcn.00403260(0);\n                    if (cVar3 == '\\0') {\n                        uVar7 = *(*0x20 + -0x10);\n                        arg3 = *(*0x20 + -0x20);\n                        iVar4 = *(*0x20 + -0x28);\n                    }\n                    else {\n                        uVar7 = *(*0x20 + -0x10);\n                        arg3 = *(*0x20 + -0x20);\n                        iVar4 = 0;\n                    }\n                }\n                arg2 = uVar7 + arg3 + 8;\n                if (*0x5985b0 == 0) {\n                    *(arg3 + uVar7) = in_XMM15;\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x465cef;\n                    fcn.0045e0e0(in_RAX, arg2, arg3, arg4);\n                    *(*0x20 + -0x48) = 0x465cf7;\n                    iVar4 = fcn.0045e0e0(in_RAX, arg2, arg3, arg4);\n                }\n                return iVar4;\n            }\n            *(*0x20 + -0x48) = 0x465d25;\n            in_RAX = fcn.0045e420(uVar1);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x465d30;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 922
    },
    "00465d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00465d40(void)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    uint64_t *in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    ulong arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                uVar7 = uVar1;\n                if (uVar7 == uVar1 >> 0x20) {\n                    return 0;\n                }\n                LOCK();\n                uVar4 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar4) * (*in_RAX ^ (uVar1 & 0xffffffff00000000 | uVar7 + 1));\n            } while (uVar1 != uVar4);\n            uVar1 = in_RAX[2];\n            uVar8 = uVar7 & uVar1 - 1U;\n            uVar4 = in_RAX[1];\n            if (uVar8 < uVar1) {\n                iVar9 = uVar8 * 0x10;\n                iVar3 = *(uVar4 + iVar9);\n                uVar5 = *(uVar4 + 8 + iVar9);\n                arg3 = 0x497b00;\n                if (iVar3 == 0x497b00) {\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0x18) = uVar5;\n                    *(*0x20 + -0x28) = 0x497b00;\n                    *(*0x20 + -0x20) = iVar9;\n                    *(*0x20 + -0x48) = 0x465de5;\n                    cVar2 = fcn.00403260(0);\n                    if (cVar2 == '\\0') {\n                        uVar4 = *(*0x20 + -0x10);\n                        iVar9 = *(*0x20 + -0x20);\n                        iVar3 = *(*0x20 + -0x28);\n                        uVar5 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        uVar4 = *(*0x20 + -0x10);\n                        iVar9 = *(*0x20 + -0x20);\n                        iVar3 = 0;\n                        uVar5 = 0;\n                    }\n                }\n                *(*0x20 + -0x18) = uVar5;\n                *(*0x20 + -0x28) = iVar3;\n                if (*0x5985b0 == 0) {\n                    *(uVar4 + 8 + iVar9) = 0;\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x465e3e;\n                    fcn.0045e0a0(iVar9 + uVar4, 0, arg3, in_R9);\n                }\n                *(*0x20 + -0x48) = 0x465e48;\n                fcn.00458ce0();\n                return *(*0x20 + -0x28);\n            }\n            *(*0x20 + -0x48) = 0x465e7b;\n            in_RAX = fcn.0045e420(uVar1);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x465e86;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 929
    },
    "00465ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00465ea0(ulong arg1)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong arg1_00;\n    int64_t iVar5;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar5 = *in_RAX;\n    iVar2 = iVar5;\n    if (iVar5 == 0) {\n        iVar2 = fcn.0040c6e0();\n        arg1_00 = 8;\n        uVar3 = fcn.00445720(8);\n        *(iVar2 + 0x10) = 8;\n        *(iVar2 + 0x18) = 8;\n        if (*0x5985b0 == 0) {\n            *(iVar2 + 8) = uVar3;\n            *in_RAX = iVar2;\n        }\n        else {\n            fcn.0045df80(arg1_00, iVar5, in_R8, in_R9);\n            fcn.0045e0c0(arg1_00, iVar5, in_R8, in_R9);\n        }\n        fcn.00458ce0(in_RAX + 1);\n    }\n    cVar1 = fcn.00465b00(arg1);\n    if (cVar1 == '\\0') {\n        iVar5 = *(iVar2 + 0x10);\n        iVar4 = fcn.0040c6e0();\n        iVar5 = iVar5 * 2;\n        if (0x3fffffff < iVar5) {\n            iVar5 = 0x40000000;\n        }\n        if (*0x5985b0 == 0) {\n            *(iVar4 + 0x28) = iVar2;\n        }\n        else {\n            fcn.0045e0a0(iVar5, iVar2, in_R8, in_R9);\n        }\n        iVar2 = iVar5;\n        uVar3 = fcn.00445720(iVar5);\n        *(iVar4 + 0x10) = iVar5;\n        *(iVar4 + 0x18) = iVar5;\n        if (*0x5985b0 == 0) {\n            *(iVar4 + 8) = uVar3;\n            *in_RAX = iVar4;\n        }\n        else {\n            fcn.0045df80(iVar2, iVar5, in_R8, in_R9);\n            fcn.0045e0c0(iVar2, iVar5, in_R8, in_R9);\n        }\n        fcn.00458ce0();\n        fcn.00465b00(arg1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 653
    },
    "004668a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.004668a0(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong *puVar5;\n    ulong *arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    ulong arg3;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0xa8) = 0x4668db;\n            uVar1 = fcn.00467400(arg1);\n            iVar3 = *0x544b08;\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x004668f6;\n                }\n            }\n            else {\n                uVar1 = 0;\ncode_r0x004668f6:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0xa8) = 0x46692a;\n                pcVar2 = fcn.00410600(*(*0x20 + 8));\n                unaff_RBX = *0x5454b0;\n                if (*pcVar2 == '\\0') {\n                    *(*0x20 + -0xa8) = 0x4669b2;\n                    uVar1 = fcn.00460960();\n                    goto code_r0x004669b2;\n                }\n                unaff_RDI = *(*0x20 + 8);\n                *(*0x20 + -0xa8) = 0x466957;\n                uVar1 = *0x5454b8;\n                fcn.00449580(*0x5454b8);\n                *(*0x20 + -0xa8) = 0x46695c;\n                iVar3 = fcn.00467400(uVar1);\n                if (unaff_RDI != 0) {\n                    iVar3 = 0;\n                    goto code_r0x00466976;\n                }\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\ncode_r0x00466976:\n                    if (unaff_RDI != 0) {\n                        return NULL;\n                    }\n                    *(*0x20 + -0xa8) = 0x46698b;\n                    uVar1 = fcn.00460900();\ncode_r0x004669b2:\n                    if (iVar3 != 0) {\n                        *(*0x20 + -0x50) = iVar3;\n                        *(*0x20 + -0xa8) = 0x4669c8;\n                        uVar1 = fcn.00467720();\n                        *(*0x20 + -0x10) = uVar1;\n                        *(*0x20 + -0x48) = iVar3;\n                        *(*0x20 + -0xa8) = 0x4669e5;\n                        uVar1 = fcn.0040c6e0();\n                        *(*0x20 + -0x18) = uVar1;\n                        *(*0x20 + -0xa8) = 0x4669f7;\n                        uVar1 = fcn.00409f60();\n                        puVar5 = *(*0x20 + -0x18);\n                        *puVar5 = 0x4ca5d8;\n                        if (*0x5985b0 == 0) {\n                            puVar5[1] = uVar1;\n                            arg1_00 = 0x4ca5d8;\n                        }\n                        else {\n                            *(*0x20 + -0xa8) = 0x466a27;\n                            fcn.0045df80(puVar5, puVar5 + 1, in_R8, in_R9);\n                            arg1_00 = puVar5;\n                        }\n                        puVar5[3] = *(*0x20 + 0x10);\n                        if (*0x5985b0 == 0) {\n                            uVar1 = *(*0x20 + 8);\n                            puVar5[2] = uVar1;\n                        }\n                        else {\n                            uVar1 = *(*0x20 + 8);\n                            *(*0x20 + -0xa8) = 0x466a65;\n                            fcn.0045e0a0(arg1_00, uVar1, in_R8, in_R9);\n                        }\n                        arg3 = 0x4a7f66;\n                        arg4 = 2;\n                        *(*0x20 + -0xa8) = 0x466a95;\n                        uVar4 = fcn.00449700(0xf, uVar1, 0x4a7f66, 2);\n                        iVar3 = *(*0x20 + -0x18);\n                        *(iVar3 + 0x28) = 0x4a9da1;\n                        if (*0x5985b0 == 0) {\n                            *(iVar3 + 0x20) = uVar4;\n                        }\n                        else {\n                            *(*0x20 + -0xa8) = 0x466ab9;\n                            fcn.0045df80(iVar3, uVar1, arg3, arg4);\n                        }\n                        return NULL;\n                    }\n                    *(*0x20 + -0x58) = uVar1;\n                    *(*0x20 + -0xa8) = 0x466ae5;\n                    puVar5 = fcn.0040c6e0();\n                    uVar1 = *(*0x20 + 0x10);\n                    puVar5[1] = uVar1;\n                    if (*0x5985b0 == 0) {\n                        *puVar5 = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0xa8) = 0x466b17;\n                        puVar5 = fcn.0045e0a0(uVar1, *(*0x20 + 8), in_R8, in_R9);\n                    }\n                    puVar5[2] = *(*0x20 + -0x58);\n                    return puVar5;\n                }\n                *(*0x20 + -0xa8) = 0x466b56;\n                fcn.0045e420(0);\n            }\n            arg1 = 0;\n            *(*0x20 + -0xa8) = 0x466b65;\n            in_RAX = fcn.0045e420(0);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x466b75;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1715
    },
    "00466ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00466ba0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    int64_t arg1_00;\n    ulong *arg1_01;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    ulong arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        iVar1 = arg1;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0xb8) = 0x466be9;\n            iVar1 = fcn.00467320(arg1);\n            if (unaff_RDI != 0) {\n                iVar1 = 0;\n                goto code_r0x00466c00;\n            }\n            if (arg1 != 0) {\n                unaff_RDI = 0;\ncode_r0x00466c00:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                arg1_00 = *(*0x20 + 8);\n                uVar2 = *(arg1_00 + 0x10);\n                *(*0x20 + -0xb8) = 0x466c25;\n                uVar2 = fcn.004609a0(arg1_00, uVar2);\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x90) = iVar1;\n                    *(*0x20 + -0xb8) = 0x466c3b;\n                    uVar2 = fcn.00467720();\n                    *(*0x20 + -0x70) = uVar2;\n                    *(*0x20 + -0x80) = iVar1;\n                    *(*0x20 + -0xb8) = 0x466c51;\n                    uVar2 = fcn.0040c6e0();\n                    *(*0x20 + -0x78) = uVar2;\n                    *(*0x20 + -0xb8) = 0x466c65;\n                    uVar2 = fcn.00409f60();\n                    puVar4 = *(*0x20 + -0x78);\n                    *puVar4 = 0x4ca5d8;\n                    if (*0x5985b0 == 0) {\n                        puVar4[1] = uVar2;\n                        arg1_01 = 0x4ca5d8;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x466c92;\n                        fcn.0045df80(puVar4, puVar4 + 1, in_R8, in_R9);\n                        arg1_01 = puVar4;\n                    }\n                    uVar2 = *(*0x20 + 0x18);\n                    puVar4[3] = uVar2;\n                    if (*0x5985b0 == 0) {\n                        uVar3 = *(*0x20 + 0x10);\n                        puVar4[2] = uVar3;\n                    }\n                    else {\n                        uVar3 = *(*0x20 + 0x10);\n                        *(*0x20 + -0xb8) = 0x466ccc;\n                        fcn.0045e100(arg1_01, uVar2, uVar3, in_R9);\n                    }\n                    *(*0x20 + -0xc0) = unaff_RBP;\n                    *(*0x20 + -0xb8) = 0x466cef;\n                    fcn.0045e6cb();\n                    arg3 = 0x4a9d92;\n                    *(*0x20 + -0x68) = 0x4a9d92;\n                    *(*0x20 + -0x60) = 0xf;\n                    *(*0x20 + -0x58) = uVar3;\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x48) = 0x4a99e0;\n                    *(*0x20 + -0x40) = 0xe;\n                    uVar2 = (*(*0x20 + 8))[1];\n                    *(*0x20 + -0x38) = **(*0x20 + 8);\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x28) = 0x4a7f66;\n                    *(*0x20 + -0x20) = 2;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    uVar2 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xb8) = 0x466d8c;\n                    uVar3 = fcn.00449340(6);\n                    iVar1 = *(*0x20 + -0x78);\n                    *(iVar1 + 0x28) = *0x20 + -0x68;\n                    if (*0x5985b0 == 0) {\n                        *(iVar1 + 0x20) = uVar3;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x466dad;\n                        fcn.0045df80(iVar1, uVar2, arg3, in_R9);\n                    }\n                    return NULL;\n                }\n                *(*0x20 + -0x88) = uVar2;\n                *(*0x20 + -0xb8) = 0x466dd7;\n                puVar4 = fcn.0040c6e0();\n                if (*0x5985b0 == 0) {\n                    *puVar4 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x466dff;\n                    puVar4 = fcn.0045e0a0(arg1_00, *(*0x20 + 8), in_R8, in_R9);\n                }\n                puVar4[2] = *(*0x20 + 0x18);\n                if (*0x5985b0 == 0) {\n                    puVar4[1] = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x466e33;\n                    puVar4 = fcn.0045e0a0(arg1_00, *(*0x20 + 0x10), in_R8, in_R9);\n                }\n                puVar4[3] = *(*0x20 + -0x88);\n                return puVar4;\n            }\n            iVar1 = 0;\n            *(*0x20 + -0xb8) = 0x466e72;\n            in_RAX = fcn.0045e420(0);\n            unaff_RBX = arg1;\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = iVar1;\n        *(puVar5 + -8) = 0x466e87;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1820
    },
    "00466f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00466f40(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 2) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.00464ca0();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x4670a0);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 2) == 0) {\n            iVar1 = *(in_RAX + 6);\n            fcn.004668a0(in_RAX);\n            if (iVar1 != 0) {\n                (**ppcStack16)();\n                return iVar1;\n            }\n            fcn.00458ce0(in_RAX + 2);\n        }\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if (bVar2) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 356
    },
    "00467100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00467100(void)\n\n{\n    bool bVar1;\n    int32_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 8) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.00464ca0();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x4672c0);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 8) == 0) {\n            iVar2 = fcn.00466f40();\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            iVar2 = *(in_RAX + 2);\n            fcn.00466ba0(*(in_RAX + 4));\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            fcn.00458ce0(in_RAX + 8);\n        }\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 395
    },
    "0046ea40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046ea40(uint64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RSI;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t unaff_RDI;\n    uint64_t arg1_01;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    uint64_t uStack16;\n    \n    while (&uStack16 < *(unaff_R14 + 0x10) || &uStack16 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (unaff_RDI - arg1 == 1) {\n        while (uVar2 = unaff_RSI,  unaff_RDI < uVar2) {\n            unaff_RSI = unaff_RDI + uVar2 >> 1;\n            cVar1 = (**(in_RAX + 0x20))();\n            if (cVar1 != '\\0') {\n                unaff_RDI = unaff_RSI + 1;\n                unaff_RSI = uVar2;\n            }\n        }\n        while (arg1 < unaff_RDI - 1) {\n            uStack16 = arg1 + 1;\n            (**(in_RAX + 0x28))(uStack16);\n            arg1 = uStack16;\n        }\n        return;\n    }\n    uStack16 = unaff_RDI;\n    if (unaff_RSI - unaff_RDI != 1) {\n        arg1_00 = unaff_RSI + arg1 >> 1;\n        uVar2 = unaff_RDI;\n        arg1_01 = arg1;\n        if (arg1_00 < unaff_RDI) {\n            uVar2 = arg1_00;\n            arg1_01 = (unaff_RDI + arg1_00) - unaff_RSI;\n        }\n        while (uVar3 = uVar2,  arg1_01 < uVar3) {\n            uVar2 = arg1_01 + uVar3 >> 1;\n            cVar1 = (**(in_RAX + 0x20))();\n            if (cVar1 == '\\0') {\n                arg1_01 = uVar2 + 1;\n                uVar2 = uVar3;\n            }\n        }\n        iVar4 = (unaff_RDI + arg1_00) - arg1_01;\n        if ((arg1_01 < uStack16) && (uStack16 < iVar4)) {\n            fcn.0046edc0(arg1_01);\n        }\n        if ((arg1 < arg1_01) && (arg1_01 < arg1_00)) {\n            fcn.0046ea40(arg1);\n        }\n        if ((arg1_00 < iVar4) && (iVar4 < unaff_RSI)) {\n            fcn.0046ea40(arg1_00);\n        }\n        return;\n    }\n    while (uVar2 = unaff_RDI,  arg1 < uVar2) {\n        unaff_RDI = arg1 + uVar2 >> 1;\n        cVar1 = (**(in_RAX + 0x20))(unaff_RDI);\n        if (cVar1 == '\\0') {\n            arg1 = unaff_RDI + 1;\n            unaff_RDI = uVar2;\n        }\n    }\n    while (arg1 < uStack16) {\n        uStack16 = uStack16 - 1;\n        (**(in_RAX + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 804
    },
    "0046f700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0046f700(void)\n\n{\n    int16_t *in_RAX;\n    int16_t *piVar1;\n    ulong uVar2;\n    uint64_t arg1;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == NULL) {\n                return 0;\n            }\n            arg1 = 0;\n            for (piVar1 = in_RAX; *piVar1 != 0; piVar1 = piVar1 + 1) {\n                arg1 = arg1 + 1;\n            }\n            if (-1 < arg1) {\n                if ((SUB168(ZEXT816(arg1) * ZEXT816(2) >> 0x40, 0) == 0) &&\n                   (SUB168(ZEXT816(arg1) * ZEXT816(2), 0) <= -in_RAX)) {\n                    *(*0x20 + -0x30) = 0x46f770;\n                    fcn.00466400(arg1);\n                    *(*0x20 + -0x30) = 0x46f785;\n                    uVar2 = fcn.00449c00(arg1);\n                    return uVar2;\n                }\n                *(*0x20 + -0x30) = 0x46f794;\n                fcn.00457560();\n            }\n            *(*0x20 + -0x30) = 0x46f799;\n            in_RAX = fcn.00457560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x46f7a5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 502
    },
    "00470c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00470c40(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while (uVar1 = *in_RAX,  (uVar1 & 0x7ffff8) != 0) {\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ uVar1 - 8);\n                if (uVar1 == uVar2) {\n                    if ((uVar1 - 8 & 0x7ffff9) != 1) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x20) = 0x470c93;\n                    uVar3 = fcn.004714e0();\n                    return uVar3;\n                }\n            }\n            *(*0x20 + -0x20) = 0x470cbe;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x470cc9;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 425
    },
    "004714e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004714e0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*(in_RAX + 0x10) != -1) {\n        if (*(in_RAX + 0x1b8) != 0) {\n            fcn.00459380();\n            *(in_RAX + 0x1b8) = 0;\n        }\n        if (*(in_RAX + 0x220) == '\\0') {\n            uVar1 = (***0x53d948)();\n        }\n        else {\n            uVar1 = fcn.00467a00(*(in_RAX + 0x10));\n        }\n        *(in_RAX + 0x10) = 0xffffffffffffffff;\n        fcn.00459fc0(in_RAX + 0x218);\n        return uVar1;\n    }\n    return 0x4ca5d8;\n}\n",
        "token_count": 260
    },
    "004719e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004719e0(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    uint8_t *puVar2;\n    int64_t iVar3;\n    uint64_t arg1;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t in_R11;\n    int64_t unaff_R14;\n    uint64_t uStack56;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar4 = 0;\n    arg1 = 0;\n    uVar6 = 0;\n    iVar3 = 0;\n    uVar8 = 0;\n    do {\n        if (unaff_RBX == 0) {\n            for (; 0 < uVar4; uVar4 = uVar4 - 1) {\n                if (arg1 < uVar6 + 1) {\n                    iVar3 = fcn.00445800(arg1);\n                }\n                *(uVar6 + iVar3) = 0x5c;\n                uVar6 = uVar6 + 1;\n            }\n            return iVar3;\n        }\n        uVar1 = *in_RAX;\n        puVar2 = in_RAX;\n        uVar5 = unaff_RBX;\n        uVar9 = uVar8;\n        if (uVar1 < 0x21) {\n            if (((uVar1 == 9) || (uVar1 == 0x20)) && (uVar8 == 0)) {\n                for (; 0 < uVar4; uVar4 = uVar4 - 1) {\n                    if (arg1 < uVar6 + 1) {\n                        iVar3 = fcn.00445800(arg1);\n                    }\n                    *(uVar6 + iVar3) = 0x5c;\n                    uVar6 = uVar6 + 1;\n                }\n                return iVar3;\n            }\ncode_r0x00471b75:\n            for (; 0 < uVar4; uVar4 = uVar4 - 1) {\n                if (arg1 < uVar6 + 1) {\n                    iVar3 = fcn.00445800(arg1);\n                    uVar9 = uVar8 & 0xff;\n                }\n                *(uVar6 + iVar3) = 0x5c;\n                uVar6 = uVar6 + 1;\n            }\n            if (arg1 < uVar6 + 1) {\n                iVar3 = fcn.00445800(arg1);\n                uVar9 = uVar8 & 0xff;\n            }\n            *(uVar6 + iVar3) = uVar1;\n            uVar4 = 0;\n            uVar6 = uVar6 + 1;\n        }\n        else {\n            if (uVar1 == 0x22) {\n                uVar10 = uVar4 / 2;\n                uStack56 = uVar4;\n                goto code_r0x00471be4;\n            }\n            if (uVar1 != 0x5c) goto code_r0x00471b75;\n            uVar4 = uVar4 + 1;\n        }\n        while (uVar5 == 0) {\n            puVar2 = fcn.0045e4e0(0);\n            uVar10 = uVar6;\n            uVar6 = in_R11;\n            while( true ) {\n                *((uVar6 - 1) + iVar3) = 0x5c;\n                uVar10 = uVar10 - 1;\n                in_R11 = uVar6;\ncode_r0x00471be4:\n                uVar7 = uVar9;\n                if (uVar10 < 1) break;\n                uVar6 = uVar6 + 1;\n                if (arg1 < uVar6) {\n                    iVar3 = fcn.00445800(arg1);\n                    uVar9 = uVar8 & 0xff;\n                    puVar2 = in_RAX;\n                    uVar5 = unaff_RBX;\n                    uVar4 = uStack56;\n                }\n            }\n            if ((uVar4 & 1) == 0) {\n                if (((uVar9 != '\\0') && (1 < uVar5)) && (puVar2[1] == 0x22)) {\n                    if (arg1 < uVar6 + 1) {\n                        iVar3 = fcn.00445800(arg1);\n                        uVar7 = uVar8;\n                        puVar2 = in_RAX;\n                        uVar5 = unaff_RBX;\n                    }\n                    *(uVar6 + iVar3) = 0x22;\n                    puVar2 = puVar2 + 1;\n                    uVar5 = uVar5 - 1;\n                    uVar6 = uVar6 + 1;\n                }\n                uVar9 = uVar7 ^ 1;\n                uVar10 = uVar6;\n            }\n            else {\n                uVar10 = uVar6 + 1;\n                if (arg1 < uVar10) {\n                    iVar3 = fcn.00445800(arg1);\n                    uVar9 = uVar8 & 0xff;\n                    puVar2 = in_RAX;\n                    uVar5 = unaff_RBX;\n                }\n                *(uVar6 + iVar3) = 0x22;\n            }\n            uVar4 = 0;\n            uVar6 = uVar10;\n        }\n        unaff_RBX = uVar5 - 1;\n        in_RAX = puVar2 + (-unaff_RBX >> 0x3f & 1);\n        uVar8 = uVar9;\n        in_R11 = unaff_RBX;\n    } while( true );\n}\n",
        "token_count": 1329
    },
    "00471da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00471da0(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    uint64_t arg1_00;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    int64_t arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    arg1 = 0;\n    iVar4 = 0;\n    uVar5 = 0;\n    while (unaff_RBX != 0) {\n        uVar1 = *in_RAX;\n        if ((uVar1 == 0x20) || (uVar1 == 9)) {\n            in_RAX = in_RAX + (-(unaff_RBX - 1) >> 0x3f & 1);\n            unaff_RBX = unaff_RBX - 1;\n        }\n        else {\n            uVar2 = fcn.004719e0();\n            uVar3 = fcn.00449920(unaff_RBX);\n            arg1_00 = uVar5 + 1;\n            if (arg1 < arg1_00) {\n                iVar4 = fcn.00445800(arg1);\n            }\n            arg3 = uVar5 * 0x10;\n            *(iVar4 + 8 + arg3) = uVar2;\n            in_RAX = uVar1;\n            unaff_RBX = uVar5;\n            if (*0x5985b0 == 0) {\n                *(iVar4 + arg3) = uVar3;\n                uVar5 = arg1_00;\n            }\n            else {\n                fcn.0045df80(arg1_00, arg1, arg3, in_R9);\n                uVar5 = arg1_00;\n            }\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 472
    },
    "00472de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00472de0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*(in_RAX + 800) != 0) {\n        if (unaff_RBX < 1) {\n            if (unaff_RBX < 0) {\n                for (; unaff_RBX < -0x3c; unaff_RBX = unaff_RBX + 0x3c) {\n                    fcn.004729c0();\n                }\n                fcn.004729c0();\n            }\n        }\n        else {\n            for (; 0x3c < unaff_RBX; unaff_RBX = unaff_RBX + -0x3c) {\n                fcn.00472bc0();\n            }\n            fcn.00472bc0();\n        }\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "00472ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00472ea0(void)\n\n{\n    code *pcVar1;\n    uchar *in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    bool bVar3;\n    \n    if ((unaff_RBX < 0) || (*(in_RAX + 800) <= unaff_RBX)) {\n        return;\n    }\n    if (799 < unaff_RBX) {\n        fcn.0045e420(800);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((in_RAX[unaff_RBX] == 0x35) && (*(in_RAX + 800) == unaff_RBX + 1)) {\n        if (in_RAX[0x331] != '\\0') goto code_r0x00472f11;\n        if (unaff_RBX < 1) {\n            bVar3 = false;\n        }\n        else {\n            bVar3 = in_RAX[unaff_RBX - 1] - 0x30 & 1;\n        }\n    }\n    else {\n        bVar3 = 0x34 < in_RAX[unaff_RBX];\n    }\n    if (bVar3 == false) {\n        *(in_RAX + 800) = unaff_RBX;\n        while (iVar2 = *(in_RAX + 800),  0 < iVar2) {\n            if (799 < iVar2 - 1U) {\n                iVar2 = 800;\n                in_RAX = fcn.0045e420(800);\n                goto code_r0x00472f7e;\n            }\n            if (in_RAX[iVar2 + -1] != '0') break;\n            *(in_RAX + 800) = iVar2 - 1U;\n        }\n        if (iVar2 != 0) {\n            return;\n        }\n        *(in_RAX + 0x328) = 0;\n        return;\n    }\ncode_r0x00472f11:\n    iVar2 = unaff_RBX - 1;\n    while( true ) {\n        if (iVar2 < 0) {\n            *in_RAX = 0x31;\n            *(in_RAX + 800) = 1;\n            *(in_RAX + 0x328) = *(in_RAX + 0x328) + 1;\n            return;\n        }\n        if (in_RAX[iVar2] < 0x39) break;\ncode_r0x00472f7e:\n        iVar2 = iVar2 + -1;\n    }\n    in_RAX[iVar2] = in_RAX[iVar2] + 1;\n    *(in_RAX + 800) = iVar2 + 1;\n    return;\n}\n",
        "token_count": 601
    },
    "00472fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00472fe0(uint64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong uVar5;\n    uint64_t noname_1_00;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint8_t uVar7;\n    uint32_t unaff_EDI;\n    uint64_t *arg4;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    uint64_t uVar11;\n    uint in_XMM0_Da;\n    uint extraout_XMM0_Da;\n    uint in_XMM0_Db;\n    uint extraout_XMM0_Db;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar7 = unaff_EDI;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (arg3 == 0x20) {\n                uVar10 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n                arg4 = 0x52d970;\n                goto code_r0x0047303f;\n            }\n            if (arg3 == 0x40) break;\n            unaff_RBX = 0x4ca428;\n            *(*0x20 + -0x138) = 0x4736b6;\n            in_RAX = fcn.00432de0();\n            in_XMM0_Da = extraout_XMM0_Da;\n            in_XMM0_Db = extraout_XMM0_Db;\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        puVar6[0x28] = uVar7;\n        *(puVar6 + 0x30) = unaff_RSI;\n        *(puVar6 + 0x38) = arg3;\n        *(puVar6 + -8) = 0x4736e5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        in_XMM0_Da = *(puVar6 + 0x20);\n        in_XMM0_Db = *(puVar6 + 0x20) >> 0x20;\n        unaff_EDI = puVar6[0x28];\n        unaff_RSI = *(puVar6 + 0x30);\n        arg3 = *(puVar6 + 0x38);\n        *0x20 = puVar6;\n    } while( true );\n    uVar10 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n    arg4 = 0x52d990;\ncode_r0x0047303f:\n    *(*0x20 + -0xb0) = uVar10;\n    *(*0x20 + 0x10) = unaff_RBX;\n    uVar4 = arg4[1];\n    uVar8 = *arg4;\n    *(*0x20 + -0x88) = -(uVar4 + uVar8 < 0x40);\n    *(*0x20 + -0x90) = uVar10 >> (uVar4 + uVar8 & 0x3f);\n    *(*0x20 + -0x98) = -(uVar8 < 0x40);\n    uVar4 = (-(uVar4 < 0x40) & 1 << (uVar4 & 0x3f)) - 1;\n    uVar11 = uVar10 >> (uVar8 & 0x3f) & -(uVar8 < 0x40) & uVar4;\n    uVar8 = 1 << (uVar8 & 0x3f) & *(*0x20 + -0x98);\n    uVar10 = uVar8 - 1 & *(*0x20 + -0xb0);\n    if (uVar11 == uVar4) {\n        if (uVar10 == 0) {\n            if ((*(*0x20 + -0x90) & *(*0x20 + -0x88)) == 0) {\n                iVar3 = 4;\n                uVar5 = 0x4a810a;\n            }\n            else {\n                iVar3 = 4;\n                uVar5 = 0x4a810e;\n            }\n        }\n        else {\n            iVar3 = 3;\n            uVar5 = 0x4a8086;\n        }\n        uVar10 = unaff_RBX + iVar3;\n        if (arg1 < uVar10) {\n            *(*0x20 + -0xd0) = iVar3;\n            *(*0x20 + -0x48) = uVar5;\n            *(*0x20 + -0x138) = 0x473159;\n            in_RAX = fcn.00445800(arg1);\n            iVar3 = *(*0x20 + -0xd0);\n        }\n        *(*0x20 + -0xa0) = arg1;\n        *(*0x20 + -0xa8) = uVar10;\n        *(*0x20 + -0x38) = in_RAX;\n        *(*0x20 + -0x138) = 0x47319b;\n        fcn.0045eda0(iVar3);\n        return *(*0x20 + -0x38);\n    }\n    if (uVar11 == 0) {\n        uVar4 = *(*0x20 + -0x88);\n        uVar8 = *(*0x20 + -0x90) & uVar4;\n        uVar11 = 1;\n    }\n    else {\n        uVar10 = uVar10 | uVar8;\n        uVar4 = *(*0x20 + -0x88);\n        uVar8 = *(*0x20 + -0x90) & uVar4;\n    }\n    uVar2 = uVar8 != 0;\n    noname_1_00 = uVar4 & 0xffffffffffffff00 | uVar2;\n    iVar3 = uVar11 + arg4[2];\n    if (uVar7 == 0x62) {\n        *(*0x20 + -0x138) = 0x473693;\n        uVar5 = fcn.00474a00(arg1, noname_1_00, iVar3, arg4);\n        return uVar5;\n    }\n    if ((uVar7 == 0x78) || (uVar7 == 0x58)) {\n        *(*0x20 + -0x138) = 0x473231;\n        uVar5 = fcn.00474b80(arg1, unaff_EDI, uVar4 & 0xffffff00 | uVar2, uVar10);\n        return uVar5;\n    }\n    if (*0x52d261 == '\\0') {\n        *(*0x20 + -0x138) = 0x473673;\n        uVar5 = fcn.00473720(arg1, unaff_EDI, uVar4 & 0xffffff00 | uVar2, uVar10);\n        return uVar5;\n    }\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0xd1) = uVar8 != 0;\n    *(*0x20 + -0xa0) = arg1;\n    *(*0x20 + 0x30) = unaff_RSI;\n    *(*0x20 + 0x28) = uVar7;\n    *(*0x20 + -0x30) = in_XMM15;\n    *(*0x20 + -0x28) = in_XMM15;\n    *(*0x20 + -0x18) = in_XMM15;\n    if (-1 < unaff_RSI) {\n        if (uVar7 == 0x66) {\n            bVar1 = false;\n        }\n        else {\n            if (uVar7 < 0x48) {\n                if (uVar7 == 0x45) {\ncode_r0x004732ce:\n                    iVar9 = unaff_RSI + 1;\n                }\n                else {\n                    if (uVar7 != 0x47) goto code_r0x00473311;\ncode_r0x004732e9:\n                    iVar9 = unaff_RSI;\n                    if (unaff_RSI == 0) {\n                        unaff_RSI = 1;\n                        iVar9 = unaff_RSI;\n                    }\n                }\n            }\n            else {\n                if (uVar7 == 0x65) goto code_r0x004732ce;\n                if (uVar7 == 0x67) goto code_r0x004732e9;\ncode_r0x00473311:\n                iVar9 = 1;\n            }\n            *(*0x20 + -0x40) = arg4;\n            *(*0x20 + -0xc0) = iVar3;\n            *(*0x20 + -200) = uVar10;\n            *(*0x20 + -0xa8) = unaff_RSI;\n            *(*0x20 + -0x80) = in_XMM15;\n            *(*0x20 + -0x78) = in_XMM15;\n            if ((arg3 == 0x20) && (iVar9 < 10)) {\n                *(*0x20 + -0x30) = *0x20 + -0x80;\n                *(*0x20 + -0x28) = 0x18;\n                *(*0x20 + -0x20) = 0x18;\n                uVar10 = *arg4;\n                *(*0x20 + -0x138) = 0x47339a;\n                fcn.00475240(iVar3 - uVar10, uVar10, 0x20);\n                noname_1_00 = *(*0x20 + -0xd1);\n                unaff_RSI = *(*0x20 + -0xa8);\n                unaff_EDI = *(*0x20 + 0x28);\n                arg1 = *(*0x20 + -0xa0);\n                uVar10 = *(*0x20 + -200);\n                bVar1 = true;\n            }\n            else {\n                if (iVar9 < 0x13) {\n                    *(*0x20 + -0xb8) = iVar9;\n                    *(*0x20 + -0x30) = *0x20 + -0x80;\n                    *(*0x20 + -0x28) = 0x18;\n                    *(*0x20 + -0x20) = 0x18;\n                    uVar10 = *arg4;\n                    *(*0x20 + -0x138) = 0x47343f;\n                    fcn.00475500(iVar3 - uVar10, uVar10, arg3);\n                    iVar9 = *(*0x20 + -0xb8);\n                    noname_1_00 = *(*0x20 + -0xd1);\n                    unaff_RSI = *(*0x20 + -0xa8);\n                    unaff_EDI = *(*0x20 + 0x28);\n                    arg1 = *(*0x20 + -0xa0);\n                    uVar10 = *(*0x20 + -200);\n                }\n                bVar1 = iVar9 < 0x13;\n            }\n        }\n        if (!bVar1) {\n            *(*0x20 + -0x138) = 0x4734c8;\n            uVar5 = fcn.00473720(arg1, unaff_EDI, noname_1_00 & 0xffffffff, uVar10);\n            return uVar5;\n        }\n        goto code_r0x0047360b;\n    }\n    *(*0x20 + -0x68) = in_XMM15;\n    *(*0x20 + -0x58) = in_XMM15;\n    *(*0x20 + -0x30) = *0x20 + -0x68;\n    *(*0x20 + -0x28) = 0x20;\n    *(*0x20 + -0x20) = 0x20;\n    uVar10 = *arg4;\n    *(*0x20 + -0x138) = 0x47352e;\n    fcn.00475a80(iVar3 - uVar10, uVar10);\n    uVar7 = *(*0x20 + 0x28);\n    if (uVar7 < 0x48) {\n        if (uVar7 == 0x45) {\ncode_r0x0047356f:\n            unaff_RSI = 0;\n            if (0 < *(*0x20 + -0x18) + -1) {\n                unaff_RSI = *(*0x20 + -0x18) + -1;\n            }\n        }\n        else if (uVar7 == 0x47) {\ncode_r0x004735d3:\n            unaff_RSI = *(*0x20 + -0x18);\n        }\n        else {\n            unaff_RSI = *(*0x20 + 0x30);\n        }\n    }\n    else {\n        if (uVar7 == 0x65) goto code_r0x0047356f;\n        if (uVar7 == 0x66) {\n            unaff_RSI = 0;\n            if (0 < *(*0x20 + -0x18) - *(*0x20 + -0x10)) {\n                unaff_RSI = *(*0x20 + -0x18) - *(*0x20 + -0x10);\n            }\n        }\n        else {\n            if (uVar7 == 0x67) goto code_r0x004735d3;\n            unaff_RSI = *(*0x20 + 0x30);\n        }\n    }\n    noname_1_00 = *(*0x20 + -0xd1);\n    arg1 = *(*0x20 + -0xa0);\ncode_r0x0047360b:\n    *(*0x20 + -0x130) = *(*0x20 + -0x30);\n    *(*0x20 + -0x128) = *(*0x20 + -0x28);\n    *(*0x20 + -0x124) = *(*0x20 + -0x24);\n    *(*0x20 + -0x120) = *(*0x20 + -0x20);\n    *(*0x20 + -0x11c) = *(*0x20 + -0x1c);\n    *(*0x20 + -0x118) = *(*0x20 + -0x18);\n    *(*0x20 + -0x114) = *(*0x20 + -0x14);\n    *(*0x20 + -0x110) = *(*0x20 + -0x10);\n    *(*0x20 + -0x10c) = *(*0x20 + -0xc);\n    *(*0x20 + -0x138) = 0x473648;\n    uVar5 = fcn.00473b40(arg1, noname_1_00, unaff_RSI);\n    return uVar5;\n}\n",
        "token_count": 3532
    },
    "00473d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00473d80(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    bool bVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint8_t uVar7;\n    int64_t iVar8;\n    uint64_t unaff_RBX;\n    uint64_t uVar9;\n    uchar *puVar10;\n    ulong unaff_RBP;\n    int64_t iVar11;\n    int64_t *unaff_RDI;\n    uint8_t uVar12;\n    uint32_t uVar13;\n    uint8_t uVar14;\n    int64_t unaff_R14;\n    uint8_t uVar15;\n    bool bVar16;\n    uchar in_XMM15 [16];\n    \ncode_r0x00473d80:\n    puVar10 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x618 && *0x20 + -0x618 != *(unaff_R14 + 0x10)) {\n        puVar10 = *0x20 + -0x698;\n        *(*0x20 + -8) = unaff_RBP;\n        if (unaff_RBX == 0) {\n            *(in_RAX + 800) = 0;\n            return;\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        iVar8 = unaff_RDI[2];\n        *(*0x20 + -0x688) = iVar8 + 1;\n        if ((iVar8 + 1 < arg1) &&\n           (iVar11 = *(in_RAX + 0x328) - *(in_RAX + 800),  iVar6 = (arg1 - *unaff_RDI) * 100, \n           iVar8 = iVar6 + iVar11 * -0x14c,  iVar8 == 0 || SBORROW8(iVar6, iVar11 * 0x14c) != iVar8 < 0)) {\n            return;\n        }\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x340) = in_XMM15;\n        *(*0x20 + -0x6a8) = *0x20 + -8;\n        *(*0x20 + -0x6a0) = 0x473e3b;\n        fcn.0045e5c9();\n        uVar2 = *(*0x20 + -0x6a8);\n        *(*0x20 + -0x6a0) = 0x473e56;\n        fcn.00472880(unaff_RBX * 2 + 1);\n        uVar3 = **(*0x20 + 0x20);\n        *(*0x20 + -0x6a0) = 0x473e7c;\n        fcn.00472de0(*(*0x20 + 0x20), uVar3);\n        uVar9 = *(*0x20 + 0x10);\n        if ((1 << (**(*0x20 + 0x20) & 0x3f) & -(**(*0x20 + 0x20) < 0x40)) < uVar9) {\n            iVar8 = *(*0x20 + 0x18);\n        }\n        else {\n            iVar8 = *(*0x20 + 0x18);\n            if (iVar8 != *(*0x20 + -0x688)) {\n                uVar9 = uVar9 * 2;\n                iVar8 = iVar8 + -1;\n            }\n        }\n        *(*0x20 + -0x680) = iVar8;\n        *(*0x20 + -0x678) = in_XMM15;\n        *(*0x20 + -0x6a8) = uVar2;\n        *(*0x20 + -0x6a0) = 0x473f0f;\n        fcn.0045e5c9();\n        unaff_RBP = *(*0x20 + -0x6a8);\n        *(*0x20 + -0x6a0) = 0x473f25;\n        fcn.00472880(uVar9);\n        iVar8 = *(*0x20 + -0x680);\n        iVar6 = **(*0x20 + 0x20);\n        *(*0x20 + -0x6a0) = 0x473f45;\n        fcn.00472de0();\n        puVar4 = *(*0x20 + 8);\n        unaff_RDI = NULL;\n        uVar7 = 0;\n        unaff_RBX = (iVar8 - iVar6) - 1;\n        do {\n            iVar8 = *(*0x20 + -0x18);\n            iVar6 = *(puVar4 + 0x328);\n            uVar9 = unaff_RDI + (iVar6 - iVar8);\n            iVar11 = *(puVar4 + 800);\n            if (iVar11 <= uVar9) {\n                return;\n            }\n            uVar1 = unaff_RDI + (*(*0x20 + -0x350) - iVar8);\n            if ((uVar1 < 0) || (*(*0x20 + -0x358) == uVar1 || *(*0x20 + -0x358) < uVar1)) {\n                uVar12 = 0x30;\n            }\n            else {\n                if (799 < uVar1) goto code_r0x0047423f;\n                uVar12 = *(*0x20 + (uVar1 - 0x678));\n            }\n            if (uVar9 < 0) {\n                uVar14 = 0x30;\n            }\n            else {\n                if (799 < uVar9) goto code_r0x00474232;\n                uVar14 = puVar4[uVar9];\n            }\n            if (unaff_RDI < *(*0x20 + -0x20)) {\n                if (0x31f < unaff_RDI) goto code_r0x00474225;\n                uVar15 = (*0x20 + -0x340)[unaff_RDI];\n            }\n            else {\n                uVar15 = 0x30;\n            }\n            if (uVar12 == uVar14) {\n                uVar13 = *(*0x20 + 0x10);\n                if ((*(*0x20 + 0x10) & 1) == 0) {\n                    bVar16 = *(*0x20 + -0x358) == unaff_RDI + ((*(*0x20 + -0x350) + 1) - iVar8);\n                }\n                else {\n                    bVar16 = false;\n                }\n            }\n            else {\n                uVar13 = *(*0x20 + 0x10);\n                bVar16 = true;\n            }\n            if (uVar7 == 0) {\n                if (uVar14 + 1 < uVar15) {\n                    uVar7 = 2;\n                }\n                else {\n                    if (uVar15 == uVar14) goto code_r0x00474093;\n                    uVar7 = 1;\n                }\n            }\n            else {\ncode_r0x00474093:\n                if ((uVar7 == 1) && ((uVar14 != 0x39 || (uVar15 != 0x30)))) {\n                    uVar7 = 2;\n                }\n            }\n            if (uVar7 == 0) {\n                bVar5 = false;\n            }\n            else if (((uVar13 & 1) == 0) || (1 < uVar7)) {\n                bVar5 = true;\n            }\n            else {\n                bVar5 = unaff_RDI + 1 < *(*0x20 + -0x20);\n            }\n            if (bVar16) {\n                if (bVar5) {\n                    *(*0x20 + -0x6a0) = 0x47412f;\n                    fcn.00472ea0(puVar4, iVar6 + 1);\n                    return;\n                }\n                if (bVar16) goto code_r0x004740f0;\n            }\n            if (bVar5) {\n                iVar8 = unaff_RDI + ((iVar6 + 1) - iVar8);\n                if (iVar8 < 0) {\n                    return;\n                }\n                if (iVar8 < iVar11) {\n                    while( true ) {\n                        if (uVar9 < 0) {\n                            *puVar4 = 0x31;\n                            *(puVar4 + 800) = 1;\n                            *(puVar4 + 0x328) = *(puVar4 + 0x328) + 1;\n                            return;\n                        }\n                        if (799 < uVar9) break;\n                        if (puVar4[uVar9] < 0x39) {\n                            puVar4[uVar9] = puVar4[uVar9] + 1;\n                            *(puVar4 + 800) = uVar9 + 1;\n                            return;\n                        }\n                        uVar9 = uVar9 - 1;\n                    }\n                    *(*0x20 + -0x6a0) = 0x4741c9;\n                    fcn.0045e420(800);\n                    return;\n                }\n                return;\n            }\n            unaff_RDI = unaff_RDI + 1;\n            unaff_RBX = uVar9;\n        } while( true );\n    }\n    goto code_r0x0047424d;\ncode_r0x004740f0:\n    iVar8 = unaff_RDI + ((iVar6 + 1) - iVar8);\n    if (iVar8 < 0) {\n        return;\n    }\n    if (iVar11 <= iVar8) {\n        return;\n    }\n    *(puVar4 + 800) = iVar8;\n    do {\n        iVar8 = *(puVar4 + 800);\n        if (iVar8 < 1) {\ncode_r0x00474208:\n            if (iVar8 != 0) {\n                return;\n            }\n            *(puVar4 + 0x328) = 0;\n            return;\n        }\n        if (799 < iVar8 - 1U) break;\n        uVar9 = puVar4[iVar8 + -1];\n        if (puVar4[iVar8 + -1] != 0x30) goto code_r0x00474208;\n        *(puVar4 + 800) = iVar8 - 1U;\n    } while( true );\n    *(*0x20 + -0x6a0) = 0x474225;\n    fcn.0045e420(800);\n    unaff_RBX = uVar9;\ncode_r0x00474225:\n    *(*0x20 + -0x6a0) = 0x474232;\n    fcn.0045e420(800);\ncode_r0x00474232:\n    *(*0x20 + -0x6a0) = 0x47423f;\n    fcn.0045e420(800);\ncode_r0x0047423f:\n    arg1 = 800;\n    *(*0x20 + -0x6a0) = 0x47424c;\n    in_RAX = fcn.0045e420(800);\ncode_r0x0047424d:\n    *(puVar10 + 8) = in_RAX;\n    *(puVar10 + 0x10) = unaff_RBX;\n    *(puVar10 + 0x18) = arg1;\n    *(puVar10 + 0x20) = unaff_RDI;\n    *(puVar10 + -8) = 0x474266;\n    fcn.0045bdc0();\n    in_RAX = *(puVar10 + 8);\n    unaff_RBX = *(puVar10 + 0x10);\n    arg1 = *(puVar10 + 0x18);\n    unaff_RDI = *(puVar10 + 0x20);\n    *0x20 = puVar10;\n    goto code_r0x00473d80;\n}\n",
        "token_count": 2695
    },
    "00474280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00474280(uint64_t arg1, ulong noname_1, uchar *arg3, uint64_t arg4)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    char cVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint64_t unaff_RDI;\n    uchar uVar8;\n    ulong in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    \n    do {\n        cVar2 = unaff_RDI;\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = in_RAX;\n            *(*0x20 + 0x38) = unaff_RSI;\n            *(*0x20 + 0x40) = arg3;\n            *(*0x20 + 0x48) = arg4;\n            *(*0x20 + 0x50) = in_R10;\n            *(*0x20 + 0x58) = in_R11;\n            uVar6 = unaff_RBX;\n            if (cVar2 != '\\0') {\n                uVar6 = unaff_RBX + 1;\n                if (arg1 < uVar6) {\n                    unaff_RDI = 1;\n                    unaff_RSI = 0x496180;\n                    *(*0x20 + -0x80) = 0x4742e6;\n                    in_RAX = fcn.00445800(arg1);\n                }\n                *(unaff_RBX + in_RAX) = 0x2d;\n            }\n            if (*(*0x20 + 0x50) == 0) {\n                uVar8 = 0x30;\ncode_r0x00474319:\n                unaff_RBX = uVar6 + 1;\n                if (arg1 < unaff_RBX) {\n                    *(*0x20 + -0x32) = uVar8;\n                    unaff_RSI = 0x496180;\n                    *(*0x20 + -0x80) = 0x47433b;\n                    in_RAX = fcn.00445800(arg1);\n                    uVar8 = *(*0x20 + -0x32);\n                }\n                *(uVar6 + in_RAX) = uVar8;\n                unaff_RDI = *(*0x20 + 8);\n                if (unaff_RDI < 1) goto code_r0x0047445a;\n                unaff_RBX = uVar6 + 2;\n                if (arg1 < unaff_RBX) {\n                    unaff_RSI = 0x496180;\n                    *(*0x20 + -0x80) = 0x474370;\n                    in_RAX = fcn.00445800(arg1);\n                    unaff_RDI = *(*0x20 + 8);\n                }\n                *(uVar6 + 1 + in_RAX) = 0x2e;\n                arg4 = unaff_RDI + 1;\n                if (*(*0x20 + 0x50) < unaff_RDI + 1) {\n                    arg4 = *(*0x20 + 0x50);\n                }\n                if (arg4 < 2) {\n                    iVar3 = 1;\n                    goto code_r0x00474660;\n                }\n                uVar6 = *(*0x20 + 0x48);\n                arg3 = *(*0x20 + 0x38);\n                if (arg4 <= uVar6) {\n                    *(*0x20 + -0x30) = arg4;\n                    iVar3 = arg4 - 1;\n                    uVar1 = iVar3 + unaff_RBX;\n                    if (arg1 < uVar1) {\n                        *(*0x20 + -0x18) = unaff_RBX;\n                        *(*0x20 + -0x20) = iVar3;\n                        *(*0x20 + -0x10) = arg3 + (-(uVar6 - 1) >> 0x3f & 1);\n                        *(*0x20 + -0x80) = 0x474406;\n                        in_RAX = fcn.00445800(arg1);\n                        iVar3 = *(*0x20 + -0x20);\n                    }\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x20) = arg1;\n                    *(*0x20 + -0x80) = 0x474439;\n                    fcn.0045eda0(iVar3);\n                    unaff_RDI = *(*0x20 + 8);\n                    iVar3 = *(*0x20 + -0x30);\n                    arg1 = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + -0x18);\n                    in_RAX = *(*0x20 + -0x10);\ncode_r0x00474660:\n                    for (; iVar3 <= unaff_RDI; iVar3 = iVar3 + 1) {\n                        if (arg1 < unaff_RBX + 1) {\n                            *(*0x20 + -0x30) = iVar3;\n                            *(*0x20 + -0x80) = 0x474687;\n                            in_RAX = fcn.00445800(arg1);\n                            iVar3 = *(*0x20 + -0x30);\n                            unaff_RDI = *(*0x20 + 8);\n                        }\n                        *(unaff_RBX + in_RAX) = 0x30;\n                        unaff_RBX = unaff_RBX + 1;\n                    }\ncode_r0x0047445a:\n                    if (arg1 < unaff_RBX + 1) {\n                        *(*0x20 + -0x80) = 0x474476;\n                        in_RAX = fcn.00445800(arg1);\n                    }\n                    *(unaff_RBX + in_RAX) = *(*0x20 + 0x10);\n                    iVar3 = *(*0x20 + 0x58) + -1;\n                    if (*(*0x20 + 0x50) == 0) {\n                        iVar3 = 0;\n                    }\n                    if (iVar3 < 0) {\n                        iVar3 = -iVar3;\n                        uVar8 = 0x2d;\n                    }\n                    else {\n                        uVar8 = 0x2b;\n                    }\n                    *(*0x20 + -0x28) = iVar3;\n                    if (arg1 < unaff_RBX + 2) {\n                        *(*0x20 + -0x32) = uVar8;\n                        *(*0x20 + -0x80) = 0x4744db;\n                        in_RAX = fcn.00445800(arg1);\n                        iVar3 = *(*0x20 + -0x28);\n                        uVar8 = *(*0x20 + -0x32);\n                    }\n                    *(unaff_RBX + 1 + in_RAX) = uVar8;\n                    if (iVar3 < 10) {\n                        if (arg1 < unaff_RBX + 4) {\n                            *(*0x20 + -0x80) = 0x47450a;\n                            in_RAX = fcn.00445800(arg1);\n                            iVar3 = *(*0x20 + -0x28);\n                        }\n                        *(unaff_RBX + 2 + in_RAX) = 0x30;\n                        *(unaff_RBX + 3 + in_RAX) = iVar3 + '0';\n                    }\n                    else if (iVar3 < 100) {\n                        iVar4 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar3) >> 0x40, 0) + iVar3 >> 3;\n                        iVar3 = iVar3 + iVar4 * -10;\n                        if (arg1 < unaff_RBX + 4) {\n                            *(*0x20 + -0x18) = iVar4;\n                            *(*0x20 + -0x20) = iVar3;\n                            *(*0x20 + -0x80) = 0x474576;\n                            in_RAX = fcn.00445800(arg1);\n                            iVar4 = *(*0x20 + -0x18);\n                            iVar3 = *(*0x20 + -0x20);\n                        }\n                        *(unaff_RBX + 2 + in_RAX) = iVar4 + '0';\n                        *(unaff_RBX + 3 + in_RAX) = iVar3 + '0';\n                    }\n                    else {\n                        iVar4 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar3) >> 0x40, 0) + iVar3;\n                        iVar5 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar3) >> 0x40, 0) + iVar3 >> 3;\n                        cVar2 = iVar5 + ((iVar5 & 0xff) / 10) * -10;\n                        iVar3 = iVar3 + iVar5 * -10;\n                        if (arg1 < unaff_RBX + 5) {\n                            *(*0x20 + -0x18) = iVar3;\n                            *(*0x20 + -0x20) = iVar4;\n                            *(*0x20 + -0x31) = cVar2;\n                            *(*0x20 + -0x80) = 0x474617;\n                            in_RAX = fcn.00445800(arg1);\n                            cVar2 = *(*0x20 + -0x31);\n                            iVar3 = *(*0x20 + -0x18);\n                            iVar4 = *(*0x20 + -0x20);\n                        }\n                        *(unaff_RBX + 2 + in_RAX) = (iVar4 >> 6) + '0';\n                        *(unaff_RBX + 3 + in_RAX) = cVar2 + '0';\n                        *(unaff_RBX + 4 + in_RAX) = iVar3 + '0';\n                    }\n                    return;\n                }\n                *(*0x20 + -0x80) = 0x47469e;\n                fcn.0045e4a0(arg4, uVar6);\n            }\n            else {\n                arg3 = *(*0x20 + 0x38);\n                unaff_RBX = uVar6;\n                if (*(*0x20 + 0x40) != 0) {\n                    uVar8 = *arg3;\n                    goto code_r0x00474319;\n                }\n            }\n            cVar2 = unaff_RDI;\n            arg1 = 0;\n            *(*0x20 + -0x80) = 0x4746a8;\n            in_RAX = fcn.0045e420(0);\n        }\n        *(puVar7 + 0x18) = in_RAX;\n        *(puVar7 + 0x20) = unaff_RBX;\n        *(puVar7 + 0x28) = arg1;\n        puVar7[0x30] = cVar2;\n        *(puVar7 + 0x38) = unaff_RSI;\n        *(puVar7 + 0x40) = arg3;\n        *(puVar7 + 0x48) = arg4;\n        *(puVar7 + 0x50) = in_R10;\n        *(puVar7 + 0x58) = in_R11;\n        *(puVar7 + -8) = 0x4746db;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 0x18);\n        unaff_RBX = *(puVar7 + 0x20);\n        arg1 = *(puVar7 + 0x28);\n        unaff_RDI = puVar7[0x30];\n        unaff_RSI = *(puVar7 + 0x38);\n        arg3 = *(puVar7 + 0x40);\n        arg4 = *(puVar7 + 0x48);\n        in_R10 = *(puVar7 + 0x50);\n        in_R11 = *(puVar7 + 0x58);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2810
    },
    "00475240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00475240(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uint32_t unaff_EBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    char cVar7;\n    uint32_t uVar8;\n    int64_t unaff_RDI;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uint64_t arg4;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (-1 < unaff_RDI) {\n                if (unaff_RDI < 10) {\n                    if (unaff_EBX == 0) {\n                        *(in_RAX + 0x18) = in_XMM15;\n                        return;\n                    }\n                    uVar4 = unaff_EBX * 2 + 1;\n                    iVar6 = 0x3f;\n                    if (uVar4 != 0) {\n                        for (; uVar4 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                        }\n                    }\n                    uVar4 = arg1;\n                    if (iVar6 < 0x19) {\n                        uVar4 = -(iVar6 + -0x19);\n                        uVar2 = -(uVar4 < 0x20);\n                        arg3 = uVar2;\n                        unaff_EBX = unaff_EBX << (uVar4 & 0x1f) & uVar2;\n                        uVar4 = arg1 + iVar6 + -0x19;\n                    }\n                    *(*0x20 + 0x20) = unaff_RDI;\n                    *(*0x20 + 8) = in_RAX;\n                    unaff_RDI = unaff_RDI - (uVar4 * 0x13441 + 0x1ce618 >> 0x12);\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    arg1 = unaff_RDI - 1;\n                    if (arg1 < 0x1c) {\n                        arg3 = arg3 & 0xffffffffffffff00 | -1 < arg1;\n                    }\n                    else {\n                        arg3 = 0;\n                    }\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0x1d) = arg3;\n                    *(*0x20 + -0x1c) = unaff_EBX;\n                    *(*0x20 + -0x48) = 0x47530e;\n                    uVar2 = fcn.004764c0(arg1, arg1, arg3);\n                    if (uVar4 < 0) break;\n                    *(*0x20 + -0x48) = 0x47548b;\n                    fcn.00432de0();\n                }\n                *(*0x20 + -0x48) = 0x47549e;\n                fcn.00432de0();\n            }\n            unaff_EBX = 0x4ca438;\n            *(*0x20 + -0x48) = 0x4754b1;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_EBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x4754ca;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_EBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    if (*(*0x20 + -0x10) + 9U < 10) {\n        if (*(*0x20 + -0x1c) != 0) {\n            uVar9 = *(*0x20 + -0x1c);\n            for (iVar6 = 0; SBORROW8(iVar6, -*(*0x20 + -0x18)) != iVar6 + *(*0x20 + -0x18) < 0; iVar6 = iVar6 + 1) {\n                if (uVar9 != (uVar9 / 5) * 5) {\n                    cVar7 = *(*0x20 + -0x1d);\n                    goto code_r0x0047534b;\n                }\n                uVar9 = uVar9 / 5;\n            }\n        }\n        cVar7 = '\\x01';\n        arg1 = 1;\n    }\n    else {\n        cVar7 = *(*0x20 + -0x1d);\n    }\ncode_r0x0047534b:\n    uVar1 = -(-uVar4 < 0x20);\n    uVar8 = arg1 & 0xffffffff;\n    uVar3 = -uVar4;\n    uVar11 = (1 << (uVar3 & 0x1f) & uVar1) - 1 & uVar2;\n    if (cVar7 == '\\0') {\n        uVar4 = -(uVar4 + 1);\n        uVar9 = -(uVar4 < 0x20);\n        arg4 = uVar11;\n        uVar2 = uVar4 & 0xffffff00 | (uVar11 >> (uVar4 & 0x1f) & -(uVar4 < 0x20)) == 1;\n        goto code_r0x004753e8;\n    }\n    uVar10 = -(-(uVar4 + 1) < 0x20);\n    uVar9 = uVar10;\n    uVar10 = 1 << (-(uVar4 + 1) & 0x1f) & uVar10;\n    arg4 = uVar10;\n    if (uVar10 < uVar11) {\ncode_r0x004753b6:\n        uVar2 = 1;\n    }\n    else {\n        if (uVar10 == uVar11) {\n            cVar7 = arg1 & 0xffffffff;\n            if (cVar7 == '\\0') goto code_r0x004753b6;\n            if ((uVar10 == uVar11) && (cVar7 != '\\0')) {\n                uVar2 = uVar2 >> (uVar3 & 0x1f) & uVar1 & 1;\n                goto code_r0x004753e8;\n            }\n        }\n        uVar2 = 0;\n    }\ncode_r0x004753e8:\n    if (uVar11 != 0) {\n        uVar8 = 0;\n    }\n    *(*0x20 + -0x48) = 0x475409;\n    fcn.004757a0(uVar8 ^ 1, uVar2, uVar9, arg4);\n    *(*(*0x20 + 8) + 0x20) = (*(*(*0x20 + 8) + 0x20) - *(*0x20 + -0x10)) + 1;\n    return;\n}\n",
        "token_count": 1746
    },
    "00475500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00475500(uint64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    char cVar7;\n    uint32_t uVar8;\n    int64_t unaff_RDI;\n    uint64_t noname_2;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RDI < 0x13) {\n                if (unaff_RBX == 0) {\n                    *(in_RAX + 0x18) = in_XMM15;\n                    return;\n                }\n                iVar4 = 0x3f;\n                if (unaff_RBX != 0) {\n                    for (; unaff_RBX >> iVar4 == 0; iVar4 = iVar4 + -1) {\n                    }\n                }\n                if (unaff_RBX == 0) {\n                    iVar4 = -1;\n                }\n                uVar5 = arg1;\n                if (iVar4 + 1 < 0x37) {\n                    uVar5 = -(iVar4 + -0x36);\n                    unaff_RBX = unaff_RBX << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n                    uVar5 = arg1 + iVar4 + -0x36;\n                }\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 8) = in_RAX;\n                unaff_RDI = unaff_RDI - (uVar5 * 0x13441 + 0x4105b6 >> 0x12);\n                *(*0x20 + -0x10) = unaff_RDI;\n                arg1 = unaff_RDI - 1;\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x21) = arg1 < 0x38;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x4755cf;\n                uVar2 = fcn.004765a0(arg1);\n                if (uVar5 < 0) break;\n                *(*0x20 + -0x50) = 0x475752;\n                fcn.00432de0();\n            }\n            unaff_RBX = 0x4ca468;\n            *(*0x20 + -0x50) = 0x475765;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x47577f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n    if (*(*0x20 + -0x10) + 0x15U < 0x16) {\n        if (*(*0x20 + -0x18) != 0) {\n            uVar9 = *(*0x20 + -0x18);\n            for (iVar4 = 0; SBORROW8(iVar4, -*(*0x20 + -0x20)) != iVar4 + *(*0x20 + -0x20) < 0; iVar4 = iVar4 + 1) {\n                if (uVar9 != (uVar9 / 5) * 5) {\n                    cVar7 = *(*0x20 + -0x21);\n                    goto code_r0x0047560a;\n                }\n                uVar9 = uVar9 / 5;\n            }\n        }\n        cVar7 = '\\x01';\n        arg1 = 1;\n    }\n    else {\n        cVar7 = *(*0x20 + -0x21);\n    }\ncode_r0x0047560a:\n    uVar9 = -(-uVar5 < 0x40);\n    uVar8 = arg1 & 0xffffffff;\n    uVar3 = -uVar5;\n    uVar10 = (1 << (uVar3 & 0x3f) & uVar9) - 1 & uVar2;\n    if (cVar7 == '\\0') {\n        uVar5 = -(uVar5 + 1);\n        noname_2 = -(uVar5 < 0x40);\n        uVar1 = uVar5 & 0xffffff00 | (uVar10 >> (uVar5 & 0x3f) & noname_2) == 1;\n        uVar5 = uVar10;\n        goto code_r0x004756ab;\n    }\n    noname_2 = -(-(uVar5 + 1) < 0x40);\n    uVar5 = 1 << (-(uVar5 + 1) & 0x3f) & noname_2;\n    if (uVar5 < uVar10) {\ncode_r0x00475677:\n        uVar1 = 1;\n    }\n    else {\n        if (uVar5 == uVar10) {\n            cVar7 = arg1 & 0xffffffff;\n            if (cVar7 == '\\0') goto code_r0x00475677;\n            if ((uVar5 == uVar10) && (cVar7 != '\\0')) {\n                uVar1 = uVar2 >> (uVar3 & 0x3f) & uVar9 & 1;\n                goto code_r0x004756ab;\n            }\n        }\n        uVar1 = 0;\n    }\ncode_r0x004756ab:\n    if (uVar10 != 0) {\n        uVar8 = 0;\n    }\n    *(*0x20 + -0x50) = 0x4756cd;\n    fcn.004757a0(uVar8 ^ 1, uVar1, noname_2, uVar5);\n    *(*(*0x20 + 8) + 0x20) = (*(*(*0x20 + 8) + 0x20) - *(*0x20 + -0x10)) + 1;\n    return;\n}\n",
        "token_count": 1621
    },
    "00475a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00475a80(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    char cVar6;\n    uint8_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint64_t uVar12;\n    uint64_t *unaff_RDI;\n    char cVar13;\n    ulong uVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    uint64_t uVar17;\n    int64_t iVar18;\n    uint64_t uVar19;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 0) {\n                *(in_RAX + 0x18) = in_XMM15;\n                return;\n            }\n            if (arg1 < 1) {\n                iVar9 = 0;\n                if (unaff_RBX != 0) {\n                    for (; (unaff_RBX >> iVar9 & 1) == 0; iVar9 = iVar9 + 1) {\n                    }\n                }\n                uVar8 = -arg1;\n                if (SBORROW8(iVar9, uVar8) == iVar9 + arg1 < 0) {\n                    *(*0x20 + -0x90) = 0x475ae5;\n                    fcn.00475fc0(-(uVar8 < 0x40) & unaff_RBX >> (uVar8 & 0x3f), iVar9, 0);\n                    return;\n                }\n            }\n            uVar8 = *unaff_RDI;\n            if ((unaff_RBX == (1 << (uVar8 & 0x3f) & -(uVar8 < 0x40))) && (arg1 != (unaff_RDI[2] - uVar8) + 1)) {\n                iVar10 = unaff_RBX * 4;\n                iVar9 = iVar10 + 2;\n                arg1 = arg1 + -2;\n                iVar1 = iVar10;\n            }\n            else {\n                iVar10 = unaff_RBX << 1;\n                iVar9 = unaff_RBX * 2 + 1;\n                arg1 = arg1 + -1;\n                iVar1 = unaff_RBX * 2;\n            }\n            if (arg1 == 0) {\n                *(*0x20 + -0x90) = 0x475ccb;\n                fcn.00475fc0(iVar10, unaff_RBX, 0);\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x38) = iVar1 + -1;\n            *(*0x20 + -0x18) = iVar10;\n            *(*0x20 + -0x48) = iVar9;\n            *(*0x20 + -0x30) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            iVar9 = arg1 * -0x13441 >> 0x12;\n            *(*0x20 + -0x50) = iVar9;\n            iVar9 = iVar9 + 1;\n            *(*0x20 + -0x40) = iVar9;\n            uVar14 = 0x52d970;\n            if (unaff_RDI == 0x52d970) {\n                *(*0x20 + -0x90) = 0x475bbd;\n                uVar3 = fcn.004764c0(iVar9, unaff_RBX, 0x52d970);\n                *(*0x20 + -0x58) = uVar3;\n                *(*0x20 + -0x5a) = iVar9;\n                uVar5 = *(*0x20 + -0x40);\n                *(*0x20 + -0x90) = 0x475bd9;\n                uVar3 = fcn.004764c0(uVar5, unaff_RBX, uVar14);\n                *(*0x20 + -0x54) = uVar3;\n                *(*0x20 + -0x59) = uVar5;\n                iVar9 = *(*0x20 + -0x30);\n                arg1 = *(*0x20 + -0x40);\n                *(*0x20 + -0x90) = 0x475bf5;\n                uVar4 = fcn.004764c0(arg1, unaff_RBX, uVar14);\n                uVar8 = *(*0x20 + -0x58);\n                uVar15 = *(*0x20 + -0x54);\n                unaff_RDI = uVar4;\n                cVar2 = *(*0x20 + -0x59);\n                cVar13 = *(*0x20 + -0x5a);\n            }\n            else {\n                *(*0x20 + -0x90) = 0x475c1e;\n                uVar14 = fcn.004765a0(iVar9);\n                *(*0x20 + -0x28) = uVar14;\n                *(*0x20 + -0x5a) = iVar9;\n                uVar14 = *(*0x20 + -0x40);\n                *(*0x20 + -0x90) = 0x475c3b;\n                uVar5 = fcn.004765a0(uVar14);\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x59) = uVar14;\n                iVar9 = *(*0x20 + -0x30);\n                arg1 = *(*0x20 + -0x40);\n                *(*0x20 + -0x90) = 0x475c58;\n                unaff_RDI = fcn.004765a0(arg1);\n                uVar8 = *(*0x20 + -0x28);\n                uVar15 = *(*0x20 + -0x20);\n                cVar2 = *(*0x20 + -0x59);\n                cVar13 = *(*0x20 + -0x5a);\n            }\n            if (iVar9 < 0) break;\n            unaff_RBX = 0x4ca478;\n            *(*0x20 + -0x90) = 0x475f75;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + 0x18) = arg1;\n        *(puVar11 + 0x20) = unaff_RDI;\n        *(puVar11 + -8) = 0x475f8f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        arg1 = *(puVar11 + 0x18);\n        unaff_RDI = *(puVar11 + 0x20);\n        *0x20 = puVar11;\n    } while( true );\n    iVar1 = *(*0x20 + -0x40);\n    if (0x37 < iVar1) {\n        arg1 = 0;\n        cVar2 = '\\0';\n        cVar13 = '\\0';\n    }\n    cVar6 = arg1;\n    if (*(*0x20 + -0x50) + 0x19U < 0x18) {\n        iVar10 = -iVar1;\n        if (*(*0x20 + -0x38) != 0) {\n            uVar12 = *(*0x20 + -0x38);\n            for (iVar18 = 0; SBORROW8(iVar18, iVar10) != iVar18 + iVar1 < 0; iVar18 = iVar18 + 1) {\n                if (uVar12 != (uVar12 / 5) * 5) goto code_r0x00475eac;\n                uVar12 = uVar12 / 5;\n            }\n        }\n        cVar13 = '\\x01';\ncode_r0x00475eac:\n        if (*(*0x20 + -0x18) != 0) {\n            uVar12 = *(*0x20 + -0x18);\n            for (iVar18 = 0; SBORROW8(iVar18, iVar10) != iVar18 + iVar1 < 0; iVar18 = iVar18 + 1) {\n                if (uVar12 != (uVar12 / 5) * 5) goto code_r0x00475f02;\n                uVar12 = uVar12 / 5;\n            }\n        }\n        cVar2 = '\\x01';\ncode_r0x00475f02:\n        if (*(*0x20 + -0x48) != 0) {\n            uVar12 = *(*0x20 + -0x48);\n            for (iVar18 = 0; SBORROW8(iVar18, iVar10) != iVar18 + iVar1 < 0; iVar18 = iVar18 + 1) {\n                if (uVar12 != (uVar12 / 5) * 5) goto code_r0x00475cf0;\n                uVar12 = uVar12 / 5;\n            }\n        }\n        cVar6 = '\\x01';\n    }\ncode_r0x00475cf0:\n    *(*0x20 + -0x20) = uVar15;\n    uVar12 = -(-iVar9 < 0x40);\n    uVar7 = -iVar9;\n    uVar19 = (1 << (uVar7 & 0x3f) & uVar12) - 1;\n    noname_1 = uVar8 >> (uVar7 & 0x3f) & uVar12;\n    uVar12 = uVar15 >> (uVar7 & 0x3f) & uVar12;\n    uVar15 = *(*0x20 + -0x20) & uVar19;\n    if ((cVar6 == '\\0') || ((unaff_RDI & uVar19) != 0)) {\n        uVar16 = *(*0x20 + -0x10);\n    }\n    else {\n        uVar16 = *(*0x20 + -0x10);\n    }\n    if (cVar2 == '\\0') {\n        uVar17 = -(iVar9 + 1);\n        uVar4 = uVar17 & 0xffffff00 | (uVar15 >> (uVar17 & 0x3f) & -(uVar17 < 0x40)) == 1;\n    }\n    else {\n        uVar17 = 1 << (-(iVar9 + 1) & 0x3f) & -(-(iVar9 + 1) < 0x40);\n        if (uVar17 < uVar15) {\n            uVar4 = 1;\n        }\n        else if (uVar17 == uVar15) {\n            uVar4 = uVar12 & 1;\n        }\n        else {\n            uVar4 = 0;\n        }\n    }\n    if (((cVar13 == '\\0') || ((uVar19 & uVar8) != 0)) || ((uVar16 & 1) != 0)) {\n        noname_1 = noname_1 + 1;\n    }\n    *(*0x20 + -0x90) = 0x475e38;\n    fcn.00475fc0(uVar12, noname_1, uVar4);\n    *(*(*0x20 + 8) + 0x20) = (*(*(*0x20 + 8) + 0x20) - *(*0x20 + -0x50)) + -1;\n    return;\n}\n",
        "token_count": 2753
    },
    "00475fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00475fc0(uint64_t **arg1, ulong noname_1, uint64_t **arg3)\n\n{\n    uint64_t **in_RAX;\n    uint64_t **ppuVar1;\n    char cVar2;\n    uint64_t **ppuVar3;\n    uint64_t **ppuVar4;\n    uint64_t noname_1_00;\n    uint64_t *puVar5;\n    uint64_t **unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    char cVar7;\n    uint64_t *unaff_RSI;\n    uint64_t **unaff_RDI;\n    uint64_t **ppuVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    uint64_t **unaff_R15;\n    \n    do {\n        cVar7 = unaff_RSI;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            ppuVar3 = (unaff_RBX >> 1) / 500000000;\n            unaff_RBX = unaff_RBX + ppuVar3 * -125000000;\n            ppuVar4 = (arg1 >> 1) / 500000000;\n            arg1 = arg1 + ppuVar4 * -125000000;\n            noname_1_00 = (unaff_RDI >> 1) / 500000000;\n            if (noname_1_00 == 0) {\n                in_RAX = 0x8;\n                *(*0x20 + -0x30) = 0x4760d9;\n                ppuVar3 = arg1;\n                fcn.004762c0(arg1, noname_1_00, arg3, 8);\n                goto code_r0x004760d9;\n            }\n            if (ppuVar3 < noname_1_00) {\n                uVar9 = arg1;\n                if (cVar7 == '\\0') {\n                    unaff_RSI = NULL;\n                }\n                else {\n                    unaff_RSI = uVar9 == 0;\n                }\n                if (uVar9 < 0x1dcd6501) {\n                    arg3 = (uVar9 & 0xffffff00 | uVar9 == 500000000) & arg3;\n                }\n                else {\n                    arg3 = 0x1;\n                }\n                in_RAX = 0x8;\n                *(*0x20 + -0x30) = 0x4760b4;\n                ppuVar3 = arg3;\n                fcn.004762c0(ppuVar4, noname_1_00, arg3, 8);\n                *(*(*0x20 + 8) + 0x20) = *(*(*0x20 + 8) + 0x20) + 9;\n                arg1 = ppuVar4;\n                goto code_r0x004760d9;\n            }\n            in_RAX[3] = NULL;\n            ppuVar1 = 0x9;\n            ppuVar8 = unaff_RDI >> 1;\n            unaff_RDI = arg1;\ncode_r0x004761ba:\n            cVar7 = unaff_RSI;\n            if (ppuVar4 != 0) {\n                cVar2 = ppuVar4 + ((ppuVar4 & 0xffffffff) / 10) * -10;\n                unaff_R15 = ppuVar1 + -1;\n                arg1 = in_RAX[1];\n                ppuVar3 = *in_RAX;\n                ppuVar4 = (ppuVar4 & 0xffffffff) / 10;\n                if (arg1 <= unaff_R15) goto code_r0x0047626a;\ncode_r0x004761a5:\n                *(ppuVar1 + -1 + ppuVar3) = cVar2 + '0';\n                ppuVar1 = unaff_R15;\n                ppuVar3 = unaff_RBX;\n                ppuVar8 = unaff_RDI;\n                goto code_r0x004761ba;\n            }\n            ppuVar4 = in_RAX[1];\n            puVar5 = in_RAX[2];\n            if (ppuVar1 <= ppuVar4) {\n                in_RAX[1] = ppuVar4 - ppuVar1;\n                in_RAX[2] = puVar5 - ppuVar1;\n                puVar5 = *in_RAX + (-(puVar5 - ppuVar1) >> 0x3f & ppuVar1);\n                if (*0x5985b0 == 0) {\n                    *in_RAX = puVar5;\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x476236;\n                    ppuVar1 = fcn.0045e0a0(ppuVar4 - ppuVar1, puVar5, arg3, in_RAX);\n                }\n                in_RAX[3] = -(ppuVar1 + -9);\n                in_RAX = -(ppuVar1 + -9) + 1;\n                *(*0x20 + -0x30) = 0x476259;\n                ppuVar3 = unaff_RDI;\n                fcn.004762c0(unaff_RDI, in_RAX, arg3, in_RAX);\n                arg1 = unaff_RDI;\ncode_r0x004760d9:\n                unaff_RDI = *(*0x20 + 8);\n                while (puVar5 = unaff_RDI[3],  0 < puVar5) {\n                    arg1 = unaff_RDI[1];\n                    ppuVar4 = *unaff_RDI;\n                    unaff_RBX = puVar5 + -1;\n                    if (arg1 <= unaff_RBX) goto code_r0x00476198;\n                    if (*(puVar5 + -1 + ppuVar4) != '0') break;\n                    unaff_RDI[3] = unaff_RBX;\n                }\ncode_r0x00476113:\n                ppuVar4 = unaff_RDI[3];\n                if (ppuVar4 < 1) {\n                    return;\n                }\n                unaff_RBX = *unaff_RDI;\n                if (unaff_RDI[1] == NULL) goto code_r0x0047618e;\n                if (*unaff_RBX != '0') {\n                    return;\n                }\n                unaff_RDI[3] = ppuVar4 - 1;\n                unaff_RDI[4] = unaff_RDI[4] + -1;\n                ppuVar4 = unaff_RDI[1];\n                unaff_RBX = *unaff_RDI;\n                unaff_RSI = unaff_RDI[2];\n                if (ppuVar4 != NULL) {\n                    unaff_RDI[1] = ppuVar4 - 1;\n                    unaff_RDI[2] = unaff_RSI + -1;\n                    puVar5 = (-(unaff_RSI + -1) >> 0x3f & 1) + unaff_RBX;\n                    if (*0x5985b0 == 0) {\n                        *unaff_RDI = puVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x476176;\n                        fcn.0045e0a0(arg1, puVar5, arg3, in_RAX);\n                    }\n                    goto code_r0x00476113;\n                }\n                *(*0x20 + -0x30) = 0x47618e;\n                fcn.0045e4e0(0);\ncode_r0x0047618e:\n                arg1 = NULL;\n                *(*0x20 + -0x30) = 0x476198;\n                fcn.0045e420(0);\ncode_r0x00476198:\n                *(*0x20 + -0x30) = 0x4761a5;\n                ppuVar1 = fcn.0045e420(arg1);\n                cVar2 = arg1;\n                goto code_r0x004761a5;\n            }\n            *(*0x20 + -0x30) = 0x47626a;\n            arg1 = unaff_RBX;\n            fcn.0045e500(ppuVar4);\n            unaff_RBX = ppuVar3;\n            unaff_RDI = ppuVar8;\ncode_r0x0047626a:\n            *(*0x20 + -0x30) = 0x476275;\n            in_RAX = fcn.0045e440(arg1);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        puVar6[0x28] = cVar7;\n        puVar6[0x29] = arg3;\n        *(puVar6 + -8) = 0x476299;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = puVar6[0x28];\n        arg3 = puVar6[0x29];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2212
    },
    "00476ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00476ce0(uint64_t arg1)\n\n{\n    int64_t arg1_00;\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar4;\n    uint8_t *unaff_RDI;\n    uchar in_R8B;\n    uchar in_R9B;\n    uchar in_R10B;\n    uchar uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x30) = in_R8B;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x49) = in_R10B;\n            *(*0x20 + -0x4a) = in_R9B;\n            uVar2 = unaff_RBX;\n            uVar4 = unaff_RSI;\n            if (arg1 - unaff_RBX < unaff_RSI) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                arg1_00 = unaff_RBX + unaff_RSI + 2;\n                *(*0x20 + -0x40) = arg1_00;\n                *(*0x20 + -0x98) = 0x476d68;\n                in_RAX = fcn.00445720(arg1_00);\n                if (in_RAX != *(*0x20 + 8)) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x98) = 0x476d8a;\n                    fcn.0045eda0(*(*0x20 + 0x10));\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                uVar2 = *(*0x20 + 0x10);\n                uVar4 = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                in_R8B = *(*0x20 + 0x30);\n                in_R9B = *(*0x20 + -0x4a);\n                in_R10B = *(*0x20 + -0x49);\n                arg1 = *(*0x20 + -0x40);\n            }\n            unaff_RBX = uVar2 + 1;\n            if (arg1 < unaff_RBX) {\n                *(*0x20 + -0x98) = 0x476de5;\n                in_RAX = fcn.00445800(arg1);\n                uVar4 = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                in_R8B = *(*0x20 + 0x30);\n                in_R9B = *(*0x20 + -0x4a);\n                in_R10B = *(*0x20 + -0x49);\n            }\n            *(uVar2 + in_RAX) = in_R8B;\n            while( true ) {\n                if (uVar4 == 0) {\n                    if (arg1 < unaff_RBX + 1) {\n                        *(*0x20 + -0x98) = 0x477048;\n                        in_RAX = fcn.00445800(arg1);\n                        in_R8B = *(*0x20 + 0x30);\n                    }\n                    *(unaff_RBX + in_RAX) = in_R8B;\n                    return;\n                }\n                *(*0x20 + -0x28) = unaff_RBX;\n                *(*0x20 + -0x30) = uVar4;\n                *(*0x20 + -0x18) = unaff_RDI;\n                uVar1 = *unaff_RDI;\n                if (*unaff_RDI < 0x80) {\n                    uVar2 = 1;\n                    unaff_RSI = uVar4;\n                }\n                else {\n                    *(*0x20 + -0x38) = arg1;\n                    *(*0x20 + -0x20) = in_RAX;\n                    *(*0x20 + -0x98) = 0x476e6b;\n                    uVar1 = fcn.0046df80();\n                    arg1 = *(*0x20 + -0x38);\n                    unaff_RSI = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    in_R8B = *(*0x20 + 0x30);\n                    in_R9B = *(*0x20 + -0x4a);\n                    in_R10B = *(*0x20 + -0x49);\n                    in_RAX = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + -0x28);\n                    uVar2 = uVar4;\n                }\n                *(*0x20 + -0x48) = uVar2;\n                if ((uVar2 == 1) && (uVar1 == 0xfffd)) {\n                    uVar4 = unaff_RBX;\n                    if (arg1 < unaff_RBX + 2) {\n                        *(*0x20 + -0x98) = 0x476edc;\n                        in_RAX = fcn.00445800(arg1);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x4a);\n                        in_R10B = *(*0x20 + -0x49);\n                        uVar2 = *(*0x20 + -0x48);\n                        uVar4 = *(*0x20 + -0x28);\n                    }\n                    *(in_RAX + uVar4) = 0x785c;\n                    uVar4 = unaff_RBX + 3;\n                    uVar5 = *((*unaff_RDI >> 4) + 0x4aa077);\n                    if (arg1 < uVar4) {\n                        *(*0x20 + -0x4b) = uVar5;\n                        *(*0x20 + -0x98) = 0x476f4b;\n                        in_RAX = fcn.00445800(arg1);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x4a);\n                        in_R10B = *(*0x20 + -0x49);\n                        uVar5 = *(*0x20 + -0x4b);\n                        uVar2 = *(*0x20 + -0x48);\n                    }\n                    *(unaff_RBX + 2 + in_RAX) = uVar5;\n                    unaff_RBX = unaff_RBX + 4;\n                    uVar5 = *((*unaff_RDI & 0xf) + 0x4aa077);\n                    if (arg1 < unaff_RBX) {\n                        *(*0x20 + -0x4b) = uVar5;\n                        *(*0x20 + -0x98) = 0x476fb2;\n                        in_RAX = fcn.00445800(arg1);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x4a);\n                        in_R10B = *(*0x20 + -0x49);\n                        uVar5 = *(*0x20 + -0x4b);\n                        uVar2 = *(*0x20 + -0x48);\n                    }\n                    *(uVar4 + in_RAX) = uVar5;\n                }\n                else {\n                    *(*0x20 + -0x98) = 0x476ffa;\n                    in_RAX = fcn.00477200(arg1);\n                    unaff_RSI = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    in_R8B = *(*0x20 + 0x30);\n                    in_R9B = *(*0x20 + -0x4a);\n                    in_R10B = *(*0x20 + -0x49);\n                    uVar2 = *(*0x20 + -0x48);\n                }\n                if (unaff_RSI < uVar2) break;\n                uVar4 = unaff_RSI - uVar2;\n                unaff_RDI = unaff_RDI + (uVar2 & -uVar4 >> 0x3f);\n            }\n            *(*0x20 + -0x98) = 0x477077;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.0045e4e0(unaff_RSI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        puVar3[0x30] = in_R8B;\n        puVar3[0x31] = in_R9B;\n        puVar3[0x32] = in_R10B;\n        *(puVar3 + -8) = 0x4770a5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        in_R8B = puVar3[0x30];\n        in_R9B = puVar3[0x31];\n        in_R10B = puVar3[0x32];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 2450
    },
    "00477960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00477960(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            while( true ) {\n                if (unaff_RBX == 0) {\n                    return 1;\n                }\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x30) = 0x47799d;\n                iVar1 = fcn.0046df80();\n                uVar2 = *(*0x20 + -0x18);\n                if (uVar2 < unaff_RBX) break;\n                uVar2 = uVar2 - unaff_RBX;\n                in_RAX = (-uVar2 >> 0x3f & unaff_RBX) + *(*0x20 + -0x10);\n                if (unaff_RBX < 2) {\n                    if (iVar1 == 0xfffd) {\n                        return 0;\n                    }\n                    if (iVar1 < 0x20) {\n                        unaff_RBX = uVar2;\n                        if (iVar1 != 9) {\n                            return 0;\n                        }\n                    }\n                    else if ((iVar1 == 0x60) || (unaff_RBX = uVar2,  iVar1 == 0x7f)) {\n                        return 0;\n                    }\n                }\n                else {\n                    unaff_RBX = uVar2;\n                    if (iVar1 == 0xfeff) {\n                        return 0;\n                    }\n                }\n            }\n            *(*0x20 + -0x30) = 0x477a2e;\n            in_RAX = fcn.0045e4e0(uVar2);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x477a3e;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 635
    },
    "0047ba20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0047ba20(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    char cVar4;\n    ulong *in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    int64_t *unaff_RBX;\n    uint *puVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    uint64_t arg3;\n    int64_t *piVar12;\n    int64_t *piVar13;\n    int64_t iVar14;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar8 = in_RAX[1];\n            uVar11 = in_RAX[4] + 1;\n            iVar14 = in_RAX[3];\n            uVar7 = in_RAX[5];\n            iVar5 = iVar14;\n            if (uVar7 < uVar11) {\n                *(*0x20 + -0x88) = uVar8;\n                *(*0x20 + -0xd8) = 0x47ba8a;\n                arg3 = uVar11;\n                iVar5 = fcn.00445800(uVar7);\n                in_RAX = *(*0x20 + 8);\n                in_RAX[5] = uVar7;\n                if (*0x5985b0 == 0) {\n                    in_RAX[3] = iVar5;\n                }\n                else {\n                    *(*0x20 + -0xd8) = 0x47bab4;\n                    iVar5 = fcn.0045df80(in_RAX, in_RAX + 3, arg3, iVar14);\n                }\n                uVar8 = *(*0x20 + -0x88);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            in_RAX[4] = uVar11;\n            *(iVar5 + -8 + uVar11 * 8) = uVar8;\n            if (*unaff_RBX == 0) {\n                in_RAX[6] = -*(unaff_RBX + 0x15) & in_RAX[6] + (*(unaff_RBX + 0x15) - 1);\n                return 0;\n            }\n            *(*0x20 + -0x50) = *in_RAX;\n            uVar1 = *(in_RAX + 0xc);\n            uVar2 = *(in_RAX + 2);\n            uVar3 = *(in_RAX + 0x14);\n            *(*0x20 + -0x48) = *(in_RAX + 1);\n            *(*0x20 + -0x44) = uVar1;\n            *(*0x20 + -0x40) = uVar2;\n            *(*0x20 + -0x3c) = uVar3;\n            uVar1 = *(in_RAX + 0x1c);\n            uVar2 = *(in_RAX + 4);\n            uVar3 = *(in_RAX + 0x24);\n            *(*0x20 + -0x38) = *(in_RAX + 3);\n            *(*0x20 + -0x34) = uVar1;\n            *(*0x20 + -0x30) = uVar2;\n            *(*0x20 + -0x2c) = uVar3;\n            uVar1 = *(in_RAX + 0x2c);\n            uVar2 = *(in_RAX + 6);\n            uVar3 = *(in_RAX + 0x34);\n            *(*0x20 + -0x28) = *(in_RAX + 5);\n            *(*0x20 + -0x24) = uVar1;\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x1c) = uVar3;\n            uVar1 = *(in_RAX + 0x3c);\n            uVar2 = *(in_RAX + 8);\n            uVar3 = *(in_RAX + 0x44);\n            *(*0x20 + -0x18) = *(in_RAX + 7);\n            *(*0x20 + -0x14) = uVar1;\n            *(*0x20 + -0x10) = uVar2;\n            *(*0x20 + -0xc) = uVar3;\n            *(*0x20 + -0xd8) = 0x47bb28;\n            cVar4 = fcn.0047bf80(0);\n            if (cVar4 != '\\0') {\n                return 0;\n            }\n            if (*0x5985b0 == 0) {\n                piVar12 = *(*0x20 + 8);\n                *piVar12 = *(*0x20 + -0x50);\n                uVar1 = *(*0x20 + -0x44);\n                uVar2 = *(*0x20 + -0x40);\n                uVar3 = *(*0x20 + -0x3c);\n                *(piVar12 + 1) = *(*0x20 + -0x48);\n                *(piVar12 + 0xc) = uVar1;\n                *(piVar12 + 2) = uVar2;\n                *(piVar12 + 0x14) = uVar3;\n                uVar1 = *(*0x20 + -0x34);\n                uVar2 = *(*0x20 + -0x30);\n                uVar3 = *(*0x20 + -0x2c);\n                *(piVar12 + 3) = *(*0x20 + -0x38);\n                *(piVar12 + 0x1c) = uVar1;\n                *(piVar12 + 4) = uVar2;\n                *(piVar12 + 0x24) = uVar3;\n                uVar1 = *(*0x20 + -0x24);\n                uVar2 = *(*0x20 + -0x20);\n                uVar3 = *(*0x20 + -0x1c);\n                *(piVar12 + 5) = *(*0x20 + -0x28);\n                *(piVar12 + 0x2c) = uVar1;\n                *(piVar12 + 6) = uVar2;\n                *(piVar12 + 0x34) = uVar3;\n                uVar1 = *(*0x20 + -0x14);\n                uVar2 = *(*0x20 + -0x10);\n                uVar3 = *(*0x20 + -0xc);\n                *(piVar12 + 7) = *(*0x20 + -0x18);\n                *(piVar12 + 0x3c) = uVar1;\n                *(piVar12 + 8) = uVar2;\n                *(piVar12 + 0x44) = uVar3;\n            }\n            else {\n                *(*0x20 + -0xd8) = 0x47bb9e;\n                fcn.004112e0(*0x20 + -0x50);\n                piVar12 = *(*0x20 + 8);\n            }\n            iVar14 = **(*0x20 + 0x10);\n            uVar7 = *(*(*0x20 + 0x10) + 0x15);\n            piVar12[6] = -uVar7 & piVar12[6] + -1 + uVar7;\n            *(*0x20 + -0x80) = in_XMM15;\n            *(*0x20 + -0x70) = in_XMM15;\n            *(*0x20 + -0x60) = in_XMM15;\n            *(*0x20 + -0x80) = 1;\n            *(*0x20 + -0x70) = iVar14;\n            iVar5 = piVar12[6];\n            *(*0x20 + -0x68) = iVar5;\n            uVar11 = piVar12[1] + 1;\n            iVar6 = *piVar12;\n            uVar7 = piVar12[2];\n            piVar13 = piVar12;\n            if (uVar7 < uVar11) {\n                *(*0x20 + -0x90) = iVar14;\n                *(*0x20 + -0xd8) = 0x47bc1b;\n                iVar6 = fcn.00445800(uVar7);\n                piVar13 = *(*0x20 + 8);\n                piVar13[2] = uVar7;\n                if (*0x5985b0 == 0) {\n                    *piVar13 = iVar6;\n                }\n                else {\n                    *(*0x20 + -0xd8) = 0x47bc3a;\n                    iVar6 = fcn.0045df80(uVar7, iVar5, piVar12, iVar14);\n                }\n                iVar14 = *(*0x20 + -0x90);\n            }\n            piVar13[1] = uVar11;\n            puVar9 = uVar11 * 0x30 + -0x30 + iVar6;\n            uVar1 = *(*0x20 + -0x7c);\n            uVar2 = *(*0x20 + -0x78);\n            uVar3 = *(*0x20 + -0x74);\n            *puVar9 = *(*0x20 + -0x80);\n            puVar9[1] = uVar1;\n            puVar9[2] = uVar2;\n            puVar9[3] = uVar3;\n            puVar9 = uVar11 * 0x30 + -0x20 + iVar6;\n            uVar1 = *(*0x20 + -0x6c);\n            uVar2 = *(*0x20 + -0x68);\n            uVar3 = *(*0x20 + -100);\n            *puVar9 = *(*0x20 + -0x70);\n            puVar9[1] = uVar1;\n            puVar9[2] = uVar2;\n            puVar9[3] = uVar3;\n            uVar1 = *(*0x20 + -0x5c);\n            uVar2 = *(*0x20 + -0x58);\n            uVar3 = *(*0x20 + -0x54);\n            puVar9[4] = *(*0x20 + -0x60);\n            puVar9[5] = uVar1;\n            puVar9[6] = uVar2;\n            puVar9[7] = uVar3;\n            piVar13[6] = piVar13[6] + iVar14;\n            piVar12 = piVar13[1];\n            unaff_RBX = piVar12 - 1;\n            if (unaff_RBX < piVar12) {\n                return *piVar13 + piVar12 * 0x30 + -0x30;\n            }\n            *(*0x20 + -0xd8) = 0x47bcf1;\n            in_RAX = fcn.0045e420(piVar12);\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x47bd05;\n        fcn.0045bdc0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2680
    },
    "0047bd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0047bd20(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    int64_t in_RAX;\n    int64_t arg3;\n    int64_t iVar6;\n    uchar uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t *arg2;\n    int64_t *piVar10;\n    uint64_t unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint *puVar12;\n    ulong arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar8 = *(in_RAX + 0x28);\n            uVar9 = *(in_RAX + 0x20) + 1;\n            iVar6 = *(in_RAX + 0x18);\n            arg4 = *(in_RAX + 8);\n            arg3 = iVar6;\n            if (uVar8 < uVar9) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x40) = arg4;\n                *(*0x20 + -0x90) = 0x47bd8a;\n                arg3 = fcn.00445800(uVar8);\n                in_RAX = *(*0x20 + 8);\n                *(in_RAX + 0x28) = uVar8;\n                if (*0x5985b0 == 0) {\n                    *(in_RAX + 0x18) = arg3;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x47bdb4;\n                    arg3 = fcn.0045df80(in_RAX, in_RAX + 0x18, iVar6, arg4);\n                }\n                arg4 = *(*0x20 + -0x40);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            *(in_RAX + 0x20) = uVar9;\n            *(arg3 + -8 + uVar9 * 8) = arg4;\n            uVar1 = *(unaff_RBX + 0x17);\n            if (((uVar1 & 0x20) == 0) || (*(unaff_RBX + 8) != 0)) {\n                *(*0x20 + -0x90) = 0x47bdfc;\n                cVar5 = fcn.0047c620(8, uVar1, arg3);\n                uVar7 = 1;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x47be16;\n                cVar5 = fcn.0047c620(8, uVar1, arg3);\n                uVar7 = 0;\n            }\n            if (cVar5 != '\\0') {\n                return 0;\n            }\n            arg2 = *(*0x20 + 8);\n            arg2[6] = arg2[6] + 7U & 0xfffffffffffffff8;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x38) = 1;\n            *(*0x20 + -0x28) = 8;\n            *(*0x20 + -0x20) = arg2[6];\n            iVar6 = *arg2;\n            uVar8 = arg2[2];\n            unaff_RBX = arg2[1] + 1;\n            piVar10 = arg2;\n            if (uVar8 < unaff_RBX) {\n                *(*0x20 + -0x41) = uVar7;\n                *(*0x20 + -0x90) = 0x47be9d;\n                uVar9 = uVar8;\n                iVar6 = fcn.00445800(uVar8);\n                piVar10 = *(*0x20 + 8);\n                piVar10[2] = uVar8;\n                if (*0x5985b0 == 0) {\n                    *piVar10 = iVar6;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x47bebc;\n                    iVar6 = fcn.0045df80(uVar8, arg2, uVar9, arg4);\n                }\n            }\n            piVar10[1] = unaff_RBX;\n            puVar12 = unaff_RBX * 0x30 + -0x30 + iVar6;\n            uVar2 = *(*0x20 + -0x34);\n            uVar3 = *(*0x20 + -0x30);\n            uVar4 = *(*0x20 + -0x2c);\n            *puVar12 = *(*0x20 + -0x38);\n            puVar12[1] = uVar2;\n            puVar12[2] = uVar3;\n            puVar12[3] = uVar4;\n            puVar12 = unaff_RBX * 0x30 + -0x20 + iVar6;\n            uVar2 = *(*0x20 + -0x24);\n            uVar3 = *(*0x20 + -0x20);\n            uVar4 = *(*0x20 + -0x1c);\n            *puVar12 = *(*0x20 + -0x28);\n            puVar12[1] = uVar2;\n            puVar12[2] = uVar3;\n            puVar12[3] = uVar4;\n            uVar2 = *(*0x20 + -0x14);\n            uVar3 = *(*0x20 + -0x10);\n            uVar4 = *(*0x20 + -0xc);\n            puVar12[4] = *(*0x20 + -0x18);\n            puVar12[5] = uVar2;\n            puVar12[6] = uVar3;\n            puVar12[7] = uVar4;\n            piVar10[6] = piVar10[6] + 8;\n            uVar8 = piVar10[1];\n            if (uVar8 - 1 < uVar8) {\n                return uVar8 * 0x30 + -0x30 + *piVar10;\n            }\n            *(*0x20 + -0x90) = 0x47bf4d;\n            in_RAX = fcn.0045e420(uVar8);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + -8) = 0x47bf5d;\n        fcn.0045bdc0();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1682
    },
    "0047c620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0047c620(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    int64_t *in_RAX;\n    int64_t iVar5;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint64_t unaff_RDI;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint64_t arg3_00;\n    uint *puVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RDI < 9) {\n                if ((unaff_SIL == 0) || (arg1 == 8)) {\n                    if (in_RAX[7] + unaff_RDI <= *0x52d350) {\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + 0x20) = unaff_RDI;\n                        *(*0x20 + 0x28) = unaff_SIL;\n                        *(*0x20 + 0x18) = arg1;\n                        for (arg2 = 0; arg2 < unaff_RDI; arg2 = arg2 + 1) {\n                            uVar7 = 2;\n                            if ((unaff_SIL & 1 << (arg2 & 0x1f) & -(arg2 < 0x20)) != 0) {\n                                uVar7 = 3;\n                            }\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            *(*0x20 + -0x38) = uVar7;\n                            *(*0x20 + -0x30) = unaff_RBX + arg2 * arg1;\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x18) = in_RAX[7];\n                            uVar8 = in_RAX[1] + 1;\n                            iVar5 = *in_RAX;\n                            arg1_00 = in_RAX[2];\n                            if (arg1_00 < uVar8) {\n                                *(*0x20 + -0x40) = arg2;\n                                *(*0x20 + -0x88) = 0x47c785;\n                                arg3_00 = uVar8;\n                                iVar5 = fcn.00445800(arg1_00);\n                                piVar1 = *(*0x20 + 8);\n                                piVar1[2] = arg1_00;\n                                if (*0x5985b0 == 0) {\n                                    *piVar1 = iVar5;\n                                }\n                                else {\n                                    *(*0x20 + -0x88) = 0x47c7a5;\n                                    iVar5 = fcn.0045df80(arg1_00, arg2, arg3_00, arg1);\n                                }\n                                arg2 = *(*0x20 + -0x40);\n                                unaff_SIL = *(*0x20 + 0x28);\n                                unaff_RDI = *(*0x20 + 0x20);\n                                arg1 = *(*0x20 + 0x18);\n                                in_RAX = *(*0x20 + 8);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            in_RAX[1] = uVar8;\n                            puVar9 = uVar8 * 0x30 + -0x30 + iVar5;\n                            uVar2 = *(*0x20 + -0x34);\n                            uVar3 = *(*0x20 + -0x30);\n                            uVar4 = *(*0x20 + -0x2c);\n                            *puVar9 = *(*0x20 + -0x38);\n                            puVar9[1] = uVar2;\n                            puVar9[2] = uVar3;\n                            puVar9[3] = uVar4;\n                            puVar9 = uVar8 * 0x30 + -0x20 + iVar5;\n                            uVar2 = *(*0x20 + -0x24);\n                            uVar3 = *(*0x20 + -0x20);\n                            uVar4 = *(*0x20 + -0x1c);\n                            *puVar9 = *(*0x20 + -0x28);\n                            puVar9[1] = uVar2;\n                            puVar9[2] = uVar3;\n                            puVar9[3] = uVar4;\n                            uVar2 = *(*0x20 + -0x14);\n                            uVar3 = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0xc);\n                            puVar9[4] = *(*0x20 + -0x18);\n                            puVar9[5] = uVar2;\n                            puVar9[6] = uVar3;\n                            puVar9[7] = uVar4;\n                            in_RAX[7] = in_RAX[7] + 1;\n                        }\n                        return 1;\n                    }\n                    return 0;\n                }\n                *(*0x20 + -0x88) = 0x47c807;\n                fcn.00432de0();\n            }\n            unaff_RBX = 0x4ca0a8;\n            *(*0x20 + -0x88) = 0x47c81a;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        puVar6[0x28] = unaff_SIL;\n        *(puVar6 + -8) = 0x47c839;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_SIL = puVar6[0x28];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1570
    },
    "0047d2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0047d2e0(int64_t arg1)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong arg2;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    ulong uVar6;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        uVar5 = unaff_RDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x200 && *0x20 + -0x200 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x280;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((unaff_RSI >> 9 & 1) != 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x1a0) = unaff_RSI;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x180) = unaff_RDI;\n                *(*0x20 + -0x188) = arg1;\n                *(*0x20 + -0x1b1) = *(arg1 + 0x17);\n                *(*0x20 + -0x288) = 0x47d36c;\n                iVar2 = fcn.00482060(unaff_RSI);\n                uVar5 = *(*0x20 + -0x1b1) & 0x1f | *(*0x20 + -0x1a0) & 0x1e0;\n                uVar6 = 0x4cb460;\n                if (iVar2 == 0x4cb460) {\n                    *(*0x20 + -0x1a8) = uVar5;\n                    *(*0x20 + -0x198) = unaff_RDI;\n                    *(*0x20 + -0x1b0) = 0x4822c0;\n                    *(*0x20 + -0xc0) = in_XMM15;\n                    *(*0x20 + -0x290) = unaff_RBP;\n                    *(*0x20 + -0x288) = 0x47d3ef;\n                    arg2 = *0x4cb468;\n                    fcn.0045e6af();\n                    uVar1 = *(*0x20 + -0x290);\n                    *(*0x20 + -0x288) = 0x47d3fd;\n                    fcn.0047e560();\n                    *(*0x20 + -0xc0) = *(*0x20 + -0x280);\n                    *(*0x20 + -0x290) = uVar1;\n                    *(*0x20 + -0x288) = 0x47d42f;\n                    fcn.0045e9e6();\n                    *(*0x20 + -0x178) = *(*0x20 + -0xc0);\n                    *(*0x20 + -0x290) = *(*0x20 + -0x290);\n                    *(*0x20 + -0x288) = 0x47d46f;\n                    fcn.0045e9e6();\n                    *(*0x20 + -0x288) = 0x47d47f;\n                    puVar3 = fcn.0040c6e0();\n                    *puVar3 = *(*0x20 + -0x1b0);\n                    if (*0x5985b0 == 0) {\n                        puVar3[1] = *(*0x20 + -0xd0);\n                    }\n                    else {\n                        *(*0x20 + -0x288) = 0x47d4ab;\n                        puVar3 = fcn.0045e080(*(*0x20 + -0xd0), arg2, uVar6, in_R9);\n                    }\n                    *(*0x20 + -400) = puVar3;\n                    puVar3[2] = *(*0x20 + -0xe8);\n                    uVar5 = *(*0x20 + -200);\n                    *(puVar3 + 3) = *(*0x20 + -200);\n                    iVar2 = *(*0x20 + -0x1a0) >> 10;\n                    puVar3[4] = iVar2;\n                    puVar3[7] = *(*0x20 + -0x1a8);\n                    if (*0x5985b0 == 0) {\n                        uVar6 = *(*0x20 + -0x188);\n                        puVar3[5] = uVar6;\n                        puVar3[6] = *(*0x20 + -0x180);\n                    }\n                    else {\n                        uVar6 = *(*0x20 + -0x188);\n                        *(*0x20 + -0x288) = 0x47d51b;\n                        fcn.0045e080(uVar6, uVar5, iVar2, in_R9);\n                        *(*0x20 + -0x288) = 0x47d52c;\n                        fcn.0045e120(uVar6, uVar5, iVar2);\n                    }\n                    *(*0x20 + -0x288) = 0x47d545;\n                    fcn.0047f900(uVar6, uVar5, iVar2);\n                    return;\n                }\n                arg1 = 0x4a3240;\n                *(*0x20 + -0x288) = 0x47d585;\n                fcn.00409d00(0x4a3240);\n            }\n            unaff_RBX = 0x4ca178;\n            *(*0x20 + -0x288) = 0x47d598;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = uVar5;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + -8) = 0x47d5b7;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1596
    },
    "0047d5e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0047d5e0(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    ulong *unaff_RBX;\n    ulong uStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack80 = *unaff_RBX;\n    uStack72 = *(unaff_RBX + 1);\n    uStack68 = *(unaff_RBX + 0xc);\n    uStack64 = *(unaff_RBX + 2);\n    uStack60 = *(unaff_RBX + 0x14);\n    uStack56 = *(unaff_RBX + 3);\n    uStack52 = *(unaff_RBX + 0x1c);\n    uStack48 = *(unaff_RBX + 4);\n    uStack44 = *(unaff_RBX + 0x24);\n    uStack40 = *(unaff_RBX + 5);\n    uStack36 = *(unaff_RBX + 0x2c);\n    uStack32 = *(unaff_RBX + 6);\n    uStack28 = *(unaff_RBX + 0x34);\n    uStack24 = *(unaff_RBX + 7);\n    uStack20 = *(unaff_RBX + 0x3c);\n    uStack16 = *(unaff_RBX + 8);\n    uStack12 = *(unaff_RBX + 0x44);\n    uVar2 = 0;\n    while( true ) {\n        if (8 < uVar2) {\n            return;\n        }\n        if (1 < uVar2 >> 3) break;\n        uVar3 = uVar2 - (uVar2 & 0xfffffffffffffff8);\n        if (uVar3 < 0) {\n            fcn.00431ba0();\n            break;\n        }\n        if ((1 << (uVar3 & 0x1f) & -(uVar3 < 0x20) & *(in_RAX + 0x18 + (uVar2 >> 3))) == 0) {\n            unaff_RBX[uVar2 + 0x18] = 0;\n        }\n        else {\n            unaff_RBX[uVar2 + 0x18] = (&uStack80)[uVar2];\n        }\n        uVar2 = uVar2 + 1;\n    }\n    fcn.0045e420(2);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 642
    },
    "0047de00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0047de00(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar1 = *(in_RAX + 0x28);\n            *(*0x20 + -0x20) = 0x47de25;\n            fcn.00459c60();\n            *(*0x20 + -0x20) = 0x47de2a;\n            iVar2 = fcn.0047d6a0();\n            if ((*(*(*0x20 + 8) + 0x14) & 2) == 0) {\n                return iVar2;\n            }\n            if (uVar1 != 0) {\n                return iVar2 + (-(uVar1 - 1) >> 0x3f & 1);\n            }\n            *(*0x20 + -0x20) = 0x47de74;\n            in_RAX = fcn.0045e4e0(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x47de7f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 427
    },
    "0047e560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0047e560(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t *arg1;\n    uint uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong *puVar6;\n    uchar *arg1_00;\n    uint64_t noname_1;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar8;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x338 && *0x20 + -0x338 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x3b8;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_XMM15;\n            *(*0x20 + -0x3c8) = *0x20 + -8;\n            *(*0x20 + -0x3c0) = 0x47e5af;\n            iVar2 = fcn.0045e6af();\n            unaff_RBP = *(*0x20 + -0x3c8);\n            noname_1 = *(iVar2 + 0x17) & 0x1f;\n            if (noname_1 == 0x13) {\n                if ((unaff_RBX == 0) || (noname_1 = *(unaff_RBX + 0x17) & 0x1f,  noname_1 != 0x14)) {\n                    *(*0x20 + 200) = unaff_RBX;\n                    *(*0x20 + 0xc0) = iVar2;\n                    *(*0x20 + -0x280) = in_XMM15;\n                    *(*0x20 + -0x280) = iVar2;\n                    *(*0x20 + -0x278) = unaff_RBX;\n                    *(*0x20 + -0x270) = iVar2;\n                    *(*0x20 + -0x268) = unaff_RBX;\n                    arg1_00 = *0x20 + -0x270;\n                    *(*0x20 + -0x3c0) = 0x47e63e;\n                    fcn.00464340(arg1_00);\n                    if (arg1_00 == '\\0') {\n                        uVar5 = *(*0x20 + 200);\n                        *(*0x20 + -0x3c0) = 0x47e75b;\n                        fcn.0047c860();\n                        *(*0x20 + 8) = *(*0x20 + -0x3b8);\n                        *(*0x20 + -0x3c8) = unaff_RBP;\n                        *(*0x20 + -0x3c0) = 0x47e78f;\n                        fcn.0045e9e6();\n                        unaff_RBP = *(*0x20 + -0x3c8);\n                        *(*0x20 + -0x2f0) = *(*0x20 + 0xa0) + *(*0x20 + 0x80);\n                        *(*0x20 + -0x3c0) = 0x47e7b7;\n                        puVar3 = fcn.0040c6e0();\n                        *(puVar3 + 0x15) = 8;\n                        *puVar3 = *(*0x20 + -0x2f0) + 7U & 0xfffffffffffffff8;\n                        puVar3[1] = **(*0x20 + 0xb0) << 3;\n                        arg1 = *(*0x20 + 0xb0);\n                        if (*arg1 == 0) {\n                            bVar8 = *(*0x20 + 200) == 0;\ncode_r0x0047e837:\n                            *(*0x20 + -0x2a0) = puVar3;\n                            if (bVar8) {\n                                *(*0x20 + -0x3c0) = 0x47e8c6;\n                                fcn.0047de00();\n                                param_4 = 1;\n                                *(*0x20 + -0x3c0) = 0x47e8f2;\n                                fcn.00449620(9, noname_1, \")+./0:<=CLMPSZ[\\\\\", 1);\n                            }\n                            else {\n                                *(*0x20 + -0x3c0) = 0x47e84a;\n                                uVar4 = fcn.0047de00();\n                                *(*0x20 + -0x288) = uVar4;\n                                *(*0x20 + -0x2e8) = uVar5;\n                                *(*0x20 + -0x3c0) = 0x47e867;\n                                fcn.0047de00();\n                                *(*0x20 + -0x3b8) = \")+./0:<=CLMPSZ[\\\\\";\n                                *(*0x20 + -0x3b0) = 1;\n                                param_4 = 2;\n                                *(*0x20 + -0x3c0) = 0x47e8b7;\n                                fcn.00449800(0xb, noname_1, 0x4a7f5c, 2);\n                            }\n                            param_3 = 0;\n                            *(*0x20 + -0x3c0) = 0x47e905;\n                            fcn.0047d8c0(0, noname_1);\n                            *(*0x20 + -0x3c0) = 0x47e90a;\n                            uVar1 = fcn.00459d60();\n                            *(*(*0x20 + -0x2a0) + 0x28) = uVar1;\n                            *(*0x20 + -0x3c0) = 0x47e925;\n                            uVar5 = fcn.0040c6e0();\n                            *(*0x20 + -0x290) = uVar5;\n                            *(*0x20 + -0x3c0) = 0x47e939;\n                            puVar6 = fcn.0040c6e0();\n                            *puVar6 = 0x47ec20;\n                            if (*0x5985b0 == 0) {\n                                uVar5 = *(*0x20 + -0x2a0);\n                                puVar6[1] = uVar5;\n                                iVar2 = *(*0x20 + -0x290);\n                                *(iVar2 + 0x20) = puVar6;\n                            }\n                            else {\n                                uVar5 = *(*0x20 + -0x2a0);\n                                *(*0x20 + -0x3c0) = 0x47e977;\n                                fcn.0045e080(uVar5, 0x47ec20, param_3, param_4);\n                                iVar2 = *(*0x20 + -0x290);\n                                *(*0x20 + -0x3c0) = 0x47e98e;\n                                fcn.0045df80(uVar5, iVar2 + 0x20, param_3, param_4);\n                            }\n                            *(*0x20 + -0xd0) = in_XMM15;\n                            *(*0x20 + -0x3c8) = unaff_RBP;\n                            *(*0x20 + -0x3c0) = 0x47e9b1;\n                            fcn.0045e6ab();\n                            *(*0x20 + -0xd0) = uVar5;\n                            *(*0x20 + -200) = iVar2;\n                            *(*0x20 + -0xc0) = *(*0x20 + 8);\n                            *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x47e9f4;\n                            fcn.0045e9e6();\n                            uVar5 = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x47ea0c;\n                            uVar4 = fcn.00409de0();\n                            *(*0x20 + -0x298) = uVar4;\n                            *(*0x20 + -0x3c0) = 0x47ea28;\n                            fcn.00409de0();\n                            *(*0x20 + -0x3c0) = 0x47ea4d;\n                            fcn.00464500(*(*0x20 + -0x298));\n                            *(*0x20 + -0xd0) = in_XMM15;\n                            *(*0x20 + -0x3c8) = uVar5;\n                            *(*0x20 + -0x3c0) = 0x47ea6f;\n                            iVar2 = fcn.0045e6ab();\n                            unaff_RBP = *(*0x20 + -0x3c8);\n                            if (iVar2 == 0x49e320) {\n                                *(*0x20 + -0xd0) = *0x49c460;\n                                *(*0x20 + -0x3c8) = unaff_RBP;\n                                *(*0x20 + -0x3c0) = 0x47eaaf;\n                                fcn.0045e9d8();\n                                *(*0x20 + -0x260) = *(*0x20 + -0xd0);\n                                *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                                *(*0x20 + -0x3c0) = 0x47eaef;\n                                fcn.0045e9d8();\n                                *(*0x20 + 8) = *(*0x20 + -0x250);\n                                *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                                *(*0x20 + -0x3c0) = 0x47eb32;\n                                fcn.0045e9e6();\n                                return;\n                            }\n                            *(*0x20 + -0x3c0) = 0x47eb55;\n                            fcn.00409c20(0x497f80);\n                        }\n                        else {\n                            noname_1 = *(arg1 + 2);\n                            if (*(arg1 + 4) != 0) {\n                                if (*0x5985b0 == 0) {\n                                    puVar3[4] = noname_1;\n                                    bVar8 = *(*0x20 + 200) == 0;\n                                }\n                                else {\n                                    *(*0x20 + -0x3c0) = 0x47e81f;\n                                    puVar3 = fcn.0045e0a0(arg1, noname_1, param_3, param_4);\n                                    bVar8 = *(*0x20 + 200) == 0;\n                                }\n                                goto code_r0x0047e837;\n                            }\n                        }\n                        *(*0x20 + -0x3c0) = 0x47eb5f;\n                        fcn.0045e420(0);\n                    }\n                    else {\n                        *(*0x20 + -0xd0) = in_XMM15;\n                        *(*0x20 + -0x3c8) = unaff_RBP;\n                        *(*0x20 + -0x3c0) = 0x47e66f;\n                        iVar2 = fcn.0045e6ab();\n                        unaff_RBP = *(*0x20 + -0x3c8);\n                        if (iVar2 == 0x49e320) {\n                            *(*0x20 + -0xd0) = *0x49c460;\n                            *(*0x20 + -0x3c8) = unaff_RBP;\n                            *(*0x20 + -0x3c0) = 0x47e6af;\n                            fcn.0045e9d8();\n                            *(*0x20 + -0x198) = *(*0x20 + -0xd0);\n                            *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x47e6ef;\n                            fcn.0045e9d8();\n                            *(*0x20 + 8) = *(*0x20 + -0x188);\n                            *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x47e732;\n                            fcn.0045e9e6();\n                            return;\n                        }\n                    }\n                    *(*0x20 + -0x3c0) = 0x47eb6e;\n                    fcn.00409c20(0x497f80);\n                }\n                *(*0x20 + -0x3c0) = 0x47eb76;\n                fcn.0047de00();\n                *(*0x20 + -0x3c0) = 0x47eb8f;\n                fcn.00449580(0x2c);\n                *(*0x20 + -0x3c0) = 0x47eb94;\n                fcn.00409fe0();\n                *(*0x20 + -0x3c0) = 0x47eba5;\n                fcn.00432de0();\n            }\n            *(*0x20 + -0x3c0) = 0x47ebaa;\n            fcn.0047de00();\n            *(*0x20 + -0x3c0) = 0x47ebc5;\n            fcn.00449580(0x25);\n            *(*0x20 + -0x3c0) = 0x47ebca;\n            unaff_RBX = fcn.00409fe0();\n            *(*0x20 + -0x3c0) = 0x47ebd9;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar7 + 0xc0) = in_RAX;\n        *(puVar7 + 200) = unaff_RBX;\n        *(puVar7 + -8) = 0x47ebef;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 0xc0);\n        unaff_RBX = *(puVar7 + 200);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 3299
    },
    "0047ec60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0047ec60(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_RAX;\n    int64_t iVar2;\n    uint32_t *puVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    uint64_t in_R9;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    uint32_t *puStack16;\n    \n    while (&puStack16 < *(unaff_R14 + 0x10) || &puStack16 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*(arg1 + 8) == 0) {\n        return;\n    }\n    uVar8 = *(arg1 + 0x17) & 0x1f;\n    puVar3 = in_RAX;\n    uVar6 = unaff_RBX;\n    if (uVar8 < 0x15) {\n        if (uVar8 == 0x11) {\n            for (iVar2 = 0; *(arg1 + 0x40) != iVar2 && iVar2 <= *(arg1 + 0x40); iVar2 = iVar2 + 1) {\n                fcn.0047ec60(*(arg1 + 0x30));\n            }\n        }\n        else {\n            if (uVar8 - 0x12 < 2) goto code_r0x0047ed9c;\n            if (uVar8 == 0x14) {\ncode_r0x0047ef75:\n                uVar1 = *puVar3;\n                uVar8 = uVar6 >> 3;\n                if (uVar8 <= uVar1) {\n                    if ((uVar1 & 0x3f) != 0) goto code_r0x0047efba;\n                    uVar6 = 0;\n                    do {\n                        if (uVar6 < 8) {\n                            uVar8 = *(puVar3 + 4) + 1;\n                            iVar2 = *(puVar3 + 2);\n                            uVar7 = *(puVar3 + 6);\n                            if (uVar7 < uVar8) {\n                                uVar4 = uVar7;\n                                iVar2 = fcn.00445800(uVar7);\n                                *(in_RAX + 6) = uVar7;\n                                if (*0x5985b0 == 0) {\n                                    *(in_RAX + 2) = iVar2;\n                                    puVar3 = in_RAX;\n                                }\n                                else {\n                                    puVar3 = in_RAX;\n                                    iVar2 = fcn.0045df80(in_RAX, in_RAX + 2, uVar4, in_R9);\n                                }\n                            }\n                        }\n                        else {\ncode_r0x0047efba:\n                            iVar2 = *(puVar3 + 2);\n                            uVar6 = *(puVar3 + 4);\n                            uVar1 = *puVar3;\n                            in_R9 = uVar1;\n                            uVar7 = uVar1 >> 3;\n                            if (uVar7 < uVar6) {\n                                *(iVar2 + uVar7) = *(uVar7 + iVar2) | 1 << (uVar1 & 7);\n                                uVar1 = *puVar3;\n                                *puVar3 = uVar1 + 1;\n                                if ((uVar1 + 1 & 0x3f) != 0) goto code_r0x0047f004;\n                                puStack16 = puVar3 + 2;\n                                uVar6 = 0;\n                                do {\n                                    if (uVar6 < 8) {\n                                        uVar8 = *(puVar3 + 4) + 1;\n                                        uVar4 = *(puVar3 + 2);\n                                        uVar5 = *(puVar3 + 6);\n                                        uVar7 = uVar4;\n                                        if (uVar5 < uVar8) {\n                                            arg4 = uVar5;\n                                            uVar7 = fcn.00445800(uVar5);\n                                            *(in_RAX + 6) = uVar5;\n                                            if (*0x5985b0 == 0) {\n                                                *(in_RAX + 2) = uVar7;\n                                                puVar3 = in_RAX;\n                                            }\n                                            else {\n                                                uVar7 = fcn.0045df80(uVar5, in_RAX, uVar4, arg4);\n                                                puVar3 = in_RAX;\n                                            }\n                                        }\n                                    }\n                                    else {\ncode_r0x0047f004:\n                                        uVar6 = *(puVar3 + 4);\n                                        uVar8 = *puVar3 >> 3;\n                                        if (uVar8 < uVar6) {\n                                            *(*(puVar3 + 2) + uVar8) = *(uVar8 + *(puVar3 + 2)) | 1 << (*puVar3 & 7);\n                                            *puVar3 = *puVar3 + 1;\n                                            return;\n                                        }\n                                        puVar3 = fcn.0045e420(uVar6);\n                                    }\n                                    *(puVar3 + 4) = uVar8;\n                                    *((uVar8 - 1) + uVar7) = 0;\n                                    uVar6 = uVar6 + 1;\n                                } while( true );\n                            }\n                            puVar3 = fcn.0045e420(uVar6);\n                        }\n                        *(puVar3 + 4) = uVar8;\n                        *((uVar8 - 1) + iVar2) = 0;\n                        uVar6 = uVar6 + 1;\n                    } while( true );\n                }\n                if ((uVar1 & 0x3f) != 0) goto code_r0x0047ef94;\n                uVar7 = 0;\n                do {\n                    if (uVar7 < 8) {\n                        uVar8 = *(puVar3 + 4) + 1;\n                        uVar4 = *(puVar3 + 2);\n                        uVar5 = *(puVar3 + 6);\n                        in_R9 = uVar5;\n                        if (uVar5 < uVar8) {\n                            uVar4 = fcn.00445800(uVar5);\n                            *(in_RAX + 6) = uVar5;\n                            if (*0x5985b0 == 0) {\n                                *(in_RAX + 2) = uVar4;\n                                puVar3 = in_RAX;\n                                uVar6 = unaff_RBX;\n                            }\n                            else {\n                                puVar3 = in_RAX;\n                                uVar4 = fcn.0045df80(in_RAX, in_RAX + 2, uVar6, in_R9);\n                                uVar6 = unaff_RBX;\n                            }\n                        }\n                    }\n                    else {\ncode_r0x0047ef94:\n                        uVar7 = *(puVar3 + 4);\n                        uVar4 = *puVar3 >> 3;\n                        if (uVar4 < uVar7) goto code_r0x0047ef70;\n                        puVar3 = fcn.0045e420(uVar7);\n                    }\n                    *(puVar3 + 4) = uVar8;\n                    *((uVar8 - 1) + uVar4) = 0;\n                    uVar7 = uVar7 + 1;\n                } while( true );\n            }\n        }\n    }\n    else {\n        if (uVar8 < 0x19) {\ncode_r0x0047ed9c:\n            uVar1 = *puVar3;\n            uVar8 = uVar6 >> 3;\n            if (uVar8 <= uVar1) {\n                if ((uVar1 & 0x3f) != 0) goto code_r0x0047edd8;\n                uVar6 = 0;\n                do {\n                    if (uVar6 < 8) {\n                        uVar8 = *(puVar3 + 4) + 1;\n                        iVar2 = *(puVar3 + 2);\n                        uVar7 = *(puVar3 + 6);\n                        if (uVar7 < uVar8) {\n                            uVar4 = uVar7;\n                            iVar2 = fcn.00445800(uVar7);\n                            *(in_RAX + 6) = uVar7;\n                            if (*0x5985b0 == 0) {\n                                *(in_RAX + 2) = iVar2;\n                                puVar3 = in_RAX;\n                            }\n                            else {\n                                puVar3 = in_RAX;\n                                iVar2 = fcn.0045df80(in_RAX, in_RAX + 2, uVar4, in_R9);\n                            }\n                        }\n                    }\n                    else {\ncode_r0x0047edd8:\n                        iVar2 = *(puVar3 + 2);\n                        uVar6 = *(puVar3 + 4);\n                        uVar8 = *puVar3 >> 3;\n                        if (uVar8 < uVar6) {\n                            *(iVar2 + uVar8) = *(uVar8 + iVar2) | 1 << (*puVar3 & 7);\n                            *puVar3 = *puVar3 + 1;\n                            return;\n                        }\n                        puVar3 = fcn.0045e420(uVar6);\n                    }\n                    *(puVar3 + 4) = uVar8;\n                    *((uVar8 - 1) + iVar2) = 0;\n                    uVar6 = uVar6 + 1;\n                } while( true );\n            }\n            if ((uVar1 & 0x3f) != 0) goto code_r0x0047edb9;\n            uVar7 = 0;\n            do {\n                if (uVar7 < 8) {\n                    uVar8 = *(puVar3 + 4) + 1;\n                    uVar4 = *(puVar3 + 2);\n                    uVar5 = *(puVar3 + 6);\n                    in_R9 = uVar5;\n                    if (uVar5 < uVar8) {\n                        uVar4 = fcn.00445800(uVar5);\n                        *(in_RAX + 6) = uVar5;\n                        if (*0x5985b0 == 0) {\n                            *(in_RAX + 2) = uVar4;\n                            puVar3 = in_RAX;\n                            uVar6 = unaff_RBX;\n                        }\n                        else {\n                            puVar3 = in_RAX;\n                            uVar4 = fcn.0045df80(in_RAX, in_RAX + 2, uVar6, in_R9);\n                            uVar6 = unaff_RBX;\n                        }\n                    }\n                }\n                else {\ncode_r0x0047edb9:\n                    uVar7 = *(puVar3 + 4);\n                    uVar4 = *puVar3 >> 3;\n                    if (uVar4 < uVar7) goto code_r0x0047ed97;\n                    puVar3 = fcn.0045e420(uVar7);\n                }\n                *(puVar3 + 4) = uVar8;\n                *((uVar8 - 1) + uVar4) = 0;\n                uVar7 = uVar7 + 1;\n            } while( true );\n        }\n        if (uVar8 == 0x19) {\n            iVar2 = *(arg1 + 0x40);\n            for (uVar8 = 0; uVar8 < iVar2; uVar8 = uVar8 + 1) {\n                uVar6 = *(arg1 + 0x40);\n                if (uVar6 <= uVar8) {\n                    puVar3 = fcn.0045e420(uVar6);\n                    goto code_r0x0047ed97;\n                }\n                fcn.0047ec60(*(*(arg1 + 0x38) + 8 + uVar8 * 0x18));\n            }\n        }\n        else if (uVar8 == 0x1a) goto code_r0x0047ed9c;\n    }\n    return;\ncode_r0x0047ed97:\n    *puVar3 = *puVar3 + 1;\n    goto code_r0x0047ed9c;\ncode_r0x0047ef70:\n    *puVar3 = *puVar3 + 1;\n    goto code_r0x0047ef75;\n}\n",
        "token_count": 2745
    },
    "0047f420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0047f420(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong uVar3;\n    uint64_t arg1;\n    ulong *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x138) = 0x47f455;\n            uVar3 = fcn.0040c6e0();\n            *(*0x20 + -0xc0) = uVar3;\n            *(*0x20 + -0x138) = 0x47f470;\n            arg1 = fcn.00454460(5);\n            if (arg1 < 6) {\n                *(*0x20 + -0xd0) = arg1;\n                *(*0x20 + -0x138) = 0x47f48b;\n                puVar4 = fcn.0040c6e0();\n                puVar4[1] = *(*0x20 + -0xd0);\n                puVar4[2] = 5;\n                if (*0x5985b0 == 0) {\n                    *puVar4 = *(*0x20 + -0xc0);\n                }\n                else {\n                    *(*0x20 + -0x138) = 0x47f4bc;\n                    puVar4 = fcn.0045e080(*(*0x20 + -0xc0), param_2, param_3, param_4);\n                }\n                puVar4[4] = 0;\n                puVar4[5] = 2;\n                if (*0x5985b0 == 0) {\n                    puVar4[3] = puVar4 + 6;\n                }\n                else {\n                    *(*0x20 + -0x138) = 0x47f4e8;\n                    puVar4 = fcn.0045e080(puVar4 + 6, param_2, param_3, param_4);\n                }\n                *(*0x20 + -200) = puVar4;\n                *(*0x20 + -0xb8) = in_XMM15;\n                *(*0x20 + -0x140) = unaff_RBP;\n                *(*0x20 + -0x138) = 0x47f50f;\n                fcn.0045e6d0();\n                uVar3 = *(*0x20 + -0x140);\n                while( true ) {\n                    *(*0x20 + -0x60) = in_XMM15;\n                    *(*0x20 + -0x140) = uVar3;\n                    *(*0x20 + -0x138) = 0x47f54f;\n                    fcn.0045e6d0();\n                    uVar3 = *(*0x20 + -0x140);\n                    *(*0x20 + -0x138) = 0x47f558;\n                    fcn.0044a5a0();\n                    *(*0x20 + -0x60) = *(*0x20 + -0x130);\n                    *(*0x20 + -0x140) = uVar3;\n                    *(*0x20 + -0x138) = 0x47f58f;\n                    fcn.0045ea3a();\n                    *(*0x20 + -0xb8) = *(*0x20 + -0x60);\n                    *(*0x20 + -0x140) = *(*0x20 + -0x140);\n                    *(*0x20 + -0x138) = 0x47f5cf;\n                    cVar2 = fcn.0045ea3a();\n                    uVar3 = *(*0x20 + -0x140);\n                    piVar1 = *(*0x20 + -0xa8);\n                    if ((((0xe < *(*0x20 + -0xa0)) && (*piVar1 == 0x2e7463656c666572)) && (*(piVar1 + 1) == 0x756c6156))\n                       && (((*(piVar1 + 0xc) == 0x2e65 && (*(*0x20 + -0xa0) != 0xe)) &&\n                           ((0x40 < *(piVar1 + 0xe) && (*(piVar1 + 0xe) < 0x5b)))))) break;\n                    if (cVar2 == '\\0') {\n                        return 0x4a9cd4;\n                    }\n                }\n                return piVar1;\n            }\n            param_2 = 5;\n            *(*0x20 + -0x138) = 0x47f678;\n            fcn.0045e460(arg1, 5);\n        }\n        *(puVar5 + -8) = 0x47f67e;\n        fcn.0045bdc0();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1211
    },
    "0047f6a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0047f6a0(ulong arg1)\n\n{\n    ulong noname_0;\n    ulong *puVar1;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((arg1 & 0x1f) == 1) {\n        return;\n    }\n    noname_0 = fcn.0047f420();\n    puVar1 = fcn.0040c6e0();\n    puVar1[1] = unaff_RBX;\n    if (*0x5985b0 != 0) goto code_r0x0047f727;\n    *puVar1 = noname_0;\n    do {\n        puVar1[2] = arg1 & 0x1f;\n        fcn.00432de0();\ncode_r0x0047f727:\n        puVar1 = fcn.0045e080(noname_0, in_RDX, in_R8, in_R9);\n    } while( true );\n}\n",
        "token_count": 286
    },
    "0047f900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0047f900(int64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    uint8_t *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t arg1_00;\n    uint64_t noname_1_00;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            noname_1_00 = *(arg1 + 0x17) & 0x1f;\n            if (noname_1_00 == 0x14) {\n                noname_1_00 = *(arg1 + 0x38);\n                if (arg3 <= *(arg1 + 0x40) && *(arg1 + 0x40) != arg3) {\n                    *(*0x20 + -0x20) = unaff_RDI;\n                    *(*0x20 + -0x28) = noname_1_00;\n                    *(*0x20 + -0x80) = 0x47f985;\n                    puVar2 = fcn.00459c60();\n                    if ((*puVar2 & 1) != 0) {\n                        noname_1_00 = **(*0x20 + -0x20);\n                        if (noname_1_00 != 0) {\n                            uVar4 = *(noname_1_00 + 8);\n                            if (*(*0x20 + 0x30) < 100000) {\n                                *(*0x20 + -0x30) = noname_1_00;\n                                *(*0x20 + -0x38) = uVar4;\n                                *(*0x20 + -0x80) = 0x47f9e9;\n                                fcn.00459ca0();\n                                return *(*0x20 + -0x38);\n                            }\n                            goto code_r0x0047fb0e;\n                        }\n                        goto code_r0x0047fb18;\n                    }\n                    goto code_r0x0047fb5c;\n                }\n            }\n            else {\n                *(*0x20 + -0x80) = 0x47fa10;\n                iVar3 = fcn.0047dec0(arg1);\n                if (*(*0x20 + 0x30) < unaff_RBX) {\n                    iVar5 = *(*0x20 + 0x30) * 0x10;\n                    uVar1 = *(iVar3 + 4 + iVar5);\n                    noname_1_00 = uVar1;\n                    *(*0x20 + -0x3c) = uVar1;\n                    *(*0x20 + -0x40) = *(iVar3 + 8 + iVar5);\n                    *(*0x20 + -0x80) = 0x47fa4a;\n                    puVar2 = fcn.00459c60();\n                    arg1_00 = *puVar2;\n                    if ((*puVar2 & 1) != 0) {\n                        *(*0x20 + -0x80) = 0x47fa5e;\n                        uVar4 = fcn.0040c6e0();\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0x80) = 0x47fa71;\n                        uVar4 = fcn.00459ce0();\n                        if (*0x5985b0 == 0) {\n                            **(*0x20 + -0x10) = uVar4;\n                        }\n                        else {\n                            *(*0x20 + -0x80) = 0x47fa8e;\n                            fcn.0045df80(arg1_00, noname_1_00, arg3, in_R9);\n                        }\n                        *(*0x20 + -0x80) = 0x47fa9d;\n                        fcn.00459ca0();\n                        return *(*0x20 + -0x18);\n                    }\n                    *(*0x20 + -0x80) = 0x47fae7;\n                    fcn.00449620(9, noname_1_00, 0x4ab5b2, 0x15);\n                    *(*0x20 + -0x80) = 0x47faec;\n                    fcn.00409fe0();\n                    *(*0x20 + -0x80) = 0x47fafb;\n                    fcn.00432de0();\n                }\n                *(*0x20 + -0x80) = 0x47fb0e;\n                fcn.00432de0();\ncode_r0x0047fb0e:\n                *(*0x20 + -0x80) = 0x47fb18;\n                fcn.0045e420(100000);\ncode_r0x0047fb18:\n                *(*0x20 + -0x80) = 0x47fb48;\n                fcn.00449620(9, noname_1_00, 0x4ae84d, 0x21);\n                *(*0x20 + -0x80) = 0x47fb4d;\n                fcn.00409fe0();\n                *(*0x20 + -0x80) = 0x47fb5c;\n                fcn.00432de0();\ncode_r0x0047fb5c:\n                arg1 = 9;\n                unaff_RDI = *(*0x20 + 8);\n                unaff_RSI = *(*0x20 + 0x10);\n                arg3 = 0x4ab5b2;\n                in_R9 = 0x15;\n                *(*0x20 + -0x80) = 0x47fb8c;\n                fcn.00449620(9, noname_1_00, 0x4ab5b2, 0x15);\n                *(*0x20 + -0x80) = 0x47fb91;\n                fcn.00409fe0();\n                *(*0x20 + -0x80) = 0x47fba5;\n                fcn.00432de0();\n            }\n            unaff_RBX = 0x4ca208;\n            *(*0x20 + -0x80) = 0x47fbb8;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + -8) = 0x47fbdc;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        arg3 = *(puVar6 + 0x30);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1854
    },
    "00481340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00481340(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = arg1 & 0x1f;\n            *(*0x20 + -0x18) = arg1;\n            if (arg1 < 0x13) {\n                if (arg1 == 0x11) {\n                    return in_RAX[8];\n                }\n                if (arg1 != 0x12) {\ncode_r0x0048146e:\n                    *(*0x20 + -0x30) = 0x48147a;\n                    puVar3 = fcn.0040c6e0();\n                    puVar3[1] = 0x11;\n                    *puVar3 = 0x4aa5f9;\n                    arg1 = *(*0x20 + -0x18);\n                    puVar3[2] = arg1;\n                    *(*0x20 + -0x30) = 0x4814a5;\n                    fcn.00432de0();\n                    goto code_r0x004814a5;\n                }\n                if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                    *(*0x20 + -0x30) = 0x4813b0;\n                    iVar2 = fcn.00458da0();\n                    return iVar2;\n                }\n            }\n            else {\n                if (arg1 != 0x15) {\n                    if (arg1 == 0x16) {\n                        *(*0x20 + -0x10) = in_RAX;\n                        *(*0x20 + -0x30) = 0x481425;\n                        iVar2 = fcn.0047dfe0();\n                        pcVar1 = *(iVar2 + 0x98);\n                        *(*0x20 + -0x30) = 0x481431;\n                        iVar2 = (*pcVar1)();\n                        if (iVar2 == 0x11) {\n                            *(*0x20 + -0x30) = 0x481445;\n                            iVar2 = fcn.0047dfe0();\n                            pcVar1 = *(iVar2 + 0xa0);\n                            *(*0x20 + -0x30) = 0x481451;\n                            iVar2 = (*pcVar1)();\n                            return iVar2;\n                        }\n                        *(*0x20 + -0x30) = 0x48146e;\n                        fcn.00432de0();\n                    }\n                    else if (arg1 == 0x18) {\n                        return *(unaff_RBX + 8);\n                    }\n                    goto code_r0x0048146e;\n                }\n                if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                    *(*0x20 + -0x30) = 0x4813f7;\n                    iVar2 = fcn.00458f00();\n                    return iVar2;\n                }\ncode_r0x004814a5:\n                *(*0x20 + -0x30) = 0x4814b8;\n                fcn.00432de0();\n            }\n            unaff_RBX = 0x4ca058;\n            *(*0x20 + -0x30) = 0x4814cb;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x4814e5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1039
    },
    "00481500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00481500(void)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x28) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x481530;\n                arg1 = fcn.00458ec0(in_RAX + 0x18);\n                if (arg1 != 0) {\n                    *(*0x20 + -0x28) = 0x48156f;\n                    fcn.00481840(arg1);\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x48158c;\n                fcn.00432de0();\n            }\n            *(*0x20 + -0x28) = 0x48159f;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4815aa;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 392
    },
    "004815c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004815c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x28) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x4815f0;\n                arg1 = fcn.00458ee0(in_RAX + 0x18);\n                if (arg1 != 0) {\n                    *(*0x20 + -0x28) = 0x48162f;\n                    fcn.00481840(arg1);\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x48164c;\n                fcn.00432de0();\n            }\n            *(*0x20 + -0x28) = 0x48165f;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x48166a;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 395
    },
    "00481680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00481680(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t *arg2;\n    int64_t **in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t **arg1;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg2 = in_RAX[2];\n            if (arg2 != NULL) {\n                arg1 = in_RAX + 3;\n                *(*0x20 + -0x10) = arg1;\n                if (in_RAX[5] == NULL) {\n                    if ((**in_RAX == 8) && ((*in_RAX)[1] != 0)) {\n                        *(*0x20 + -0x30) = 0x4816e5;\n                        fcn.00458e20(arg1, arg2, arg3, arg4);\ncode_r0x004816fe:\n                        *(*0x20 + -0x30) = 0x481708;\n                        uVar2 = fcn.00458ec0();\n                        return uVar2 & 0xffffffffffffff00 | uVar2 != 0;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x4816ef;\n                    iVar1 = fcn.00458ec0();\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x30) = 0x4816fe;\n                        fcn.00458e80(arg1);\n                        goto code_r0x004816fe;\n                    }\n                    *(*0x20 + -0x30) = 0x48172b;\n                    fcn.00432de0();\n                }\n                *(*0x20 + -0x30) = 0x48173e;\n                fcn.00432de0();\n            }\n            *(*0x20 + -0x30) = 0x481751;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x48175c;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 624
    },
    "00481780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00481780(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t in_EAX;\n    ulong noname_0;\n    ulong *puVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((in_EAX & 0x1f) == 0x15) {\n        return;\n    }\n    noname_0 = fcn.0047f420();\n    puVar1 = fcn.0040c6e0();\n    puVar1[1] = unaff_RBX;\n    if (*0x5985b0 != 0) goto code_r0x00481805;\n    *puVar1 = noname_0;\n    do {\n        puVar1[2] = in_EAX & 0x1f;\n        fcn.00432de0();\ncode_r0x00481805:\n        puVar1 = fcn.0045e080(noname_0, param_2, param_3, param_4);\n    } while( true );\n}\n",
        "token_count": 291
    },
    "004819c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004819c0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong noname_0;\n    ulong *puVar1;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((arg1 & 0x1f) == 0x19) {\n        return *(in_RAX + 0x40);\n    }\n    noname_0 = fcn.0047f420();\n    puVar1 = fcn.0040c6e0();\n    puVar1[1] = unaff_RBX;\n    if (*0x5985b0 != 0) goto code_r0x00481a4d;\n    *puVar1 = noname_0;\n    do {\n        puVar1[2] = arg1 & 0x1f;\n        fcn.00432de0();\ncode_r0x00481a4d:\n        puVar1 = fcn.0045e080(noname_0, in_RDX, in_R8, in_R9);\n    } while( true );\n}\n",
        "token_count": 305
    },
    "00481aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00481aa0(uint64_t arg1)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    ulong *puVar2;\n    uint32_t uVar3;\n    ulong *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar3 = arg1;\n            arg1 = uVar3 & 0x1f;\n            *(*0x20 + -0x10) = arg1;\n            if (arg1 < 0x16) {\n                if (arg1 == 0x12) {\ncode_r0x00481b86:\n                    if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                        if ((uVar3 >> 7 & 1) != 0) {\n                            unaff_RBX = *unaff_RBX;\n                        }\n                        return unaff_RBX;\n                    }\n                    *(*0x20 + -0x30) = 0x481bc9;\n                    fcn.00432de0();\ncode_r0x00481bc9:\n                    *(*0x20 + -0x30) = 0x481bd5;\n                    puVar2 = fcn.0040c6e0();\n                    puVar2[1] = 0x15;\n                    *puVar2 = 0x4ab963;\n                    arg1 = *(*0x20 + -0x10);\n                    puVar2[2] = arg1;\n                    *(*0x20 + -0x30) = 0x481bff;\n                    fcn.00432de0();\n                    goto code_r0x00481bff;\n                }\n                if (arg1 != 0x13) {\n                    if (arg1 != 0x15) goto code_r0x00481bc9;\n                    goto code_r0x00481b86;\n                }\n                if ((uVar3 >> 9 & 1) != 0) {\n                    return 0x4822c0;\n                }\n                if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                    if ((uVar3 >> 7 & 1) != 0) {\n                        unaff_RBX = *unaff_RBX;\n                    }\n                    if (unaff_RBX != NULL) {\n                        unaff_RBX = *unaff_RBX;\n                    }\n                    return unaff_RBX;\n                }\n            }\n            else {\n                if (arg1 != 0x16) {\n                    if (arg1 == 0x17) {\n                        return *unaff_RBX;\n                    }\n                    if (arg1 == 0x1a) goto code_r0x00481b86;\n                    goto code_r0x00481bc9;\n                }\n                if (in_RAX[1] != 0) goto code_r0x00481b86;\n                *(*0x20 + -0x18) = *unaff_RBX;\n                *(*0x20 + -0x30) = 0x481b5f;\n                cVar1 = fcn.00458fc0();\n                if (cVar1 != '\\0') {\n                    return *(*0x20 + -0x18);\n                }\ncode_r0x00481bff:\n                *(*0x20 + -0x30) = 0x481c12;\n                fcn.00432de0();\n            }\n            unaff_RBX = 0x4ca058;\n            *(*0x20 + -0x30) = 0x481c25;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x481c3a;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1056
    },
    "00481c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00481c60(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t *piVar2;\n    ulong *puVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t iVar8;\n    int64_t unaff_RDI;\n    ulong *in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = arg1;\n            uVar4 = arg1;\n            arg1 = uVar4 & 0x1f;\n            if (arg1 == 0x11) {\n                if ((uVar4 >> 8 & 1) != 0) {\n                    arg1 = *(in_RAX + 0x40);\n                    in_RAX = *(in_RAX + 0x38);\n                    puVar3 = unaff_RBX;\ncode_r0x00481cc5:\n                    if (((-1 < unaff_RDI) && (unaff_RDI <= unaff_RSI)) && (unaff_RSI <= arg1)) {\n                        *(*0x20 + -0x28) = in_RAX;\n                        *(*0x20 + -0x20) = puVar3;\n                        *(*0x20 + -0x38) = arg1;\n                        *(*0x20 + -0x50) = 0x481d05;\n                        piVar1 = fcn.0040c6e0();\n                        *piVar1 = 0;\n                        iVar6 = *(*0x20 + 0x20);\n                        piVar1[1] = *(*0x20 + 0x28) - iVar6;\n                        iVar5 = *(*0x20 + -0x38) - iVar6;\n                        piVar1[2] = iVar5;\n                        if (iVar5 < 1) {\n                            if (*0x5985b0 == 0) {\n                                *piVar1 = *(*0x20 + -0x20);\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x481d7e;\n                                fcn.0045e0a0(iVar5, *(*0x20 + -0x20), in_R8, in_R9);\n                            }\n                            iVar8 = *(*0x20 + -0x28);\n                        }\n                        else {\n                            iVar8 = *(*0x20 + -0x28);\n                            iVar6 = iVar6 * **(iVar8 + 0x30) + *(*0x20 + -0x20);\n                            if (*0x5985b0 == 0) {\n                                *piVar1 = iVar6;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x481d5c;\n                                fcn.0045e0a0(iVar5, iVar6, *(*0x20 + -0x20), in_R9);\n                            }\n                        }\n                        return iVar8;\n                    }\n                    goto code_r0x00481e94;\n                }\n            }\n            else {\n                if (arg1 == 0x17) {\n                    puVar3 = *unaff_RBX;\n                    arg1 = unaff_RBX[2];\n                    in_R8 = puVar3;\n                    goto code_r0x00481cc5;\n                }\n                if (arg1 == 0x18) {\n                    if (((-1 < unaff_RDI) && (unaff_RDI <= unaff_RSI)) && (unaff_RSI <= unaff_RBX[1])) {\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x18) = in_RAX;\n                        *(*0x20 + -0x50) = 0x481df0;\n                        piVar2 = fcn.0040c6e0();\n                        iVar6 = *(*0x20 + 0x20);\n                        piVar1 = *(*0x20 + -0x10) + 1;\n                        if (*piVar1 != iVar6 && iVar6 <= *piVar1) {\n                            iVar5 = **(*0x20 + -0x10);\n                            piVar2[1] = *(*0x20 + 0x28) - iVar6;\n                            iVar5 = iVar5 + iVar6;\n                            if (*0x5985b0 == 0) {\n                                *piVar2 = iVar5;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x481e2f;\n                                fcn.0045e0a0(iVar6, iVar5, in_R8, in_R9);\n                            }\n                        }\n                        return *(*0x20 + -0x18);\n                    }\n                    *(*0x20 + -0x50) = 0x481e59;\n                    fcn.00432de0();\n                }\n                *(*0x20 + -0x30) = arg1;\n                *(*0x20 + -0x50) = 0x481e6a;\n                puVar3 = fcn.0040c6e0();\n                puVar3[1] = 0x13;\n                *puVar3 = 0x4ab082;\n                arg1 = *(*0x20 + -0x30);\n                puVar3[2] = arg1;\n                *(*0x20 + -0x50) = 0x481e94;\n                fcn.00432de0();\ncode_r0x00481e94:\n                *(*0x20 + -0x50) = 0x481ea7;\n                fcn.00432de0();\n            }\n            unaff_RBX = 0x4ca148;\n            *(*0x20 + -0x50) = 0x481eba;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + -8) = 0x481ed9;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1680
    },
    "00482ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00482ee0(int64_t arg1)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    uint64_t arg1_00;\n    ulong uVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint64_t arg1_01;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t arg2;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t in_R8;\n    int64_t arg3;\n    int64_t in_R9;\n    int64_t arg4;\n    int64_t unaff_R14;\n    int64_t *piStack176;\n    int64_t iStack168;\n    ulong uStack160;\n    int64_t iStack152;\n    ulong uStack144;\n    uint64_t uStack136;\n    int64_t iStack112;\n    \n    while (&piStack176 < *(unaff_R14 + 0x10) || &piStack176 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uStack144 = in_RAX;\n    uStack136 = unaff_RBX;\n    if ((arg1 == 0) || ((arg1 >> 9 & 1) != 0)) {\n        iVar6 = fcn.00482060(arg1);\n    }\n    else {\n        iVar6 = 0x4cb460;\n    }\n    iVar6 = (**(iVar6 + 0x98))();\n    if (iVar6 != 0x15) {\n        return NULL;\n    }\n    uVar3 = arg1 & 0x1f;\n    if (uVar3 == 0x17) {\n        arg1_00 = *(uStack136 + 8);\n    }\n    else {\n        arg1_00 = fcn.00481340(arg1);\n    }\n    iStack152 = fcn.00445720(arg1_00);\n    uVar2 = fcn.00445720(arg1_00);\n    if (uVar3 != 0x15) {\n        uStack160 = uVar2;\n        fcn.00481780();\n    }\n    iVar6 = fcn.0045e6c6();\n    noname_1 = 0;\n    arg2 = 0;\n    arg1_01 = arg1_00;\n    iStack168 = iStack152;\n    iStack112 = arg1;\n    while (uVar4 = arg1_00,  uVar7 = noname_1,  cVar1 = fcn.00481680(arg1_00, noname_1, in_R8, in_R9),  cVar1 != '\\0') {\n        uVar2 = fcn.00481500();\n        arg2 = arg2 + 1;\n        uVar7 = arg1_01;\n        if (arg1_01 < arg2) {\n            uStack144 = uVar2;\n            uStack136 = arg1_01;\n            iStack168 = fcn.00445800(arg1_01);\n            uVar2 = uStack144;\n            uVar7 = uStack136;\n        }\n        arg3 = arg2 * 3;\n        *(iStack168 + -8 + arg2 * 0x18) = uVar4;\n        iVar5 = iStack168 + arg2 * 0x18 + -0x18;\n        arg4 = iStack168 + arg2 * 0x18 + -0x10;\n        if (*0x5985b0 == 0) {\n            *(iStack168 + -0x18 + arg2 * 0x18) = uVar2;\n            *(iStack168 + -0x10 + arg2 * 0x18) = uVar7;\n        }\n        else {\n            uVar4 = arg2;\n            fcn.0045df80(iVar5, arg2, arg3, arg4);\n            fcn.0045e0c0(iVar5, uVar4, arg3, arg4);\n        }\n        uVar2 = fcn.004815c0();\n        noname_1 = noname_1 + 1;\n        if (arg1_00 < noname_1) {\n            uStack144 = uVar2;\n            uStack136 = uVar7;\n            iVar6 = fcn.00445800(arg1_00);\n            uVar2 = uStack144;\n            uVar7 = uStack136;\n        }\n        *(iVar6 + -8 + noname_1 * 0x18) = iVar5;\n        iVar5 = iVar6 + noname_1 * 0x18 + -0x18;\n        in_R9 = iVar6 + noname_1 * 0x18 + -0x10;\n        if (*0x5985b0 == 0) {\n            *(iVar6 + -0x18 + noname_1 * 0x18) = uVar2;\n            *(iVar6 + -0x10 + noname_1 * 0x18) = uVar7;\n            in_R8 = noname_1 * 3;\n        }\n        else {\n            fcn.0045df80(iVar5, noname_1, iVar6, in_R9);\n            fcn.0045e0c0(iVar5, noname_1, iVar6, in_R9);\n            in_R8 = iVar6;\n        }\n    }\n    piStack176 = fcn.0040c6e0();\n    piStack176[1] = arg2;\n    piStack176[2] = arg1_01;\n    if (*0x5985b0 == 0) {\n        *piStack176 = iStack168;\n    }\n    else {\n        piStack176 = fcn.0045e080(iStack168, uVar7, in_R8, in_R9);\n    }\n    piStack176[4] = noname_1;\n    piStack176[5] = arg1_00;\n    if (*0x5985b0 == 0) {\n        piStack176[3] = iVar6;\n    }\n    else {\n        piStack176 = fcn.0045e080(iVar6, uVar7, in_R8, in_R9);\n    }\n    fcn.0046e760();\n    return piStack176;\n}\n",
        "token_count": 1412
    },
    "00484340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00484340(ulong arg1, ulong noname_1, uint64_t arg3)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    uint32_t uVar2;\n    ulong *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong *unaff_RSI;\n    uint64_t unaff_RDI;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    uint64_t uVar3;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            uVar2 = arg1;\n            uVar3 = uVar2 & 0x1f;\n            *(*0x20 + -0x10) = uVar3;\n            uVar5 = arg3;\n            if (uVar3 < 0x15) {\n                unaff_RDI = uVar3 - 0x12;\n                if (unaff_RDI < 2) goto code_r0x004843b2;\n                if (uVar3 == 0x14) {\ncode_r0x0048439f:\n                    unaff_RBX = *unaff_RBX;\n                    goto code_r0x004843c7;\n                }\n            }\n            else {\n                if (0x16 < uVar3) {\n                    if (uVar3 == 0x17) goto code_r0x0048439f;\n                    if (uVar3 != 0x1a) goto code_r0x00484548;\n                }\ncode_r0x004843b2:\n                if ((uVar2 >> 9 & 1) == 0) {\n                    if ((uVar2 >> 7 & 1) != 0) {\n                        unaff_RBX = *unaff_RBX;\n                    }\ncode_r0x004843c7:\n                    if (unaff_RBX != NULL) goto code_r0x004843d0;\n                    arg3 = uVar5 & 0x1f;\n                    *(*0x20 + -0x10) = arg3;\n                    if (0x14 < arg3) {\n                        if (0x16 < arg3) {\n                            if (arg3 == 0x17) goto code_r0x0048448c;\n                            if (arg3 != 0x1a) goto code_r0x004844dc;\n                        }\ncode_r0x0048449b:\n                        if ((uVar5 >> 9 & 1) != 0) {\n                            return 0xffffffffffffffff;\n                        }\n                        if ((uVar5 >> 7 & 1) != 0) {\n                            unaff_RSI = *unaff_RSI;\n                        }\ncode_r0x004844b1:\n                        if (unaff_RSI != NULL) {\n                            return 0xffffffffffffffff;\n                        }\n                        return 0;\n                    }\n                    if (arg3 - 0x12 < 2) goto code_r0x0048449b;\n                    if (arg3 == 0x14) {\ncode_r0x0048448c:\n                        unaff_RSI = *unaff_RSI;\n                        goto code_r0x004844b1;\n                    }\ncode_r0x004844dc:\n                    *(*0x20 + -0x28) = 0x4844e8;\n                    puVar1 = fcn.0040c6e0();\n                    puVar1[1] = 0x13;\n                    *puVar1 = 0x4ab06f;\n                    puVar1[2] = *(*0x20 + -0x10);\n                    *(*0x20 + -0x28) = 0x484512;\n                    fcn.00432de0();\n                }\n                else {\ncode_r0x004843d0:\n                    arg3 = uVar5 & 0x1f;\n                    *(*0x20 + -0x10) = arg3;\n                    if (arg3 < 0x15) {\n                        if (arg3 - 0x12 < 2) goto code_r0x0048441f;\n                        if (arg3 == 0x14) {\ncode_r0x0048440c:\n                            unaff_RSI = *unaff_RSI;\n                            goto code_r0x00484434;\n                        }\n                    }\n                    else {\n                        if (arg3 < 0x17) {\ncode_r0x0048441f:\n                            if ((uVar5 >> 9 & 1) == 0) {\n                                if ((uVar5 >> 7 & 1) != 0) {\n                                    unaff_RSI = *unaff_RSI;\n                                }\ncode_r0x00484434:\n                                if (unaff_RSI == NULL) {\n                                    return 1;\n                                }\n                            }\n                            return 0;\n                        }\n                        if (arg3 == 0x17) goto code_r0x0048440c;\n                        if (arg3 == 0x1a) goto code_r0x0048441f;\n                    }\n                }\n                *(*0x20 + -0x28) = 0x48451e;\n                puVar1 = fcn.0040c6e0();\n                puVar1[1] = 0x13;\n                *puVar1 = 0x4ab06f;\n                puVar1[2] = *(*0x20 + -0x10);\n                *(*0x20 + -0x28) = 0x484548;\n                fcn.00432de0();\n            }\ncode_r0x00484548:\n            *(*0x20 + -0x28) = 0x484554;\n            unaff_RBX = fcn.0040c6e0();\n            unaff_RBX[1] = 0x13;\n            *unaff_RBX = 0x4ab06f;\n            arg1 = *(*0x20 + -0x10);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x28) = 0x48457e;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x4845a5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1699
    },
    "004845e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004845e0(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t **in_RAX;\n    int64_t iVar3;\n    uint64_t arg1;\n    ulong arg2;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t arg2_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 1) {\n                return;\n            }\n            piVar1 = *in_RAX;\n            uVar6 = piVar1[1];\n            arg2_00 = piVar1[2];\n            iVar3 = *piVar1;\n            arg1 = unaff_RBX + uVar6;\n            if (arg2_00 < arg1) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x28) = arg1;\n                *(*0x20 + -0x20) = uVar6;\n                iVar3 = unaff_RBX + arg2_00 * 2;\n                *(*0x20 + -0x18) = iVar3;\n                *(*0x20 + -0x48) = 0x484655;\n                iVar3 = fcn.00445720(iVar3);\n                in_RAX = *(*0x20 + 8);\n                iVar2 = (*in_RAX)[1];\n                iVar5 = *(*0x20 + -0x18);\n                if (iVar2 < *(*0x20 + -0x18)) {\n                    iVar5 = iVar2;\n                }\n                if (iVar3 != **in_RAX) {\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x48) = 0x484685;\n                    fcn.0045eda0(iVar5);\n                    iVar3 = *(*0x20 + -0x10);\n                    in_RAX = *(*0x20 + 8);\n                }\n                arg1 = *(*0x20 + -0x28);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + -0x20);\n                arg2_00 = *(*0x20 + -0x18);\n            }\n            if (*(in_RAX + 0xe) == '\\0') {\n                arg2 = 0x20;\n            }\n            else {\n                arg2 = 0x30;\n            }\n            if (arg1 <= arg2_00) {\n                if (uVar6 <= arg1) {\n                    iVar2 = iVar3 + (uVar6 & uVar6 - arg2_00 >> 0x3f);\n                    for (iVar5 = 0; iVar5 < unaff_RBX; iVar5 = iVar5 + 1) {\n                        *(iVar2 + iVar5) = arg2;\n                    }\n                    piVar1 = *in_RAX;\n                    piVar1[1] = arg1;\n                    piVar1[2] = arg2_00;\n                    if (*0x5985b0 == 0) {\n                        *piVar1 = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x484713;\n                        fcn.0045e0e0(arg1, arg2, iVar2, arg2_00);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x484725;\n                fcn.0045e4e0(arg1);\n            }\n            *(*0x20 + -0x48) = 0x48472d;\n            in_RAX = fcn.0045e4a0(arg1, arg2_00);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x48473d;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1053
    },
    "00484760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00484760(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RDI;\n    ulong in_R8;\n    ulong *arg3;\n    int64_t iVar5;\n    ulong in_R9;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((*(in_RAX + 1) != '\\0') && (in_RAX[3] != 0)) {\n        fcn.0046e420(unaff_RDI);\n        if (*(in_RAX + 10) == '\\0') {\n            fcn.004845e0();\n            puVar2 = *in_RAX;\n            uVar1 = arg1 + puVar2[1];\n            uVar4 = puVar2[2];\n            uVar3 = *puVar2;\n            if (uVar4 < uVar1) {\n                uVar3 = fcn.00445800(uVar4);\n            }\n            fcn.0045eda0(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar4;\n            if (*0x5985b0 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045df80(arg1, uVar4, in_R8, in_R9);\n            }\n        }\n        else {\n            puVar2 = *in_RAX;\n            iVar5 = puVar2[1];\n            uVar1 = arg1 + iVar5;\n            uVar4 = puVar2[2];\n            uVar3 = *puVar2;\n            arg3 = puVar2;\n            if (uVar4 < uVar1) {\n                uVar3 = fcn.00445800(uVar4);\n            }\n            fcn.0045eda0(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar4;\n            if (*0x5985b0 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045e080(uVar3, uVar4, arg3, iVar5);\n            }\n            fcn.004845e0();\n        }\n        return;\n    }\n    puVar2 = *in_RAX;\n    iVar5 = puVar2[1];\n    uVar1 = arg1 + iVar5;\n    uVar4 = puVar2[2];\n    uVar3 = *puVar2;\n    if (uVar4 < uVar1) {\n        uVar3 = fcn.00445800(uVar4);\n    }\n    arg4 = uVar1;\n    fcn.0045eda0(arg1);\n    puVar2[1] = uVar1;\n    puVar2[2] = uVar4;\n    if (*0x5985b0 == 0) {\n        *puVar2 = uVar3;\n    }\n    else {\n        fcn.0045df80(arg1, uVar4, iVar5, arg4);\n    }\n    return;\n}\n",
        "token_count": 756
    },
    "00484a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00484a20(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong in_R8;\n    int64_t iVar5;\n    ulong in_R9;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((*(in_RAX + 1) != '\\0') && (in_RAX[3] != 0)) {\n        fcn.0046e580();\n        if (*(in_RAX + 10) == '\\0') {\n            fcn.004845e0();\n            puVar2 = *in_RAX;\n            uVar1 = arg1 + puVar2[1];\n            uVar4 = puVar2[2];\n            uVar3 = *puVar2;\n            if (uVar4 < uVar1) {\n                uVar3 = fcn.00445800(uVar4);\n            }\n            fcn.0045eda0(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar4;\n            if (*0x5985b0 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045df80(arg1, uVar4, in_R8, in_R9);\n            }\n        }\n        else {\n            puVar2 = *in_RAX;\n            iVar5 = puVar2[1];\n            uVar1 = arg1 + iVar5;\n            uVar4 = puVar2[2];\n            uVar3 = *puVar2;\n            if (uVar4 < uVar1) {\n                uVar3 = fcn.00445800(uVar4);\n            }\n            uVar6 = uVar1;\n            fcn.0045eda0(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar4;\n            if (*0x5985b0 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045e080(uVar3, uVar4, iVar5, uVar6);\n            }\n            fcn.004845e0();\n        }\n        return;\n    }\n    puVar2 = *in_RAX;\n    iVar5 = puVar2[1];\n    uVar1 = arg1 + iVar5;\n    uVar4 = puVar2[2];\n    uVar3 = *puVar2;\n    if (uVar4 < uVar1) {\n        uVar3 = fcn.00445800(uVar4);\n    }\n    uVar6 = uVar1;\n    fcn.0045eda0(arg1);\n    puVar2[1] = uVar1;\n    puVar2[2] = uVar4;\n    if (*0x5985b0 == 0) {\n        *puVar2 = uVar3;\n    }\n    else {\n        fcn.0045df80(arg1, uVar4, iVar5, uVar6);\n    }\n    return;\n}\n",
        "token_count": 745
    },
    "00484d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00484d60(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    int32_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar7 = in_RAX + 0x28;\n            if (*(in_RAX + 9) == '\\0') {\n                arg1_00 = 0x44;\n                uVar4 = 4;\n            }\n            else {\n                uVar4 = *(in_RAX + 0x20);\n                if (uVar4 < 5) {\n                    arg1_00 = 0x44;\n                    uVar4 = 4;\n                }\n                else {\n                    iVar1 = uVar4 + 9;\n                    if (iVar1 < 0x45) {\n                        arg1_00 = 0x44;\n                    }\n                    else {\n                        *(*0x20 + -0x18) = uVar4;\n                        *(*0x20 + -0x30) = iVar1;\n                        *(*0x20 + -0x60) = 0x484dc9;\n                        iVar7 = fcn.00445720(iVar1);\n                        uVar4 = *(*0x20 + -0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        arg1_00 = *(*0x20 + -0x30);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                }\n            }\n            *(*0x20 + -0x20) = arg1_00;\n            *(*0x20 + -0x10) = iVar7;\n            *(*0x20 + -0x28) = uVar4;\n            if (*(in_RAX + 0xc) == '\\0') {\n                cVar2 = '\\0';\n            }\n            else if (unaff_RBX < 0x110000) {\n                *(*0x20 + -0x60) = 0x484e25;\n                cVar2 = fcn.00477a60();\n                uVar4 = *(*0x20 + -0x28);\n                iVar7 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + 0x10);\n                arg1_00 = *(*0x20 + -0x20);\n                in_RAX = *(*0x20 + 8);\n            }\n            else {\n                cVar2 = '\\0';\n            }\n            arg1 = arg1_00;\n            if (cVar2 == '\\0') {\ncode_r0x00484f74:\n                for (; 0xf < unaff_RBX; unaff_RBX = unaff_RBX >> 4) {\n                    uVar8 = arg1_00 - 1;\n                    uVar3 = unaff_RBX & 0xf;\n                    if (arg1 <= uVar8) goto code_r0x00485070;\n                    *((arg1_00 - 1) + iVar7) = *(uVar3 + 0x4aa3d9);\n                    uVar4 = uVar4 - 1;\n                    arg1_00 = uVar8;\n                }\n                uVar8 = arg1_00 - 1;\n                if (uVar8 < arg1) {\n                    *((arg1_00 - 1) + iVar7) = *(unaff_RBX + 0x4aa3d9);\n                    arg1_00 = uVar4;\n                    while (arg1_00 = arg1_00 - 1,  0 < arg1_00) {\n                        if (arg1 <= uVar8 - 1) goto code_r0x00485055;\n                        *((uVar8 - 1) + iVar7) = 0x30;\n                        uVar8 = uVar8 - 1;\n                    }\n                    arg1_00 = uVar8 - 1;\n                    if (arg1_00 < arg1) {\n                        *((uVar8 - 1) + iVar7) = 0x2b;\n                        arg1_00 = uVar8 - 2;\n                        if (arg1_00 < arg1) {\n                            *((uVar8 - 2) + iVar7) = 0x55;\n                            *(*0x20 + -0x31) = *(in_RAX + 0xe);\n                            *(in_RAX + 0xe) = 0;\n                            *(*0x20 + -0x60) = 0x485028;\n                            fcn.00484760((arg1 - uVar8) + 2);\n                            *(*(*0x20 + 8) + 0xe) = *(*0x20 + -0x31);\n                            return;\n                        }\n                        *(*0x20 + -0x60) = 0x48504a;\n                        fcn.0045e420(arg1);\n                    }\n                    *(*0x20 + -0x60) = 0x485055;\n                    fcn.0045e420(arg1);\ncode_r0x00485055:\n                    *(*0x20 + -0x60) = 0x485065;\n                    fcn.0045e420(arg1);\n                }\n                *(*0x20 + -0x60) = 0x485070;\n                fcn.0045e420(arg1);\n                uVar3 = unaff_RBX;\ncode_r0x00485070:\n                *(*0x20 + -0x60) = 0x48507b;\n                fcn.0045e420(arg1);\ncode_r0x0048507b:\n                *(*0x20 + -0x60) = 0x485085;\n                fcn.0045e420(arg1);\n                uVar4 = arg1_00;\ncode_r0x00485085:\n                *(*0x20 + -0x60) = 0x48508d;\n                fcn.0045e420(arg1);\n                unaff_RBX = uVar3;\n                arg1_00 = uVar8;\ncode_r0x0048508d:\n                *(*0x20 + -0x60) = 0x485098;\n                fcn.0045e4e0(arg1_00);\n                arg1_00 = uVar4;\n            }\n            else if (arg1_00 - 1 < arg1_00) {\n                *((arg1_00 - 1) + iVar7) = 0x27;\n                iVar5 = unaff_RBX;\n                if (iVar5 < 0) {\n                    iVar7 = -1;\n                }\n                else if (iVar5 < 0x80) {\n                    iVar7 = 1;\n                }\n                else if (iVar5 < 0x800) {\n                    iVar7 = 2;\n                }\n                else if (iVar5 - 0xd800U < 0x800) {\n                    iVar7 = -1;\n                }\n                else if (iVar5 < 0x10000) {\n                    iVar7 = 3;\n                }\n                else if (iVar5 < 0x110000) {\n                    iVar7 = 4;\n                }\n                else {\n                    iVar7 = -1;\n                }\n                uVar4 = arg1_00 - iVar7;\n                if (uVar4 - 1 <= arg1_00) {\n                    *(*0x20 + -0x18) = uVar4;\n                    uVar3 = (arg1_00 - uVar4) + 1;\n                    *(*0x20 + -0x60) = 0x484f16;\n                    uVar8 = arg1_00;\n                    fcn.0046e140();\n                    iVar1 = *(*0x20 + -0x18);\n                    arg1 = *(*0x20 + -0x20);\n                    if (iVar1 - 2U < arg1) {\n                        iVar7 = *(*0x20 + -0x10);\n                        *(iVar1 + -2 + iVar7) = 0x27;\n                        arg1_00 = iVar1 - 3;\n                        if (arg1_00 < arg1) {\n                            *(iVar1 + -3 + iVar7) = 0x20;\n                            in_RAX = *(*0x20 + 8);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            uVar4 = *(*0x20 + -0x28);\n                            goto code_r0x00484f74;\n                        }\n                        goto code_r0x0048507b;\n                    }\n                    goto code_r0x00485085;\n                }\n                goto code_r0x0048508d;\n            }\n            *(*0x20 + -0x60) = 0x4850a5;\n            in_RAX = fcn.0045e420(arg1_00);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x4850b5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2206
    },
    "004850e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004850e0(uint64_t arg1, uint64_t noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uchar uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint uVar7;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t arg1_00;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t unaff_R12;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    \ncode_r0x004850e0:\n    uVar7 = unaff_RSI;\n    puVar6 = *0x20;\n    arg1_00 = unaff_R12;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x28) = arg3;\n        if (unaff_RDI == '\\0') {\n            noname_1 = 0;\n        }\n        else {\n            noname_1 = noname_1 & 0xffffffffffffff00 | unaff_RBX < 0;\n        }\n        if (noname_1 != '\\0') {\n            unaff_RBX = -unaff_RBX;\n        }\n        *(*0x20 + -0x21) = noname_1;\n        *(*0x20 + 8) = in_RAX;\n        iVar3 = in_RAX + 0x28;\n        if ((*(in_RAX + 8) == '\\0') && (*(in_RAX + 9) == '\\0')) {\n            arg1_00 = 0x44;\n        }\n        else {\n            iVar9 = *(in_RAX + 0x18) + *(in_RAX + 0x20) + 3;\n            if (iVar9 < 0x45) {\n                arg1_00 = 0x44;\n            }\n            else {\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x24) = uVar7;\n                *(*0x20 + -0x20) = iVar9;\n                *(*0x20 + 0x30) = arg4;\n                *(*0x20 + 0x28) = arg3;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x48517c;\n                iVar3 = fcn.00445720(iVar9);\n                arg1 = *(*0x20 + 0x18);\n                noname_1 = *(*0x20 + -0x21);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RSI = *(*0x20 + 0x24);\n                arg3 = *(*0x20 + 0x28);\n                arg4 = *(*0x20 + 0x30);\n                arg1_00 = *(*0x20 + -0x20);\n                in_RAX = *(*0x20 + 8);\n            }\n        }\n        if (*(in_RAX + 9) == '\\0') {\n            if ((*(in_RAX + 0xe) == '\\0') || (*(in_RAX + 8) == '\\0')) {\n                iVar9 = 0;\n            }\n            else {\n                iVar9 = *(in_RAX + 0x18);\n                if (((noname_1 != '\\0') || (*(in_RAX + 0xb) != '\\0')) || (*(in_RAX + 0xd) != '\\0')) {\n                    iVar9 = iVar9 + -1;\n                }\n            }\n        }\n        else {\n            iVar9 = *(in_RAX + 0x20);\n            if ((iVar9 == 0) && (unaff_RBX == 0)) {\n                *(*0x20 + -0x22) = *(in_RAX + 0xe);\n                *(in_RAX + 0xe) = 0;\n                *(*0x20 + -0x50) = 0x4851da;\n                fcn.004845e0();\n                *(*(*0x20 + 8) + 0xe) = *(*0x20 + -0x22);\n                return;\n            }\n        }\n        unaff_RDI = arg1_00;\n        if (8 < arg1) {\n            uVar4 = noname_1;\n            if (arg1 == 10) goto code_r0x0048556a;\n            if (arg1 != 0x10) goto code_r0x0048553c;\n            do {\n                if (unaff_RBX < 0x10) goto code_r0x004852a0;\n                uVar4 = unaff_RBX & 0xf;\n                unaff_R12 = arg1_00;\n                if (arg4 <= uVar4) goto code_r0x00485531;\n                uVar1 = *(arg3 + uVar4);\n                noname_1 = uVar1;\n                if (arg1_00 <= unaff_RDI - 1) goto code_r0x00485526;\n                *((unaff_RDI - 1) + iVar3) = uVar1;\n                unaff_RBX = unaff_RBX >> 4;\n                noname_1 = *(*0x20 + -0x21);\n                unaff_RDI = unaff_RDI - 1;\n                unaff_R13 = unaff_RBX;\n            } while( true );\n        }\n        if (arg1 != 2) {\n            if (arg1 != 8) goto code_r0x0048553c;\n            goto code_r0x004855c5;\n        }\n        do {\n            uVar7 = unaff_RSI;\n            if (unaff_RBX < 2) {\ncode_r0x004852a0:\n                do {\n                    uVar4 = arg1_00;\n                    if (unaff_RBX < arg4) {\n                        unaff_R13 = unaff_RDI - 1;\n                        if (unaff_R13 < arg1_00) {\n                            *((unaff_RDI - 1) + iVar3) = *(unaff_RBX + arg3);\n                            for (; (uVar4 = arg1_00,  0 < unaff_R13 &&\n                                   (uVar4 = arg1_00 - unaff_R13,  arg1_00 - unaff_R13 < iVar9));\n                                unaff_R13 = unaff_R13 - 1) {\n                                *((unaff_R13 - 1) + iVar3) = 0x30;\n                            }\n                            uVar8 = unaff_R13;\n                            if (*(in_RAX + 0xc) == '\\0') goto code_r0x004853ab;\n                            if (arg1 == 2) {\n                                arg3 = unaff_R13 - 1;\n                                if (arg3 < arg1_00) {\n                                    *((unaff_R13 - 1) + iVar3) = 0x62;\n                                    arg3 = unaff_R13 - 2;\n                                    if (arg3 < arg1_00) {\n                                        *((unaff_R13 - 2) + iVar3) = 0x30;\n                                        uVar8 = arg3;\n                                        goto code_r0x004853ab;\n                                    }\n                                    goto code_r0x004854f5;\n                                }\n                            }\n                            else {\n                                if (arg1 == 8) {\n                                    if (unaff_R13 < arg1_00) {\n                                        if (*(iVar3 + unaff_R13) == '0') {\ncode_r0x004853ab:\n                                            uVar5 = uVar8;\n                                            if (unaff_RSI == 0x4f) {\n                                                if (uVar8 - 1 < arg1_00) {\n                                                    *((uVar8 - 1) + iVar3) = 0x6f;\n                                                    if (uVar8 - 2 < arg1_00) {\n                                                        *((uVar8 - 2) + iVar3) = 0x30;\n                                                        uVar5 = uVar8 - 2;\n                                                        goto code_r0x004853e0;\n                                                    }\n                                                    goto code_r0x004854a6;\n                                                }\n                                            }\n                                            else {\ncode_r0x004853e0:\n                                                if (noname_1 == '\\0') {\n                                                    if (*(in_RAX + 0xb) == '\\0') {\n                                                        if (*(in_RAX + 0xd) == '\\0') {\ncode_r0x00485430:\n                                                            uVar2 = *(in_RAX + 0xe);\n                                                            *(in_RAX + 0xe) = 0;\n                                                            if (uVar5 <= arg1_00) {\n                                                                *(*0x20 + -0x23) = uVar2;\n                                                                *(*0x20 + -0x50) = 0x48545e;\n                                                                fcn.00484760(arg1_00 - uVar5);\n                                                                *(*(*0x20 + 8) + 0xe) = *(*0x20 + -0x23);\n                                                                return;\n                                                            }\n                                                            *(*0x20 + -0x50) = 0x485485;\n                                                            fcn.0045e4e0(arg1_00);\n                                                            noname_1 = uVar5;\n                                                        }\n                                                        else {\n                                                            noname_1 = uVar5 - 1;\n                                                            if (noname_1 < arg1_00) {\n                                                                *((uVar5 - 1) + iVar3) = 0x20;\n                                                                uVar5 = noname_1;\n                                                                goto code_r0x00485430;\n                                                            }\n                                                        }\n                                                        *(*0x20 + -0x50) = 0x485490;\n                                                        fcn.0045e420(arg1_00);\n                                                    }\n                                                    else {\n                                                        noname_1 = uVar5 - 1;\n                                                        if (noname_1 < arg1_00) {\n                                                            *((uVar5 - 1) + iVar3) = 0x2b;\n                                                            uVar5 = noname_1;\n                                                            goto code_r0x00485430;\n                                                        }\n                                                    }\n                                                    *(*0x20 + -0x50) = 0x48549b;\n                                                    fcn.0045e420(arg1_00);\n                                                }\n                                                else {\n                                                    noname_1 = uVar5 - 1;\n                                                    if (noname_1 < arg1_00) {\n                                                        *((uVar5 - 1) + iVar3) = 0x2d;\n                                                        uVar5 = noname_1;\n                                                        goto code_r0x00485430;\n                                                    }\n                                                }\n                                                *(*0x20 + -0x50) = 0x4854a6;\n                                                fcn.0045e420(arg1_00);\ncode_r0x004854a6:\n                                                *(*0x20 + -0x50) = 0x4854b1;\n                                                fcn.0045e420(arg1_00);\n                                            }\n                                            *(*0x20 + -0x50) = 0x4854bc;\n                                            fcn.0045e420(arg1_00);\ncode_r0x004854bc:\n                                            *(*0x20 + -0x50) = 0x4854c7;\n                                            fcn.0045e420(arg1_00);\ncode_r0x004854c7:\n                                            *(*0x20 + -0x50) = 0x4854d2;\n                                            fcn.0045e420(arg1_00);\n                                            arg3 = uVar8;\n                                            goto code_r0x004854d2;\n                                        }\n                                        arg3 = unaff_R13 - 1;\n                                        if (arg3 < arg1_00) {\n                                            *((unaff_R13 - 1) + iVar3) = 0x30;\n                                            uVar8 = arg3;\n                                            goto code_r0x004853ab;\n                                        }\n                                        goto code_r0x004854df;\n                                    }\n                                }\n                                else {\n                                    if (arg1 != 0x10) goto code_r0x004853ab;\n                                    if (0x10 < arg4) {\n                                        arg4 = unaff_R13 - 1;\n                                        uVar8 = *(arg3 + 0x10);\n                                        if (arg4 < arg1_00) {\n                                            *((unaff_R13 - 1) + iVar3) = *(arg3 + 0x10);\n                                            uVar8 = unaff_R13 - 2;\n                                            if (uVar8 < arg1_00) {\n                                                *((unaff_R13 - 2) + iVar3) = 0x30;\n                                                goto code_r0x004853ab;\n                                            }\n                                            goto code_r0x004854bc;\n                                        }\n                                        goto code_r0x004854c7;\n                                    }\ncode_r0x004854d2:\n                                    *(*0x20 + -0x50) = 0x4854df;\n                                    fcn.0045e420(arg4);\ncode_r0x004854df:\n                                    *(*0x20 + -0x50) = 0x4854ea;\n                                    fcn.0045e420(arg1_00);\n                                }\n                                *(*0x20 + -0x50) = 0x4854f5;\n                                fcn.0045e420(arg1_00);\ncode_r0x004854f5:\n                                *(*0x20 + -0x50) = 0x485505;\n                                fcn.0045e420(arg1_00);\n                            }\n                            *(*0x20 + -0x50) = 0x485510;\n                            fcn.0045e420(arg1_00);\n                            unaff_RDI = arg1_00;\n                        }\n                        *(*0x20 + -0x50) = 0x48551b;\n                        fcn.0045e420(uVar4);\n                    }\n                    unaff_RBX = unaff_R13;\n                    *(*0x20 + -0x50) = 0x485526;\n                    fcn.0045e440(arg4);\n                    arg1_00 = uVar4;\ncode_r0x00485526:\n                    *(*0x20 + -0x50) = 0x485531;\n                    fcn.0045e420(arg1_00);\n                    unaff_R12 = arg1_00;\ncode_r0x00485531:\n                    arg1 = arg4;\n                    *(*0x20 + -0x50) = 0x48553c;\n                    arg4 = arg1;\n                    fcn.0045e440(arg1);\n                    arg1_00 = unaff_RDI;\n                    unaff_R13 = unaff_RBX;\ncode_r0x0048553c:\n                    unaff_RBX = 0x4ca008;\n                    *(*0x20 + -0x50) = 0x48554f;\n                    uVar4 = fcn.00432de0();\n                    unaff_RDI = arg1_00;\n                    arg1_00 = unaff_R12;\n                    do {\n                        *((unaff_RDI - 1) + iVar3) = unaff_RBX + '0';\n                        unaff_RSI = uVar4 & 0xffffffff;\n                        in_RAX = *(*0x20 + 8);\n                        uVar4 = *(*0x20 + -0x21);\n                        unaff_RBX = noname_1;\n                        unaff_RDI = unaff_R13;\ncode_r0x0048556a:\n                        noname_1 = uVar4;\n                        if (unaff_RBX < 10) goto code_r0x004852a0;\n                        unaff_R13 = unaff_RDI - 1;\n                        noname_1 = unaff_RBX / 10;\n                        uVar4 = unaff_RSI & 0xffffffff;\n                        unaff_RSI = noname_1 * 10;\n                        unaff_RBX = unaff_RBX % 10;\n                    } while (unaff_R13 < arg1_00);\n                    *(*0x20 + -0x50) = 0x4855a5;\n                    arg1 = arg1_00;\n                    in_RAX = fcn.0045e420(arg1_00);\n                    while( true ) {\n                        *(*0x20 + -0x18) = unaff_R13;\n                        unaff_R13 = (unaff_RBX & 7) + 0x30;\n                        *((unaff_RDI - 1) + iVar3) = unaff_R13;\n                        unaff_RBX = unaff_RBX >> 3;\n                        unaff_RDI = *(*0x20 + -0x18);\ncode_r0x004855c5:\n                        if (unaff_RBX < 8) break;\n                        unaff_R13 = unaff_RDI - 1;\n                        if (arg1_00 <= unaff_R13) {\n                            *(*0x20 + -0x50) = 0x4855e5;\n                            arg1 = arg1_00;\n                            in_RAX = fcn.0045e420(arg1_00);\n                            goto code_r0x004855e5;\n                        }\n                    }\n                } while( true );\n            }\n            unaff_R13 = unaff_RDI - 1;\n            if (arg1_00 <= unaff_R13) goto code_r0x00485617;\ncode_r0x004855e5:\n            *(*0x20 + -0x18) = unaff_R13;\n            unaff_R13 = (unaff_RBX & 1) + 0x30;\n            *((unaff_RDI - 1) + iVar3) = unaff_R13;\n            unaff_RBX = unaff_RBX >> 1;\n            unaff_RDI = *(*0x20 + -0x18);\n        } while( true );\n    }\n    goto code_r0x00485626;\ncode_r0x00485617:\n    *(*0x20 + -0x50) = 0x485625;\n    arg1 = arg1_00;\n    in_RAX = fcn.0045e420(arg1_00);\ncode_r0x00485626:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    puVar6[0x20] = unaff_RDI;\n    *(puVar6 + 0x24) = uVar7;\n    *(puVar6 + 0x28) = arg3;\n    *(puVar6 + 0x30) = arg4;\n    *(puVar6 + -8) = 0x48564d;\n    fcn.0045bdc0();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = puVar6[0x20];\n    unaff_RSI = *(puVar6 + 0x24);\n    arg3 = *(puVar6 + 0x28);\n    arg4 = *(puVar6 + 0x30);\n    *0x20 = puVar6;\n    unaff_R12 = arg1_00;\n    goto code_r0x004850e0;\n}\n",
        "token_count": 4340
    },
    "00485680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00485680(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1_00;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t iVar3;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 9) == '\\0') {\n                return unaff_RBX;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            iVar3 = *(in_RAX + 0x20);\n            arg1_00 = 0;\n            while( true ) {\n                if (arg1 <= arg1_00) {\n                    return unaff_RBX;\n                }\n                iVar3 = iVar3 + -1;\n                if (iVar3 < 0) break;\n                if (arg1 <= arg1_00) goto code_r0x0048576d;\n                if (*(unaff_RBX + arg1_00) < 0x80) {\n                    iVar1 = 1;\n                }\n                else {\n                    *(*0x20 + -0x10) = arg1_00;\n                    *(*0x20 + -0x18) = iVar3;\n                    iVar1 = arg1 - arg1_00;\n                    *(*0x20 + -0x38) = 0x485729;\n                    fcn.0046ddc0(unaff_RDI - arg1_00);\n                    arg1_00 = *(*0x20 + -0x10);\n                    arg1 = *(*0x20 + 0x18);\n                    iVar3 = *(*0x20 + -0x18);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                arg1_00 = arg1_00 + iVar1;\n            }\n            if (arg1_00 <= unaff_RDI) {\n                return unaff_RBX;\n            }\n            *(*0x20 + -0x38) = 0x48576d;\n            fcn.0045e4a0(arg1_00, unaff_RDI);\n            arg1 = arg1_00;\ncode_r0x0048576d:\n            *(*0x20 + -0x38) = 0x485772;\n            in_RAX = fcn.0045e420(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x48578c;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 854
    },
    "004857c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004857c0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t arg2;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 9) == '\\0') {\ncode_r0x004857fa:\n                *(*0x20 + -0x38) = 0x4857ff;\n                fcn.00484a20(arg1);\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar3 = *(in_RAX + 0x20);\n            arg1_00 = 0;\n            arg2 = arg1;\n            do {\n                arg1 = arg2;\n                if (arg1 <= arg1_00) goto code_r0x004857fa;\n                if (*(unaff_RBX + arg1_00) < 0x80) {\n                    arg2 = arg1;\n                    uVar1 = arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(*0x20 + -0x10) = arg1_00;\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x38) = 0x48583b;\n                    fcn.004575e0(arg1_00);\n                    arg2 = *(*0x20 + 0x18);\n                    iVar3 = *(*0x20 + -0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar1 = *(*0x20 + -0x10);\n                    arg1_00 = arg1;\n                }\n                arg1 = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (-1 < iVar3);\n            if (arg1 <= arg2) goto code_r0x004857fa;\n            *(*0x20 + -0x38) = 0x485878;\n            in_RAX = fcn.0045e460(arg1, arg2);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x48588d;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 769
    },
    "00485940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00485940(int64_t *arg1, ulong noname_1, int64_t *arg3, int64_t arg4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t **in_RAX;\n    int64_t noname_0;\n    uint64_t arg1_00;\n    uchar uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t unaff_RDI;\n    uint8_t uVar5;\n    int64_t *piVar6;\n    int64_t *in_R10;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    int64_t *piVar8;\n    bool bVar9;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x38) = arg4;\n            piVar8 = arg1;\n            if (unaff_RDI != 0) {\n                piVar8 = unaff_RSI;\n            }\n            if ((*(in_RAX + 9) == '\\0') || (piVar6 = in_RAX[4],  piVar8 <= in_RAX[4])) {\n                piVar6 = piVar8;\n            }\n            arg3 = piVar6 << 1;\n            if (arg3 < 1) {\n                if (*(in_RAX + 1) != '\\0') {\n                    *(*0x20 + -0x78) = 0x485b25;\n                    fcn.004845e0();\n                }\n                return;\n            }\n            if (*(in_RAX + 0xd) == '\\0') {\n                if (*(in_RAX + 0xc) != '\\0') {\n                    arg3 = piVar6 * 2 + 2;\n                }\n            }\n            else {\n                if (*(in_RAX + 0xc) != '\\0') {\n                    arg3 = piVar6 << 2;\n                }\n                arg3 = (arg3 - 1U) + piVar6;\n            }\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = piVar6;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + -0x28) = arg3;\n            if (((*(in_RAX + 1) != '\\0') && (arg3 < in_RAX[3])) && (*(in_RAX + 10) == '\\0')) {\n                *(*0x20 + -0x78) = 0x485a30;\n                fcn.004845e0();\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + -0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + -0x28);\n                arg4 = *(*0x20 + 0x38);\n                in_R10 = *(*0x20 + 0x40);\n                piVar6 = *(*0x20 + -0x10);\n            }\n            piVar8 = *in_RAX;\n            arg1_00 = piVar8[2];\n            noname_0 = *piVar8;\n            uVar1 = piVar8[1];\n            uVar7 = uVar1;\n            if (*(in_RAX + 0xc) == '\\0') {\ncode_r0x00485b0d:\n                piVar8 = NULL;\n                while( true ) {\n                    if (piVar6 <= piVar8) {\n                        piVar8 = *in_RAX;\n                        piVar8[1] = uVar7;\n                        piVar8[2] = arg1_00;\n                        if (*0x5985b0 == 0) {\n                            *piVar8 = noname_0;\n                        }\n                        else {\n                            *(*0x20 + -0x78) = 0x485d8a;\n                            in_RAX = fcn.0045e080(noname_0, arg1, arg3, arg4);\n                        }\n                        if (((*(in_RAX + 1) != '\\0') && (arg3 < in_RAX[3])) && (*(in_RAX + 10) != '\\0')) {\n                            *(*0x20 + -0x78) = 0x485da7;\n                            fcn.004845e0();\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x20) = piVar8;\n                    if (*(in_RAX + 0xd) == '\\0') {\n                        bVar9 = unaff_RDI == 0;\n                    }\n                    else if (piVar8 < 1) {\n                        bVar9 = unaff_RDI == 0;\n                    }\n                    else {\n                        if (arg1_00 < uVar7 + 1) {\n                            *(*0x20 + -0x78) = 0x485b88;\n                            noname_0 = fcn.00445800(arg1_00);\n                            arg1 = *(*0x20 + -0x18);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + 0x20);\n                            arg3 = *(*0x20 + -0x28);\n                            arg4 = *(*0x20 + 0x38);\n                            in_R10 = *(*0x20 + 0x40);\n                            piVar6 = *(*0x20 + -0x10);\n                            piVar8 = *(*0x20 + -0x20);\n                            in_RAX = *(*0x20 + 8);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(uVar7 + noname_0) = 0x20;\n                        if (*(in_RAX + 0xc) == '\\0') {\n                            bVar9 = unaff_RDI == 0;\n                            uVar7 = uVar7 + 1;\n                        }\n                        else {\n                            if (in_R10 < 0x11) goto code_r0x00485ddd;\n                            uVar3 = *(arg4 + 0x10);\n                            iVar2 = unaff_RDI;\n                            if (arg1_00 < uVar7 + 3) {\n                                *(*0x20 + -0x29) = uVar3;\n                                *(*0x20 + -0x78) = 0x485c19;\n                                noname_0 = fcn.00445800(arg1_00);\n                                arg1 = *(*0x20 + -0x18);\n                                unaff_RSI = *(*0x20 + 0x28);\n                                unaff_RDI = *(*0x20 + 0x20);\n                                uVar3 = *(*0x20 + -0x29);\n                                arg4 = *(*0x20 + 0x38);\n                                in_R10 = *(*0x20 + 0x40);\n                                piVar6 = *(*0x20 + -0x10);\n                                piVar8 = *(*0x20 + -0x20);\n                                in_RAX = *(*0x20 + 8);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                iVar2 = *(*0x20 + 0x20);\n                            }\n                            bVar9 = iVar2 == 0;\n                            *(uVar7 + 1 + noname_0) = 0x30;\n                            *(uVar7 + 2 + noname_0) = uVar3;\n                            arg3 = *(*0x20 + -0x28);\n                            uVar7 = uVar7 + 3;\n                        }\n                    }\n                    if (bVar9) {\n                        if (arg1 <= piVar8) goto code_r0x00485dc7;\n                        uVar5 = *(piVar8 + unaff_RBX);\n                        arg1 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        if (unaff_RSI <= piVar8) goto code_r0x00485dd2;\n                        uVar5 = *(unaff_RDI + piVar8);\n                    }\n                    *(*0x20 + -0x2b) = uVar5;\n                    arg3 = uVar5 >> 4;\n                    if (in_R10 <= arg3) goto code_r0x00485dbc;\n                    uVar5 = *(arg4 + arg3);\n                    arg3 = uVar5;\n                    arg1 = *(*0x20 + -0x2b) & 0xf;\n                    if (in_R10 <= arg1) break;\n                    uVar3 = *(arg4 + arg1);\n                    if (arg1_00 < uVar7 + 2) {\n                        *(*0x20 + -0x29) = uVar5;\n                        *(*0x20 + -0x2a) = uVar3;\n                        *(*0x20 + -0x78) = 0x485d1b;\n                        noname_0 = fcn.00445800(arg1_00);\n                        uVar3 = *(*0x20 + -0x2a);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        uVar5 = *(*0x20 + -0x29);\n                        arg4 = *(*0x20 + 0x38);\n                        in_R10 = *(*0x20 + 0x40);\n                        piVar6 = *(*0x20 + -0x10);\n                        piVar8 = *(*0x20 + -0x20);\n                        in_RAX = *(*0x20 + 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                    *(uVar7 + noname_0) = uVar5;\n                    *(uVar7 + 1 + noname_0) = uVar3;\n                    piVar8 = piVar8 + 1;\n                    arg1 = *(*0x20 + -0x18);\n                    arg3 = *(*0x20 + -0x28);\n                    uVar7 = uVar7 + 2;\n                }\n                *(*0x20 + -0x78) = 0x485dbc;\n                fcn.0045e420(in_R10);\ncode_r0x00485dbc:\n                *(*0x20 + -0x78) = 0x485dc7;\n                fcn.0045e420(in_R10);\ncode_r0x00485dc7:\n                *(*0x20 + -0x78) = 0x485dd2;\n                fcn.0045e420(arg1);\ncode_r0x00485dd2:\n                *(*0x20 + -0x78) = 0x485ddd;\n                fcn.0045e420(unaff_RSI);\ncode_r0x00485ddd:\n                *(*0x20 + -0x78) = 0x485dea;\n                fcn.0045e420(in_R10);\n            }\n            else if (0x10 < in_R10) {\n                uVar7 = uVar1 + 2;\n                uVar3 = *(arg4 + 0x10);\n                if (arg1_00 < uVar7) {\n                    *(*0x20 + -0x29) = uVar3;\n                    *(*0x20 + -0x78) = 0x485aba;\n                    noname_0 = fcn.00445800(arg1_00);\n                    arg1 = *(*0x20 + -0x18);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    arg3 = *(*0x20 + -0x28);\n                    arg4 = *(*0x20 + 0x38);\n                    in_R10 = *(*0x20 + 0x40);\n                    piVar6 = *(*0x20 + -0x10);\n                    uVar3 = *(*0x20 + -0x29);\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(uVar1 + noname_0) = 0x30;\n                *(uVar1 + 1 + noname_0) = uVar3;\n                goto code_r0x00485b0d;\n            }\n            arg1 = in_R10;\n            *(*0x20 + -0x78) = 0x485df7;\n            in_R10 = arg1;\n            in_RAX = fcn.0045e420(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + 0x40) = in_R10;\n        *(puVar4 + -8) = 0x485e25;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        in_R10 = *(puVar4 + 0x40);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 3288
    },
    "00485e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00485e60(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t in_RDX;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            arg1_00 = in_RDX;\n            if (*(in_RAX + 9) == '\\0') {\ncode_r0x00485ea5:\n                if (*(in_RAX + 0xc) != '\\0') {\n                    *(*0x20 + -0x40) = arg1;\n                    *(*0x20 + -0x80) = 0x485ebb;\n                    cVar2 = fcn.00477960();\n                    if (cVar2 != '\\0') {\n                        *(*0x20 + -0x80) = 0x485f91;\n                        fcn.00449620(1, arg1_00, 0x4a7f4b, 1);\n                        *(*0x20 + -0x80) = 0x485fa5;\n                        fcn.00484a20(0x4a7f4b);\n                        return;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                }\n                if (*(in_RAX + 0xb) == '\\0') {\n                    *(*0x20 + -0x80) = 0x485f48;\n                    fcn.00476ce0(0x44);\n                    *(*0x20 + -0x80) = 0x485f5e;\n                    fcn.00484760(0);\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x485f0b;\n                    fcn.00476ce0(0x44);\n                    *(*0x20 + -0x80) = 0x485f25;\n                    fcn.00484760(0);\n                }\n                return;\n            }\n            *(*0x20 + 0x18) = arg1;\n            iVar4 = *(in_RAX + 0x20);\n            arg1_00 = 0;\n            in_RDX = arg1;\n            do {\n                arg1 = in_RDX;\n                if (arg1 <= arg1_00) goto code_r0x00485ea5;\n                if (*(unaff_RBX + arg1_00) < 0x80) {\n                    in_RDX = arg1;\n                    uVar1 = arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = arg1_00;\n                    *(*0x20 + -0x38) = iVar4;\n                    *(*0x20 + -0x80) = 0x485fe7;\n                    fcn.004575e0(arg1_00);\n                    in_RAX = *(*0x20 + 8);\n                    in_RDX = *(*0x20 + 0x18);\n                    iVar4 = *(*0x20 + -0x38);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar1 = *(*0x20 + -0x30);\n                    arg1_00 = arg1;\n                }\n                arg1 = uVar1;\n                iVar4 = iVar4 + -1;\n            } while (-1 < iVar4);\n            arg1_00 = arg1;\n            if (arg1 <= in_RDX) goto code_r0x00485ea5;\n            *(*0x20 + -0x80) = 0x486033;\n            in_RAX = fcn.0045e460(arg1, in_RDX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x486048;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1092
    },
    "00486100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00486100(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*(in_RAX + 0xb) == '\\0') {\n        fcn.004770e0(0x44);\n        fcn.00484760(0);\n    }\n    else {\n        fcn.004770e0(0x44);\n        fcn.00484760(0);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "004861e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048624f)\n// WARNING: Removing unreachable block (ram,0x00486258)\n// WARNING: Removing unreachable block (ram,0x0048625d)\n// WARNING: Removing unreachable block (ram,0x00486268)\n// WARNING: Removing unreachable block (ram,0x0048626b)\n// WARNING: Removing unreachable block (ram,0x00486280)\n// WARNING: Removing unreachable block (ram,0x00486289)\n// WARNING: Removing unreachable block (ram,0x0048628e)\n// WARNING: Removing unreachable block (ram,0x00486294)\n// WARNING: Removing unreachable block (ram,0x004862a0)\n// WARNING: Removing unreachable block (ram,0x004862aa)\n// WARNING: Removing unreachable block (ram,0x004862c0)\n// WARNING: Removing unreachable block (ram,0x0048635e)\n// WARNING: Removing unreachable block (ram,0x00486371)\n// WARNING: Removing unreachable block (ram,0x00486377)\n// WARNING: Removing unreachable block (ram,0x0048637d)\n// WARNING: Removing unreachable block (ram,0x00486386)\n// WARNING: Removing unreachable block (ram,0x004862ca)\n// WARNING: Removing unreachable block (ram,0x004862d4)\n// WARNING: Removing unreachable block (ram,0x004862ea)\n// WARNING: Removing unreachable block (ram,0x00486300)\n// WARNING: Removing unreachable block (ram,0x00486306)\n// WARNING: Removing unreachable block (ram,0x004862f0)\n// WARNING: Removing unreachable block (ram,0x004862f6)\n// WARNING: Removing unreachable block (ram,0x0048630c)\n// WARNING: Removing unreachable block (ram,0x0048631b)\n// WARNING: Removing unreachable block (ram,0x00486320)\n// WARNING: Removing unreachable block (ram,0x004862fc)\n// WARNING: Removing unreachable block (ram,0x00486322)\n// WARNING: Removing unreachable block (ram,0x00486325)\n// WARNING: Removing unreachable block (ram,0x0048662c)\n// WARNING: Removing unreachable block (ram,0x00486888)\n// WARNING: Removing unreachable block (ram,0x00486895)\n// WARNING: Removing unreachable block (ram,0x0048689b)\n// WARNING: Removing unreachable block (ram,0x004868a2)\n// WARNING: Removing unreachable block (ram,0x004868a5)\n// WARNING: Removing unreachable block (ram,0x004868ad)\n// WARNING: Removing unreachable block (ram,0x004868e3)\n// WARNING: Removing unreachable block (ram,0x004868f2)\n// WARNING: Removing unreachable block (ram,0x004868f7)\n// WARNING: Removing unreachable block (ram,0x004868ff)\n// WARNING: Removing unreachable block (ram,0x004868ea)\n// WARNING: Removing unreachable block (ram,0x00486937)\n// WARNING: Removing unreachable block (ram,0x00486945)\n// WARNING: Removing unreachable block (ram,0x00486971)\n// WARNING: Removing unreachable block (ram,0x004863b7)\n// WARNING: Removing unreachable block (ram,0x004863c0)\n// WARNING: Removing unreachable block (ram,0x004863c9)\n// WARNING: Removing unreachable block (ram,0x004865d9)\n// WARNING: Removing unreachable block (ram,0x004863d2)\n// WARNING: Removing unreachable block (ram,0x004863dc)\n// WARNING: Removing unreachable block (ram,0x004863e6)\n// WARNING: Removing unreachable block (ram,0x004865b8)\n// WARNING: Removing unreachable block (ram,0x004863f0)\n// WARNING: Removing unreachable block (ram,0x004863fc)\n// WARNING: Removing unreachable block (ram,0x00486425)\n// WARNING: Removing unreachable block (ram,0x00486467)\n// WARNING: Removing unreachable block (ram,0x00486462)\n// WARNING: Removing unreachable block (ram,0x0048646c)\n// WARNING: Removing unreachable block (ram,0x00486488)\n// WARNING: Removing unreachable block (ram,0x004864f2)\n// WARNING: Removing unreachable block (ram,0x0048653a)\n// WARNING: Removing unreachable block (ram,0x0048659b)\n// WARNING: Removing unreachable block (ram,0x0048658e)\n// WARNING: Removing unreachable block (ram,0x004865a8)\n// WARNING: Removing unreachable block (ram,0x00486615)\n// WARNING: Removing unreachable block (ram,0x0048661f)\n// WARNING: Removing unreachable block (ram,0x0048663a)\n// WARNING: Removing unreachable block (ram,0x00486680)\n// WARNING: Removing unreachable block (ram,0x0048668a)\n// WARNING: Removing unreachable block (ram,0x00486785)\n// WARNING: Removing unreachable block (ram,0x004867b2)\n// WARNING: Removing unreachable block (ram,0x004867d1)\n// WARNING: Removing unreachable block (ram,0x00486817)\n// WARNING: Removing unreachable block (ram,0x00486660)\n// WARNING: Removing unreachable block (ram,0x0048666e)\n// WARNING: Removing unreachable block (ram,0x00486694)\n// WARNING: Removing unreachable block (ram,0x004866a0)\n// WARNING: Removing unreachable block (ram,0x004866aa)\n// WARNING: Removing unreachable block (ram,0x004866c9)\n// WARNING: Removing unreachable block (ram,0x0048670f)\n// WARNING: Removing unreachable block (ram,0x00486674)\n// WARNING: Removing unreachable block (ram,0x0048678b)\n// WARNING: Removing unreachable block (ram,0x004867a1)\n// WARNING: Removing unreachable block (ram,0x004867a5)\n// WARNING: Removing unreachable block (ram,0x00486666)\n// WARNING: Removing unreachable block (ram,0x00486629)\n// WARNING: Removing unreachable block (ram,0x004869b4)\n// WARNING: Removing unreachable block (ram,0x004869c5)\n\nvoid fcn.004861e0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    ulong in_XMM0_Qa;\n    ulong extraout_XMM0_Qa;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x58 && *0x20 + -0x58 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0xd8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 9) != '\\0') {\n                unaff_RDI = *(in_RAX + 0x20);\n            }\n            *(*0x20 + 0x20) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x78) = unaff_RDI;\n            unaff_RDI = arg1;\n            *(*0x20 + -0xe0) = 0x486245;\n            fcn.00472fe0(0x44, in_RAX + 0x28, unaff_RBX);\n            unaff_RBX = 1;\n            *(*0x20 + -0xe0) = 0x4869dc;\n            uVar1 = unaff_RBX;\n            in_RAX = fcn.0045e420(1);\n            arg1._0_4_ = uVar1;\n            in_XMM0_Qa = extraout_XMM0_Qa;\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = in_XMM0_Qa;\n        *(puVar2 + 0x18) = unaff_RBX;\n        *(puVar2 + 0x20) = arg1;\n        *(puVar2 + 0x28) = unaff_RDI;\n        *(puVar2 + -8) = 0x4869fb;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        in_XMM0_Qa = *(puVar2 + 0x10);\n        unaff_RBX = *(puVar2 + 0x18);\n        arg1._0_4_ = *(puVar2 + 0x20);\n        unaff_RDI = *(puVar2 + 0x28);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 2000
    },
    "00486a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00486a80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = 0x486aa5;\n            iVar1 = fcn.00465340();\n            if (iVar1 == 0x4a4c40) {\n                *(unaff_RBX + 0xb2) = 0;\n                *(unaff_RBX + 0xb4) = 0;\n                if (*0x5985b0 == 0) {\n                    *(unaff_RBX + 0x40) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x486ada;\n                    fcn.0045e0c0(0x4a4c40, param_2, param_3, param_4);\n                }\n                *(unaff_RBX + 0x48) = 0;\n                *(unaff_RBX + 0x49) = 0;\n                return unaff_RBX;\n            }\n            unaff_RBX = 0x4a4c40;\n            *(*0x20 + -0x28) = 0x486b07;\n            fcn.00409c20(0x497f80);\n        }\n        *(puVar2 + -8) = 0x486b0d;\n        fcn.0045bdc0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 470
    },
    "00486b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00486b20(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong *in_RAX;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (in_RAX[2] < 0x10001) {\n        in_RAX[1] = 0;\n    }\n    else {\n        *(in_RAX + 1) = in_XMM15;\n        if (*0x5985b0 == 0) {\n            *in_RAX = 0;\n        }\n        else {\n            in_RAX = fcn.0045e0a0(arg1, 0, arg3, in_R9);\n        }\n    }\n    if (8 < in_RAX[0x19]) {\n        *(in_RAX + 0x18) = in_XMM15;\n        if (*0x5985b0 == 0) {\n            in_RAX[0x17] = 0;\n        }\n        else {\n            in_RAX = fcn.0045e0a0(arg1, 0, arg3, in_R9);\n        }\n    }\n    in_RAX[3] = 0;\n    if (*0x5985b0 == 0) {\n        in_RAX[4] = 0;\n    }\n    else {\n        in_RAX = fcn.0045e0a0(arg1, 0, arg3, in_R9);\n    }\n    in_RAX[7] = 0;\n    if (*0x5985b0 == 0) {\n        *(in_RAX + 5) = in_XMM15;\n    }\n    else {\n        fcn.0045e0a0(arg1, 0, arg3, in_R9);\n        in_RAX = fcn.0045e0a0(arg1, 0, arg3, in_R9);\n    }\n    in_RAX[0x18] = 0;\n    fcn.00465260(in_RAX);\n    return;\n}\n",
        "token_count": 501
    },
    "00486d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00486d20(ulong arg1)\n\n{\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00480e60(arg1);\n    if (((arg1 & 0x1f) == 0x14) && (*unaff_RBX != 0)) {\n        fcn.00480c80(arg1);\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00486dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00486dc0(int64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    int64_t unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (unaff_RDI == 0) {\n        iVar4 = in_RAX[1];\n        uVar3 = iVar4 + 5;\n        uVar5 = in_RAX[2];\n        iVar2 = *in_RAX;\n        if (uVar5 < uVar3) {\n            iVar2 = fcn.00445800(uVar5);\n        }\n        *(iVar2 + iVar4) = 0x6c696e3c;\n        *(iVar2 + 4 + iVar4) = 0x3e;\n        in_RAX[1] = uVar3;\n        in_RAX[2] = uVar5;\n        if (*0x5985b0 == 0) {\n            *in_RAX = iVar2;\n        }\n        else {\n            fcn.0045e100(uVar5, uVar3, iVar2, in_R9);\n        }\n        return;\n    }\n    iVar4 = in_RAX[1];\n    uVar6 = iVar4 + 1;\n    iVar2 = *in_RAX;\n    uVar3 = in_RAX[2];\n    iVar1 = iVar2;\n    uVar5 = uVar3;\n    if (uVar3 < uVar6) {\n        arg2 = uVar6;\n        iVar1 = fcn.00445800(uVar3);\n        in_RAX[2] = uVar3;\n        if (*0x5985b0 == 0) {\n            *in_RAX = iVar1;\n        }\n        else {\n            iVar1 = fcn.0045df80(uVar3, arg2, iVar2, uVar5);\n        }\n    }\n    in_RAX[1] = uVar6;\n    *(iVar4 + iVar1) = 0x3f;\n    if ((unaff_RDI >> 9 & 1) == 0) {\n        iVar4 = 0x4cb460;\n        arg1 = unaff_RBX;\n    }\n    else {\n        iVar4 = fcn.00482060(unaff_RDI);\n    }\n    (**(iVar4 + 0xf8))();\n    iVar4 = in_RAX[1];\n    uVar3 = iVar4 + arg1;\n    uVar6 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar6 < uVar3) {\n        iVar2 = fcn.00445800(uVar6);\n    }\n    iVar4 = iVar4 + iVar2;\n    iVar1 = iVar2;\n    fcn.0045eda0(arg1);\n    in_RAX[1] = uVar3;\n    in_RAX[2] = uVar6;\n    if (*0x5985b0 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        iVar2 = fcn.0045df80(uVar6, iVar4, iVar1, uVar5);\n    }\n    if (uVar6 < uVar3 + 1) {\n        iVar2 = fcn.00445800(uVar6);\n        in_RAX[2] = uVar6;\n        if (*0x5985b0 == 0) {\n            *in_RAX = iVar2;\n        }\n        else {\n            iVar2 = fcn.0045df80(uVar6, iVar4, iVar1, uVar5);\n        }\n    }\n    in_RAX[1] = uVar3 + 1;\n    *(uVar3 + iVar2) = 0x3f;\n    return;\n}\n",
        "token_count": 932
    },
    "00487080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00487080(void)\n\n{\n    uint64_t arg1;\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t arg2;\n    int64_t iVar7;\n    uint32_t unaff_EBX;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (&iStack16 < *(unaff_R14 + 0x10) || &iStack16 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    *(in_RAX + 0xb3) = 1;\n    iVar2 = in_RAX[1];\n    uVar6 = iVar2 + 2;\n    uVar8 = in_RAX[2];\n    iVar1 = *in_RAX;\n    if (uVar8 < uVar6) {\n        iVar1 = fcn.00445800(uVar8);\n    }\n    *(iVar1 + iVar2) = 0x2125;\n    in_RAX[1] = uVar6;\n    in_RAX[2] = uVar8;\n    if (*0x5985b0 == 0) {\n        *in_RAX = iVar1;\n        piVar3 = in_RAX;\n    }\n    else {\n        piVar3 = fcn.0045e120(uVar8, iVar2, uVar6);\n    }\n    uVar9 = uVar6;\n    if (unaff_EBX < 0x80) {\n        if (uVar8 < uVar6 + 1) {\n            iVar1 = fcn.00445800(uVar8);\n            piVar3 = in_RAX;\n        }\n        *(uVar6 + iVar1) = unaff_EBX;\n        uVar6 = uVar6 + 1;\n    }\n    else {\n        iVar1 = fcn.0046e2a0(uVar8);\n        piVar3 = in_RAX;\n    }\n    piVar3[1] = uVar6;\n    piVar3[2] = uVar8;\n    if (*0x5985b0 == 0) {\n        *piVar3 = iVar1;\n    }\n    else {\n        piVar3 = fcn.0045e120(uVar8, uVar6, uVar9);\n    }\n    arg1 = uVar6 + 1;\n    iVar2 = iVar1;\n    if (uVar8 < arg1) {\n        arg2 = uVar6;\n        iVar2 = fcn.00445800(uVar8);\n        in_RAX[2] = uVar8;\n        if (*0x5985b0 == 0) {\n            *in_RAX = iVar2;\n            piVar3 = in_RAX;\n        }\n        else {\n            iVar2 = fcn.0045df80(uVar8, arg2, uVar9, iVar1);\n            piVar3 = in_RAX;\n        }\n    }\n    piVar3[1] = arg1;\n    *(uVar6 + iVar2) = 0x28;\n    iVar1 = piVar3[3];\n    if (iVar1 == 0) {\n        iVar1 = piVar3[7];\n        if (iVar1 == 0) {\n            iVar1 = piVar3[1];\n            uVar6 = iVar1 + 5;\n            uVar8 = piVar3[2];\n            iVar7 = *piVar3;\n            if (uVar8 < uVar6) {\n                iVar7 = fcn.00445800(uVar8);\n                piVar3 = in_RAX;\n            }\n            *(iVar7 + iVar1) = 0x6c696e3c;\n            *(iVar7 + 4 + iVar1) = 0x3e;\n            piVar3[1] = uVar6;\n            piVar3[2] = uVar8;\n            if (*0x5985b0 == 0) {\n                *piVar3 = iVar7;\n            }\n            else {\n                piVar3 = fcn.0045e100(uVar8, uVar6, iVar7, iVar2);\n            }\n        }\n        else {\n            iVar7 = piVar3[6];\n            if ((iVar1 >> 9 & 1) == 0) {\n                iVar4 = 0x4cb460;\n                iVar1 = piVar3[5];\n            }\n            else {\n                iVar4 = fcn.00482060(iVar1);\n                iVar1 = iVar7;\n            }\n            (**(iVar4 + 0xf8))(*(iVar4 + 0xf8), iVar1);\n            uVar6 = in_RAX[1] + iVar7;\n            uVar8 = in_RAX[2];\n            iVar1 = *in_RAX;\n            if (uVar8 < uVar6) {\n                iVar1 = fcn.00445800(uVar8);\n            }\n            iVar4 = iVar1;\n            fcn.0045eda0(iVar7);\n            in_RAX[1] = uVar6;\n            in_RAX[2] = uVar8;\n            if (*0x5985b0 == 0) {\n                *in_RAX = iVar1;\n                piVar3 = in_RAX;\n            }\n            else {\n                piVar3 = fcn.0045e0a0(uVar8, iVar1, iVar4, iVar2);\n            }\n            iVar5 = iVar1;\n            if (uVar8 < uVar6 + 1) {\n                iVar5 = fcn.00445800(uVar8);\n                in_RAX[2] = uVar8;\n                if (*0x5985b0 == 0) {\n                    *in_RAX = iVar5;\n                    piVar3 = in_RAX;\n                }\n                else {\n                    iVar5 = fcn.0045df80(uVar8, iVar1, iVar4, iVar2);\n                    piVar3 = in_RAX;\n                }\n            }\n            piVar3[1] = uVar6 + 1;\n            *(uVar6 + iVar5) = 0x3d;\n            iVar7 = 0;\n            fcn.00489d20(piVar3[6], iVar5, 0);\n            piVar3 = in_RAX;\n        }\n    }\n    else {\n        if (iVar1 == 0) {\n            iVar7 = 0;\n            iVar1 = 0;\n        }\n        else {\n            iVar7 = 0x4cb460;\n        }\n        iStack16 = piVar3[4];\n        (**(iVar7 + 0xf8))(iVar1);\n        uVar6 = in_RAX[1] + arg1;\n        uVar8 = in_RAX[2];\n        iVar1 = *in_RAX;\n        if (uVar8 < uVar6) {\n            iVar1 = fcn.00445800(uVar8);\n        }\n        iVar7 = iVar1;\n        fcn.0045eda0(arg1);\n        in_RAX[1] = uVar6;\n        in_RAX[2] = uVar8;\n        if (*0x5985b0 == 0) {\n            *in_RAX = iVar1;\n            piVar3 = in_RAX;\n        }\n        else {\n            piVar3 = fcn.0045e0a0(uVar8, iVar1, iVar7, iVar2);\n        }\n        iVar4 = iVar1;\n        if (uVar8 < uVar6 + 1) {\n            iVar4 = fcn.00445800(uVar8);\n            in_RAX[2] = uVar8;\n            if (*0x5985b0 == 0) {\n                *in_RAX = iVar4;\n                piVar3 = in_RAX;\n            }\n            else {\n                iVar4 = fcn.0045df80(uVar8, iVar1, iVar7, iVar2);\n                piVar3 = in_RAX;\n            }\n        }\n        piVar3[1] = uVar6 + 1;\n        *(uVar6 + iVar4) = 0x3d;\n        fcn.00489540(piVar3[4], iVar4, iVar7);\n        piVar3 = in_RAX;\n    }\n    iVar1 = piVar3[1];\n    uVar8 = iVar1 + 1;\n    iVar4 = *piVar3;\n    uVar6 = piVar3[2];\n    iVar5 = iVar4;\n    if (uVar6 < uVar8) {\n        iVar5 = fcn.00445800(uVar6);\n        in_RAX[2] = uVar6;\n        if (*0x5985b0 == 0) {\n            *in_RAX = iVar5;\n            piVar3 = in_RAX;\n        }\n        else {\n            iVar5 = fcn.0045df80(uVar6, iVar4, iVar7, iVar2);\n            piVar3 = in_RAX;\n        }\n    }\n    piVar3[1] = uVar8;\n    *(iVar1 + iVar5) = 0x29;\n    *(piVar3 + 0xb3) = 0;\n    return;\n}\n",
        "token_count": 2060
    },
    "004876e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004876e0(ulong arg1, ulong arg2)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (unaff_EDI < 100) {\n        if (unaff_EDI < 0x56) {\n            if (unaff_EDI == 0x4f) {\ncode_r0x004877c9:\n                fcn.004850e0(8, arg2, 0x4aa3ea, 0x11);\n                return;\n            }\n            if (unaff_EDI == 0x55) {\n                fcn.00484d60();\n                return;\n            }\n        }\n        else {\n            if (unaff_EDI == 0x58) {\n                fcn.004850e0(0x10, arg2, 0x4aa3d9, 0x11);\n                return;\n            }\n            if (unaff_EDI == 0x62) {\n                fcn.004850e0(2, arg2, 0x4aa3ea, 0x11);\n                return;\n            }\n            if (unaff_EDI == 99) {\n                fcn.00486060();\n                return;\n            }\n        }\n    }\n    else if (unaff_EDI < 0x70) {\n        if (unaff_EDI == 100) {\n            fcn.004850e0(10, arg2, 0x4aa3ea, 0x11);\n            return;\n        }\n        if (unaff_EDI == 0x6f) goto code_r0x004877c9;\n    }\n    else {\n        if (unaff_EDI == 0x71) {\n            fcn.00486100();\n            return;\n        }\n        if (unaff_EDI == 0x76) {\n            if ((*(in_RAX + 0x50) != '\\0') && (arg1 == '\\0')) {\n                fcn.00487640(1);\n                return;\n            }\n            fcn.004850e0(10, arg2, 0x4aa3ea, 0x11);\n            return;\n        }\n        if (unaff_EDI == 0x78) {\n            fcn.004850e0(0x10, arg2, 0x4aa3ea, 0x11);\n            return;\n        }\n    }\n    fcn.00487080();\n    return;\n}\n",
        "token_count": 597
    },
    "004879e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004879e0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    int64_t arg4;\n    int64_t iVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t arg2;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    \n    while (iVar4 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if (iVar4 < 99) {\n        if (((iVar4 - 0x45U < 3) || (iVar4 == 0x58)) || (iVar4 == 0x62)) {\ncode_r0x00487a2e:\n            uVar1 = *(in_RAX + 0x4b);\n            arg2 = uVar1;\n            iVar2 = in_RAX[1];\n            arg3 = iVar2 + 1;\n            iVar3 = *in_RAX;\n            uVar5 = in_RAX[2];\n            uVar6 = arg1;\n            arg4 = iVar3;\n            if (uVar5 < arg3) {\n                uVar6 = arg3;\n                arg4 = fcn.00445800(uVar5);\n                in_RAX[2] = uVar5;\n                if (*0x5985b0 == 0) {\n                    *in_RAX = arg4;\n                }\n                else {\n                    arg4 = fcn.0045df80(uVar5, arg2, uVar6, iVar3);\n                }\n                uVar6 = arg1 & 0xffffffff;\n            }\n            in_RAX[1] = arg3;\n            *(iVar2 + arg4) = 0x28;\n            fcn.004878e0(uVar6);\n            *(in_RAX + 0x4b) = 1;\n            fcn.004878e0(arg1 & 0xffffffff);\n            iVar2 = in_RAX[1];\n            uVar5 = iVar2 + 2;\n            uVar6 = in_RAX[2];\n            iVar3 = *in_RAX;\n            if (uVar6 < uVar5) {\n                iVar3 = fcn.00445800(uVar6);\n            }\n            *(iVar3 + iVar2) = 0x2969;\n            in_RAX[1] = uVar5;\n            in_RAX[2] = uVar6;\n            if (*0x5985b0 == 0) {\n                *in_RAX = iVar3;\n            }\n            else {\n                fcn.0045df80(uVar6, uVar5, arg3, arg4);\n            }\n            *(in_RAX + 0x4b) = uVar1;\n            return;\n        }\n    }\n    else if (((iVar4 - 0x65U < 3) || (iVar4 == 0x76)) || (iVar4 == 0x78)) goto code_r0x00487a2e;\n    fcn.00487080();\n    return;\n}\n",
        "token_count": 728
    },
    "00487be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00487be0(ulong arg1, ulong arg2)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (unaff_EDI < 0x72) {\n        if (unaff_EDI == 0x58) {\n            fcn.00485940(arg1, arg2, 0, 0x4aa3d9);\n            return;\n        }\n        if (unaff_EDI == 0x71) {\n            fcn.00485e60(arg1);\n            return;\n        }\n    }\n    else {\n        if (unaff_EDI == 0x73) {\n            fcn.004857c0(arg1);\n            return;\n        }\n        if (unaff_EDI == 0x76) {\n            if (*(in_RAX + 0x50) != '\\0') {\n                fcn.00485e60(arg1);\n                return;\n            }\n            fcn.004857c0(arg1);\n            return;\n        }\n        if (unaff_EDI == 0x78) {\n            fcn.00485940(arg1, arg2, 0, 0x4aa3ea);\n            return;\n        }\n    }\n    fcn.00487080();\n    return;\n}\n",
        "token_count": 337
    },
    "00487ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00487ce0(int64_t arg1, ulong noname_1, ulong arg3, int64_t arg4)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    int32_t unaff_ESI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    int32_t iStack0000000000000028;\n    ulong uStack0000000000000030;\n    uchar auStack40 [8];\n    int64_t iStack32;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    iStack0000000000000028 = unaff_ESI;\n    while (uStack0000000000000030 = arg3,  auStack40 < *(unaff_R14 + 0x10) || auStack40 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n        arg3 = uStack0000000000000030;\n    }\n    if (iStack0000000000000028 < 0x72) {\n        if (iStack0000000000000028 == 0x58) {\n            fcn.00485940(0, noname_1, unaff_RDI, 0x4aa3d9);\n            return;\n        }\n        if (iStack0000000000000028 == 100) {\ncode_r0x00487da9:\n            if (*(in_RAX + 10) == '\\0') {\n                iVar1 = in_RAX[1];\n                uVar7 = iVar1 + 1;\n                iVar4 = *in_RAX;\n                uVar5 = in_RAX[2];\n                if (uVar5 < uVar7) {\n                    uVar6 = uVar7;\n                    iVar4 = fcn.00445800(uVar5);\n                    in_RAX[2] = uVar5;\n                    if (*0x5985b0 == 0) {\n                        *in_RAX = iVar4;\n                    }\n                    else {\n                        iVar4 = fcn.0045df80(uVar5, uVar6, arg3, arg4);\n                    }\n                }\n                in_RAX[1] = uVar7;\n                *(iVar1 + iVar4) = 0x5b;\n                for (iVar1 = 0; iVar1 < arg1; iVar1 = iVar1 + 1) {\n                    if (0 < iVar1) {\n                        iVar4 = in_RAX[1];\n                        uVar7 = iVar4 + 1;\n                        iVar3 = *in_RAX;\n                        uVar5 = in_RAX[2];\n                        if (uVar5 < uVar7) {\n                            arg2 = iVar1;\n                            iVar3 = fcn.00445800(uVar5);\n                            in_RAX[2] = uVar5;\n                            if (*0x5985b0 == 0) {\n                                *in_RAX = iVar3;\n                            }\n                            else {\n                                iVar3 = fcn.0045df80(uVar5, arg2, arg3, arg4);\n                            }\n                        }\n                        in_RAX[1] = uVar7;\n                        *(iVar4 + iVar3) = 0x20;\n                    }\n                    arg3 = 0x4aa3ea;\n                    arg4 = 0x11;\n                    fcn.004850e0(10, in_RAX + 8, 0x4aa3ea, 0x11);\n                }\n                iVar1 = in_RAX[1];\n                uVar7 = iVar1 + 1;\n                iVar4 = *in_RAX;\n                uVar5 = in_RAX[2];\n                iVar3 = iVar4;\n                if (uVar5 < uVar7) {\n                    iVar3 = fcn.00445800(uVar5);\n                    in_RAX[2] = uVar5;\n                    if (*0x5985b0 == 0) {\n                        *in_RAX = iVar3;\n                    }\n                    else {\n                        iVar3 = fcn.0045df80(uVar5, iVar4, arg3, arg4);\n                    }\n                }\n                in_RAX[1] = uVar7;\n                *(iVar1 + iVar3) = 0x5d;\n                return;\n            }\n            iVar1 = in_RAX[1];\n            uVar5 = iVar1 + arg4;\n            uVar7 = in_RAX[2];\n            iStack32 = *in_RAX;\n            if (uVar7 < uVar5) {\n                iStack32 = fcn.00445800(uVar7);\n            }\n            uVar2 = uStack0000000000000030;\n            fcn.0045eda0(arg4);\n            in_RAX[1] = uVar5;\n            in_RAX[2] = uVar7;\n            if (*0x5985b0 == 0) {\n                *in_RAX = iStack32;\n                iVar1 = iStack32;\n            }\n            else {\n                iVar1 = fcn.0045df80(uVar7, iVar1, uVar2, arg4);\n            }\n            if (unaff_RBX != 0) {\n                if (uVar7 < uVar5 + 1) {\n                    iVar4 = unaff_RBX;\n                    iVar1 = fcn.00445800(uVar7);\n                    in_RAX[2] = uVar7;\n                    if (*0x5985b0 == 0) {\n                        *in_RAX = iVar1;\n                    }\n                    else {\n                        iVar1 = fcn.0045df80(uVar7, iVar4, uVar2, arg4);\n                    }\n                }\n                in_RAX[1] = uVar5 + 1;\n                *(uVar5 + iVar1) = 0x7b;\n                for (iVar1 = 0; iVar1 < arg1; iVar1 = iVar1 + 1) {\n                    if (0 < iVar1) {\n                        arg4 = in_RAX[1];\n                        uVar5 = in_RAX[2];\n                        iVar4 = *in_RAX;\n                        if (uVar5 < arg4 + 2U) {\n                            iVar4 = fcn.00445800(uVar5);\n                        }\n                        *(iVar4 + arg4) = 0x202c;\n                        in_RAX[1] = arg4 + 2U;\n                        in_RAX[2] = uVar5;\n                        if (*0x5985b0 == 0) {\n                            *in_RAX = iVar4;\n                        }\n                        else {\n                            fcn.0045e0e0(uVar5, unaff_RBX, arg1, arg4);\n                        }\n                    }\n                    fcn.00487640(1);\n                }\n                iVar1 = in_RAX[1];\n                uVar7 = iVar1 + 1;\n                iVar4 = *in_RAX;\n                uVar5 = in_RAX[2];\n                if (uVar5 < uVar7) {\n                    iVar4 = fcn.00445800(uVar5);\n                    in_RAX[2] = uVar5;\n                    if (*0x5985b0 == 0) {\n                        *in_RAX = iVar4;\n                    }\n                    else {\n                        iVar4 = fcn.0045df80(uVar5, unaff_RBX, arg1, arg4);\n                    }\n                }\n                in_RAX[1] = uVar7;\n                *(iVar1 + iVar4) = 0x7d;\n                return;\n            }\n            uVar6 = uVar5 + 5;\n            if (uVar7 < uVar6) {\n                iVar1 = fcn.00445800(uVar7);\n            }\n            *(iVar1 + uVar5) = 0x6c696e28;\n            *(iVar1 + 4 + uVar5) = 0x29;\n            in_RAX[1] = uVar6;\n            in_RAX[2] = uVar7;\n            if (*0x5985b0 == 0) {\n                *in_RAX = iVar1;\n            }\n            else {\n                fcn.0045df80(uVar7, uVar6, uVar2, arg4);\n            }\n            return;\n        }\n        if (iStack0000000000000028 == 0x71) {\n            fcn.00449920(arg1);\n            fcn.00485e60(unaff_RBX);\n            return;\n        }\n    }\n    else {\n        if (iStack0000000000000028 == 0x73) {\n            fcn.004858c0(arg1);\n            return;\n        }\n        if (iStack0000000000000028 == 0x76) goto code_r0x00487da9;\n        if (iStack0000000000000028 == 0x78) {\n            fcn.00485940(0, noname_1, unaff_RDI, 0x4aa3ea);\n            return;\n        }\n    }\n    uStack16 = fcn.0040a080(unaff_RDI);\n    if (*0x545550 == '\\0') {\n        iStack24 = 0x495280;\n        uVar2 = *0x545560;\n    }\n    else {\n        iStack24 = 0x495280;\n        *0x545558 = 0x495280;\n        uVar2 = uStack16;\n        if (*0x5985b0 != 0) {\n            uStack16 = fcn.0045df80(unaff_RDI, 0x495280, arg3, arg4);\n            uVar2 = *0x545560;\n        }\n    }\n    *0x545560 = uVar2;\n    uVar2 = uStack16;\n    iVar1 = iStack24;\n    if (iStack24 == 0) {\n        uVar2 = 0;\n        iVar1 = 0;\n    }\n    fcn.00489d20(uVar2, iVar1, 0);\n    return;\n}\n",
        "token_count": 2248
    },
    "004883a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004883a0(int64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    int32_t unaff_ESI;\n    int64_t unaff_RDI;\n    uint64_t arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int32_t iStack0000000000000028;\n    int64_t iStack16;\n    \n    iStack0000000000000028 = unaff_ESI;\n    while (&iStack16 < *(unaff_R14 + 0x10) || &iStack16 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar5 = unaff_RDI & 0x1f;\n    if (((1 < uVar5 - 0x12) && (2 < uVar5 - 0x15)) && (uVar5 != 0x1a)) {\n        fcn.00487080();\n        return;\n    }\n    iVar6 = unaff_RDI;\n    iStack16 = arg1;\n    iVar1 = fcn.00481aa0(unaff_RDI);\n    if (iStack0000000000000028 < 0x65) {\n        if (((iStack0000000000000028 == 0x58) || (iStack0000000000000028 == 0x62)) || (iStack0000000000000028 == 100))\n        goto code_r0x00488775;\n    }\n    else if (iStack0000000000000028 < 0x71) {\n        if (iStack0000000000000028 == 0x6f) {\ncode_r0x00488775:\n            fcn.004876e0(0, iVar6);\n            return;\n        }\n        if (iStack0000000000000028 == 0x70) {\n            fcn.00487640(*(in_RAX + 0x4c) ^ 1);\n            return;\n        }\n    }\n    else {\n        if (iStack0000000000000028 == 0x76) {\n            if (*(in_RAX + 10) != '\\0') {\n                iVar6 = in_RAX[1];\n                uVar7 = iVar6 + 1;\n                iVar4 = *in_RAX;\n                uVar5 = in_RAX[2];\n                iVar2 = iVar4;\n                if (uVar5 < uVar7) {\n                    piVar3 = in_RAX;\n                    iVar2 = fcn.00445800(uVar5);\n                    in_RAX[2] = uVar5;\n                    if (*0x5985b0 == 0) {\n                        *in_RAX = iVar2;\n                    }\n                    else {\n                        iVar2 = fcn.0045df80(uVar5, piVar3, iVar4, in_R9);\n                    }\n                }\n                iVar4 = iStack16;\n                in_RAX[1] = uVar7;\n                *(iVar6 + iVar2) = 0x28;\n                if ((unaff_RDI == 0) || ((unaff_RDI >> 9 & 1) != 0)) {\n                    iVar6 = fcn.00482060(unaff_RDI);\n                }\n                else {\n                    iVar6 = 0x4cb460;\n                    iVar4 = unaff_RBX;\n                }\n                (**(iVar6 + 0xf8))();\n                uVar5 = in_RAX[1] + iVar4;\n                uVar7 = in_RAX[2];\n                iVar6 = *in_RAX;\n                if (uVar7 < uVar5) {\n                    iVar6 = fcn.00445800(uVar7);\n                }\n                iVar2 = iVar6;\n                fcn.0045eda0(iVar4);\n                in_RAX[1] = uVar5;\n                in_RAX[2] = uVar7;\n                if (*0x5985b0 == 0) {\n                    *in_RAX = iVar6;\n                    piVar3 = in_RAX;\n                }\n                else {\n                    piVar3 = fcn.0045e0a0(uVar7, iVar6, iVar2, in_R9);\n                }\n                arg3 = uVar5 + 2;\n                if (uVar7 < arg3) {\n                    iVar6 = fcn.00445800(uVar7);\n                    piVar3 = in_RAX;\n                }\n                *(iVar6 + uVar5) = 0x2829;\n                piVar3[1] = arg3;\n                piVar3[2] = uVar7;\n                if (*0x5985b0 == 0) {\n                    *piVar3 = iVar6;\n                }\n                else {\n                    piVar3 = fcn.0045e0a0(uVar7, iVar6, arg3, in_R9);\n                }\n                if (iVar1 == 0) {\n                    if (uVar7 < arg3 + 3) {\n                        iVar6 = fcn.00445800(uVar7);\n                        piVar3 = in_RAX;\n                    }\n                    *(iVar6 + arg3) = 0x696e;\n                    *(iVar6 + 2 + arg3) = 0x6c;\n                    piVar3[1] = arg3 + 3;\n                    piVar3[2] = uVar7;\n                    if (*0x5985b0 == 0) {\n                        *piVar3 = iVar6;\n                    }\n                    else {\n                        piVar3 = fcn.0045e0a0(uVar7, iVar6, arg3, in_R9);\n                    }\n                }\n                else {\n                    fcn.00487640(1);\n                    piVar3 = in_RAX;\n                }\n                iVar6 = piVar3[1];\n                uVar7 = iVar6 + 1;\n                iVar1 = *piVar3;\n                uVar5 = piVar3[2];\n                iVar4 = iVar1;\n                if (uVar5 < uVar7) {\n                    iVar4 = fcn.00445800(uVar5);\n                    in_RAX[2] = uVar5;\n                    if (*0x5985b0 == 0) {\n                        *in_RAX = iVar4;\n                        piVar3 = in_RAX;\n                    }\n                    else {\n                        iVar4 = fcn.0045df80(uVar5, iVar1, arg3, in_R9);\n                        piVar3 = in_RAX;\n                    }\n                }\n                piVar3[1] = uVar7;\n                *(iVar6 + iVar4) = 0x29;\n                return;\n            }\n            if (iVar1 == 0) {\n                fcn.00484a20(5);\n                return;\n            }\n            fcn.00487640(*(in_RAX + 0x4c) ^ 1);\n            return;\n        }\n        if (iStack0000000000000028 == 0x78) goto code_r0x00488775;\n    }\n    fcn.00487080();\n    return;\n}\n",
        "token_count": 1603
    },
    "00488800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00488800(ulong arg1, ulong noname_1, ulong *arg3)\n\n{\n    uint8_t uVar1;\n    uchar uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t noname_1_00;\n    int64_t *piVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    int64_t *piVar10;\n    ulong unaff_RBX;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t *unaff_RDI;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0xa8) = 0x48886d;\n            iVar3 = fcn.00433540(arg1, *0x20 + 8);\n            if (iVar3 == 0) {\n                return;\n            }\n            iVar4 = *(*0x20 + -0x20);\n            if (iVar4 == 0) {\n                uVar9 = 0;\n                bVar13 = false;\n                arg3 = NULL;\n            }\n            else {\n                if (*0x545550 == '\\0') {\n                    arg3 = *(*0x20 + 0x18);\n                }\n                else {\n                    *0x545558 = iVar4;\n                    if (*0x5985b0 == 0) {\n                        arg3 = *(*0x20 + 0x18);\n                        *0x545560 = arg3;\n                    }\n                    else {\n                        arg3 = *(*0x20 + 0x18);\n                        *(*0x20 + -0xa8) = 0x4888c8;\n                        iVar3 = fcn.0045e100(arg1, iVar4, arg3, in_R9);\n                    }\n                }\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x10) = arg3;\n                if (*(*0x20 + -0x18) == 0) {\n                    uVar9 = 0;\n                    bVar13 = false;\n                    arg3 = NULL;\n                }\n                else {\n                    uVar1 = *(*(*0x20 + -0x18) + 0x17);\n                    in_R9 = uVar1;\n                    uVar9 = uVar1 & 0x1f;\n                    bVar13 = (uVar1 & 0x20) == 0;\n                }\n            }\n            if (uVar9 == 0x16) {\n                if (bVar13) {\n                    arg3 = *arg3;\n                }\n                if (arg3 == NULL) {\n                    piVar5 = *(*0x20 + 8);\n                    iVar3 = piVar5[1];\n                    uVar8 = iVar3 + 5;\n                    uVar7 = piVar5[2];\n                    iVar4 = *piVar5;\n                    if (uVar7 < uVar8) {\n                        *(*0x20 + -0x48) = iVar3;\n                        *(*0x20 + -0xa8) = 0x48897e;\n                        iVar4 = fcn.00445800(uVar7);\n                        piVar5 = *(*0x20 + 8);\n                        iVar3 = *(*0x20 + -0x48);\n                    }\n                    *(iVar4 + iVar3) = 0x6c696e3c;\n                    *(iVar4 + 4 + iVar3) = 0x3e;\n                    piVar5[1] = uVar8;\n                    piVar5[2] = uVar7;\n                    if (*0x5985b0 == 0) {\n                        *piVar5 = iVar4;\n                    }\n                    else {\n                        *(*0x20 + -0xa8) = 0x4889b5;\n                        fcn.0045df80(uVar7, uVar8, arg3, in_R9);\n                    }\n                    return;\n                }\n            }\n            unaff_RDI = *(*0x20 + 8);\n            if (*(unaff_RDI + 0xb2) == '\\0') {\n                *(*0x20 + -0x58) = iVar3;\n                *(*0x20 + -0x30) = unaff_RBX;\n                uVar2 = *(unaff_RDI + 10);\n                *(*0x20 + -0x39) = unaff_RDI[9];\n                *(*0x20 + -0x31) = uVar2;\n                unaff_RDI[9] = 0;\n                *(unaff_RDI + 0x49) = 0;\n                iVar3 = unaff_RDI[1];\n                uVar8 = iVar3 + 2;\n                uVar7 = unaff_RDI[2];\n                iVar4 = *unaff_RDI;\n                if (uVar7 < uVar8) {\n                    *(*0x20 + -0x48) = iVar3;\n                    *(*0x20 + -0xa8) = 0x488a39;\n                    iVar4 = fcn.00445800(uVar7);\n                    iVar3 = *(*0x20 + -0x48);\n                    unaff_RDI = *(*0x20 + 8);\n                }\n                *(iVar4 + iVar3) = 0x2125;\n                unaff_RDI[1] = uVar8;\n                unaff_RDI[2] = uVar7;\n                if (*0x5985b0 == 0) {\n                    *unaff_RDI = iVar4;\n                }\n                else {\n                    *(*0x20 + -0xa8) = 0x488a78;\n                    fcn.0045e120(uVar7, iVar3, uVar8);\n                }\n                uVar11 = *(*0x20 + 0x20);\n                if (*(*0x20 + 0x20) < 0x80) {\n                    if (uVar7 < uVar8 + 1) {\n                        *(*0x20 + -0xa8) = 0x488aa5;\n                        iVar4 = fcn.00445800(uVar7);\n                        uVar11 = *(*0x20 + 0x20);\n                        unaff_RDI = *(*0x20 + 8);\n                    }\n                    *(uVar8 + iVar4) = uVar11;\n                    uVar8 = uVar8 + 1;\n                }\n                else {\n                    *(*0x20 + -0xa8) = 0x488ad8;\n                    iVar4 = fcn.0046e2a0(uVar7);\n                    unaff_RDI = *(*0x20 + 8);\n                }\n                unaff_RDI[1] = uVar8;\n                unaff_RDI[2] = uVar7;\n                if (*0x5985b0 == 0) {\n                    *unaff_RDI = iVar4;\n                }\n                else {\n                    *(*0x20 + -0xa8) = 0x488b0c;\n                    fcn.0045e120(uVar7, uVar11, uVar8);\n                }\n                uVar11 = uVar8 + 7;\n                if (uVar7 < uVar11) {\n                    *(*0x20 + -0x60) = uVar8;\n                    *(*0x20 + -0xa8) = 0x488b32;\n                    iVar4 = fcn.00445800(uVar7);\n                    unaff_RDI = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0x60);\n                }\n                *(iVar4 + uVar8) = 0x4e415028;\n                *(iVar4 + 3 + uVar8) = 0x3d43494e;\n                unaff_RDI[1] = uVar11;\n                unaff_RDI[2] = uVar7;\n                iVar3 = *(*0x20 + 0x30);\n                uVar8 = uVar11 + iVar3;\n                if (*0x5985b0 == 0) {\n                    *unaff_RDI = iVar4;\n                }\n                else {\n                    *(*0x20 + -0xa8) = 0x488b87;\n                    fcn.0045e120(uVar7, uVar11, iVar3);\n                }\n                if (uVar7 < uVar8) {\n                    *(*0x20 + -0x48) = uVar11;\n                    *(*0x20 + -0xa8) = 0x488ba7;\n                    iVar4 = fcn.00445800(uVar7);\n                    iVar3 = *(*0x20 + 0x30);\n                }\n                *(*0x20 + -0x48) = uVar7;\n                *(*0x20 + -0x50) = uVar8;\n                *(*0x20 + -0x28) = iVar4;\n                *(*0x20 + -0xa8) = 0x488bdd;\n                fcn.0045eda0(iVar3);\n                iVar6 = *(*0x20 + -0x50);\n                piVar5 = *(*0x20 + 8);\n                piVar5[1] = iVar6;\n                uVar8 = *(*0x20 + -0x48);\n                piVar5[2] = uVar8;\n                if (*0x5985b0 == 0) {\n                    noname_1_00 = *(*0x20 + -0x28);\n                    *piVar5 = noname_1_00;\n                }\n                else {\n                    noname_1_00 = *(*0x20 + -0x28);\n                    *(*0x20 + -0xa8) = 0x488c19;\n                    piVar5 = fcn.0045e0a0(uVar8, noname_1_00, iVar3, iVar4);\n                }\n                uVar7 = iVar6 + 9;\n                if (uVar8 < uVar7) {\n                    *(*0x20 + -0xa8) = 0x488c3c;\n                    noname_1_00 = fcn.00445800(uVar8);\n                    piVar5 = *(*0x20 + 8);\n                    iVar6 = *(*0x20 + -0x50);\n                }\n                *(noname_1_00 + iVar6) = 0x3a646f6874656d20;\n                *(noname_1_00 + 8 + iVar6) = 0x20;\n                piVar5[1] = uVar7;\n                piVar5[2] = uVar8;\n                if (*0x5985b0 == 0) {\n                    *piVar5 = noname_1_00;\n                }\n                else {\n                    *(*0x20 + -0xa8) = 0x488c85;\n                    piVar5 = fcn.0045e0a0(uVar8, noname_1_00, uVar7, iVar4);\n                }\n                *(piVar5 + 0xb2) = 1;\n                *(*0x20 + -0xa8) = 0x488ca5;\n                fcn.00489540(*(*0x20 + -0x30), noname_1_00, uVar7);\n                piVar5 = *(*0x20 + 8);\n                *(piVar5 + 0xb2) = 0;\n                iVar3 = piVar5[1];\n                uVar11 = iVar3 + 1;\n                iVar6 = *piVar5;\n                uVar8 = piVar5[2];\n                piVar10 = piVar5;\n                if (uVar8 < uVar11) {\n                    *(*0x20 + -0xa8) = 0x488cd9;\n                    iVar6 = fcn.00445800(uVar8);\n                    piVar10 = *(*0x20 + 8);\n                    piVar10[2] = uVar8;\n                    if (*0x5985b0 == 0) {\n                        *piVar10 = iVar6;\n                    }\n                    else {\n                        *(*0x20 + -0xa8) = 0x488cf8;\n                        iVar6 = fcn.0045df80(uVar8, piVar5, uVar7, iVar4);\n                    }\n                }\n                piVar10[1] = uVar11;\n                *(iVar3 + iVar6) = 0x29;\n                uVar2 = *(*0x20 + -0x31);\n                piVar10[9] = *(*0x20 + -0x39);\n                *(piVar10 + 10) = uVar2;\n                return;\n            }\n            *(*0x20 + -0xa8) = 0x488d2a;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + 0x20) = unaff_RDI;\n        *(puVar12 + 0x28) = unaff_RSI;\n        *(puVar12 + 0x30) = arg3;\n        *(puVar12 + -8) = 0x488d4d;\n        fcn.0045bdc0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1 = *(puVar12 + 0x18);\n        unaff_RDI = *(puVar12 + 0x20);\n        unaff_RSI = *(puVar12 + 0x28);\n        arg3 = *(puVar12 + 0x30);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 3282
    },
    "00488d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar fcn.00488d80(void)\n\n{\n    ulong arg1;\n    int32_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack456 [56];\n    ulong *puStack400;\n    ulong *puStack328;\n    ulong *puStack256;\n    int64_t iStack208;\n    int64_t iStack200;\n    ulong uStack192;\n    ulong uStack184;\n    ulong uStack176;\n    ulong auStack168 [2];\n    ulong uStack152;\n    uchar auStack144 [16];\n    ulong auStack128 [2];\n    ulong uStack112;\n    uchar auStack104 [16];\n    ulong auStack88 [2];\n    ulong uStack72;\n    uchar auStack64 [16];\n    ulong auStack48 [2];\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (auStack456 < *(unaff_R14 + 0x10) || auStack456 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*(in_RAX + 0xb3) != '\\0') {\n        fcn.00432280();\n        return 0;\n    }\n    if (unaff_EBX == 0x77) {\n        iVar2 = fcn.0040a140(*(in_RAX + 0x20));\n        if ((iVar2 == 0) || (*(in_RAX + 0xb4) == '\\0')) {\n            fcn.00487080();\n            fcn.00432280();\n            return 1;\n        }\n        unaff_EBX = 0x76;\n    }\n    uStack184 = *(in_RAX + 0x18);\n    iVar2 = fcn.0040a140(*(in_RAX + 0x20));\n    auStack24._12_4_ = SUB164(in_XMM15 >> 0x60, 0);\n    if (iVar2 != 0) {\n        uStack32 = *(in_RAX + 0x18);\n        auStack48[0] = 0x4894c0;\n        puStack256 = auStack48;\n        iVar1 = fcn.00431c60();\n        if (iVar1 != 0) {\n            fcn.00432280();\n            return 1;\n        }\n        (**(iVar2 + 0x18))(in_RAX);\n        fcn.00432280();\n        return 1;\n    }\n    if (*(in_RAX + 0x50) == '\\0') {\n        if (unaff_EBX < 0x72) {\n            if ((unaff_EBX != 0x58) && (unaff_EBX != 0x71)) goto code_r0x004890b3;\n        }\n        else if (((unaff_EBX != 0x73) && (unaff_EBX != 0x76)) && (unaff_EBX != 0x78)) goto code_r0x004890b3;\n        iStack208 = *(in_RAX + 0x18);\n        if (iStack208 != 0) {\n            uStack176 = *(in_RAX + 0x20);\n            iVar2 = fcn.0040a140(*(in_RAX + 0x20));\n            if (iVar2 != 0) {\n                uStack112 = *(in_RAX + 0x18);\n                auStack128[0] = 0x4893c0;\n                uVar3 = unaff_EBX;\n                auStack104 = CONCAT412(auStack24._12_4_, CONCAT48(unaff_EBX, *(in_RAX + 0x20)));\n                puStack400 = auStack128;\n                iStack200 = iStack208;\n                iVar1 = fcn.00431c60();\n                if (iVar1 != 0) {\n                    fcn.00432280();\n                    return 1;\n                }\n                (**(iVar2 + 0x18))();\n                fcn.00487be0(auStack128, uVar3);\n                fcn.00432280();\n                return 1;\n            }\n            iVar2 = fcn.0040a140(uStack176);\n            if (iVar2 != 0) {\n                uStack152 = *(in_RAX + 0x18);\n                auStack168[0] = 0x489340;\n                uVar3 = unaff_EBX;\n                auStack144 = CONCAT412(auStack24._12_4_, CONCAT48(unaff_EBX, *(in_RAX + 0x20)));\n                iVar1 = fcn.00431c60();\n                if (iVar1 != 0) {\n                    fcn.00432280();\n                    return 1;\n                }\n                (**(iVar2 + 0x18))();\n                fcn.00487be0(auStack168, uVar3);\n                fcn.00432280();\n                return 1;\n            }\n        }\n    }\n    else {\n        uStack192 = *(in_RAX + 0x18);\n        iVar2 = fcn.0040a140(*(in_RAX + 0x20));\n        if (iVar2 != 0) {\n            uStack72 = *(in_RAX + 0x18);\n            arg1 = *(in_RAX + 0x20);\n            auStack88[0] = 0x489440;\n            auStack64 = CONCAT412(auStack24._12_4_, CONCAT48(unaff_EBX, arg1));\n            puStack328 = auStack88;\n            iVar1 = fcn.00431c60();\n            if (iVar1 != 0) {\n                fcn.00432280();\n                return 1;\n            }\n            (**(iVar2 + 0x18))();\n            fcn.004857c0(arg1);\n            fcn.00432280();\n            return 1;\n        }\n    }\ncode_r0x004890b3:\n    fcn.00432280();\n    return 0;\n}\n",
        "token_count": 1359
    },
    "00489540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00489540(int64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    uint32_t uVar1;\n    ulong arg1_00;\n    char cVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t arg1_01;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint32_t unaff_EDI;\n    ulong in_R9;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack24 [8];\n    int64_t iStack16;\n    \n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    *(in_RAX + 0x18) = unaff_RBX;\n    iVar4 = in_RAX + 0x20;\n    if (*0x5985b0 == 0) {\n        *(in_RAX + 0x20) = arg1;\n    }\n    else {\n        in_RAX = fcn.0045e080(arg1, iVar4, arg3, in_R9);\n    }\n    *(in_RAX + 0x38) = 0;\n    if (*0x5985b0 == 0) {\n        *(in_RAX + 0x28) = in_XMM15;\n    }\n    else {\n        fcn.0045e0a0(arg1, 0, iVar4, in_R9);\n        in_RAX = fcn.0045e0a0(arg1, 0, iVar4, in_R9);\n        arg3 = iVar4;\n    }\n    if (unaff_RBX == 0) {\n        if ((unaff_EDI == 0x54) || (unaff_EDI == 0x76)) {\n            fcn.00484a20(5);\n        }\n        else {\n            fcn.00487080();\n        }\n        return;\n    }\n    if (unaff_EDI == 0x54) {\n        if (unaff_RBX == 0) {\n            iVar5 = 0;\n            iVar4 = 0;\n        }\n        else {\n            iVar5 = 0x4cb460;\n            iVar4 = unaff_RBX;\n        }\n        iStack16 = arg1;\n        (**(iVar5 + 0xf8))(iVar4);\n        fcn.004857c0(unaff_RBX);\n        return;\n    }\n    if (unaff_EDI != 0x70) {\n        if (unaff_RBX != 0) {\n            uVar1 = *(unaff_RBX + 0x10);\n            if (uVar1 < 0x8d826c96) {\n                if (uVar1 < 0x5272f85d) {\n                    if (uVar1 < 0x3e2307d5) {\n                        if (uVar1 == 0x778cdb8) {\n                            if (unaff_RBX == 0x496000) {\n                                fcn.00487be0(*(arg1 + 8), *(arg1 + 8));\n                                return;\n                            }\n                        }\n                        else if ((uVar1 == 0x3e2307d4) && (unaff_RBX == 0x4959c0)) {\n                            fcn.004876e0(1, 0x4959c0);\n                            return;\n                        }\n                    }\n                    else if (uVar1 == 0x43daea34) {\n                        if (unaff_RBX == 0x495a80) {\n                            fcn.004876e0(1, 0x495a80);\n                            return;\n                        }\n                    }\n                    else if ((uVar1 == 0x5272f85c) && (unaff_RBX == 0x4961c0)) {\n                        fcn.004876e0(0, 0x4961c0);\n                        return;\n                    }\n                }\n                else if (uVar1 < 0x6bed3cfb) {\n                    if (uVar1 == 0x64fd0d3c) {\n                        if (unaff_RBX == 0x496080) {\n                            fcn.004876e0(0, 0x496080);\n                            return;\n                        }\n                    }\n                    else if ((uVar1 == 0x6bed3cfa) && (unaff_RBX == 0x495a00)) {\n                        fcn.004876e0(1, 0x495a00);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0x7688f20c) {\n                    if (unaff_RBX == 0x4954c0) {\n                        fcn.004879e0(unaff_EDI);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0x81044065) {\n                    if (unaff_RBX == 0x495280) {\n                        fcn.00487ce0(*(arg1 + 8), *(arg1 + 8), 0x4a84b6, 6);\n                        return;\n                    }\n                }\n                else if ((uVar1 == 0x8d826c95) && (unaff_RBX == 0x495540)) {\n                    fcn.004878e0(unaff_EDI);\n                    return;\n                }\n            }\n            else if (uVar1 < 0xb00b9f49) {\n                if (uVar1 < 0x93592d95) {\n                    if (uVar1 == 0x8fc52ddb) {\n                        if (unaff_RBX == 0x496140) {\n                            fcn.004876e0(0, 0x496140);\n                            return;\n                        }\n                    }\n                    else if ((uVar1 == 0x93592d94) && (unaff_RBX == 0x495580)) {\n                        fcn.004878e0(unaff_EDI);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0x95738979) {\n                    if (unaff_RBX == 0x496180) {\n                        fcn.004876e0(0, 0x496180);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0x99d6dd43) {\n                    if (unaff_RBX == 0x495a40) {\n                        fcn.004876e0(1, 0x495a40);\n                        return;\n                    }\n                }\n                else if ((uVar1 == 0xb00b9f48) && (unaff_RBX == 0x495400)) {\n                    fcn.004875e0(unaff_EDI);\n                    return;\n                }\n            }\n            else if (uVar1 < 0xcb735793) {\n                if (uVar1 == 0xc1efe3a2) {\n                    if (unaff_RBX == 0x495500) {\n                        fcn.004879e0(unaff_EDI);\n                        return;\n                    }\n                }\n                else if ((uVar1 == 0xcb735792) && (unaff_RBX == 0x495980)) {\n                    fcn.004876e0(1, 0x495980);\n                    return;\n                }\n            }\n            else if (uVar1 == 0xd9632893) {\n                if (unaff_RBX == 0x4960c0) {\n                    fcn.004876e0(0, 0x4960c0);\n                    return;\n                }\n            }\n            else if (uVar1 == 0xdff3a04f) {\n                if (unaff_RBX == 0x4a7880) {\n                    arg1_01 = *(arg1 + 0x10);\n                    arg1_00 = *(arg1 + 8);\n                    if ((arg1_01 != 0) && ((arg1_01 & 0x60) == 0)) {\n                        arg4 = arg1_01;\n                        uVar3 = fcn.00481140(arg1_01);\n                        *(in_RAX + 0x18) = uVar3;\n                        if (*0x5985b0 == 0) {\n                            *(in_RAX + 0x20) = arg1_00;\n                            iVar4 = in_RAX;\n                        }\n                        else {\n                            fcn.0045e0c0(arg1_01, in_RAX, arg3, arg4);\n                            iVar4 = in_RAX;\n                        }\n                        cVar2 = fcn.00488d80();\n                        if (cVar2 != '\\0') {\n                            return;\n                        }\n                    }\n                    fcn.00489d20(arg1_00, iVar4, 0);\n                    return;\n                }\n            }\n            else if ((uVar1 == 0xe927f9e3) && (unaff_RBX == 0x496100)) {\n                fcn.004876e0(0, 0x496100);\n                return;\n            }\n        }\n        iVar4 = arg1;\n        cVar2 = fcn.00488d80();\n        if (cVar2 == '\\0') {\n            iVar5 = *0x545560;\n            if ((*0x545550 != '\\0') && (*0x545558 = unaff_RBX,  iVar5 = arg1,  *0x5985b0 != 0)) {\n                fcn.0045e120(iVar4, unaff_RBX, arg3);\n                iVar5 = *0x545560;\n            }\n            *0x545560 = iVar5;\n            if (unaff_RBX == 0) {\n                unaff_RBX = 0;\n                arg1 = 0;\n            }\n            fcn.00489d20(arg1, unaff_RBX, 0);\n        }\n        return;\n    }\n    iVar5 = *0x545560;\n    if ((*0x545550 != '\\0') && (*0x545558 = unaff_RBX,  iVar5 = arg1,  *0x5985b0 != 0)) {\n        fcn.0045e080(arg1, iVar4, arg3, in_R9);\n        iVar5 = *0x545560;\n    }\n    *0x545560 = iVar5;\n    if (unaff_RBX == 0) {\n        arg1 = 0;\n    }\n    fcn.004883a0(arg1);\n    return;\n}\n",
        "token_count": 2334
    },
    "00489d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00489d20(uint64_t *arg1, int64_t *noname_1, ulong *arg3)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    int64_t *piVar10;\n    uint32_t uVar11;\n    uchar uVar12;\n    int64_t *piVar13;\n    uint64_t *unaff_RBX;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uchar *puVar16;\n    uchar *unaff_RBP;\n    uint32_t unaff_ESI;\n    int64_t *unaff_RDI;\n    int64_t iVar17;\n    ulong *in_R9;\n    uint64_t uVar18;\n    ulong *in_R10;\n    int64_t unaff_R14;\n    bool bVar19;\n    \ncode_r0x00489d20:\n    puVar16 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x158 && *0x20 + -0x158 != *(unaff_R14 + 0x10)) {\n        puVar16 = *0x20 + -0x1d8;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x30) = arg3;\n        *(*0x20 + 0x28) = unaff_ESI;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0xd8) = unaff_RDI;\n        *(*0x20 + -0x78) = arg1;\n        *(*0x20 + -0x80) = unaff_RBX;\n        if (((0 < arg3) && (unaff_RDI != NULL)) && ((unaff_RDI & 0x60) == 0)) {\n            *(*0x20 + -0x1e0) = 0x489dc5;\n            uVar3 = fcn.00481140(unaff_RDI);\n            iVar17 = *(*0x20 + 8);\n            *(iVar17 + 0x18) = uVar3;\n            if (*0x5985b0 == 0) {\n                *(iVar17 + 0x20) = arg1;\n            }\n            else {\n                *(*0x20 + -0x1e0) = 0x489df1;\n                fcn.0045e0c0(iVar17 + 0x20, noname_1, arg3, in_R9);\n            }\n            *(*0x20 + -0x1e0) = 0x489e05;\n            cVar2 = fcn.00488d80();\n            if (cVar2 != '\\0') {\n                return;\n            }\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + -0x78);\n            unaff_RBX = *(*0x20 + -0x80);\n            unaff_ESI = *(*0x20 + 0x28);\n            unaff_RDI = *(*0x20 + -0xd8);\n            arg3 = *(*0x20 + 0x30);\n        }\n        in_RAX[3] = 0;\n        noname_1 = unaff_RDI;\n        if (*0x5985b0 == 0) {\n            in_RAX[4] = 0;\n        }\n        else {\n            *(*0x20 + -0x1e0) = 0x489e7a;\n            in_RAX = fcn.0045e100(arg1, in_RAX + 4, 0, unaff_RDI);\n            in_R10 = arg3;\n        }\n        in_RAX[7] = noname_1;\n        if (*0x5985b0 == 0) {\n            in_RAX[5] = unaff_RBX;\n            in_RAX[6] = arg1;\n        }\n        else {\n            piVar10 = in_RAX + 5;\n            *(*0x20 + -0x1e0) = 0x489ea6;\n            fcn.0045e0c0(arg1, piVar10, arg3, noname_1);\n            *(*0x20 + -0x1e0) = 0x489eaf;\n            in_RAX = fcn.0045e080(arg1, piVar10, arg3, noname_1);\n        }\n        uVar11 = noname_1;\n        unaff_RDI = uVar11 & 0x1f;\n        if (0x1a < unaff_RDI) {\n            *(*0x20 + -0x1e0) = 0x48aed1;\n            fcn.00486dc0(arg1);\n            return;\n        }\n        *(*0x20 + -0xe0) = unaff_RDI;\n        in_R9 = 0x4cb180;\n        switch(unaff_RDI) {\n        case NULL:\n            if (arg3 == NULL) {\n                uVar18 = in_RAX[1] + 0x17;\n                uVar15 = in_RAX[2];\n                iVar17 = *in_RAX;\n                if (uVar15 < uVar18) {\n                    *(*0x20 + -0xe8) = in_RAX[1];\n                    *(*0x20 + -0x1e0) = 0x489f1e;\n                    iVar17 = fcn.00445800(uVar15);\n                }\n                *(*0x20 + -0xe8) = uVar18;\n                *(*0x20 + -0x88) = iVar17;\n                *(*0x20 + -0xf0) = uVar15;\n                uVar5 = 0x17;\n                *(*0x20 + -0x1e0) = 0x489f59;\n                fcn.0045eda0(0x17);\n                puVar9 = *(*0x20 + 8);\n                puVar9[1] = *(*0x20 + -0xe8);\n                uVar3 = *(*0x20 + -0xf0);\n                puVar9[2] = uVar3;\n                if (*0x5985b0 == 0) {\n                    *puVar9 = *(*0x20 + -0x88);\n                    return;\n                }\n                *(*0x20 + -0x1e0) = 0x489f9f;\n                fcn.0045df80(uVar5, uVar3, iVar17, in_R9);\n                return;\n            }\n            if (unaff_ESI != 0x76) {\n                *(*0x20 + -0x1e0) = 0x48a039;\n                fcn.00487080();\n                return;\n            }\n            iVar17 = in_RAX[1];\n            uVar18 = iVar17 + 5;\n            uVar15 = in_RAX[2];\n            iVar6 = *in_RAX;\n            if (uVar15 < uVar18) {\n                *(*0x20 + -0xe8) = iVar17;\n                *(*0x20 + -0x1e0) = 0x489fe5;\n                iVar6 = fcn.00445800(uVar15);\n                in_RAX = *(*0x20 + 8);\n                iVar17 = *(*0x20 + -0xe8);\n            }\n            *(iVar6 + iVar17) = 0x6c696e3c;\n            *(iVar6 + 4 + iVar17) = 0x3e;\n            in_RAX[1] = uVar18;\n            in_RAX[2] = uVar15;\n            if (*0x5985b0 == 0) {\n                *in_RAX = iVar6;\n                return;\n            }\n            *(*0x20 + -0x1e0) = 0x48a02d;\n            fcn.0045e100(uVar15, uVar18, iVar6, in_R9);\n            return;\n        case 0x1:\n            *(*0x20 + -0x1e0) = 0x48a048;\n            fcn.004875e0(unaff_ESI);\n            return;\n        case 0x2:\n        case 0x3:\n        case 0x4:\n        case 0x5:\n        case 0x6:\n            goto code_r0x0048a04d;\n        default:\n            if (unaff_RDI < 0xa) {\n                if (unaff_RDI == 0x7) {\n                    uVar18 = *arg1;\ncode_r0x0048a102:\n                    *(*0x20 + -0x1e0) = 0x48a10e;\n                    fcn.004876e0(0, uVar18);\n                    return;\n                }\n                if (unaff_RDI == 0x8) {\n                    uVar18 = *arg1;\n                    goto code_r0x0048a102;\n                }\n                if (unaff_RDI == 0x9) {\n                    uVar18 = *arg1;\n                    goto code_r0x0048a102;\n                }\n            }\n            else {\n                if (unaff_RDI == 0xa) {\n                    uVar18 = *arg1;\n                    goto code_r0x0048a102;\n                }\n                if (unaff_RDI == 0xb) {\n                    uVar18 = *arg1;\n                    goto code_r0x0048a102;\n                }\n                if (unaff_RDI == 0xc) {\n                    uVar18 = *arg1;\n                    goto code_r0x0048a102;\n                }\n            }\n            goto code_r0x0048bb7e;\n        case 0xd:\n            *(*0x20 + -0x1e0) = 0x48a127;\n            fcn.004878e0(unaff_ESI);\n            return;\n        case 0xe:\n            *(*0x20 + -0x1e0) = 0x48a13c;\n            fcn.004878e0(unaff_ESI);\n            return;\n        case 0xf:\n            *(*0x20 + -0x1e0) = 0x48a165;\n            fcn.004879e0(unaff_ESI);\n            return;\n        case 0x10:\n            *(*0x20 + -0x1e0) = 0x48a17f;\n            fcn.004879e0(unaff_ESI);\n            return;\n        case 0x11:\n        case 0x17:\n            if (unaff_ESI < 0x72) {\n                if ((unaff_ESI != 0x58) && (unaff_ESI != 0x71)) goto code_r0x0048aa09;\n            }\n            else if ((unaff_ESI != 0x73) && (unaff_ESI != 0x78)) goto code_r0x0048aa09;\n            if ((noname_1 == NULL) || ((uVar11 >> 9 & 1) != 0)) {\n                *(*0x20 + -0x1e0) = 0x48a895;\n                in_R9 = fcn.00482060(noname_1);\n            }\n            else {\n                in_R9 = 0x4cb460;\n                arg1 = unaff_RBX;\n            }\n            *(*0x20 + -0xd0) = arg1;\n            *(*0x20 + -0x160) = in_R9;\n            pcVar1 = in_R9[9];\n            *(*0x20 + -0x1e0) = 0x48a8ae;\n            iVar17 = (*pcVar1)();\n            pcVar1 = *(iVar17 + 0x98);\n            *(*0x20 + -0x1e0) = 0x48a8ba;\n            iVar17 = (*pcVar1)();\n            if (iVar17 == 8) {\n                if (*(*0x20 + -0xe0) == 0x17) {\n                    if (*0x544b48 == *(*0x20 + -0x80)) {\n                        piVar13 = *(*0x20 + -0x78);\n                        iVar17 = *piVar13;\n                        piVar10 = piVar13[2];\n                        piVar13 = piVar13[1];\n                    }\n                    else {\n                        piVar13 = *(*0x20 + -0x78);\n                        piVar10 = *(*0x20 + -0xd8);\n                        *(*0x20 + -0x1e0) = 0x48a9ca;\n                        iVar17 = fcn.0047f760(piVar10);\n                    }\n                }\n                else {\n                    uVar3 = *(*0x20 + -0xd8);\n                    if ((uVar3 >> 8 & 1) == 0) {\n                        *(*0x20 + -0x1e0) = 0x48a8ff;\n                        uVar3 = fcn.00481340(uVar3);\n                        *(*0x20 + -0x158) = uVar3;\n                        *(*0x20 + -0x1e0) = 0x48a919;\n                        iVar17 = fcn.00445720(uVar3);\n                        *(*0x20 + -0x90) = iVar17;\n                        iVar6 = 0;\n                        do {\n                            piVar10 = *(*0x20 + -0x158);\n                            piVar13 = piVar10;\n                            if (piVar10 <= iVar6) goto code_r0x0048b677;\n                            *(*0x20 + -0x118) = iVar6;\n                            puVar9 = *(*0x20 + -0x78);\n                            uVar3 = *(*0x20 + -0xd8);\n                            *(*0x20 + -0x1e0) = 0x48b745;\n                            fcn.00480f80(uVar3);\n                            uVar18 = uVar3 & 0x1f;\n                            *(*0x20 + -0xe0) = uVar18;\n                            if (uVar18 < 10) {\n                                if (uVar18 == 7) {\n                                    uVar12 = *puVar9;\n                                }\n                                else if (uVar18 == 8) {\n                                    uVar12 = *puVar9;\n                                }\n                                else {\n                                    if (uVar18 != 9) goto code_r0x0048b7b9;\n                                    uVar12 = *puVar9;\n                                }\n                            }\n                            else if (uVar18 == 10) {\n                                uVar12 = *puVar9;\n                            }\n                            else if (uVar18 == 0xb) {\n                                uVar12 = *puVar9;\n                            }\n                            else {\n                                if (uVar18 != 0xc) goto code_r0x0048b7b9;\n                                uVar12 = *puVar9;\n                            }\n                            iVar6 = *(*0x20 + -0x118);\n                            iVar17 = *(*0x20 + -0x90);\n                            *(iVar17 + iVar6) = uVar12;\n                            iVar6 = iVar6 + 1;\n                        } while( true );\n                    }\n                    *(*0x20 + -0x1e0) = 0x48a93d;\n                    fcn.00481340(uVar3);\n                    piVar13 = *(*0x20 + -0x78);\n                    piVar10 = *(*0x20 + -0xd8);\n                    *(*0x20 + -0x1e0) = 0x48a95f;\n                    iVar17 = fcn.00481c60(piVar10);\n                    if (*0x544b48 == iVar17) {\n                        iVar17 = *piVar13;\n                        piVar10 = piVar13[2];\n                        piVar13 = piVar13[1];\n                    }\n                    else {\n                        *(*0x20 + -0x1e0) = 0x48a97e;\n                        iVar17 = fcn.0047f760(piVar10);\n                    }\n                }\ncode_r0x0048b677:\n                *(*0x20 + -0xf8) = piVar10;\n                *(*0x20 + -0x100) = piVar13;\n                *(*0x20 + -0x98) = iVar17;\n                pcVar1 = *(*(*0x20 + -0x160) + 0xf8);\n                *(*0x20 + -0x1e0) = 0x48b6a5;\n                uVar3 = (*pcVar1)();\n                *(*0x20 + -0x1e0) = 0x48b6d7;\n                fcn.00487ce0(*(*0x20 + -0x100), iVar17, uVar3, piVar13);\n                return;\n            }\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + -0x78);\n            noname_1 = *(*0x20 + -0xd8);\n            unaff_RBX = *(*0x20 + -0x80);\n            unaff_RDI = *(*0x20 + -0xe0);\n            arg3 = *(*0x20 + 0x30);\ncode_r0x0048aa09:\n            if (*(in_RAX + 10) == '\\0') {\n                iVar17 = in_RAX[1];\n                uVar15 = iVar17 + 1;\n                iVar6 = *in_RAX;\n                uVar18 = in_RAX[2];\n                if (uVar18 < uVar15) {\n                    *(*0x20 + -0x1e0) = 0x48ac69;\n                    uVar14 = uVar15;\n                    iVar6 = fcn.00445800(uVar18);\n                    piVar10 = *(*0x20 + 8);\n                    piVar10[2] = uVar18;\n                    if (*0x5985b0 == 0) {\n                        *piVar10 = iVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x1e0) = 0x48ac88;\n                        iVar6 = fcn.0045df80(uVar18, noname_1, arg3, uVar14);\n                    }\n                    arg1 = *(*0x20 + -0x78);\n                    noname_1 = *(*0x20 + -0xd8);\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    arg3 = *(*0x20 + 0x30);\n                    in_RAX = *(*0x20 + 8);\n                }\n                in_RAX[1] = uVar15;\n                *(iVar17 + iVar6) = 0x5b;\n                iVar17 = 0;\n                while( true ) {\n                    *(*0x20 + -0x128) = iVar17;\n                    if (unaff_RDI == 0x17) {\n                        uVar18 = arg1[1];\n                    }\n                    else {\n                        *(*0x20 + -0x1e0) = 0x48b35a;\n                        uVar18 = fcn.00481340(noname_1);\n                        arg1 = *(*0x20 + -0x78);\n                        noname_1 = *(*0x20 + -0xd8);\n                        arg3 = *(*0x20 + 0x30);\n                        iVar17 = *(*0x20 + -0x128);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    if (uVar18 <= iVar17) break;\n                    if (0 < iVar17) {\n                        iVar6 = in_RAX[1];\n                        uVar15 = iVar6 + 1;\n                        iVar7 = *in_RAX;\n                        uVar18 = in_RAX[2];\n                        if (uVar18 < uVar15) {\n                            *(*0x20 + -0x1e0) = 0x48b3df;\n                            iVar7 = fcn.00445800(uVar18);\n                            piVar10 = *(*0x20 + 8);\n                            piVar10[2] = uVar18;\n                            if (*0x5985b0 == 0) {\n                                *piVar10 = iVar7;\n                            }\n                            else {\n                                *(*0x20 + -0x1e0) = 0x48b3fe;\n                                iVar7 = fcn.0045df80(uVar18, noname_1, arg3, iVar17);\n                            }\n                            arg1 = *(*0x20 + -0x78);\n                            noname_1 = *(*0x20 + -0xd8);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        in_RAX[1] = uVar15;\n                        *(iVar6 + iVar7) = 0x20;\n                    }\n                    *(*0x20 + -0x1e0) = 0x48b2a7;\n                    fcn.00480f80(noname_1);\n                    *(*0x20 + -0x1e0) = 0x48b2d3;\n                    fcn.00489d20(arg1, *(*0x20 + 0x30) + 1, *(*0x20 + 0x30) + 1);\n                    iVar17 = *(*0x20 + -0x128) + 1;\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + -0x78);\n                    noname_1 = *(*0x20 + -0xd8);\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    arg3 = *(*0x20 + 0x30);\n                }\n                iVar6 = in_RAX[1];\n                uVar15 = iVar6 + 1;\n                iVar7 = *in_RAX;\n                uVar18 = in_RAX[2];\n                iVar8 = iVar7;\n                if (uVar18 < uVar15) {\n                    *(*0x20 + -0x1e0) = 0x48b47a;\n                    iVar8 = fcn.00445800(uVar18);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[2] = uVar18;\n                    if (*0x5985b0 == 0) {\n                        *in_RAX = iVar8;\n                    }\n                    else {\n                        *(*0x20 + -0x1e0) = 0x48b499;\n                        iVar8 = fcn.0045df80(uVar18, iVar7, arg3, iVar17);\n                    }\n                }\n                in_RAX[1] = uVar15;\n                *(iVar6 + iVar8) = 0x5d;\n                return;\n            }\n            if ((noname_1 == NULL) || ((noname_1 >> 9 & 1) != 0)) {\n                *(*0x20 + -0x1e0) = 0x48aa35;\n                iVar17 = fcn.00482060(noname_1);\n            }\n            else {\n                iVar17 = 0x4cb460;\n                arg1 = unaff_RBX;\n            }\n            pcVar1 = *(iVar17 + 0xf8);\n            *(*0x20 + -0x1e0) = 0x48aa44;\n            uVar3 = (*pcVar1)();\n            piVar10 = *(*0x20 + 8);\n            iVar6 = piVar10[1];\n            uVar18 = iVar6 + arg1;\n            uVar15 = piVar10[2];\n            iVar7 = *piVar10;\n            if (uVar15 < uVar18) {\n                *(*0x20 + -0xc0) = uVar3;\n                *(*0x20 + -0x150) = arg1;\n                *(*0x20 + -0xe8) = iVar6;\n                *(*0x20 + -0x1e0) = 0x48aa95;\n                iVar7 = fcn.00445800(uVar15);\n                iVar6 = *(*0x20 + -0xe8);\n                arg1 = *(*0x20 + -0x150);\n            }\n            *(*0x20 + -0xe8) = uVar15;\n            *(*0x20 + -0xf0) = uVar18;\n            *(*0x20 + -0x88) = iVar7;\n            iVar6 = iVar6 + iVar7;\n            *(*0x20 + -0x1e0) = 0x48aadf;\n            fcn.0045eda0(arg1);\n            iVar8 = *(*0x20 + -0xf0);\n            piVar10 = *(*0x20 + 8);\n            piVar10[1] = iVar8;\n            uVar18 = *(*0x20 + -0xe8);\n            piVar10[2] = uVar18;\n            if (*0x5985b0 == 0) {\n                iVar6 = *(*0x20 + -0x88);\n                *piVar10 = iVar6;\n            }\n            else {\n                *(*0x20 + -0x1e0) = 0x48ab25;\n                iVar6 = fcn.0045df80(uVar18, iVar6, iVar7, iVar17);\n            }\n            iVar7 = *(*0x20 + -0xe0);\n            if (iVar7 == 0x17) {\n                piVar13 = *(*0x20 + -0x78);\n                if (*piVar13 == 0) {\n                    uVar15 = iVar8 + 5;\n                    if (uVar18 < uVar15) {\n                        *(*0x20 + -0x1e0) = 0x48ab65;\n                        iVar6 = fcn.00445800(uVar18);\n                        piVar10 = *(*0x20 + 8);\n                        iVar8 = *(*0x20 + -0xf0);\n                    }\n                    *(iVar6 + iVar8) = 0x6c696e28;\n                    *(iVar6 + 4 + iVar8) = 0x29;\n                    piVar10[1] = uVar15;\n                    piVar10[2] = uVar18;\n                    if (*0x5985b0 == 0) {\n                        *piVar10 = iVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x1e0) = 0x48ab9f;\n                        fcn.0045df80(uVar18, uVar15, piVar13, iVar17);\n                    }\n                    return;\n                }\n            }\n            else {\n                piVar13 = *(*0x20 + -0x78);\n            }\n            if (uVar18 < iVar8 + 1U) {\n                *(*0x20 + -0x1e0) = 0x48abd6;\n                iVar6 = fcn.00445800(uVar18);\n                piVar10 = *(*0x20 + 8);\n                piVar10[2] = uVar18;\n                if (*0x5985b0 == 0) {\n                    *piVar10 = iVar6;\n                    iVar7 = *(*0x20 + -0xe0);\n                }\n                else {\n                    *(*0x20 + -0x1e0) = 0x48ac05;\n                    iVar6 = fcn.0045df80(uVar18, iVar7, piVar13, iVar17);\n                    iVar7 = *(*0x20 + -0xe0);\n                }\n                piVar13 = *(*0x20 + -0x78);\n            }\n            piVar10[1] = iVar8 + 1U;\n            *(iVar8 + iVar6) = 0x7b;\n            uVar3 = *(*0x20 + -0xd8);\n            iVar17 = 0;\n            while( true ) {\n                *(*0x20 + -0x120) = iVar17;\n                if (iVar7 == 0x17) {\n                    iVar6 = piVar13[1];\n                }\n                else {\n                    *(*0x20 + -0x1e0) = 0x48b537;\n                    iVar6 = fcn.00481340(uVar3);\n                    uVar3 = *(*0x20 + -0xd8);\n                    iVar7 = *(*0x20 + -0xe0);\n                    iVar17 = *(*0x20 + -0x120);\n                    piVar10 = *(*0x20 + 8);\n                    piVar13 = *(*0x20 + -0x78);\n                }\n                if (iVar6 <= iVar17) break;\n                if (0 < iVar17) {\n                    iVar17 = piVar10[1];\n                    uVar18 = iVar17 + 2;\n                    uVar15 = piVar10[2];\n                    iVar6 = *piVar10;\n                    if (uVar15 < uVar18) {\n                        *(*0x20 + -0xe8) = iVar17;\n                        *(*0x20 + -0x1e0) = 0x48b5b3;\n                        iVar6 = fcn.00445800(uVar15);\n                        iVar7 = *(*0x20 + -0xe0);\n                        piVar10 = *(*0x20 + 8);\n                        piVar13 = *(*0x20 + -0x78);\n                        iVar17 = *(*0x20 + -0xe8);\n                        uVar3 = *(*0x20 + -0xd8);\n                    }\n                    *(iVar6 + iVar17) = 0x202c;\n                    piVar10[1] = uVar18;\n                    piVar10[2] = uVar15;\n                    if (*0x5985b0 == 0) {\n                        *piVar10 = iVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x1e0) = 0x48b61c;\n                        fcn.0045e0e0(uVar3, iVar7, piVar13, iVar17);\n                    }\n                }\n                *(*0x20 + -0x1e0) = 0x48b4b8;\n                fcn.00480f80(uVar3);\n                *(*0x20 + -0x1e0) = 0x48b4e5;\n                fcn.00489d20(piVar13, *(*0x20 + 0x30) + 1, *(*0x20 + 0x30) + 1);\n                iVar17 = *(*0x20 + -0x120) + 1;\n                iVar7 = *(*0x20 + -0xe0);\n                piVar10 = *(*0x20 + 8);\n                piVar13 = *(*0x20 + -0x78);\n                uVar3 = *(*0x20 + -0xd8);\n            }\n            iVar17 = piVar10[1];\n            uVar15 = iVar17 + 1;\n            iVar8 = *piVar10;\n            uVar18 = piVar10[2];\n            if (uVar18 < uVar15) {\n                *(*0x20 + -0x1e0) = 0x48b64a;\n                iVar8 = fcn.00445800(uVar18);\n                piVar10 = *(*0x20 + 8);\n                piVar10[2] = uVar18;\n                if (*0x5985b0 == 0) {\n                    *piVar10 = iVar8;\n                }\n                else {\n                    *(*0x20 + -0x1e0) = 0x48b669;\n                    iVar8 = fcn.0045df80(uVar18, iVar7, piVar13, iVar6);\n                }\n            }\n            piVar10[1] = uVar15;\n            *(iVar17 + iVar8) = 0x7d;\n            return;\n        case 0x14:\n            *(*0x20 + -0x1e0) = 0x48a193;\n            piVar10 = noname_1;\n            fcn.00480c80(noname_1);\n            if (noname_1 != NULL) {\n                *(*0x20 + -0x1e0) = 0x48a3d2;\n                fcn.00489d20(arg1, piVar10, *(*0x20 + 0x30) + 1);\n                return;\n            }\n            piVar10 = *(*0x20 + 8);\n            if (*(piVar10 + 10) != '\\0') {\n                iVar17 = *(*0x20 + -0xd8);\n                if ((iVar17 == 0) || ((iVar17 >> 9 & 1) != 0)) {\n                    iVar6 = *(*0x20 + -0x78);\n                    *(*0x20 + -0x1e0) = 0x48a1e8;\n                    iVar17 = fcn.00482060(iVar17);\n                }\n                else {\n                    iVar17 = 0x4cb460;\n                    iVar6 = *(*0x20 + -0x80);\n                }\n                pcVar1 = *(iVar17 + 0xf8);\n                *(*0x20 + -0x1e0) = 0x48a1f4;\n                uVar3 = (*pcVar1)();\n                piVar10 = *(*0x20 + 8);\n                iVar17 = piVar10[1];\n                uVar18 = iVar17 + iVar6;\n                uVar15 = piVar10[2];\n                iVar7 = *piVar10;\n                if (uVar15 < uVar18) {\n                    *(*0x20 + -0xb8) = uVar3;\n                    *(*0x20 + -0x148) = iVar6;\n                    *(*0x20 + -0xe8) = iVar17;\n                    *(*0x20 + -0x1e0) = 0x48a245;\n                    iVar7 = fcn.00445800(uVar15);\n                    iVar17 = *(*0x20 + -0xe8);\n                    iVar6 = *(*0x20 + -0x148);\n                }\n                *(*0x20 + -0xe8) = uVar15;\n                *(*0x20 + -0xf0) = uVar18;\n                *(*0x20 + -0x88) = iVar7;\n                iVar17 = iVar17 + iVar7;\n                *(*0x20 + -0x1e0) = 0x48a28f;\n                fcn.0045eda0(iVar6);\n                iVar6 = *(*0x20 + -0xf0);\n                piVar10 = *(*0x20 + 8);\n                piVar10[1] = iVar6;\n                uVar18 = *(*0x20 + -0xe8);\n                piVar10[2] = uVar18;\n                if (*0x5985b0 == 0) {\n                    iVar17 = *(*0x20 + -0x88);\n                    *piVar10 = iVar17;\n                }\n                else {\n                    *(*0x20 + -0x1e0) = 0x48a2d2;\n                    iVar17 = fcn.0045df80(uVar18, iVar17, iVar7, in_R9);\n                }\n                uVar15 = iVar6 + 5;\n                if (uVar18 < uVar15) {\n                    *(*0x20 + -0x1e0) = 0x48a2f0;\n                    iVar17 = fcn.00445800(uVar18);\n                    piVar10 = *(*0x20 + 8);\n                    iVar6 = *(*0x20 + -0xf0);\n                }\n                *(iVar17 + iVar6) = 0x6c696e28;\n                *(iVar17 + 4 + iVar6) = 0x29;\n                piVar10[1] = uVar15;\n                piVar10[2] = uVar18;\n                if (*0x5985b0 == 0) {\n                    *piVar10 = iVar17;\n                    return;\n                }\n                *(*0x20 + -0x1e0) = 0x48a32f;\n                fcn.0045df80(uVar18, uVar15, iVar7, in_R9);\n                return;\n            }\n            iVar17 = piVar10[1];\n            uVar18 = iVar17 + 5;\n            uVar15 = piVar10[2];\n            iVar6 = *piVar10;\n            if (uVar15 < uVar18) {\n                *(*0x20 + -0xe8) = iVar17;\n                *(*0x20 + -0x1e0) = 0x48a365;\n                iVar6 = fcn.00445800(uVar15);\n                piVar10 = *(*0x20 + 8);\n                iVar17 = *(*0x20 + -0xe8);\n            }\n            *(iVar6 + iVar17) = 0x6c696e3c;\n            *(iVar6 + 4 + iVar17) = 0x3e;\n            piVar10[1] = uVar18;\n            piVar10[2] = uVar15;\n            if (*0x5985b0 == 0) {\n                *piVar10 = iVar6;\n                return;\n            }\n            *(*0x20 + -0x1e0) = 0x48a3a5;\n            fcn.0045df80(uVar15, uVar18, arg3, in_R9);\n            return;\n        case 0x15:\n            if (*(in_RAX + 10) == '\\0') {\n                puVar9 = in_RAX[1];\n                uVar18 = puVar9 + 4;\n                uVar15 = in_RAX[2];\n                in_R9 = *in_RAX;\n                if (uVar15 < uVar18) {\n                    *(*0x20 + -0xe8) = puVar9;\n                    *(*0x20 + -0x1e0) = 0x48a62f;\n                    in_R9 = fcn.00445800(uVar15);\n                    noname_1 = *(*0x20 + -0xd8);\n                    arg3 = *(*0x20 + 0x30);\n                    puVar9 = *(*0x20 + -0xe8);\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + -0x78);\n                }\n                *(in_R9 + puVar9) = 0x5b70616d;\n                in_RAX[1] = uVar18;\n                in_RAX[2] = uVar15;\n                if (*0x5985b0 == 0) {\n                    *in_RAX = in_R9;\n                    in_R9 = puVar9;\n                }\n                else {\n                    *(*0x20 + -0x1e0) = 0x48a698;\n                    fcn.0045e120(arg1, noname_1, arg3);\n                }\n            }\n            else {\n                if ((noname_1 == NULL) || ((uVar11 >> 9 & 1) != 0)) {\n                    *(*0x20 + -0x1e0) = 0x48a408;\n                    iVar17 = fcn.00482060(noname_1);\n                }\n                else {\n                    iVar17 = 0x4cb460;\n                    arg1 = unaff_RBX;\n                }\n                pcVar1 = *(iVar17 + 0xf8);\n                *(*0x20 + -0x1e0) = 0x48a417;\n                uVar3 = (*pcVar1)();\n                piVar10 = *(*0x20 + 8);\n                iVar17 = piVar10[1];\n                uVar18 = arg1 + iVar17;\n                uVar15 = piVar10[2];\n                iVar6 = *piVar10;\n                if (uVar15 < uVar18) {\n                    *(*0x20 + -0xe8) = iVar17;\n                    *(*0x20 + -0x138) = arg1;\n                    *(*0x20 + -0xa8) = uVar3;\n                    *(*0x20 + -0x1e0) = 0x48a465;\n                    iVar6 = fcn.00445800(uVar15);\n                    iVar17 = *(*0x20 + -0xe8);\n                    arg1 = *(*0x20 + -0x138);\n                }\n                *(*0x20 + -0xe8) = uVar18;\n                *(*0x20 + -0x88) = iVar6;\n                *(*0x20 + -0xf0) = uVar15;\n                iVar17 = iVar17 + iVar6;\n                *(*0x20 + -0x1e0) = 0x48a4af;\n                fcn.0045eda0(arg1);\n                iVar7 = *(*0x20 + -0xe8);\n                piVar10 = *(*0x20 + 8);\n                piVar10[1] = iVar7;\n                uVar18 = *(*0x20 + -0xf0);\n                piVar10[2] = uVar18;\n                if (*0x5985b0 == 0) {\n                    iVar17 = *(*0x20 + -0x88);\n                    *piVar10 = iVar17;\n                }\n                else {\n                    *(*0x20 + -0x1e0) = 0x48a4f2;\n                    iVar17 = fcn.0045df80(uVar18, iVar17, iVar6, in_R9);\n                }\n                noname_1 = *(*0x20 + -0xd8);\n                if ((noname_1 >> 9 & 1) == 0) {\n                    if ((noname_1 >> 7 & 1) == 0) {\n                        arg3 = *(*0x20 + -0x78);\n                        in_R9 = arg3;\n                    }\n                    else {\n                        arg3 = *(*0x20 + -0x78);\n                        in_R9 = *arg3;\n                    }\n                    if (in_R9 == NULL) {\n                        uVar15 = iVar7 + 5;\n                        if (uVar18 < uVar15) {\n                            *(*0x20 + -0x1e0) = 0x48a5ae;\n                            iVar17 = fcn.00445800(uVar18);\n                            piVar10 = *(*0x20 + 8);\n                            iVar7 = *(*0x20 + -0xe8);\n                        }\n                        *(iVar17 + iVar7) = 0x6c696e28;\n                        *(iVar17 + 4 + iVar7) = 0x29;\n                        piVar10[1] = uVar15;\n                        piVar10[2] = uVar18;\n                        if (*0x5985b0 == 0) {\n                            *piVar10 = iVar17;\n                        }\n                        else {\n                            *(*0x20 + -0x1e0) = 0x48a5e8;\n                            fcn.0045df80(uVar18, uVar15, arg3, in_R9);\n                        }\n                        return;\n                    }\n                }\n                else {\n                    arg3 = *(*0x20 + -0x78);\n                }\n                if (uVar18 < iVar7 + 1U) {\n                    *(*0x20 + -0x1e0) = 0x48a548;\n                    iVar17 = fcn.00445800(uVar18);\n                    piVar10 = *(*0x20 + 8);\n                    piVar10[2] = uVar18;\n                    if (*0x5985b0 == 0) {\n                        *piVar10 = iVar17;\n                    }\n                    else {\n                        *(*0x20 + -0x1e0) = 0x48a567;\n                        iVar17 = fcn.0045df80(uVar18, noname_1, arg3, in_R9);\n                    }\n                    noname_1 = *(*0x20 + -0xd8);\n                    arg3 = *(*0x20 + -0x78);\n                }\n                piVar10[1] = iVar7 + 1U;\n                *(iVar7 + iVar17) = 0x7b;\n            }\n            *(*0x20 + -0x1e0) = 0x48a6a6;\n            puVar4 = fcn.00482ee0(noname_1);\n            *(*0x20 + -200) = puVar4;\n            puVar9 = *puVar4;\n            iVar17 = puVar4[1];\n            *(*0x20 + -0xe8) = iVar17;\n            iVar6 = 0;\n            goto code_r0x0048b840;\n        case 0x16:\n            if (arg3 == NULL) {\n                *(*0x20 + -0x1e0) = 0x48a6d9;\n                iVar17 = fcn.00481aa0(noname_1);\n                bVar19 = iVar17 != 0;\n                arg1 = *(*0x20 + -0x78);\n                arg3 = *(*0x20 + 0x30);\n                noname_1 = *(*0x20 + -0xd8);\n            }\n            else {\n                bVar19 = false;\n            }\n            if (bVar19) {\n                *(*0x20 + -0x1e0) = 0x48a727;\n                uVar3 = fcn.00480c80(noname_1);\n                uVar11 = noname_1 & 0x1f;\n                if (uVar11 < 0x16) {\n                    if ((uVar11 == 0x11) || (uVar11 == 0x15)) {\ncode_r0x0048a756:\n                        piVar10 = *(*0x20 + 8);\n                        iVar17 = piVar10[1];\n                        uVar15 = iVar17 + 1;\n                        iVar6 = *piVar10;\n                        uVar18 = piVar10[2];\n                        piVar13 = piVar10;\n                        if (uVar18 < uVar15) {\n                            *(*0x20 + -0x78) = arg1;\n                            *(*0x20 + -0x80) = uVar3;\n                            *(*0x20 + -0xd8) = noname_1;\n                            *(*0x20 + -0x1e0) = 0x48a7a5;\n                            uVar14 = uVar15;\n                            iVar6 = fcn.00445800(uVar18);\n                            piVar13 = *(*0x20 + 8);\n                            piVar13[2] = uVar18;\n                            if (*0x5985b0 == 0) {\n                                *piVar13 = iVar6;\n                            }\n                            else {\n                                *(*0x20 + -0x1e0) = 0x48a7c5;\n                                iVar6 = fcn.0045df80(uVar18, piVar10, arg3, uVar14);\n                            }\n                            arg1 = *(*0x20 + -0x78);\n                        }\n                        piVar13[1] = uVar15;\n                        *(iVar17 + iVar6) = 0x26;\n                        *(*0x20 + -0x1e0) = 0x48a810;\n                        fcn.00489d20(arg1, piVar13, *(*0x20 + 0x30) + 1);\n                        return;\n                    }\n                }\n                else if ((uVar11 == 0x17) || (uVar11 == 0x19)) goto code_r0x0048a756;\n                arg1 = *(*0x20 + -0x78);\n            }\n        case 0x12:\n        case 0x13:\n        case 0x1a:\n            *(*0x20 + -0x1e0) = 0x48aec7;\n            fcn.004883a0(arg1);\n            return;\n        case 0x18:\n            uVar18 = arg1[1];\n            *(*0x20 + -0x1e0) = 0x48ace5;\n            fcn.00487be0(uVar18, noname_1);\n            return;\n        case 0x19:\n            if (*(in_RAX + 10) != '\\0') {\n                if ((noname_1 == NULL) || ((uVar11 >> 9 & 1) != 0)) {\n                    *(*0x20 + -0x1e0) = 0x48ad16;\n                    iVar17 = fcn.00482060(noname_1);\n                }\n                else {\n                    iVar17 = 0x4cb460;\n                    arg1 = unaff_RBX;\n                }\n                pcVar1 = *(iVar17 + 0xf8);\n                *(*0x20 + -0x1e0) = 0x48ad25;\n                uVar5 = (*pcVar1)();\n                puVar9 = *(*0x20 + 8);\n                iVar17 = puVar9[1];\n                uVar18 = iVar17 + arg1;\n                uVar15 = puVar9[2];\n                uVar3 = *puVar9;\n                if (uVar15 < uVar18) {\n                    *(*0x20 + -0xb0) = uVar5;\n                    *(*0x20 + -0x140) = arg1;\n                    *(*0x20 + -0xe8) = iVar17;\n                    *(*0x20 + -0x1e0) = 0x48ad75;\n                    uVar3 = fcn.00445800(uVar15);\n                    arg1 = *(*0x20 + -0x140);\n                }\n                *(*0x20 + -0xe8) = uVar15;\n                *(*0x20 + -0xf0) = uVar18;\n                *(*0x20 + -0x88) = uVar3;\n                *(*0x20 + -0x1e0) = 0x48adbf;\n                fcn.0045eda0(arg1);\n                in_RAX = *(*0x20 + 8);\n                in_RAX[1] = *(*0x20 + -0xf0);\n                in_RAX[2] = *(*0x20 + -0xe8);\n                if (*0x5985b0 == 0) {\n                    *in_RAX = *(*0x20 + -0x88);\n                }\n                else {\n                    *(*0x20 + -0x1e0) = 0x48ae05;\n                    fcn.0045e0a0(arg1, *(*0x20 + -0x88), uVar3, in_R9);\n                }\n                noname_1 = *(*0x20 + -0xd8);\n                arg3 = *(*0x20 + 0x30);\n            }\n            iVar17 = in_RAX[1];\n            uVar18 = iVar17 + 1;\n            iVar6 = *in_RAX;\n            uVar15 = in_RAX[2];\n            if (uVar15 < uVar18) {\n                *(*0x20 + -0x1e0) = 0x48ae5f;\n                uVar14 = uVar18;\n                iVar6 = fcn.00445800(uVar15);\n                in_RAX = *(*0x20 + 8);\n                in_RAX[2] = uVar15;\n                if (*0x5985b0 == 0) {\n                    *in_RAX = iVar6;\n                }\n                else {\n                    *(*0x20 + -0x1e0) = 0x48ae7e;\n                    iVar6 = fcn.0045df80(uVar15, noname_1, arg3, uVar14);\n                }\n                noname_1 = *(*0x20 + -0xd8);\n                arg3 = *(*0x20 + 0x30);\n            }\n            in_RAX[1] = uVar18;\n            *(iVar17 + iVar6) = 0x7b;\n            iVar17 = 0;\n            while( true ) {\n                *(*0x20 + -0x110) = iVar17;\n                *(*0x20 + -0x1e0) = 0x48af65;\n                iVar6 = fcn.004819c0(noname_1);\n                iVar17 = *(*0x20 + -0x110);\n                if (iVar6 <= iVar17) break;\n                if (iVar17 < 1) {\n                    piVar10 = *(*0x20 + 8);\n                }\n                else {\n                    piVar13 = *(*0x20 + 8);\n                    piVar10 = piVar13;\n                    if (*(piVar13 + 10) == '\\0') {\n                        iVar17 = piVar13[1];\n                        uVar14 = iVar17 + 1;\n                        iVar6 = *piVar13;\n                        uVar15 = piVar13[2];\n                        if (uVar15 < uVar14) {\n                            *(*0x20 + -0x1e0) = 0x48b030;\n                            iVar6 = fcn.00445800(uVar15);\n                            piVar10 = *(*0x20 + 8);\n                            piVar10[2] = uVar15;\n                            if (*0x5985b0 == 0) {\n                                *piVar10 = iVar6;\n                            }\n                            else {\n                                *(*0x20 + -0x1e0) = 0x48b04f;\n                                iVar6 = fcn.0045df80(uVar15, piVar13, arg3, uVar18);\n                            }\n                        }\n                        piVar10[1] = uVar14;\n                        *(iVar17 + iVar6) = 0x20;\n                    }\n                    else {\n                        iVar6 = piVar13[1];\n                        uVar15 = iVar6 + 2;\n                        uVar14 = piVar13[2];\n                        iVar7 = *piVar13;\n                        if (uVar14 < uVar15) {\n                            *(*0x20 + -0xe8) = iVar6;\n                            *(*0x20 + -0x1e0) = 0x48afc5;\n                            iVar7 = fcn.00445800(uVar14);\n                            piVar10 = *(*0x20 + 8);\n                            iVar17 = *(*0x20 + -0x110);\n                            iVar6 = *(*0x20 + -0xe8);\n                        }\n                        *(iVar7 + iVar6) = 0x202c;\n                        piVar10[1] = uVar15;\n                        piVar10[2] = uVar14;\n                        if (*0x5985b0 == 0) {\n                            *piVar10 = iVar7;\n                        }\n                        else {\n                            *(*0x20 + -0x1e0) = 0x48b007;\n                            fcn.0045df80(iVar17, piVar10, uVar15, uVar18);\n                        }\n                    }\n                }\n                if ((*(piVar10 + 0x4f) != '\\0') || (*(piVar10 + 10) != '\\0')) {\n                    iVar17 = *(*0x20 + -0xd8);\n                    if ((iVar17 == 0) || ((iVar17 >> 9 & 1) != 0)) {\n                        *(*0x20 + -0x1e0) = 0x48b0b7;\n                        iVar17 = fcn.00482060(iVar17);\n                    }\n                    else {\n                        iVar17 = 0x4cb460;\n                    }\n                    pcVar1 = *(iVar17 + 0x50);\n                    *(*0x20 + -0x1e0) = 0x48b0cb;\n                    (*pcVar1)();\n                    *(*0x20 + -0x70) = *(*0x20 + -0x1d8);\n                    *(*0x20 + -0x1e8) = unaff_RBP;\n                    *(*0x20 + -0x1e0) = 0x48b0f3;\n                    fcn.0045ea2c();\n                    unaff_RBP = *(*0x20 + -0x1e8);\n                    iVar17 = *(*0x20 + -0x68);\n                    if (iVar17 != 0) {\n                        piVar10 = *(*0x20 + 8);\n                        iVar7 = piVar10[1];\n                        uVar18 = iVar17 + iVar7;\n                        uVar15 = piVar10[2];\n                        iVar6 = *piVar10;\n                        if (uVar15 < uVar18) {\n                            *(*0x20 + -0xe8) = iVar7;\n                            *(*0x20 + -0x130) = iVar17;\n                            *(*0x20 + -0xa0) = *(*0x20 + -0x70);\n                            *(*0x20 + -0x1e0) = 0x48b154;\n                            iVar6 = fcn.00445800(uVar15);\n                            iVar17 = *(*0x20 + -0x130);\n                            iVar7 = *(*0x20 + -0xe8);\n                        }\n                        *(*0x20 + -0xe8) = uVar18;\n                        *(*0x20 + -0x88) = iVar6;\n                        *(*0x20 + -0xf0) = uVar15;\n                        iVar6 = iVar6 + iVar7;\n                        *(*0x20 + -0x1e0) = 0x48b196;\n                        fcn.0045eda0(iVar17);\n                        iVar17 = *(*0x20 + -0xe8);\n                        piVar10 = *(*0x20 + 8);\n                        piVar10[1] = iVar17;\n                        uVar15 = *(*0x20 + -0xf0);\n                        piVar10[2] = uVar15;\n                        if (*0x5985b0 == 0) {\n                            iVar8 = *(*0x20 + -0x88);\n                            *piVar10 = iVar8;\n                        }\n                        else {\n                            *(*0x20 + -0x1e0) = 0x48b1d9;\n                            iVar8 = fcn.0045df80(uVar15, iVar6, iVar7, uVar18);\n                        }\n                        if (uVar15 < iVar17 + 1U) {\n                            *(*0x20 + -0x1e0) = 0x48b1f6;\n                            iVar8 = fcn.00445800(uVar15);\n                            piVar10 = *(*0x20 + 8);\n                            piVar10[2] = uVar15;\n                            if (*0x5985b0 == 0) {\n                                *piVar10 = iVar8;\n                            }\n                            else {\n                                *(*0x20 + -0x1e0) = 0x48b215;\n                                iVar8 = fcn.0045df80(uVar15, iVar6, iVar7, uVar18);\n                            }\n                        }\n                        piVar10[1] = iVar17 + 1U;\n                        *(iVar17 + iVar8) = 0x3a;\n                    }\n                }\n                uVar3 = *(*0x20 + -0x78);\n                *(*0x20 + -0x1e0) = 0x48aefe;\n                fcn.00486d20(*(*0x20 + -0xd8));\n                arg3 = *(*0x20 + 0x30) + 1;\n                *(*0x20 + -0x1e0) = 0x48af2a;\n                fcn.00489d20(uVar3, arg3, arg3);\n                iVar17 = *(*0x20 + -0x110) + 1;\n                noname_1 = *(*0x20 + -0xd8);\n            }\n            piVar10 = *(*0x20 + 8);\n            iVar17 = piVar10[1];\n            uVar14 = iVar17 + 1;\n            iVar6 = *piVar10;\n            uVar15 = piVar10[2];\n            piVar13 = piVar10;\n            if (uVar15 < uVar14) {\n                *(*0x20 + -0x1e0) = 0x48b265;\n                iVar6 = fcn.00445800(uVar15);\n                piVar13 = *(*0x20 + 8);\n                piVar13[2] = uVar15;\n                if (*0x5985b0 == 0) {\n                    *piVar13 = iVar6;\n                }\n                else {\n                    *(*0x20 + -0x1e0) = 0x48b285;\n                    iVar6 = fcn.0045df80(uVar15, piVar10, arg3, uVar18);\n                }\n            }\n            piVar13[1] = uVar14;\n            *(iVar17 + iVar6) = 0x7d;\n            return;\n        }\n    }\n    goto code_r0x0048bbf3;\ncode_r0x0048b7b9:\n    *(*0x20 + -0x1e0) = 0x48b7c5;\n    puVar9 = fcn.0040c6e0();\n    puVar9[1] = 0x12;\n    *puVar9 = 0x4aaa2f;\n    puVar9[2] = *(*0x20 + -0xe0);\n    *(*0x20 + -0x1e0) = 0x48b7f2;\n    fcn.00432de0();\n    do {\n        uVar3 = in_R9[in_R10 * 3 + 1];\n        arg3 = *(*0x20 + -0xf0);\n        *(*0x20 + -0x1e0) = 0x48b818;\n        fcn.00489d20(uVar3, in_R10 * 3, arg3);\n        puVar9 = *(*0x20 + -0x78) + 0x18;\n        iVar6 = *(*0x20 + -0x108) + 1;\n        iVar17 = *(*0x20 + -0xe8);\ncode_r0x0048b840:\n        if (iVar17 <= iVar6) {\n            piVar10 = *(*0x20 + 8);\n            if (*(piVar10 + 10) != '\\0') {\n                iVar17 = piVar10[1];\n                uVar15 = iVar17 + 1;\n                iVar6 = *piVar10;\n                uVar18 = piVar10[2];\n                piVar13 = piVar10;\n                if (uVar18 < uVar15) {\n                    *(*0x20 + -0x1e0) = 0x48baed;\n                    iVar6 = fcn.00445800(uVar18);\n                    piVar13 = *(*0x20 + 8);\n                    piVar13[2] = uVar18;\n                    if (*0x5985b0 == 0) {\n                        *piVar13 = iVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x1e0) = 0x48bb0c;\n                        iVar6 = fcn.0045df80(uVar18, piVar10, arg3, in_R9);\n                    }\n                }\n                piVar13[1] = uVar15;\n                *(iVar17 + iVar6) = 0x7d;\n                return;\n            }\n            iVar17 = piVar10[1];\n            uVar15 = iVar17 + 1;\n            iVar6 = *piVar10;\n            uVar18 = piVar10[2];\n            piVar13 = piVar10;\n            if (uVar18 < uVar15) {\n                *(*0x20 + -0x1e0) = 0x48bb45;\n                iVar6 = fcn.00445800(uVar18);\n                piVar13 = *(*0x20 + 8);\n                piVar13[2] = uVar18;\n                if (*0x5985b0 == 0) {\n                    *piVar13 = iVar6;\n                }\n                else {\n                    *(*0x20 + -0x1e0) = 0x48bb65;\n                    iVar6 = fcn.0045df80(uVar18, piVar10, arg3, in_R9);\n                }\n            }\n            piVar13[1] = uVar15;\n            *(iVar17 + iVar6) = 0x5d;\n            return;\n        }\n        *(*0x20 + -0x108) = iVar6;\n        *(*0x20 + -0x78) = puVar9;\n        uVar3 = *puVar9;\n        uVar5 = puVar9[1];\n        unaff_RDI = puVar9[2];\n        if (0 < iVar6) {\n            *(*0x20 + -0xd8) = unaff_RDI;\n            *(*0x20 + -0x90) = uVar5;\n            *(*0x20 + -0x80) = uVar3;\n            piVar10 = *(*0x20 + 8);\n            if (*(piVar10 + 10) == '\\0') {\n                iVar17 = piVar10[1];\n                uVar15 = iVar17 + 1;\n                iVar6 = *piVar10;\n                uVar18 = piVar10[2];\n                if (uVar18 < uVar15) {\n                    *(*0x20 + -0x1e0) = 0x48b992;\n                    iVar6 = fcn.00445800(uVar18);\n                    piVar10 = *(*0x20 + 8);\n                    piVar10[2] = uVar18;\n                    if (*0x5985b0 == 0) {\n                        *piVar10 = iVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x1e0) = 0x48b9b1;\n                        iVar6 = fcn.0045df80(uVar18, puVar9, arg3, uVar5);\n                    }\n                    unaff_RDI = *(*0x20 + -0xd8);\n                    uVar5 = *(*0x20 + -0x90);\n                    piVar10 = *(*0x20 + 8);\n                }\n                piVar10[1] = uVar15;\n                *(iVar17 + iVar6) = 0x20;\n            }\n            else {\n                iVar17 = piVar10[1];\n                uVar18 = iVar17 + 2;\n                uVar15 = piVar10[2];\n                iVar7 = *piVar10;\n                if (uVar15 < uVar18) {\n                    *(*0x20 + -0xf0) = iVar17;\n                    *(*0x20 + -0x1e0) = 0x48b8cf;\n                    iVar7 = fcn.00445800(uVar15);\n                    unaff_RDI = *(*0x20 + -0xd8);\n                    uVar5 = *(*0x20 + -0x90);\n                    piVar10 = *(*0x20 + 8);\n                    iVar17 = *(*0x20 + -0xf0);\n                    iVar6 = *(*0x20 + -0x108);\n                }\n                *(iVar7 + iVar17) = 0x202c;\n                piVar10[1] = uVar18;\n                piVar10[2] = uVar15;\n                if (*0x5985b0 == 0) {\n                    *piVar10 = iVar7;\n                }\n                else {\n                    *(*0x20 + -0x1e0) = 0x48b956;\n                    fcn.0045e0a0(iVar6, iVar7, unaff_RDI, uVar5);\n                }\n            }\n        }\n        arg3 = *(*0x20 + 0x30) + 1;\n        *(*0x20 + -0xf0) = arg3;\n        unaff_ESI = *(*0x20 + 0x28);\n        *(*0x20 + -0x1e0) = 0x48ba34;\n        fcn.00489d20(uVar5, arg3, arg3);\n        piVar10 = *(*0x20 + 8);\n        iVar17 = piVar10[1];\n        uVar15 = iVar17 + 1;\n        iVar6 = *piVar10;\n        uVar18 = piVar10[2];\n        iVar7 = iVar6;\n        if (uVar18 < uVar15) {\n            unaff_ESI = 0x496180;\n            *(*0x20 + -0x1e0) = 0x48ba65;\n            iVar7 = fcn.00445800(uVar18);\n            piVar10 = *(*0x20 + 8);\n            piVar10[2] = uVar18;\n            unaff_RDI = piVar10;\n            if (*0x5985b0 == 0) {\n                *piVar10 = iVar7;\n            }\n            else {\n                *(*0x20 + -0x1e0) = 0x48ba85;\n                iVar7 = fcn.0045df80(uVar18, iVar6, arg3, uVar5);\n            }\n        }\n        piVar10[1] = uVar15;\n        *(iVar17 + iVar7) = 0x3a;\n        noname_1 = *(*0x20 + -200);\n        in_R9 = noname_1[3];\n        puVar9 = noname_1[4];\n        in_R10 = *(*0x20 + -0x108);\n    } while (in_R10 < puVar9);\n    *(*0x20 + -0x1e0) = 0x48bb7e;\n    fcn.0045e420(puVar9);\ncode_r0x0048bb7e:\n    *(*0x20 + -0x1e0) = 0x48bb8a;\n    puVar9 = fcn.0040c6e0();\n    puVar9[1] = 0x12;\n    *puVar9 = 0x4aaa2f;\n    puVar9[2] = *(*0x20 + -0xe0);\n    *(*0x20 + -0x1e0) = 0x48bbb7;\n    fcn.00432de0();\n    goto code_r0x0048bbb7;\ncode_r0x0048a04d:\n    if (unaff_RDI < 0x4) {\n        if (unaff_RDI == 0x2) {\n            uVar18 = *arg1;\n        }\n        else {\n            if (unaff_RDI != 0x3) goto code_r0x0048bbb7;\n            uVar18 = *arg1;\n        }\n        goto code_r0x0048a098;\n    }\n    if (unaff_RDI == 0x4) {\n        uVar18 = *arg1;\ncode_r0x0048a098:\n        *(*0x20 + -0x1e0) = 0x48a0a7;\n        fcn.004876e0(1, uVar18);\n        return;\n    }\n    if (unaff_RDI == 0x5) {\n        uVar18 = *arg1;\n        goto code_r0x0048a098;\n    }\n    if (unaff_RDI == 0x6) {\n        uVar18 = *arg1;\n        goto code_r0x0048a098;\n    }\ncode_r0x0048bbb7:\n    *(*0x20 + -0x1e0) = 0x48bbc5;\n    unaff_RBX = fcn.0040c6e0();\n    unaff_RBX[1] = 0x11;\n    *unaff_RBX = 0x4aa5e8;\n    arg1 = *(*0x20 + -0xe0);\n    unaff_RBX[2] = arg1;\n    *(*0x20 + -0x1e0) = 0x48bbf2;\n    in_RAX = fcn.00432de0();\ncode_r0x0048bbf3:\n    *(puVar16 + 8) = in_RAX;\n    *(puVar16 + 0x10) = unaff_RBX;\n    *(puVar16 + 0x18) = arg1;\n    *(puVar16 + 0x20) = unaff_RDI;\n    *(puVar16 + 0x28) = unaff_ESI;\n    *(puVar16 + 0x30) = arg3;\n    *(puVar16 + -8) = 0x48bc15;\n    fcn.0045bdc0();\n    in_RAX = *(puVar16 + 8);\n    unaff_RBX = *(puVar16 + 0x10);\n    arg1 = *(puVar16 + 0x18);\n    unaff_RDI = *(puVar16 + 0x20);\n    unaff_ESI = *(puVar16 + 0x28);\n    arg3 = *(puVar16 + 0x30);\n    *0x20 = puVar16;\n    goto code_r0x00489d20;\n}\n",
        "token_count": 16136
    },
    "0048c060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048c060(void)\n\n{\n    int64_t arg2;\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uint64_t arg1;\n    uint64_t arg3;\n    uint32_t unaff_EBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    arg2 = in_RAX[1];\n    arg3 = arg2 + 2;\n    arg1 = in_RAX[2];\n    iVar1 = *in_RAX;\n    if (arg1 < arg3) {\n        iVar1 = fcn.00445800(arg1);\n    }\n    *(iVar1 + arg2) = 0x2125;\n    in_RAX[1] = arg3;\n    in_RAX[2] = arg1;\n    if (*0x5985b0 == 0) {\n        *in_RAX = iVar1;\n        piVar2 = in_RAX;\n    }\n    else {\n        piVar2 = fcn.0045e120(arg1, arg2, arg3);\n    }\n    uVar3 = arg3;\n    if (unaff_EBX < 0x80) {\n        if (arg1 < arg3 + 1) {\n            iVar1 = fcn.00445800(arg1);\n            piVar2 = in_RAX;\n        }\n        *(arg3 + iVar1) = unaff_EBX;\n        arg3 = arg3 + 1;\n    }\n    else {\n        iVar1 = fcn.0046e2a0(arg1);\n        piVar2 = in_RAX;\n    }\n    piVar2[1] = arg3;\n    piVar2[2] = arg1;\n    if (*0x5985b0 == 0) {\n        *piVar2 = iVar1;\n    }\n    else {\n        piVar2 = fcn.0045e120(arg1, arg3, uVar3);\n    }\n    if (arg1 < arg3 + 10) {\n        iVar1 = fcn.00445800(arg1);\n        piVar2 = in_RAX;\n    }\n    *(iVar1 + arg3) = 0x45444e4944414228;\n    *(iVar1 + 8 + arg3) = 0x2958;\n    piVar2[1] = arg3 + 10;\n    piVar2[2] = arg1;\n    if (*0x5985b0 == 0) {\n        *piVar2 = iVar1;\n    }\n    else {\n        fcn.0045e120(arg1, arg3, uVar3);\n    }\n    return;\n}\n",
        "token_count": 635
    },
    "0048c200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048c200(void)\n\n{\n    int64_t arg2;\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uint64_t arg1;\n    uint64_t arg3;\n    uint32_t unaff_EBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    arg2 = in_RAX[1];\n    arg3 = arg2 + 2;\n    arg1 = in_RAX[2];\n    iVar1 = *in_RAX;\n    if (arg1 < arg3) {\n        iVar1 = fcn.00445800(arg1);\n    }\n    *(iVar1 + arg2) = 0x2125;\n    in_RAX[1] = arg3;\n    in_RAX[2] = arg1;\n    if (*0x5985b0 == 0) {\n        *in_RAX = iVar1;\n        piVar2 = in_RAX;\n    }\n    else {\n        piVar2 = fcn.0045e120(arg1, arg2, arg3);\n    }\n    uVar3 = arg3;\n    if (unaff_EBX < 0x80) {\n        if (arg1 < arg3 + 1) {\n            iVar1 = fcn.00445800(arg1);\n            piVar2 = in_RAX;\n        }\n        *(arg3 + iVar1) = unaff_EBX;\n        arg3 = arg3 + 1;\n    }\n    else {\n        iVar1 = fcn.0046e2a0(arg1);\n        piVar2 = in_RAX;\n    }\n    piVar2[1] = arg3;\n    piVar2[2] = arg1;\n    if (*0x5985b0 == 0) {\n        *piVar2 = iVar1;\n    }\n    else {\n        piVar2 = fcn.0045e120(arg1, arg3, uVar3);\n    }\n    if (arg1 < arg3 + 9) {\n        iVar1 = fcn.00445800(arg1);\n        piVar2 = in_RAX;\n    }\n    *(iVar1 + arg3) = 0x474e495353494d28;\n    *(iVar1 + 8 + arg3) = 0x29;\n    piVar2[1] = arg3 + 9;\n    piVar2[2] = arg1;\n    if (*0x5985b0 == 0) {\n        *piVar2 = iVar1;\n    }\n    else {\n        fcn.0045e120(arg1, arg3, uVar3);\n    }\n    return;\n}\n",
        "token_count": 634
    },
    "0048c3a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048c3a0(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint8_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint64_t *in_RAX;\n    uint64_t uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    char cVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t *piVar13;\n    uint64_t unaff_RBX;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uchar *puVar16;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t iVar17;\n    uint64_t unaff_RDI;\n    uint64_t uVar18;\n    int64_t unaff_R14;\n    bool bVar19;\n    bool bVar20;\n    \n    while (puVar16 = *0x20,  *0x20 + -0x70 < *(unaff_R14 + 0x10) || *0x20 + -0x70 == *(unaff_R14 + 0x10)) {\ncode_r0x0048d533:\n        *(puVar16 + 8) = in_RAX;\n        *(puVar16 + 0x10) = unaff_RBX;\n        *(puVar16 + 0x18) = arg1;\n        *(puVar16 + 0x20) = unaff_RDI;\n        *(puVar16 + 0x28) = unaff_RSI;\n        *(puVar16 + 0x30) = arg3;\n        *(puVar16 + -8) = 0x48d556;\n        fcn.0045bdc0();\n        in_RAX = *(puVar16 + 8);\n        unaff_RBX = *(puVar16 + 0x10);\n        arg1 = *(puVar16 + 0x18);\n        unaff_RDI = *(puVar16 + 0x20);\n        unaff_RSI = *(puVar16 + 0x28);\n        arg3 = *(puVar16 + 0x30);\n        *0x20 = puVar16;\n    }\n    puVar16 = *0x20 + -0xf0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + 0x28) = unaff_RSI;\n    *(*0x20 + -0x20) = unaff_RDI;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(in_RAX + 0x16) = 0;\n    uVar11 = 0;\n    uVar15 = 0;\n    do {\n        if (arg1 <= uVar11) goto code_r0x0048cde5;\n        *(in_RAX + 0xb1) = 1;\n        uVar12 = uVar11;\ncode_r0x0048d293:\n        if (uVar11 < arg1) {\n            if (arg1 <= uVar11) goto code_r0x0048d52a;\n            if (*(unaff_RBX + uVar11) == '%') goto code_r0x0048c44b;\n            goto code_r0x0048d290;\n        }\ncode_r0x0048c44b:\n        *(*0x20 + -0x90) = uVar15;\n        if (uVar12 < uVar11) {\n            bVar19 = uVar11 <= arg1;\n            uVar5 = arg1;\n            arg1 = uVar11;\n            if (bVar19) {\n                if (uVar12 <= uVar11) {\n                    *(*0x20 + -0x98) = uVar11;\n                    iVar10 = uVar11 - uVar12;\n                    uVar5 = in_RAX[1];\n                    uVar11 = iVar10 + uVar5;\n                    uVar18 = in_RAX[2];\n                    uVar8 = *in_RAX;\n                    if (uVar18 < uVar11) {\n                        *(*0x20 + -0x58) = iVar10;\n                        *(*0x20 + -0x48) = (-iVar10 >> 0x3f & uVar12) + unaff_RBX;\n                        *(*0x20 + -0x60) = uVar5;\n                        *(*0x20 + -0xf8) = 0x48c4ce;\n                        uVar8 = fcn.00445800(uVar18);\n                        iVar10 = *(*0x20 + -0x58);\n                    }\n                    *(*0x20 + -0x38) = uVar8;\n                    *(*0x20 + -0x58) = uVar18;\n                    *(*0x20 + -0x60) = uVar11;\n                    *(*0x20 + -0xf8) = 0x48c516;\n                    fcn.0045eda0(iVar10);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[1] = *(*0x20 + -0x60);\n                    in_RAX[2] = *(*0x20 + -0x58);\n                    if (*0x5985b0 == 0) {\n                        *in_RAX = *(*0x20 + -0x38);\n                        arg1 = *(*0x20 + 0x18);\n                        uVar11 = *(*0x20 + -0x98);\n                        bVar20 = SBORROW8(arg1, uVar11);\n                        iVar10 = arg1 - uVar11;\n                        bVar19 = arg1 == uVar11;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48c56c;\n                        in_RAX = fcn.0045e0a0(iVar10, *(*0x20 + -0x38), uVar8, uVar15);\n                        arg1 = *(*0x20 + 0x18);\n                        uVar11 = *(*0x20 + -0x98);\n                        bVar20 = SBORROW8(arg1, uVar11);\n                        iVar10 = arg1 - uVar11;\n                        bVar19 = arg1 == uVar11;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x20);\n                    arg3 = *(*0x20 + 0x30);\n                    uVar15 = *(*0x20 + -0x90);\n                    goto code_r0x0048c5a7;\n                }\n                goto code_r0x0048d511;\n            }\ncode_r0x0048d51c:\n            *(*0x20 + -0xf8) = 0x48d52a;\n            fcn.0045e460(arg1, uVar5);\ncode_r0x0048d52a:\n            *(*0x20 + -0xf8) = 0x48d532;\n            in_RAX = fcn.0045e420(arg1);\n            goto code_r0x0048d533;\n        }\n        bVar20 = SBORROW8(arg1, uVar11);\n        iVar10 = arg1 - uVar11;\n        bVar19 = arg1 == uVar11;\ncode_r0x0048c5a7:\n        if (bVar19 || bVar20 != iVar10 < 0) goto code_r0x0048cde5;\n        in_RAX[9] = 0;\n        *(in_RAX + 0x49) = 0;\n        while (uVar11 = uVar11 + 1,  uVar11 < arg1) {\n            if (arg1 <= uVar11) goto code_r0x0048d509;\n            uVar1 = *(unaff_RBX + uVar11);\n            if (uVar1 < 0x24) {\n                if (uVar1 == 0x20) {\n                    *(in_RAX + 0x4d) = 1;\n                }\n                else {\n                    if (uVar1 != 0x23) {\ncode_r0x0048c5c5:\n                        if ((uVar1 + 0x9f < 0x1a) && (uVar15 < unaff_RSI)) {\n                            *(*0x20 + -0x98) = uVar11;\n                            if (uVar1 == 0x76) {\n                                bVar19 = unaff_RSI < uVar15;\n                                bVar20 = unaff_RSI == uVar15;\ncode_r0x0048c6ed:\n                                *(in_RAX + 10) = *(in_RAX + 0x4c);\n                                *(in_RAX + 0x4c) = 0;\n                                *(in_RAX + 0x4f) = *(in_RAX + 0x4b);\n                                *(in_RAX + 0x4b) = 0;\n                            }\n                            else {\n                                if (uVar1 == 0x77) {\n                                    uVar18 = in_RAX[0x18] + 1;\n                                    uVar12 = in_RAX[0x17];\n                                    uVar5 = in_RAX[0x19];\n                                    if (uVar5 < uVar18) {\n                                        *(*0x20 + -0xad) = 0x77;\n                                        *(*0x20 + -0xf8) = 0x48c63d;\n                                        uVar12 = fcn.00445800(uVar5);\n                                        iVar10 = *(*0x20 + 8);\n                                        *(iVar10 + 200) = uVar5;\n                                        if (*0x5985b0 == 0) {\n                                            *(iVar10 + 0xb8) = uVar12;\n                                            bVar19 = *(*0x20 + 0x28) < *(*0x20 + -0x90);\n                                            bVar20 = *(*0x20 + 0x28) == *(*0x20 + -0x90);\n                                        }\n                                        else {\n                                            *(*0x20 + -0xf8) = 0x48c67d;\n                                            uVar12 = fcn.0045df80(uVar5, iVar10 + 0xb8, arg3, uVar15);\n                                            bVar19 = *(*0x20 + 0x28) < *(*0x20 + -0x90);\n                                            bVar20 = *(*0x20 + 0x28) == *(*0x20 + -0x90);\n                                        }\n                                        uVar11 = *(*0x20 + -0x98);\n                                        unaff_RSI = *(*0x20 + 0x28);\n                                        unaff_RDI = *(*0x20 + -0x20);\n                                        arg3 = *(*0x20 + 0x30);\n                                        uVar15 = *(*0x20 + -0x90);\n                                        in_RAX = *(*0x20 + 8);\n                                        unaff_RBX = *(*0x20 + 0x10);\n                                    }\n                                    else {\n                                        bVar19 = unaff_RSI < uVar15;\n                                        bVar20 = unaff_RSI == uVar15;\n                                    }\n                                    in_RAX[0x18] = uVar18;\n                                    *((uVar12 - 8) + uVar18 * 8) = uVar15;\n                                    goto code_r0x0048c6ed;\n                                }\n                                bVar19 = unaff_RSI < uVar15;\n                                bVar20 = unaff_RSI == uVar15;\n                            }\n                            if (bVar19 || bVar20) goto code_r0x0048d4fe;\n                            uVar6 = *(unaff_RDI + 8 + uVar15 * 0x10);\n                            *(*0x20 + -0xf8) = 0x48c727;\n                            fcn.00489540(uVar6, uVar11, arg3);\n                            uVar12 = *(*0x20 + -0x90) + 1;\n                            uVar11 = *(*0x20 + -0x98) + 1;\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + 8);\n                            goto code_r0x0048c40c;\n                        }\n                        break;\n                    }\n                    *(in_RAX + 0x4c) = 1;\n                }\n            }\n            else if (uVar1 == 0x2b) {\n                *(in_RAX + 0x4b) = 1;\n            }\n            else if (uVar1 == 0x2d) {\n                *(in_RAX + 0x4a) = 1;\n                *(in_RAX + 0x4e) = 0;\n            }\n            else {\n                if (uVar1 != 0x30) goto code_r0x0048c5c5;\n                *(in_RAX + 0x4e) = *(in_RAX + 0x4a) ^ 1;\n            }\n        }\n        *(*0x20 + -0xf8) = 0x48c76e;\n        uVar18 = uVar11;\n        arg3 = unaff_RSI;\n        uVar5 = fcn.0048bf40(unaff_RBX, uVar11, unaff_RSI);\n        cVar9 = unaff_RBX;\n        arg1 = *(*0x20 + 0x18);\n        if (uVar15 < arg1) {\n            unaff_RBX = uVar15;\n            unaff_RSI = uVar11;\n            unaff_RDI = arg1;\n            if (uVar15 < arg1) {\n                uVar11 = *(*0x20 + 0x10);\n                if (*(uVar11 + uVar15) != '*') goto code_r0x0048c8c1;\n                *(*0x20 + -0x68) = uVar15;\n                uVar6 = *(*0x20 + 0x28);\n                uVar5 = *(*0x20 + 0x30);\n                *(*0x20 + -0xf8) = 0x48c7cd;\n                iVar10 = fcn.0048bc40(uVar5);\n                piVar13 = *(*0x20 + 8);\n                piVar13[0xb] = iVar10;\n                *(piVar13 + 9) = uVar6;\n                if (uVar6 == '\\0') {\n                    iVar10 = piVar13[1];\n                    uVar11 = iVar10 + 0xc;\n                    uVar15 = piVar13[2];\n                    iVar17 = *piVar13;\n                    if (uVar15 < uVar11) {\n                        *(*0x20 + -0x70) = uVar5;\n                        *(*0x20 + -0x58) = iVar10;\n                        *(*0x20 + -0xf8) = 0x48c825;\n                        iVar17 = fcn.00445800(uVar15);\n                        piVar13 = *(*0x20 + 8);\n                        uVar5 = *(*0x20 + -0x70);\n                        iVar10 = *(*0x20 + -0x58);\n                    }\n                    *(iVar17 + iVar10) = 0x4957444142282125;\n                    *(iVar17 + 8 + iVar10) = 0x29485444;\n                    piVar13[1] = uVar11;\n                    piVar13[2] = uVar15;\n                    if (*0x5985b0 == 0) {\n                        *piVar13 = iVar17;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48c874;\n                        fcn.0045df80(uVar5, uVar18, arg3, uVar11);\n                    }\n                }\n                if (piVar13[0xb] < 0) {\n                    piVar13[0xb] = -piVar13[0xb];\n                    *(piVar13 + 0x4a) = 1;\n                    *(piVar13 + 0x4e) = 0;\n                }\n                uVar8 = *(*0x20 + -0x68) + 1;\n                arg1 = *(*0x20 + 0x18);\n                in_RAX = *(*0x20 + 8);\n                uVar11 = *(*0x20 + 0x10);\n                cVar9 = '\\0';\n                goto code_r0x0048c8fc;\n            }\ncode_r0x0048d4f3:\n            uVar11 = uVar18;\n            *(*0x20 + -0xf8) = 0x48d4fe;\n            fcn.0045e420(unaff_RDI);\ncode_r0x0048d4fe:\n            *(*0x20 + -0xf8) = 0x48d509;\n            arg1 = unaff_RSI;\n            fcn.0045e420(unaff_RSI);\ncode_r0x0048d509:\n            *(*0x20 + -0xf8) = 0x48d511;\n            fcn.0045e420(arg1);\ncode_r0x0048d511:\n            *(*0x20 + -0xf8) = 0x48d51c;\n            arg1 = uVar11;\n            fcn.0045e4e0(uVar11);\n            uVar5 = uVar11;\n            goto code_r0x0048d51c;\n        }\n        uVar11 = *(*0x20 + 0x10);\ncode_r0x0048c8c1:\n        if (uVar15 < arg1) {\n            uVar18 = 0;\n            unaff_RSI = 0;\n            for (; uVar8 = uVar15,  uVar15 < arg1; uVar15 = uVar15 + 1) {\n                if (arg1 <= uVar15) goto code_r0x0048d4e8;\n                uVar1 = *(uVar11 + uVar15);\n                if ((uVar1 < 0x30) || (0x39 < uVar1)) break;\n                if (2000000 < unaff_RSI + 1000000) {\n                    uVar18 = 0;\n                    unaff_RSI = 0;\n                    uVar8 = arg1;\n                    break;\n                }\n                unaff_RSI = (uVar1 - 0x30 & 0xff) + unaff_RSI * 10;\n                uVar18 = 1;\n            }\n        }\n        else {\n            uVar18 = 0;\n            unaff_RSI = 0;\n            uVar8 = arg1;\n        }\n        in_RAX = *(*0x20 + 8);\n        in_RAX[0xb] = unaff_RSI;\n        *(in_RAX + 9) = uVar18;\n        if ((cVar9 != '\\0') && (uVar18 != '\\0')) {\n            *(in_RAX + 0xb1) = 0;\n        }\ncode_r0x0048c8fc:\n        unaff_RSI = uVar8 + 1;\n        unaff_RBX = uVar11;\n        if (arg1 <= unaff_RSI) goto code_r0x0048caae;\n        uVar15 = uVar8;\n        if (arg1 <= uVar8) {\ncode_r0x0048d4dd:\n            *(*0x20 + -0xf8) = 0x48d4e8;\n            fcn.0045e420(arg1);\ncode_r0x0048d4e8:\n            *(*0x20 + -0xf8) = 0x48d4f3;\n            fcn.0045e420(arg1);\n            unaff_RBX = uVar15;\n            unaff_RDI = arg1;\n            goto code_r0x0048d4f3;\n        }\n        if (*(uVar11 + uVar8) != '.') goto code_r0x0048caae;\n        if (cVar9 != '\\0') {\n            *(in_RAX + 0xb1) = 0;\n        }\n        arg3 = *(*0x20 + 0x28);\n        *(*0x20 + -0xf8) = 0x48c94c;\n        uVar12 = fcn.0048bf40(uVar11, uVar18, arg3);\n        arg1 = *(*0x20 + 0x18);\n        uVar15 = uVar5;\n        if (uVar5 < arg1) {\n            if (arg1 <= uVar5) {\ncode_r0x0048d4d2:\n                *(*0x20 + -0xf8) = 0x48d4dd;\n                fcn.0045e420(arg1);\n                goto code_r0x0048d4dd;\n            }\n            unaff_RBX = *(*0x20 + 0x10);\n            if (*(unaff_RBX + uVar5) == '*') {\n                *(*0x20 + -0x78) = uVar5;\n                uVar6 = *(*0x20 + 0x28);\n                uVar5 = *(*0x20 + 0x30);\n                *(*0x20 + -0xf8) = 0x48c9aa;\n                iVar10 = fcn.0048bc40(uVar5);\n                piVar13 = *(*0x20 + 8);\n                piVar13[0xc] = iVar10;\n                *(piVar13 + 0x49) = uVar6;\n                if (piVar13[0xc] < 0) {\n                    piVar13[0xc] = 0;\n                    *(piVar13 + 0x49) = 0;\n                }\n                if (*(piVar13 + 0x49) == '\\0') {\n                    iVar10 = piVar13[1];\n                    uVar11 = iVar10 + 0xb;\n                    uVar15 = piVar13[2];\n                    iVar17 = *piVar13;\n                    if (uVar15 < uVar11) {\n                        *(*0x20 + -0x80) = uVar5;\n                        *(*0x20 + -0x58) = iVar10;\n                        unaff_RSI = 0x496180;\n                        *(*0x20 + -0xf8) = 0x48ca11;\n                        iVar17 = fcn.00445800(uVar15);\n                        piVar13 = *(*0x20 + 8);\n                        uVar5 = *(*0x20 + -0x80);\n                        iVar10 = *(*0x20 + -0x58);\n                    }\n                    *(iVar17 + iVar10) = 0x5250444142282125;\n                    *(iVar17 + 3 + iVar10) = 0x2943455250444142;\n                    piVar13[1] = uVar11;\n                    piVar13[2] = uVar15;\n                    if (*0x5985b0 == 0) {\n                        *piVar13 = iVar17;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48ca65;\n                        fcn.0045df80(uVar5, uVar18, arg3, uVar11);\n                    }\n                }\n                uVar8 = *(*0x20 + -0x78) + 1;\n                arg1 = *(*0x20 + 0x18);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                cVar9 = '\\0';\n                goto code_r0x0048caae;\n            }\n        }\n        else {\n            unaff_RBX = *(*0x20 + 0x10);\n        }\n        if (uVar5 < arg1) {\n            uVar18 = 0;\n            unaff_RSI = 0;\n            goto code_r0x0048d46d;\n        }\n        uVar18 = 0;\n        unaff_RSI = 0;\n        uVar5 = uVar12;\n        uVar8 = arg1;\ncode_r0x0048d49d:\n        cVar9 = uVar11;\n        in_RAX = *(*0x20 + 8);\n        in_RAX[0xc] = unaff_RSI;\n        *(in_RAX + 0x49) = uVar18;\n        if (uVar18 == '\\0') {\n            in_RAX[0xc] = 0;\n            *(in_RAX + 0x49) = 1;\n        }\ncode_r0x0048caae:\n        uVar12 = uVar5;\n        uVar15 = uVar8;\n        if (cVar9 == '\\0') {\n            arg3 = *(*0x20 + 0x28);\n            *(*0x20 + -0xf8) = 0x48cacb;\n            uVar12 = fcn.0048bf40(unaff_RBX, uVar18, arg3);\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + 8);\n            uVar15 = uVar5;\n            unaff_RSI = uVar8;\n        }\n        *(*0x20 + -0x58) = uVar12;\n        if (arg1 <= uVar15) break;\n        if (arg1 <= uVar15) {\ncode_r0x0048d44a:\n            *(*0x20 + -0xf8) = 0x48d455;\n            uVar11 = arg1;\n            uVar5 = fcn.0045e420(arg1);\n            do {\n                unaff_RSI = (in_RAX - 0x30U & 0xff) + unaff_RSI * 10;\n                uVar18 = 1;\n                uVar12 = uVar5;\n                uVar15 = uVar15 + 1;\ncode_r0x0048d46d:\n                uVar5 = uVar12;\n                uVar8 = uVar15;\n                if (arg1 <= uVar15) goto code_r0x0048d49d;\n                if (arg1 <= uVar15) {\n                    *(*0x20 + -0xf8) = 0x48d4d2;\n                    fcn.0045e420(arg1);\n                    goto code_r0x0048d4d2;\n                }\n                uVar1 = *(unaff_RBX + uVar15);\n                in_RAX = uVar1;\n                if ((uVar1 < 0x30) || (0x39 < uVar1)) goto code_r0x0048d49d;\n            } while (unaff_RSI + 1000000 < 0x1e8481);\n            uVar18 = 0;\n            unaff_RSI = 0;\n            uVar8 = arg1;\n            goto code_r0x0048d49d;\n        }\n        uVar4 = *(unaff_RBX + uVar15);\n        if (*(unaff_RBX + uVar15) < 0x80) {\n            uVar11 = 1;\n        }\n        else {\n            *(*0x20 + -0x98) = uVar15;\n            uVar11 = arg1 - uVar15;\n            *(*0x20 + -0xf8) = 0x48cb31;\n            uVar18 = uVar11;\n            uVar4 = fcn.0046df80();\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + 8);\n            uVar12 = *(*0x20 + -0x58);\n            uVar15 = *(*0x20 + -0x98);\n        }\n        uVar11 = uVar11 + uVar15;\n        *(*0x20 + -0x98) = uVar11;\n        if (uVar4 != 0x25) {\n            if (*(in_RAX + 0xb1) == '\\0') {\n                *(*0x20 + -0xf8) = 0x48cdba;\n                fcn.0048c060();\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                uVar11 = *(*0x20 + -0x98);\n                uVar12 = *(*0x20 + -0x58);\n                goto code_r0x0048c40c;\n            }\n            uVar11 = *(*0x20 + 0x28);\n            if (uVar11 <= uVar12) {\n                *(*0x20 + -0xf8) = 0x48cd85;\n                fcn.0048c200();\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                uVar11 = *(*0x20 + -0x98);\n                uVar12 = *(*0x20 + -0x58);\n                goto code_r0x0048c40c;\n            }\n            if (uVar4 == 0x77) {\n                uVar15 = in_RAX[0x18] + 1;\n                uVar5 = in_RAX[0x17];\n                uVar18 = in_RAX[0x19];\n                arg3 = uVar18;\n                if (uVar18 < uVar15) {\n                    *(*0x20 + -0xac) = 0x77;\n                    unaff_RSI = 0x495980;\n                    *(*0x20 + -0xf8) = 0x48cc54;\n                    uVar5 = fcn.00445800(uVar18);\n                    iVar10 = *(*0x20 + 8);\n                    *(iVar10 + 200) = uVar18;\n                    if (*0x5985b0 == 0) {\n                        *(iVar10 + 0xb8) = uVar5;\n                        uVar11 = *(*0x20 + 0x28);\n                        bVar19 = uVar11 < *(*0x20 + -0x58);\n                        bVar20 = uVar11 == *(*0x20 + -0x58);\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48cc97;\n                        uVar5 = fcn.0045df80(uVar18, iVar10 + 0xb8, arg3, unaff_RBX);\n                        uVar11 = *(*0x20 + 0x28);\n                        unaff_RSI = *(*0x20 + -0x58);\n                        bVar19 = uVar11 < unaff_RSI;\n                        bVar20 = uVar11 == unaff_RSI;\n                    }\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    in_RAX = *(*0x20 + 8);\n                    uVar12 = *(*0x20 + -0x58);\n                }\n                else {\n                    bVar19 = uVar11 < uVar12;\n                    bVar20 = uVar11 == uVar12;\n                }\n                in_RAX[0x18] = uVar15;\n                *((uVar5 - 8) + uVar15 * 8) = uVar12;\ncode_r0x0048ccfc:\n                *(in_RAX + 10) = *(in_RAX + 0x4c);\n                *(in_RAX + 0x4c) = 0;\n                uVar18 = *(in_RAX + 0x4b);\n                *(in_RAX + 0x4f) = *(in_RAX + 0x4b);\n                *(in_RAX + 0x4b) = 0;\n            }\n            else {\n                if (uVar4 == 0x76) {\n                    bVar19 = uVar11 < uVar12;\n                    bVar20 = uVar11 == uVar12;\n                    goto code_r0x0048ccfc;\n                }\n                bVar19 = uVar11 < uVar12;\n                bVar20 = uVar11 == uVar12;\n            }\n            if (!bVar19 && !bVar20) {\n                uVar6 = *(*(*0x20 + -0x20) + 8 + uVar12 * 0x10);\n                *(*0x20 + -0xf8) = 0x48cd49;\n                fcn.00489540(uVar6, uVar18, arg3);\n                uVar12 = *(*0x20 + -0x58) + 1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                uVar11 = *(*0x20 + -0x98);\n                goto code_r0x0048c40c;\n            }\n            *(*0x20 + -0xf8) = 0x48d44a;\n            fcn.0045e420(uVar11);\n            goto code_r0x0048d44a;\n        }\n        uVar15 = in_RAX[1];\n        uVar14 = uVar15 + 1;\n        uVar5 = *in_RAX;\n        uVar8 = in_RAX[2];\n        if (uVar8 < uVar14) {\n            *(*0x20 + -0xf8) = 0x48cb92;\n            uVar5 = fcn.00445800(uVar8);\n            puVar2 = *(*0x20 + 8);\n            puVar2[2] = uVar8;\n            if (*0x5985b0 == 0) {\n                *puVar2 = uVar5;\n            }\n            else {\n                *(*0x20 + -0xf8) = 0x48cbb1;\n                uVar5 = fcn.0045df80(uVar8, uVar18, arg3, unaff_RBX);\n            }\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + 8);\n            uVar11 = *(*0x20 + -0x98);\n            uVar12 = *(*0x20 + -0x58);\n        }\n        in_RAX[1] = uVar14;\n        *(uVar15 + uVar5) = 0x25;\ncode_r0x0048c40c:\n        unaff_RSI = *(*0x20 + 0x28);\n        unaff_RDI = *(*0x20 + -0x20);\n        arg3 = *(*0x20 + 0x30);\n        uVar15 = uVar12;\n    } while( true );\n    uVar15 = in_RAX[1];\n    uVar11 = uVar15 + 10;\n    uVar12 = in_RAX[2];\n    uVar5 = *in_RAX;\n    if (uVar12 < uVar11) {\n        *(*0x20 + -0x60) = uVar15;\n        *(*0x20 + -0xf8) = 0x48d3c8;\n        uVar5 = fcn.00445800(uVar12);\n        in_RAX = *(*0x20 + 8);\n        uVar15 = *(*0x20 + -0x60);\n    }\n    *(uVar5 + uVar15) = 0x5245564f4e282125;\n    *(uVar5 + 8 + uVar15) = 0x2942;\n    in_RAX[1] = uVar11;\n    in_RAX[2] = uVar12;\n    if (*0x5985b0 == 0) {\n        *in_RAX = uVar5;\n    }\n    else {\n        *(*0x20 + -0xf8) = 0x48d41a;\n        fcn.0045e100(uVar12, uVar11, uVar5, 0x5245564f4e282125);\n    }\n    unaff_RSI = *(*0x20 + 0x28);\n    unaff_RDI = *(*0x20 + -0x20);\n    arg3 = *(*0x20 + 0x30);\n    uVar15 = *(*0x20 + -0x58);\ncode_r0x0048cde5:\n    if (*(in_RAX + 0x16) != '\\0') {\n        return;\n    }\n    if (unaff_RSI <= uVar15) {\n        return;\n    }\n    in_RAX[9] = 0;\n    *(in_RAX + 0x49) = 0;\n    unaff_RBX = in_RAX[1];\n    uVar11 = unaff_RBX + 9;\n    uVar12 = in_RAX[2];\n    uVar5 = *in_RAX;\n    if (uVar12 < uVar11) {\n        *(*0x20 + -0x58) = unaff_RBX;\n        *(*0x20 + -0x90) = uVar15;\n        *(*0x20 + -0xf8) = 0x48ce49;\n        uVar5 = fcn.00445800(uVar12);\n        unaff_RSI = *(*0x20 + 0x28);\n        unaff_RDI = *(*0x20 + -0x20);\n        arg3 = *(*0x20 + 0x30);\n        uVar15 = *(*0x20 + -0x90);\n        in_RAX = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + -0x58);\n    }\n    *(uVar5 + unaff_RBX) = 0x4152545845282125;\n    *(uVar5 + 8 + unaff_RBX) = 0x20;\n    in_RAX[1] = uVar11;\n    in_RAX[2] = uVar12;\n    uVar12 = uVar5;\n    if (*0x5985b0 == 0) {\n        *in_RAX = uVar5;\n    }\n    else {\n        *(*0x20 + -0xf8) = 0x48ceb8;\n        in_RAX = fcn.0045e0a0(unaff_RDI, uVar5, arg3, uVar15);\n        uVar11 = uVar5;\n    }\n    if (uVar15 <= unaff_RSI) {\n        uVar11 = uVar15 - arg3 >> 0x3f;\n        piVar13 = (uVar15 << 4 & uVar11) + unaff_RDI;\n        iVar17 = unaff_RSI - uVar15;\n        *(*0x20 + -0x58) = iVar17;\n        for (iVar10 = 0; iVar10 < iVar17; iVar10 = iVar10 + 1) {\n            *(*0x20 + -0xa0) = iVar10;\n            *(*0x20 + -0x28) = piVar13;\n            iVar7 = *piVar13;\n            *(*0x20 + -0x88) = iVar7;\n            uVar11 = piVar13[1];\n            *(*0x20 + -0x40) = uVar11;\n            if (0 < iVar10) {\n                uVar12 = in_RAX[1];\n                uVar15 = uVar12 + 2;\n                uVar5 = in_RAX[2];\n                uVar18 = *in_RAX;\n                if (uVar5 < uVar15) {\n                    *(*0x20 + -0x60) = uVar12;\n                    *(*0x20 + -0xf8) = 0x48cf6d;\n                    uVar18 = fcn.00445800(uVar5);\n                    piVar13 = *(*0x20 + -0x28);\n                    iVar17 = *(*0x20 + -0x58);\n                    iVar7 = *(*0x20 + -0x88);\n                    uVar11 = *(*0x20 + -0x40);\n                    in_RAX = *(*0x20 + 8);\n                    iVar10 = *(*0x20 + -0xa0);\n                    uVar12 = *(*0x20 + -0x60);\n                }\n                *(uVar18 + uVar12) = 0x202c;\n                in_RAX[1] = uVar15;\n                in_RAX[2] = uVar5;\n                if (*0x5985b0 == 0) {\n                    *in_RAX = uVar18;\n                }\n                else {\n                    *(*0x20 + -0xf8) = 0x48cfd5;\n                    in_RAX = fcn.0045e120(iVar10, piVar13, iVar7);\n                }\n            }\n            if (iVar7 == 0) {\n                uVar5 = in_RAX[1];\n                uVar12 = uVar5 + 5;\n                uVar11 = in_RAX[2];\n                uVar15 = *in_RAX;\n                if (uVar11 < uVar12) {\n                    *(*0x20 + -0x60) = uVar5;\n                    *(*0x20 + -0xf8) = 0x48d025;\n                    uVar15 = fcn.00445800(uVar11);\n                    piVar13 = *(*0x20 + -0x28);\n                    iVar17 = *(*0x20 + -0x58);\n                    in_RAX = *(*0x20 + 8);\n                    iVar10 = *(*0x20 + -0xa0);\n                    uVar5 = *(*0x20 + -0x60);\n                }\n                *(uVar15 + uVar5) = 0x6c696e3c;\n                *(uVar15 + 4 + uVar5) = 0x3e;\n                in_RAX[1] = uVar12;\n                in_RAX[2] = uVar11;\n                if (*0x5985b0 == 0) {\n                    *in_RAX = uVar15;\n                    uVar15 = uVar12;\n                }\n                else {\n                    *(*0x20 + -0xf8) = 0x48d085;\n                    in_RAX = fcn.0045e100(iVar10, piVar13, uVar15, uVar11);\n                }\n            }\n            else {\n                *(*0x20 + -0x18) = iVar7;\n                *(*0x20 + -0x10) = uVar11;\n                iVar10 = *(*0x20 + -0x18);\n                if (iVar10 == 0) {\n                    iVar17 = 0;\n                    iVar10 = 0;\n                }\n                else {\n                    iVar17 = 0x4cb460;\n                }\n                pcVar3 = *(iVar17 + 0xf8);\n                *(*0x20 + -0xf8) = 0x48d0c2;\n                uVar6 = (*pcVar3)();\n                puVar2 = *(*0x20 + 8);\n                uVar5 = puVar2[1];\n                uVar12 = uVar5 + iVar10;\n                uVar18 = puVar2[2];\n                uVar15 = *puVar2;\n                if (uVar18 < uVar12) {\n                    *(*0x20 + -0x50) = uVar6;\n                    *(*0x20 + -0x60) = uVar5;\n                    *(*0x20 + -0xa8) = iVar10;\n                    *(*0x20 + -0xf8) = 0x48d10b;\n                    uVar15 = fcn.00445800(uVar18);\n                    iVar10 = *(*0x20 + -0xa8);\n                }\n                *(*0x20 + -0x30) = uVar15;\n                *(*0x20 + -0x60) = uVar18;\n                *(*0x20 + -0x68) = uVar12;\n                *(*0x20 + -0xf8) = 0x48d152;\n                fcn.0045eda0(iVar10);\n                iVar10 = *(*0x20 + -0x68);\n                piVar13 = *(*0x20 + 8);\n                piVar13[1] = iVar10;\n                uVar12 = *(*0x20 + -0x60);\n                piVar13[2] = uVar12;\n                if (*0x5985b0 == 0) {\n                    iVar17 = *(*0x20 + -0x30);\n                    *piVar13 = iVar17;\n                }\n                else {\n                    iVar17 = *(*0x20 + -0x30);\n                    *(*0x20 + -0xf8) = 0x48d198;\n                    piVar13 = fcn.0045e0a0(uVar12, iVar17, uVar15, uVar11);\n                }\n                iVar7 = iVar17;\n                if (uVar12 < iVar10 + 1U) {\n                    *(*0x20 + -0xf8) = 0x48d1b9;\n                    iVar7 = fcn.00445800(uVar12);\n                    piVar13 = *(*0x20 + 8);\n                    piVar13[2] = uVar12;\n                    if (*0x5985b0 == 0) {\n                        *piVar13 = iVar7;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48d1d8;\n                        iVar7 = fcn.0045df80(uVar12, iVar17, uVar15, uVar11);\n                    }\n                }\n                piVar13[1] = iVar10 + 1U;\n                *(iVar10 + iVar7) = 0x3d;\n                *(*0x20 + -0xf8) = 0x48d1fe;\n                fcn.00489540(*(*0x20 + -0x40), iVar7, uVar15);\n                in_RAX = *(*0x20 + 8);\n                iVar10 = *(*0x20 + -0xa0);\n                piVar13 = *(*0x20 + -0x28);\n                iVar17 = *(*0x20 + -0x58);\n            }\n            piVar13 = piVar13 + 2;\n        }\n        uVar12 = in_RAX[1];\n        uVar14 = uVar12 + 1;\n        uVar5 = *in_RAX;\n        uVar18 = in_RAX[2];\n        uVar8 = uVar5;\n        if (uVar18 < uVar14) {\n            *(*0x20 + -0xf8) = 0x48d24d;\n            uVar8 = fcn.00445800(uVar18);\n            in_RAX = *(*0x20 + 8);\n            in_RAX[2] = uVar18;\n            if (*0x5985b0 == 0) {\n                *in_RAX = uVar8;\n            }\n            else {\n                *(*0x20 + -0xf8) = 0x48d26c;\n                uVar8 = fcn.0045df80(uVar18, uVar5, uVar15, uVar11);\n            }\n        }\n        in_RAX[1] = uVar14;\n        *(uVar12 + uVar8) = 0x29;\n        return;\n    }\n    *(*0x20 + -0xf8) = 0x48d290;\n    arg1 = unaff_RSI;\n    in_RAX = fcn.0045e4e0(unaff_RSI);\ncode_r0x0048d290:\n    uVar11 = uVar11 + 1;\n    goto code_r0x0048d293;\n}\n",
        "token_count": 10683
    },
    "00413000": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00413000(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar2 = (unaff_RBX >> 3) + 7 >> 3;\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x28) = uVar2 + 1;\n            unaff_RBX = 1;\n            *(*0x20 + -0x48) = 0x41304b;\n            iVar1 = fcn.0040ca40(0x59ae50);\n            uVar2 = *(*0x20 + -0x28);\n            if (uVar2 < 0x40000001) {\n                if (*(*0x20 + -0x20) < uVar2) {\n                    *(*0x20 + -0x18) = iVar1;\n                    *(*(*0x20 + -0x20) + iVar1) = 0xa1;\n                    *(*0x20 + -0x48) = 0x41307b;\n                    fcn.004130e0();\n                    uVar2 = *(*(*0x20 + -0x20) + *(*0x20 + -0x18));\n                    if (*(*(*0x20 + -0x20) + *(*0x20 + -0x18)) == 0xa1) {\n                        return;\n                    }\n                    unaff_RBX = 0x1b;\n                    *(*0x20 + -0x48) = 0x4130a9;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x48) = 0x4130b1;\n                fcn.0045e420(uVar2);\n            }\n            *(*0x20 + -0x48) = 0x4130bb;\n            in_RAX = fcn.0045e480(uVar2, 0x40000000);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x4130cb;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 679
    },
    "00420320": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00420320(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    uint8_t *puVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint64_t in_R9;\n    uint64_t in_R11;\n    \n    uVar5 = unaff_RBX + 0x800000000000;\n    uVar6 = uVar5 >> 0x16;\n    uVar3 = arg1 + 0x7fffffffe000;\n    uVar4 = uVar3 >> 0x16;\n    uVar2 = uVar6;\n    uVar8 = uVar3;\n    if (uVar4 == uVar6) {\n        uVar8 = in_RAX[1];\n        if (uVar5 >> 0x19 < in_RAX[2]) {\n            puVar7 = (uVar5 >> 0x19) + uVar8;\n            LOCK();\n            *puVar7 = *puVar7 | 1 << (uVar2 & 7);\n            uVar8 = uVar3;\n        }\n        else {\n            in_RAX = fcn.0045e440(in_RAX[2]);\n        }\n    }\n    else {\n        uVar5 = uVar5 >> 0x19;\n        uVar3 = uVar3 >> 0x19;\n        if (uVar5 == uVar3) {\n            uVar4 = (uVar4 - uVar6) + 1;\n            uVar9 = 1 << (uVar4 & 0x1f) & -(uVar4 < 0x20);\n            uVar10 = uVar9;\n            uVar9 = uVar9 - 1 << (uVar2 & 7);\n            uVar3 = uVar9;\n            uVar4 = in_RAX[2];\n            if (uVar4 <= uVar5) {\n                in_RAX = fcn.0045e440(uVar4);\n                goto code_r0x00420476;\n            }\n            LOCK();\n            *(in_RAX[1] + uVar5) = *(in_RAX[1] + uVar5) | uVar9;\n            goto code_r0x00420439;\n        }\n        uVar10 = uVar6 + 7 & 0xfffffffffffffff8;\n        uVar6 = uVar10 - uVar6;\n        if (uVar6 != 0) {\n            arg1_00 = in_RAX[2];\n            if (arg1_00 <= uVar5) goto code_r0x004204e7;\n            LOCK();\n            *(in_RAX[1] + uVar5) = *(in_RAX[1] + uVar5) | (-(uVar6 < 0x20) & 1 << (uVar6 & 0x1f)) - 1 << (uVar2 & 7);\n        }\n        in_R11 = uVar4 & 0xfffffffffffffff8;\n        for (; uVar10 < in_R11; uVar10 = uVar10 + 8) {\n            arg1_00 = in_RAX[2];\n            uVar5 = in_RAX[1];\n            in_R9 = uVar10 >> 3;\n            if (arg1_00 <= in_R9) goto code_r0x004204dc;\ncode_r0x00420476:\n            *(in_R9 + uVar5) = 0xff;\n        }\n        uVar4 = (uVar4 - in_R11) + 1;\n        if (uVar4 != 0) {\n            arg1_00 = in_RAX[1];\n            if (in_RAX[2] <= uVar3) {\n                fcn.0045e440(in_RAX[2]);\ncode_r0x004204dc:\n                fcn.0045e440(arg1_00);\ncode_r0x004204e7:\n                fcn.0045e440(arg1_00);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            LOCK();\n            *(arg1_00 + uVar3) = *(arg1_00 + uVar3) | (1 << (uVar4 & 0x1f) & -(uVar4 < 0x20)) - 1;\n        }\n    }\ncode_r0x00420439:\n    uVar4 = *in_RAX;\n    if (uVar4 < 0) {\n        uVar4 = -uVar4;\n    }\n    if (uVar4 < uVar8) {\n        *in_RAX = -uVar8;\n    }\n    return;\n}\n",
        "token_count": 1096
    },
    "004351c0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004352ab)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004351c0(ulong noname_0, ulong arg2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    uint uVar4;\n    uint uVar6;\n    double dVar5;\n    uchar in_XMM0 [16];\n    double dVar7;\n    uint uStack20;\n    ushort uStack16;\n    uchar uStack14;\n    uchar uStack13;\n    uchar uStack12;\n    char cStack11;\n    char cStack10;\n    char cStack9;\n    \n    while (dVar5 = SUB168(in_XMM0, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n        in_XMM0 = in_XMM0 & 0xffffffffffffffff;\n    }\n    uVar4 = SUB164(in_XMM0, 0);\n    uVar6 = SUB164(in_XMM0 >> 0x20, 0);\n    if (dVar5 == dVar5 + dVar5) {\n        if (0.0 < dVar5) {\n            fcn.004357c0();\n            return;\n        }\n        if ((dVar5 == dVar5 + dVar5) && (dVar5 < 0.0)) {\n            fcn.004357c0();\n            return;\n        }\n    }\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack14 = 0;\n    if (dVar5 == 0.0) {\n        iVar2 = 0;\n    }\n    else {\n        if (dVar5 < 0.0) {\n            in_XMM0 = ZEXT816(*0x4c9f98) ^ in_XMM0;\n        }\n        iVar2 = 0;\n        for (; *0x4c9f50 <= SUB168(in_XMM0, 0);\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), SUB168(in_XMM0, 0) / *0x4c9f50)) {\n            iVar2 = iVar2 + 1;\n        }\n        for (; dVar5 = SUB168(in_XMM0, 0),  dVar5 < *0x4c9f28;\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), dVar5 * *0x4c9f50)) {\n            iVar2 = iVar2 + -1;\n        }\n        dVar7 = *0x4c9f48;\n        for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n            dVar7 = dVar7 / *0x4c9f50;\n        }\n        dVar7 = dVar7 + dVar5;\n        if (*0x4c9f50 <= dVar7) {\n            iVar2 = iVar2 + 1;\n            dVar7 = dVar7 / *0x4c9f50;\n        }\n        uVar4 = SUB84(dVar7, 0);\n        uVar6 = dVar7 >> 0x20;\n    }\n    for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n        *(&uStack20 + iVar3) = CONCAT44(uVar6, uVar4) + '0';\n        dVar5 = (CONCAT44(uVar6, uVar4) - CONCAT44(uVar6, uVar4)) * *0x4c9f50;\n        uVar4 = SUB84(dVar5, 0);\n        uVar6 = dVar5 >> 0x20;\n    }\n    uStack20 = CONCAT31(uStack20._1_3_, 0x2e);\n    uStack13 = 0x65;\n    uStack12 = 0x2b;\n    if (iVar2 < 0) {\n        uStack12 = 0x2d;\n        iVar2 = -iVar2;\n    }\n    cStack11 = ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 6) - (iVar2 >> 0x3f)) + '0'\n    ;\n    iVar3 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 3) - (iVar2 >> 0x3f);\n    cVar1 = iVar3;\n    cStack10 = cVar1 + ((iVar3 & 0xff) / 10) * -10 + '0';\n    cStack9 = iVar2 + cVar1 * -10 + '0';\n    fcn.00434fa0(0xe);\n    return;\n}\n",
        "token_count": 1145
    },
    "00449200": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00449200(void)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb8 && *0x20 + -0xb8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x138;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x148) = *0x20 + -8;\n            *(*0x20 + -0x140) = 0x44924f;\n            fcn.0045e68b();\n            unaff_RBP = *(*0x20 + -0x148);\n            *(*0x20 + -0x128) = 0x4a02a0;\n            *(*0x20 + -0x120) = *0x20 + -0x118;\n            puVar1 = *(*0x20 + -0x128);\n            if ((*(puVar1 + 0x17) & 0x40) == 0) {\n                for (iVar2 = 0x532f00; iVar2 != 0; iVar2 = *(iVar2 + 0x230)) {\n                    if ((*(iVar2 + 0x140) < 0x598591) && (0x598590 < *(iVar2 + 0x110))) goto code_r0x004492b6;\n                }\n                iVar2 = 0;\ncode_r0x004492b6:\n                if (iVar2 != 0) {\n                    *0x598590 = -(*puVar1 + 7U & 0xfffffff8);\n                    *0x598594 = *puVar1;\n                    *0x598598 = puVar1[1];\n                    *0x59859c = puVar1[4] - *(iVar2 + 0x138);\n                    return;\n                }\n                *(*0x20 + -0x140) = 0x449310;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x140) = 0x449325;\n            fcn.00433580();\n        }\n        *(puVar3 + -8) = 0x44932b;\n        fcn.0045bdc0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 567
    },
    "00449de0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.00449de0(void)\n\n{\n    uint64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (0x7fff < in_RAX) {\n                if (in_RAX <= in_RAX + 0x2000) {\n                    in_RAX = in_RAX + 0x1fff & 0xffffffffffffe000;\n                }\n                goto code_r0x00449eb9;\n            }\n            if (in_RAX < 0x3f9) {\n                uVar3 = in_RAX + 7 >> 3;\n                if (uVar3 < 0x81) {\n                    uVar3 = *(uVar3 + 0x5302c0);\n                    if (0x43 < uVar3) goto code_r0x00449f37;\n                    in_RAX = *(uVar3 * 2 + 0x530400);\ncode_r0x00449eb9:\n                    *(*0x20 + -0x30) = in_RAX;\n                    *(*0x20 + -0x50) = 0x449eca;\n                    uVar1 = fcn.0040bd20(0);\n                    iVar4 = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    if (iVar4 != iVar2) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x50) = 0x449ef0;\n                        fcn.0045eaa0(iVar2 - iVar4);\n                        uVar1 = *(*0x20 + -0x28);\n                        iVar2 = *(*0x20 + -0x30);\n                        iVar4 = *(*0x20 + 8);\n                    }\n                    *(*0x20 + -0x20) = uVar1;\n                    *(*0x20 + -0x18) = iVar4;\n                    *(*0x20 + -0x10) = iVar2;\n                    return *(*0x20 + -0x20);\n                }\n            }\n            else {\n                uVar3 = in_RAX - 0x381 >> 7;\n                if (uVar3 < 0xf9) {\n                    if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        [uVar3] < 0x44) {\n                        in_RAX = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                   [uVar3] * 2 + 0x530400);\n                        goto code_r0x00449eb9;\n                    }\n                    *(*0x20 + -0x50) = 0x449f2a;\n                    fcn.0045e420(0x44);\n                }\n                *(*0x20 + -0x50) = 0x449f37;\n                fcn.0045e440(0xf9);\ncode_r0x00449f37:\n                *(*0x20 + -0x50) = 0x449f45;\n                fcn.0045e420(0x44);\n            }\n            *(*0x20 + -0x50) = 0x449f52;\n            in_RAX = fcn.0045e440(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x449f5d;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1085
    },
    "0044cc20": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint8_t * fcn.0044cc20(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t unaff_RBX;\n    int32_t *unaff_RSI;\n    int64_t *unaff_RDI;\n    char in_R8B;\n    uint64_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint64_t in_R10;\n    int64_t unaff_R12;\n    \n    if (unaff_RBX != 0) {\n        uVar1 = *in_RAX;\n        uVar10 = uVar1;\n        if ((uVar1 == 0) && (in_R8B == '\\0')) {\n            return NULL;\n        }\n        if (-1 < uVar1) {\n            uVar8 = 1;\n            goto code_r0x0044cc75;\n        }\n        uVar6 = 0;\n        uVar8 = 0;\n        iVar9 = 0;\n        while (uVar6 < unaff_RBX) {\n            puVar5 = in_RAX + uVar6;\n            uVar7 = uVar6 + 1;\n            uVar6 = uVar7;\n            uVar10 = (*puVar5 & 0x7f) << (iVar9 & 0x1f);\n            in_R10 = uVar10;\n            uVar10 = uVar8 | uVar10;\n            uVar8 = uVar10;\n            if ((*puVar5 & 0x80) == 0) {\n                uVar8 = uVar7;\n                unaff_R12 = arg1;\ncode_r0x0044cc75:\n                uVar10 = -(uVar10 & 1) ^ uVar10 >> 1;\n                uVar6 = uVar10;\n                *unaff_RSI = *unaff_RSI + uVar10;\n                if (uVar8 <= unaff_RBX) {\n                    unaff_RBX = unaff_RBX - uVar8;\n                    uVar6 = arg1 - uVar8;\n                    uVar8 = uVar8 & -uVar6 >> 0x3f;\n                    unaff_RSI = in_RAX + uVar8;\n                    if (unaff_RBX != 0) {\n                        uVar3 = in_RAX[uVar8];\n                        if (-1 < in_RAX[uVar8]) {\n                            uVar4 = 1;\n                            goto code_r0x0044ccc8;\n                        }\n                        uVar10 = 0;\n                        uVar8 = 0;\n                        uVar3 = 0;\n                        while (uVar3 < unaff_RBX) {\n                            uVar4 = uVar3 + 1;\n                            iVar9 = uVar8;\n                            uVar10 = uVar10 | (*(uVar3 + unaff_RSI) & 0x7f) << (uVar8 & 0x1f);\n                            in_R10 = uVar4;\n                            if ((*(uVar3 + unaff_RSI) & 0x80) == 0) {\n                                uVar3 = uVar10;\ncode_r0x0044ccc8:\n                                if (uVar4 <= unaff_RBX) {\n                                    *unaff_RDI = *unaff_RDI + uVar3;\n                                    return (uVar4 & -(uVar6 - uVar4) >> 0x3f) + unaff_RSI;\n                                }\n                                uVar8 = unaff_RBX;\n                                uVar10 = fcn.0045e4e0(unaff_RBX);\n                                iVar9 = uVar8;\n                            }\n                            uVar8 = iVar9 + 7;\n                            uVar3 = in_R10 & 0xffffffff;\n                        }\n                        fcn.0045e420(unaff_RBX);\n                    }\n                    fcn.0045e420(0);\n                }\n                uVar3 = unaff_RBX;\n                in_RAX = fcn.0045e4e0(unaff_RBX);\n                iVar9 = uVar3;\n                arg1 = unaff_R12;\n            }\n            iVar9 = iVar9 + 7;\n        }\n        fcn.0045e420(unaff_RBX);\n    }\n    fcn.0045e420(0);\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 1014
    },
    "00451400": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.00451400(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint *puVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar2 = fcn.0044bc60();\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0x2b) < 8) {\n            puVar4 = NULL;\n        }\n        else {\n            uVar1 = *(iVar2 + *(iVar2 + 0x1c) * 4 + 0x48);\n            puVar4 = uVar1 + *(unaff_RBX + 0x140) & (uVar1 == 0xffffffff) - 1;\n        }\n        if (puVar4 != NULL) {\n            uVar3 = fcn.0044b9e0(*puVar4);\n            return uVar3;\n        }\n        return in_RAX;\n    }\n    return in_RAX;\n}\n",
        "token_count": 279
    },
    "00477200": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint64_t fcn.00477200(uint64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t arg1_00;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint32_t unaff_EDI;\n    uchar uVar7;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar7 = in_R9;\n        cVar1 = in_R8;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + -0x30) = 0;\n            if ((unaff_EDI == unaff_SIL) || (unaff_EDI == 0x5c)) {\n                if (arg1 < unaff_RBX + 1) {\n                    *(*0x20 + -0x80) = 0x47734e;\n                    in_RAX = fcn.00445800(arg1);\n                    unaff_EDI = *(*0x20 + 0x20);\n                }\n                uVar7 = unaff_EDI;\n                *(unaff_RBX + in_RAX) = 0x5c;\n                if (arg1 < unaff_RBX + 2) {\n                    *(*0x20 + -0x80) = 0x477376;\n                    in_RAX = fcn.00445800(arg1);\n                    uVar7 = *(*0x20 + 0x20);\n                }\n                *(unaff_RBX + 1 + in_RAX) = uVar7;\n                return in_RAX;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (cVar1 != '\\0') {\n                if (unaff_EDI < 0x80) {\n                    *(*0x20 + -0x80) = 0x477279;\n                    cVar1 = fcn.00477a60();\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_EDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    cVar1 = '\\0';\n                }\n                if (cVar1 != '\\0') {\n                    if (arg1 < unaff_RBX + 1) {\n                        *(*0x20 + -0x80) = 0x4772c5;\n                        in_RAX = fcn.00445800(arg1);\n                        unaff_EDI = *(*0x20 + 0x20);\n                    }\n                    *(unaff_RBX + in_RAX) = unaff_EDI;\n                    return in_RAX;\n                }\n                goto code_r0x00477463;\n            }\n            *(*0x20 + 0x26) = uVar7;\n            *(*0x20 + -0x80) = 0x4772ea;\n            cVar1 = fcn.00477a60();\n            if (cVar1 != '\\0') goto code_r0x0047738c;\n            if (*(*0x20 + 0x26) == '\\0') {\n                unaff_EDI = *(*0x20 + 0x20);\n                goto code_r0x0047744b;\n            }\n            unaff_EDI = *(*0x20 + 0x20);\n            if (0xffff < unaff_EDI) goto code_r0x0047744b;\n            unaff_RBX = 0;\n            uVar2 = *0x53e2f8;\n            while (uVar4 = uVar2,  unaff_RBX < uVar4) {\n                iVar5 = uVar4 - unaff_RBX >> 1;\n                in_R9 = iVar5 + unaff_RBX;\n                arg1 = *0x53e2f8;\n                in_R8 = uVar4;\n                if (*0x53e2f8 <= in_R9) goto code_r0x004778e8;\n                uVar2 = in_R9;\n                in_R8 = in_R9;\n                if (*(*0x53e2f0 + in_R9 * 2) < unaff_EDI) {\n                    in_R9 = iVar5 + 1;\n                    unaff_RBX = unaff_RBX + in_R9;\n                    uVar2 = uVar4;\n                    in_R8 = uVar4;\n                }\n            }\n            if (*0x53e2f8 <= unaff_RBX) goto code_r0x0047744b;\n            if (unaff_RBX < *0x53e2f8) {\n                if (*(*0x53e2f0 + unaff_RBX * 2) == unaff_EDI) {\ncode_r0x0047738c:\n                    unaff_EDI = *(*0x20 + 0x20);\n                    *(*0x20 + -0x80) = 0x4773a5;\n                    uVar2 = fcn.0046e140(4);\n                    if (uVar2 < 5) {\n                        uVar4 = *(*0x20 + 0x10) + uVar2;\n                        arg1_00 = *(*0x20 + 0x18);\n                        if (arg1_00 < uVar4) {\n                            *(*0x20 + -0x28) = uVar2;\n                            *(*0x20 + -0x80) = 0x4773ee;\n                            uVar3 = fcn.00445800(arg1_00);\n                            uVar2 = *(*0x20 + -0x28);\n                        }\n                        else {\n                            uVar3 = *(*0x20 + 8);\n                        }\n                        *(*0x20 + -0x18) = arg1_00;\n                        *(*0x20 + -0x20) = uVar4;\n                        *(*0x20 + -0x10) = uVar3;\n                        *(*0x20 + -0x80) = 0x477425;\n                        fcn.0045eda0(uVar2);\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x80) = 0x47744b;\n                    fcn.0045e460(uVar2, 4);\n                }\ncode_r0x0047744b:\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\ncode_r0x00477463:\n                if (unaff_EDI < 10) {\n                    if (unaff_EDI == 7) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x80) = 0x477505;\n                            in_RAX = fcn.00445800(arg1);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x615c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 8) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x80) = 0x4774cf;\n                            in_RAX = fcn.00445800(arg1);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x625c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 9) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x80) = 0x47749c;\n                            in_RAX = fcn.00445800(arg1);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x745c;\n                        return in_RAX;\n                    }\n                }\n                else {\n                    if (unaff_EDI < 0xc) {\n                        if (unaff_EDI == 10) {\n                            if (arg1 < unaff_RBX + 2) {\n                                *(*0x20 + -0x80) = 0x47773a;\n                                in_RAX = fcn.00445800(arg1);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            *(in_RAX + unaff_RBX) = 0x6e5c;\n                            return in_RAX;\n                        }\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x80) = 0x47776a;\n                            in_RAX = fcn.00445800(arg1);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x765c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 0xc) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x80) = 0x477705;\n                            in_RAX = fcn.00445800(arg1);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x665c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 0xd) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x80) = 0x4776d0;\n                            in_RAX = fcn.00445800(arg1);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x725c;\n                        return in_RAX;\n                    }\n                }\n                if ((unaff_EDI < 0x20) || (unaff_EDI == 0x7f)) {\n                    uVar2 = unaff_RBX;\n                    if (arg1 < unaff_RBX + 2) {\n                        *(*0x20 + -0x80) = 0x477619;\n                        in_RAX = fcn.00445800(arg1);\n                        unaff_EDI = *(*0x20 + 0x20);\n                        uVar2 = *(*0x20 + 0x10);\n                    }\n                    *(in_RAX + uVar2) = 0x785c;\n                    uVar7 = *((unaff_EDI >> 4) + 0x4aa077);\n                    if (arg1 < unaff_RBX + 3) {\n                        *(*0x20 + -0x31) = uVar7;\n                        *(*0x20 + -0x80) = 0x477666;\n                        in_RAX = fcn.00445800(arg1);\n                        unaff_EDI = *(*0x20 + 0x20);\n                        uVar7 = *(*0x20 + -0x31);\n                    }\n                    *(unaff_RBX + 2 + in_RAX) = uVar7;\n                    uVar7 = *((unaff_EDI & 0xf) + 0x4aa077);\n                    if (arg1 < unaff_RBX + 4) {\n                        *(*0x20 + -0x31) = uVar7;\n                        *(*0x20 + -0x80) = 0x4776a5;\n                        in_RAX = fcn.00445800(arg1);\n                        uVar7 = *(*0x20 + -0x31);\n                    }\n                    *(unaff_RBX + 3 + in_RAX) = uVar7;\n                }\n                else {\n                    if ((unaff_EDI < 0xd800) || (unaff_EDI - 0xe000 < 0x102000)) {\n                        if (0xffff < unaff_EDI) {\n                            uVar2 = unaff_RBX + 2;\n                            if (arg1 < uVar2) {\n                                *(*0x20 + -0x80) = 0x47758e;\n                                in_RAX = fcn.00445800(arg1);\n                                unaff_EDI = *(*0x20 + 0x20);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            *(in_RAX + unaff_RBX) = 0x555c;\n                            for (iVar5 = 0x1c; -1 < iVar5; iVar5 = iVar5 + -4) {\n                                uVar7 = *((unaff_EDI >> (iVar5 & 0x1f) & 0xf) + 0x4aa077);\n                                if (arg1 < uVar2 + 1) {\n                                    *(*0x20 + -0x18) = iVar5;\n                                    *(*0x20 + -0x31) = uVar7;\n                                    *(*0x20 + -0x80) = 0x47785f;\n                                    in_RAX = fcn.00445800(arg1);\n                                    unaff_EDI = *(*0x20 + 0x20);\n                                    uVar7 = *(*0x20 + -0x31);\n                                    iVar5 = *(*0x20 + -0x18);\n                                }\n                                *(uVar2 + in_RAX) = uVar7;\n                                uVar2 = uVar2 + 1;\n                            }\n                            return in_RAX;\n                        }\n                    }\n                    else {\n                        unaff_EDI = 0xfffd;\n                    }\n                    *(*0x20 + -0x2c) = unaff_EDI;\n                    uVar2 = unaff_RBX + 2;\n                    if (arg1 < uVar2) {\n                        *(*0x20 + -0x80) = 0x4775d9;\n                        in_RAX = fcn.00445800(arg1);\n                        unaff_EDI = *(*0x20 + -0x2c);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                    *(in_RAX + unaff_RBX) = 0x755c;\n                    for (iVar5 = 0xc; -1 < iVar5; iVar5 = iVar5 + -4) {\n                        uVar7 = *((unaff_EDI >> (iVar5 & 0x1f) & 0xf) + 0x4aa077);\n                        if (arg1 < uVar2 + 1) {\n                            *(*0x20 + -0x18) = iVar5;\n                            *(*0x20 + -0x31) = uVar7;\n                            *(*0x20 + -0x80) = 0x4777e8;\n                            in_RAX = fcn.00445800(arg1);\n                            unaff_EDI = *(*0x20 + -0x2c);\n                            uVar7 = *(*0x20 + -0x31);\n                            iVar5 = *(*0x20 + -0x18);\n                        }\n                        *(uVar2 + in_RAX) = uVar7;\n                        uVar2 = uVar2 + 1;\n                    }\n                }\n                return in_RAX;\n            }\n            *(*0x20 + -0x80) = 0x4778e8;\n            arg1 = fcn.0045e420(*0x53e2f8);\ncode_r0x004778e8:\n            uVar7 = in_R9;\n            cVar1 = in_R8;\n            *(*0x20 + -0x80) = 0x4778f3;\n            in_RAX = fcn.0045e420(arg1);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_EDI;\n        puVar6[0x24] = unaff_SIL;\n        puVar6[0x25] = cVar1;\n        puVar6[0x26] = uVar7;\n        *(puVar6 + -8) = 0x47791b;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_EDI = *(puVar6 + 0x20);\n        unaff_SIL = puVar6[0x24];\n        in_R8 = puVar6[0x25];\n        in_R9 = puVar6[0x26];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3888
    },
    "004070e0": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nint64_t fcn.004070e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    char cVar6;\n    char cVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x5455f0 != NULL) {\n                iVar2 = 0;\n                piVar3 = *0x5455f0;\n                while( true ) {\n                    if (*0x5455f8 <= iVar2) {\n                        return 0;\n                    }\n                    iVar1 = *piVar3;\n                    if ((unaff_RBX < piVar3[1]) && (*(unaff_RBX + iVar1) == '=')) break;\ncode_r0x00407118:\n                    piVar3 = piVar3 + 2;\n                    iVar2 = iVar2 + 1;\n                }\n                uVar5 = 0;\n                do {\n                    if (unaff_RBX <= uVar5) {\n                        return iVar1 + (unaff_RBX + 1 & -((piVar3[1] - unaff_RBX) + -1) >> 0x3f);\n                    }\n                    cVar6 = *(uVar5 + iVar1);\n                    if (unaff_RBX <= uVar5) {\n                        *(*0x20 + -0x20) = 0x4071c5;\n                        fcn.0045e420(unaff_RBX);\n                        break;\n                    }\n                    cVar7 = *(uVar5 + in_RAX);\n                    if (cVar7 != cVar6) {\n                        if (cVar6 + 0xbfU < 0x1a) {\n                            cVar6 = cVar6 + ' ';\n                        }\n                        if (cVar7 + 0xbfU < 0x1a) {\n                            cVar7 = cVar7 + ' ';\n                        }\n                        if (cVar6 != cVar7) goto code_r0x00407118;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while( true );\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x20) = 0x4071d6;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4071e6;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 747
    },
    "004208a0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004208a0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar2 = *(in_RAX + 0x138);\n            iVar3 = unaff_RBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x28) = 0x4208d8;\n                iVar2 = fcn.00422fe0();\n                *(iVar2 + 0x18) = 0;\n                iVar3 = *(*0x20 + 8);\n                *(iVar3 + 0x130) = iVar2;\n                *(iVar3 + 0x138) = iVar2;\n                arg1 = *(*0x20 + 0x18);\n                iVar3 = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n            }\n            iVar4 = *(iVar2 + 0x10);\n            if (iVar4 < 1) {\ncode_r0x0042098b:\n                uVar1 = *(iVar2 + 0x10);\n                if (uVar1 < 0x3f) {\n                    *(iVar2 + 0x10) = uVar1 + 1;\n                    iVar4 = uVar1 * 0x20;\n                    *(iVar2 + 0x20 + iVar4) = iVar3 - *(in_RAX + 0x100);\n                    *(iVar2 + 0x24 + iVar4) = *(arg1 + 4);\n                    *(iVar2 + 0x28 + iVar4) = arg1;\n                    *(in_RAX + 0x140) = *(in_RAX + 0x140) + 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x4209db;\n                fcn.0045e420(0x3f);\ncode_r0x004209db:\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x28) = 0x4209ec;\n                fcn.00433580();\n            }\n            else {\n                unaff_RBX = iVar3 - *(in_RAX + 0x100);\n                if (iVar4 - 1U < 0x3f) {\n                    iVar6 = (iVar4 - 1U) * 0x20;\n                    if (*(iVar2 + 0x20 + iVar6) + *(iVar2 + 0x24 + iVar6) <= unaff_RBX) {\n                        if (iVar4 == 0x3f) {\n                            *(*0x20 + -0x10) = iVar2;\n                            *(*0x20 + -0x28) = 0x420959;\n                            iVar2 = fcn.00422fe0();\n                            *(iVar2 + 0x18) = 0;\n                            *(*(*0x20 + -0x10) + 0x18) = iVar2;\n                            in_RAX = *(*0x20 + 8);\n                            *(in_RAX + 0x138) = iVar2;\n                            iVar3 = *(*0x20 + 0x10);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        goto code_r0x0042098b;\n                    }\n                    goto code_r0x004209db;\n                }\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x28) = 0x4209f9;\n            in_RAX = fcn.0045e420(0x3f);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x420a0e;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1117
    },
    "00420a40": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong fcn.00420a40(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            arg1_00 = arg1 / 2;\n            *(*0x20 + -0x10) = arg1_00;\n            *(*0x20 + -0x50) = 0x420a85;\n            uVar3 = fcn.00420a40(arg1_00);\n            if (arg1_00 < 0x3f) {\n                *(*0x20 + -0x30) = uVar3;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1_00 * 0x20;\n                *(*0x20 + -0x28) = arg1_00 * 0x20 + 0x20 + unaff_RBX;\n                *(*0x20 + -0x50) = 0x420ae5;\n                uVar3 = fcn.00420a40((*(*0x20 + 0x18) - *(*0x20 + -0x10)) + -1);\n                iVar1 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x30 + iVar1) = *(*0x20 + -0x30);\n                *(iVar2 + 0x38 + iVar1) = uVar3;\n                return *(*0x20 + -0x28);\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x50) = 0x420b2c;\n            in_RAX = fcn.0045e420(0x3f);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x420b45;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 701
    },
    "0042c100": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042c100(int64_t **arg1)\n\n{\n    ulong in_RAX;\n    int64_t **arg1_00;\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t **arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t **arg1_01;\n    int64_t iVar8;\n    int64_t **unaff_R13;\n    int64_t unaff_R14;\n    bool bVar9;\n    bool bVar10;\n    \n    do {\n        ppiVar2 = arg1;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000U < arg1 + 0x100000000000) {\n                ppiVar2 = arg1 - unaff_RBX;\n            }\n            else {\n                ppiVar2 = NULL;\n            }\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            if (ppiVar2 != NULL) {\n                *(*0x20 + -0x28) = unaff_RBX + 0x800000000000U;\n                *(*0x20 + -0x30) = arg1 + 0x100000000000;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x68) = 0x42c165;\n                arg1_00 = fcn.0042bee0();\n                if (arg1_00 < 1) {\n                    ppiVar4 = *(*0x20 + 8);\n                    iVar7 = *(*0x20 + -0x20);\n                    bVar9 = false;\ncode_r0x0042c1ae:\n                    ppiVar2 = ppiVar4[1];\n                    piVar1 = *ppiVar4;\n                    arg2 = ppiVar4[2];\n                    if (arg1_00 < ppiVar2) {\n                        if (arg1_00 < ppiVar2) {\n                            iVar8 = *(*0x20 + -0x18);\n                            bVar10 = piVar1[arg1_00 * 2] == iVar8;\n                            goto code_r0x0042c1ea;\n                        }\n                    }\n                    else {\n                        iVar8 = *(*0x20 + -0x18);\n                        bVar10 = false;\ncode_r0x0042c1ea:\n                        if (bVar10) {\n                            if (!bVar9) {\ncode_r0x0042c314:\n                                if (bVar10) {\n                                    if (arg1_00 < ppiVar2) {\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x0042c511;\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x38) = arg1_00;\n                                    arg1_01 = ppiVar2 + 1;\n                                    if (arg2 < arg1_01) {\n                                        *(*0x20 + -0x40) = arg2;\n                                        *(*0x20 + -0x48) = ppiVar2;\n                                        *(*0x20 + -0x10) = piVar1;\n                                        ppiVar4[1] = arg1_01;\n                                        ppiVar4[2] = arg2 << 1;\n                                        piVar1 = ppiVar4[4];\n                                        *(*0x20 + -0x68) = 0x42c40d;\n                                        piVar1 = fcn.0040ca40(piVar1);\n                                        ppiVar4 = *(*0x20 + 8);\n                                        *ppiVar4 = piVar1;\n                                        arg2 = ppiVar4[2];\n                                        arg1_00 = *(*0x20 + -0x38);\n                                        if (arg1_00 <= arg2) {\n                                            arg2 = *(*0x20 + -0x40);\n                                            if (arg1_00 <= arg2) {\n                                                piVar5 = *(*0x20 + -0x10);\n                                                if (piVar1 != piVar5) {\n                                                    *(*0x20 + -0x68) = 0x42c44e;\n                                                    fcn.0045eda0(arg1_00 << 4);\n                                                    arg1_00 = *(*0x20 + -0x38);\n                                                    ppiVar4 = *(*0x20 + 8);\n                                                    piVar5 = *(*0x20 + -0x10);\n                                                    arg2 = *(*0x20 + -0x40);\n                                                }\n                                                arg1_01 = ppiVar4[1];\n                                                if (arg1_00 + 1U <= arg1_01) {\n                                                    iVar7 = arg1_01 + (-1 - arg1_00);\n                                                    if (*(*0x20 + -0x48) - arg1_00 < iVar7) {\n                                                        iVar7 = *(*0x20 + -0x48) - arg1_00;\n                                                    }\n                                                    if (piVar5 + (arg1_00 - arg2 >> 0x3f & arg1_00 << 4) !=\n                                                        *ppiVar4 +\n                                                        (-(ppiVar4[2] + (-1 - arg1_00)) >> 0x3f & (arg1_00 + 1U) * 0x10)\n                                                       ) {\n                                                        *(*0x20 + -0x68) = 0x42c4d1;\n                                                        fcn.0045eda0(iVar7 << 4);\n                                                        ppiVar4 = *(*0x20 + 8);\n                                                        arg1_00 = *(*0x20 + -0x38);\n                                                    }\n                                                    iVar7 = *(*0x20 + -0x20);\n                                                    iVar8 = *(*0x20 + -0x18);\n                                                    goto code_r0x0042c4eb;\n                                                }\ncode_r0x0042c532:\n                                                *(*0x20 + -0x68) = 0x42c53a;\n                                                arg1_00 = arg1_01;\n                                                fcn.0045e4e0(arg1_01);\n                                            }\n                                            *(*0x20 + -0x68) = 0x42c545;\n                                            fcn.0045e4a0(arg1_00, arg2);\n                                        }\n                                        *(*0x20 + -0x68) = 0x42c54d;\n                                        fcn.0045e4a0(arg1_00, arg2);\ncode_r0x0042c54d:\n                                        *(*0x20 + -0x68) = 0x42c558;\n                                        fcn.0045e4e0(arg1_01);\ncode_r0x0042c558:\n                                        *(*0x20 + -0x68) = 0x42c565;\n                                        fcn.0045e4e0(arg1_01);\n                                    }\n                                    else if (arg1_01 <= arg2) {\n                                        ppiVar4[1] = arg1_01;\n                                        arg2 = *ppiVar4;\n                                        if (arg1_01 < arg1_00 + 1U) goto code_r0x0042c558;\n                                        iVar3 = ppiVar2 - arg1_00;\n                                        if (arg1_01 < arg1_00) goto code_r0x0042c54d;\n                                        if (iVar3 + 1 < iVar3) {\n                                            iVar3 = iVar3 + 1;\n                                        }\n                                        if ((-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 << 4) + arg2 !=\n                                            arg2 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1U) * 0x10)) {\n                                            *(*0x20 + -0x68) = 0x42c3c5;\n                                            fcn.0045eda0(iVar3 << 4);\n                                            ppiVar4 = *(*0x20 + 8);\n                                            arg1_00 = *(*0x20 + -0x38);\n                                            iVar7 = *(*0x20 + -0x20);\n                                            iVar8 = *(*0x20 + -0x18);\n                                        }\ncode_r0x0042c4eb:\n                                        piVar1 = *ppiVar4;\n                                        ppiVar2 = ppiVar4[1];\n                                        if (ppiVar2 <= arg1_00) {\n                                            *(*0x20 + -0x68) = 0x42c532;\n                                            fcn.0045e420(ppiVar2);\n                                            arg2 = ppiVar4;\n                                            arg1_01 = arg1_00;\n                                            goto code_r0x0042c532;\n                                        }\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        piVar1[arg1_00 * 2 + 1] = iVar8;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x0042c511;\n                                    }\n                                    ppiVar2 = arg1_01;\n                                    *(*0x20 + -0x68) = 0x42c56d;\n                                    fcn.0045e4a0(ppiVar2, arg2);\n                                }\n                                *(*0x20 + -0x68) = 0x42c575;\n                                fcn.0045e420(ppiVar2);\n                                goto code_r0x0042c575;\n                            }\n                            if (arg1_00 < ppiVar2) {\n                                if (ppiVar2 <= arg1_00 - 1U) goto code_r0x0042c592;\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = piVar1[arg1_00 * 2 + 1];\n                                ppiVar2 = ppiVar4[1];\n                                if (ppiVar2 < arg1_00) goto code_r0x0042c58a;\n                                iVar3 = ppiVar2 - arg1_00;\n                                unaff_R13 = ppiVar2;\n                                if (ppiVar2 < arg1_00 + 1) goto code_r0x0042c57f;\n                                if (iVar3 + -1 < iVar3) {\n                                    iVar3 = iVar3 + -1;\n                                }\n                                if (*ppiVar4 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1) * 0x10) !=\n                                    (-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 * 0x10) + *ppiVar4) {\n                                    *(*0x20 + -0x68) = 0x42c29e;\n                                    fcn.0045eda0(iVar3 << 4);\n                                    ppiVar4 = *(*0x20 + 8);\n                                    iVar7 = *(*0x20 + -0x20);\n                                    iVar8 = *(*0x20 + -0x18);\n                                }\n                                arg2 = ppiVar4[2];\n                                ppiVar2 = ppiVar4[1] + -1;\n                                if (arg2 < ppiVar2) goto code_r0x0042c57a;\n                                ppiVar4[1] = ppiVar2;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\ncode_r0x0042c511:\n                                if (bVar9 || bVar10) {\n                                    iVar8 = 0;\n                                }\n                                else {\n                                    iVar8 = iVar8 - iVar7;\n                                }\n                                ppiVar4[3] = ppiVar4[3] + iVar8;\n                                return;\n                            }\n                        }\n                        else {\n                            if (!bVar9) goto code_r0x0042c314;\n                            if (arg1_00 - 1U < ppiVar2) {\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = iVar8;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                goto code_r0x0042c511;\n                            }\ncode_r0x0042c575:\n                            *(*0x20 + -0x68) = 0x42c57a;\n                            fcn.0045e420(ppiVar2);\ncode_r0x0042c57a:\n                            *(*0x20 + -0x68) = 0x42c57f;\n                            fcn.0045e4a0(ppiVar2, arg2);\ncode_r0x0042c57f:\n                            *(*0x20 + -0x68) = 0x42c58a;\n                            ppiVar2 = unaff_R13;\n                            fcn.0045e4e0(unaff_R13);\ncode_r0x0042c58a:\n                            *(*0x20 + -0x68) = 0x42c592;\n                            fcn.0045e4e0(ppiVar2);\ncode_r0x0042c592:\n                            *(*0x20 + -0x68) = 0x42c597;\n                            fcn.0045e420(ppiVar2);\n                        }\n                        *(*0x20 + -0x68) = 0x42c59f;\n                        fcn.0045e420(ppiVar2);\n                    }\n                    *(*0x20 + -0x68) = 0x42c5a5;\n                    fcn.0045e420(ppiVar2);\n                }\n                else {\n                    ppiVar4 = *(*0x20 + 8);\n                    ppiVar2 = ppiVar4[1];\n                    if (arg1_00 - 1U < ppiVar2) {\n                        iVar7 = *(*0x20 + -0x20);\n                        bVar9 = *(*ppiVar4 + 8 + (arg1_00 - 1U) * 0x10) == iVar7;\n                        goto code_r0x0042c1ae;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x42c5ad;\n                fcn.0045e420(ppiVar2);\n            }\n            *(*0x20 + -0x68) = 0x42c5b2;\n            fcn.00434ec0();\n            *(*0x20 + -0x68) = 0x42c5c5;\n            fcn.004357c0();\n            *(*0x20 + -0x68) = 0x42c5cf;\n            fcn.00435620();\n            *(*0x20 + -0x68) = 0x42c5e5;\n            fcn.004357c0();\n            *(*0x20 + -0x68) = 0x42c5ef;\n            fcn.00435620();\n            *(*0x20 + -0x68) = 0x42c605;\n            fcn.004357c0();\n            *(*0x20 + -0x68) = 0x42c60a;\n            fcn.00434f40();\n            unaff_RBX = 0x29;\n            *(*0x20 + -0x68) = 0x42c61b;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = ppiVar2;\n        *(puVar6 + -8) = 0x42c630;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3789
    },
    "004046c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004046c0(uint64_t arg1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int64_t unaff_RDI;\n    uint64_t uVar8;\n    \n    iVar5 = arg1 - (arg1 & 0xffffffffffffffc0);\n    uVar8 = unaff_RDI + iVar5;\n    puVar6 = unaff_RBX + (arg1 >> 6);\n    iVar4 = (arg1 & 0xffffffffffffffc0) + in_RAX;\n    uVar3 = 0;\n    uVar7 = 0;\n    do {\n        if (uVar8 <= uVar3) {\n            return;\n        }\n        if ((uVar3 & 0x3f) == 0) {\n            uVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        else {\n            uVar7 = uVar7 >> 1;\n        }\n        if (iVar5 == 0) {\n            if (((uVar7 & 1) != 0) && (cVar2 = fcn.00404040(iVar4, *(iVar4 + uVar3)),  cVar2 != '\\0')) {\n                fcn.00433580();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        else {\n            iVar5 = iVar5 + -8;\n        }\n        uVar3 = uVar3 + 8;\n    } while( true );\n}\n",
        "token_count": 388
    },
    "004089c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004089c0(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t arg1;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uchar uVar6;\n    uchar uVar7;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x130) = 0x4089f6;\n            fcn.0044bc60();\n            *(*0x20 + -0x130) = 0x4089fb;\n            uVar1 = fcn.0044c400();\n            *(*0x20 + -0xa8) = uVar1;\n            *(*0x20 + -0xf8) = unaff_RBX;\n            *(*0x20 + -0x128) = uVar1;\n            *(*0x20 + -0x120) = unaff_RBX;\n            *(*0x20 + -0x118) = 0x28;\n            *(*0x20 + -0x130) = 0x408a1b;\n            fcn.00402740(param_1, param_2);\n            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n            iVar4 = *(*0x20 + -0x110);\n            if (-1 < iVar4) {\n                uVar2 = iVar4 - 1;\n                param_2 = *(*0x20 + -0xf8);\n                if (uVar2 <= param_2) {\n                    arg1 = iVar4 + 2;\n                    uVar6 = param_2 < arg1;\n                    if (arg1 < param_2) goto code_r0x00408a79;\n                    do {\n                        uVar6 = 0;\n                        iVar4 = 0x31;\n                        *(*0x20 + -0x130) = 0x408a74;\n                        fcn.00449580(0x31);\n                        *(*0x20 + -0x130) = 0x408a79;\n                        uVar2 = fcn.00433580();\ncode_r0x00408a79:\n                        if (uVar6) goto code_r0x00408ced;\n                        if (arg1 < uVar2) goto code_r0x00408ce5;\n                        iVar3 = *(*0x20 + -0xa8);\n                    } while ((CONCAT11(*(iVar4 + iVar3), *(iVar4 + -1 + iVar3)) != 0x282e) ||\n                            (*(iVar4 + 1 + iVar3) != '*'));\n                    *(*0x20 + -0x100) = uVar2;\n                    param_2 = param_2 - iVar4;\n                    *(*0x20 + -0xf0) = param_2;\n                    iVar4 = param_2 - 2;\n                    *(*0x20 + -0xf8) = iVar4;\n                    iVar3 = (-iVar4 >> 0x3f & arg1) + iVar3;\n                    *(*0x20 + -0xa0) = iVar3;\n                    *(*0x20 + -0x128) = iVar3;\n                    *(*0x20 + -0x120) = iVar4;\n                    *(*0x20 + -0x118) = 0x29;\n                    *(*0x20 + -0x130) = 0x408af8;\n                    fcn.00402740(iVar4, param_2);\n                    unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                    uVar2 = *(*0x20 + -0x110);\n                    if (-1 < uVar2) {\n                        arg1 = uVar2 + 2;\n                        param_2 = *(*0x20 + -0xf8);\n                        uVar6 = arg1 < param_2;\n                        uVar7 = arg1 == param_2;\n                        if (arg1 < param_2) goto code_r0x00408b4a;\n                        do {\n                            uVar6 = 0;\n                            uVar7 = 1;\n                            uVar2 = 0x2e;\n                            *(*0x20 + -0x130) = 0x408b45;\n                            fcn.00449580(0x2e);\n                            *(*0x20 + -0x130) = 0x408b4a;\n                            fcn.00433580();\ncode_r0x00408b4a:\n                            if (!uVar6 && !uVar7) goto code_r0x00408cb2;\n                            if (arg1 < uVar2) goto code_r0x00408ca7;\n                        } while (*(*(*0x20 + -0xa0) + uVar2) != 0x2e29);\n                        *(*0x20 + -0x138) = unaff_RBP;\n                        *(*0x20 + -0x130) = 0x408b8f;\n                        iVar4 = fcn.0045e6b9();\n                        unaff_RBP = *(*0x20 + -0x138);\n                        *(*0x20 + -0x98) = 0x4a9974;\n                        *(*0x20 + -0x90) = 0xd;\n                        *(*0x20 + -0x88) = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x80) = *(*0x20 + -0x100);\n                        *(*0x20 + -0x78) = 0x4a7f3a;\n                        *(*0x20 + -0x70) = 1;\n                        *(*0x20 + -0x68) = iVar4;\n                        *(*0x20 + -0x60) = uVar2;\n                        *(*0x20 + -0x58) = 0x4a7f3a;\n                        *(*0x20 + -0x50) = 1;\n                        *(*0x20 + -0x48) = (-((*(*0x20 + -0xf0) - uVar2) + -4) >> 0x3f & arg1) + iVar4;\n                        *(*0x20 + -0x40) = (*(*0x20 + -0xf0) - uVar2) + -4;\n                        *(*0x20 + -0x38) = 0x4aab50;\n                        *(*0x20 + -0x30) = 0x13;\n                        *(*0x20 + -0x28) = iVar4;\n                        *(*0x20 + -0x20) = uVar2;\n                        param_2 = 0x4a876c;\n                        *(*0x20 + -0x18) = 0x4a876c;\n                        *(*0x20 + -0x10) = 8;\n                        *(*0x20 + -0x130) = 0x408c93;\n                        fcn.00449340(9);\n                        *(*0x20 + -0x130) = 0x408c98;\n                        fcn.00409fe0();\n                        *(*0x20 + -0x130) = 0x408ca7;\n                        fcn.00432de0();\ncode_r0x00408ca7:\n                        *(*0x20 + -0x130) = 0x408cb2;\n                        fcn.0045e4e0(arg1);\ncode_r0x00408cb2:\n                        *(*0x20 + -0x130) = 0x408cba;\n                        fcn.0045e460(arg1, param_2);\n                    }\n                    *(*0x20 + -0x130) = 0x408cdd;\n                    fcn.00449580(0x13);\n                    *(*0x20 + -0x130) = 0x408ce5;\n                    fcn.00433580();\ncode_r0x00408ce5:\n                    *(*0x20 + -0x130) = 0x408ced;\n                    fcn.0045e4e0(arg1);\ncode_r0x00408ced:\n                    *(*0x20 + -0x130) = 0x408cf5;\n                    uVar2 = fcn.0045e460(arg1, param_2);\n                }\n                *(*0x20 + -0x130) = 0x408cfd;\n                fcn.0045e460(uVar2, param_2);\n            }\n            unaff_RBX = 0x4aaffd;\n            param_1 = 0x13;\n            *(*0x20 + -0x130) = 0x408d25;\n            fcn.00449580(0x13);\n            *(*0x20 + -0x130) = 0x408d2a;\n            fcn.00433580();\n        }\n        *(puVar5 + -8) = 0x408d30;\n        fcn.0045bdc0();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2102
    },
    "00411640": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00411640(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(in_RAX + 0x30);\n            uVar3 = *(in_RAX + 0x38);\n            if (uVar3 == uVar1) {\n                return uVar1;\n            }\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + 8) = in_RAX;\n                uVar5 = *(in_RAX + 0x40);\n                iVar4 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar5 == 0) {\n                    iVar4 = 0x40;\n                }\n                while( true ) {\n                    if (iVar4 != 0x40) {\n                        uVar5 = uVar1 + iVar4;\n                        if (uVar3 <= uVar5) {\n                            *(in_RAX + 0x30) = uVar3;\n                            return uVar3;\n                        }\n                        *(in_RAX + 0x40) = *(in_RAX + 0x40) >> (iVar4 + 1U & 0x3f) & -(iVar4 + 1U < 0x40);\n                        uVar1 = uVar1 + 1 + iVar4;\n                        if (((uVar1 & 0x3f) == 0) && (uVar3 != uVar1)) {\n                            *(*0x20 + -0x10) = uVar5;\n                            *(*0x20 + -0x18) = uVar1;\n                            *(*0x20 + -0x38) = 0x411745;\n                            fcn.00411620();\n                            in_RAX = *(*0x20 + 8);\n                            uVar1 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x10);\n                        }\n                        *(in_RAX + 0x30) = uVar1;\n                        return uVar5;\n                    }\n                    uVar1 = uVar1 + 0x40 & 0xffffffffffffffc0;\n                    if (uVar3 <= uVar1) break;\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x38) = 0x4116a5;\n                    fcn.00411620();\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(in_RAX + 0x40);\n                    iVar4 = 0;\n                    if (uVar3 != 0) {\n                        for (; (uVar3 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                        }\n                    }\n                    if (uVar3 == 0) {\n                        iVar4 = 0x40;\n                    }\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar1 = *(*0x20 + -0x18);\n                }\n                *(in_RAX + 0x30) = uVar3;\n                return uVar3;\n            }\n            *(*0x20 + -0x38) = 0x411787;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x411792;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 993
    },
    "0041c260": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0041c260(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t arg3;\n    uint64_t uVar4;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t arg1_00;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000028;\n    \n    iStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    arg1_00 = 0;\n    while (arg1_00 < unaff_RBX) {\n        uVar1 = *(arg1 + (arg1_00 >> 6));\n        uVar4 = uVar1;\n        if (uVar1 == 0) {\n            arg1_00 = arg1_00 + 0x40;\n        }\n        else {\n            iVar5 = 0;\n            for (; (iVar5 < 8 && (arg1_00 < unaff_RBX)); arg1_00 = arg1_00 + 8) {\n                if (((uVar4 & 1) != 0) && (uVar2 = *(arg1_00 + in_RAX),  uVar2 != 0)) {\n                    arg3 = arg1_00;\n                    noname_1 = uVar4;\n                    iVar3 = fcn.004119e0(arg1_00);\n                    if (iVar3 == 0) {\n                        if (((iStack0000000000000028 != 0) &&\n                            (*(iStack0000000000000028 + 0x100) < uVar2 || *(iStack0000000000000028 + 0x100) == uVar2))\n                           && (uVar2 <= *(iStack0000000000000028 + 0x108) && *(iStack0000000000000028 + 0x108) != uVar2)\n                           ) {\n                            fcn.00420620(0);\n                        }\n                    }\n                    else {\n                        fcn.0041c9c0(arg1_00, noname_1, arg3);\n                    }\n                }\n                iVar5 = iVar5 + 1;\n                uVar4 = uVar4 >> 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "0041f600": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0041f600(code **arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint64_t uStack64;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uStack64 = 0;\n    while( true ) {\n        if (unaff_RBX <= uStack64) {\n            return uStack64;\n        }\n        iVar2 = fcn.004201a0(in_RAX + 0x100b8);\n        if (iVar2 == 0) break;\n        auStack56 = CONCAT88(&uStack64, 0x41f740);\n        auStack40 = CONCAT88(iVar2, in_RAX);\n        fcn.0045bc80();\n        if (arg1 == NULL) {\n            cVar1 = '\\0';\n        }\n        else {\n            cVar1 = (**arg1)();\n        }\n        if (cVar1 != '\\0') {\n            return uStack64;\n        }\n    }\n    return uStack64;\n}\n",
        "token_count": 301
    },
    "0041fe60": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0041fe60(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (((arg1 - 1 & arg1) == 0) && (arg1 != 0)) {\n                if (arg1 < 0x41) {\n                    uVar5 = arg1;\n                    if (unaff_RDI != 0) {\n                        uVar5 = -arg1 & unaff_RDI + -1 + arg1;\n                    }\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar5;\n                    uVar5 = unaff_RBX >> 6;\n                    while( true ) {\n                        *(*0x20 + -0x28) = uVar5;\n                        bVar10 = uVar5 < 0;\n                        if (bVar10) break;\n                        if (7 < uVar5) goto code_r0x004200e8;\n                        uVar4 = *(in_RAX + uVar5 * 8);\n                        uVar5 = *(in_RAX + 0x40 + uVar5 * 8);\n                        *(*0x20 + -0x50) = 0x41ff0f;\n                        iVar3 = fcn.0041fca0(uVar4 | uVar5, arg1);\n                        if (iVar3 != -1) {\n                            bVar10 = *(*0x20 + -0x28) < 0;\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            uVar5 = *(*0x20 + -0x28);\n                            break;\n                        }\n                        uVar5 = *(*0x20 + -0x28) - 1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    if (bVar10) {\n                        return 0;\n                    }\n                    if (uVar5 < 8) break;\n                    *(*0x20 + -0x50) = 0x4200e8;\n                    fcn.0045e420(8);\ncode_r0x004200e8:\n                    arg1 = 8;\n                    *(*0x20 + -0x50) = 0x4200f5;\n                    fcn.0045e420(8);\n                }\n                *(*0x20 + -0x50) = 0x4200fa;\n                fcn.00434ec0();\n                *(*0x20 + -0x50) = 0x42010b;\n                fcn.004357c0();\n                *(*0x20 + -0x50) = 0x420115;\n                fcn.004354c0();\n                *(*0x20 + -0x50) = 0x42011a;\n                fcn.00435120();\n                *(*0x20 + -0x50) = 0x42011f;\n                fcn.00434f40();\n                *(*0x20 + -0x50) = 0x420130;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x50) = 0x420135;\n            fcn.00434ec0();\n            *(*0x20 + -0x50) = 0x420146;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x420150;\n            fcn.004354c0();\n            *(*0x20 + -0x50) = 0x420155;\n            fcn.00435120();\n            *(*0x20 + -0x50) = 0x42015a;\n            fcn.00434f40();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x50) = 0x42016b;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x420185;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n    uVar4 = *(in_RAX + uVar5 * 8);\n    uVar5 = *(in_RAX + 0x40 + uVar5 * 8);\n    *(*0x20 + -0x50) = 0x41ff5e;\n    uVar5 = fcn.0041fca0(uVar4 | uVar5, arg1);\n    uVar4 = ~uVar5;\n    iVar3 = 0x3f;\n    if (uVar4 != 0) {\n        for (; uVar4 >> iVar3 == 0; iVar3 = iVar3 + -1) {\n        }\n    }\n    if (uVar4 == 0) {\n        iVar3 = -1;\n    }\n    iVar2 = *(*0x20 + -0x28);\n    iVar1 = iVar3 + 1;\n    uVar4 = iVar2 * 0x40 + iVar1;\n    iVar8 = iVar2 * 0x40 + iVar1;\n    uVar5 = uVar5 << (-iVar1 & 0x3fU) & -(-(iVar3 + -0x3f) < 0x40);\n    if (uVar5 == 0) {\n        *(*0x20 + -0x20) = uVar4;\n        *(*0x20 + -0x18) = iVar8;\n        uVar5 = iVar3 + 1;\n        while (-1 < iVar2 + -1) {\n            *(*0x20 + -0x30) = iVar2 + -1;\n            *(*0x20 + -0x38) = uVar5;\n            *(*0x20 + -0x50) = 0x42002b;\n            uVar4 = fcn.0041fca0();\n            iVar3 = 0x3f;\n            if (uVar4 != 0) {\n                for (; uVar4 >> iVar3 == 0; iVar3 = iVar3 + -1) {\n                }\n            }\n            if (uVar4 == 0) {\n                iVar3 = -1;\n            }\n            uVar5 = (*(*0x20 + -0x38) - (iVar3 + 1)) + 0x40;\n            if (uVar4 != 0) {\n                iVar8 = *(*0x20 + -0x18);\n                uVar4 = *(*0x20 + -0x20);\n                break;\n            }\n            iVar8 = *(*0x20 + -0x18);\n            uVar4 = *(*0x20 + -0x20);\n            iVar2 = *(*0x20 + -0x30);\n        }\n    }\n    else {\n        iVar3 = 0x3f;\n        if (uVar5 != 0) {\n            for (; uVar5 >> iVar3 == 0; iVar3 = iVar3 + -1) {\n            }\n        }\n        if (uVar5 == 0) {\n            iVar3 = -1;\n        }\n        uVar5 = -(iVar3 + -0x3f);\n    }\n    uVar9 = uVar5;\n    if (*(*0x20 + -0x10) < uVar5) {\n        uVar9 = *(*0x20 + -0x10);\n    }\n    uVar9 = iVar8 - uVar9;\n    if ((((0x2000 < *0x5984a0) && (*0x5984a8 < *0x5984a0)) &&\n        (uVar7 = -(*0x5984a0 >> 0xd),  (((*0x5984a0 >> 0xd) - 1) + uVar9 & uVar7) <= uVar4)) &&\n       (uVar7 = uVar7 & uVar9,  iVar8 - uVar5 <= uVar7)) {\n        uVar9 = uVar7;\n    }\n    return uVar9;\n}\n",
        "token_count": 2101
    },
    "00427200": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00427200(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t in_RDX;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar1 = unaff_RBX;\n            uVar9 = unaff_RBX + 0x800000000000;\n            uVar10 = uVar9 >> 0x16;\n            uVar7 = unaff_RBX + arg1 * 0x2000 + 0x7fffffffffff;\n            uVar8 = uVar7 >> 0x16;\n            unaff_RBX = (uVar1 & 0x3fffff) >> 0xd;\n            *(*0x20 + -0x18) = unaff_RBX;\n            uVar4 = (arg1 * 0x2000 + (uVar1 - 1) & 0x3fffff) >> 0xd;\n            if (uVar8 == uVar10) {\n                if (0x1fff < uVar9 >> 0x23) {\n                    *(*0x20 + -0x90) = 0x427405;\n                    fcn.0045e440(0x2000);\n                    goto code_r0x00427405;\n                }\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0x40) = (uVar10 & 0x1fff) << 7;\n                iVar5 = (uVar4 - unaff_RBX) + 1;\n                *(*0x20 + -0x48) = iVar5;\n                *(*0x20 + -0x90) = 0x42738c;\n                uVar2 = fcn.00429ee0(iVar5);\n                *(*0x20 + -0x50) = uVar2;\n                *(*0x20 + -0x90) = 0x4273b0;\n                fcn.0042a5e0(*(*0x20 + -0x48));\n                iVar5 = *(*0x20 + -0x50);\ncode_r0x004273b5:\n                *(*0x20 + -0x68) = iVar5;\n                *(*0x20 + -0x90) = 0x4273de;\n                fcn.00426c20(*(*0x20 + 0x18));\n                return *(*0x20 + -0x68) << 0xd;\n            }\n            if (uVar9 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x20) = uVar8;\n                *(*0x20 + -0x28) = uVar7;\n                *(*0x20 + -0x30) = uVar10;\n                *(*0x20 + -0x38) = uVar4;\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0x40) = (uVar10 & 0x1fff) << 7;\n                *(*0x20 + -0x48) = -(unaff_RBX - 0x200);\n                *(*0x20 + -0x90) = 0x4272fc;\n                uVar2 = fcn.00429ee0(-(unaff_RBX - 0x200));\n                *(*0x20 + -0x50) = uVar2;\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x90) = 0x427325;\n                fcn.0042a5e0(*(*0x20 + -0x48));\n                iVar3 = *(*0x20 + -0x30);\n                iVar5 = *(*0x20 + 8);\n                uVar4 = *(*0x20 + -0x20);\n                uVar2 = *(*0x20 + -0x50);\n                while( true ) {\n                    in_RDX = iVar3 + 1;\n                    *(*0x20 + -0x68) = uVar2;\n                    if (uVar4 <= in_RDX) {\n                        if (0x1fff < *(*0x20 + -0x28) >> 0x23) {\n                            *(*0x20 + -0x90) = 0x42754f;\n                            iVar3 = fcn.0045e440(0x2000);\n                            goto code_r0x0042754f;\n                        }\n                        *(*0x20 + -0x10) = *(iVar5 + 0x78 + (*(*0x20 + -0x28) >> 0x23) * 8);\n                        *(*0x20 + -0x40) = (uVar4 & 0x1fff) << 7;\n                        *(*0x20 + -0x48) = *(*0x20 + -0x38) + 1;\n                        *(*0x20 + -0x90) = 0x42750e;\n                        uVar2 = fcn.00429ee0(*(*0x20 + -0x38) + 1);\n                        *(*0x20 + -0x50) = uVar2;\n                        *(*0x20 + -0x90) = 0x42752f;\n                        fcn.0042a5e0(*(*0x20 + -0x48));\n                        iVar5 = *(*0x20 + -0x68) + *(*0x20 + -0x50);\n                        goto code_r0x004273b5;\n                    }\n                    if (0x1fff < in_RDX >> 0xd) break;\n                    *(*0x20 + -0x60) = in_RDX;\n                    *(*0x20 + -0x10) = *(iVar5 + 0x78 + (in_RDX >> 0xd) * 8);\n                    iVar5 = (in_RDX & 0x1fff) * 0x80;\n                    *(*0x20 + -0x40) = iVar5;\n                    *(*0x20 + -0x58) = iVar5 + 0x40;\n                    *(*0x20 + -0x90) = 0x4274a5;\n                    iVar5 = fcn.00429ee0(0x200);\n                    in_RDX = *(*0x20 + -0x68) + iVar5;\n                    iVar5 = *(*0x20 + -0x40) + *(*0x20 + -0x10);\n                    for (iVar3 = 0; iVar3 < 8; iVar3 = iVar3 + 1) {\ncode_r0x0042754f:\n                        *(iVar5 + iVar3 * 8) = 0xffffffffffffffff;\n                    }\ncode_r0x00427405:\n                    *(*0x20 + -0x68) = in_RDX;\n                    unaff_RBX = 0x40;\n                    *(*0x20 + -0x90) = 0x42741e;\n                    fcn.0045eaa0(*(*0x20 + -0x58));\n                    iVar3 = *(*0x20 + -0x60);\n                    iVar5 = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0x20);\n                    uVar2 = *(*0x20 + -0x68);\n                }\n                *(*0x20 + -0x90) = 0x427575;\n                fcn.0045e440(0x2000);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x90) = 0x427585;\n            in_RAX = fcn.0045e440(0x2000);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x42759a;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2091
    },
    "004299e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.004299e0(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar10 = *(in_RAX + 0x10078);\n            uVar8 = iVar10 + 0x800000000000;\n            uVar6 = uVar8 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar6 || *(in_RAX + 0x10088) == uVar6) {\n                return 0;\n            }\n            uVar4 = *(in_RAX + 0x68);\n            iVar2 = *(in_RAX + 0x60);\n            if (uVar6 < uVar4) {\n                *(*0x20 + 8) = in_RAX;\n                uVar4 = *(iVar2 + uVar6 * 8);\n                if (uVar4 == 0) {\n                    *(*0x20 + -0x68) = 0x429a5a;\n                    uVar3 = fcn.004276a0();\n                    if (uVar3 == 0) {\n                        *(*(*0x20 + 8) + 0x10078) = *0x52d388;\n                        return 0;\n                    }\n                    uVar4 = uVar3 + 0x800000000000;\n                    if (uVar4 >> 0x23 < 0x2000) {\n                        iVar2 = *(*(*0x20 + 8) + 0x78 + (uVar4 >> 0x23) * 8);\n                        uVar4 = (uVar4 >> 0x16 & 0x1fff) * 0x80;\n                        iVar10 = iVar2 + uVar4;\n                        uVar6 = (uVar3 & 0x3fffff) >> 0x13;\n                        if (uVar6 < 8) {\n                            uVar9 = *(iVar2 + uVar4 + uVar6 * 8);\n                            uVar8 = uVar4 + 0x40;\n                            uVar3 = uVar3 & 0xfffffffffff80000;\n                            uVar6 = *(iVar2 + uVar8 + uVar6 * 8);\ncode_r0x00429bcb:\n                            uVar9 = ~uVar9;\n                            uVar4 = (uVar3 & 0x3fffff) >> 0x13;\n                            if (uVar4 < 8) {\n                                *(*0x20 + -0x40) = uVar6;\n                                *(*0x20 + -0x38) = uVar9;\n                                *(*0x20 + -0x30) = uVar3;\n                                puVar1 = iVar10 + uVar4 * 8;\n                                *puVar1 = *puVar1 | uVar9;\n                                puVar1 = iVar10 + 0x40 + uVar4 * 8;\n                                *puVar1 = *puVar1 & ~(uVar9 & uVar6);\n                                *(*0x20 + -0x68) = 0x429c13;\n                                fcn.00426c20(0x40);\n                                iVar10 = *(*0x20 + -0x30);\n                                *(*(*0x20 + 8) + 0x10078) = iVar10 + 0x7e000;\n                                return iVar10;\n                            }\n                            *(*0x20 + -0x68) = 0x429c5a;\n                            fcn.0045e440(8);\ncode_r0x00429c5a:\n                            *(*0x20 + -0x68) = 0x429c65;\n                            fcn.0045e440(8);\n                            uVar4 = uVar8;\n                            goto code_r0x00429c65;\n                        }\n                        goto code_r0x00429c85;\n                    }\n                }\n                else {\n                    uVar8 = uVar8 >> 0x23;\n                    if (uVar8 < 0x2000) {\n                        *(*0x20 + -0x28) = uVar6;\n                        iVar2 = *(in_RAX + 0x78 + uVar8 * 8);\n                        *(*0x20 + -0x10) = iVar2;\n                        iVar7 = (uVar6 & 0x1fff) * 0x80;\n                        *(*0x20 + -0x20) = iVar7;\n                        uVar4 = iVar2 + iVar7;\n                        *(*0x20 + -0x18) = uVar4;\n                        *(*0x20 + -0x68) = 0x429b5e;\n                        uVar8 = fcn.0042a2e0((iVar10 & 0x3fffff) >> 0xd);\n                        iVar10 = *(*0x20 + -0x10) + *(*0x20 + -0x20);\n                        if (uVar8 != 0xffffffffffffffff) {\n                            uVar6 = uVar8 >> 6;\n                            if (uVar6 < 8) {\n                                uVar3 = ((uVar8 & 0xffffffffffffffc0) * 0x2000 + *(*0x20 + -0x28) * 0x400000) -\n                                        0x800000000000;\n                                uVar9 = *(*(*0x20 + -0x18) + uVar6 * 8);\n                                uVar8 = *(*0x20 + -0x20) + 0x40 + *(*0x20 + -0x10);\n                                uVar6 = *(uVar8 + uVar6 * 8);\n                                goto code_r0x00429bcb;\n                            }\n                            goto code_r0x00429c5a;\n                        }\ncode_r0x00429c65:\n                        *(*0x20 + -0x68) = 0x429c76;\n                        fcn.00433580();\n                    }\n                    *(*0x20 + -0x68) = 0x429c85;\n                    fcn.0045e440(0x2000);\ncode_r0x00429c85:\n                    *(*0x20 + -0x68) = 0x429c8f;\n                    fcn.0045e440(8);\n                }\n                *(*0x20 + -0x68) = 0x429c9c;\n                fcn.0045e440(0x2000);\n            }\n            *(*0x20 + -0x68) = 0x429ca7;\n            in_RAX = fcn.0045e440(uVar4);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x429cb2;\n        fcn.00460800();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1688
    },
    "0042a4a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.0042a4a0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    \n    arg1 = arg1 >> 6;\n    uVar3 = 0;\n    iVar4 = -1;\n    iVar5 = -1;\n    do {\n        if (7 < arg1) {\n            if (unaff_RBX <= uVar3) {\n                return iVar5;\n            }\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        if (uVar1 == 0xffffffffffffffff) {\n            uVar3 = 0;\n        }\n        else {\n            if (iVar4 == -1) {\n                uVar6 = ~uVar1;\n                iVar4 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar6 == 0) {\n                    iVar4 = 0x40;\n                }\n                iVar4 = arg1 * 0x40 + iVar4;\n            }\n            if (uVar3 == 0) {\n                iVar2 = 0x3f;\n                if (uVar1 != 0) {\n                    for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    iVar2 = -1;\n                }\n                iVar5 = iVar2 + 1 + arg1 * 0x40;\n                uVar3 = -(iVar2 + -0x3f);\n            }\n            else {\n                uVar6 = 0;\n                if (uVar1 != 0) {\n                    for (; (uVar1 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    uVar6 = 0x40;\n                }\n                if (unaff_RBX <= uVar6 + uVar3) {\n                    return iVar5;\n                }\n                if (uVar6 < 0x40) {\n                    iVar2 = 0x3f;\n                    if (uVar1 != 0) {\n                        for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                        }\n                    }\n                    if (uVar1 == 0) {\n                        iVar2 = -1;\n                    }\n                    iVar5 = iVar2 + 1 + arg1 * 0x40;\n                    uVar3 = -(iVar2 + -0x3f);\n                }\n                else {\n                    uVar3 = uVar3 + 0x40;\n                }\n            }\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 679
    },
    "0042e640": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042e640(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    ulong uStack24;\n    ulong uStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar1 = fcn.0042dd20(0xd);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0042dc60(0x27);\n        if (iVar1 != 0) {\n            uStack24 = 0x498be0;\n            uStack16 = 0x4b29d8;\n            fcn.0045a240(1);\n            fcn.00430980();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "0042fa80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042fa80(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + -0xc) = 0;\n            if (arg1 != 0) {\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_WriteConsoleW;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x30) = arg1 & 0xffffffff;\n                *(*0x20 + -0x28) = *0x20 + -0xc;\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x50) = 0x42fae5;\n                fcn.00430a80();\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x50) = 0x42fb15;\n            in_RAX = fcn.0045e420(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x42fb2f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 564
    },
    "00430dc0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00430dc0(void)\n\n{\n    uint in_EAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00430b00();\n    *(*(**(in_GS_OFFSET + *0x598520) + 0x30) + 0xe0) = in_EAX;\n    return;\n}\n",
        "token_count": 130
    },
    "004339e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004339e0(void)\n\n{\n    fcn.0045bc80();\n    fcn.0045bc80();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 44
    },
    "004357c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004357c0(void)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00434fa0(unaff_RBX);\n    return;\n}\n",
        "token_count": 94
    },
    "00449580": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00449580(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00449340(2);\n    return;\n}\n",
        "token_count": 86
    },
    "0044be00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044c0cc)\n// WARNING: Removing unreachable block (ram,0x0044c0da)\n// WARNING: Removing unreachable block (ram,0x0044c250)\n// WARNING: Removing unreachable block (ram,0x0044c0ea)\n// WARNING: Removing unreachable block (ram,0x0044c1ef)\n// WARNING: Removing unreachable block (ram,0x0044c2e1)\n// WARNING: Removing unreachable block (ram,0x0044c33b)\n// WARNING: Removing unreachable block (ram,0x0044c267)\n// WARNING: Removing unreachable block (ram,0x0044c34c)\n\nuint fcn.0044be00(uint64_t arg1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t in_R8;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    int32_t iStackX24;\n    uint64_t uStackX32;\n    int64_t in_stack_00000028;\n    uint uStack140;\n    uint64_t uStack128;\n    uint64_t uStack64;\n    int64_t iStack56;\n    int64_t iStack32;\n    uint64_t uStack24;\n    int64_t iStack16;\n    \n    while (iVar5 = arg1,  &uStack64 < *(unaff_R14 + 0x10) || &uStack64 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n        arg1 = arg1 & 0xffffffff;\n        in_R8 = in_R8 & 0xff;\n        iStackX24 = iVar5;\n        uStackX32 = unaff_RDI;\n        in_stack_00000028 = unaff_RSI;\n    }\n    if (iVar5 == 0) {\n        return 0xffffffff;\n    }\n    if (unaff_RSI == 0) goto code_r0x0044be69;\n    uVar6 = unaff_RDI >> 3 & 1;\n    uVar8 = 0;\n    do {\n        if (uVar8 < 8) {\n            iVar7 = uVar6 * 0x80 + unaff_RSI;\n            iVar9 = uVar8 * 0x10;\n            if ((*(iVar7 + 8 + iVar9) == arg1) && (*(iVar7 + iVar9) == unaff_RDI)) {\n                return *(iVar7 + 0xc + iVar9);\n            }\n        }\n        else {\ncode_r0x0044be69:\n            if (in_RAX == 0) {\n                if ((in_R8 == '\\0') || (uVar6 = *0x5983a4,  *0x5983a4 != 0)) {\n                    return 0xffffffff;\n                }\n                fcn.0044bc00();\n                fcn.00434ec0();\n                fcn.004357c0();\n                fcn.00435620();\n                fcn.00435120();\n                fcn.00434f40();\n                iVar7 = fcn.00433580();\ncode_r0x0044bf96:\n                do {\n                    iStack56 = iVar7;\n                    fcn.0044bc00();\n                    iVar7 = fcn.0044cc20(uVar6);\n                } while (uStack128 <= uStackX32);\n                if (in_stack_00000028 == 0) {\n                    return uStack140;\n                }\n                unaff_RBX = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar3 = ZEXT816(unaff_RBX) * ZEXT816(unaff_RBX ^ 0xe7037ed1a0b428db);\n                arg1 = SUB168(auVar3 >> 0x40, 0);\n                *(*(unaff_R14 + 0x30) + 0xf0) = unaff_RBX;\n                unaff_RSI = (uStackX32 >> 3 & 1) * 0x80;\n                in_R8 = in_stack_00000028 + unaff_RSI;\n                uVar1 = *(in_stack_00000028 + 8 + unaff_RSI);\n                uVar2 = *(in_stack_00000028 + 0xc + unaff_RSI);\n                uVar6 = uVar2;\n                uVar8 = *(in_stack_00000028 + unaff_RSI);\n                uVar4 = ((SUB164(auVar3, 0) ^ SUB164(auVar3 >> 0x40, 0)) << 3) >> 0x20;\n                if (uVar4 < 8) {\n                    iVar7 = uVar4 * 0x10;\n                    *(in_R8 + iVar7) = uVar8;\n                    *(in_R8 + 8 + iVar7) = uVar1;\n                    *(in_R8 + 0xc + iVar7) = uVar2;\n                    *(in_stack_00000028 + unaff_RSI) = uStackX32;\n                    *(in_stack_00000028 + 8 + unaff_RSI) = iStackX24;\n                    *(in_stack_00000028 + 0xc + unaff_RSI) = uStack140;\n                    return uStack140;\n                }\n                fcn.0045e420(8);\n            }\n            else {\n                uVar6 = *(unaff_RBX + 0x60);\n                iVar5 = arg1;\n                uVar8 = arg1 & 0xffffffff;\n                arg1 = *(unaff_RBX + 0x58);\n                if (uVar8 <= *(unaff_RBX + 0x58)) {\n                    uStack64 = uVar8;\n                    iStack32 = in_RAX;\n                    uStack24 = unaff_RBX;\n                    iStack16 = *(unaff_RBX + 0x50);\n                    uStack128 = fcn.0044bc00();\n                    uStack140 = 0xffffffff;\n                    uVar6 = uVar6 - uStack64;\n                    iVar7 = (-uVar6 >> 0x3f & uStack64) + iStack16;\n                    iStackX24 = iVar5;\n                    uStackX32 = unaff_RDI;\n                    in_stack_00000028 = unaff_RSI;\n                    goto code_r0x0044bf96;\n                }\n            }\n            unaff_RDI = arg1;\n            in_RAX = fcn.0045e4e0(arg1);\n        }\n        uVar8 = uVar8 + 1;\n    } while( true );\n}\n",
        "token_count": 1550
    },
    "00450d20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00450d20(void)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    *(in_RAX + 0xd8) = 0;\n    *(in_RAX + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    iVar2 = fcn.00451400();\n    piVar3 = fcn.0040c6e0();\n    *piVar3 = iVar2 + 1;\n    uVar1 = fcn.00450540(1);\n    auStack24 = ZEXT1216(CONCAT48(uVar1, *(in_RAX + 0x98)));\n    fcn.0044f960(auStack24);\n    return;\n}\n",
        "token_count": 248
    },
    "00451040": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00451040(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    *(in_RAX + 0xd8) = *(in_RAX + 0xd8) + 1;\n    if (*(in_RAX + 0xe0) == iVar1) {\n        uStack32 = *(in_RAX + 0x98);\n        fcn.0044f960(&uStack32);\n    }\n    else {\n        *(in_RAX + 0xe0) = iVar1;\n        auStack24 = CONCAT88(*(in_RAX + 0xd8), *(in_RAX + 0x98));\n        fcn.0044f960(auStack24);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00451160": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00451160(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    ulong uStack24;\n    uint64_t uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((in_RAX != 0) && (in_RAX < *0x54a540)) {\n        in_RAX = 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n    *(iVar1 + 0xe0) = *(*(iVar1 + 0x30) + 0xa0);\n    uStack32 = *(iVar1 + 0x98);\n    uStack24 = *(iVar1 + 0xd8);\n    uStack16 = in_RAX >> 6;\n    fcn.0044f960(&uStack32);\n    return;\n}\n",
        "token_count": 268
    },
    "00455c40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00455c40(void)\n\n{\n    uint64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == -1) {\n                return 0x40a260;\n            }\n            for (iVar2 = 0x532f00; iVar2 != 0; iVar2 = *(iVar2 + 0x230)) {\n                if ((*(iVar2 + 0x128) < in_RAX || *(iVar2 + 0x128) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x130) && *(iVar2 + 0x130) != in_RAX)) goto code_r0x00455ca0;\n            }\n            iVar2 = 0;\ncode_r0x00455ca0:\n            if (iVar2 != 0) {\n                *(*0x20 + -0x50) = 0x455d79;\n                iVar2 = fcn.0044b9e0();\n                return iVar2;\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x50) = 0x455cc5;\n            fcn.0040a520();\n            *(*0x20 + -0x50) = 0x455cdc;\n            puVar1 = fcn.0040f160(*(*0x20 + 0x10));\n            *(*0x20 + -0x18) = *puVar1;\n            *(*0x20 + -0x50) = 0x455cf3;\n            fcn.0040a740();\n            if (*(*0x20 + -0x18) != 0) {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x50) = 0x455d05;\n            fcn.00434ec0();\n            *(*0x20 + -0x50) = 0x455d16;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x455d25;\n            fcn.00435620();\n            *(*0x20 + -0x50) = 0x455d36;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x455d45;\n            fcn.00435620();\n            *(*0x20 + -0x50) = 0x455d56;\n            fcn.004357c0();\n            *(*0x20 + -0x50) = 0x455d5b;\n            fcn.00434f40();\n            iVar2 = 0x532f00;\n            while (iVar2 != 0) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = *(iVar2 + 0x128);\n                *(*0x20 + -0x28) = *(iVar2 + 0x130);\n                *(*0x20 + -0x50) = 0x455da5;\n                fcn.00434ec0();\n                *(*0x20 + -0x50) = 0x455db6;\n                fcn.004357c0();\n                *(*0x20 + -0x50) = 0x455dc5;\n                fcn.00435620();\n                *(*0x20 + -0x50) = 0x455dd6;\n                fcn.004357c0();\n                *(*0x20 + -0x50) = 0x455de5;\n                fcn.00435620();\n                *(*0x20 + -0x50) = 0x455dea;\n                fcn.00435120();\n                *(*0x20 + -0x50) = 0x455def;\n                fcn.00434f40();\n                iVar2 = *(*(*0x20 + -0x10) + 0x230);\n            }\n            unaff_EBX = 0x2e;\n            *(*0x20 + -0x50) = 0x455e1a;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x455e29;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1174
    },
    "0045a880": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045a880(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [8];\n    int64_t iStackX16;\n    ulong uStackX24;\n    \n    iStackX16 = 0;\n    uStackX24 = 0;\n    piVar1 = *(**(in_GS_OFFSET + *0x598520) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + *0x598520);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x30);\n    *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_LoadLibraryW;\n    *(iVar2 + 0x2c8) = 1;\n    *(iVar2 + 0x2d0) = auStackX8;\n    fcn.00403880(iVar2 + 0x2c0);\n    iStackX16 = *(iVar2 + 0x2d8);\n    if (iStackX16 == 0) {\n        uStackX24 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043f100();\n    return;\n}\n",
        "token_count": 343
    },
    "0045e580": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e580(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    unaff_RDI[0x80] = in_XMM15_Da;\n    unaff_RDI[0x81] = in_XMM15_Db;\n    unaff_RDI[0x82] = in_XMM15_Dc;\n    unaff_RDI[0x83] = in_XMM15_Dd;\n    unaff_RDI[0x84] = in_XMM15_Da;\n    unaff_RDI[0x85] = in_XMM15_Db;\n    unaff_RDI[0x86] = in_XMM15_Dc;\n    unaff_RDI[0x87] = in_XMM15_Dd;\n    unaff_RDI[0x88] = in_XMM15_Da;\n    unaff_RDI[0x89] = in_XMM15_Db;\n    unaff_RDI[0x8a] = in_XMM15_Dc;\n    unaff_RDI[0x8b] = in_XMM15_Dd;\n    unaff_RDI[0x8c] = in_XMM15_Da;\n    unaff_RDI[0x8d] = in_XMM15_Db;\n    unaff_RDI[0x8e] = in_XMM15_Dc;\n    unaff_RDI[0x8f] = in_XMM15_Dd;\n    unaff_RDI[0x90] = in_XMM15_Da;\n    unaff_RDI[0x91] = in_XMM15_Db;\n    unaff_RDI[0x92] = in_XMM15_Dc;\n    unaff_RDI[0x93] = in_XMM15_Dd;\n    unaff_RDI[0x94] = in_XMM15_Da;\n    unaff_RDI[0x95] = in_XMM15_Db;\n    unaff_RDI[0x96] = in_XMM15_Dc;\n    unaff_RDI[0x97] = in_XMM15_Dd;\n    unaff_RDI[0x98] = in_XMM15_Da;\n    unaff_RDI[0x99] = in_XMM15_Db;\n    unaff_RDI[0x9a] = in_XMM15_Dc;\n    unaff_RDI[0x9b] = in_XMM15_Dd;\n    unaff_RDI[0x9c] = in_XMM15_Da;\n    unaff_RDI[0x9d] = in_XMM15_Db;\n    unaff_RDI[0x9e] = in_XMM15_Dc;\n    unaff_RDI[0x9f] = in_XMM15_Dd;\n    unaff_RDI[0xa0] = in_XMM15_Da;\n    unaff_RDI[0xa1] = in_XMM15_Db;\n    unaff_RDI[0xa2] = in_XMM15_Dc;\n    unaff_RDI[0xa3] = in_XMM15_Dd;\n    unaff_RDI[0xa4] = in_XMM15_Da;\n    unaff_RDI[0xa5] = in_XMM15_Db;\n    unaff_RDI[0xa6] = in_XMM15_Dc;\n    unaff_RDI[0xa7] = in_XMM15_Dd;\n    unaff_RDI[0xa8] = in_XMM15_Da;\n    unaff_RDI[0xa9] = in_XMM15_Db;\n    unaff_RDI[0xaa] = in_XMM15_Dc;\n    unaff_RDI[0xab] = in_XMM15_Dd;\n    unaff_RDI[0xac] = in_XMM15_Da;\n    unaff_RDI[0xad] = in_XMM15_Db;\n    unaff_RDI[0xae] = in_XMM15_Dc;\n    unaff_RDI[0xaf] = in_XMM15_Dd;\n    unaff_RDI[0xb0] = in_XMM15_Da;\n    unaff_RDI[0xb1] = in_XMM15_Db;\n    unaff_RDI[0xb2] = in_XMM15_Dc;\n    unaff_RDI[0xb3] = in_XMM15_Dd;\n    unaff_RDI[0xb4] = in_XMM15_Da;\n    unaff_RDI[0xb5] = in_XMM15_Db;\n    unaff_RDI[0xb6] = in_XMM15_Dc;\n    unaff_RDI[0xb7] = in_XMM15_Dd;\n    unaff_RDI[0xb8] = in_XMM15_Da;\n    unaff_RDI[0xb9] = in_XMM15_Db;\n    unaff_RDI[0xba] = in_XMM15_Dc;\n    unaff_RDI[0xbb] = in_XMM15_Dd;\n    unaff_RDI[0xbc] = in_XMM15_Da;\n    unaff_RDI[0xbd] = in_XMM15_Db;\n    unaff_RDI[0xbe] = in_XMM15_Dc;\n    unaff_RDI[0xbf] = in_XMM15_Dd;\n    unaff_RDI[0xc0] = in_XMM15_Da;\n    unaff_RDI[0xc1] = in_XMM15_Db;\n    unaff_RDI[0xc2] = in_XMM15_Dc;\n    unaff_RDI[0xc3] = in_XMM15_Dd;\n    unaff_RDI[0xc4] = in_XMM15_Da;\n    unaff_RDI[0xc5] = in_XMM15_Db;\n    unaff_RDI[0xc6] = in_XMM15_Dc;\n    unaff_RDI[199] = in_XMM15_Dd;\n    unaff_RDI[200] = in_XMM15_Da;\n    unaff_RDI[0xc9] = in_XMM15_Db;\n    unaff_RDI[0xca] = in_XMM15_Dc;\n    unaff_RDI[0xcb] = in_XMM15_Dd;\n    unaff_RDI[0xcc] = in_XMM15_Da;\n    unaff_RDI[0xcd] = in_XMM15_Db;\n    unaff_RDI[0xce] = in_XMM15_Dc;\n    unaff_RDI[0xcf] = in_XMM15_Dd;\n    unaff_RDI[0xd0] = in_XMM15_Da;\n    unaff_RDI[0xd1] = in_XMM15_Db;\n    unaff_RDI[0xd2] = in_XMM15_Dc;\n    unaff_RDI[0xd3] = in_XMM15_Dd;\n    unaff_RDI[0xd4] = in_XMM15_Da;\n    unaff_RDI[0xd5] = in_XMM15_Db;\n    unaff_RDI[0xd6] = in_XMM15_Dc;\n    unaff_RDI[0xd7] = in_XMM15_Dd;\n    unaff_RDI[0xd8] = in_XMM15_Da;\n    unaff_RDI[0xd9] = in_XMM15_Db;\n    unaff_RDI[0xda] = in_XMM15_Dc;\n    unaff_RDI[0xdb] = in_XMM15_Dd;\n    unaff_RDI[0xdc] = in_XMM15_Da;\n    unaff_RDI[0xdd] = in_XMM15_Db;\n    unaff_RDI[0xde] = in_XMM15_Dc;\n    unaff_RDI[0xdf] = in_XMM15_Dd;\n    unaff_RDI[0xe0] = in_XMM15_Da;\n    unaff_RDI[0xe1] = in_XMM15_Db;\n    unaff_RDI[0xe2] = in_XMM15_Dc;\n    unaff_RDI[0xe3] = in_XMM15_Dd;\n    unaff_RDI[0xe4] = in_XMM15_Da;\n    unaff_RDI[0xe5] = in_XMM15_Db;\n    unaff_RDI[0xe6] = in_XMM15_Dc;\n    unaff_RDI[0xe7] = in_XMM15_Dd;\n    unaff_RDI[0xe8] = in_XMM15_Da;\n    unaff_RDI[0xe9] = in_XMM15_Db;\n    unaff_RDI[0xea] = in_XMM15_Dc;\n    unaff_RDI[0xeb] = in_XMM15_Dd;\n    unaff_RDI[0xec] = in_XMM15_Da;\n    unaff_RDI[0xed] = in_XMM15_Db;\n    unaff_RDI[0xee] = in_XMM15_Dc;\n    unaff_RDI[0xef] = in_XMM15_Dd;\n    unaff_RDI[0xf0] = in_XMM15_Da;\n    unaff_RDI[0xf1] = in_XMM15_Db;\n    unaff_RDI[0xf2] = in_XMM15_Dc;\n    unaff_RDI[0xf3] = in_XMM15_Dd;\n    unaff_RDI[0xf4] = in_XMM15_Da;\n    unaff_RDI[0xf5] = in_XMM15_Db;\n    unaff_RDI[0xf6] = in_XMM15_Dc;\n    unaff_RDI[0xf7] = in_XMM15_Dd;\n    unaff_RDI[0xf8] = in_XMM15_Da;\n    unaff_RDI[0xf9] = in_XMM15_Db;\n    unaff_RDI[0xfa] = in_XMM15_Dc;\n    unaff_RDI[0xfb] = in_XMM15_Dd;\n    unaff_RDI[0xfc] = in_XMM15_Da;\n    unaff_RDI[0xfd] = in_XMM15_Db;\n    unaff_RDI[0xfe] = in_XMM15_Dc;\n    unaff_RDI[0xff] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4585
    },
    "0045e5ce": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e5ce(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x280) = in_XMM15_Da;\n    *(unaff_RDI + 0x284) = in_XMM15_Db;\n    *(unaff_RDI + 0x288) = in_XMM15_Dc;\n    *(unaff_RDI + 0x28c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x290) = in_XMM15_Da;\n    *(unaff_RDI + 0x294) = in_XMM15_Db;\n    *(unaff_RDI + 0x298) = in_XMM15_Dc;\n    *(unaff_RDI + 0x29c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2b8) = in_XMM15_Dc;\n    *(unaff_RDI + 700) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2f0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2f4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x300) = in_XMM15_Da;\n    *(unaff_RDI + 0x304) = in_XMM15_Db;\n    *(unaff_RDI + 0x308) = in_XMM15_Dc;\n    *(unaff_RDI + 0x30c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x310) = in_XMM15_Da;\n    *(unaff_RDI + 0x314) = in_XMM15_Db;\n    *(unaff_RDI + 0x318) = in_XMM15_Dc;\n    *(unaff_RDI + 0x31c) = in_XMM15_Dd;\n    *(unaff_RDI + 800) = in_XMM15_Da;\n    *(unaff_RDI + 0x324) = in_XMM15_Db;\n    *(unaff_RDI + 0x328) = in_XMM15_Dc;\n    *(unaff_RDI + 0x32c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x330) = in_XMM15_Da;\n    *(unaff_RDI + 0x334) = in_XMM15_Db;\n    *(unaff_RDI + 0x338) = in_XMM15_Dc;\n    *(unaff_RDI + 0x33c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4102
    },
    "0045e618": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e618(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 3030
    },
    "0045e638": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e638(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2341
    },
    "0045e65d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e65d(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2053
    },
    "0045e674": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e674(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1722
    },
    "0045e68b": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e68b(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1403
    },
    "0045e698": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e698(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x10) = in_XMM15_Da;\n    *(unaff_RDI + 0x14) = in_XMM15_Db;\n    *(unaff_RDI + 0x18) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1245
    },
    "0045e6b9": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e6b9(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 777
    },
    "0045e6d0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e6d0(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 461
    },
    "00460840": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00460840(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    uchar auStackX8 [32];\n    uchar auStack56 [8];\n    \n    piVar1 = *(unaff_R14 + 0x20);\n    if ((piVar1 != NULL) && (*piVar1 == auStackX8)) {\n        *piVar1 = auStack56;\n    }\n    fcn.0045bf60();\n    return;\n}\n",
        "token_count": 126
    },
    "00467720": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004677c9)\n// WARNING: Removing unreachable block (ram,0x004677f5)\n\nulong fcn.00467720(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x218 && *0x20 + -0x218 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x298;\n            *(*0x20 + -8) = unaff_RBP;\n            uVar3 = in_RAX - 0x20000000;\n            if (uVar3 < 0x83) {\n                return *(uVar3 * 0x10 + 0x543100);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x260) = in_XMM15;\n            *(*0x20 + -0x2a8) = *0x20 + -8;\n            *(*0x20 + -0x2a0) = 0x46778f;\n            uVar2 = fcn.0045e618();\n            unaff_RBP = *(*0x20 + -0x2a8);\n            *(*0x20 + -0x2a0) = 0x4677b8;\n            uVar3 = fcn.00467bc0(uVar2, uVar3, 300, 300);\n            do {\n                uVar4 = uVar3;\n                iVar1 = uVar4;\n                if (iVar1 == 0) break;\n                uVar3 = iVar1 - 1;\n                if (299 < uVar3) goto code_r0x004678c5;\n            } while ((*(*0x20 + uVar3 * 2 + -0x260) == 10) || (*(*0x20 + uVar3 * 2 + -0x260) == 0xd));\n            uVar4 = uVar4 & 0xffffffff;\n            if (uVar4 < 0x12d) {\n                *(*0x20 + -0x2a0) = 0x46789b;\n                fcn.00466400(300);\n                *(*0x20 + -0x2a0) = 0x4678ab;\n                uVar2 = fcn.00449c00(uVar4);\n                return uVar2;\n            }\n            *(*0x20 + -0x2a0) = 0x4678c5;\n            fcn.0045e4a0(uVar4, 300);\ncode_r0x004678c5:\n            *(*0x20 + -0x2a0) = 0x4678d1;\n            in_RAX = fcn.0045e420(300);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x4678dc;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 775
    },
    "00467900": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00467900(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x544cf8;\n            *(*0x20 + -0x50) = 0x467937;\n            iVar1 = fcn.00467100();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x46796c;\n                iVar2 = fcn.0045ab20(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x53e230;\n                    if ((iVar1 != 0) && (uVar3 = *0x53e240,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x4679a7;\n                        fcn.00409f60();\n                        uVar3 = 0x4ca5d8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x4679d2;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4679e5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 565
    },
    "00467de0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00467de0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x544e90;\n            *(*0x20 + -0x50) = 0x467e17;\n            iVar1 = fcn.00467100();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x467e4c;\n                iVar2 = fcn.0045ab20(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x53e230;\n                    if ((iVar1 != 0) && (uVar3 = *0x53e240,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x467e87;\n                        fcn.00409f60();\n                        uVar3 = 0x4ca5d8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x467eb2;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x467ec5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 565
    },
    "00467ee0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00467ee0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x544ee0;\n            *(*0x20 + -0x50) = 0x467f12;\n            iVar1 = fcn.00467100();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x467f3c;\n                uVar2 = fcn.0045ab20(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x467f86;\n                    fcn.00409f60();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x467fb6;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x467fc5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 479
    },
    "00467fe0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00467fe0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x544f38;\n            *(*0x20 + -0x50) = 0x468012;\n            iVar1 = fcn.00467100();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x46803c;\n                iVar2 = fcn.0045ab20(iVar1);\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = 0xffffffffffffffff;\n                    *(*0x20 + -0x50) = 0x468086;\n                    fcn.00409f60();\n                    iVar2 = *(*0x20 + -0x20);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x50) = 0x4680b6;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4680c5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 478
    },
    "004680e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.004680e0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x544f40;\n            *(*0x20 + -0x50) = 0x468113;\n            iVar1 = fcn.00467100();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x468145;\n                uVar2 = fcn.0045ab20(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x468186;\n                    fcn.00409f60();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x4681b6;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x4681c5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 534
    },
    "0046e8e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046e8e0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar1 = 0x14;\n    iVar4 = 0;\n    while (iVar5 = iVar1,  iVar5 <= arg1) {\n        fcn.0046e7c0(iVar4);\n        iVar4 = iVar5;\n        iVar1 = iVar5 + 0x14;\n    }\n    fcn.0046e7c0(iVar4);\n    iVar1 = 0x14;\n    while (iVar1 < arg1) {\n        iVar2 = iVar1 << 1;\n        iVar4 = iVar2;\n        iVar5 = 0;\n        while (iVar3 = iVar4,  iVar3 <= arg1) {\n            fcn.0046ea40(iVar5);\n            iVar5 = iVar3;\n            iVar4 = iVar3 + iVar1 * 2;\n        }\n        iVar4 = iVar1 + iVar5;\n        iVar1 = iVar2;\n        if (iVar4 < arg1) {\n            fcn.0046ea40(iVar5);\n        }\n    }\n    return in_RAX;\n}\n",
        "token_count": 343
    },
    "0047f220": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0047f220(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint32_t uVar2;\n    ulong *unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = in_XMM15;\n            uVar2 = arg1;\n            if ((*(in_RAX + 0x17) & 0x20) != 0) {\n                if ((uVar2 >> 7 & 1) == 0) {\n                    *(*0x20 + -0x10) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x10) = *unaff_RBX;\n                }\n                goto code_r0x0047f2ab;\n            }\n            if ((uVar2 >> 7 & 1) != 0) {\n                if ((uVar2 >> 8 & 1) != 0) {\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x50) = 0x47f26c;\n                    uVar1 = fcn.00458dc0();\n                    *(*0x20 + -0x30) = uVar1;\n                    *(*0x20 + -0x50) = 0x47f285;\n                    fcn.00458f20(*(*0x20 + -0x20));\n                    in_RAX = *(*0x20 + -0x28);\n                    unaff_RBX = *(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x10) = unaff_RBX;\ncode_r0x0047f2ab:\n                *(*0x20 + -0x18) = in_RAX;\n                return;\n            }\n            unaff_RBX = 0x4ca068;\n            *(*0x20 + -0x50) = 0x47f2d2;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x47f2e7;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 747
    },
    "00487640": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00487640(uchar param_1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = *(in_RAX + 0x4c);\n    *(in_RAX + 0x4c) = param_1;\n    fcn.004850e0(0x10, uVar1, 0x4aa3ea, 0x11);\n    *(in_RAX + 0x4c) = uVar1;\n    return;\n}\n",
        "token_count": 173
    },
    "00402100": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t fcn.00402100(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = (in_RAX & 0x5555555555555555) + (in_RAX >> 1 & 0x5555555555555555);\n    uVar1 = (uVar1 >> 2 & 0x3333333333333333) + (uVar1 & 0x3333333333333333);\n    uVar1 = (uVar1 >> 4) + uVar1 & 0xf0f0f0f0f0f0f0f;\n    uVar1 = uVar1 + (uVar1 >> 8);\n    iVar2 = (uVar1 >> 0x10) + uVar1;\n    return (iVar2 >> 0x20) + iVar2 & 0x7f;\n}\n",
        "token_count": 209
    },
    "00408e80": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.00408e80(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar5 = unaff_RBX ^ *0x598600 ^ 0xa0761d6478bd642f;\n    if (arg1 == 0) {\n        return uVar5;\n    }\n    if (arg1 < 4) {\n        uVar4 = CONCAT12(*((arg1 - 1) + in_RAX), CONCAT11(*(in_RAX + (arg1 >> 1)), *in_RAX));\n        uVar6 = 0;\n    }\n    else if (arg1 == 4) {\n        uVar4 = *in_RAX;\n        uVar6 = *in_RAX;\n    }\n    else if (arg1 < 8) {\n        uVar4 = *in_RAX;\n        uVar6 = *((arg1 - 4) + in_RAX);\n    }\n    else if (arg1 == 8) {\n        uVar4 = *in_RAX;\n        uVar6 = uVar4;\n    }\n    else if (arg1 < 0x11) {\n        uVar4 = *in_RAX;\n        uVar6 = *((arg1 - 8) + in_RAX);\n    }\n    else {\n        uVar6 = arg1;\n        uVar4 = uVar5;\n        uVar7 = uVar5;\n        if (0x30 < arg1) {\n            for (; 0x30 < uVar6; uVar6 = uVar6 - 0x30) {\n                auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n                auVar2 = ZEXT816(in_RAX[3] ^ uVar4) * ZEXT816(in_RAX[2] ^ 0x8ebc6af09c88c6e3);\n                auVar3 = ZEXT816(in_RAX[5] ^ uVar7) * ZEXT816(in_RAX[4] ^ 0x589965cc75374cc3);\n                uVar5 = SUB168(auVar1 >> 0x40, 0) ^ SUB168(auVar1, 0);\n                in_RAX = in_RAX + 6;\n                uVar4 = SUB168(auVar2 >> 0x40, 0) ^ SUB168(auVar2, 0);\n                uVar7 = SUB168(auVar3 >> 0x40, 0) ^ SUB168(auVar3, 0);\n            }\n            uVar5 = uVar5 ^ uVar4 ^ uVar7;\n        }\n        for (; 0x10 < uVar6; uVar6 = uVar6 - 0x10) {\n            auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n            uVar5 = SUB168(auVar1 >> 0x40, 0) ^ SUB168(auVar1, 0);\n            in_RAX = in_RAX + 2;\n        }\n        uVar4 = *((uVar6 - 0x10) + in_RAX);\n        uVar6 = *((uVar6 - 8) + in_RAX);\n    }\n    auVar1 = ZEXT816(uVar5 ^ uVar6) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    auVar1 = ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 941
    },
    "00413800": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00413800(void)\n\n{\n    int64_t *piVar1;\n    uint8_t uVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t unaff_BL;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar8 = unaff_BL;\n            if (uVar8 < 0x88) {\n                iVar4 = *(in_RAX + 0x28 + uVar8 * 8);\n                if (*(iVar4 + 0x38) == *(iVar4 + 0x60)) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar8;\n                    if (iVar4 == 0x598ae0) {\ncode_r0x0041393a:\n                        *(*0x20 + -0x40) = 0x413952;\n                        iVar4 = fcn.00413f00(uVar8 * 0xc0);\n                        if (iVar4 != 0) {\n                            if (*(iVar4 + 0x38) != *(iVar4 + 0x60)) {\n                                *(*0x20 + -0x18) = iVar4;\n                                *(iVar4 + 0x58) = *0x56a738 + 3;\n                                *(iVar4 + 0x66) = *(iVar4 + 0x60);\n                                arg1 = *(*(*0x20 + 8) + 8);\n                                *(*0x20 + -0x40) = 0x4139ab;\n                                fcn.0041e240(arg1);\n                                iVar4 = *(*0x20 + 8);\n                                *(iVar4 + 8) = 0;\n                                *(iVar4 + 0x28 + *(*0x20 + -0x10) * 8) = *(*0x20 + -0x18);\n                                return;\n                            }\n                            *(*0x20 + -0x40) = 0x4139e5;\n                            fcn.00433580();\n                        }\n                        *(*0x20 + -0x40) = 0x4139f6;\n                        fcn.00433580();\ncode_r0x004139f6:\n                        *(*0x20 + -0x40) = 0x413a05;\n                        fcn.0045e420(0x44);\n                    }\n                    else if (*(iVar4 + 0x58) == *0x56a738 + 3) {\n                        *(*0x20 + 0x10) = unaff_BL;\n                        *(*0x20 + -0x18) = iVar4;\n                        *(*0x20 + -0x40) = 0x41389f;\n                        fcn.00414260();\n                        *(*0x20 + -0x40) = 0x4138ab;\n                        iVar3 = fcn.0042cd00();\n                        iVar4 = *(*0x20 + -0x18);\n                        iVar5 = *(iVar4 + 0x60) - *(iVar4 + 0x66);\n                        uVar2 = *(*0x20 + 0x10);\n                        uVar8 = uVar2 >> 1;\n                        if (uVar8 < 0x44) {\n                            *(*0x20 + -0x20) = iVar5;\n                            piVar1 = iVar3 + uVar8 * 8 + 0x48;\n                            LOCK();\n                            iVar6 = *piVar1;\n                            *piVar1 = *piVar1 + iVar5;\n                            if (uVar2 == 5) {\n                                iVar6 = *(*0x20 + 8);\n                                LOCK();\n                                *(iVar3 + 0x30) = *(iVar3 + 0x30) + *(iVar6 + 0x20);\n                                *(iVar6 + 0x20) = 0;\n                            }\n                            *(*0x20 + -0x40) = 0x413910;\n                            fcn.0042cde0(iVar4, iVar6);\n                            LOCK();\n                            *0x598db0 = *0x598db0 + *(*0x20 + -0x20) * *(*(*0x20 + -0x18) + 0x68);\n                            *(*(*0x20 + -0x18) + 0x66) = 0;\n                            uVar8 = *(*0x20 + -0x10);\n                            goto code_r0x0041393a;\n                        }\n                        goto code_r0x004139f6;\n                    }\n                    *(*0x20 + -0x40) = 0x413a16;\n                    fcn.00433580();\n                }\n                unaff_BL = 0x28;\n                *(*0x20 + -0x40) = 0x413a27;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x40) = 0x413a34;\n            in_RAX = fcn.0045e420(0x88);\n        }\n        *(puVar7 + 8) = in_RAX;\n        puVar7[0x10] = unaff_BL;\n        *(puVar7 + -8) = 0x413a45;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        unaff_BL = puVar7[0x10];\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1329
    },
    "00413a60": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00413a60(uchar param_1)\n\n{\n    int64_t *piVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x2000) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 0x18) = param_1;\n                uVar2 = unaff_RBX >> 0xd;\n                if ((unaff_RBX & 0x1fff) != 0) {\n                    uVar2 = (unaff_RBX >> 0xd) + 1;\n                }\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0x10) = uVar2 << 0xd;\n                *(*0x20 + -0x48) = 0x413ac5;\n                fcn.004226e0();\n                param_1 = *(*0x20 + 0x18);\n                *(*0x20 + -0x21) = param_1;\n                *(*0x20 + -0x48) = 0x413ae5;\n                iVar3 = fcn.004241e0();\n                if (iVar3 != 0) {\n                    *(*0x20 + -0x20) = iVar3;\n                    *(*0x20 + -0x48) = 0x413aff;\n                    iVar3 = fcn.0042cd00();\n                    LOCK();\n                    *(iVar3 + 0x38) = *(iVar3 + 0x38) + *(*0x20 + -0x10);\n                    LOCK();\n                    piVar1 = iVar3 + 0x40;\n                    iVar3 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x48) = 0x413b25;\n                    fcn.0042cde0(iVar3);\n                    LOCK();\n                    *0x598db0 = *0x598db0 + *(*0x20 + -0x10);\n                    *(*0x20 + -0x48) = 0x413b52;\n                    fcn.0041e240(0);\n                    if (*(*0x20 + -0x21) < 0x88) {\n                        *(*0x20 + -0x48) = 0x413b92;\n                        fcn.0042c660(*(*0x20 + -0x21) * 0xc0 + 0x56aa88, (*0x56a738 >> 1 & 1) * 5);\n                        *(*(*0x20 + -0x20) + 0x70) = *(*(*0x20 + -0x20) + 0x18) + *(*0x20 + 0x10);\n                        *(*0x20 + -0x48) = 0x413bae;\n                        fcn.00412500();\n                        return *(*0x20 + -0x20);\n                    }\n                    param_1 = 0x88;\n                    *(*0x20 + -0x48) = 0x413bc7;\n                    fcn.0045e420(0x88);\n                }\n                *(*0x20 + -0x48) = 0x413bd8;\n                fcn.00433580();\n            }\n            unaff_RBX = 0xd;\n            *(*0x20 + -0x48) = 0x413be9;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        puVar4[0x18] = param_1;\n        *(puVar4 + -8) = 0x413bfd;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x18];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1046
    },
    "00413c20": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00413c20(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong uVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00413c20:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x10) = *(in_RAX + 8);\n        *(in_RAX + 8) = 0;\n        *(*0x20 + -0x44) = *0x56a738;\n        iVar2 = 0;\n        uVar6 = 0;\n        do {\n            *(*0x20 + -0x28) = uVar6;\n            if (0x87 < iVar2) {\n                *(in_RAX + 0x10) = in_XMM15;\n                *(*0x20 + -0x68) = 0x413dac;\n                iVar3 = fcn.0042cd00();\n                iVar2 = *(*0x20 + 8);\n                LOCK();\n                piVar1 = iVar3 + 0x30;\n                iVar3 = *piVar1;\n                *piVar1 = *piVar1 + *(iVar2 + 0x20);\n                *(iVar2 + 0x20) = 0;\n                *(*0x20 + -0x68) = 0x413dcf;\n                fcn.0042cde0(iVar2, iVar3);\n                *(*0x20 + -0x68) = 0x413de5;\n                fcn.0041e240(*(*0x20 + -0x10));\n                return;\n            }\n            iVar3 = *(in_RAX + 0x28 + iVar2 * 8);\n            if (iVar3 != 0x598ae0) {\n                *(*0x20 + -0x30) = iVar2;\n                *(*0x20 + -0x38) = iVar3;\n                *(*0x20 + -0x18) = *(iVar3 + 0x60);\n                *(*0x20 + -0x20) = *(iVar3 + 0x66);\n                *(iVar3 + 0x66) = 0;\n                *(*0x20 + -0x68) = 0x413cb3;\n                iVar2 = fcn.0042cd00();\n                uVar4 = *(*0x20 + -0x30) >> 1 & 0x7f;\n                if (0x43 < uVar4) goto code_r0x00413def;\n                *(*0x20 + -0x40) = *(*0x20 + -0x18) - *(*0x20 + -0x20);\n                piVar1 = iVar2 + uVar4 * 8 + 0x48;\n                LOCK();\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + (*(*0x20 + -0x18) - *(*0x20 + -0x20));\n                *(*0x20 + -0x68) = 0x413cf5;\n                fcn.0042cde0(iVar2);\n                iVar2 = *(*0x20 + -0x38);\n                LOCK();\n                *0x598db0 = *0x598db0 + *(iVar2 + 0x68) * *(*0x20 + -0x40);\n                if (*(iVar2 + 0x58) == *(*0x20 + -0x44) + 1) {\n                    iVar2 = *(*0x20 + -0x28);\n                }\n                else {\n                    iVar2 = *(*0x20 + -0x28) - *(iVar2 + 0x68) * (*(iVar2 + 0x38) - *(iVar2 + 0x60));\n                }\n                *(*0x20 + -0x28) = iVar2;\n                *(*0x20 + -0x68) = 0x413d65;\n                fcn.00414260(*(*0x20 + -0x30), *(*0x20 + -0x30) * 0xc0);\n                iVar2 = *(*0x20 + -0x30);\n                in_RAX = *(*0x20 + 8);\n                *(in_RAX + 0x28 + iVar2 * 8) = 0x598ae0;\n                uVar6 = *(*0x20 + -0x28);\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x00413dfd;\ncode_r0x00413def:\n    *(*0x20 + -0x68) = 0x413dfc;\n    in_RAX = fcn.0045e420(0x44);\ncode_r0x00413dfd:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x413e07;\n    fcn.0045bdc0();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x00413c20;\n}\n",
        "token_count": 1260
    },
    "00414360": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00414360(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *in_RAX;\n            uVar2 = uVar1 >> 1;\n            if (uVar2 < 0x44) {\n                *(*0x20 + -0x10) = *(uVar2 + 0x52f340);\n                *(*0x20 + -0x18) = *(uVar2 * 2 + 0x530400);\n                *(*0x20 + -0x40) = 0x4143b7;\n                iVar3 = fcn.004241e0(uVar1);\n                if (iVar3 != 0) {\n                    *(*0x20 + -0x20) = iVar3;\n                    *(iVar3 + 0x70) =\n                         *(*0x20 + -0x18) * (*(*0x20 + -0x10) * 0x2000 * *(iVar3 + 0x5c) >> 0x20) + *(iVar3 + 0x18);\n                    *(*0x20 + -0x40) = 0x4143ed;\n                    fcn.00412500();\n                    return *(*0x20 + -0x20);\n                }\n                return 0;\n            }\n            *(*0x20 + -0x40) = 0x414412;\n            in_RAX = fcn.0045e420(0x44);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41441d;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 529
    },
    "0041d300": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0041d300(int64_t arg1)\n\n{\n    ulong uVar1;\n    int32_t *in_RAX;\n    int64_t iVar2;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (unaff_EBX < 0) {\n        unaff_EBX = -1;\n    }\n    *(in_RAX + 4) = 0x400000;\n    *(in_RAX + 0x10) = 0xffffffffffffffff;\n    *(in_RAX + 4) = ((unaff_EBX << 0x16) >> 1) / 0x32;\n    *in_RAX = unaff_EBX;\n    uVar1 = *(in_RAX + 2);\n    iVar2 = arg1;\n    if (-1 < arg1) {\n        iVar2 = *(in_RAX + 2);\n        *(in_RAX + 2) = arg1;\n    }\n    fcn.0041e5e0(iVar2, uVar1);\n    return;\n}\n",
        "token_count": 281
    },
    "0041e5e0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e5e0(void)\n\n{\n    uint64_t uVar1;\n    int32_t *in_RAX;\n    uint64_t uVar2;\n    char unaff_BL;\n    double dVar3;\n    \n    if (unaff_BL == '\\0') {\n        *(in_RAX + 0xe) = *(in_RAX + 0x14) + 0x100000;\n    }\n    else {\n        *(in_RAX + 0xe) = 0;\n    }\n    if (*in_RAX < 0) {\n        uVar2 = 0xffffffffffffffff;\n    }\n    else {\n        uVar2 = ((*(in_RAX + 0x1a) + *(in_RAX + 0x20) + *(in_RAX + 0x1e)) * *in_RAX >> 1) / 0x32 + *(in_RAX + 0x20);\n    }\n    if (uVar2 < *(in_RAX + 4)) {\n        uVar2 = *(in_RAX + 4);\n    }\n    *(in_RAX + 0xc) = uVar2;\n    uVar2 = *(in_RAX + 0x1a) + *(in_RAX + 0x18) + *(in_RAX + 0x1e);\n    if (uVar2 < 0) {\n        dVar3 = uVar2 & 1 | uVar2 >> 1;\n        dVar3 = dVar3 + dVar3;\n    }\n    else {\n        dVar3 = uVar2;\n    }\n    dVar3 = dVar3 * *0x4c9f40 * *0x4c9f20 * *(in_RAX + 8);\n    if (*0x4c9f88 <= dVar3) {\n        uVar2 = dVar3 - *0x4c9f88 | 0x8000000000000000;\n    }\n    else {\n        uVar2 = dVar3;\n    }\n    uVar1 = *(in_RAX + 6);\n    *(in_RAX + 6) = uVar2;\n    return uVar1;\n}\n",
        "token_count": 480
    },
    "0041eba0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0041eba0(uint64_t arg1, ulong arg2)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    double dVar3;\n    double dVar4;\n    double dVar5;\n    \n    uVar1 = *0x598640;\n    dVar3 = *0x4c9f60 * in_RAX;\n    if (*0x4c9f88 <= dVar3) {\n        *0x598648 = dVar3 - *0x4c9f88 | 0x8000000000000000;\n    }\n    else {\n        *0x598648 = dVar3;\n    }\n    if (*0x598dc0 <= *0x598648) {\n        *0x598648 = 0xffffffffffffffff;\n    }\n    if (arg1 == 0) {\n        *0x598640 = 0xffffffffffffffff;\n        return uVar1;\n    }\n    if (unaff_RBX < 0) {\n        dVar3 = unaff_RBX & 1 | unaff_RBX >> 1;\n        dVar3 = dVar3 + dVar3;\n    }\n    else {\n        dVar3 = unaff_RBX;\n    }\n    if (arg1 < 0) {\n        dVar4 = arg1 & 1 | arg1 >> 1;\n        dVar4 = dVar4 + dVar4;\n    }\n    else {\n        dVar4 = arg1;\n    }\n    if (*0x59be90 < 0) {\n        dVar5 = *0x59be90 & 1 | *0x59be90 >> 1;\n        dVar5 = dVar5 + dVar5;\n    }\n    else {\n        dVar5 = *0x59be90;\n    }\n    dVar5 = dVar5 * (dVar3 / dVar4);\n    if (*0x4c9f88 <= dVar5) {\n        uVar2 = dVar5 - *0x4c9f88 | 0x8000000000000000;\n    }\n    else {\n        uVar2 = dVar5;\n    }\n    *0x598640 = -*0x5984a8 & uVar2 + uVar2 / 10 + -1 + *0x5984a8;\n    if ((*0x598640 < *0x598da8 + *0x598d98) && (*0x5984a8 <= (*0x598da8 + *0x598d98) - *0x598640)) {\n        uVar1 = 0x598640;\n    }\n    else {\n        *0x598640 = 0xffffffffffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 616
    },
    "00424c80": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00424c80(ulong noname_0, ulong noname_1, uint64_t arg3)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    char cVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint8_t *puVar7;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint8_t *unaff_RSI;\n    uchar unaff_DIL;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = noname_0;\n            *(*0x20 + 0x19) = unaff_DIL;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = arg3;\n            *(*0x20 + -0x10) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x38) = 0x424cc5;\n            fcn.00425760(arg3);\n            *(*0x20 + -0x38) = 0x424cd9;\n            cVar3 = fcn.00424480(*(*0x20 + 0x28));\n            if (cVar3 == '\\0') {\n                iVar9 = *(*0x20 + 0x10);\n            }\n            else {\n                iVar9 = *(*0x20 + 0x10);\n                *(iVar9 + 100) = 1;\n            }\n            if (*(*0x20 + 0x18) == '\\0') {\n                uVar1 = *(*0x20 + 0x19);\n                *(iVar9 + 0x62) = uVar1;\n                iVar2 = *(*0x20 + 0x28);\n                if (uVar1 >> 1 == 0) {\n                    *(iVar9 + 0x68) = iVar2 << 0xd;\n                    *(iVar9 + 0x38) = 1;\n                    *(iVar9 + 0x5c) = 0;\ncode_r0x00424d9f:\n                    *(iVar9 + 0x30) = 0;\n                    *(iVar9 + 0x98) = 0;\n                    *(iVar9 + 0x40) = 0xffffffffffffffff;\n                    *(*0x20 + -0x38) = 0x424dc5;\n                    uVar4 = fcn.00426380();\n                    *(*(*0x20 + 0x10) + 0x50) = uVar4;\n                    *(*0x20 + -0x38) = 0x424dd7;\n                    uVar4 = fcn.004266a0();\n                    iVar9 = *(*0x20 + 0x10);\n                    *(iVar9 + 0x48) = uVar4;\n                    *(iVar9 + 0x58) = *(*(*0x20 + 8) + 0x10118);\n                    *(iVar9 + 99) = 1;\n                    goto code_r0x00424dfd;\n                }\n                unaff_RBX = uVar1 >> 1;\n                if (unaff_RBX < 0x44) {\n                    uVar6 = *(unaff_RBX * 2 + 0x530400);\n                    *(iVar9 + 0x68) = uVar6;\n                    if (uVar6 != 0) {\n                        *(iVar9 + 0x38) = (iVar2 << 0xd) / uVar6;\n                        *(iVar9 + 0x5c) = *(unaff_RBX * 4 + 0x531660);\n                        goto code_r0x00424d9f;\n                    }\n                    goto code_r0x00424ec5;\n                }\n            }\n            else {\n                *(iVar9 + 0x28) = 0;\n                *(iVar9 + 0x38) = 0;\n                *(iVar9 + 0x70) = *(iVar9 + 0x20) * 0x2000 + *(iVar9 + 0x18);\n                unaff_RSI = iVar9 + 99;\n                uVar1 = *unaff_RSI;\n                *unaff_RSI = 2;\n                arg3 = uVar1;\ncode_r0x00424dfd:\n                unaff_RBX = *(iVar9 + 0x18);\n                *(*0x20 + -0x38) = 0x424e0b;\n                fcn.00424380(*(*0x20 + 0x28));\n                if (*(*0x20 + 0x18) != '\\0') goto code_r0x00424e99;\n                uVar6 = *(*(*0x20 + 0x10) + 0x18);\n                uVar5 = uVar6 + 0x800000000000 >> 0x2a;\n                if (uVar5 < 0x40) {\n                    puVar7 = *(*(uVar5 * 8 + 0x56a790) + (uVar6 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                             (uVar6 >> 0x10 & 0x3f) + 0x11400;\n                    LOCK();\n                    *puVar7 = *puVar7 | 1 << (uVar6 >> 0xd & 7);\n                    LOCK();\n                    *(*(*0x20 + 8) + 0x10138) = *(*(*0x20 + 8) + 0x10138) + *(*0x20 + 0x28);\ncode_r0x00424e99:\n                    *(*0x20 + -0x38) = 0x424e9e;\n                    fcn.0045db60();\n                    return;\n                }\n                *(*0x20 + -0x38) = 0x424ec5;\n                fcn.0045e440(0x40);\ncode_r0x00424ec5:\n                *(*0x20 + -0x38) = 0x424eca;\n                fcn.00431c00();\n            }\n            unaff_DIL = iVar9;\n            noname_0._0_1_ = 0x44;\n            *(*0x20 + -0x38) = 0x424ed7;\n            in_RAX = fcn.0045e420(0x44);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = noname_0;\n        puVar8[0x19] = unaff_DIL;\n        *(puVar8 + 0x20) = unaff_RSI;\n        *(puVar8 + 0x28) = arg3;\n        *(puVar8 + -8) = 0x424efa;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        noname_0._0_1_ = puVar8[0x18];\n        unaff_DIL = puVar8[0x19];\n        unaff_RSI = *(puVar8 + 0x20);\n        arg3 = *(puVar8 + 0x28);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1768
    },
    "00442100": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00442100(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    ulong unaff_RBP;\n    int32_t unaff_EDI;\n    int32_t iVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        iVar8 = unaff_EDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x3b0 && *0x20 + -0x3b0 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x430;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x410) = in_XMM15;\n            iVar8 = *0x20 + -0x408;\n            *(*0x20 + -0x440) = *0x20 + -8;\n            *(*0x20 + -0x438) = 0x44214f;\n            iVar4 = fcn.0045e580();\n            unaff_RBP = *(*0x20 + -0x440);\n            if (unaff_EDI - arg1 >> 1 == 0x80) {\n                for (uVar6 = 0; uVar6 < 0x80; uVar6 = uVar6 + 1) {\n                    *(*0x20 + uVar6 * 8 + -0x410) = *(iVar4 + 0x198 + (uVar6 + arg1 & 0xff) * 8);\n                }\n                LOCK();\n                if (arg1 != *(iVar4 + 400)) {\n                    return 0;\n                }\n                *(iVar4 + 400) = arg1 + 0x80;\n                *(*0x20 + -0x10) = unaff_RBX;\n                uVar5 = 0;\n                while( true ) {\n                    if (0x7f < uVar5) {\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x420) = *(*0x20 + -0x410);\n                        *(*0x20 + -0x418) = *(*0x20 + -0x10);\n                        *(*0x20 + -0x438) = 0x44221c;\n                        fcn.0040a520();\n                        iVar4 = *(*0x20 + -0x418);\n                        uVar1 = *(*0x20 + -0x420);\n                        uVar2 = *0x546068;\n                        iVar3 = *0x546070;\n                        if ((iVar4 != 0) && (*(iVar4 + 0xa0) = 0,  uVar2 = uVar1,  iVar3 = iVar4,  *0x546070 != 0)) {\n                            *(*0x546070 + 0xa0) = uVar1;\n                            uVar2 = *0x546068;\n                        }\n                        *0x546070 = iVar3;\n                        *0x546068 = uVar2;\n                        *0x546078 = *0x546078 + 0x81;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x438) = 0x44227b;\n                        fcn.0040a740();\n                        return 1;\n                    }\n                    iVar4 = uVar5 * 8;\n                    uVar5 = uVar5 + 1;\n                    if (0x80 < uVar5) break;\n                    *(*(*0x20 + iVar4 + -0x410) + 0xa0) = *(*0x20 + uVar5 * 8 + -0x410);\n                }\n                arg1._0_4_ = 0x81;\n                *(*0x20 + -0x438) = 0x44229a;\n                fcn.0045e420(0x81);\n            }\n            unaff_RBX = 0x1e;\n            *(*0x20 + -0x438) = 0x4422ab;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x1c) = iVar8;\n        *(puVar7 + -8) = 0x4422c5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        unaff_EDI = *(puVar7 + 0x1c);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1152
    },
    "00474b80": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint64_t fcn.00474b80(uint64_t arg1, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    char cVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint8_t uVar3;\n    uchar uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t unaff_RBX;\n    uint64_t uVar9;\n    uint8_t unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar10;\n    int64_t in_R10;\n    int64_t *in_R11;\n    int64_t unaff_R14;\n    uint64_t uVar11;\n    uint8_t uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_SIL;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (arg4 == 0) {\n        in_R10 = 0;\n    }\n    for (uVar10 = arg4 << (-(*in_R11 + -0x3c) & 0x3f) & -(-(*in_R11 + -0x3c) < 0x40);\n        (uVar10 != 0 && ((uVar10 >> 0x3c & 1) == 0)); uVar10 = uVar10 << 1) {\n        in_R10 = in_R10 + -1;\n    }\n    if (unaff_RDI < 0xf) {\n        uVar5 = unaff_RDI * 4;\n        uVar9 = -(-(uVar5 - 0x3c) < 0x40);\n        uVar3 = -(uVar5 - 0x3c);\n        uVar11 = uVar10 >> (uVar3 & 0x3f) & uVar9;\n        if (0x800000000000000 < (uVar10 << (uVar5 & 0x3f) & -(uVar5 < 0x40) & 0xfffffffffffffff | uVar11 & 1)) {\n            uVar11 = uVar11 + 1;\n        }\n        uVar10 = uVar11 << (uVar3 & 0x3f) & uVar9;\n        if ((uVar10 >> 0x3d & 1) != 0) {\n            uVar10 = uVar10 >> 1;\n            in_R10 = in_R10 + 1;\n        }\n    }\n    if (uStack0000000000000028 == 0x58) {\n        iVar6 = 0x4aa067;\n    }\n    else {\n        iVar6 = 0x4aa077;\n    }\n    uVar11 = unaff_RBX;\n    if (noname_2 != '\\0') {\n        uVar11 = unaff_RBX + 1;\n        if (arg1 < uVar11) {\n            in_RAX = fcn.00445800(arg1);\n        }\n        *(unaff_RBX + in_RAX) = 0x2d;\n    }\n    uVar9 = uVar11 + 3;\n    if (arg1 < uVar9) {\n        in_RAX = fcn.00445800(arg1);\n    }\n    *(uVar11 + in_RAX) = 0x30;\n    *(uVar11 + 1 + in_RAX) = uStack0000000000000028;\n    *(uVar11 + 2 + in_RAX) = (uVar10 >> 0x3c & 1) + 0x30;\n    uVar10 = uVar10 << 4;\n    if ((unaff_RDI < 0) && (uVar10 != 0)) {\n        if (arg1 < uVar11 + 4) {\n            in_RAX = fcn.00445800(arg1);\n        }\n        *(uVar11 + 3 + in_RAX) = 0x2e;\n        uVar9 = uVar11 + 4;\n        uVar3 = uStack0000000000000028;\n        for (; uVar10 != 0; uVar10 = uVar10 << 4) {\n            uVar4 = *(iVar6 + (uVar10 >> 0x3c));\n            if (arg1 < uVar9 + 1) {\n                in_RAX = fcn.00445800(arg1);\n                uVar3 = uStack0000000000000028;\n            }\n            *(uVar9 + in_RAX) = uVar4;\n            uVar9 = uVar9 + 1;\n        }\n    }\n    else {\n        uVar3 = uStack0000000000000028;\n        if (0 < unaff_RDI) {\n            if (arg1 < uVar11 + 4) {\n                in_RAX = fcn.00445800(arg1);\n            }\n            *(uVar11 + 3 + in_RAX) = 0x2e;\n            uVar9 = uVar11 + 4;\n            uVar3 = uStack0000000000000028;\n            for (iVar7 = 0; iVar7 < unaff_RDI; iVar7 = iVar7 + 1) {\n                uVar4 = *(iVar6 + (uVar10 >> 0x3c));\n                if (arg1 < uVar9 + 1) {\n                    in_RAX = fcn.00445800(arg1);\n                    uVar3 = uStack0000000000000028;\n                }\n                *(uVar9 + in_RAX) = uVar4;\n                uVar10 = uVar10 << 4;\n                uVar9 = uVar9 + 1;\n            }\n        }\n    }\n    if (uVar3 == (uVar3 | 0x20)) {\n        uVar4 = 0x70;\n    }\n    else {\n        uVar4 = 0x50;\n    }\n    if (arg1 < uVar9 + 1) {\n        in_RAX = fcn.00445800(arg1);\n    }\n    *(uVar9 + in_RAX) = uVar4;\n    if (in_R10 < 0) {\n        in_R10 = -in_R10;\n        uVar4 = 0x2d;\n    }\n    else {\n        uVar4 = 0x2b;\n    }\n    if (arg1 < uVar9 + 2) {\n        in_RAX = fcn.00445800(arg1);\n    }\n    *(uVar9 + 1 + in_RAX) = uVar4;\n    cVar1 = in_R10;\n    cVar2 = in_R10 >> 0x3f;\n    if (in_R10 < 100) {\n        cVar2 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_R10) >> 0x40, 0) + in_R10 >> 3) - cVar2;\n        if (arg1 < uVar9 + 4) {\n            in_RAX = fcn.00445800(arg1);\n        }\n        *(uVar9 + 2 + in_RAX) = cVar2 + '0';\n        *(uVar9 + 3 + in_RAX) = cVar1 + cVar2 * -10 + '0';\n    }\n    else if (in_R10 < 1000) {\n        iVar6 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_R10) >> 0x40, 0) + in_R10;\n        iVar7 = iVar6 >> 3;\n        if (arg1 < uVar9 + 5) {\n            in_RAX = fcn.00445800(arg1);\n        }\n        *(uVar9 + 2 + in_RAX) = (SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_R10) >> 0x40, 0) + in_R10 >> 6) + '0';\n        *(uVar9 + 3 + in_RAX) =\n             iVar7 + ((SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar7) >> 0x40, 0) + iVar7 >> 3) - (iVar6 >> 0x3f))\n                     * -10 + '0';\n        *(uVar9 + 4 + in_RAX) = cVar1 + iVar7 * -10 + '0';\n    }\n    else {\n        iVar6 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_R10) >> 0x40, 0) + in_R10 >> 6;\n        iVar7 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_R10) >> 0x40, 0) + in_R10;\n        iVar8 = iVar7 >> 3;\n        if (arg1 < uVar9 + 6) {\n            in_RAX = fcn.00445800(arg1);\n        }\n        *(uVar9 + 2 + in_RAX) = in_R10 / 1000 + cVar2 + '0';\n        *(uVar9 + 3 + in_RAX) = iVar6 + ((iVar6 & 0xff) / 10) * -10 + '0';\n        *(uVar9 + 4 + in_RAX) =\n             iVar8 + ((SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar8) >> 0x40, 0) + iVar8 >> 3) - (iVar7 >> 0x3f))\n                     * -10 + '0';\n        *(uVar9 + 5 + in_RAX) = cVar1 + iVar8 * -10 + '0';\n    }\n    return in_RAX;\n}\n",
        "token_count": 2246
    },
    "004757a0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.004757a0(ulong arg1, ulong noname_1, ulong noname_2, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RSI;\n    uint32_t unaff_EDI;\n    int64_t iVar5;\n    \n    if (0x13 < unaff_RSI) goto code_r0x00475a69;\n    uVar3 = *(unaff_RSI * 8 + 0x530860);\n    iVar5 = 0;\n    while (uVar3 <= unaff_RBX) {\n        uVar4 = unaff_RBX % 10;\n        if (uVar4 < 6) {\n            if (uVar4 < 5) {\n                unaff_EDI = 0;\n            }\n            else if (arg1 == 0) {\n                unaff_EDI = unaff_RBX / 10 & 1;\n            }\n            else {\n                unaff_EDI = 1;\n            }\n        }\n        else {\n            unaff_EDI = 1;\n        }\n        iVar5 = iVar5 + 1;\n        arg1._0_1_ = arg1 | uVar4 != 0;\n        unaff_RBX = unaff_RBX / 10;\n        arg4 = uVar3;\n    }\n    if (unaff_EDI != '\\0') {\n        unaff_RBX = unaff_RBX + 1;\n    }\n    if (uVar3 <= unaff_RBX) {\n        unaff_RBX = unaff_RBX / 10;\n        iVar5 = iVar5 + 1;\n    }\n    in_RAX[3] = unaff_RSI;\n    while (99 < unaff_RBX) {\n        if (unaff_RBX >> 0x20 == 0) {\n            uVar3 = ((unaff_RBX & 0xffffffff) >> 1) / 0x32;\n            uVar4 = unaff_RBX + uVar3 * -100;\n        }\n        else {\n            uVar3 = (unaff_RBX >> 1) / 0x32;\n            uVar4 = unaff_RBX + uVar3 * -100;\n        }\n        if (199 < uVar4 * 2 + 1) goto code_r0x00475a5f;\n        arg4 = in_RAX[1];\n        if (arg4 <= unaff_RSI - 1) goto code_r0x00475a57;\n        *((unaff_RSI - 1) + *in_RAX) = *(uVar4 * 2 + 0x4b1cd6);\n        if (199 < uVar4 << 1) goto code_r0x00475a4d;\n        arg4 = in_RAX[1];\n        if (arg4 <= unaff_RSI - 2) goto code_r0x00475a45;\n        *((unaff_RSI - 2) + *in_RAX) = *(uVar4 * 2 + 0x4b1cd5);\n        unaff_RBX = uVar3;\n        unaff_RSI = unaff_RSI - 2;\n    }\n    if (unaff_RBX == 0) {\ncode_r0x004759a0:\n        if (unaff_RBX < 10) {\ncode_r0x004759e0:\n            while( true ) {\n                unaff_RBX = *in_RAX;\n                uVar4 = in_RAX[3];\n                uVar3 = uVar4 - 1;\n                if (in_RAX[1] <= uVar3) break;\n                if (*((uVar4 - 1) + unaff_RBX) != '0') {\n                    in_RAX[4] = uVar4 + iVar5;\n                    return;\n                }\n                in_RAX[3] = uVar3;\n                iVar5 = iVar5 + 1;\n            }\n            fcn.0045e420(in_RAX[1]);\ncode_r0x00475a1a:\n            fcn.0045e440(uVar3);\n        }\n        else if (unaff_RBX << 1 < 200) {\n            uVar3 = in_RAX[1];\n            arg4 = 0x4b1cd5;\n            uVar1 = *(unaff_RBX * 2 + 0x4b1cd5);\n            unaff_RBX = uVar1;\n            if (unaff_RSI - 1 < uVar3) {\n                *((unaff_RSI - 1) + *in_RAX) = uVar1;\n                goto code_r0x004759e0;\n            }\n            goto code_r0x00475a1a;\n        }\n        fcn.0045e440(200);\n        uVar3 = unaff_RBX;\ncode_r0x00475a32:\n        fcn.0045e440(uVar3);\n    }\n    else if (unaff_RBX * 2 + 1 < 200) {\n        uVar1 = *(unaff_RBX * 2 + 0x4b1cd6);\n        arg4 = uVar1;\n        uVar3 = in_RAX[1];\n        if (unaff_RSI - 1 < in_RAX[1]) {\n            *((unaff_RSI - 1) + *in_RAX) = uVar1;\n            unaff_RSI = unaff_RSI - 1;\n            goto code_r0x004759a0;\n        }\n        goto code_r0x00475a32;\n    }\n    fcn.0045e440(200);\ncode_r0x00475a45:\n    fcn.0045e440(arg4);\ncode_r0x00475a4d:\n    fcn.0045e440(200);\ncode_r0x00475a57:\n    fcn.0045e440(arg4);\ncode_r0x00475a5f:\n    fcn.0045e440(200);\ncode_r0x00475a69:\n    fcn.0045e420(0x14);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1391
    },
    "004762c0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.004762c0(uint64_t arg1, ulong noname_1, uint64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint64_t *in_RAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint64_t unaff_RBX;\n    char unaff_SIL;\n    uint32_t uVar7;\n    uint64_t unaff_RDI;\n    uint64_t uVar8;\n    uint64_t arg1_00;\n    uint32_t uVar9;\n    uint8_t uVar10;\n    \n    if (unaff_RDI == 0) {\n        in_RAX[4] = arg4 + 1;\n        return;\n    }\n    iVar5 = 0;\n    arg1_00 = 0;\n    while( true ) {\n        uVar7 = unaff_RDI;\n        if (uVar7 == 0) break;\n        uVar6 = unaff_RBX + 9;\n        unaff_RBX = uVar6 / 10;\n        uVar8 = arg1 & 0xffffffff;\n        uVar2 = arg1 + (uVar8 / 10) * -10;\n        uVar4 = unaff_RDI & 0xffffffff;\n        unaff_RDI = uVar4 / 10;\n        uVar6 = uVar6 / 10;\n        uVar9 = uVar4 / 10;\n        if (uVar9 < uVar6) break;\n        uVar7 = uVar8 / 10 + 1;\n        arg1 = uVar8 / 10;\n        if ((uVar6 == uVar7) && (uVar6 = uVar8 / 10,  uVar6 <= uVar9 && uVar4 / 10 != uVar6)) {\n            uVar2 = 0;\n            arg3 = 0;\n            arg1 = uVar7;\n        }\n        unaff_SIL = unaff_SIL != '\\0' && arg1_00 == 0;\n        iVar5 = iVar5 + 1;\n        arg1_00 = uVar2;\n    }\n    arg1 = arg1 & 0xffffffff;\n    if (iVar5 < 1) {\n        uVar10 = arg3;\n        goto code_r0x004763ac;\n    }\n    if (arg1_00 < 6) {\n        if (arg1_00 == 5) {\n            if (unaff_SIL == '\\0') goto code_r0x00476394;\n            if (unaff_SIL != '\\0') {\n                uVar10 = arg1 & 1;\n                goto code_r0x004763ac;\n            }\n        }\n        uVar10 = 0;\n    }\n    else {\ncode_r0x00476394:\n        uVar10 = 1;\n    }\ncode_r0x004763ac:\n    if ((arg1 < uVar7) && (uVar10 != 0)) {\n        arg1 = arg1 + 1;\n    }\n    uVar8 = arg4 - iVar5;\n    while( true ) {\n        iVar3 = arg1;\n        if (uVar8 <= in_RAX[3]) break;\n        arg1 = (arg1 >> 1) / 0x32;\n        iVar3 = iVar3 + arg1 * -100;\n        uVar4 = iVar3 * 2 + 1;\n        if (199 < uVar4) goto code_r0x004764a7;\n        arg1_00 = in_RAX[1];\n        if (arg1_00 <= uVar8) goto code_r0x0047649c;\n        *(*in_RAX + uVar8) = *(uVar4 + 0x4b1cd5);\n        uVar4 = iVar3 * 2;\n        if (199 < uVar4) goto code_r0x00476490;\n        arg3 = in_RAX[1];\n        arg1_00 = *in_RAX;\n        if (arg3 <= uVar8 - 1) goto code_r0x00476485;\n        *((uVar8 - 1) + arg1_00) = *(uVar4 + 0x4b1cd5);\n        uVar8 = uVar8 - 2;\n    }\n    if (uVar8 == in_RAX[3]) {\n        if (in_RAX[1] <= uVar8) {\n            fcn.0045e420(in_RAX[1]);\ncode_r0x00476485:\n            fcn.0045e420(arg3);\ncode_r0x00476490:\n            fcn.0045e420(200);\ncode_r0x0047649c:\n            fcn.0045e420(arg1_00);\ncode_r0x004764a7:\n            fcn.0045e420(200);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        *(*in_RAX + uVar8) = arg1 + '0';\n    }\n    in_RAX[3] = (arg4 - iVar5) + 1;\n    in_RAX[4] = arg4 + 1;\n    return;\n}\n",
        "token_count": 1163
    },
    "004767c0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.004767c0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uchar *in_RAX;\n    uchar *puVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    int64_t unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uchar *unaff_RDI;\n    char cVar7;\n    uint64_t in_R8;\n    uchar uVar8;\n    uint64_t in_R9;\n    int64_t iVar9;\n    uchar uVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uchar *unaff_R13;\n    int64_t unaff_R14;\n    uchar unaff_R15B;\n    bool bVar13;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar8 = in_R9;\n        cVar7 = in_R8;\n        puVar2 = *0x20 + -0x10;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= puVar2 && puVar2 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RSI + -2 < 0x23) {\n                *(*0x20 + -0x51) = in_XMM15;\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x40) = in_XMM15;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x20) = in_XMM15;\n                if (cVar7 != '\\0') {\n                    unaff_RDI = -unaff_RDI;\n                }\n                if (unaff_RSI != 0xa) {\n                    if ((unaff_RSI & unaff_RSI + -1) != 0) {\n                        puVar3 = 0x41;\n                        while (unaff_RSI <= unaff_RDI) {\n                            puVar4 = unaff_RDI / unaff_RSI;\n                            uVar5 = unaff_RDI - puVar4 * unaff_RSI;\n                            puVar11 = in_RAX;\n                            if (0x23 < uVar5) goto code_r0x00476a2f;\n                            uVar1 = *(uVar5 + 0x4af0e7);\n                            puVar2 = uVar1;\n                            if (0x40 < puVar3 + -1) goto code_r0x00476a25;\n                            (*0x20 + -0x52)[puVar3] = uVar1;\n                            puVar3 = puVar3 + -1;\n                            unaff_RDI = puVar4;\n                        }\n                        puVar11 = puVar3 + -1;\n                        puVar12 = unaff_RDI[0x4af0e7];\n                        puVar4 = puVar3;\n                        if (0x40 < puVar11) goto code_r0x00476a16;\n                        (*0x20 + -0x52)[puVar3] = unaff_RDI[0x4af0e7];\n                        bVar13 = cVar7 == '\\0';\n                        goto code_r0x004768d2;\n                    }\n                    iVar9 = 0;\n                    if (unaff_RSI != NULL) {\n                        for (; (unaff_RSI >> iVar9 & 1) == 0; iVar9 = iVar9 + 1) {\n                        }\n                    }\n                    puVar4 = iVar9 & 7;\n                    puVar11 = unaff_RSI + -1;\n                    puVar12 = 0x41;\n                    goto code_r0x00476a53;\n                }\n                puVar3 = 0x41;\n                puVar11 = unaff_RDI;\ncode_r0x00476ae0:\n                uVar8 = in_R9;\n                cVar7 = in_R8;\n                if (puVar11 < 0x64) {\n                    unaff_RDI = puVar11;\n                    if (puVar11 * 2 + 1U < 200) {\n                        puVar2 = puVar3 + -1;\n                        puVar12 = 0x4b1cd5;\n                        if (puVar2 < 0x41) {\n                            (*0x20 + -0x52)[puVar3] = *(puVar11 * 2 + 0x4b1cd6);\n                            if (puVar11 < 0xa) {\ncode_r0x00476c0b:\n                                bVar13 = cVar7 == '\\0';\n                                puVar11 = puVar2;\ncode_r0x004768d2:\n                                do {\n                                    puVar4 = puVar11;\n                                    if (bVar13) {\ncode_r0x004768f5:\n                                        if (in_R9 == '\\0') {\n                                            if (puVar4 < 0x42) {\n                                                *(*0x20 + -0x98) = 0x4769d2;\n                                                fcn.00449920(-(puVar4 + -0x41));\n                                                return 0;\n                                            }\n                                            *(*0x20 + -0x98) = 0x4769fc;\n                                            fcn.0045e4e0(0x41);\n                                        }\n                                        else if (puVar4 < 0x42) {\n                                            uVar5 = (unaff_RBX - puVar4) + 0x41;\n                                            iVar9 = -(puVar4 + -0x41);\n                                            if (arg1 < uVar5) {\n                                                *(*0x20 + -0x60) = iVar9;\n                                                *(*0x20 + -0x10) = *0x20 + ((puVar4 & puVar4 + -0x41 >> 0x3f) - 0x51);\n                                                *(*0x20 + -0x68) = unaff_RBX;\n                                                *(*0x20 + -0x98) = 0x476950;\n                                                in_RAX = fcn.00445800(arg1);\n                                                iVar9 = *(*0x20 + -0x60);\n                                            }\n                                            *(*0x20 + -0x60) = uVar5;\n                                            *(*0x20 + -0x10) = in_RAX;\n                                            *(*0x20 + -0x68) = arg1;\n                                            *(*0x20 + -0x98) = 0x476986;\n                                            fcn.0045eda0(iVar9);\n                                            return *(*0x20 + -0x10);\n                                        }\n                                        *(*0x20 + -0x98) = 0x476a09;\n                                        fcn.0045e4e0(0x41);\n                                    }\n                                    else {\n                                        puVar4 = puVar11 + -1;\n                                        if (puVar4 < 0x41) {\n                                            (*0x20 + -0x52)[puVar11] = 0x2d;\n                                            goto code_r0x004768f5;\n                                        }\n                                    }\n                                    *(*0x20 + -0x98) = 0x476a16;\n                                    fcn.0045e420(0x41);\ncode_r0x00476a16:\n                                    puVar3 = puVar12;\n                                    *(*0x20 + -0x98) = 0x476a25;\n                                    fcn.0045e420(0x41);\n                                    in_RAX = puVar11;\ncode_r0x00476a25:\n                                    *(*0x20 + -0x98) = 0x476a2f;\n                                    fcn.0045e420(0x41);\n                                    puVar11 = in_RAX;\ncode_r0x00476a2f:\n                                    arg1 = 0x24;\n                                    *(*0x20 + -0x98) = 0x476a3c;\n                                    in_RAX = fcn.0045e440(0x24);\n                                    unaff_RDI = puVar2;\n                                    while( true ) {\n                                        puVar12 = unaff_R13;\n                                        (*0x20 + -0x52)[puVar3] = unaff_R15B;\n                                        unaff_RDI = unaff_RDI >> (puVar4 & 0x3f);\n                                        puVar2 = unaff_RDI;\n                                        unaff_R13 = puVar12;\ncode_r0x00476a53:\n                                        if (unaff_RDI < unaff_RSI) break;\n                                        puVar3 = puVar12;\n                                        if (0x23 < (unaff_RDI & puVar11)) goto code_r0x00476abf;\n                                        unaff_R13 = puVar12 + -1;\n                                        unaff_R15B = *((unaff_RDI & puVar11) + 0x4af0e7);\n                                        if (0x40 < unaff_R13) goto code_r0x00476ab2;\n                                    }\n                                    puVar4 = puVar12 + -1;\n                                    puVar11 = unaff_RDI[0x4af0e7];\n                                    if (0x40 < puVar4) goto code_r0x00476aa5;\n                                    (*0x20 + -0x52)[puVar12] = unaff_RDI[0x4af0e7];\n                                    bVar13 = in_R8 == '\\0';\n                                    puVar11 = puVar4;\n                                } while( true );\n                            }\n                            unaff_RDI = puVar11 << 1;\n                            if (unaff_RDI < 0xc8) {\n                                puVar2 = puVar3 + -2;\n                                if (puVar2 < 0x41) {\n                                    (*0x20 + -0x53)[puVar3] = *(puVar11 * 2 + 0x4b1cd5);\n                                    goto code_r0x00476c0b;\n                                }\n                                *(*0x20 + -0x98) = 0x476c25;\n                                fcn.0045e420(0x41);\n                            }\n                            *(*0x20 + -0x98) = 0x476c32;\n                            fcn.0045e440(200);\n                        }\n                        *(*0x20 + -0x98) = 0x476c3f;\n                        fcn.0045e420(0x41);\n                    }\n                    *(*0x20 + -0x98) = 0x476c4c;\n                    fcn.0045e440(200);\n                    in_RAX = unaff_RSI;\n                }\n                else {\n                    unaff_RDI = puVar11 >> 1;\n                    puVar4 = unaff_RDI / 0x32;\n                    puVar11 = puVar11 + puVar4 * -100;\n                    if (199 < puVar11 * 2 + 1U) goto code_r0x00476c6f;\n                    uVar1 = *(puVar11 * 2 + 0x4b1cd6);\n                    unaff_R13 = uVar1;\n                    if (0x40 < puVar3 + -1) goto code_r0x00476c65;\n                    (*0x20 + -0x52)[puVar3] = uVar1;\n                    if (199 < puVar11 * 2) goto code_r0x00476c56;\n                    puVar2 = puVar3 + -2;\n                    uVar10 = *(puVar11 * 2 + 0x4b1cd5);\n                    if (puVar2 < 0x41) goto code_r0x00476acc;\n                }\n                *(*0x20 + -0x98) = 0x476c56;\n                fcn.0045e420(0x41);\ncode_r0x00476c56:\n                *(*0x20 + -0x98) = 0x476c65;\n                fcn.0045e440(200);\ncode_r0x00476c65:\n                *(*0x20 + -0x98) = 0x476c6f;\n                fcn.0045e420(0x41);\ncode_r0x00476c6f:\n                arg1 = 200;\n                *(*0x20 + -0x98) = 0x476c79;\n                fcn.0045e440(200);\n                unaff_RSI = in_RAX;\n            }\n            unaff_RBX = 0x4ca4a8;\n            *(*0x20 + -0x98) = 0x476c8c;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        puVar6[0x30] = cVar7;\n        puVar6[0x31] = uVar8;\n        *(puVar6 + -8) = 0x476cb5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        in_R8 = puVar6[0x30];\n        in_R9 = puVar6[0x31];\n        *0x20 = puVar6;\n    } while( true );\ncode_r0x00476aa5:\n    *(*0x20 + -0x98) = 0x476ab2;\n    fcn.0045e420(0x41);\ncode_r0x00476ab2:\n    *(*0x20 + -0x98) = 0x476abf;\n    fcn.0045e420(0x41);\n    puVar3 = puVar12;\ncode_r0x00476abf:\n    uVar10 = SUB81(puVar11, 0);\n    arg1 = 0x24;\n    *(*0x20 + -0x98) = 0x476acc;\n    puVar2 = fcn.0045e440(0x24);\n    in_RAX = unaff_RSI;\ncode_r0x00476acc:\n    (*0x20 + -0x53)[puVar3] = uVar10;\n    puVar3 = puVar2;\n    unaff_RSI = in_RAX;\n    puVar11 = puVar4;\n    goto code_r0x00476ae0;\n}\n",
        "token_count": 3316
    },
    "00450fc0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450fc0(void)\n\n{\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n        in_RAX = in_RAX & 0xff;\n    }\n    if ((in_RAX & 0x80) != 0) {\n        fcn.0044f960(0);\n    }\n    fcn.0044f960(0);\n    return;\n}\n",
        "token_count": 136
    },
    "00455e40": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.00455e40(void)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar *puVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        puVar7 = unaff_RBP;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -8;\n            puVar6 = *0x20 + -8;\n            *(*0x20 + -8) = unaff_RBP;\n            if (in_RAX == 0) {\n                return 0;\n            }\n            uVar5 = 0;\n            iVar3 = 0;\n            do {\n                iVar4 = iVar3;\n                uVar1 = *(in_RAX + iVar4 + 1);\n                uVar2 = iVar4 * 7;\n                if (uVar2 < 0) goto code_r0x00455f00;\n                uVar5 = uVar5 + ((uVar1 & 0x7f) << (uVar2 & 0x3f) & -(uVar2 < 0x40));\n                iVar3 = iVar4 + 1;\n            } while ((uVar1 & 0x80) != 0);\n            if (uVar5 == 0) {\n                return 0;\n            }\n            iVar3 = in_RAX + iVar4 + 2;\n            if (-1 < uVar5) {\n                if (uVar5 <= -iVar3) {\n                    return iVar3;\n                }\n                if (iVar3 != 0) {\n                    *(*0x20 + -0x10) = 0x455ef5;\n                    fcn.004574e0();\n                }\n                *(*0x20 + -0x10) = 0x455efa;\n                fcn.00457520();\n            }\n            *(*0x20 + -0x10) = 0x455eff;\n            fcn.004574e0();\ncode_r0x00455f00:\n            *(*0x20 + -0x10) = 0x455f05;\n            in_RAX = fcn.00431ba0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x455f10;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n        unaff_RBP = puVar7;\n    } while( true );\n}\n",
        "token_count": 632
    },
    "00455f20": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint8_t * fcn.00455f20(void)\n\n{\n    int64_t iVar1;\n    uint8_t *puVar2;\n    uint64_t uVar3;\n    uint8_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uchar *puVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        puVar9 = unaff_RBP;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -8;\n            puVar8 = *0x20 + -8;\n            *(*0x20 + -8) = unaff_RBP;\n            if ((*in_RAX & 2) == 0) {\n                return NULL;\n            }\n            iVar6 = 0;\n            iVar5 = 0;\n            do {\n                iVar4 = iVar5;\n                uVar7 = iVar4 * 7;\n                if (uVar7 < 0) goto code_r0x0045602a;\n                iVar6 = iVar6 + ((in_RAX[iVar4 + 1] & 0x7f) << (uVar7 & 0x3f) & -(uVar7 < 0x40));\n                iVar5 = iVar4 + 1;\n            } while ((in_RAX[iVar4 + 1] & 0x80) != 0);\n            iVar5 = 0;\n            uVar7 = 0;\n            while( true ) {\n                iVar1 = iVar6 + iVar4 + iVar5;\n                uVar3 = iVar5 * 7;\n                if (uVar3 < 0) break;\n                uVar7 = uVar7 + ((in_RAX[iVar1 + 2] & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n                if ((in_RAX[iVar1 + 2] & 0x80) == 0) {\n                    puVar2 = in_RAX + iVar1 + 3;\n                    if (-1 < uVar7) {\n                        if (uVar7 <= -puVar2) {\n                            return puVar2;\n                        }\n                        if (puVar2 != NULL) {\n                            *(*0x20 + -0x10) = 0x456018;\n                            fcn.004574e0();\n                        }\n                        *(*0x20 + -0x10) = 0x45601d;\n                        fcn.00457520();\n                    }\n                    *(*0x20 + -0x10) = 0x456025;\n                    fcn.004574e0();\n                    break;\n                }\n                iVar5 = iVar5 + 1;\n            }\n            *(*0x20 + -0x10) = 0x45602a;\n            fcn.00431ba0();\ncode_r0x0045602a:\n            *(*0x20 + -0x10) = 0x45602f;\n            in_RAX = fcn.00431ba0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x45603a;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n        unaff_RBP = puVar9;\n    } while( true );\n}\n",
        "token_count": 804
    },
    "00456060": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong fcn.00456060(void)\n\n{\n    uint64_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == NULL) || ((*in_RAX & 4) == 0)) {\n                return 0;\n            }\n            iVar6 = 0;\n            iVar7 = 0;\n            do {\n                iVar3 = iVar7;\n                uVar1 = iVar3 * 7;\n                if (uVar1 < 0) goto code_r0x004561a0;\n                iVar6 = ((in_RAX[iVar3 + 1] & 0x7f) << (uVar1 & 0x3f) & -(uVar1 < 0x40)) + iVar6;\n                iVar7 = iVar3 + 1;\n            } while ((in_RAX[iVar3 + 1] & 0x80) != 0);\n            iVar7 = iVar6 + 2 + iVar3;\n            if ((*in_RAX & 2) == 0) {\ncode_r0x00456102:\n                *(*0x20 + -0xc) = 0;\n                if (*0x20 + -0xc != in_RAX + iVar7) {\n                    *(*0x20 + -0xc) = *(in_RAX + iVar7);\n                }\n                *(*0x20 + -0x28) = 0x45612d;\n                fcn.004556e0();\n                *(*0x20 + -0x28) = 0x456132;\n                uVar2 = fcn.00455e40();\n                return uVar2;\n            }\n            iVar7 = 0;\n            iVar4 = 0;\n            while( true ) {\n                uVar1 = iVar7 * 7;\n                if (uVar1 < 0) break;\n                iVar4 = iVar4 + ((in_RAX[iVar6 + iVar3 + iVar7 + 2] & 0x7f) << (uVar1 & 0x3f) & -(uVar1 < 0x40));\n                if ((in_RAX[iVar6 + iVar3 + iVar7 + 2] & 0x80) == 0) {\n                    iVar7 = iVar4 + iVar7 + 3 + iVar6 + iVar3;\n                    goto code_r0x00456102;\n                }\n                iVar7 = iVar7 + 1;\n            }\n            *(*0x20 + -0x28) = 0x45619c;\n            fcn.00431ba0();\ncode_r0x004561a0:\n            *(*0x20 + -0x28) = 0x4561a5;\n            in_RAX = fcn.00431ba0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x4561b0;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 815
    },
    "00463c00": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.00463c00(void)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar *puVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        puVar7 = unaff_RBP;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -8;\n            puVar6 = *0x20 + -8;\n            *(*0x20 + -8) = unaff_RBP;\n            if (in_RAX == 0) {\n                return 0;\n            }\n            uVar5 = 0;\n            iVar3 = 0;\n            do {\n                iVar4 = iVar3;\n                uVar1 = *(in_RAX + iVar4 + 1);\n                uVar2 = iVar4 * 7;\n                if (uVar2 < 0) goto code_r0x00463caf;\n                uVar5 = uVar5 + ((uVar1 & 0x7f) << (uVar2 & 0x3f) & -(uVar2 < 0x40));\n                iVar3 = iVar4 + 1;\n            } while ((uVar1 & 0x80) != 0);\n            iVar3 = in_RAX + iVar4 + 2;\n            if (-1 < uVar5) {\n                if (uVar5 <= -iVar3) {\n                    return iVar3;\n                }\n                if (iVar3 != 0) {\n                    *(*0x20 + -0x10) = 0x463ca5;\n                    fcn.004574e0();\n                }\n                *(*0x20 + -0x10) = 0x463caa;\n                fcn.00457520();\n            }\n            *(*0x20 + -0x10) = 0x463caf;\n            fcn.004574e0();\ncode_r0x00463caf:\n            *(*0x20 + -0x10) = 0x463cb4;\n            in_RAX = fcn.00431ba0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x463cbf;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n        unaff_RBP = puVar7;\n    } while( true );\n}\n",
        "token_count": 612
    },
    "0047d6a0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.0047d6a0(void)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar *puVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        puVar7 = unaff_RBP;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -8;\n            puVar6 = *0x20 + -8;\n            *(*0x20 + -8) = unaff_RBP;\n            if (in_RAX == 0) {\n                return 0;\n            }\n            uVar5 = 0;\n            iVar3 = 0;\n            do {\n                iVar4 = iVar3;\n                uVar1 = *(in_RAX + iVar4 + 1);\n                uVar2 = iVar4 * 7;\n                if (uVar2 < 0) goto code_r0x0047d74f;\n                uVar5 = uVar5 + ((uVar1 & 0x7f) << (uVar2 & 0x3f) & -(uVar2 < 0x40));\n                iVar3 = iVar4 + 1;\n            } while ((uVar1 & 0x80) != 0);\n            iVar3 = in_RAX + iVar4 + 2;\n            if (-1 < uVar5) {\n                if (uVar5 <= -iVar3) {\n                    return iVar3;\n                }\n                if (iVar3 != 0) {\n                    *(*0x20 + -0x10) = 0x47d745;\n                    fcn.004574e0();\n                }\n                *(*0x20 + -0x10) = 0x47d74a;\n                fcn.00457520();\n            }\n            *(*0x20 + -0x10) = 0x47d74f;\n            fcn.004574e0();\ncode_r0x0047d74f:\n            *(*0x20 + -0x10) = 0x47d754;\n            in_RAX = fcn.00431ba0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x47d75f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n        unaff_RBP = puVar7;\n    } while( true );\n}\n",
        "token_count": 623
    },
    "0047d780": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint8_t * fcn.0047d780(void)\n\n{\n    int64_t iVar1;\n    uint8_t *puVar2;\n    uint64_t uVar3;\n    uint8_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uchar *puVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        puVar9 = unaff_RBP;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -8;\n            puVar8 = *0x20 + -8;\n            *(*0x20 + -8) = unaff_RBP;\n            if ((*in_RAX & 2) == 0) {\n                return NULL;\n            }\n            iVar6 = 0;\n            iVar5 = 0;\n            do {\n                iVar4 = iVar5;\n                uVar7 = iVar4 * 7;\n                if (uVar7 < 0) goto code_r0x0047d88a;\n                iVar6 = iVar6 + ((in_RAX[iVar4 + 1] & 0x7f) << (uVar7 & 0x3f) & -(uVar7 < 0x40));\n                iVar5 = iVar4 + 1;\n            } while ((in_RAX[iVar4 + 1] & 0x80) != 0);\n            iVar5 = 0;\n            uVar7 = 0;\n            while( true ) {\n                iVar1 = iVar6 + iVar4 + iVar5;\n                uVar3 = iVar5 * 7;\n                if (uVar3 < 0) break;\n                uVar7 = uVar7 + ((in_RAX[iVar1 + 2] & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n                if ((in_RAX[iVar1 + 2] & 0x80) == 0) {\n                    puVar2 = in_RAX + iVar1 + 3;\n                    if (-1 < uVar7) {\n                        if (uVar7 <= -puVar2) {\n                            return puVar2;\n                        }\n                        if (puVar2 != NULL) {\n                            *(*0x20 + -0x10) = 0x47d878;\n                            fcn.004574e0();\n                        }\n                        *(*0x20 + -0x10) = 0x47d87d;\n                        fcn.00457520();\n                    }\n                    *(*0x20 + -0x10) = 0x47d885;\n                    fcn.004574e0();\n                    break;\n                }\n                iVar5 = iVar5 + 1;\n            }\n            *(*0x20 + -0x10) = 0x47d88a;\n            fcn.00431ba0();\ncode_r0x0047d88a:\n            *(*0x20 + -0x10) = 0x47d88f;\n            in_RAX = fcn.00431ba0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x47d89a;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n        unaff_RBP = puVar9;\n    } while( true );\n}\n",
        "token_count": 812
    },
    "0047d8c0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar * fcn.0047d8c0(ulong arg1, uint64_t arg2)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    int64_t arg1_01;\n    uint8_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uchar *puVar6;\n    int64_t unaff_RDI;\n    char in_R8B;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    bool bVar11;\n    \n    do {\n        iVar2 = in_RAX;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RBX < 0x20000000) {\n                if (unaff_RDI < 0x20000000) {\n                    *(*0x20 + -0x22) = 0;\n                    *(*0x20 + -0x20) = 0;\n                    *(*0x20 + -0x2c) = 0;\n                    *(*0x20 + -0x2a) = 0;\n                    uVar7 = 0;\n                    uVar9 = unaff_RBX;\n                    while( true ) {\n                        uVar4 = uVar9 & 0x7f;\n                        uVar9 = uVar9 >> 7;\n                        if (uVar9 == 0) break;\n                        if (9 < uVar7) goto code_r0x0047dc7f;\n                        *(*0x20 + (uVar7 - 0x22)) = uVar4 | 0x80;\n                        uVar7 = uVar7 + 1;\n                    }\n                    if (uVar7 < 10) {\n                        *(*0x20 + (uVar7 - 0x22)) = uVar4;\n                        uVar9 = 0;\n                        iVar2 = unaff_RDI;\n                        while( true ) {\n                            uVar4 = iVar2 & 0x7f;\n                            iVar2 = iVar2 >> 7;\n                            if (iVar2 == 0) break;\n                            if (9 < uVar9) goto code_r0x0047dc65;\n                            *(*0x20 + (uVar9 - 0x2c)) = uVar4 | 0x80;\n                            uVar9 = uVar9 + 1;\n                        }\n                        if (uVar9 < 10) {\n                            *(*0x20 + (uVar9 - 0x2c)) = uVar4;\n                            iVar2 = unaff_RBX + uVar7 + 2;\n                            iVar3 = iVar2;\n                            if (unaff_RDI != 0) {\n                                unaff_SIL = unaff_SIL | 2;\n                                iVar3 = unaff_RDI + uVar9 + 3 + unaff_RBX + uVar7;\n                            }\n                            *(*0x20 + -0x38) = unaff_RBX;\n                            *(*0x20 + -0x40) = uVar7 + 2;\n                            *(*0x20 + -0x70) = iVar2;\n                            *(*0x20 + -0x48) = unaff_RDI;\n                            *(*0x20 + 8) = in_RAX;\n                            *(*0x20 + 0x18) = arg1;\n                            *(*0x20 + -0x50) = unaff_RBX + uVar7;\n                            *(*0x20 + -0x68) = uVar9;\n                            *(*0x20 + -0x60) = uVar7;\n                            if (in_R8B != '\\0') {\n                                unaff_SIL = unaff_SIL | 8;\n                            }\n                            *(*0x20 + -0x79) = unaff_SIL;\n                            *(*0x20 + -0x58) = iVar3;\n                            *(*0x20 + -0xc0) = 0x47da5b;\n                            puVar1 = fcn.00445720(iVar3);\n                            uVar9 = *(*0x20 + -0x58);\n                            if (uVar9 != 0) {\n                                *(*0x20 + -0x10) = puVar1;\n                                iVar2 = uVar9 - 1;\n                                iVar3 = *(*0x20 + -0x60);\n                                arg1_01 = iVar2;\n                                if (iVar3 + 1 < iVar2) {\n                                    arg1_01 = iVar3 + 1;\n                                }\n                                *puVar1 = *(*0x20 + -0x79);\n                                if (*0x20 + -0x22 != puVar1 + (-iVar2 >> 0x3f & 1)) {\n                                    *(*0x20 + -0xc0) = 0x47dab7;\n                                    fcn.0045eda0(arg1_01);\n                                    puVar1 = *(*0x20 + -0x10);\n                                    uVar9 = *(*0x20 + -0x58);\n                                    iVar3 = *(*0x20 + -0x60);\n                                }\n                                unaff_RBX = *(*0x20 + -0x40);\n                                if (unaff_RBX <= uVar9) {\n                                    iVar3 = (uVar9 - iVar3) + -2;\n                                    iVar2 = iVar3;\n                                    if (*(*0x20 + -0x38) < iVar3) {\n                                        iVar2 = *(*0x20 + -0x38);\n                                    }\n                                    if (*(*0x20 + 8) == puVar1 + (unaff_RBX & -iVar3 >> 0x3f)) {\n                                        unaff_RBX = *(*0x20 + -0x48);\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x47db1f;\n                                        fcn.0045eda0(iVar2);\n                                        unaff_RBX = *(*0x20 + -0x48);\n                                        puVar1 = *(*0x20 + -0x10);\n                                        uVar9 = *(*0x20 + -0x58);\n                                    }\n                                    if (unaff_RBX == 0) {\n                                        return puVar1;\n                                    }\n                                    if (*(*0x20 + -0x70) <= uVar9) {\n                                        uVar9 = uVar9 - *(*0x20 + -0x50);\n                                        uVar7 = uVar9 - 2;\n                                        iVar2 = *(*0x20 + -0x68);\n                                        uVar8 = iVar2 + 1;\n                                        arg1_00 = uVar7;\n                                        if (uVar8 < uVar7) {\n                                            arg1_00 = uVar8;\n                                        }\n                                        puVar6 = puVar1 + (*(*0x20 + -0x70) & -uVar7 >> 0x3f);\n                                        if (*0x20 + -0x2c == puVar6) {\n                                            bVar10 = uVar8 < uVar7;\n                                            bVar11 = uVar8 == uVar7;\n                                        }\n                                        else {\n                                            *(*0x20 + -0x78) = uVar8;\n                                            *(*0x20 + -0x38) = uVar9;\n                                            *(*0x20 + -0x40) = uVar7;\n                                            *(*0x20 + -0x18) = puVar6;\n                                            *(*0x20 + -0xc0) = 0x47dbac;\n                                            fcn.0045eda0(arg1_00);\n                                            uVar8 = *(*0x20 + -0x78);\n                                            uVar7 = *(*0x20 + -0x40);\n                                            bVar10 = uVar8 < uVar7;\n                                            bVar11 = uVar8 == uVar7;\n                                            unaff_RBX = *(*0x20 + -0x48);\n                                            puVar6 = *(*0x20 + -0x18);\n                                            uVar9 = *(*0x20 + -0x38);\n                                            iVar2 = *(*0x20 + -0x68);\n                                            puVar1 = *(*0x20 + -0x10);\n                                        }\n                                        if (bVar10 || bVar11) {\n                                            uVar9 = (uVar9 - iVar2) - 3;\n                                            uVar7 = uVar9;\n                                            if (unaff_RBX < uVar9) {\n                                                uVar7 = unaff_RBX;\n                                            }\n                                            if (*(*0x20 + 0x18) != puVar6 + (-uVar9 >> 0x3f & uVar8)) {\n                                                *(*0x20 + -0xc0) = 0x47dc17;\n                                                fcn.0045eda0(uVar7);\n                                                puVar1 = *(*0x20 + -0x10);\n                                            }\n                                            return puVar1;\n                                        }\n                                        *(*0x20 + -0xc0) = 0x47dc3a;\n                                        fcn.0045e4e0(uVar7);\n                                    }\n                                    *(*0x20 + -0xc0) = 0x47dc45;\n                                    fcn.0045e4e0(uVar9);\n                                }\n                                *(*0x20 + -0xc0) = 0x47dc4d;\n                                fcn.0045e4e0(uVar9);\n                            }\n                            *(*0x20 + -0xc0) = 0x47dc57;\n                            fcn.0045e420(0);\n                        }\n                        *(*0x20 + -0xc0) = 0x47dc65;\n                        fcn.0045e420(10);\ncode_r0x0047dc65:\n                        *(*0x20 + -0xc0) = 0x47dc72;\n                        fcn.0045e420(10);\n                    }\n                    *(*0x20 + -0xc0) = 0x47dc7f;\n                    fcn.0045e420(10);\ncode_r0x0047dc7f:\n                    *(*0x20 + -0xc0) = 0x47dc8c;\n                    fcn.0045e420(10);\n                    arg2 = unaff_RBX;\n                }\n                *(*0x20 + -0xc0) = 0x47dcb4;\n                fcn.00449620(0x20, arg2, 0x4a8029, 3);\n                *(*0x20 + -0xc0) = 0x47dcb9;\n                fcn.00409fe0();\n                *(*0x20 + -0xc0) = 0x47dcc8;\n                in_RAX = fcn.00432de0();\n            }\n            arg1 = 0x21;\n            unaff_SIL = 0;\n            in_R8B = ')';\n            *(*0x20 + -0xc0) = 0x47dcf0;\n            fcn.00449620(0x21, arg2, 0x4a8029, 3);\n            *(*0x20 + -0xc0) = 0x47dcf5;\n            unaff_RBX = fcn.00409fe0();\n            *(*0x20 + -0xc0) = 0x47dd05;\n            iVar2 = fcn.00432de0();\n            unaff_RDI = in_RAX;\n        }\n        *(puVar5 + 8) = iVar2;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        puVar5[0x28] = unaff_SIL;\n        puVar5[0x29] = in_R8B;\n        *(puVar5 + -8) = 0x47dd29;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_SIL = puVar5[0x28];\n        in_R8B = puVar5[0x29];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2855
    },
    "00460bc0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nulong fcn.00460bc0(void)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    ulong uVar2;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((*unaff_RBX == *in_RAX) && (unaff_RBX[1] == in_RAX[1])) {\n        if ((unaff_RBX[3] == in_RAX[3]) &&\n           (((unaff_RBX[5] == in_RAX[5] && (cVar1 = fcn.004025e0(in_RAX[3], unaff_RBX[2]),  cVar1 != '\\0')) &&\n            (cVar1 = fcn.004025e0(in_RAX[5], unaff_RBX),  cVar1 != '\\0')))) {\n            uVar2 = fcn.004025e0(0x28, unaff_RBX);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 272
    },
    "004729c0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004729c0(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar6 = 0;\n    uVar4 = 0;\n    while( true ) {\n        uVar5 = -(unaff_RBX < 0x40);\n        uVar7 = uVar6;\n        if ((uVar5 & uVar6 >> (unaff_RBX & 0x3f)) != 0) goto code_r0x00472a3e;\n        if (*(in_RAX + 800) == uVar4 || *(in_RAX + 800) < uVar4) break;\n        if (799 < uVar4) {\n            fcn.0045e420(800);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar6 = (*(uVar4 + in_RAX) + uVar6 * 10) - 0x30;\n        uVar4 = uVar4 + 1;\n    }\n    if (uVar6 == 0) {\n        *(in_RAX + 800) = 0;\n        return;\n    }\ncode_r0x00472b8f:\n    uVar7 = uVar6;\n    if ((uVar5 & uVar6 >> (unaff_RBX & 0x3f)) != 0) {\ncode_r0x00472a3e:\n        *(in_RAX + 0x328) = (*(in_RAX + 0x328) - uVar4) + 1;\n        uVar3 = unaff_RBX;\n        uVar6 = (1 << (uVar3 & 0x3f) & uVar5) - 1;\n        uVar9 = 0;\n        for (; *(in_RAX + 800) != uVar4 && uVar4 <= *(in_RAX + 800); uVar4 = uVar4 + 1) {\n            if (799 < uVar4) goto code_r0x00472b75;\n            uVar1 = *(uVar4 + in_RAX);\n            if (799 < uVar9) goto code_r0x00472b68;\n            *(in_RAX + uVar9) = (uVar7 >> (uVar3 & 0x3f) & uVar5) + 0x30;\n            uVar9 = uVar9 + 1;\n            uVar7 = (uVar1 + (uVar7 & uVar6) * 10) - 0x30;\n        }\n        while (uVar7 != 0) {\n            uVar8 = uVar7 >> (uVar3 & 0x3f) & uVar5;\n            uVar4 = uVar7 & uVar6;\n            if (uVar9 < 800) {\n                if (799 < uVar9) goto code_r0x00472b5b;\n                *(in_RAX + uVar9) = uVar8 + '0';\n                uVar9 = uVar9 + 1;\n            }\n            else if (uVar8 != 0) {\n                *(in_RAX + 0x331) = 1;\n            }\n            uVar7 = uVar4 * 10;\n        }\n        *(in_RAX + 800) = uVar9;\n        do {\n            uVar4 = *(in_RAX + 800);\n            if (uVar4 < 1) {\ncode_r0x00472b37:\n                if (uVar4 == 0) {\n                    *(in_RAX + 0x328) = 0;\n                }\n                return;\n            }\n            if (799 < uVar4 - 1) goto code_r0x00472b4e;\n            uVar3 = *((uVar4 - 1) + in_RAX);\n            uVar5 = uVar3;\n            if (uVar3 != 0x30) goto code_r0x00472b37;\n            *(in_RAX + 800) = uVar4 - 1;\n        } while( true );\n    }\n    goto code_r0x00472b85;\ncode_r0x00472b4e:\n    fcn.0045e420(800);\ncode_r0x00472b5b:\n    fcn.0045e420(800);\ncode_r0x00472b68:\n    fcn.0045e420(800);\ncode_r0x00472b75:\n    unaff_RBX = 800;\n    in_RAX = fcn.0045e420(800);\ncode_r0x00472b85:\n    uVar6 = uVar6 * 10;\n    uVar4 = uVar4 + 1;\n    goto code_r0x00472b8f;\n}\n",
        "token_count": 1123
    },
    "00472bc0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00472bc0(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    \n    uVar7 = *0x53e398;\n    if (unaff_RBX < *0x53e398) {\n        iVar9 = *(*0x53e390 + unaff_RBX * 0x18);\n        uVar7 = *(in_RAX + 800);\n        if (uVar7 < 0x321) {\n            for (iVar6 = 0; iVar6 < *(*0x53e390 + 0x10 + unaff_RBX * 0x18); iVar6 = iVar6 + 1) {\n                if (uVar7 <= iVar6) {\ncode_r0x00472c3b:\n                    iVar9 = iVar9 + -1;\n                    break;\n                }\n                uVar1 = *(*(*0x53e390 + 8 + unaff_RBX * 0x18) + iVar6);\n                if (uVar1 != *(iVar6 + in_RAX)) {\n                    if (*(iVar6 + in_RAX) < uVar1) goto code_r0x00472c3b;\n                    break;\n                }\n            }\n            uVar4 = 0;\n            uVar5 = iVar9 + uVar7;\n            while (uVar7 = uVar7 - 1,  -1 < uVar7) {\n                uVar8 = uVar4 + (*(in_RAX + uVar7) - 0x30 << (unaff_RBX & 0x3f) & -(unaff_RBX < 0x40));\n                uVar4 = uVar8 / 10;\n                uVar8 = uVar8 % 10;\n                uVar3 = uVar5 - 1;\n                if (uVar3 < 800) {\n                    if (799 < uVar3) goto code_r0x00472dba;\n                    *((uVar5 - 1) + in_RAX) = uVar8 + '0';\n                    uVar5 = uVar3;\n                }\n                else {\n                    uVar5 = uVar3;\n                    if (uVar8 != 0) {\n                        *(in_RAX + 0x331) = 1;\n                    }\n                }\n            }\n            while (uVar4 != 0) {\n                uVar8 = uVar4 / 10;\n                uVar3 = uVar4 % 10;\n                uVar7 = uVar5 - 1;\n                uVar4 = uVar8;\n                if (uVar7 < 800) {\n                    if (799 < uVar7) goto code_r0x00472db0;\n                    *((uVar5 - 1) + in_RAX) = uVar3 + '0';\n                    uVar5 = uVar7;\n                }\n                else {\n                    uVar5 = uVar7;\n                    if (uVar3 != 0) {\n                        *(in_RAX + 0x331) = 1;\n                    }\n                }\n            }\n            iVar6 = *(in_RAX + 800) + iVar9;\n            *(in_RAX + 800) = iVar6;\n            if (799 < iVar6) {\n                *(in_RAX + 800) = 800;\n            }\n            *(in_RAX + 0x328) = *(in_RAX + 0x328) + iVar9;\ncode_r0x00472d65:\n            iVar9 = *(in_RAX + 800);\n            if (0 < iVar9) {\n                if (799 < iVar9 - 1U) {\n                    fcn.0045e420(800);\ncode_r0x00472db0:\n                    fcn.0045e420(800);\ncode_r0x00472dba:\n                    uVar7 = 800;\n                    fcn.0045e420(800);\n                    goto code_r0x00472dc5;\n                }\n                if (*(iVar9 + -1 + in_RAX) == '0') goto code_r0x00472d5e;\n            }\n            if (iVar9 == 0) {\n                *(in_RAX + 0x328) = 0;\n            }\n            return;\n        }\ncode_r0x00472dc5:\n        fcn.0045e460(uVar7, 800);\n    }\n    fcn.0045e440(uVar7);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\ncode_r0x00472d5e:\n    *(in_RAX + 800) = iVar9 - 1U;\n    goto code_r0x00472d65;\n}\n",
        "token_count": 1080
    },
    "00449f80": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.00449f80(void)\n\n{\n    char cVar1;\n    char *in_RAX;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    \n    if (unaff_RBX == 0) {\n        return 0;\n    }\n    cVar1 = *in_RAX;\n    if (cVar1 == '-') {\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n    }\n    uVar4 = 0;\n    for (iVar2 = 0; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n        if (9 < in_RAX[iVar2] - 0x30U) {\n            return 0;\n        }\n        if (0x1999999999999999 < uVar4) {\n            return 0;\n        }\n        uVar3 = uVar4 * 10;\n        uVar4 = (in_RAX[iVar2] + uVar4 * 10) - 0x30;\n        if (uVar4 < uVar3) {\n            return 0;\n        }\n    }\n    if (cVar1 != '-') {\n        if (0x7fffffffffffffff < uVar4) {\n            return 0;\n        }\n        if (cVar1 != '-') goto code_r0x0044a039;\n    }\n    if (0x8000000000000000 < uVar4) {\n        return 0;\n    }\ncode_r0x0044a039:\n    if (cVar1 == '-') {\n        uVar4 = -uVar4;\n    }\n    return uVar4;\n}\n",
        "token_count": 393
    },
    "00411b40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00411b40(void)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint32_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    bool bVar5;\n    uint32_t uVar3;\n    \n    if (in_RAX + 0x800000000000 >> 0x2a < 0x40) {\n        uVar3 = in_RAX >> 3;\n        uVar2 = uVar3 & 0x7ffff;\n        if (uVar2 >> 6 < 0x2000) {\n            iVar4 = (uVar3 & 0x3f) - 0x40;\n            bVar5 = -(unaff_RBX >> 3) == iVar4;\n            if (((unaff_RBX >> 3 <= -iVar4 && !bVar5) || (bVar5)) || (uVar2 >> 9 < 0x400)) {\n                return;\n            }\n            fcn.0045e440(0x400);\n        }\n        fcn.0045e440(0x2000);\n    }\n    fcn.0045e440(0x40);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 286
    },
    "00412500": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00412500(void)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    char unaff_BL;\n    uint64_t noname_1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((unaff_BL == '\\0') && ((*(in_RAX + 0x62) & 1) == 0)) {\n        if (*(in_RAX + 0x68) == 8) {\n            noname_1 = *(in_RAX + 0x20) << 0xd;\n            uVar1 = *(in_RAX + 0x18) >> 3 & 0x3f;\n            for (uVar2 = 0; uVar2 < noname_1 >> 3; uVar2 = uVar2 + 0x40) {\n                fcn.00412660(uVar1, noname_1, 0x40);\n            }\n            fcn.00412840(uVar1, noname_1, noname_1);\n            return;\n        }\n        return;\n    }\n    uVar1 = *(in_RAX + 0x18) >> 3 & 0x3f;\n    fcn.00412840(uVar1, uVar1, *(in_RAX + 0x20) << 0xd);\n    return;\n}\n",
        "token_count": 351
    },
    "0041c400": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041c400(uint64_t param_1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    uint64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t *piVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = in_RAX + 0x800000000000 >> 0x2a;\n            if (uVar4 < 0x40) {\n                iVar5 = *(*(*(uVar4 * 8 + 0x56a790) + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8) + 0x10400 +\n                         (in_RAX >> 0xd & 0x1ff) * 8);\n                uVar4 = *(iVar5 + 0x68);\n                if (uVar4 != 0) {\n                    if ((*(iVar5 + 0x62) & 1) == 0) {\n                        *(*0x20 + -0x10) = in_RAX;\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (uVar4 < 0x20001) goto code_r0x0041c4c9;\n                        if (*(iVar5 + 0x18) != in_RAX) {\ncode_r0x0041c5e1:\n                            uVar4 = (*(iVar5 + 0x68) + *(iVar5 + 0x18)) - in_RAX;\n                            param_1 = 0x20000;\n                            if (0x20000 < uVar4) {\n                                uVar4 = 0x20000;\n                            }\ncode_r0x0041c4c9:\n                            *(*0x20 + -0x40) = uVar4;\n                            *(*0x20 + -0x90) = 0x41c4d9;\n                            iVar3 = fcn.00411b40();\n                            iVar5 = *(*0x20 + -0x10);\n                            piVar7 = *(*0x20 + -0x40);\n                            iVar8 = 0;\n                            do {\n                                if (param_1 == 0) {\n                                    piVar9 = NULL;\n                                }\n                                else {\n                                    uVar1 = 0;\n                                    if (param_1 != 0) {\n                                        for (; (param_1 >> uVar1 & 1) == 0; uVar1 = uVar1 + 1) {\n                                        }\n                                    }\n                                    param_1 = param_1 ^ 1 << (uVar1 & 0x3f);\n                                    piVar9 = iVar3 + uVar1 * 8;\n                                }\n                                piVar2 = piVar7;\n                                if (piVar9 == NULL) {\n                                    *(*0x20 + -0x50) = iVar8;\n                                    *(*0x20 + -0x90) = 0x41c511;\n                                    iVar3 = fcn.00411c60(param_1, iVar5);\n                                    if (piVar7 == NULL) {\n                                        iVar5 = *(*0x20 + 0x10);\n                                        piVar7 = iVar5 + 0x10;\n                                        *piVar7 = *piVar7 + *(*0x20 + -0x40);\n                                        piVar7 = iVar5 + 0x18;\n                                        *piVar7 = *piVar7 + *(*0x20 + -0x50);\n                                        return;\n                                    }\n                                    iVar5 = *(*0x20 + -0x10);\n                                    piVar2 = *(*0x20 + -0x40);\n                                    piVar9 = piVar7;\n                                }\n                                piVar7 = piVar2;\n                                iVar8 = piVar9 - iVar5;\n                                if ((*piVar9 != 0) && (piVar7 <= *piVar9 - iVar5)) {\n                                    *(*0x20 + -0x18) = iVar8;\n                                    *(*0x20 + -0x38) = in_RAX;\n                                    *(*0x20 + -0x28) = param_1;\n                                    *(*0x20 + -0x30) = uVar4;\n                                    *(*0x20 + -0x20) = iVar3;\n                                    *(*0x20 + -0x90) = 0x41c56c;\n                                    iVar3 = fcn.004119e0(iVar8);\n                                    if (iVar3 != 0) {\n                                        *(*0x20 + -0x90) = 0x41c58e;\n                                        fcn.0041c9c0(*(*0x20 + -0x18), iVar5, iVar8);\n                                    }\n                                    iVar3 = *(*0x20 + -0x20);\n                                    param_1 = *(*0x20 + -0x28);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    uVar4 = *(*0x20 + -0x30);\n                                    piVar7 = *(*0x20 + -0x40);\n                                    in_RAX = *(*0x20 + -0x38);\n                                    iVar8 = *(*0x20 + -0x18);\n                                }\n                                iVar8 = iVar8 + 8;\n                            } while( true );\n                        }\n                        *(*0x20 + -0x58) = iVar5;\n                        uVar4 = in_RAX;\ncode_r0x0041c60c:\n                        uVar4 = uVar4 + 0x20000;\n                        if (*(iVar5 + 0x68) + *(iVar5 + 0x18) <= uVar4) goto code_r0x0041c5e1;\n                        iVar3 = *unaff_RBX;\n                        if (iVar3 == 0) {\ncode_r0x0041c63e:\n                            *(*0x20 + -0x48) = uVar4;\n                            *(*0x20 + -0x90) = 0x41c64e;\n                            fcn.00422960();\n                            uVar4 = *(*0x20 + -0x48);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + -0x10);\n                            iVar5 = *(*0x20 + -0x58);\n                            goto code_r0x0041c60c;\n                        }\n                        uVar1 = *(iVar3 + 0x10);\n                        if (uVar1 == 0xfd) goto code_r0x0041c63e;\n                        if (uVar1 < 0xfd) {\n                            *(iVar3 + 0x18 + uVar1 * 8) = uVar4;\n                            *(iVar3 + 0x10) = *(iVar3 + 0x10) + 1;\n                            goto code_r0x0041c60c;\n                        }\n                        *(*0x20 + -0x90) = 0x41c671;\n                        fcn.0045e420(0xfd);\n                    }\n                    *(*0x20 + -0x90) = 0x41c685;\n                    fcn.00433580();\n                }\n                unaff_RBX = 0x11;\n                *(*0x20 + -0x90) = 0x41c696;\n                fcn.00433580();\n            }\n            param_1 = 0x40;\n            *(*0x20 + -0x90) = 0x41c6a5;\n            in_RAX = fcn.0045e440(0x40);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x41c6b5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1896
    },
    "0041c6e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041c6e0(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    \ncode_r0x0041c6e0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x50;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        uVar4 = 0;\n        do {\n            if (unaff_RBX <= uVar4) {\n                return;\n            }\n            if (arg1 == 0) {\ncode_r0x0041c779:\n                *(*0x20 + -0x18) = uVar4;\n                uVar4 = *(in_RAX + uVar4);\n                if (((unaff_RSI == 0) || (uVar4 <= *(unaff_RSI + 0x100) && *(unaff_RSI + 0x100) != uVar4)) ||\n                   (*(unaff_RSI + 0x108) < uVar4 || *(unaff_RSI + 0x108) == uVar4)) {\n                    *(*0x20 + -0x20) = uVar4;\n                    *(*0x20 + -0x58) = 0x41c7dc;\n                    iVar3 = fcn.00423980();\n                    if (iVar3 == 0) {\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        iVar2 = *(iVar3 + 0x18);\n                        uVar4 = (*(*0x20 + -0x20) - iVar2) * *(iVar3 + 0x5c);\n                        arg3 = uVar4 >> 0x20;\n                        if ((*(iVar3 + 0x98) < arg3 || *(iVar3 + 0x98) == arg3) &&\n                           ((1 << (uVar4 >> 0x20 & 7) & *((uVar4 >> 0x23) + *(iVar3 + 0x48))) == 0)) {\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                        else {\n                            iVar3 = *(iVar3 + 0x68);\n                            *(*0x20 + -0x58) = 0x41c87a;\n                            fcn.0041c9c0(*(*0x20 + -0x18), iVar2 + iVar3 * arg3, arg3);\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x41c7ac;\n                    fcn.00420620(1);\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                }\n            }\n            else {\n                uVar1 = *((uVar4 >> 6) + arg1);\n                if (uVar1 == 0) {\n                    if ((uVar4 & 0x3f) != 0) goto code_r0x0041c8cf;\n                    uVar4 = uVar4 + 0x38;\n                }\n                else if ((uVar1 >> (uVar4 >> 3 & 7) & 1) != 0) goto code_r0x0041c779;\n            }\n            uVar4 = uVar4 + 8;\n        } while( true );\n    }\n    goto code_r0x0041c8e6;\ncode_r0x0041c8cf:\n    unaff_RBX = 0xf;\n    *(*0x20 + -0x58) = 0x41c8e5;\n    in_RAX = fcn.00433580();\ncode_r0x0041c8e6:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x41c905;\n    fcn.0045bdc0();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x0041c6e0;\n}\n",
        "token_count": 1535
    },
    "00456820": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.00456820(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    ulong uVar5;\n    char cVar6;\n    ulong in_RAX;\n    ulong uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    ulong unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    uint32_t *puVar15;\n    uint64_t uVar16;\n    int64_t iVar17;\n    uint64_t uVar18;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x98 && *0x20 + -0x98 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0x118;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x120) = 0x456891;\n            fcn.0040d6c0(*0x20 + -0x18);\n            if (arg1 != '\\0') {\n                return 1;\n            }\n            *(*0x20 + -0x120) = 0x4568b5;\n            fcn.0040db00(*0x20 + -0x18);\n            iVar12 = *(*0x20 + 0x10);\n            if (*(*0x20 + 8) == iVar12) {\n                return 1;\n            }\n            uVar1 = *(*(*0x20 + 8) + 0x17);\n            if ((*(iVar12 + 0x17) & 0x1f) != (uVar1 & 0x1f)) {\n                return 0;\n            }\n            *(*0x20 + -0xfd) = uVar1;\n            *(*0x20 + -0xfe) = uVar1 & 0x1f;\n            *(*0x20 + -0x120) = 0x4568f6;\n            uVar7 = fcn.00455540();\n            *(*0x20 + -0x28) = uVar7;\n            *(*0x20 + -0xb0) = uVar1;\n            *(*0x20 + -0x120) = 0x456910;\n            iVar8 = fcn.00455540();\n            arg1 = *(*0x20 + -0xb0);\n            if (uVar1 != arg1) {\n                return 0;\n            }\n            *(*0x20 + -0x120) = 0x45692e;\n            cVar6 = fcn.004025e0(arg1, iVar12);\n            if (cVar6 == '\\0') {\n                return 0;\n            }\n            iVar10 = *(*0x20 + 8);\n            if ((*(iVar10 + 0x14) & 1) == 0) {\n                puVar15 = NULL;\n            }\n            else {\n                arg1 = 0x4ca8a0;\n                switch(*(iVar10 + 0x17) & 0x1f) {\n                case 0x11:\n                    puVar15 = iVar10 + 0x48;\n                    break;\n                case 0x12:\n                    puVar15 = iVar10 + 0x40;\n                    break;\n                case 0x13:\n                    puVar15 = iVar10 + 0x38;\n                    break;\n                case 0x14:\n                    puVar15 = iVar10 + 0x50;\n                    break;\n                case 0x15:\n                    puVar15 = iVar10 + 0x58;\n                    break;\n                case 0x16:\n                    puVar15 = iVar10 + 0x38;\n                    break;\n                case 0x17:\n                    puVar15 = iVar10 + 0x38;\n                    break;\n                default:\n                    arg1 = 0x4ca8a0;\n                    puVar15 = iVar10 + 0x30;\n                    break;\n                case 0x19:\n                    puVar15 = iVar10 + 0x50;\n                }\n            }\n            iVar17 = *(*0x20 + 0x10);\n            if ((*(iVar17 + 0x14) & 1) == 0) {\n                iVar13 = 0;\n            }\n            else {\n                arg1 = 0x4ca900;\n                switch(*(iVar17 + 0x17) & 0x1f) {\n                case 0x11:\n                    iVar13 = iVar17 + 0x48;\n                    break;\n                case 0x12:\n                    iVar13 = iVar17 + 0x40;\n                    break;\n                case 0x13:\n                    iVar13 = iVar17 + 0x38;\n                    break;\n                case 0x14:\n                    iVar13 = iVar17 + 0x50;\n                    break;\n                case 0x15:\n                    iVar13 = iVar17 + 0x58;\n                    break;\n                case 0x16:\n                    iVar13 = iVar17 + 0x38;\n                    break;\n                case 0x17:\n                    iVar13 = iVar17 + 0x38;\n                    break;\n                default:\n                    arg1 = 0x4ca900;\n                    iVar13 = iVar17 + 0x30;\n                    break;\n                case 0x19:\n                    iVar13 = iVar17 + 0x50;\n                }\n            }\n            if (puVar15 == NULL) {\n                if (iVar13 != 0) {\n                    return 0;\n                }\n            }\n            else {\n                if (iVar13 == 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x88) = iVar13;\n                uVar4 = *puVar15;\n                *(*0x20 + -0x120) = 0x456a3f;\n                fcn.004556e0();\n                *(*0x20 + -0x120) = 0x456a45;\n                uVar7 = fcn.00455e40();\n                *(*0x20 + -0x68) = uVar7;\n                *(*0x20 + -0xe8) = uVar4;\n                uVar4 = **(*0x20 + -0x88);\n                *(*0x20 + -0x120) = 0x456a6b;\n                fcn.004556e0();\n                *(*0x20 + -0x120) = 0x456a70;\n                iVar8 = fcn.00455e40();\n                arg1 = *(*0x20 + -0xe8);\n                if (uVar4 != arg1) {\n                    return 0;\n                }\n                *(*0x20 + -0x120) = 0x456a8e;\n                cVar6 = fcn.004025e0(arg1, iVar12);\n                if (cVar6 == '\\0') {\n                    return 0;\n                }\n                iVar10 = *(*0x20 + 8);\n                iVar17 = *(*0x20 + 0x10);\n            }\n            if (*(*0x20 + -0xfe) - 1U < 0x10) {\n                return 1;\n            }\n            switch(*(*0x20 + -0xfd) & 0x1f) {\n            case 0x11:\n                *(*0x20 + -0x120) = 0x456aef;\n                cVar6 = fcn.00456820(*(*0x20 + -0x20));\n                if (cVar6 == '\\0') {\n                    uVar9 = 0;\n                }\n                else {\n                    uVar9 = *(*(*0x20 + 8) + 0x40) & 0xffffffffffffff00 |\n                            *(*(*0x20 + 0x10) + 0x40) == *(*(*0x20 + 8) + 0x40);\n                }\n                return uVar9 & 0xffffffff;\n            case 0x12:\n                if (*(iVar17 + 0x38) == *(iVar10 + 0x38)) {\n                    *(*0x20 + -0x120) = 0x456b47;\n                    uVar9 = fcn.00456820(*(*0x20 + -0x20));\n                }\n                else {\n                    uVar9 = 0;\n                }\n                return uVar9;\n            case 0x13:\n                if (*(iVar17 + 0x32) != *(iVar10 + 0x32)) {\n                    return 0;\n                }\n                uVar2 = *(iVar10 + 0x30);\n                arg1 = uVar2;\n                uVar3 = *(iVar17 + 0x30);\n                if (uVar3 != uVar2) {\n                    return 0;\n                }\n                if ((*(iVar10 + 0x14) & 1) == 0) {\n                    iVar12 = 0x38;\n                }\n                else {\n                    iVar12 = 0x48;\n                }\n                if (arg1 < 0x100001) {\n                    if ((*(iVar17 + 0x14) & 1) == 0) {\n                        iVar8 = 0x38;\n                    }\n                    else {\n                        iVar8 = 0x48;\n                    }\n                    *(*0x20 + -0xfa) = uVar2;\n                    *(*0x20 + -0xfc) = uVar3;\n                    *(*0x20 + -0x90) = iVar10 + iVar12;\n                    *(*0x20 + -0x98) = iVar8 + iVar17;\n                    uVar7 = *(*0x20 + -0x20);\n                    uVar9 = 0;\n                    while (uVar16 = uVar3,  uVar9 < arg1) {\n                        if (uVar16 <= uVar9) goto code_r0x0045744c;\n                        *(*0x20 + -200) = uVar9;\n                        *(*0x20 + -0x120) = 0x4572ee;\n                        cVar6 = fcn.00456820(uVar7);\n                        if (cVar6 == '\\0') {\n                            return 0;\n                        }\ncode_r0x0045728b:\n                        arg1 = *(*0x20 + -0xfa);\n                        uVar3 = *(*0x20 + -0xfc);\n                        uVar7 = *(*0x20 + -0x20);\n                        iVar10 = *(*0x20 + 8);\n                        iVar17 = *(*0x20 + 0x10);\n                        uVar9 = *(*0x20 + -200) + 1;\n                    }\n                    if ((*(iVar10 + 0x14) & 1) == 0) {\n                        iVar12 = 0x38;\n                    }\n                    else {\n                        iVar12 = 0x48;\n                    }\n                    uVar16 = *(iVar10 + 0x30);\n                    uVar9 = (*(iVar10 + 0x32) & 0x7fff) + *(iVar10 + 0x30) & 0xffff;\n                    if (uVar16 <= uVar9) {\n                        iVar13 = uVar9 - uVar16;\n                        iVar8 = uVar16 - 0x100000;\n                        uVar9 = uVar16 << 3;\n                        if ((*(iVar17 + 0x14) & 1) == 0) {\n                            iVar11 = 0x38;\n                        }\n                        else {\n                            iVar11 = 0x48;\n                        }\n                        uVar18 = *(iVar17 + 0x30);\n                        uVar16 = (*(iVar17 + 0x32) & 0x7fff) + *(iVar17 + 0x30) & 0xffff;\n                        if (uVar18 <= uVar16) {\n                            *(*0x20 + -0xf0) = iVar13;\n                            *(*0x20 + -0xa0) = (iVar8 >> 0x3f & uVar9) + iVar10 + iVar12;\n                            uVar16 = uVar16 - uVar18;\n                            *(*0x20 + -0xf8) = uVar16;\n                            *(*0x20 + -0xa8) = iVar17 + iVar11 + (uVar18 << 3 & uVar18 - 0x100000 >> 0x3f);\n                            uVar9 = 0;\n                            while( true ) {\n                                if (iVar13 <= uVar9) {\n                                    return 1;\n                                }\n                                if (uVar16 <= uVar9) break;\n                                *(*0x20 + -0xd0) = uVar9;\n                                *(*0x20 + -0x120) = 0x457405;\n                                cVar6 = fcn.00456820(uVar7);\n                                if (cVar6 == '\\0') {\n                                    return 0;\n                                }\n                                uVar9 = *(*0x20 + -0xd0) + 1;\n                                iVar13 = *(*0x20 + -0xf0);\n                                uVar16 = *(*0x20 + -0xf8);\n                                uVar7 = *(*0x20 + -0x20);\n                            }\n                            *(*0x20 + -0x120) = 0x457438;\n                            fcn.0045e420(uVar16);\n                        }\n                        *(*0x20 + -0x120) = 0x457445;\n                        uVar9 = uVar16;\n                        fcn.0045e4e0(uVar16);\n                    }\n                    *(*0x20 + -0x120) = 0x45744c;\n                    fcn.0045e4e0(uVar9);\ncode_r0x0045744c:\n                    arg1 = uVar16 & 0xffffffff;\n                    *(*0x20 + -0x120) = 0x457456;\n                    fcn.0045e420(arg1);\n                }\n                *(*0x20 + -0x120) = 0x457465;\n                fcn.0045e460(arg1, 0x100000);\n            default:\n                *(*0x20 + -0x120) = 0x45746a;\n                fcn.00434ec0();\n                *(*0x20 + -0x120) = 0x45747b;\n                fcn.004357c0();\n                *(*0x20 + -0x120) = 0x457488;\n                fcn.004354c0();\n                *(*0x20 + -0x120) = 0x45748d;\n                fcn.00435120();\n                *(*0x20 + -0x120) = 0x457492;\n                fcn.00434f40();\n                unaff_RBX = 0x1d;\n                *(*0x20 + -0x120) = 0x4574a5;\n                in_RAX = fcn.00433580();\n                break;\n            case 0x14:\n                uVar7 = *(iVar10 + 0x30);\n                *(*0x20 + -0x120) = 0x456bfd;\n                uVar7 = fcn.00455e40(uVar7);\n                *(*0x20 + -0x28) = uVar7;\n                *(*0x20 + -0xb0) = iVar8;\n                uVar7 = *(*(*0x20 + 0x10) + 0x30);\n                *(*0x20 + -0x120) = 0x456c1e;\n                fcn.00455e40();\n                if (iVar8 == *(*0x20 + -0xb0)) {\n                    *(*0x20 + -0x120) = 0x456c38;\n                    cVar6 = fcn.004025e0(*(*0x20 + -0xb0), uVar7);\n                    if (cVar6 != '\\0') {\n                        iVar10 = *(*0x20 + 8);\n                        iVar12 = *(iVar10 + 0x40);\n                        iVar8 = *(*0x20 + 0x10);\n                        if (*(iVar8 + 0x40) != iVar12) {\n                            return 0;\n                        }\n                        *(*0x20 + -0xb0) = iVar12;\n                        uVar9 = 0;\n                        goto code_r0x004570a2;\n                    }\n                }\n                return 0;\n            case 0x15:\n                *(*0x20 + -0x120) = 0x456ca5;\n                cVar6 = fcn.00456820(*(*0x20 + -0x20));\n                if (cVar6 == '\\0') {\n                    uVar9 = 0;\n                }\n                else {\n                    *(*0x20 + -0x120) = 0x456cd2;\n                    uVar9 = fcn.00456820(*(*0x20 + -0x20));\n                }\n                return uVar9;\n            case 0x16:\n                *(*0x20 + -0x120) = 0x456cf7;\n                uVar9 = fcn.00456820(*(*0x20 + -0x20));\n                return uVar9;\n            case 0x17:\n                *(*0x20 + -0x120) = 0x456d1c;\n                uVar9 = fcn.00456820(*(*0x20 + -0x20));\n                return uVar9;\n            case 0x18:\n            case 0x1a:\n                return 1;\n            case 0x19:\n                if (*(iVar10 + 0x40) != *(iVar17 + 0x40)) {\n                    return 0;\n                }\n                uVar7 = *(iVar10 + 0x30);\n                *(*0x20 + -0x120) = 0x456d46;\n                uVar7 = fcn.00455e40(uVar7);\n                *(*0x20 + -0x28) = uVar7;\n                *(*0x20 + -0xb0) = iVar8;\n                uVar7 = *(*(*0x20 + 0x10) + 0x30);\n                *(*0x20 + -0x120) = 0x456d67;\n                fcn.00455e40();\n                if (iVar8 == *(*0x20 + -0xb0)) {\n                    *(*0x20 + -0x120) = 0x456d85;\n                    cVar6 = fcn.004025e0(*(*0x20 + -0xb0), uVar7);\n                    if (cVar6 != '\\0') {\n                        iVar12 = *(*0x20 + 8);\n                        iVar8 = *(iVar12 + 0x40);\n                        *(*0x20 + -0xb0) = iVar8;\n                        iVar10 = *(*0x20 + 0x10);\n                        uVar9 = 0;\n                        goto code_r0x00456e74;\n                    }\n                }\n                return 0;\n            }\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + -8) = 0x4574ba;\n        fcn.0045bdc0();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        *0x20 = puVar14;\n    } while( true );\ncode_r0x00456e74:\n    if (iVar8 <= uVar9) {\n        return 1;\n    }\n    uVar7 = *(iVar12 + 0x38);\n    uVar16 = *(iVar12 + 0x40);\n    if (uVar16 <= uVar9) {\ncode_r0x00457080:\n        *(*0x20 + -0x120) = 0x457085;\n        fcn.0045e420(uVar16);\n        goto code_r0x00457085;\n    }\n    uVar5 = *(iVar10 + 0x38);\n    uVar16 = *(iVar10 + 0x40);\n    if (uVar16 <= uVar9) {\n        *(*0x20 + -0x120) = 0x45707c;\n        fcn.0045e420(uVar16);\n        goto code_r0x00457080;\n    }\n    *(*0x20 + -0xb8) = uVar9 * 3;\n    *(*0x20 + -0x30) = uVar5;\n    *(*0x20 + -0x38) = uVar7;\n    *(*0x20 + -0xe0) = uVar9;\n    *(*0x20 + -0x120) = 0x456ecc;\n    uVar7 = fcn.00455e40();\n    *(*0x20 + -0x28) = uVar7;\n    *(*0x20 + -0xc0) = iVar8;\n    uVar7 = *(*0x20 + -0x30);\n    *(*0x20 + -0x120) = 0x456ef2;\n    fcn.00455e40();\n    if (iVar8 != *(*0x20 + -0xc0)) {\n        return 0;\n    }\n    *(*0x20 + -0x120) = 0x456f19;\n    cVar6 = fcn.004025e0(*(*0x20 + -0xc0), uVar7);\n    if (cVar6 == '\\0') {\n        return 0;\n    }\n    iVar12 = *(*(*0x20 + -0x30) + 8 + *(*0x20 + -0xb8) * 8);\n    *(*0x20 + -0x120) = 0x456f54;\n    cVar6 = fcn.00456820(*(*0x20 + -0x20));\n    if (cVar6 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x120) = 0x456f72;\n    uVar7 = fcn.00455f20();\n    *(*0x20 + -0x28) = uVar7;\n    *(*0x20 + -0xc0) = iVar12;\n    uVar7 = *(*0x20 + -0x30);\n    *(*0x20 + -0x120) = 0x456f98;\n    fcn.00455f20();\n    if (iVar12 != *(*0x20 + -0xc0)) {\n        return 0;\n    }\n    *(*0x20 + -0x120) = 0x456fb9;\n    cVar6 = fcn.004025e0(*(*0x20 + -0xc0), uVar7);\n    if (cVar6 == '\\0') {\n        return 0;\n    }\n    iVar12 = *(*0x20 + -0xb8);\n    if (*(*(*0x20 + -0x30) + 0x10 + iVar12 * 8) != *(*(*0x20 + -0x38) + 0x10 + iVar12 * 8)) {\n        return 0;\n    }\n    if (((**(*(*0x20 + -0x30) + iVar12 * 8) & 8) != 0) != ((**(*(*0x20 + -0x38) + iVar12 * 8) & 8) != 0)) {\n        return 0;\n    }\n    uVar9 = *(*0x20 + -0xe0) + 1;\n    iVar8 = *(*0x20 + -0xb0);\n    iVar10 = *(*0x20 + 0x10);\n    iVar12 = *(*0x20 + 8);\n    goto code_r0x00456e74;\ncode_r0x004570a2:\n    if (iVar12 <= uVar9) {\n        return 1;\n    }\n    iVar12 = *(iVar10 + 0x38);\n    uVar16 = *(iVar10 + 0x40);\n    if (uVar16 <= uVar9) {\ncode_r0x00457286:\n        *(*0x20 + -0x120) = 0x45728b;\n        fcn.0045e420(uVar16);\n        goto code_r0x0045728b;\n    }\n    uVar7 = *(iVar8 + 0x38);\n    uVar16 = *(iVar8 + 0x40);\n    if (uVar16 <= uVar9) {\n        *(*0x20 + -0x120) = 0x457286;\n        fcn.0045e420(uVar16);\n        goto code_r0x00457286;\n    }\n    *(*0x20 + -0xd8) = uVar9;\n    *(*0x20 + -0x78) = iVar12 + uVar9 * 8;\n    *(*0x20 + -0x40) = uVar7;\n    *(*0x20 + -0x48) = iVar12;\n    *(*0x20 + -0x120) = 0x4570fa;\n    uVar7 = fcn.004556e0();\n    *(*0x20 + -0x50) = uVar7;\n    iVar12 = *(*0x20 + -0x40);\n    *(*0x20 + -0x80) = iVar12 + *(*0x20 + -0xd8) * 8;\n    uVar9 = *(iVar12 + *(*0x20 + -0xd8) * 8);\n    *(*0x20 + -0x120) = 0x457126;\n    uVar7 = fcn.004556e0();\n    *(*0x20 + -0x58) = uVar7;\n    *(*0x20 + -0x120) = 0x45713b;\n    uVar7 = fcn.00455e40();\n    *(*0x20 + -0x60) = uVar7;\n    *(*0x20 + -0xb8) = uVar9;\n    *(*0x20 + -0x120) = 0x457155;\n    iVar8 = fcn.00455e40();\n    if (uVar9 != *(*0x20 + -0xb8)) {\n        return 0;\n    }\n    *(*0x20 + -0x120) = 0x457179;\n    cVar6 = fcn.004025e0(*(*0x20 + -0xb8), iVar12);\n    if (cVar6 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x120) = 0x457195;\n    uVar7 = fcn.00456060();\n    *(*0x20 + -0x28) = uVar7;\n    *(*0x20 + -0xb8) = iVar8;\n    *(*0x20 + -0x120) = 0x4571af;\n    fcn.00456060();\n    if (iVar8 != *(*0x20 + -0xb8)) {\n        return 0;\n    }\n    *(*0x20 + -0x120) = 0x4571cd;\n    cVar6 = fcn.004025e0(*(*0x20 + -0xb8), iVar12);\n    if (cVar6 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x120) = 0x4571ef;\n    uVar7 = fcn.00455980();\n    *(*0x20 + -0x70) = uVar7;\n    *(*0x20 + -0x120) = 0x457215;\n    fcn.00455980();\n    *(*0x20 + -0x120) = 0x45722d;\n    cVar6 = fcn.00456820(*(*0x20 + -0x20));\n    if (cVar6 == '\\0') {\n        return 0;\n    }\ncode_r0x00457085:\n    uVar9 = *(*0x20 + -0xd8) + 1;\n    iVar12 = *(*0x20 + -0xb0);\n    iVar8 = *(*0x20 + 0x10);\n    iVar10 = *(*0x20 + 8);\n    goto code_r0x004570a2;\n}\n",
        "token_count": 6411
    },
    "0047dec0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.0047dec0(ulong arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    \n    if ((*(in_RAX + 0x14) & 1) == 0) {\n        iVar3 = 0;\n    }\n    else {\n        arg1 = 0x4ca6c0;\n        switch(*(in_RAX + 0x17) & 0x1f) {\n        case 0x11:\n            iVar3 = in_RAX + 0x48;\n            break;\n        case 0x12:\n            iVar3 = in_RAX + 0x40;\n            break;\n        case 0x13:\n            iVar3 = in_RAX + 0x38;\n            break;\n        case 0x14:\n            iVar3 = in_RAX + 0x50;\n            break;\n        case 0x15:\n            iVar3 = in_RAX + 0x58;\n            break;\n        case 0x16:\n            iVar3 = in_RAX + 0x38;\n            break;\n        case 0x17:\n            iVar3 = in_RAX + 0x38;\n            break;\n        default:\n            arg1 = 0x4ca6c0;\n            iVar3 = in_RAX + 0x30;\n            break;\n        case 0x19:\n            iVar3 = in_RAX + 0x50;\n        }\n    }\n    if (iVar3 != 0) {\n        uVar1 = *(iVar3 + 6);\n        if (uVar1 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = iVar3 + *(iVar3 + 8);\n            if (0x10000 < uVar1) {\n                fcn.0045e520(arg1, uVar1);\n                pcVar2 = swi(3);\n                iVar3 = (*pcVar2)();\n                return iVar3;\n            }\n        }\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 460
    },
    "0047e3c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0047e3c0(void)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    ulong uVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_XMM15;\n            *(*0x20 + -0x38) = *0x20 + -8;\n            *(*0x20 + -0x30) = 0x47e3f6;\n            iVar3 = fcn.0045e6cb();\n            unaff_RBP = *(*0x20 + -0x38);\n            if ((-1 < unaff_RBX) &&\n               (iVar2 = *(iVar3 + 0x38),  *(iVar3 + 0x40) != unaff_RBX && unaff_RBX <= *(iVar3 + 0x40))) {\n                *(*0x20 + 0x70) = iVar3;\n                *(*0x20 + 0x78) = unaff_RBX;\n                iVar3 = *(iVar2 + 8 + unaff_RBX * 0x18);\n                if (iVar3 == 0) {\n                    uVar7 = 0;\n                    iVar3 = 0;\n                }\n                else {\n                    uVar7 = 0x4cb460;\n                }\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = unaff_RBX * 3;\n                *(*0x20 + 0x28) = uVar7;\n                *(*0x20 + 0x30) = iVar3;\n                *(*0x20 + -0x30) = 0x47e45f;\n                uVar7 = fcn.0047d6a0();\n                *(*0x20 + 8) = uVar7;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 0x68) = (**(*(*0x20 + -0x10) + *(*0x20 + -0x18) * 8) & 8) != 0;\n                uVar1 = **(*(*0x20 + -0x10) + *(*0x20 + -0x18) * 8);\n                uVar5 = uVar1;\n                if ((uVar1 & 1) == 0) {\n                    *(*0x20 + -0x30) = 0x47e4a5;\n                    uVar7 = fcn.0047d6a0();\n                    *(*0x20 + 0x18) = uVar7;\n                    *(*0x20 + 0x20) = uVar5;\n                }\n                *(*0x20 + -0x30) = 0x47e4c5;\n                uVar7 = fcn.0047d780();\n                if (uVar5 != 0) {\n                    *(*0x20 + 0x38) = uVar7;\n                    *(*0x20 + 0x40) = uVar5;\n                }\n                *(*0x20 + 0x48) = *(*(*0x20 + -0x10) + 0x10 + *(*0x20 + -0x18) * 8);\n                *(*0x20 + -0x30) = 0x47e4f4;\n                puVar4 = fcn.0040c6e0();\n                *puVar4 = *(*0x20 + 0x78);\n                *(*0x20 + 0x50) = puVar4;\n                *(*0x20 + 0x58) = 1;\n                *(*0x20 + 0x60) = 1;\n                return;\n            }\n            unaff_RBX = 0x4ca198;\n            *(*0x20 + -0x30) = 0x47e539;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar6 + 0x70) = in_RAX;\n        *(puVar6 + 0x78) = unaff_RBX;\n        *(puVar6 + -8) = 0x47e549;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 0x70);\n        unaff_RBX = *(puVar6 + 0x78);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1108
    },
    "00480e60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00480e60(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar1 = arg1 & 0x1f;\n            if (uVar1 == 0x19) {\n                if (unaff_RDI <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != unaff_RDI) {\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x480f05;\n                fcn.00432de0(0x19, arg1);\n            }\n            *(*0x20 + -0x10) = uVar1;\n            *(*0x20 + -0x28) = 0x480f16;\n            unaff_RBX = fcn.0040c6e0();\n            unaff_RBX[1] = 0x13;\n            *unaff_RBX = 0x4ab036;\n            arg1 = *(*0x20 + -0x10);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x28) = 0x480f45;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x480f5f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 608
    },
    "00441a00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.00441a00(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        iVar2 = *0x546068;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x546078 == 0) {\n                return 0;\n            }\n            if (*0x598388 != 0) {\n                if (*0x598388 == -1) {\n                    iVar1 = -*0x546078;\n                }\n                else {\n                    iVar1 = *0x546078 / *0x598388;\n                }\n                iVar3 = iVar1 + 1;\n                if (*0x546078 < iVar1 + 1) {\n                    iVar3 = *0x546078;\n                }\n                if ((unaff_EBX < 1) || (iVar3 <= unaff_EBX)) {\n                    unaff_EBX = iVar3;\n                }\n                if (0x80 < unaff_EBX) {\n                    unaff_EBX = 0x80;\n                }\n                *0x546078 = *0x546078 - unaff_EBX;\n                if ((*0x546068 != 0) && (*0x546068 = *(*0x546068 + 0xa0),  *0x546068 == 0)) {\n                    *0x546070 = 0;\n                }\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = in_RAX;\n                while( true ) {\n                    if (unaff_EBX + -1 < 1) break;\n                    *(*0x20 + -0x1c) = unaff_EBX + -1;\n                    if ((*0x546068 != 0) && (*0x546068 = *(*0x546068 + 0xa0),  *0x546068 == 0)) {\n                        *0x546070 = 0;\n                    }\n                    *(*0x20 + -0x40) = 0x441ac8;\n                    fcn.00442000(0);\n                    unaff_EBX = *(*0x20 + -0x1c);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x40) = 0x441b25;\n            in_RAX = fcn.00431c00();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x441b34;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 753
    },
    "0044bb00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0044bb00(void)\n\n{\n    int32_t *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*in_RAX == -1) {\n        return *(in_RAX + 2);\n    }\n    for (iVar2 = 0x532f00; iVar2 != 0; iVar2 = *(iVar2 + 0x230)) {\n        if (((*(iVar2 + 0x70) != 0) && (*(iVar2 + 0x68) <= in_RAX)) && (in_RAX < *(iVar2 + 0x70) + *(iVar2 + 0x68)))\n        goto code_r0x0044bb5c;\n    }\n    iVar2 = 0;\ncode_r0x0044bb5c:\n    uVar1 = fcn.0044b9e0(iVar2);\n    return uVar1;\n}\n",
        "token_count": 259
    },
    "0044bba0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044bba0(void)\n\n{\n    int32_t *in_RAX;\n    int64_t iVar1;\n    \n    if (*in_RAX == -1) {\n        return in_RAX[0xd];\n    }\n    for (iVar1 = 0x532f00; iVar1 != 0; iVar1 = *(iVar1 + 0x230)) {\n        if (((*(iVar1 + 0x70) != 0) && (*(iVar1 + 0x68) <= in_RAX)) && (in_RAX < *(iVar1 + 0x70) + *(iVar1 + 0x68)))\n        break;\n    }\n    return in_RAX[9];\n}\n",
        "token_count": 156
    },
    "0044c5e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0044c5e0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                return 0x4c9350;\n            }\n            arg1_00 = *(unaff_RBX + 0x28);\n            uVar3 = arg1 + *(in_RAX + 0x20);\n            if (uVar3 < arg1_00) {\n                uVar1 = *(*(unaff_RBX + 0x20) + uVar3 * 4);\n                if (uVar1 == 0xffffffff) {\n                    return 0x4c9350;\n                }\n                uVar3 = *(unaff_RBX + 0x40);\n                arg1_00 = *(unaff_RBX + 0x38);\n                if (uVar1 < uVar3) {\n                    *(*0x20 + -0x20) = uVar1 + arg1_00;\n                    *(*0x20 + -0x38) = 0x44c639;\n                    uVar2 = fcn.0044a280();\n                    *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                    *(*0x20 + -0x10) = uVar2;\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x44c68e;\n                fcn.0045e420(uVar3);\n            }\n            *(*0x20 + -0x38) = 0x44c698;\n            in_RAX = fcn.0045e420(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x44c6ac;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 709
    },
    "0044c6c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0044c6c0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (in_RAX != 0) {\n        uVar1 = fcn.0044be00(*(in_RAX + 0x14));\n        iVar2 = fcn.0044be00(*(in_RAX + 0x18));\n        if (((uVar1 != 0xffffffff) && (iVar2 != -1)) && (*(unaff_RBX + 0x40) != uVar1 && uVar1 <= *(unaff_RBX + 0x40)))\n        {\n            uVar3 = fcn.0044c5e0(uVar1);\n            return uVar3;\n        }\n        return 0x4c9350;\n    }\n    return 0x4c9350;\n}\n",
        "token_count": 269
    },
    "00455980": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.00455980(ulong param_1, int64_t param_2)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 0) || (unaff_EBX == 0xffffffff)) {\n                return 0;\n            }\n            for (iVar2 = 0x532f00; iVar2 != 0; iVar2 = *(iVar2 + 0x230)) {\n                if ((*(iVar2 + 0x128) < in_RAX || *(iVar2 + 0x128) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x130) && *(iVar2 + 0x130) != in_RAX)) goto code_r0x004559dc;\n            }\n            iVar2 = 0;\ncode_r0x004559dc:\n            *(*0x20 + 0x10) = unaff_EBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x38) = in_RAX;\n                *(*0x20 + -0x58) = 0x455a5c;\n                fcn.0040a520();\n                *(*0x20 + -0x58) = 0x455a73;\n                puVar1 = fcn.0040f160(*(*0x20 + 0x10));\n                uVar3 = *puVar1;\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0x58) = 0x455a8a;\n                fcn.0040a740();\n                if (*(*0x20 + -0x20) != 0) {\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x58) = 0x455a99;\n                fcn.00434ec0();\n                *(*0x20 + -0x58) = 0x455aaa;\n                fcn.004357c0();\n                *(*0x20 + -0x58) = 0x455ab6;\n                fcn.00435620();\n                *(*0x20 + -0x58) = 0x455ac7;\n                fcn.004357c0();\n                *(*0x20 + -0x58) = 0x455ad1;\n                fcn.00435620();\n                *(*0x20 + -0x58) = 0x455ae5;\n                fcn.004357c0();\n                *(*0x20 + -0x58) = 0x455aea;\n                fcn.00434f40();\n                iVar2 = 0x532f00;\n                while (iVar2 != 0) {\n                    *(*0x20 + -0x18) = iVar2;\n                    uVar3 = *(iVar2 + 0x128);\n                    *(*0x20 + -0x28) = uVar3;\n                    param_2 = *(iVar2 + 0x130);\n                    *(*0x20 + -0x30) = param_2;\n                    *(*0x20 + -0x58) = 0x455b1f;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x58) = 0x455b30;\n                    fcn.004357c0();\n                    *(*0x20 + -0x58) = 0x455b3a;\n                    fcn.00435620();\n                    *(*0x20 + -0x58) = 0x455b4b;\n                    fcn.004357c0();\n                    *(*0x20 + -0x58) = 0x455b55;\n                    fcn.00435620();\n                    *(*0x20 + -0x58) = 0x455b5a;\n                    fcn.00435120();\n                    *(*0x20 + -0x58) = 0x455b5f;\n                    fcn.00434f40();\n                    iVar2 = *(*(*0x20 + -0x18) + 0x230);\n                }\n                *(*0x20 + -0x58) = 0x455b85;\n                fcn.00433580();\n            }\n            else {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x58) = 0x455a05;\n                puVar1 = fcn.0040f160(unaff_EBX);\n                if (*puVar1 != 0) {\n                    return *puVar1;\n                }\n                param_2 = *(*(*0x20 + -0x10) + 0x128);\n                uVar3 = *(*(*0x20 + -0x10) + 0x130);\n                if (param_2 + *(*0x20 + 0x10) <= uVar3) {\n                    return param_2 + *(*0x20 + 0x10);\n                }\n            }\n            *(*0x20 + -0x28) = param_2;\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x58) = 0x455b94;\n            fcn.00434ec0();\n            *(*0x20 + -0x58) = 0x455ba5;\n            fcn.004357c0();\n            *(*0x20 + -0x58) = 0x455bb1;\n            fcn.00435620();\n            *(*0x20 + -0x58) = 0x455bc5;\n            fcn.004357c0();\n            *(*0x20 + -0x58) = 0x455bcf;\n            fcn.00435620();\n            *(*0x20 + -0x58) = 0x455be5;\n            fcn.004357c0();\n            *(*0x20 + -0x58) = 0x455bef;\n            fcn.00435620();\n            *(*0x20 + -0x58) = 0x455bf4;\n            fcn.00435120();\n            *(*0x20 + -0x58) = 0x455bf9;\n            fcn.00434f40();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x455c0a;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x455c19;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1661
    },
    "004682e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.004682e0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x28) = *0x5450d0;\n            *(*0x20 + -0x60) = 0x468319;\n            iVar1 = fcn.00467100();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x60) = 0x46834f;\n                uVar2 = fcn.0045ab20(iVar1);\n                if (((uVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x60) = 0x46838f;\n                    fcn.00409f60();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x60) = 0x4683c5;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x4683da;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 583
    },
    "00403260": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00403260(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            if (*(in_RAX + 0x18) != NULL) {\n                if ((*(in_RAX + 0x17) & 0x20) != 0) {\n                    return in_RAX & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x4032ac;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x4032ca;\n            fcn.00455540();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x4032e5;\n            fcn.00449580(0x1c);\n            *(*0x20 + -0x38) = 0x4032ea;\n            unaff_RBX = fcn.00409fe0();\n            *(*0x20 + -0x38) = 0x4032f9;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40330e;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 571
    },
    "00403340": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00403340(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            uVar2 = *(in_RAX + 8);\n            if (*(uVar2 + 0x18) != NULL) {\n                if ((*(uVar2 + 0x17) & 0x20) != 0) {\n                    return uVar2 & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(uVar2 + 0x18);\n                *(*0x20 + -0x38) = 0x40338f;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x4033ad;\n            fcn.00455540();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x4033c6;\n            fcn.00449580(0x1c);\n            *(*0x20 + -0x38) = 0x4033cb;\n            unaff_RBX = fcn.00409fe0();\n            *(*0x20 + -0x38) = 0x4033da;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x4033ef;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 583
    },
    "00403880": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00403880(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    uint32_t uStack32;\n    \n    if (in_RAX == 0) {\n        fcn.00433580();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0x100) = *(iVar2 + 0x100) + 1;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + 1;\n    **(iVar2 + 0x110) = 0;\n    fcn.00459760();\n    while( true ) {\n        LOCK();\n        if (*(iVar2 + 0x330) == 0) break;\n        fcn.0045bc80();\n    }\n    *(iVar2 + 0x330) = 1;\n    *(iVar2 + 0xe8) = 1;\n    fcn.0045db80();\n    *(iVar2 + 0xe8) = 0;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + -1;\n    uVar1 = *(iVar2 + 0x330);\n    *(iVar2 + 0x330) = 0;\n    fcn.004597a0(iVar2, uVar1);\n    return uStack32;\n}\n",
        "token_count": 363
    },
    "004053c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004053c0(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.004122c0(arg1);\n    fcn.0045eda0(*in_RAX);\n    return;\n}\n",
        "token_count": 108
    },
    "00405440": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405440(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.004122c0(*(unaff_RBX + 0x18));\n    fcn.0045eda0(*in_RAX);\n    return;\n}\n",
        "token_count": 124
    },
    "00409de0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00409de0(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = fcn.0040bd20(1, *in_RAX);\n    fcn.004112e0(unaff_RBX);\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "00409e60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00409e60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = fcn.0040bd20(0, *in_RAX, param_3, param_4, unaff_RBX);\n    fcn.0045eda0(*in_RAX);\n    return uVar1;\n}\n",
        "token_count": 162
    },
    "00418c80": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00418c80(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x38) = 0x418ca5;\n            fcn.00436ba0();\n            *(*0x20 + -0x38) = 0x418cb3;\n            fcn.0040a520();\n            *(*0x20 + -0x20) = *0x56a9e0;\n            *(*0x20 + -0x10) = *0x56a9d8;\n            *(*0x20 + -0x38) = 0x418cd9;\n            fcn.0040a740();\n            iVar2 = *(*0x20 + -0x20);\n            iVar3 = *(*0x20 + -0x10);\n            iVar1 = 0;\n            while( true ) {\n                if (iVar2 <= iVar1) {\n                    *0x545aa0 = 0;\n                    *0x545b40 = *0x598cf0;\n                    return;\n                }\n                if (0x3f < *(iVar3 + iVar1 * 8) >> 0x14) break;\n                *(*0x20 + -0x18) = iVar1;\n                *(*0x20 + -0x38) = 0x418d19;\n                fcn.0045eaa0();\n                iVar1 = *(*0x20 + -0x18) + 1;\n                iVar2 = *(*0x20 + -0x20);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x38) = 0x418d78;\n            fcn.0045e440(0x40);\n        }\n        *(puVar4 + -8) = 0x418d7e;\n        fcn.00460800();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 554
    },
    "0041af20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0041af20(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    iVar2 = *0x545b58;\n    iVar1 = *0x545b50;\n    if (*0x59837c == 0) {\n        fcn.0040a740();\n        return 1;\n    }\n    *(unaff_R14 + 0xa0) = 0;\n    iVar3 = unaff_R14;\n    if (*0x545b58 != 0) {\n        *(*0x545b58 + 0xa0) = unaff_R14;\n        iVar3 = *0x545b50;\n    }\n    *0x545b50 = iVar3;\n    if (*0x598d40 < 1) {\n        *0x545b58 = unaff_R14;\n        fcn.004360a0(0xb);\n        return 1;\n    }\n    *0x545b50 = iVar1;\n    *0x545b58 = iVar2;\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = 0;\n    }\n    fcn.0040a740();\n    return 0;\n}\n",
        "token_count": 340
    },
    "00423a20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00423a20(ulong param_1, ulong param_2, ulong param_3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00416060(0x4b2a40);\n    fcn.00416060(0);\n    fcn.00416060(0);\n    fcn.00416060(0);\n    fcn.00416060(0);\n    fcn.00416060(0);\n    *(in_RAX + 0x16a50) = 0;\n    for (iVar1 = 0; iVar1 < 0x88; iVar1 = iVar1 + 1) {\n        *(in_RAX + 0x10410 + iVar1 * 0xc0) = iVar1;\n    }\n    fcn.00426860(0x59ae58, in_RAX + 8, param_3);\n    return;\n}\n",
        "token_count": 264
    },
    "004257c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004257c0(void)\n\n{\n    uchar (**ppauVar1) [16];\n    uchar (**in_RAX) [16];\n    uchar (*unaff_RBX) [16];\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            ppauVar1 = *unaff_RBX[1];\n            if (in_RAX == ppauVar1) {\n                if (*in_RAX == unaff_RBX) {\n                    *in_RAX = **unaff_RBX;\n                }\n                else {\n                    **(*unaff_RBX + 8) = **unaff_RBX;\n                }\n                if (in_RAX[1] == unaff_RBX) {\n                    in_RAX[1] = *(*unaff_RBX + 8);\n                }\n                else {\n                    *(**unaff_RBX + 8) = *(*unaff_RBX + 8);\n                }\n                *unaff_RBX = in_XMM15;\n                *unaff_RBX[1] = 0;\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = ppauVar1;\n            *(*0x20 + -0x18) = *unaff_RBX[2];\n            *(*0x20 + -0x20) = *(*unaff_RBX + 8);\n            *(*0x20 + -0x38) = 0x425857;\n            fcn.00434ec0();\n            *(*0x20 + -0x38) = 0x425868;\n            fcn.004357c0();\n            *(*0x20 + -0x38) = 0x425872;\n            fcn.004354c0();\n            *(*0x20 + -0x38) = 0x425885;\n            fcn.004357c0();\n            *(*0x20 + -0x38) = 0x42588f;\n            fcn.00435780();\n            *(*0x20 + -0x38) = 0x4258a5;\n            fcn.004357c0();\n            *(*0x20 + -0x38) = 0x4258af;\n            fcn.00435780();\n            *(*0x20 + -0x38) = 0x4258c5;\n            fcn.004357c0();\n            *(*0x20 + -0x38) = 0x4258cf;\n            fcn.00435780();\n            *(*0x20 + -0x38) = 0x4258e5;\n            fcn.004357c0();\n            *(*0x20 + -0x38) = 0x4258ef;\n            fcn.00435780();\n            *(*0x20 + -0x38) = 0x4258f4;\n            fcn.00435120();\n            *(*0x20 + -0x38) = 0x4258f9;\n            fcn.00434f40();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x42590a;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42591a;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 936
    },
    "0042a5e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a5e0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00429cc0(arg1);\n    fcn.00429dc0(arg1);\n    return;\n}\n",
        "token_count": 101
    },
    "004305a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004305a0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    fcn.0040a520();\n    if (*(iVar1 + 0x310) != 0) {\n        fcn.00430880();\n        *(iVar1 + 0x310) = 0;\n    }\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 106
    },
    "00434d40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00434d40(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    uint64_t arg1_00;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t arg1_01;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x38) = 0x434d6c;\n            fcn.00434ec0();\n            if (*0x5983a4 != 0) {\ncode_r0x00434d89:\n                *(*0x20 + -0x38) = 0x434d8e;\n                fcn.00434f40();\n                return;\n            }\n            arg1_00 = *(*0x20 + 0x10);\n            iVar4 = *(*0x20 + 0x18);\n            iVar6 = *(*0x20 + 8);\n            uVar2 = 0;\n            while( true ) {\n                if (arg1_00 <= uVar2) goto code_r0x00434d89;\n                if (0x200 < *0x5984b0) goto code_r0x00434e78;\n                iVar1 = *0x5984b0 - 0x200;\n                if (arg1_00 < uVar2) break;\n                iVar3 = arg1_00 - uVar2;\n                arg1_01 = -iVar1;\n                if (-iVar3 != iVar1 && iVar3 <= -iVar1) {\n                    arg1_01 = iVar3;\n                }\n                unaff_RBX = iVar6 + (uVar2 - iVar4 >> 0x3f & uVar2);\n                if (unaff_RBX != (iVar1 >> 0x3f & *0x5984b0) + 0x598e20) {\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x18) = arg1_01;\n                    *(*0x20 + -0x38) = 0x434e4e;\n                    fcn.0045eda0(arg1_01);\n                    iVar4 = *(*0x20 + 0x18);\n                    iVar6 = *(*0x20 + 8);\n                    arg1_00 = *(*0x20 + 0x10);\n                    arg1_01 = *(*0x20 + -0x18);\n                    uVar2 = *(*0x20 + -0x10);\n                }\n                *0x5984b0 = (*0x5984b0 + arg1_01) % 0x200;\n                uVar2 = arg1_01 + uVar2;\n            }\n            *(*0x20 + -0x38) = 0x434e78;\n            fcn.0045e4e0(arg1_00);\ncode_r0x00434e78:\n            arg1 = 0x200;\n            *(*0x20 + -0x38) = 0x434e85;\n            in_RAX = fcn.0045e4e0(0x200);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x434e9a;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 992
    },
    "004381c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004381c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00443b80(0);\n    fcn.00437fa0();\n    return;\n}\n",
        "token_count": 94
    },
    "0043e360": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e360(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0045bc80();\n    return;\n}\n",
        "token_count": 83
    },
    "00441e00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.00441e00(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int32_t *piVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg1;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x546050 == NULL) {\n                return 0;\n            }\n            *(*0x20 + -0x10) = *0x546050;\n            piVar3 = *0x546050;\n            if (in_RAX == 0) {\n                *(*0x20 + -0x38) = 0x441e39;\n                fcn.0045fdc0();\n                unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                in_RAX = *(*0x20 + -0x30);\n                piVar3 = *(*0x20 + -0x10);\n            }\n            iVar2 = *piVar3;\n            uVar5 = iVar2 % 0x20;\n            if (-1 < uVar5) {\n                uVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n                arg1 = *0x545678;\n                if (uVar6 < *0x545678) {\n                    puVar1 = *0x545670 + uVar6 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 | 1 << (uVar5 & 0x1f) & -(uVar5 < 0x20);\n                    arg1 = *0x545638;\n                    iVar2 = *piVar3;\n                    uVar5 = iVar2 % 0x20;\n                    if (-1 < uVar5) {\n                        uVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n                        if (uVar6 < *0x545638) {\n                            *(*0x20 + -0x18) = in_RAX;\n                            puVar1 = *0x545630 + uVar6 * 4;\n                            LOCK();\n                            *puVar1 = *puVar1 & ~(1 << (uVar5 & 0x1f) & -(uVar5 < 0x20));\n                            *0x546050 = *(piVar3 + 2);\n                            LOCK();\n                            *0x546058 = *0x546058 + -1;\n                            *(*0x20 + -0x38) = 0x441f4e;\n                            fcn.004197e0(in_RAX);\n                            return *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x38) = 0x441f73;\n                        fcn.0045e420(*0x545638);\n                    }\n                    *(*0x20 + -0x38) = 0x441f78;\n                    fcn.00431ba0();\n                }\n                *(*0x20 + -0x38) = 0x441f85;\n                fcn.0045e420(arg1);\n            }\n            *(*0x20 + -0x38) = 0x441f8a;\n            in_RAX = fcn.00431ba0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x441f95;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 915
    },
    "00443740": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00443740(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        uVar3 = unaff_RBX;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RDI < 0) {\n                unaff_RDI = 0;\n            }\n            while( true ) {\n                if (unaff_RBX <= unaff_RDI) {\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                if (0x10 < unaff_RDI) {\n                    unaff_RDI = 0x10;\n                }\n                *(*0x20 + -0x10) = unaff_RDI;\n                *(*0x20 + -0x38) = 0x443797;\n                fcn.0045fdc0();\n                unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                uVar3 = *(*0x20 + -0x30);\n                arg1 = *(*0x20 + 0x10);\n                if (arg1 <= *(*0x20 + -0x18) - *(*0x20 + -0x10)) break;\n                *(*0x20 + -0x38) = 0x4437d2;\n                uVar1 = fcn.0045de40(*(*0x20 + -0x10));\n                unaff_RBX = *(*0x20 + 0x10);\n                arg1 = *(*0x20 + 8);\n                iVar2 = 0;\n                for (unaff_RDI = *(*0x20 + -0x18); (iVar2 < 8 && (unaff_RDI < unaff_RBX)); unaff_RDI = unaff_RDI + 1) {\n                    if (unaff_RBX <= unaff_RDI) {\n                        *(*0x20 + -0x38) = 0x443825;\n                        fcn.0045e420(unaff_RBX);\n                        goto code_r0x00443825;\n                    }\n                    *(arg1 + unaff_RDI) = uVar1;\n                    iVar2 = iVar2 + 1;\n                    uVar1 = uVar1 >> 8;\n                }\n            }\ncode_r0x00443825:\n            *(*0x20 + -0x38) = 0x44382d;\n            in_RAX = fcn.0045e420(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = uVar3;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x443847;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 876
    },
    "0044c400": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044c400(void)\n\n{\n    int32_t iVar1;\n    uint64_t arg1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX == 0) || (iVar1 = *(in_RAX + 4),  iVar1 == 0)) {\n                iVar3 = 0;\n                goto code_r0x0044c444;\n            }\n            arg1 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (iVar1 < arg1) {\n                iVar3 = unaff_RBX + iVar1;\ncode_r0x0044c444:\n                *(*0x20 + -0x20) = iVar3;\n                *(*0x20 + -0x38) = 0x44c451;\n                uVar2 = fcn.0044a280();\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar2;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44c47a;\n            in_RAX = fcn.0045e420(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44c48a;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 558
    },
    "0044c540": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044c540(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                iVar2 = 0;\n                goto code_r0x0044c57d;\n            }\n            arg1_00 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (arg1 < arg1_00) {\n                iVar2 = unaff_RBX + arg1;\ncode_r0x0044c57d:\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x38) = 0x44c58a;\n                uVar1 = fcn.0044a280();\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar1;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44c5b6;\n            in_RAX = fcn.0045e420(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x44c5ca;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 594
    },
    "0044e3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0044e3c0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    ulong in_RAX;\n    int64_t noname_1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    noname_1 = 0;\ncode_r0x0044e3f1:\n    if (arg1 <= noname_1) {\n        return;\n    }\n    puVar2 = *(unaff_RBX + noname_1 * 8);\ncode_r0x0044e4da:\n    iVar1 = *(puVar2 + 8);\n    switch(iVar1) {\n    case 0:\n    case 5:\n        fcn.0044f6e0();\n        goto code_r0x0044e4da;\n    case 1:\n        LOCK();\n        if (iVar1 == *(puVar2 + 8)) {\n            *(puVar2 + 8) = 9;\n            *puVar2 = 0;\n            fcn.0044d6e0(arg1, noname_1, in_RAX, 9);\n            LOCK();\n            if (*(puVar2 + 8) == 9) {\n                *(puVar2 + 8) = 1;\n            }\n            else {\n                fcn.0044f6e0();\n            }\n            goto code_r0x0044e3eb;\n        }\n        goto code_r0x0044e4da;\n    case 2:\n    case 4:\n    case 9:\n        fcn.0044f6e0();\n        goto code_r0x0044e4da;\n    case 3:\n        LOCK();\n        if (iVar1 == *(puVar2 + 8)) {\n            *(puVar2 + 8) = 5;\n            *puVar2 = 0;\n            goto code_r0x0044e3eb;\n        }\n        goto code_r0x0044e4da;\n    case 6:\n        fcn.0045bc80();\n        goto code_r0x0044e4da;\n    case 7:\n    case 8:\n        break;\n    default:\n        fcn.0044f6e0();\n        goto code_r0x0044e4da;\n    }\n    LOCK();\n    if (iVar1 == *(puVar2 + 8)) goto code_r0x0044e572;\n    goto code_r0x0044e4da;\ncode_r0x0044e572:\n    *(puVar2 + 8) = 9;\n    puVar2[1] = puVar2[7];\n    *puVar2 = 0;\n    fcn.0044d6e0(puVar2[7], noname_1, in_RAX, 9);\n    LOCK();\n    if (*(puVar2 + 8) == 9) {\n        *(puVar2 + 8) = 1;\n    }\n    else {\n        fcn.0044f6e0();\n    }\ncode_r0x0044e3eb:\n    noname_1 = noname_1 + 1;\n    goto code_r0x0044e3f1;\n}\n",
        "token_count": 753
    },
    "0044e900": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0044e900(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t noname_0;\n    int64_t unaff_RBX;\n    int64_t noname_1;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    for (noname_1 = 0; noname_1 < arg1; noname_1 = noname_1 + 1) {\n        noname_0 = *(unaff_RBX + noname_1 * 8);\n        fcn.0044d6e0(noname_0, noname_1, in_R8, in_R9);\n        LOCK();\n        piVar1 = noname_0 + 0x40;\n        if (*piVar1 == 9) {\n            *piVar1 = 1;\n        }\n        else {\n            fcn.0044f6e0();\n        }\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "00450f60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450f60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    fcn.0044f960(0);\n    return;\n}\n",
        "token_count": 116
    },
    "00453ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00453ba0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00453ca0(arg1);\n    return;\n}\n",
        "token_count": 88
    },
    "00453c00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00453c00(ulong arg1)\n\n{\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*(*(unaff_RDI + 0x30) + 0x2b0) != 0) {\n        fcn.00453ca0(0);\n        return;\n    }\n    fcn.00453ca0(arg1);\n    return;\n}\n",
        "token_count": 140
    },
    "00459ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459ea0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00443b80(1);\n    return;\n}\n",
        "token_count": 85
    },
    "00459f60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459f60(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00443b80(3);\n    return;\n}\n",
        "token_count": 88
    },
    "0045a9e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0045a9e0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [16];\n    int64_t iStackX24;\n    ulong uStackX32;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + *0x598520) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + *0x598520);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x30);\n    *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_GetProcAddress;\n    *(iVar2 + 0x2c8) = 2;\n    *(iVar2 + 0x2d0) = auStackX8;\n    fcn.00403880(iVar2 + 0x2c0);\n    iStackX24 = *(iVar2 + 0x2d8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043f100();\n    return;\n}\n",
        "token_count": 344
    },
    "0045ae20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ae20(ulong arg1, ulong arg2)\n\n{\n    fcn.00460320();\n    return;\n}\n",
        "token_count": 31
    },
    "0045f8e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0045f8e0(void)\n\n{\n    (*_sym.imp.kernel32.dll_GetStdHandle)();\n    (*_sym.imp.kernel32.dll_WriteFile)();\n    fcn.0045dda0();\n    return;\n}\n",
        "token_count": 50
    },
    "0045fcc0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fcc0(void)\n\n{\n    int32_t iStackX8;\n    uchar auStack48 [32];\n    int64_t iStack16;\n    uchar *puStack8;\n    \n    puStack8 = auStack48;\n    iStack16 = iStackX8;\n    (**0x544b88)(0xffffffffffffffff, 0);\n    return;\n}\n",
        "token_count": 83
    },
    "0045fda0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0045fda0(void)\n\n{\n    (*_sym.imp.kernel32.dll_SwitchToThread)();\n    return;\n}\n",
        "token_count": 30
    },
    "0045fe20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0045fe20(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = (*_sym.imp.kernel32.dll_TlsAlloc)();\n    if (0x3f < uVar1) {\n        *(*0x20 + -8) = 0x45fe4c;\n        fcn.0045dda0();\n    }\n    *0x598520 = uVar1 * 8 + 0x1480;\n    return;\n}\n",
        "token_count": 103
    },
    "00460320": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460320(void)\n\n{\n    ulong uStackX24;\n    \n    fcn.00411380(uStackX24);\n    return;\n}\n",
        "token_count": 35
    },
    "00467320": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00467320(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack24;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00402740(arg1, in_RDX);\n    if (iStack24 != -1) {\n        return 0;\n    }\n    uVar1 = fcn.004455c0(unaff_RBX);\n    return uVar1;\n}\n",
        "token_count": 155
    },
    "0046f5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuchar fcn.0046f5c0(void)\n\n{\n    uchar uVar1;\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    uchar *puStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    puStack16 = NULL;\n    LOCK();\n    if (*0x598578 == 0) {\n        *0x598578 = 1;\n    }\n    else {\n        fcn.00464ca0();\n    }\n    uVar1 = *0x598580;\n    auStack32 = CONCAT88(0x598578, 0x46f6a0);\n    puStack16 = auStack32;\n    (*0x46f6a0)();\n    return uVar1;\n}\n",
        "token_count": 215
    },
    "00472880": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00472880(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    char acStack33 [25];\n    \n    uVar3 = 0;\n    while (unaff_RBX != 0) {\n        if (0x17 < uVar3) goto code_r0x004729a8;\n        acStack33[uVar3 + 1] = unaff_RBX + (unaff_RBX / 10) * -10 + '0';\n        uVar3 = uVar3 + 1;\n        unaff_RBX = unaff_RBX / 10;\n    }\n    *(in_RAX + 800) = 0;\n    while (uVar4 = uVar3 - 1,  -1 < uVar4) {\n        if (0x17 < uVar4) goto code_r0x0047299b;\n        if (799 < *(in_RAX + 800)) goto code_r0x0047298e;\n        *(in_RAX + *(in_RAX + 800)) = acStack33[uVar3];\n        *(in_RAX + 800) = *(in_RAX + 800) + 1;\n        uVar3 = uVar4;\n    }\n    *(in_RAX + 0x328) = *(in_RAX + 800);\n    while (iVar1 = *(in_RAX + 800),  0 < iVar1) {\n        if (799 < iVar1 - 1U) {\n            fcn.0045e420(800);\ncode_r0x0047298e:\n            fcn.0045e420(800);\ncode_r0x0047299b:\n            fcn.0045e420(0x18);\ncode_r0x004729a8:\n            fcn.0045e420(0x18);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if (*(iVar1 + -1 + in_RAX) != '0') break;\n        *(in_RAX + 800) = iVar1 - 1U;\n    }\n    if (iVar1 == 0) {\n        *(in_RAX + 0x328) = 0;\n    }\n    return;\n}\n",
        "token_count": 524
    },
    "0047dfe0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0047dfe0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint8_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = *(in_RAX + 0x17) & 0x1f;\n            if (uVar2 < 0x13) {\n                if (uVar2 == 0x11) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4cb460;\n                    }\n                    return uVar1;\n                }\n                if (uVar2 == 0x12) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4cb460;\n                    }\n                    return uVar1;\n                }\n            }\n            else {\n                if (uVar2 == 0x15) {\n                    if (*(in_RAX + 0x38) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4cb460;\n                    }\n                    return uVar1;\n                }\n                if (uVar2 == 0x16) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4cb460;\n                    }\n                    return uVar1;\n                }\n                if (uVar2 == 0x17) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4cb460;\n                    }\n                    return uVar1;\n                }\n            }\n            *(*0x20 + -0x38) = 0x47e0e5;\n            fcn.0047de00();\n            *(*0x20 + -0x38) = 0x47e0fe;\n            fcn.00449580(0x1e);\n            *(*0x20 + -0x38) = 0x47e105;\n            fcn.00409fe0();\n            *(*0x20 + -0x38) = 0x47e114;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x47e11f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 717
    },
    "0047e280": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0047e280(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x17) & 0x1f) == 0x11) {\n                return *(in_RAX + 0x40);\n            }\n            *(*0x20 + -0x38) = 0x47e2b9;\n            fcn.0047de00();\n            *(*0x20 + -0x38) = 0x47e2d2;\n            fcn.00449580(0x1f);\n            *(*0x20 + -0x38) = 0x47e2d7;\n            fcn.00409fe0();\n            *(*0x20 + -0x38) = 0x47e2e6;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x47e2f1;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 382
    },
    "0047f760": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t fcn.0047f760(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    code *pcVar2;\n    ulong *unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            pcVar2 = arg1 & 0x1f;\n            if (pcVar2 == 0x11) {\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x18) = in_RAX;\n                *(*0x20 + -0x38) = 0x47f7e5;\n                iVar1 = fcn.0047dfe0();\n                pcVar2 = *(iVar1 + 0x98);\n                *(*0x20 + -0x38) = 0x47f7f1;\n                iVar1 = (*pcVar2)();\n                if (iVar1 == 8) {\n                    if ((*(*0x20 + -0x20) >> 8 & 1) != 0) {\n                        pcVar2 = *(*(*0x20 + -0x18) + 0x40);\n                        if (-1 < pcVar2) {\n                            iVar1 = *(*0x20 + -0x10);\n                            if (pcVar2 <= -iVar1) {\n                                return iVar1;\n                            }\n                            if (iVar1 != 0) {\n                                *(*0x20 + -0x38) = 0x47f83f;\n                                fcn.00457560();\n                            }\n                            *(*0x20 + -0x38) = 0x47f845;\n                            fcn.004575a0();\n                        }\n                        *(*0x20 + -0x38) = 0x47f84a;\n                        fcn.00457560();\n                    }\n                    *(*0x20 + -0x38) = 0x47f85d;\n                    fcn.00432de0();\n                }\n                *(*0x20 + -0x38) = 0x47f870;\n                fcn.00432de0();\ncode_r0x0047f870:\n                *(*0x20 + -0x38) = 0x47f885;\n                fcn.00432de0();\n            }\n            else if (pcVar2 == 0x17) {\n                *(*0x20 + -0x38) = 0x47f7a5;\n                iVar1 = fcn.0047dfe0();\n                pcVar2 = *(iVar1 + 0x98);\n                *(*0x20 + -0x38) = 0x47f7b1;\n                iVar1 = (*pcVar2)();\n                if (iVar1 == 8) {\n                    return **(*0x20 + -0x10);\n                }\n                goto code_r0x0047f870;\n            }\n            *(*0x20 + -0x20) = pcVar2;\n            *(*0x20 + -0x38) = 0x47f896;\n            unaff_RBX = fcn.0040c6e0();\n            unaff_RBX[1] = 0x13;\n            *unaff_RBX = 0x4ab023;\n            arg1 = *(*0x20 + -0x20);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x38) = 0x47f8c5;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x47f8da;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1050
    },
    "004858c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004858c0(ulong arg1)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00485680(arg1);\n    fcn.00484760(unaff_RBX);\n    return;\n}\n",
        "token_count": 106
    },
    "004878e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004878e0(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t unaff_R14;\n    \n    while (iVar1 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if (iVar1 < 0x59) {\n        if (iVar1 < 0x47) {\n            if (iVar1 == 0x45) {\ncode_r0x00487945:\n                fcn.004861e0(arg1);\n                return;\n            }\n            if (iVar1 == 0x46) {\n                fcn.004861e0(0x66);\n                return;\n            }\n        }\n        else if ((iVar1 == 0x47) || (iVar1 == 0x58)) goto code_r0x0048796a;\ncode_r0x0048797e:\n        fcn.00487080();\n    }\n    else {\n        if (iVar1 < 0x67) {\n            if (iVar1 != 0x62) {\n                if (100 < iVar1) goto code_r0x00487945;\n                goto code_r0x0048797e;\n            }\n        }\n        else if (iVar1 != 0x67) {\n            if (iVar1 == 0x76) {\n                fcn.004861e0(0x67);\n                return;\n            }\n            if (iVar1 != 0x78) goto code_r0x0048797e;\n        }\ncode_r0x0048796a:\n        fcn.004861e0(arg1);\n    }\n    return;\n}\n",
        "token_count": 394
    },
    "0048da60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0048da60(ulong noname_0, ulong arg2)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    code *arg1;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (in_RAX != 0) {\n        (**(in_RAX + 0x18))();\n        if ((unaff_RBX == 0x25) && (cVar1 = fcn.004025e0(0x25, arg2),  cVar1 != '\\0')) {\n            return;\n        }\n        arg1 = *(in_RAX + 0x18);\n        (*arg1)();\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00435120();\n        fcn.00434f40();\n        fcn.004723a0(arg1, arg2, in_R8);\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "00402d20": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.00402d20(ulong arg1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x14) & 8) != 0) {\n                iVar4 = *in_RAX;\n                if (iVar4 == 4) {\n                    *(*0x20 + -0x70) = 0x402e72;\n                    uVar3 = fcn.0045de80();\n                    return uVar3;\n                }\n                if (iVar4 == 8) {\n                    *(*0x20 + -0x70) = 0x402e45;\n                    uVar3 = fcn.0045dec0();\n                    return uVar3;\n                }\n                *(*0x20 + -0x70) = 0x402e5d;\n                uVar3 = fcn.0045de40(iVar4);\n                return uVar3;\n            }\n            uVar1 = *(in_RAX + 0x17);\n            *(*0x20 + 0x10) = unaff_RBX;\n            switch(uVar1 & 0x1f) {\n            case 0xd:\n                *(*0x20 + -0x70) = 0x402d78;\n                uVar3 = fcn.00402820();\n                return uVar3;\n            case 0xe:\n                *(*0x20 + -0x70) = 0x402d8d;\n                uVar3 = fcn.00402920();\n                return uVar3;\n            case 0xf:\n                *(*0x20 + -0x70) = 0x402da5;\n                uVar3 = fcn.00402a20();\n                return uVar3;\n            case 0x10:\n                *(*0x20 + -0x70) = 0x402dba;\n                uVar3 = fcn.00402a80();\n                return uVar3;\n            case 0x11:\n                *(*0x20 + 8) = in_RAX;\n                uVar5 = 0;\n                while (uVar5 <= in_RAX[8] && in_RAX[8] != uVar5) {\n                    *(*0x20 + -0x40) = uVar5;\n                    *(*0x20 + -0x70) = 0x402f25;\n                    arg1 = fcn.00402d20(arg1);\n                    in_RAX = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0x40) + 1;\n                }\n                return arg1;\n            default:\n                *(*0x20 + -0x70) = 0x402f58;\n                fcn.00455540();\n                arg1 = 0x18;\n                *(*0x20 + -0x70) = 0x402f71;\n                fcn.00449580(0x18);\n                *(*0x20 + -0x70) = 0x402f76;\n                unaff_RBX = fcn.00409fe0();\n                *(*0x20 + -0x70) = 0x402f85;\n                in_RAX = fcn.00432de0();\n                break;\n            case 0x14:\n                if (in_RAX[8] == 0) {\n                    *(*0x20 + -0x70) = 0x402de5;\n                    uVar3 = fcn.00402c00();\n                    return uVar3;\n                }\n                *(*0x20 + -0x70) = 0x402dfa;\n                uVar3 = fcn.00402ae0();\n                return uVar3;\n            case 0x18:\n                *(*0x20 + -0x70) = 0x402e0f;\n                uVar3 = fcn.0045de60();\n                return uVar3;\n            case 0x19:\n                iVar4 = in_RAX[7];\n                iVar7 = in_RAX[8];\n                *(*0x20 + -0x20) = iVar7;\n                iVar8 = 0;\n                while (iVar8 < iVar7) {\n                    *(*0x20 + -0x28) = iVar8;\n                    *(*0x20 + -0x30) = arg1;\n                    *(*0x20 + -0x10) = iVar4;\n                    uVar3 = *(iVar4 + 8);\n                    *(*0x20 + -0x18) = uVar3;\n                    *(*0x20 + -0x38) = *(iVar4 + 0x10);\n                    *(*0x20 + -0x70) = 0x402ece;\n                    cVar2 = fcn.004561c0(uVar3, iVar4, in_R8);\n                    if (cVar2 == '\\0') {\n                        *(*0x20 + -0x70) = 0x402ef6;\n                        arg1 = fcn.00402d20(*(*0x20 + -0x30));\n                    }\n                    else {\n                        arg1 = *(*0x20 + -0x30);\n                    }\n                    iVar4 = *(*0x20 + -0x10) + 0x18;\n                    iVar7 = *(*0x20 + -0x20);\n                    iVar8 = *(*0x20 + -0x28) + 1;\n                }\n                return arg1;\n            }\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x402f9a;\n        fcn.0045bdc0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1488
    },
    "004047a0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.004047a0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.00460800();\n        iStackX8 = in_RAX;\n    }\n    uVar9 = *(in_RAX + 8);\n    if (uVar9 == 0) {\n        return;\n    }\n    if (uVar9 <= arg1) {\n        return;\n    }\n    if (uVar9 - arg1 < unaff_RDI) {\n        unaff_RDI = uVar9 - arg1;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) != 0) {\n        uVar7 = *(in_RAX + 0x17) & 0x1f;\n        uVar9 = uVar7;\n        cVar6 = uVar7;\n        if (cVar6 == '\\x11') {\n            iStackX8 = in_RAX;\n            for (uVar9 = 0; uVar9 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != uVar9; uVar9 = uVar9 + 1) {\n                if (arg1 <= **(in_RAX + 0x30) && **(in_RAX + 0x30) != arg1) {\n                    fcn.004047a0(arg1);\n                    in_RAX = iStackX8;\n                }\n                uVar4 = **(in_RAX + 0x30);\n                uVar5 = arg1;\n                if (uVar4 < arg1) {\n                    uVar5 = uVar4;\n                }\n                unaff_RSI = uVar4 - uVar5;\n                arg1 = arg1 - uVar5;\n                if (unaff_RDI <= unaff_RSI) {\n                    return;\n                }\ncode_r0x004048ef:\n                unaff_RDI = unaff_RDI - unaff_RSI;\n            }\n        }\n        else {\n            if (cVar6 != '\\x19') {\n                in_RAX = fcn.00433580();\n                arg1 = in_R8;\n                goto code_r0x004048ef;\n            }\n            iVar8 = *(in_RAX + 0x38);\n            iVar1 = *(in_RAX + 0x40);\n            for (iVar3 = 0; iVar3 < iVar1; iVar3 = iVar3 + 1) {\n                puVar2 = *(iVar8 + 8);\n                if (arg1 <= *puVar2 && *puVar2 != arg1) {\n                    fcn.004047a0(arg1);\n                }\n                uVar9 = *puVar2;\n                uVar4 = arg1;\n                if (uVar9 < arg1) {\n                    uVar4 = uVar9;\n                }\n                arg1 = arg1 - uVar4;\n                if (unaff_RDI <= uVar9 - uVar4) {\n                    return;\n                }\n                iVar8 = iVar8 + 0x18;\n                unaff_RDI = unaff_RDI - (uVar9 - uVar4);\n            }\n        }\n        return;\n    }\n    fcn.004046c0(arg1);\n    return;\n}\n",
        "token_count": 856
    },
    "0040c8e0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040c8e0(void)\n\n{\n    code *pcVar1;\n    uchar auVar2 [16];\n    double dVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    double dVar5;\n    \n    if (in_RAX < 0x7000001) {\n        if (in_RAX == 0) {\n            return 0;\n        }\n    }\n    else {\n        in_RAX = 0x7000000;\n    }\n    uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar2 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n    dVar3 = (((SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) << 0x1a) >> 0x20) + 1;\n    uVar4 = SUB124(ZEXT812(dVar3) >> 0x20, 0) >> 0xf & 0x1f;\n    dVar5 = *(uVar4 * 8 + 0x531420);\n    if (uVar4 + 1 < 0x21) {\n        dVar5 = (((dVar3 >> 0x34 & 0x7ff) - 0x3ff) + dVar5 +\n                *0x4c9ef0 * (dVar3 >> 0x1b & 0xfffff) * (*(uVar4 * 8 + 0x531428) - dVar5)) - *0x4c9f58;\n        if (0.0 < dVar5) {\n            dVar5 = 0.0;\n        }\n        return dVar5 * in_RAX * *0x4c9fa8 + 1;\n    }\n    fcn.0045e440(0x21);\n    pcVar1 = swi(3);\n    uVar4 = (*pcVar1)();\n    return uVar4;\n}\n",
        "token_count": 509
    },
    "0044d0a0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044d0a0(int64_t arg1)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    int64_t *in_RAX;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *unaff_RBX;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    bool bVar14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar7 = (*(unaff_RBX + 0x17) & 0x1f) - 1;\n            *(*0x20 + 8) = in_RAX;\n            switch(iVar7) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 0xb:\n            case 0x15:\n            case 0x19:\n                uVar1 = *unaff_RBX;\n                iVar7 = in_RAX[6];\n                bVar14 = SBORROW8(*0x52d370, iVar7);\n                iVar6 = *0x52d370 - iVar7;\n                bVar13 = *0x52d370 == iVar7;\n                if (iVar7 < *0x52d370) {\n                    *(*0x20 + -0x30) = in_XMM15;\n                    *(*0x20 + -0x28) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x30) = 2;\n                    *(*0x20 + -0x28) = in_RAX[3] + arg1;\n                    *(*0x20 + -0x18) = in_RAX[6];\n                    *(*0x20 + -0x10) = uVar1;\n                    uVar9 = in_RAX[1] + 1;\n                    iVar8 = *in_RAX;\n                    uVar11 = in_RAX[2];\n                    iVar6 = iVar8;\n                    iVar12 = *0x52d370;\n                    if (uVar11 < uVar9) {\n                        *(*0x20 + -0x60) = iVar7;\n                        *(*0x20 + -0x68) = *0x52d370;\n                        *(*0x20 + -0xb8) = 0x44d2b9;\n                        iVar6 = fcn.00445800(uVar11);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[2] = uVar11;\n                        if (*0x5985b0 == 0) {\n                            *in_RAX = iVar6;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x44d2d8;\n                            iVar6 = fcn.0045df80(uVar11, iVar8, iVar7, iVar12);\n                        }\n                        iVar7 = *(*0x20 + -0x60);\n                        iVar12 = *(*0x20 + -0x68);\n                    }\n                    in_RAX[1] = uVar9;\n                    *(iVar6 + -0x28 + uVar9 * 0x28) = *(*0x20 + -0x30);\n                    iVar6 = iVar6 + uVar9 * 0x28;\n                    uVar2 = *(*0x20 + -0x24);\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar4 = *(*0x20 + -0x1c);\n                    *(iVar6 + -0x20) = *(*0x20 + -0x28);\n                    *(iVar6 + -0x1c) = uVar2;\n                    *(iVar6 + -0x18) = uVar3;\n                    *(iVar6 + -0x14) = uVar4;\n                    uVar2 = *(*0x20 + -0x14);\n                    uVar3 = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0xc);\n                    *(iVar6 + -0x10) = *(*0x20 + -0x18);\n                    *(iVar6 + -0xc) = uVar2;\n                    *(iVar6 + -8) = uVar3;\n                    *(iVar6 + -4) = uVar4;\n                    in_RAX[6] = in_RAX[6] + 1;\n                    bVar14 = SBORROW8(iVar12, iVar7);\n                    iVar6 = iVar12 - iVar7;\n                    bVar13 = iVar12 == iVar7;\n                }\n                return in_RAX & 0xffffffffffffff00 | (!bVar13 && bVar14 == iVar6 < 0);\n            case 5:\n            case 10:\n                uVar1 = *unaff_RBX;\n                iVar7 = in_RAX[6];\n                bVar14 = SBORROW8(*0x52d370, iVar7);\n                iVar6 = *0x52d370 - iVar7;\n                bVar13 = *0x52d370 == iVar7;\n                if (iVar7 < *0x52d370) {\n                    *(*0x20 + -0x58) = in_XMM15;\n                    *(*0x20 + -0x50) = in_XMM15;\n                    *(*0x20 + -0x40) = in_XMM15;\n                    *(*0x20 + -0x58) = 2;\n                    *(*0x20 + -0x50) = in_RAX[3] + arg1;\n                    *(*0x20 + -0x40) = in_RAX[6];\n                    *(*0x20 + -0x38) = uVar1;\n                    uVar9 = in_RAX[1] + 1;\n                    iVar8 = *in_RAX;\n                    uVar11 = in_RAX[2];\n                    iVar6 = iVar8;\n                    iVar12 = *0x52d370;\n                    if (uVar11 < uVar9) {\n                        *(*0x20 + -0x60) = iVar7;\n                        *(*0x20 + -0x68) = *0x52d370;\n                        *(*0x20 + -0xb8) = 0x44d16f;\n                        iVar6 = fcn.00445800(uVar11);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[2] = uVar11;\n                        if (*0x5985b0 == 0) {\n                            *in_RAX = iVar6;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x44d18e;\n                            iVar6 = fcn.0045df80(uVar11, iVar8, iVar7, iVar12);\n                        }\n                        iVar7 = *(*0x20 + -0x60);\n                        iVar12 = *(*0x20 + -0x68);\n                    }\n                    in_RAX[1] = uVar9;\n                    *(iVar6 + -0x28 + uVar9 * 0x28) = *(*0x20 + -0x58);\n                    iVar6 = iVar6 + uVar9 * 0x28;\n                    uVar2 = *(*0x20 + -0x4c);\n                    uVar3 = *(*0x20 + -0x48);\n                    uVar4 = *(*0x20 + -0x44);\n                    *(iVar6 + -0x20) = *(*0x20 + -0x50);\n                    *(iVar6 + -0x1c) = uVar2;\n                    *(iVar6 + -0x18) = uVar3;\n                    *(iVar6 + -0x14) = uVar4;\n                    uVar2 = *(*0x20 + -0x3c);\n                    uVar3 = *(*0x20 + -0x38);\n                    uVar4 = *(*0x20 + -0x34);\n                    *(iVar6 + -0x10) = *(*0x20 + -0x40);\n                    *(iVar6 + -0xc) = uVar2;\n                    *(iVar6 + -8) = uVar3;\n                    *(iVar6 + -4) = uVar4;\n                    in_RAX[6] = in_RAX[6] + 1;\n                    bVar14 = SBORROW8(iVar12, iVar7);\n                    iVar6 = iVar12 - iVar7;\n                    bVar13 = iVar12 == iVar7;\n                }\n                return in_RAX & 0xffffffffffffff00 | (!bVar13 && bVar14 == iVar6 < 0);\n            case 0x10:\n                if (unaff_RBX[8] == 1) {\n                    *(*0x20 + -0xb8) = 0x44d1f7;\n                    uVar11 = fcn.0044d0a0(arg1);\n                    return uVar11;\n                }\n                break;\n            case 0x18:\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar7 = unaff_RBX[8];\n                *(*0x20 + -0x60) = iVar7;\n                uVar11 = 0;\n                while( true ) {\n                    if (iVar7 <= uVar11) {\n                        return 1;\n                    }\n                    iVar6 = unaff_RBX[7];\n                    uVar9 = unaff_RBX[8];\n                    if (uVar9 <= uVar11) break;\n                    *(*0x20 + -0x70) = uVar11;\n                    iVar7 = *(iVar6 + 0x10 + uVar11 * 0x18);\n                    *(*0x20 + -0xb8) = 0x44d390;\n                    cVar5 = fcn.0044d0a0(iVar7 + arg1);\n                    if (cVar5 == '\\0') {\n                        return 0;\n                    }\n                    uVar11 = *(*0x20 + -0x70) + 1;\n                    iVar7 = *(*0x20 + -0x60);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    arg1 = *(*0x20 + 0x18);\n                }\n                *(*0x20 + -0xb8) = 0x44d3c6;\n                fcn.0045e420(uVar9);\n            }\n            *(*0x20 + -0xb8) = 0x44d3ce;\n            fcn.00455540();\n            arg1 = 0x16;\n            *(*0x20 + -0xb8) = 0x44d3f4;\n            fcn.00449620(0x16, iVar7, 0x4b141f, 0x37);\n            *(*0x20 + -0xb8) = 0x44d3f9;\n            unaff_RBX = fcn.00409fe0();\n            *(*0x20 + -0xb8) = 0x44d408;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + -8) = 0x44d41d;\n        fcn.0045bdc0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2729
    },
    "004555e0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.004555e0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((*(in_RAX + 0x14) & 1) == 0) {\n        iVar3 = 0;\n    }\n    else {\n        switch(*(in_RAX + 0x17) & 0x1f) {\n        case 0x11:\n            iVar3 = in_RAX + 0x48;\n            break;\n        case 0x12:\n            iVar3 = in_RAX + 0x40;\n            break;\n        case 0x13:\n            iVar3 = in_RAX + 0x38;\n            break;\n        case 0x14:\n            iVar3 = in_RAX + 0x50;\n            break;\n        case 0x15:\n            iVar3 = in_RAX + 0x58;\n            break;\n        case 0x16:\n            iVar3 = in_RAX + 0x38;\n            break;\n        case 0x17:\n            iVar3 = in_RAX + 0x38;\n            break;\n        default:\n            iVar3 = in_RAX + 0x30;\n            break;\n        case 0x19:\n            iVar3 = in_RAX + 0x50;\n        }\n    }\n    if (iVar3 != 0) {\n        fcn.004556e0();\n        uVar1 = fcn.00455e40();\n        return uVar1;\n    }\n    uVar2 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar2 == 0x14) {\n        uVar1 = fcn.00455e40();\n        return uVar1;\n    }\n    if (uVar2 == 0x19) {\n        uVar1 = fcn.00455e40();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 493
    },
    "0047bf80": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.0047bf80(int64_t arg1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    bool bVar4;\n    char cVar5;\n    int64_t *in_RAX;\n    ulong uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint64_t *unaff_RBX;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uint64_t uVar13;\n    uint64_t arg4;\n    uint *puVar14;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x88 && *0x20 + -0x88 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x108;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar13 = *(unaff_RBX + 0x17) & 0x1f;\n            uVar9 = uVar13 - 1;\n            if (uVar9 < 0x1a) {\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 8) = in_RAX;\n                switch(uVar9) {\n                default:\n                    uVar13 = *unaff_RBX;\n                    *(*0x20 + -0x110) = 0x47c012;\n                    uVar6 = fcn.0047c620(uVar13, uVar13, uVar9);\n                    return uVar6;\n                case 5:\n                case 10:\n                    *(*0x20 + -0x110) = 0x47bfed;\n                    uVar6 = fcn.0047c620(8, 0x4caee0, uVar9);\n                    return uVar6;\n                case 0xc:\n                case 0xd:\n                    uVar9 = *unaff_RBX;\n                    if ((*0x52d340 < in_RAX[8] + 1) || (*0x52d348 < uVar9)) {\n                        uVar6 = 0;\n                    }\n                    else {\n                        *(*0x20 + -0xc0) = uVar9;\n                        bVar4 = false;\n                        while (!bVar4) {\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            *(*0x20 + -0x38) = 4;\n                            *(*0x20 + -0x30) = arg1;\n                            *(*0x20 + -0x28) = uVar9;\n                            *(*0x20 + -0x10) = in_RAX[8];\n                            uVar11 = in_RAX[1] + 1;\n                            iVar10 = *in_RAX;\n                            uVar13 = in_RAX[2];\n                            iVar8 = iVar10;\n                            if (uVar13 < uVar11) {\n                                *(*0x20 + -0x110) = 0x47c565;\n                                arg4 = uVar13;\n                                iVar8 = fcn.00445800(uVar13);\n                                in_RAX = *(*0x20 + 8);\n                                in_RAX[2] = uVar13;\n                                if (*0x5985b0 == 0) {\n                                    *in_RAX = iVar8;\n                                }\n                                else {\n                                    *(*0x20 + -0x110) = 0x47c585;\n                                    iVar8 = fcn.0045df80(uVar13, uVar9, iVar10, arg4);\n                                }\n                                arg1 = *(*0x20 + 0x18);\n                                uVar9 = *(*0x20 + -0xc0);\n                            }\n                            in_RAX[1] = uVar11;\n                            puVar14 = uVar11 * 0x30 + -0x30 + iVar8;\n                            uVar1 = *(*0x20 + -0x34);\n                            uVar2 = *(*0x20 + -0x30);\n                            uVar3 = *(*0x20 + -0x2c);\n                            *puVar14 = *(*0x20 + -0x38);\n                            puVar14[1] = uVar1;\n                            puVar14[2] = uVar2;\n                            puVar14[3] = uVar3;\n                            puVar14 = iVar8 + uVar11 * 0x30 + -0x20;\n                            uVar1 = *(*0x20 + -0x24);\n                            uVar2 = *(*0x20 + -0x20);\n                            uVar3 = *(*0x20 + -0x1c);\n                            *puVar14 = *(*0x20 + -0x28);\n                            puVar14[1] = uVar1;\n                            puVar14[2] = uVar2;\n                            puVar14[3] = uVar3;\n                            uVar1 = *(*0x20 + -0x14);\n                            uVar2 = *(*0x20 + -0x10);\n                            uVar3 = *(*0x20 + -0xc);\n                            puVar14[4] = *(*0x20 + -0x18);\n                            puVar14[5] = uVar1;\n                            puVar14[6] = uVar2;\n                            puVar14[7] = uVar3;\n                            in_RAX[8] = in_RAX[8] + 1;\n                            bVar4 = true;\n                        }\n                        uVar6 = 1;\n                    }\n                    return uVar6;\n                case 0xe:\n                    if ((*0x52d340 < in_RAX[8] + 2) || (*0x52d348 < 4)) {\n                        uVar6 = 0;\n                    }\n                    else {\n                        for (iVar10 = 0; iVar10 < 2; iVar10 = iVar10 + 1) {\n                            *(*0x20 + -0x68) = in_XMM15;\n                            *(*0x20 + -0x58) = in_XMM15;\n                            *(*0x20 + -0x48) = in_XMM15;\n                            *(*0x20 + -0x68) = 4;\n                            *(*0x20 + -0x60) = arg1 + iVar10 * 4;\n                            *(*0x20 + -0x58) = 4;\n                            *(*0x20 + -0x40) = in_RAX[8];\n                            uVar13 = in_RAX[1] + 1;\n                            iVar8 = *in_RAX;\n                            uVar9 = in_RAX[2];\n                            iVar7 = iVar8;\n                            if (uVar9 < uVar13) {\n                                *(*0x20 + -0xb0) = iVar10;\n                                *(*0x20 + -0x110) = 0x47c448;\n                                uVar11 = uVar9;\n                                iVar7 = fcn.00445800(uVar9);\n                                in_RAX = *(*0x20 + 8);\n                                in_RAX[2] = uVar9;\n                                if (*0x5985b0 == 0) {\n                                    *in_RAX = iVar7;\n                                }\n                                else {\n                                    *(*0x20 + -0x110) = 0x47c467;\n                                    iVar7 = fcn.0045df80(uVar9, iVar10, iVar8, uVar11);\n                                }\n                                arg1 = *(*0x20 + 0x18);\n                                iVar10 = *(*0x20 + -0xb0);\n                            }\n                            in_RAX[1] = uVar13;\n                            puVar14 = uVar13 * 0x30 + -0x30 + iVar7;\n                            uVar1 = *(*0x20 + -100);\n                            uVar2 = *(*0x20 + -0x60);\n                            uVar3 = *(*0x20 + -0x5c);\n                            *puVar14 = *(*0x20 + -0x68);\n                            puVar14[1] = uVar1;\n                            puVar14[2] = uVar2;\n                            puVar14[3] = uVar3;\n                            puVar14 = iVar7 + uVar13 * 0x30 + -0x20;\n                            uVar1 = *(*0x20 + -0x54);\n                            uVar2 = *(*0x20 + -0x50);\n                            uVar3 = *(*0x20 + -0x4c);\n                            *puVar14 = *(*0x20 + -0x58);\n                            puVar14[1] = uVar1;\n                            puVar14[2] = uVar2;\n                            puVar14[3] = uVar3;\n                            uVar1 = *(*0x20 + -0x44);\n                            uVar2 = *(*0x20 + -0x40);\n                            uVar3 = *(*0x20 + -0x3c);\n                            puVar14[4] = *(*0x20 + -0x48);\n                            puVar14[5] = uVar1;\n                            puVar14[6] = uVar2;\n                            puVar14[7] = uVar3;\n                            in_RAX[8] = in_RAX[8] + 1;\n                        }\n                        uVar6 = 1;\n                    }\n                    return uVar6;\n                case 0xf:\n                    if ((*0x52d340 < in_RAX[8] + 2) || (*0x52d348 < 8)) {\n                        uVar6 = 0;\n                    }\n                    else {\n                        for (iVar10 = 0; iVar10 < 2; iVar10 = iVar10 + 1) {\n                            *(*0x20 + -0x98) = in_XMM15;\n                            *(*0x20 + -0x88) = in_XMM15;\n                            *(*0x20 + -0x78) = in_XMM15;\n                            *(*0x20 + -0x98) = 4;\n                            *(*0x20 + -0x90) = arg1 + iVar10 * 8;\n                            *(*0x20 + -0x88) = 8;\n                            *(*0x20 + -0x70) = in_RAX[8];\n                            uVar13 = in_RAX[1] + 1;\n                            iVar8 = *in_RAX;\n                            uVar9 = in_RAX[2];\n                            iVar7 = iVar8;\n                            if (uVar9 < uVar13) {\n                                *(*0x20 + -0xb8) = iVar10;\n                                *(*0x20 + -0x110) = 0x47c325;\n                                uVar11 = uVar9;\n                                iVar7 = fcn.00445800(uVar9);\n                                in_RAX = *(*0x20 + 8);\n                                in_RAX[2] = uVar9;\n                                if (*0x5985b0 == 0) {\n                                    *in_RAX = iVar7;\n                                }\n                                else {\n                                    *(*0x20 + -0x110) = 0x47c345;\n                                    iVar7 = fcn.0045df80(uVar9, iVar10, iVar8, uVar11);\n                                }\n                                arg1 = *(*0x20 + 0x18);\n                                iVar10 = *(*0x20 + -0xb8);\n                            }\n                            in_RAX[1] = uVar13;\n                            puVar14 = uVar13 * 0x30 + -0x30 + iVar7;\n                            uVar1 = *(*0x20 + -0x94);\n                            uVar2 = *(*0x20 + -0x90);\n                            uVar3 = *(*0x20 + -0x8c);\n                            *puVar14 = *(*0x20 + -0x98);\n                            puVar14[1] = uVar1;\n                            puVar14[2] = uVar2;\n                            puVar14[3] = uVar3;\n                            puVar14 = iVar7 + uVar13 * 0x30 + -0x20;\n                            uVar1 = *(*0x20 + -0x84);\n                            uVar2 = *(*0x20 + -0x80);\n                            uVar3 = *(*0x20 + -0x7c);\n                            *puVar14 = *(*0x20 + -0x88);\n                            puVar14[1] = uVar1;\n                            puVar14[2] = uVar2;\n                            puVar14[3] = uVar3;\n                            uVar1 = *(*0x20 + -0x74);\n                            uVar2 = *(*0x20 + -0x70);\n                            uVar3 = *(*0x20 + -0x6c);\n                            puVar14[4] = *(*0x20 + -0x78);\n                            puVar14[5] = uVar1;\n                            puVar14[6] = uVar2;\n                            puVar14[7] = uVar3;\n                            in_RAX[8] = in_RAX[8] + 1;\n                        }\n                        uVar6 = 1;\n                    }\n                    break;\n                case 0x10:\n                    if (unaff_RBX[8] == 0) {\n                        return 1;\n                    }\n                    if (unaff_RBX[8] == 1) {\n                        *(*0x20 + -0x110) = 0x47c0c8;\n                        uVar6 = fcn.0047bf80(arg1);\n                        return uVar6;\n                    }\n                    return 0;\n                case 0x11:\n                case 0x12:\n                case 0x14:\n                case 0x15:\n                case 0x19:\n                    uVar13 = *unaff_RBX;\n                    *(*0x20 + -0x110) = 0x47c1a5;\n                    uVar6 = fcn.0047c620(uVar13, uVar13, uVar9);\n                    return uVar6;\n                case 0x13:\n                    *(*0x20 + -0x110) = 0x47c116;\n                    uVar6 = fcn.0047c620(8, 0x4caee0, uVar9);\n                    return uVar6;\n                case 0x16:\n                    *(*0x20 + -0x110) = 0x47c13d;\n                    uVar6 = fcn.0047c620(8, 0x4caee0, uVar9);\n                    return uVar6;\n                case 0x17:\n                    *(*0x20 + -0x110) = 0x47c165;\n                    uVar6 = fcn.0047c620(8, 0x4caee0, uVar9);\n                    return uVar6;\n                case 0x18:\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    uVar9 = unaff_RBX[8];\n                    *(*0x20 + -0xa0) = uVar9;\n                    uVar13 = 0;\n                    while( true ) {\n                        if (uVar9 <= uVar13) {\n                            return 1;\n                        }\n                        uVar9 = unaff_RBX[7];\n                        uVar11 = unaff_RBX[8];\n                        if (uVar11 <= uVar13) break;\n                        *(*0x20 + -0xa8) = uVar13;\n                        iVar10 = *(uVar9 + 0x10 + uVar13 * 0x18);\n                        *(*0x20 + -0x110) = 0x47c20a;\n                        cVar5 = fcn.0047bf80(iVar10 + arg1);\n                        if (cVar5 == '\\0') {\n                            return 0;\n                        }\n                        uVar13 = *(*0x20 + -0xa8) + 1;\n                        uVar9 = *(*0x20 + -0xa0);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    *(*0x20 + -0x110) = 0x47c245;\n                    uVar6 = fcn.0045e420(uVar11);\n                }\n                return uVar6;\n            }\n            *(*0x20 + -200) = uVar13;\n            *(*0x20 + -0x110) = 0x47c5b1;\n            fcn.00434ec0();\n            *(*0x20 + -0x110) = 0x47c5c5;\n            fcn.004357c0();\n            *(*0x20 + -0x110) = 0x47c5cf;\n            fcn.004354c0();\n            *(*0x20 + -0x110) = 0x47c5d4;\n            fcn.00435120();\n            *(*0x20 + -0x110) = 0x47c5d9;\n            fcn.00434f40();\n            unaff_RBX = 0x4ca1a8;\n            *(*0x20 + -0x110) = 0x47c5ec;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + -8) = 0x47c605;\n        fcn.0045bdc0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1 = *(puVar12 + 0x18);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 3992
    },
    "0047df80": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.0047df80(void)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    arg1 = *(in_RAX + 0x17) & 0x1f;\n    if (arg1 == 0x14) {\n        return *(in_RAX + 0x40);\n    }\n    fcn.0047dec0(arg1);\n    return unaff_RBX;\n}\n",
        "token_count": 158
    },
    "0047e140": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0047e140(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x68 && *0x20 + -0x68 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0xe8;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_XMM15;\n            *(*0x20 + -0xf8) = *0x20 + -8;\n            *(*0x20 + -0xf0) = 0x47e18f;\n            iVar1 = fcn.0045e6cb();\n            unaff_RBP = *(*0x20 + -0xf8);\n            if ((*(iVar1 + 0x17) & 0x1f) == 0x19) {\n                *(*0x20 + -0xf0) = 0x47e1ab;\n                fcn.0047e3c0();\n                *(*0x20 + -0x70) = *(*0x20 + -0xe8);\n                *(*0x20 + -0xf8) = unaff_RBP;\n                *(*0x20 + -0xf0) = 0x47e1d0;\n                fcn.0045ea2c();\n                *(*0x20 + 8) = *(*0x20 + -0x70);\n                *(*0x20 + -0xf8) = *(*0x20 + -0xf8);\n                *(*0x20 + -0xf0) = 0x47e20f;\n                fcn.0045ea2c();\n                return;\n            }\n            *(*0x20 + -0xf0) = 0x47e228;\n            fcn.0047de00();\n            *(*0x20 + -0xf0) = 0x47e245;\n            fcn.00449580(0x22);\n            *(*0x20 + -0xf0) = 0x47e24a;\n            unaff_RBX = fcn.00409fe0();\n            *(*0x20 + -0xf0) = 0x47e259;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar2 + 0x70) = in_RAX;\n        *(puVar2 + 0x78) = unaff_RBX;\n        *(puVar2 + -8) = 0x47e269;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 0x70);\n        unaff_RBX = *(puVar2 + 0x78);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 677
    },
    "00480c80": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.00480c80(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            uVar3 = arg1 & 0x1f;\n            if (uVar3 == 0x14) {\n                *(*0x20 + -0x48) = 0x480d3d;\n                iVar2 = fcn.0047df80();\n                if (iVar2 == 0) {\n                    iVar2 = **(*0x20 + -0x20);\n                    iVar4 = (*(*0x20 + -0x20))[1];\n                }\n                else {\n                    iVar2 = **(*0x20 + -0x20);\n                    iVar4 = (*(*0x20 + -0x20))[1];\n                    if (iVar2 != 0) {\n                        iVar2 = *(iVar2 + 8);\n                    }\n                }\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x10) = iVar4;\n                iVar2 = *(*0x20 + -0x18);\n                if (iVar2 == 0) {\n                    iVar2 = 0;\n                }\n                return iVar2;\n            }\n            if (uVar3 == 0x16) {\n                if ((arg1 >> 7 & 1) == 0) goto code_r0x00480d01;\n                if ((*(in_RAX + 0x17) & 0x20) == 0) {\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x48) = 0x480ce7;\n                    cVar1 = fcn.00458fc0();\n                    if (cVar1 == '\\0') {\n                        *(*0x20 + -0x48) = 0x480dea;\n                        fcn.00432de0();\n                        goto code_r0x00480dea;\n                    }\n                    in_RAX = *(*0x20 + -0x28);\n                    unaff_RBX = *(*0x20 + -0x20);\n                }\n                unaff_RBX = *unaff_RBX;\ncode_r0x00480d01:\n                if (unaff_RBX == NULL) {\n                    return 0;\n                }\n                return *(in_RAX + 0x30);\n            }\ncode_r0x00480dea:\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x48) = 0x480dfb;\n            unaff_RBX = fcn.0040c6e0();\n            unaff_RBX[1] = 0x12;\n            *unaff_RBX = 0x4aaa0b;\n            arg1 = *(*0x20 + -0x30);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x48) = 0x480e25;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x480e3a;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1004
    },
    "00480f80": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.00480f80(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = arg1 & 0x1f;\n            if (arg1 == 0x11) {\n                if (unaff_RDI <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != unaff_RDI) {\n                    return *(in_RAX + 0x30);\n                }\n            }\n            else {\n                if (arg1 == 0x17) {\n                    if (unaff_RDI <= *(unaff_RBX + 8) && *(unaff_RBX + 8) != unaff_RDI) {\n                        return *(in_RAX + 0x30);\n                    }\n                }\n                else {\n                    if (arg1 == 0x18) {\n                        if (unaff_RDI <= *(unaff_RBX + 8) && *(unaff_RBX + 8) != unaff_RDI) {\n                            return *0x544b58;\n                        }\n                        *(*0x20 + -0x28) = 0x48109f;\n                        fcn.00432de0();\n                    }\n                    *(*0x20 + -0x10) = arg1;\n                    *(*0x20 + -0x28) = 0x4810b0;\n                    puVar1 = fcn.0040c6e0();\n                    puVar1[1] = 0x13;\n                    *puVar1 = 0x4ab05c;\n                    arg1 = *(*0x20 + -0x10);\n                    puVar1[2] = arg1;\n                    *(*0x20 + -0x28) = 0x4810da;\n                    fcn.00432de0();\n                }\n                *(*0x20 + -0x28) = 0x4810ed;\n                fcn.00432de0();\n            }\n            unaff_RBX = 0x4ca278;\n            *(*0x20 + -0x28) = 0x481105;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x48111f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 804
    },
    "00481140": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.00481140(uint64_t arg1)\n\n{\n    uint64_t in_RAX;\n    int64_t iVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 != 0) {\n                if ((unaff_DIL == '\\0') || ((arg1 & 0x60) == 0)) {\n                    if ((arg1 >> 9 & 1) != 0) {\n                        unaff_RBX = 0x9;\n                        *(*0x20 + -0x40) = 0x48119d;\n                        fcn.0047d2e0(in_RAX);\n                        arg1 = in_RAX;\n                    }\n                    if ((arg1 & 0x1f) == 0x14) {\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x40) = 0x4811b6;\n                        iVar1 = fcn.00481900(arg1);\n                        if (iVar1 != 0) {\n                            iVar1 = **(*0x20 + -0x10);\n                            if (iVar1 != 0) {\n                                iVar1 = *(iVar1 + 8);\n                            }\n                            return iVar1;\n                        }\n                        return **(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x40) = 0x4811fb;\n                    iVar1 = fcn.0047f220(arg1);\n                    return iVar1;\n                }\n                *(*0x20 + -0x40) = 0x481218;\n                fcn.00432de0();\n            }\n            *(*0x20 + -0x40) = 0x481225;\n            unaff_RBX = fcn.0040c6e0();\n            unaff_RBX[1] = 0x17;\n            arg1 = 0x4ac3c1;\n            *unaff_RBX = 0x4ac3c1;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x40) = 0x48124e;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        puVar2[0x20] = unaff_DIL;\n        *(puVar2 + -8) = 0x481268;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_DIL = puVar2[0x20];\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 795
    },
    "00482060": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.00482060(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1_00;\n    ulong *unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 != 0) {\n                if ((arg1 >> 9 & 1) == 0) {\n                    return 0x4cb460;\n                }\n                arg1_00 = arg1 >> 10;\n                if ((*(in_RAX + 0x17) & 0x1f) == 0x14) {\n                    if (arg1_00 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != arg1_00) {\n                        *(*0x20 + -0x30) = 0x4820bd;\n                        fcn.00459ca0();\n                        return 0x4cb460;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x18) = arg1_00;\n                    *(*0x20 + -0x30) = 0x4820e5;\n                    fcn.0047dec0(arg1_00);\n                    if (*(*0x20 + -0x18) < unaff_RBX) {\n                        *(*0x20 + -0x30) = 0x482105;\n                        fcn.00459ca0();\n                        return 0x4cb460;\n                    }\n                    *(*0x20 + -0x30) = 0x482145;\n                    fcn.00432de0();\n                }\n                *(*0x20 + -0x30) = 0x482158;\n                fcn.00432de0();\n            }\n            *(*0x20 + -0x30) = 0x482165;\n            unaff_RBX = fcn.0040c6e0();\n            unaff_RBX[1] = 0x12;\n            arg1 = 0x4aaa1d;\n            *unaff_RBX = 0x4aaa1d;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x30) = 0x48218e;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x4821a5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 783
    },
    "00483340": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00483962)\n// WARNING: Removing unreachable block (ram,0x0048387e)\n// WARNING: Removing unreachable block (ram,0x0048388f)\n// WARNING: Removing unreachable block (ram,0x00483994)\n// WARNING: Removing unreachable block (ram,0x00483950)\n// WARNING: Removing unreachable block (ram,0x004839a5)\n\nint64_t fcn.00483340(int64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    code *pcVar1;\n    char cVar2;\n    ulong *in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    ulong uVar9;\n    ulong *puVar10;\n    uint64_t uVar11;\n    ulong *unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    ulong *unaff_RSI;\n    ulong *unaff_RDI;\n    int64_t iVar13;\n    int64_t iVar14;\n    int64_t unaff_R14;\n    double dVar15;\n    double dVar16;\n    double dVar17;\n    double dVar18;\n    \n    do {\n        puVar10 = unaff_RBX;\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x90 && *0x20 + -0x90 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x110;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x88) = arg3;\n            *(*0x20 + -0x90) = arg1;\n            *(*0x20 + -0x30) = unaff_RSI;\n            *(*0x20 + -0x38) = unaff_RDI;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x48) = in_RAX;\n            if ((arg1 == 0) || ((arg1 >> 9 & 1) != 0)) {\n                *(*0x20 + -0x118) = 0x4833d5;\n                iVar13 = fcn.00482060(arg1);\n                unaff_RSI = *(*0x20 + -0x30);\n                unaff_RDI = *(*0x20 + -0x38);\n                arg3 = *(*0x20 + -0x88);\n            }\n            else {\n                iVar13 = 0x4cb460;\n                unaff_RBX = in_RAX;\n            }\n            *(*0x20 + -0x60) = unaff_RBX;\n            *(*0x20 + -0xc0) = iVar13;\n            if ((arg3 == 0) || ((arg3 >> 9 & 1) != 0)) {\n                *(*0x20 + -0x118) = 0x48343e;\n                iVar14 = fcn.00482060(arg3);\n                arg3 = *(*0x20 + -0x88);\n                iVar13 = *(*0x20 + -0xc0);\n                unaff_RBX = *(*0x20 + -0x60);\n            }\n            else {\n                iVar14 = 0x4cb460;\n                unaff_RSI = unaff_RDI;\n            }\n            if (iVar13 != iVar14) {\n                return -1;\n            }\n            *(*0x20 + -0x118) = 0x483498;\n            cVar2 = fcn.00403340(unaff_RSI);\n            if (cVar2 == '\\0') {\n                return -1;\n            }\n            uVar7 = *(*0x20 + -0x90);\n            uVar8 = uVar7 & 0x1f;\n            iVar13 = uVar8 - 1;\n            *(*0x20 + -0x98) = uVar8;\n            switch(iVar13) {\n            case 0:\n                cVar2 = **(*0x20 + -0x40);\n                if ((*(*0x20 + -0x88) & 0x1f) != 1) {\n                    *(*0x20 + -0xd9) = cVar2;\n                    *(*0x20 + -0x118) = 0x483517;\n                    fcn.0047f6a0(*(*0x20 + -0x88));\n                    cVar2 = *(*0x20 + -0xd9);\n                }\n                if (**(*0x20 + -0x30) == cVar2) {\n                    return 0;\n                }\n                if (cVar2 == '\\0') {\n                    return -1;\n                }\n                return 1;\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n                if (3 < uVar8) {\n                    if (uVar8 == 4) {\n                        iVar13 = **(*0x20 + -0x40);\n                    }\n                    else if (uVar8 == 5) {\n                        iVar13 = **(*0x20 + -0x40);\n                    }\n                    else {\n                        if (uVar8 != 6) goto code_r0x00484268;\n                        iVar13 = **(*0x20 + -0x40);\n                    }\ncode_r0x004835dd:\n                    uVar8 = *(*0x20 + -0x88) & 0x1f;\n                    *(*0x20 + -0x88) = uVar8;\n                    if (uVar8 < 4) {\n                        if (uVar8 == 2) {\n                            iVar14 = **(*0x20 + -0x30);\ncode_r0x00483660:\n                            if (iVar13 < iVar14) {\n                                return -1;\n                            }\n                            if (iVar13 <= iVar14) {\n                                return 0;\n                            }\n                            return 1;\n                        }\n                        if (uVar8 == 3) {\n                            iVar14 = **(*0x20 + -0x30);\n                            goto code_r0x00483660;\n                        }\n                    }\n                    else {\n                        if (uVar8 == 4) {\n                            iVar14 = **(*0x20 + -0x30);\n                            goto code_r0x00483660;\n                        }\n                        if (uVar8 == 5) {\n                            iVar14 = **(*0x20 + -0x30);\n                            goto code_r0x00483660;\n                        }\n                        if (uVar8 == 6) {\n                            iVar14 = **(*0x20 + -0x30);\n                            goto code_r0x00483660;\n                        }\n                    }\n                    goto code_r0x0048422f;\n                }\n                if (uVar8 == 2) {\n                    iVar13 = **(*0x20 + -0x40);\n                    goto code_r0x004835dd;\n                }\n                if (uVar8 == 3) {\n                    iVar13 = **(*0x20 + -0x40);\n                    goto code_r0x004835dd;\n                }\n                goto code_r0x00484268;\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xb:\n                if (9 < uVar8) {\n                    if (uVar8 == 10) {\n                        uVar8 = **(*0x20 + -0x40);\n                    }\n                    else if (uVar8 == 0xb) {\n                        uVar8 = **(*0x20 + -0x40);\n                    }\n                    else {\n                        if (uVar8 != 0xc) goto code_r0x004841f8;\n                        uVar8 = **(*0x20 + -0x40);\n                    }\ncode_r0x00483729:\n                    uVar11 = *(*0x20 + -0x88) & 0x1f;\n                    *(*0x20 + -0x88) = uVar11;\n                    if (uVar11 < 10) {\n                        if (uVar11 == 7) {\n                            uVar11 = **(*0x20 + -0x30);\ncode_r0x004837c0:\n                            if (uVar8 < uVar11) {\n                                return -1;\n                            }\n                            if (uVar8 <= uVar11) {\n                                return 0;\n                            }\n                            return 1;\n                        }\n                        if (uVar11 == 8) {\n                            uVar11 = **(*0x20 + -0x30);\n                            goto code_r0x004837c0;\n                        }\n                        if (uVar11 == 9) {\n                            uVar11 = **(*0x20 + -0x30);\n                            goto code_r0x004837c0;\n                        }\n                    }\n                    else {\n                        if (uVar11 == 10) {\n                            uVar11 = **(*0x20 + -0x30);\n                            goto code_r0x004837c0;\n                        }\n                        if (uVar11 == 0xb) {\n                            uVar11 = **(*0x20 + -0x30);\n                            goto code_r0x004837c0;\n                        }\n                        if (uVar11 == 0xc) {\n                            uVar11 = **(*0x20 + -0x30);\n                            goto code_r0x004837c0;\n                        }\n                    }\n                    goto code_r0x004841bf;\n                }\n                if (uVar8 == 7) {\n                    uVar8 = **(*0x20 + -0x40);\n                    goto code_r0x00483729;\n                }\n                if (uVar8 == 8) {\n                    uVar8 = **(*0x20 + -0x40);\n                    goto code_r0x00483729;\n                }\n                if (uVar8 == 9) {\n                    uVar8 = **(*0x20 + -0x40);\n                    goto code_r0x00483729;\n                }\n                goto code_r0x004841f8;\n            case 0xc:\n            case 0xd:\n                if (uVar8 == 0xd) {\n                    dVar15 = **(*0x20 + -0x40);\ncode_r0x00483837:\n                    uVar8 = *(*0x20 + -0x88) & 0x1f;\n                    if (uVar8 == 0xd) {\n                        dVar16 = **(*0x20 + -0x30);\ncode_r0x00483876:\n                        if (dVar16 <= dVar15) {\n                            if (dVar15 <= dVar16) {\n                                iVar13 = 0;\n                            }\n                            else {\n                                iVar13 = 1;\n                            }\n                        }\n                        else {\n                            iVar13 = -1;\n                        }\n                        return iVar13;\n                    }\n                    if (uVar8 == 0xe) {\n                        dVar16 = **(*0x20 + -0x30);\n                        goto code_r0x00483876;\n                    }\n                    goto code_r0x00484148;\n                }\n                if (uVar8 == 0xe) {\n                    dVar15 = **(*0x20 + -0x40);\n                    goto code_r0x00483837;\n                }\n                break;\n            case 0xe:\n            case 0xf:\n                if (uVar8 == 0xf) {\n                    dVar15 = **(*0x20 + -0x40);\n                    dVar16 = (*(*0x20 + -0x40))[1];\ncode_r0x00483901:\n                    uVar8 = *(*0x20 + -0x88) & 0x1f;\n                    if (uVar8 == 0xf) {\n                        dVar17 = **(*0x20 + -0x30);\n                        dVar18 = (*(*0x20 + -0x30))[1];\ncode_r0x00483948:\n                        if (dVar17 <= dVar15) {\n                            if (dVar15 <= dVar17) {\n                                iVar13 = 0;\n                            }\n                            else {\n                                iVar13 = 1;\n                            }\n                        }\n                        else {\n                            iVar13 = -1;\n                        }\n                        if (iVar13 != 0) {\n                            return iVar13;\n                        }\n                        if (dVar18 <= dVar16) {\n                            if (dVar16 <= dVar18) {\n                                iVar13 = 0;\n                            }\n                            else {\n                                iVar13 = 1;\n                            }\n                        }\n                        else {\n                            iVar13 = -1;\n                        }\n                        return iVar13;\n                    }\n                    if (uVar8 == 0x10) {\n                        dVar17 = **(*0x20 + -0x30);\n                        dVar18 = (*(*0x20 + -0x30))[1];\n                        goto code_r0x00483948;\n                    }\n                    *(*0x20 + -0x88) = uVar8;\n                    *(*0x20 + -0x118) = 0x4840e5;\n                    puVar10 = fcn.0040c6e0();\n                    puVar10[1] = 0x15;\n                    *puVar10 = 0x4ab94e;\n                    puVar10[2] = *(*0x20 + -0x88);\n                    *(*0x20 + -0x118) = 0x484112;\n                    fcn.00432de0();\n                }\n                else if (uVar8 == 0x10) {\n                    dVar15 = **(*0x20 + -0x40);\n                    dVar16 = (*(*0x20 + -0x40))[1];\n                    goto code_r0x00483901;\n                }\n                *(*0x20 + -0x118) = 0x48411e;\n                puVar10 = fcn.0040c6e0();\n                puVar10[1] = 0x15;\n                *puVar10 = 0x4ab94e;\n                uVar8 = *(*0x20 + -0x98);\n                puVar10[2] = uVar8;\n                *(*0x20 + -0x118) = 0x484148;\n                fcn.00432de0();\ncode_r0x00484148:\n                *(*0x20 + -0x88) = uVar8;\n                *(*0x20 + -0x118) = 0x48415c;\n                puVar10 = fcn.0040c6e0();\n                puVar10[1] = 0x13;\n                *puVar10 = 0x4ab049;\n                puVar10[2] = *(*0x20 + -0x88);\n                *(*0x20 + -0x118) = 0x484189;\n                fcn.00432de0();\n                break;\n            case 0x10:\n                iVar13 = 0;\n                while( true ) {\n                    *(*0x20 + -0xb8) = iVar13;\n                    *(*0x20 + -0x118) = 0x48401d;\n                    iVar13 = fcn.00481340(uVar7);\n                    if (iVar13 <= *(*0x20 + -0xb8)) {\n                        return 0;\n                    }\n                    uVar4 = *(*0x20 + -0x40);\n                    uVar6 = *(*0x20 + -0x90);\n                    *(*0x20 + -0x118) = 0x484048;\n                    uVar9 = fcn.00480f80(uVar6);\n                    *(*0x20 + -0x50) = uVar9;\n                    *(*0x20 + -0x58) = uVar4;\n                    *(*0x20 + -0x98) = uVar6;\n                    uVar4 = *(*0x20 + -0x88);\n                    *(*0x20 + -0x118) = 0x48407f;\n                    fcn.00480f80(uVar4);\n                    *(*0x20 + -0x118) = 0x4840a5;\n                    iVar13 = fcn.00483340(*(*0x20 + -0x98), uVar7, uVar4);\n                    if (iVar13 != 0) break;\n                    iVar13 = *(*0x20 + -0xb8) + 1;\n                    uVar7 = *(*0x20 + -0x90);\n                }\n                return iVar13;\n            case 0x11:\n                uVar4 = *(*0x20 + -0x40);\n                *(*0x20 + -0x118) = 0x483a25;\n                iVar13 = fcn.00484340(uVar7, uVar7, *(*0x20 + -0x88));\n                if (uVar4 != '\\0') {\n                    return iVar13;\n                }\n                *(*0x20 + -0x118) = 0x483a4a;\n                uVar7 = fcn.00481aa0(*(*0x20 + -0x90));\n                *(*0x20 + -0xa8) = uVar7;\n                *(*0x20 + -0x118) = 0x483a6c;\n                uVar8 = fcn.00481aa0(*(*0x20 + -0x88));\n                if (*(*0x20 + -0xa8) < uVar8) {\n                    return -1;\n                }\n                if (*(*0x20 + -0xa8) <= uVar8) {\n                    return 0;\n                }\n                return 1;\n            default:\n                goto code_r0x0048429e;\n            case 0x13:\n                uVar4 = *(*0x20 + -0x40);\n                uVar6 = *(*0x20 + -0x88);\n                *(*0x20 + -0x118) = 0x483af6;\n                iVar14 = fcn.00484340(uVar7, uVar7, uVar6);\n                if (uVar4 != '\\0') {\n                    return iVar14;\n                }\n                uVar4 = *(*0x20 + -0x40);\n                iVar14 = *(*0x20 + -0x90);\n                *(*0x20 + -0x118) = 0x483b1b;\n                uVar9 = fcn.00480c80(iVar14);\n                if ((iVar14 == 0) || ((iVar14 >> 9 & 1) != 0)) {\n                    *(*0x20 + -0x118) = 0x483b3c;\n                    iVar3 = fcn.00482060(iVar14);\n                }\n                else {\n                    iVar3 = 0x4cb460;\n                    uVar4 = uVar9;\n                }\n                if (iVar3 != 0) {\n                    iVar3 = *(iVar3 + 8);\n                }\n                if (iVar3 == 0) {\n                    iVar14 = 0;\n                    uVar4 = 0;\n                    uVar8 = 0;\n                }\n                else {\n                    uVar9 = *0x545560;\n                    if ((*0x545550 != '\\0') && (*0x545558 = iVar3,  uVar9 = uVar4,  *0x5985b0 != 0)) {\n                        *(*0x20 + -0x118) = 0x483b7d;\n                        iVar3 = fcn.0045e0c0(iVar14, uVar7, uVar6, iVar13);\n                        uVar9 = *0x545560;\n                    }\n                    *0x545560 = uVar9;\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x10) = uVar4;\n                    iVar14 = *(*0x20 + -0x18);\n                    if (iVar14 == 0) {\n                        iVar14 = 0;\n                        uVar4 = 0;\n                        uVar8 = 0;\n                    }\n                    else {\n                        uVar8 = *(iVar14 + 0x17) & 0x1f;\n                        if ((*(iVar14 + 0x17) & 0x20) == 0) {\n                            uVar8 = uVar8 | 0x80;\n                        }\n                    }\n                }\n                *(*0x20 + -0x80) = iVar14;\n                *(*0x20 + -0xd8) = uVar8;\n                *(*0x20 + -0x78) = uVar4;\n                iVar3 = *(*0x20 + -0x88);\n                uVar7 = *(*0x20 + -0x30);\n                *(*0x20 + -0x118) = 0x483bf8;\n                uVar4 = fcn.00480c80(iVar3);\n                if ((iVar3 == 0) || ((iVar3 >> 9 & 1) != 0)) {\n                    *(*0x20 + -0x118) = 0x483c14;\n                    iVar5 = fcn.00482060(iVar3);\n                }\n                else {\n                    iVar5 = 0x4cb460;\n                    uVar7 = uVar4;\n                }\n                if (iVar5 != 0) {\n                    iVar5 = *(iVar5 + 8);\n                }\n                if (iVar5 == 0) {\n                    iVar13 = 0;\n                    uVar8 = 0;\n                }\n                else {\n                    uVar4 = *0x545560;\n                    if ((*0x545550 != '\\0') && (*0x545558 = iVar5,  uVar4 = uVar7,  *0x5985b0 != 0)) {\n                        *(*0x20 + -0x118) = 0x483c54;\n                        iVar5 = fcn.0045e0c0(iVar3, iVar14, uVar8, iVar13);\n                        uVar4 = *0x545560;\n                    }\n                    *0x545560 = uVar4;\n                    *(*0x20 + -0x28) = iVar5;\n                    *(*0x20 + -0x20) = uVar7;\n                    iVar13 = *(*0x20 + -0x28);\n                    if (iVar13 == 0) {\n                        iVar13 = 0;\n                        uVar8 = 0;\n                    }\n                    else {\n                        uVar8 = *(iVar13 + 0x17) & 0x1f;\n                        if ((*(iVar13 + 0x17) & 0x20) == 0) {\n                            uVar8 = uVar8 | 0x80;\n                        }\n                    }\n                }\n                *(*0x20 + -0x118) = 0x483cc5;\n                iVar14 = fcn.00483340(*(*0x20 + -0xd8), iVar13, uVar8);\n                if (iVar14 == 0) {\n                    uVar7 = *(*0x20 + -0x40);\n                    uVar4 = *(*0x20 + -0x90);\n                    *(*0x20 + -0x118) = 0x483cf7;\n                    uVar6 = fcn.00480c80(uVar4);\n                    *(*0x20 + -0x48) = uVar6;\n                    *(*0x20 + -0x40) = uVar7;\n                    *(*0x20 + -0x90) = uVar4;\n                    uVar7 = *(*0x20 + -0x88);\n                    *(*0x20 + -0x118) = 0x483d2c;\n                    fcn.00480c80(uVar7);\n                    *(*0x20 + -0x118) = 0x483d52;\n                    iVar13 = fcn.00483340(*(*0x20 + -0x90), iVar13, uVar7);\n                    return iVar13;\n                }\n                return iVar14;\n            case 0x15:\n            case 0x19:\n                *(*0x20 + -0x118) = 0x483e85;\n                uVar7 = fcn.00481aa0(uVar7);\n                *(*0x20 + -0xa0) = uVar7;\n                *(*0x20 + -0x118) = 0x483ea7;\n                uVar8 = fcn.00481aa0(*(*0x20 + -0x88));\n                if (*(*0x20 + -0xa0) < uVar8) {\n                    return -1;\n                }\n                if (*(*0x20 + -0xa0) <= uVar8) {\n                    return 0;\n                }\n                return 1;\n            case 0x17:\n                *(*0x20 + -0x68) = **(*0x20 + -0x40);\n                *(*0x20 + -200) = (*(*0x20 + -0x40))[1];\n                if ((*(*0x20 + -0x88) & 0x1f) == 0x18) {\n                    uVar7 = **(*0x20 + -0x30);\n                    uVar4 = (*(*0x20 + -0x30))[1];\n                }\n                else {\n                    uVar4 = *(*0x20 + -0x30);\n                    *(*0x20 + -0x118) = 0x483dcf;\n                    uVar7 = fcn.00481f80(*(*0x20 + -0x88));\n                }\n                *(*0x20 + -0xd0) = uVar4;\n                *(*0x20 + -0x70) = uVar7;\n                *(*0x20 + -0x118) = 0x483dfa;\n                iVar13 = fcn.00402480(uVar7);\n                if (iVar13 < 0) {\n                    return -1;\n                }\n                *(*0x20 + -0x118) = 0x483e1e;\n                iVar13 = fcn.00402480(*(*0x20 + -0x70));\n                if (iVar13 < 1) {\n                    return 0;\n                }\n                return 1;\n            case 0x18:\n                iVar13 = 0;\n                while( true ) {\n                    *(*0x20 + -0xb0) = iVar13;\n                    *(*0x20 + -0x118) = 0x483f35;\n                    iVar13 = fcn.004819c0(uVar7);\n                    if (iVar13 <= *(*0x20 + -0xb0)) {\n                        return 0;\n                    }\n                    uVar4 = *(*0x20 + -0x40);\n                    uVar6 = *(*0x20 + -0x90);\n                    *(*0x20 + -0x118) = 0x483f66;\n                    uVar9 = fcn.00480e60(uVar6);\n                    *(*0x20 + -0x50) = uVar9;\n                    *(*0x20 + -0x58) = uVar4;\n                    *(*0x20 + -0x98) = uVar6;\n                    uVar4 = *(*0x20 + -0x88);\n                    *(*0x20 + -0x118) = 0x483f9d;\n                    fcn.00480e60(uVar4);\n                    *(*0x20 + -0x118) = 0x483fc5;\n                    iVar13 = fcn.00483340(*(*0x20 + -0x98), uVar7, uVar4);\n                    if (iVar13 != 0) break;\n                    iVar13 = *(*0x20 + -0xb0) + 1;\n                    uVar7 = *(*0x20 + -0x90);\n                }\n                return iVar13;\n            }\n            *(*0x20 + -0x118) = 0x484195;\n            puVar10 = fcn.0040c6e0();\n            puVar10[1] = 0x13;\n            *puVar10 = 0x4ab049;\n            puVar10[2] = *(*0x20 + -0x98);\n            *(*0x20 + -0x118) = 0x4841bf;\n            fcn.00432de0();\ncode_r0x004841bf:\n            *(*0x20 + -0x118) = 0x4841cb;\n            puVar10 = fcn.0040c6e0();\n            puVar10[1] = 0x12;\n            *puVar10 = 0x4aaa2f;\n            puVar10[2] = *(*0x20 + -0x88);\n            *(*0x20 + -0x118) = 0x4841f8;\n            fcn.00432de0();\ncode_r0x004841f8:\n            *(*0x20 + -0x118) = 0x484205;\n            puVar10 = fcn.0040c6e0();\n            puVar10[1] = 0x12;\n            *puVar10 = 0x4aaa2f;\n            puVar10[2] = *(*0x20 + -0x98);\n            *(*0x20 + -0x118) = 0x48422f;\n            fcn.00432de0();\ncode_r0x0048422f:\n            *(*0x20 + -0x118) = 0x48423b;\n            puVar10 = fcn.0040c6e0();\n            puVar10[1] = 0x11;\n            *puVar10 = 0x4aa5e8;\n            puVar10[2] = *(*0x20 + -0x88);\n            *(*0x20 + -0x118) = 0x484268;\n            fcn.00432de0();\ncode_r0x00484268:\n            *(*0x20 + -0x118) = 0x484274;\n            unaff_RBX = fcn.0040c6e0();\n            unaff_RBX[1] = 0x11;\n            *unaff_RBX = 0x4aa5e8;\n            unaff_RBX[2] = *(*0x20 + -0x98);\n            *(*0x20 + -0x118) = 0x48429e;\n            fcn.00432de0();\ncode_r0x0048429e:\n            pcVar1 = *(*(*0x20 + -0xc0) + 0xf8);\n            *(*0x20 + -0x118) = 0x4842b4;\n            unaff_RDI = (*pcVar1)();\n            arg1 = 0x15;\n            *(*0x20 + -0x118) = 0x4842cd;\n            fcn.00449580(0x15);\n            *(*0x20 + -0x118) = 0x4842d2;\n            puVar10 = fcn.00409fe0();\n            *(*0x20 + -0x118) = 0x4842e5;\n            in_RAX = fcn.00432de0();\n            unaff_RSI = unaff_RBX;\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = puVar10;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + 0x20) = unaff_RDI;\n        *(puVar12 + 0x28) = unaff_RSI;\n        *(puVar12 + 0x30) = arg3;\n        *(puVar12 + -8) = 0x484309;\n        fcn.0045bdc0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1 = *(puVar12 + 0x18);\n        unaff_RDI = *(puVar12 + 0x20);\n        unaff_RSI = *(puVar12 + 0x28);\n        arg3 = *(puVar12 + 0x30);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 7149
    },
    "00424380": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nvoid fcn.00424380(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar2 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (0x3f < uVar2) {\ncode_r0x00424459:\n        fcn.0045e440(0x40);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar3 = *(*(in_RAX + 0x10170 + uVar2 * 8) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n    uVar2 = 0;\n    do {\n        if (arg1 <= uVar2) {\n            return;\n        }\n        uVar6 = (unaff_RBX >> 0xd) + uVar2 & 0x1ff;\n        if (uVar6 == 0) {\n            uVar4 = uVar2 * 0x2000 + unaff_RBX + 0x800000000000;\n            uVar5 = uVar4 >> 0x2a;\n            if (0x3f < uVar5) {\n                fcn.0045e440(0x40);\n                goto code_r0x00424459;\n            }\n            iVar3 = *(*(in_RAX + 0x10170 + uVar5 * 8) + (uVar4 >> 0x16 & 0xfffff) * 8);\n        }\n        *(iVar3 + 0x10400 + uVar6 * 8) = unaff_RDI;\n        uVar2 = uVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 450
    },
    "00424480": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nuint64_t fcn.00424480(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        uVar5 = in_R10;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = 0;\n            while( true ) {\n                uVar4 = uVar5;\n                if (arg1 == 0) {\n                    return uVar5;\n                }\n                uVar8 = unaff_RBX + 0x800000000000U >> 0x2a;\n                uVar5 = in_R10;\n                if (0x3f < uVar8) break;\n                iVar2 = *(*(in_RAX + 0x10170 + uVar8 * 8) + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8);\n                uVar9 = *(iVar2 + 0x114c8);\n                uVar6 = unaff_RBX & 0x3fffff;\n                uVar8 = arg1 * 0x2000 + uVar6;\n                uVar5 = in_R10 & 0xffffff00 | uVar6 < uVar9 | uVar4;\n                if (0x400000 < uVar8) {\n                    uVar8 = 0x400000;\n                }\n                while (uVar9 < uVar8) {\n                    LOCK();\n                    puVar1 = iVar2 + 0x114c8;\n                    uVar3 = *puVar1;\n                    *puVar1 = *puVar1 ^ (uVar9 == uVar3) * (*puVar1 ^ uVar8);\n                    if (uVar9 == uVar3) break;\n                    uVar9 = *(iVar2 + 0x114c8);\n                    if ((uVar9 <= uVar8) && (uVar6 < uVar9)) {\n                        unaff_RBX = 0x33;\n                        *(*0x20 + -0x20) = 0x42458c;\n                        fcn.00433580();\n                        goto code_r0x0042458c;\n                    }\n                }\n                unaff_RBX = (uVar8 - uVar6) + unaff_RBX;\n                arg1 = arg1 - (uVar8 - uVar6 >> 0xd);\n                in_R10 = uVar5;\n            }\ncode_r0x0042458c:\n            arg1 = 0x40;\n            *(*0x20 + -0x20) = 0x424599;\n            in_RAX = fcn.0045e440(0x40);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x4245ae;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n        in_R10 = uVar5;\n    } while( true );\n}\n",
        "token_count": 901
    },
    "00424f20": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nint64_t fcn.00424f20(void)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t iVar5;\n    int64_t arg1;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar5 = (unaff_RBX + 0x1ffU & 0xfffffffffffffe00) * 0x2000;\n    uVar1 = iVar5 + *(in_RAX + 0x10400);\n    uVar6 = -*0x5984a8 & *0x5984a8 + -1 + uVar1;\n    if ((*(in_RAX + 0x10408) < uVar6) || (uVar1 < *(in_RAX + 0x10400))) {\n        iVar3 = fcn.0040b1e0(in_RAX + 0x10390);\n        uVar2 = *0x598d98;\n        if (iVar3 == 0) {\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.004354c0();\n            fcn.004357c0();\n            fcn.004354c0(uVar2);\n            fcn.004357c0();\n            fcn.00434f40();\n            return 0;\n        }\n        if (iVar3 == *(in_RAX + 0x10408)) {\n            *(in_RAX + 0x10408) = iVar3 + iVar5;\n            arg1 = 0;\n        }\n        else {\n            arg1 = *(in_RAX + 0x10408) - *(in_RAX + 0x10400);\n            if (arg1 == 0) {\n                arg1 = 0;\n            }\n            else {\n                fcn.00414a00(0x598da0);\n                iVar4 = fcn.0042cd00();\n                LOCK();\n                *(iVar4 + 8) = *(iVar4 + 8) + arg1;\n                fcn.0042cde0();\n                fcn.004269e0(arg1);\n            }\n            *(in_RAX + 0x10400) = iVar3;\n            *(in_RAX + 0x10408) = iVar3 + iVar5;\n        }\n        uVar6 = -*0x5984a8 & *(in_RAX + 0x10400) + iVar5 + *0x5984a8 + -1;\n    }\n    else {\n        arg1 = 0;\n    }\n    iVar5 = *(in_RAX + 0x10400);\n    *(in_RAX + 0x10400) = uVar6;\n    iVar5 = uVar6 - iVar5;\n    fcn.00414a00(0x598da0);\n    iVar3 = fcn.0042cd00();\n    LOCK();\n    *(iVar3 + 8) = *(iVar3 + 8) + iVar5;\n    fcn.0042cde0();\n    fcn.004269e0(iVar5);\n    return arg1 + iVar5;\n}\n",
        "token_count": 757
    },
    "00426c20": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nvoid fcn.00426c20(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t noname_1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar10 = unaff_RBX + 0x800000000000;\n            *(*0x20 + -0x20) = uVar10;\n            uVar11 = uVar10 >> 0x16;\n            *(*0x20 + -0x28) = uVar11;\n            uVar9 = arg1 * 0x2000 + unaff_RBX + 0x7fffffffffff;\n            *(*0x20 + -0x30) = uVar9;\n            uVar9 = uVar9 >> 0x16;\n            if (uVar9 == uVar11) {\n                uVar5 = *(in_RAX + 0x68);\n                noname_1 = *(in_RAX + 0x60);\n                uVar7 = unaff_RBX;\n                if (uVar5 <= uVar11) goto code_r0x00427045;\n                noname_1 = *(noname_1 + uVar11 * 8);\n                if (0x1fff < uVar10 >> 0x23) goto code_r0x00427038;\n                *(*0x20 + -0x90) = noname_1;\n                iVar1 = *(in_RAX + 0x78 + (uVar10 >> 0x23) * 8);\n                *(*0x20 + -0xc0) = 0x426e2f;\n                iVar1 = fcn.0042a100(iVar1 + (uVar11 & 0x1fff) * 0x80, noname_1, uVar9);\n                if (iVar1 == *(*0x20 + -0x90)) {\n                    return;\n                }\n                iVar6 = *(*0x20 + 8);\n                uVar11 = *(iVar6 + 0x68);\n                uVar9 = *(iVar6 + 0x60);\n                if (uVar11 <= *(*0x20 + -0x28)) goto code_r0x00427030;\n                *(uVar9 + *(*0x20 + -0x28) * 8) = iVar1;\n                goto code_r0x00426e72;\n            }\n            *(*0x20 + -0x38) = uVar9;\n            if (unaff_RDI != '\\0') {\n                uVar5 = *(in_RAX + 0x68);\n                unaff_RBX = *(in_RAX + 0x60);\n                if (uVar10 >> 0x23 < 0x2000) {\n                    *(*0x20 + 0x21) = unaff_SIL;\n                    *(*0x20 + -0x80) = uVar5;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    iVar1 = *(in_RAX + 0x78 + (uVar10 >> 0x23) * 8);\n                    *(*0x20 + -0xc0) = 0x426d1f;\n                    uVar2 = fcn.0042a100(iVar1 + (uVar11 & 0x1fff) * 0x80, uVar5, uVar9);\n                    uVar11 = *(*0x20 + -0x80);\n                    uVar5 = *(*0x20 + -0x28);\n                    if (uVar5 < uVar11) {\n                        *(*(*0x20 + -0x10) + uVar5 * 8) = uVar2;\n                        unaff_RDI = *(*0x20 + 8);\n                        uVar11 = *(unaff_RDI + 0x70);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        if (unaff_RBX <= uVar11) {\n                            if (uVar5 + 1 <= unaff_RBX) {\n                                iVar1 = ((uVar5 + 1) * 8 & -((uVar11 - uVar5) + -1) >> 0x3f) + *(unaff_RDI + 0x60);\n                                uVar7 = (unaff_RBX - uVar5) - 1;\n                                noname_1 = *(*0x20 + 0x21);\n                                if (*(*0x20 + 0x21) != 0) {\n                                    if (uVar7 == 0) goto code_r0x0042704d;\n                                    uVar7 = uVar7 * 8;\n                                    *(*0x20 + -0xc0) = 0x426dbd;\n                                    fcn.0045eaa0();\n                                    unaff_RDI = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + -0x38);\n                                    goto code_r0x0042704d;\n                                }\n                                noname_1 = 0;\n                                goto code_r0x004270d6;\n                            }\n                            *(*0x20 + -0xc0) = 0x4270ed;\n                            fcn.0045e500(unaff_RBX);\n                        }\n                        uVar5 = uVar11;\n                        *(*0x20 + -0xc0) = 0x4270f8;\n                        uVar11 = unaff_RBX;\n                        fcn.0045e4c0(unaff_RBX, uVar5);\n                    }\n                    *(*0x20 + -0xc0) = 0x427105;\n                    fcn.0045e440(uVar11);\n                }\n                uVar11 = 0x2000;\n                *(*0x20 + -0xc0) = 0x427112;\n                uVar2 = fcn.0045e440(0x2000);\n                goto code_r0x00427112;\n            }\n            uVar5 = *(in_RAX + 0x68);\n            *(*0x20 + -0x88) = uVar5;\n            *(*0x20 + -0x18) = *(in_RAX + 0x60);\n            while( true ) {\n                unaff_SIL = uVar5;\n                if (uVar9 < uVar11) goto code_r0x004270a3;\n                if (0x1fff < uVar11 >> 0xd) goto code_r0x00427199;\n                *(*0x20 + -0x50) = uVar11;\n                iVar1 = *(in_RAX + 0x78 + (uVar11 >> 0xd) * 8);\n                iVar6 = (uVar11 & 0x1fff) * 0x80;\n                *(*0x20 + -0xc0) = 0x42717f;\n                uVar2 = fcn.0042a100(iVar1 + iVar6, iVar6, uVar9);\n                uVar11 = *(*0x20 + -0x50);\n                uVar5 = *(*0x20 + -0x88);\n                if (uVar5 <= uVar11) break;\ncode_r0x00427112:\n                *(*(*0x20 + -0x18) + uVar11 * 8) = uVar2;\n                uVar11 = uVar11 + 1;\n                uVar9 = *(*0x20 + -0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0xc0) = 0x427199;\n            fcn.0045e440(uVar5);\ncode_r0x00427199:\n            arg1 = 0x2000;\n            *(*0x20 + -0xc0) = 0x4271a6;\n            in_RAX = fcn.0045e440(0x2000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        puVar8[0x20] = unaff_RDI;\n        puVar8[0x21] = unaff_SIL;\n        *(puVar8 + -8) = 0x4271c5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = puVar8[0x20];\n        unaff_SIL = puVar8[0x21];\n        *0x20 = puVar8;\n    } while( true );\ncode_r0x004270a3:\n    iVar6 = *(*0x20 + 8);\ncode_r0x00426e72:\n    uVar10 = *(*0x20 + -0x20);\n    unaff_RBX = *(*0x20 + -0x30);\n    iVar1 = 3;\n    cVar3 = '\\x01';\ncode_r0x00426e97:\n    if ((iVar1 < 0) || (cVar3 == '\\0')) {\n        return;\n    }\n    *(*0x20 + -0x68) = iVar1;\n    uVar11 = *(iVar1 * 8 + 0x52e8a0);\n    uVar9 = -(uVar11 < 0x40);\n    uVar5 = *(iVar1 * 8 + 0x52e828);\n    *(*0x20 + -0x70) = uVar5;\n    unaff_RDI = *(iVar1 * 8 + 0x52e868);\n    *(*0x20 + -0x78) = unaff_RDI;\n    uVar4 = uVar11;\n    uVar11 = uVar10 >> (uVar4 & 0x3f) & uVar9;\n    iVar12 = (unaff_RBX >> (uVar4 & 0x3f) & uVar9) + 1;\n    *(*0x20 + -0x58) = iVar12;\n    cVar3 = '\\0';\n    while( true ) {\n        if (iVar12 <= uVar11) goto code_r0x00426e8e;\n        *(*0x20 + -0x60) = uVar11;\n        *(*0x20 + -0x91) = cVar3;\n        noname_1 = *(iVar6 + 0x28 + iVar1 * 0x18);\n        uVar9 = uVar11 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        *(*0x20 + -0x40) = *(*0x20 + -0x60) + 1;\n        uVar11 = *(*0x20 + -0x60) + 1 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        if (noname_1 < uVar11) break;\n        if (uVar11 < uVar9) {\ncode_r0x00427017:\n            *(*0x20 + -0xc0) = 0x427025;\n            fcn.0045e4e0(uVar11);\n            break;\n        }\n        *(*0x20 + -0x48) = iVar1 * 3;\n        iVar1 = noname_1 - uVar9;\n        unaff_RBX = uVar11 - uVar9;\n        noname_1 = -iVar1 >> 0x3f;\n        *(*0x20 + -0xc0) = 0x426fcd;\n        uVar11 = unaff_RBX;\n        iVar12 = fcn.00428a00(iVar1, uVar10, uVar9 << 3 & noname_1);\n        iVar6 = *(*0x20 + 8);\n        uVar10 = *(iVar6 + 8 + *(*0x20 + -0x48) * 8);\n        iVar1 = *(iVar6 + *(*0x20 + -0x48) * 8);\n        uVar9 = *(*0x20 + -0x60);\n        if (uVar10 <= uVar9) {\n            *(*0x20 + -0xc0) = 0x427017;\n            fcn.0045e420(uVar10);\n            goto code_r0x00427017;\n        }\n        if (*(iVar1 + uVar9 * 8) == iVar12) {\n            cVar3 = *(*0x20 + -0x91);\n        }\n        else {\n            *(iVar1 + uVar9 * 8) = iVar12;\n            cVar3 = '\\x01';\n        }\n        iVar1 = *(*0x20 + -0x68);\n        iVar12 = *(*0x20 + -0x58);\n        uVar5 = *(*0x20 + -0x70);\n        unaff_RDI = *(*0x20 + -0x78);\n        uVar11 = *(*0x20 + -0x40);\n        uVar10 = *(*0x20 + -0x20);\n        unaff_RBX = *(*0x20 + -0x30);\n    }\n    *(*0x20 + -0xc0) = 0x427030;\n    fcn.0045e4a0(uVar11, noname_1);\ncode_r0x00427030:\n    *(*0x20 + -0xc0) = 0x427038;\n    fcn.0045e440(uVar11);\ncode_r0x00427038:\n    uVar5 = 0x2000;\n    *(*0x20 + -0xc0) = 0x427045;\n    fcn.0045e440(0x2000);\n    uVar7 = unaff_RBX;\ncode_r0x00427045:\n    unaff_RBX = uVar9;\n    *(*0x20 + -0xc0) = 0x42704d;\n    fcn.0045e440(uVar5);\ncode_r0x0042704d:\n    do {\n        if (*(*0x20 + -0x30) >> 0x23 < 0x2000) {\n            uVar2 = *(unaff_RDI + 0x78 + (*(*0x20 + -0x30) >> 0x23) * 8);\n            unaff_RBX = (unaff_RBX & 0x1fff) << 7;\n            *(*0x20 + -0xc0) = 0x427085;\n            uVar2 = fcn.0042a100(uVar2, noname_1, unaff_RBX);\n            noname_1 = *(*0x20 + -0x38);\n            if (noname_1 < *(*0x20 + -0x80)) goto code_r0x00427097;\n            *(*0x20 + -0xc0) = 0x4270b8;\n            fcn.0045e440(*(*0x20 + -0x80));\n        }\n        *(*0x20 + -0xc0) = 0x4270c5;\n        iVar1 = fcn.0045e440(0x2000);\n        do {\n            *(iVar1 + noname_1 * 8) = 0x8000040000200;\n            noname_1 = noname_1 + 1;\ncode_r0x004270d6:\n        } while (noname_1 < uVar7);\n    } while( true );\ncode_r0x00426e8e:\n    iVar1 = iVar1 + -1;\n    goto code_r0x00426e97;\ncode_r0x00427097:\n    *(*(*0x20 + -0x10) + noname_1 * 8) = uVar2;\n    goto code_r0x004270a3;\n}\n",
        "token_count": 3728
    },
    "004276a0": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nint64_t fcn.004276a0(ulong param_1, ulong param_2, uchar *param_3, uchar *param_4)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uchar *puVar9;\n    uint64_t uVar10;\n    int64_t in_R11;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    uint64_t unaff_R15;\n    uchar in_XMM15 [16];\n    \n    while (puVar12 = *0x20 + -0xa0,  puVar7 = *0x20,  puVar12 < *(unaff_R14 + 0x10) || puVar12 == *(unaff_R14 + 0x10)) {\ncode_r0x00428259:\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + -8) = 0x428268;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    }\n    puVar7 = *0x20 + -0x120;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x30) = *0x52d3a0;\n    *(*0x20 + -0x28) = *0x52d388;\n    *(*0x20 + -0x18) = in_XMM15;\n    *(*0x20 + -0x18) = 0x428280;\n    *(*0x20 + -0x10) = *0x20 + -0x30;\n    iVar4 = 0;\n    uVar8 = 0;\n    puVar9 = NULL;\n    uVar10 = 0xffffffffffffffff;\ncode_r0x00427751:\n    if (4 < iVar4) {\n        puVar2 = uVar8 >> 0xd;\n        if (puVar2 < 0x2000) {\n            *(*0x20 + -0x38) = uVar8;\n            uVar8 = (uVar8 & 0x1fff) << 7;\n            *(*0x20 + -0x128) = 0x4278a5;\n            iVar4 = fcn.0042a2e0(0);\n            if (iVar4 != -1) {\n                *(*0x20 + -0x90) = iVar4;\n                *(*0x20 + -0x48) = *(*0x20 + -0x38) << 0x16;\n                *(*0x20 + -0x128) = 0x427903;\n                (**(*0x20 + -0x18))(*(*0x20 + -0x38) << 0x16, *0x20 + -0x18, 0xffff800000000000);\n                *(*0x20 + -0x128) = 0x427918;\n                fcn.004275c0();\n                return *(*0x20 + -0x90) * 0x2000 + *(*0x20 + -0x48) + -0x800000000000;\n            }\n            uVar10 = *(*(*0x20 + 8) + 0x68);\n            puVar2 = *(*(*0x20 + 8) + 0x60);\n            if (*(*0x20 + -0x38) < uVar10) {\n                uVar8 = *(puVar2 + *(*0x20 + -0x38) * 8);\n                uVar10 = uVar8 & 0x1fffff;\n                if ((uVar8 & 0x8000000000000000) != 0) {\n                    uVar10 = 0x200000;\n                }\n                if (uVar8 < 0) {\n                    uVar6 = 0x200000;\n                }\n                else {\n                    uVar6 = uVar8 >> 0x15 & 0x1fffff;\n                }\n                *(*0x20 + -0x100) = uVar6;\n                *(*0x20 + -0xf8) = uVar10;\n                if (-1 < uVar8) goto code_r0x00427ac5;\n                uVar8 = 0x200000;\n                do {\n                    *(*0x20 + -0x108) = uVar8;\n                    *(*0x20 + -0x128) = 0x4279ca;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x128) = 0x4279db;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x4279e5;\n                    fcn.004355c0();\n                    *(*0x20 + -0x128) = 0x4279f6;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427a05;\n                    fcn.004355c0();\n                    *(*0x20 + -0x128) = 0x427a16;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427a25;\n                    fcn.004354c0();\n                    *(*0x20 + -0x128) = 0x427a36;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427a45;\n                    fcn.004354c0();\n                    *(*0x20 + -0x128) = 0x427a56;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427a65;\n                    fcn.004354c0();\n                    *(*0x20 + -0x128) = 0x427a76;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427a7b;\n                    fcn.00434f40();\n                    *(*0x20 + -0x128) = 0x427a85;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x128) = 0x427a96;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427aa5;\n                    fcn.004354c0();\n                    *(*0x20 + -0x128) = 0x427aaa;\n                    fcn.00435120();\n                    *(*0x20 + -0x128) = 0x427aaf;\n                    fcn.00434f40();\n                    *(*0x20 + -0x128) = 0x427ac5;\n                    fcn.00433580();\ncode_r0x00427ac5:\n                    uVar8 = uVar8 >> 0x2a & 0x1fffff;\n                } while( true );\n            }\n            *(*0x20 + -0x128) = 0x427af0;\n            fcn.0045e420(uVar10);\n        }\n        *(*0x20 + -0x128) = 0x427afd;\n        fcn.0045e440(0x2000);\n        goto code_r0x00427afd;\n    }\n    param_3 = 0x52e820;\n    uVar6 = *(iVar4 * 8 + 0x52e820);\n    uVar1 = -(uVar6 < 0x40);\n    uVar3 = uVar6;\n    puVar11 = 1 << (uVar3 & 0x3f) & uVar1;\n    unaff_R13 = 0x52e860;\n    unaff_R15 = *(iVar4 * 8 + 0x52e860);\n    puVar5 = uVar8 << (uVar3 & 0x3f) & uVar1;\n    puVar12 = *(in_RAX + 0x10 + iVar4 * 0x18);\n    param_4 = *(in_RAX + iVar4 * 0x18);\n    puVar2 = puVar5 + puVar11;\n    in_R11 = iVar4;\n    if (puVar2 <= puVar12) {\n        if (puVar5 <= puVar2) {\n            *(*0x20 + -0x70) = puVar5;\n            *(*0x20 + -0xa8) = uVar10;\n            *(*0x20 + -0xa0) = puVar9;\n            uVar8 = 0x52e8a0;\n            uVar10 = *(iVar4 * 8 + 0x52e8a0);\n            param_4 = param_4 + (*(*0x20 + -0x70) << 3 & puVar5 - puVar12 >> 0x3f);\n            uVar10 = *(in_RAX + 0x10078) + 0x800000000000U >> (uVar10 & 0x3f) & -(uVar10 < 0x40);\n            param_3 = *(*0x20 + -0x70);\n            if ((-puVar11 & uVar10) == param_3) {\n                puVar12 = puVar11 + -1 & uVar10;\n            }\n            else {\n                puVar12 = NULL;\n            }\n            *(*0x20 + -0x38) = iVar4;\n            *(*0x20 + -0x40) = puVar11;\n            *(*0x20 + -0xb0) = unaff_R15;\n            *(*0x20 + -0x20) = param_4;\n            *(*0x20 + -0x98) = puVar12;\n            puVar9 = NULL;\n            unaff_R13 = 0;\n            puVar2 = puVar11;\n            do {\n                if (puVar2 <= puVar12) {\ncode_r0x00427d8e:\n                    if (unaff_RBX <= puVar9) {\n                        *(*0x20 + -0x68) = unaff_R13;\n                        *(*0x20 + -0x58) = *(uVar8 + in_R11 * 8);\n                        *(*0x20 + -0x128) = 0x428070;\n                        fcn.004275c0();\n                        return (-(*(*0x20 + -0x58) < 0x40) & *(*0x20 + -0x70) << (*(*0x20 + -0x58) & 0x3f)) +\n                               *(*0x20 + -0x68) * 0x2000 + -0x800000000000;\n                    }\n                    if (in_R11 == 0) {\n                        return 0;\n                    }\n                    uVar8 = *(*0x20 + -0xa0);\n                    uVar10 = uVar8 & 0x1fffff;\n                    unaff_R13 = 0x200000;\n                    if ((uVar8 & 0x8000000000000000) != 0) {\n                        uVar10 = 0x200000;\n                    }\n                    if (uVar8 < 0) {\n                        unaff_R15 = 0x200000;\n                    }\n                    else {\n                        unaff_R15 = uVar8 >> 0x15 & 0x1fffff;\n                    }\n                    *(*0x20 + -0xd0) = unaff_R15;\n                    *(*0x20 + -200) = uVar10;\n                    if (uVar8 < 0) {\n                        puVar9 = 0x200000;\n                    }\n                    else {\n                        puVar9 = uVar8 >> 0x2a & 0x1fffff;\n                    }\n                    *(*0x20 + -0xd8) = puVar9;\n                    *(*0x20 + -0x128) = 0x427e2e;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x128) = 0x427e3f;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427e53;\n                    fcn.004355c0(*(*0x20 + -0x38) + -1);\n                    *(*0x20 + -0x128) = 0x427e65;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427e6f;\n                    fcn.004355c0();\n                    *(*0x20 + -0x128) = 0x427e85;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427e8f;\n                    fcn.004354c0();\n                    *(*0x20 + -0x128) = 0x427ea5;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427eaf;\n                    fcn.004354c0();\n                    *(*0x20 + -0x128) = 0x427ec5;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427ecf;\n                    fcn.004354c0();\n                    *(*0x20 + -0x128) = 0x427ed4;\n                    fcn.00435120();\n                    *(*0x20 + -0x128) = 0x427ed9;\n                    fcn.00434f40();\n                    *(*0x20 + -0x128) = 0x427ede;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x128) = 0x427eef;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427efc;\n                    fcn.004355c0();\n                    *(*0x20 + -0x128) = 0x427f0d;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427f1a;\n                    fcn.004354c0();\n                    *(*0x20 + -0x128) = 0x427f2b;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427f38;\n                    fcn.004355c0();\n                    *(*0x20 + -0x128) = 0x427f3d;\n                    fcn.00435120();\n                    *(*0x20 + -0x128) = 0x427f45;\n                    fcn.00434f40();\n                    *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x128) = 0x427f65;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x128) = 0x427f76;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427f85;\n                    fcn.00435620();\n                    *(*0x20 + -0x128) = 0x427f96;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x427fa5;\n                    fcn.004355c0();\n                    *(*0x20 + -0x128) = 0x427faa;\n                    fcn.00435120();\n                    *(*0x20 + -0x128) = 0x427faf;\n                    fcn.00434f40();\n                    *(*0x20 + -0x58) = *(*(*0x20 + -0x38) * 8 + 0x52e8a0);\n                    puVar2 = *(*(*0x20 + -0x38) * 8 + 0x52e820);\n                    *(*0x20 + -0x60) = puVar2;\n                    *(*0x20 + -0x128) = 0x427fe5;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x128) = 0x427ff6;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x428005;\n                    fcn.004354c0();\n                    *(*0x20 + -0x128) = 0x428016;\n                    fcn.004357c0();\n                    *(*0x20 + -0x128) = 0x428025;\n                    fcn.004354c0();\n                    *(*0x20 + -0x128) = 0x42802a;\n                    fcn.00435120();\n                    *(*0x20 + -0x128) = 0x42802f;\n                    fcn.00434f40();\n                    iVar4 = 0;\n                    while (iVar4 < *(*0x20 + -0x40)) {\n                        uVar8 = *(*(*0x20 + -0x20) + iVar4 * 8);\n                        uVar10 = uVar8 & 0x1fffff;\n                        param_3 = 0x200000;\n                        if ((uVar8 & 0x8000000000000000) != 0) {\n                            uVar10 = 0x200000;\n                        }\n                        if (uVar8 < 0) {\n                            param_4 = 0x200000;\n                        }\n                        else {\n                            param_4 = uVar8 >> 0x15 & 0x1fffff;\n                            puVar9 = param_4;\n                        }\n                        *(*0x20 + -0x88) = iVar4;\n                        *(*0x20 + -0xe8) = param_4;\n                        *(*0x20 + -0xe0) = uVar10;\n                        if (uVar8 < 0) {\n                            uVar8 = 0x200000;\n                        }\n                        else {\n                            uVar8 = uVar8 >> 0x2a & 0x1fffff;\n                        }\n                        *(*0x20 + -0xf0) = uVar8;\n                        *(*0x20 + -0x128) = 0x4280cb;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x128) = 0x4280dc;\n                        fcn.004357c0();\n                        *(*0x20 + -0x128) = 0x4280e9;\n                        fcn.004355c0();\n                        *(*0x20 + -0x128) = 0x4280fa;\n                        fcn.004357c0();\n                        puVar2 = *(*0x20 + -0x88) + *(*0x20 + -0x70);\n                        *(*0x20 + -0x128) = 0x428116;\n                        fcn.004355c0();\n                        *(*0x20 + -0x128) = 0x428127;\n                        fcn.004357c0();\n                        *(*0x20 + -0x128) = 0x428131;\n                        fcn.004354c0();\n                        *(*0x20 + -0x128) = 0x428145;\n                        fcn.004357c0();\n                        *(*0x20 + -0x128) = 0x42814f;\n                        fcn.004354c0();\n                        *(*0x20 + -0x128) = 0x428165;\n                        fcn.004357c0();\n                        *(*0x20 + -0x128) = 0x42816f;\n                        fcn.004354c0();\n                        *(*0x20 + -0x128) = 0x428185;\n                        fcn.004357c0();\n                        *(*0x20 + -0x128) = 0x42818a;\n                        fcn.00434f40();\n                        iVar4 = *(*0x20 + -0x88) + 1;\n                    }\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x128) = 0x42823d;\n                    fcn.00433580();\ncode_r0x0042823d:\n                    *(*0x20 + -0x128) = 0x428248;\n                    fcn.0045e420(puVar2);\n                    puVar12 = puVar9;\n                    break;\n                }\n                if (puVar2 <= puVar12) goto code_r0x0042823d;\n                puVar5 = *(param_4 + puVar12 * 8);\n                if (puVar5 == NULL) {\n                    puVar9 = NULL;\n                    goto code_r0x00427afd;\n                }\n                *(*0x20 + -0x80) = puVar12;\n                *(*0x20 + -0x50) = puVar5;\n                *(*0x20 + -0x68) = unaff_R13;\n                *(*0x20 + -0xb8) = puVar9;\n                uVar10 = puVar5 & 0x1fffff;\n                if ((puVar5 & 0x8000000000000000) != 0) {\n                    uVar10 = 0x200000;\n                }\n                *(*0x20 + -0xc0) = uVar10;\n                uVar8 = *(uVar8 + in_R11 * 8);\n                unaff_R13 = -(uVar8 < 0x40);\n                *(*0x20 + -0x78) = param_3 + puVar12;\n                in_R11 = 1 << (unaff_R15 & 0x3f);\n                *(*0x20 + -0x128) = 0x427bc7;\n                (**(*0x20 + -0x18))(uVar8, *0x20 + -0x18, \n                                    (param_3 + puVar12 << (uVar8 & 0x3f) & unaff_R13) - 0x800000000000);\n                iVar4 = *(*0x20 + -0xb8);\n                puVar9 = iVar4 + *(*0x20 + -0xc0);\n                unaff_RBX = *(*0x20 + 0x10);\n                if (unaff_RBX <= puVar9) {\n                    unaff_R13 = *(*0x20 + -0x68);\n                    if (iVar4 == 0) {\n                        unaff_R13 = *(*0x20 + -0x80) << (*(*0x20 + -0xb0) & 0x3f) & -(*(*0x20 + -0xb0) < 0x40);\n                    }\n                    uVar8 = 0x52e8a0;\n                    param_4 = *(*0x20 + -0x20);\n                    in_R11 = *(*0x20 + -0x38);\n                    param_3 = *(*0x20 + -0x70);\n                    goto code_r0x00427d8e;\n                }\n                puVar9 = *(*0x20 + -0x50);\n                if (puVar9 < 0) {\n                    puVar2 = 0x200000;\n                    param_4 = puVar5;\n                }\n                else {\n                    puVar2 = puVar9 >> 0x15 & 0x1fffff;\n                    param_4 = puVar9;\n                }\n                if (unaff_RBX <= puVar2) goto code_r0x00427730;\n                if (iVar4 == 0) {\n                    uVar8 = *(*0x20 + -0xb0);\n                }\n                else {\n                    uVar8 = *(*0x20 + -0xb0);\n                    uVar10 = 1 << (uVar8 & 0x3f) & -(uVar8 < 0x40);\n                    if (uVar10 <= *(*0x20 + -0xc0)) {\n                        puVar9 = iVar4 + uVar10;\n                        puVar2 = *(*0x20 + -0x40);\n                        uVar8 = 0x52e8a0;\n                        param_4 = *(*0x20 + -0x20);\n                        in_R11 = *(*0x20 + -0x38);\n                        puVar12 = *(*0x20 + -0x80);\n                        unaff_R15 = *(*0x20 + -0xb0);\n                        unaff_R13 = *(*0x20 + -0x68);\n                        param_3 = *(*0x20 + -0x70);\n                        goto code_r0x00427afd;\n                    }\n                }\n                if (puVar9 < 0) {\n                    puVar9 = 0x200000;\n                }\n                else {\n                    puVar9 = puVar9 >> 0x2a & 0x1fffff;\n                }\n                puVar12 = *(*0x20 + -0x80);\n                unaff_R13 = (-(uVar8 < 0x40) & puVar12 + 1 << (uVar8 & 0x3f)) - puVar9;\n                puVar2 = *(*0x20 + -0x40);\n                param_4 = *(*0x20 + -0x20);\n                in_R11 = *(*0x20 + -0x38);\n                unaff_R15 = *(*0x20 + -0xb0);\n                uVar8 = 0x52e8a0;\n                param_3 = *(*0x20 + -0x70);\ncode_r0x00427afd:\n                puVar12 = puVar12 + 1;\n            } while( true );\n        }\n        *(*0x20 + -0x128) = 0x428250;\n        fcn.0045e4e0(puVar2);\n    }\n    *(*0x20 + -0x128) = 0x428258;\n    in_RAX = fcn.0045e4a0(puVar2, puVar12);\n    goto code_r0x00428259;\ncode_r0x00427730:\n    iVar4 = *(*0x20 + -0x38) + 1;\n    in_RAX = *(*0x20 + 8);\n    uVar8 = *(*0x20 + -0x78);\n    uVar10 = uVar8;\n    param_3 = puVar9;\n    goto code_r0x00427751;\n}\n",
        "token_count": 5982
    },
    "004296a0": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nint64_t fcn.004296a0(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar3 = in_RAX[1];\n    uVar2 = unaff_RBX - 1;\n    uVar1 = 1;\n    do {\n        if (uVar2 == 0) {\ncode_r0x004296fb:\n            uVar2 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            if (uVar3 == 0) {\n                uVar2 = 0x40;\n            }\ncode_r0x00429708:\n            if (uVar2 < 0x40) {\n                uVar3 = (-(unaff_RBX < 0x40) & 1 << (unaff_RBX & 0x3f)) - 1 << (uVar2 & 0x3f);\n                if (*0x598354 == '\\0') {\n                    fcn.00402100();\n                }\n                else {\n                    popcnt(in_RAX[2] & uVar3);\n                }\n                uVar3 = ~uVar3;\n                in_RAX[1] = in_RAX[1] & uVar3;\n                in_RAX[2] = in_RAX[2] & uVar3;\n                return uVar2 * 0x2000 + *in_RAX;\n            }\n            return 0;\n        }\n        if (uVar2 <= uVar1) {\n            uVar3 = uVar3 >> (uVar2 & 0x3f) & uVar3;\n            goto code_r0x004296fb;\n        }\n        uVar3 = uVar3 & uVar3 >> (uVar1 & 0x3f);\n        if (uVar3 == 0) {\n            uVar2 = 0x40;\n            goto code_r0x00429708;\n        }\n        uVar2 = uVar2 - uVar1;\n        uVar1 = uVar1 << 1;\n    } while( true );\n}\n",
        "token_count": 567
    },
    "00403761": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuchar fcn.00403761(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x56a790);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x10400 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 != 0) {\n        return *(iVar2 + 0x65);\n    }\n    return 0;\n}\n",
        "token_count": 249
    },
    "004134e0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nulong fcn.004134e0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = fcn.00424320(2, (in_RAX + 0x3fU >> 6) + 0x1fff >> 0xd);\n    fcn.004130e0();\n    return uVar1;\n}\n",
        "token_count": 140
    },
    "004201a0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.004201a0(void)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    uint64_t *in_RAX;\n    uint64_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar5 = *in_RAX;\n    uVar8 = uVar5;\n    if (uVar5 < 0) {\n        uVar8 = -uVar5;\n    }\n    if (*0x52d3a0 == uVar8 - 0x800000000000) {\n        return 0;\n    }\n    uVar9 = uVar8 >> 0x19;\n    while( true ) {\n        iVar6 = uVar9;\n        if (iVar6 < *(in_RAX + 4)) {\n            do {\n                uVar5 = *in_RAX;\n                if (uVar5 < 0) {\n                    return 0;\n                }\n                LOCK();\n                uVar8 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar5 == uVar8) * (*in_RAX ^ *0x52d3a0 + 0x800000000000U);\n            } while (uVar5 != uVar8);\n            return 0;\n        }\n        if (in_RAX[2] <= iVar6) break;\n        uVar1 = *(in_RAX[1] + iVar6);\n        if (uVar1 != 0) {\n            uVar7 = uVar1 + uVar1 + 1;\n            uVar3 = 0x1f;\n            if (uVar7 != 0) {\n                for (; uVar7 >> uVar3 == 0; uVar3 = uVar3 - 1) {\n                }\n            }\n            uVar9 = (uVar3 + iVar6 * 8) - 1;\n            if (uVar9 != uVar8 >> 0x16) {\n                if (uVar5 < 0) {\n                    LOCK();\n                    *in_RAX = *in_RAX ^ (-*in_RAX == uVar8) * (*in_RAX ^ uVar9 * 0x400000 + 0x3fe000);\n                }\n                else {\n                    uVar5 = uVar9 * 0x400000 + 0x3fe000;\n                    do {\n                        uVar8 = *in_RAX;\n                        if (uVar8 < uVar5) {\n                            return uVar9;\n                        }\n                        LOCK();\n                        uVar2 = *in_RAX;\n                        *in_RAX = *in_RAX ^ (uVar8 == uVar2) * (*in_RAX ^ uVar5);\n                    } while (uVar8 != uVar2);\n                }\n                return uVar9;\n            }\n            return uVar9;\n        }\n        uVar9 = iVar6 - 1;\n    }\n    fcn.0045e420(in_RAX[2]);\n    pcVar4 = swi(3);\n    uVar5 = (*pcVar4)();\n    return uVar5;\n}\n",
        "token_count": 709
    },
    "004269e0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.004269e0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = arg1 + 0x3fffff + unaff_RBX & 0xffffffffffc00000;\n            *(*0x20 + -0x38) = uVar3;\n            *(*0x20 + -0x40) = unaff_RBX & 0xffffffffffc00000;\n            *(*0x20 + -0x68) = 0x426a30;\n            fcn.00428d20(uVar3);\n            iVar2 = *(*0x20 + 8);\n            iVar1 = *(*0x20 + -0x40);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            if ((*(iVar2 + 0x10080) == 0) || (uVar3 < *(iVar2 + 0x10080))) {\n                *(iVar2 + 0x10080) = uVar3;\n            }\n            *(*0x20 + -0x10) = iVar1 + 0x800000000000U;\n            *(*0x20 + -0x18) = uVar3;\n            iVar1 = *(*0x20 + -0x38);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            *(*0x20 + -0x20) = uVar3;\n            if (*(iVar2 + 0x10088) < uVar3) {\n                *(iVar2 + 0x10088) = uVar3;\n            }\n            *(*0x20 + -0x68) = 0x426a9d;\n            fcn.0042bca0();\n            *(*0x20 + -0x68) = 0x426abd;\n            fcn.0042c100(iVar1);\n            iVar2 = *(*0x20 + 8);\n            if (*(*0x20 + -0x10) < *(iVar2 + 0x10078) + 0x800000000000U) {\n                unaff_RBX = *(*0x20 + -0x40);\n                *(iVar2 + 0x10078) = unaff_RBX;\n            }\n            else {\n                unaff_RBX = *(*0x20 + -0x40);\n            }\n            uVar3 = *(*0x20 + -0x20);\n            uVar5 = *(*0x20 + -0x18);\ncode_r0x00426b45:\n            if (uVar3 <= uVar5) {\n                *(*0x20 + -0x68) = 0x426bba;\n                fcn.00426c20(*(*0x20 + 0x18) >> 0xd);\n                return;\n            }\n            uVar3 = uVar5 >> 0xd;\n            if (0x1fff < uVar3) goto code_r0x00426bd5;\n            *(*0x20 + -0x28) = uVar5;\n            if (*(iVar2 + 0x78 + uVar3 * 8) != 0) {\ncode_r0x00426b04:\n                *(*0x20 + -0x68) = 0x426b2b;\n                fcn.00429cc0(0x200);\n                uVar5 = *(*0x20 + -0x28) + 1;\n                uVar3 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + -0x40);\n                goto code_r0x00426b45;\n            }\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x68) = 0x426b7f;\n            iVar2 = fcn.004147e0();\n            if (iVar2 != 0) {\n                *(*(*0x20 + 8) + 0x78 + *(*0x20 + -0x30) * 8) = iVar2;\n                goto code_r0x00426b04;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x68) = 0x426bd5;\n            fcn.00433580();\ncode_r0x00426bd5:\n            arg1 = 0x2000;\n            *(*0x20 + -0x68) = 0x426be5;\n            in_RAX = fcn.0045e440(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x426bfa;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1323
    },
    "00458fc1": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.00458fc1(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x56a790);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x10400 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        uVar1 = CONCAT71(0xdeaddeaddeadde, in_RAX != 0xdeaddeaddeaddead);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1 & 0xffffffff;\n}\n",
        "token_count": 286
    },
    "004765a0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004765a0(int64_t arg1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return in_RAX << 8;\n            }\n            if (arg1 + 0x15cU < 0x2b8) {\n                iVar5 = (arg1 + 0x15cU) * 0x10;\n                uVar1 = *(iVar5 + 0x53adc4);\n                uVar2 = *(iVar5 + 0x53adc8);\n                uVar3 = *(iVar5 + 0x53adcc);\n                *(*0x20 + -0x18) = *(iVar5 + 0x53adc0);\n                *(*0x20 + -0x14) = uVar1;\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0xc) = uVar3;\n                if (arg1 < 0) {\n                    *(*0x20 + -0x18) = *(*0x20 + -0x18) + 1;\n                }\n                uVar6 = SUB168(ZEXT816(*(*0x20 + -0x18)) * ZEXT816(in_RAX) >> 0x40, 0);\n                uVar4 = SUB168(ZEXT816(*(*0x20 + -0x10)) * ZEXT816(in_RAX), 0);\n                return (SUB168(ZEXT816(*(*0x20 + -0x10)) * ZEXT816(in_RAX) >> 0x40, 0) + CARRY8(uVar4, uVar6)) * 0x200 |\n                       uVar4 + uVar6 >> 0x37;\n            }\n            unaff_RBX = 0x4ca498;\n            *(*0x20 + -0x30) = 0x476694;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x4766a9;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 731
    },
    "00449800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.00449800(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0045e6d0();\n    fcn.00449340(5);\n    return;\n}\n",
        "token_count": 135
    },
    "0040a2a0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a2a0(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t *unaff_RBX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = unaff_RBX[1] + 1;\n            unaff_RBX[1] = uVar1;\n            uVar2 = unaff_RBX << 0x10 | uVar1 & 0x7ffff;\n            puVar3 = (uVar2 >> 0x13) * 8;\n            if (unaff_RBX == puVar3) {\n                do {\n                    uVar1 = *in_RAX;\n                    *unaff_RBX = uVar1;\n                    LOCK();\n                    bVar5 = uVar1 == *in_RAX;\n                    *in_RAX = *in_RAX ^ bVar5 * (*in_RAX ^ uVar2);\n                } while (!bVar5);\n                return uVar1 ^ !bVar5 * (uVar1 ^ *in_RAX);\n            }\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x40) = 0x40a327;\n            fcn.00434ec0();\n            *(*0x20 + -0x40) = 0x40a338;\n            fcn.004357c0();\n            *(*0x20 + -0x40) = 0x40a345;\n            fcn.00435740();\n            *(*0x20 + -0x40) = 0x40a356;\n            fcn.004357c0();\n            *(*0x20 + -0x40) = 0x40a365;\n            fcn.00435620();\n            *(*0x20 + -0x40) = 0x40a376;\n            fcn.004357c0();\n            *(*0x20 + -0x40) = 0x40a385;\n            fcn.00435620();\n            *(*0x20 + -0x40) = 0x40a396;\n            fcn.004357c0();\n            *(*0x20 + -0x40) = 0x40a3a5;\n            fcn.00435740();\n            *(*0x20 + -0x40) = 0x40a3aa;\n            fcn.00435120();\n            *(*0x20 + -0x40) = 0x40a3af;\n            fcn.00434f40();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x40) = 0x40a3c5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x40a3d5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 889
    },
    "0040a400": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.0040a400(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x40a427;\n            iVar1 = fcn.004119e0(0);\n            if (iVar1 == 0) {\n                if (*(*0x20 + 8) == ((*(*0x20 + 8) << 0x10 | 0x7ffffU) >> 0x13) * 8) {\n                    return;\n                }\n                *(*0x20 + -0x30) = 0x40a45a;\n                fcn.00434ec0();\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x30) = 0x40a469;\n                fcn.00434ec0();\n                *(*0x20 + -0x30) = 0x40a47a;\n                fcn.004357c0();\n                *(*0x20 + -0x30) = 0x40a485;\n                fcn.00435620();\n                *(*0x20 + -0x30) = 0x40a48a;\n                fcn.00435120();\n                *(*0x20 + -0x30) = 0x40a48f;\n                fcn.00434f40();\n                *(*0x20 + -0x30) = 0x40a4a5;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x30) = 0x40a4b6;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x40a4c5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 579
    },
    "00409140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.00409140(void)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    int64_t iVar5;\n    \n    if (unaff_RBX < 0) {\n        LOCK();\n        *(in_RAX + 0x500) = *(in_RAX + 0x500) + 1;\n        return;\n    }\n    iVar3 = 0x3f;\n    if (unaff_RBX != 0) {\n        for (; unaff_RBX >> iVar3 == 0; iVar3 = iVar3 + -1) {\n        }\n    }\n    if (unaff_RBX == 0) {\n        iVar3 = -1;\n    }\n    iVar5 = iVar3 + 1;\n    if (iVar5 < 9) {\n        uVar4 = 0;\n        iVar5 = 9;\n    }\n    else {\n        uVar4 = iVar3 - 7;\n    }\n    if (uVar4 < 0x28) {\n        uVar4 = (unaff_RBX >> ((iVar5 - 3U | ~-(iVar5 - 3U < 0x40)) & 0x3f) & 3) + uVar4 * 4;\n        if (uVar4 < 0xa0) {\n            piVar1 = in_RAX + uVar4 * 8;\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n            return;\n        }\n        fcn.0045e440(0xa0);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    LOCK();\n    *(in_RAX + 0x508) = *(in_RAX + 0x508) + 1;\n    return;\n}\n",
        "token_count": 420
    },
    "00437f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint32_t fcn.00437f20(ulong arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 9) && (arg1 == 4)) {\n                *(in_RAX + 0xb0) = 0x1c;\n                uVar3 = 0;\n                LOCK();\n                puVar1 = in_RAX + 0x90;\n                uVar2 = *puVar1;\n                if (uVar2 == 9) {\n                    *puVar1 = 4;\n                }\n                else {\n                    uVar3 = *puVar1;\n                }\n                return uVar3 & 0xffffff00 | uVar2 == 9;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x437f78;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x14) = arg1;\n        *(puVar4 + -8) = 0x437f8b;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x14);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 490
    },
    "0044d880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nulong fcn.0044d880(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    do {\n        iVar2 = *(in_RAX + 8);\n        switch(iVar2) {\n        case 0:\n            return 0;\n        case 1:\n        case 8:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (iVar2 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                iVar4 = *in_RAX;\n                LOCK();\n                if (*(in_RAX + 8) == 6) {\n                    *(in_RAX + 8) = 3;\n                }\n                else {\n                    fcn.0044f6e0();\n                }\n                iVar2 = *(iVar3 + 0xd8);\n                *(iVar3 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                LOCK();\n                *(iVar4 + 0x229c) = *(iVar4 + 0x229c) + 1;\n                return 1;\n            }\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            break;\n        case 2:\n        case 9:\n            fcn.0045bc80();\n            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n            break;\n        case 3:\n        case 4:\n        case 5:\n            return 0;\n        case 6:\n            fcn.0045bc80();\n            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n            break;\n        case 7:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (iVar2 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                iVar4 = *in_RAX;\n                LOCK();\n                if (*(in_RAX + 8) == 6) {\n                    *(in_RAX + 8) = 3;\n                }\n                else {\n                    fcn.0044f6e0();\n                }\n                iVar2 = *(iVar3 + 0xd8);\n                *(iVar3 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                LOCK();\n                *(iVar4 + 0x229c) = *(iVar4 + 0x229c) + 1;\n                return 1;\n            }\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            break;\n        default:\n            fcn.0044f6e0();\n        }\n    } while( true );\n}\n",
        "token_count": 951
    },
    "0044dec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuchar fcn.0044dec0(int64_t *arg1, ulong noname_1, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    char cVar7;\n    int64_t *in_RAX;\n    int32_t iVar8;\n    int64_t iVar9;\n    ulong arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x30) = arg3;\n            if (0 < unaff_RBX) {\n                if (-1 < arg1) break;\n                *(*0x20 + -0x48) = 0x44e35b;\n                fcn.00433580();\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x48) = 0x44e36c;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + 0x30) = arg3;\n        *(puVar10 + 0x38) = arg4;\n        *(puVar10 + -8) = 0x44e395;\n        fcn.0045bdc0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        arg3 = *(puVar10 + 0x30);\n        arg4 = *(puVar10 + 0x38);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 0x38) = arg4;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + -0x10) = unaff_RSI;\ncode_r0x0044df1c:\n    iVar8 = *(in_RAX + 8);\n    switch(iVar8) {\n    case 0:\n    case 5:\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        iVar9 = *(unaff_R14 + 0x30);\n        LOCK();\n        if (iVar8 == *(in_RAX + 8)) {\n            *(in_RAX + 8) = 6;\n            cVar7 = '\\x01';\n            arg2 = 0;\n            goto code_r0x0044e172;\n        }\n        iVar8 = *(iVar9 + 0xd8);\n        *(iVar9 + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x0044df1c;\n    case 1:\n    case 7:\n    case 8:\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        iVar9 = *(unaff_R14 + 0x30);\n        LOCK();\n        if (iVar8 == *(in_RAX + 8)) {\n            *(in_RAX + 8) = 6;\n            cVar7 = '\\0';\n            arg2 = 1;\n            goto code_r0x0044e172;\n        }\n        iVar8 = *(iVar9 + 0xd8);\n        *(iVar9 + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x0044df1c;\n    case 2:\n    case 4:\n    case 9:\n        *(*0x20 + -0x40) = 0x4b2ad0;\n        *(*0x20 + -0x48) = 0x44e0d5;\n        fcn.0045bc80();\n        unaff_R14 = **(in_GS_OFFSET + *0x598520);\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x0044df1c;\n    case 3:\n        break;\n    case 6:\n        *(*0x20 + -0x40) = 0x4b2ad0;\n        *(*0x20 + -0x48) = 0x44e015;\n        fcn.0045bc80();\n        unaff_R14 = **(in_GS_OFFSET + *0x598520);\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x0044df1c;\n    default:\n        *(*0x20 + -0x48) = 0x44e11a;\n        fcn.0044f6e0();\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x0044df1c;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar9 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (iVar8 != *(in_RAX + 8)) {\n        iVar8 = *(iVar9 + 0xd8);\n        *(iVar9 + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x0044df1c;\n    }\n    *(in_RAX + 8) = 6;\n    LOCK();\n    *(*in_RAX + 0x229c) = *(*in_RAX + 0x229c) + -1;\n    cVar7 = '\\0';\n    arg2 = 0;\ncode_r0x0044e172:\n    in_RAX[2] = arg1;\n    if (*0x5985b0 == 0) {\n        in_RAX[3] = unaff_RDI;\n    }\n    else {\n        arg1 = in_RAX + 3;\n        *(*0x20 + -0x48) = 0x44e19a;\n        cVar7 = fcn.0045e0a0(arg1, unaff_RDI, arg3, arg4);\n    }\n    in_RAX[4] = unaff_RSI;\n    if (*0x5985b0 == 0) {\n        in_RAX[5] = arg3;\n    }\n    else {\n        *(*0x20 + -0x48) = 0x44e1b9;\n        cVar7 = fcn.0045e100(arg1, arg2, arg3, arg4);\n    }\n    *(*0x20 + -0x28) = iVar9;\n    *(*0x20 + -0x2d) = arg2;\n    in_RAX[6] = arg4;\n    if (cVar7 == '\\0') {\n        in_RAX[7] = unaff_RBX;\n        iVar8 = 8;\n        if (in_RAX[1] != unaff_RBX && unaff_RBX <= in_RAX[1]) {\n            iVar8 = 7;\n        }\n        iVar4 = *in_RAX;\n        if (iVar8 == 7) {\n            do {\n                uVar5 = *(iVar4 + 0x1208);\n                if ((uVar5 != 0) && (uVar5 < unaff_RBX)) break;\n                LOCK();\n                puVar2 = iVar4 + 0x1208;\n                uVar6 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar5 == uVar6) * (*puVar2 ^ unaff_RBX);\n            } while (uVar5 != uVar6);\n        }\n        LOCK();\n        if (*(in_RAX + 8) == 6) {\n            *(in_RAX + 8) = iVar8;\n        }\n        else {\n            *(*0x20 + -0x2c) = iVar8;\n            *(*0x20 + -0x48) = 0x44e2b7;\n            fcn.0044f6e0();\n            iVar8 = *(*0x20 + -0x2c);\n            iVar9 = *(*0x20 + -0x28);\n        }\n        iVar3 = *(iVar9 + 0xd8);\n        *(iVar9 + 0xd8) = iVar3 + -1;\n        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        if (iVar8 == 7) {\n            *(*0x20 + -0x48) = 0x44e30f;\n            fcn.0043bf40();\n        }\n    }\n    else {\n        in_RAX[1] = unaff_RBX;\n        iVar9 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(*0x20 + -0x18) = iVar9;\n        iVar9 = iVar9 + 0x2278;\n        *(*0x20 + -0x20) = iVar9;\n        *(*0x20 + -0x48) = 0x44e21c;\n        fcn.0040a520();\n        *(*0x20 + -0x48) = 0x44e22b;\n        fcn.0044d6e0(iVar9, arg2, arg3, arg4);\n        *(*0x20 + -0x48) = 0x44e237;\n        fcn.0040a740();\n        LOCK();\n        if (*(*(*0x20 + 8) + 0x40) == 6) {\n            *(*(*0x20 + 8) + 0x40) = 1;\n        }\n        else {\n            *(*0x20 + -0x48) = 0x44e257;\n            fcn.0044f6e0();\n        }\n        iVar8 = *(*(*0x20 + -0x28) + 0xd8);\n        *(*(*0x20 + -0x28) + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        *(*0x20 + -0x48) = 0x44e28d;\n        fcn.0043bf40();\n    }\n    return *(*0x20 + -0x2d);\n}\n",
        "token_count": 3066
    },
    "0044e600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.0044e600(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *noname_0;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *arg1_00;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x1208) == 0) || (unaff_RBX < *(in_RAX + 0x1208))) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(in_RAX + 0x1208) = 0;\n            noname_0 = NULL;\n            arg1 = 0;\n            unaff_RBX = 0;\n            iVar3 = 0;\n            while( true ) {\n                arg1_00 = *(in_RAX + 0x2288);\n                if (arg1_00 <= noname_0) {\n                    if (unaff_RBX != 0) {\n                        *(*0x20 + -0x88) = 0x44e8b9;\n                        fcn.0044e900(unaff_RBX);\n                    }\n                    return;\n                }\n                if (arg1_00 <= noname_0) goto code_r0x0044e8d4;\n                arg1_00 = *(*(in_RAX + 0x2280) + noname_0 * 8);\n                if (in_RAX != *arg1_00) break;\n                *(*0x20 + -0x30) = noname_0;\n                *(*0x20 + -0x38) = arg1;\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x40) = unaff_RBX;\n                uVar1 = *(arg1_00 + 8);\n                if (uVar1 < 10) {\n                    *(*0x20 + -0x18) = arg1_00;\n                    switch(uVar1) {\n                    default:\n                        *(*0x20 + -0x88) = 0x44e85c;\n                        fcn.0044f6e0();\n                        in_RAX = *(*0x20 + 8);\n                        noname_0 = *(*0x20 + -0x30);\n                        arg1 = *(*0x20 + -0x38);\n                        unaff_RBX = *(*0x20 + -0x40);\n                        iVar3 = *(*0x20 + -0x10);\n                        break;\n                    case 1:\n                        break;\n                    case 3:\n                        LOCK();\n                        if (uVar1 == *(arg1_00 + 8)) {\n                            *(arg1_00 + 8) = 4;\n                            *(*0x20 + -0x88) = 0x44e6e5;\n                            iVar3 = fcn.0044db00(noname_0, arg1);\n                            LOCK();\n                            if (*(*(*0x20 + -0x18) + 0x40) == 4) {\n                                *(*(*0x20 + -0x18) + 0x40) = 5;\n                            }\n                            else {\n                                *(*0x20 + -0x20) = iVar3;\n                                *(*0x20 + -0x88) = 0x44e70e;\n                                fcn.0044f6e0();\n                                iVar3 = *(*0x20 + -0x20);\n                            }\n                            in_RAX = *(*0x20 + 8);\n                            LOCK();\n                            *(in_RAX + 0x229c) = *(in_RAX + 0x229c) + -1;\n                            noname_0 = iVar3 + -1;\n                            arg1 = *(*0x20 + -0x38);\n                            unaff_RBX = *(*0x20 + -0x40);\n                            iVar3 = *(*0x20 + -0x10);\n                        }\n                        break;\n                    case 6:\n                        *(*0x20 + -0x80) = 0x4b2ad0;\n                        *(*0x20 + -0x88) = 0x44e765;\n                        fcn.0045bc80();\n                        unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                        noname_0 = *(*0x20 + -0x30) + -1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + -0x38);\n                        unaff_RBX = *(*0x20 + -0x40);\n                        iVar3 = *(*0x20 + -0x10);\n                        break;\n                    case 7:\n                    case 8:\n                        LOCK();\n                        bVar5 = uVar1 == *(arg1_00 + 8);\n                        if (bVar5) {\n                            *(arg1_00 + 8) = 9;\n                        }\n                        arg4 = uVar1 & 0xffffff00 | bVar5;\n                        if (bVar5) {\n                            iVar3 = arg1_00[7];\n                            arg1_00[1] = iVar3;\n                            *(*0x20 + -0x88) = 0x44e7cd;\n                            iVar2 = fcn.0044db00(noname_0, iVar3);\n                            unaff_RBX = *(*0x20 + -0x40) + 1;\n                            arg1 = *(*0x20 + -0x38);\n                            if (arg1 < unaff_RBX) {\n                                *(*0x20 + -0x28) = iVar2;\n                                *(*0x20 + -0x88) = 0x44e805;\n                                iVar3 = fcn.00445800(arg1);\n                                iVar2 = *(*0x20 + -0x28);\n                            }\n                            else {\n                                iVar3 = *(*0x20 + -0x10);\n                            }\n                            if (*0x5985b0 == 0) {\n                                *(iVar3 + -8 + unaff_RBX * 8) = *(*0x20 + -0x18);\n                            }\n                            else {\n                                *(*0x20 + -0x88) = 0x44e834;\n                                iVar2 = fcn.0045e0e0(arg1, iVar3, arg1_00, arg4);\n                            }\n                            noname_0 = iVar2 + -1;\n                            in_RAX = *(*0x20 + 8);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x44e885;\n                    fcn.0044f6e0();\n                    in_RAX = *(*0x20 + 8);\n                    noname_0 = *(*0x20 + -0x30);\n                    arg1 = *(*0x20 + -0x38);\n                    unaff_RBX = *(*0x20 + -0x40);\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                noname_0 = noname_0 + 1;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x88) = 0x44e8d4;\n            fcn.00433580();\ncode_r0x0044e8d4:\n            *(*0x20 + -0x88) = 0x44e8df;\n            in_RAX = fcn.0045e420(arg1_00);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44e8ef;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1877
    },
    "0047d1a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.0047d1a0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (((arg1 < 9) && (arg1 != 0)) && ((arg1 - 1 & arg1) == 0)) {\n                if (unaff_RBX < 9) {\n                    *(*0x20 + -0x28) = 0x47d1dc;\n                    fcn.0045a1e0(arg1);\n                    return;\n                }\n                arg1 = 9;\n                *(*0x20 + -0x28) = 0x47d1f3;\n                fcn.0045e420(9);\n            }\n            unaff_RBX = 0x4ca018;\n            *(*0x20 + -0x28) = 0x47d206;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x47d225;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 495
    },
    "0047d240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.0047d240(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (((arg1 < 9) && (arg1 != 0)) && ((arg1 - 1 & arg1) == 0)) {\n                if (unaff_RBX < 9) {\n                    *(*0x20 + -0x28) = 0x47d27c;\n                    fcn.0045a1e0(arg1);\n                    return;\n                }\n                arg1 = 9;\n                *(*0x20 + -0x28) = 0x47d293;\n                fcn.0045e420(9);\n            }\n            unaff_RBX = 0x4ca018;\n            *(*0x20 + -0x28) = 0x47d2a6;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x47d2c5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 495
    },
    "004223e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004223e0(void)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = 0x422405;\n            fcn.00434ec0();\n            *(*0x20 + -0x40) = *(*(*0x20 + 8) + 0x68);\n            *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x30);\n            *(*0x20 + -0x80) = 0x422425;\n            fcn.00434ec0();\n            *(*0x20 + -0x80) = 0x422436;\n            fcn.004357c0();\n            *(*0x20 + -0x80) = 0x422445;\n            fcn.00435780();\n            *(*0x20 + -0x80) = 0x422456;\n            fcn.004357c0();\n            *(*0x20 + -0x80) = 0x422465;\n            fcn.004354c0();\n            *(*0x20 + -0x80) = 0x422476;\n            fcn.004357c0();\n            *(*0x20 + -0x80) = 0x422485;\n            fcn.004354c0();\n            *(*0x20 + -0x80) = 0x422496;\n            fcn.004357c0();\n            *(*0x20 + -0x80) = 0x42249b;\n            fcn.00434f40();\n            iVar2 = *(*0x20 + 8);\n            *(*0x20 + -0x38) = *(iVar2 + 0x50);\n            *(*0x20 + -0x30) = 1;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x20) = *(iVar2 + 0x48);\n            *(*0x20 + -0x18) = 1;\n            *(*0x20 + -0x10) = 0;\n            uVar3 = 0;\n            while (uVar3 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar3) {\n                *(*0x20 + -0x58) = uVar3;\n                *(*0x20 + -0x50) = *(iVar2 + 0x68) * uVar3 + *(iVar2 + 0x18);\n                *(*0x20 + -0x80) = 0x422514;\n                fcn.00434ec0();\n                *(*0x20 + -0x80) = 0x42251e;\n                fcn.00435620();\n                *(*0x20 + -0x80) = 0x422525;\n                fcn.00434f40();\n                if (*(*(*0x20 + 8) + 0x30) < *(*0x20 + -0x58) || *(*(*0x20 + 8) + 0x30) == *(*0x20 + -0x58)) {\n                    bVar5 = (**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0;\n                }\n                else {\n                    bVar5 = true;\n                }\n                *(*0x20 + -0x59) = bVar5;\n                if (bVar5 == false) {\n                    *(*0x20 + -0x80) = 0x42257b;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x80) = 0x42258c;\n                    fcn.004357c0();\n                    *(*0x20 + -0x80) = 0x422591;\n                    fcn.00434f40();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x42255e;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x80) = 0x42256f;\n                    fcn.004357c0();\n                    *(*0x20 + -0x80) = 0x422574;\n                    fcn.00434f40();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    *(*0x20 + -0x80) = 0x4225c7;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x80) = 0x4225d8;\n                    fcn.004357c0();\n                    *(*0x20 + -0x80) = 0x4225dd;\n                    fcn.00434f40();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x4225a9;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x80) = 0x4225ba;\n                    fcn.004357c0();\n                    *(*0x20 + -0x80) = 0x4225bf;\n                    fcn.00434f40();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = *(*0x20 + -0x59) ^ 1;\n                }\n                *(*0x20 + -0x5a) = uVar1;\n                if (uVar1 != 0) {\n                    *(*0x20 + -0x80) = 0x422609;\n                    fcn.00434ec0();\n                    *(*0x20 + -0x80) = 0x42261a;\n                    fcn.004357c0();\n                    *(*0x20 + -0x80) = 0x42261f;\n                    fcn.00434f40();\n                }\n                *(*0x20 + -0x80) = 0x422625;\n                fcn.00434ec0();\n                *(*0x20 + -0x80) = 0x42262a;\n                fcn.00435120();\n                *(*0x20 + -0x80) = 0x42262f;\n                fcn.00434f40();\n                if (*(*0x20 + -0x5a) != '\\0') {\n                    *(*0x20 + -0x80) = 0x422665;\n                    fcn.00435920(0);\n                }\n                if (*(*0x20 + -0x30) == -0x80) {\n                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                    *(*0x20 + -0x30) = 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                }\n                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                if (*(*0x20 + -0x18) == -0x80) {\n                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                    *(*0x20 + -0x18) = 1;\n                }\n                else {\n                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                }\n                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                iVar2 = *(*0x20 + 8);\n                uVar3 = *(*0x20 + -0x58) + 1;\n            }\n            *(*0x20 + -0x80) = 0x4226c5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4226d0;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1985
    },
    "0042a100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint64_t fcn.0042a100(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar4 = 0xffffffffffffffff;\n    uVar5 = 0;\n    uVar7 = 0;\n    for (iVar2 = 0; iVar2 < 8; iVar2 = iVar2 + 1) {\n        uVar9 = *(in_RAX + iVar2 * 8);\n        if (uVar9 == 0) {\n            uVar5 = uVar5 + 0x40;\n        }\n        else {\n            iVar6 = 0;\n            if (uVar9 != 0) {\n                for (; (uVar9 >> iVar6 & 1) == 0; iVar6 = iVar6 + 1) {\n                }\n            }\n            uVar5 = iVar6 + uVar5;\n            if (uVar4 == 0xffffffffffffffff) {\n                uVar4 = uVar5;\n            }\n            if (uVar7 < uVar5) {\n                uVar7 = uVar5;\n            }\n            iVar6 = 0x3f;\n            if (uVar9 != 0) {\n                for (; uVar9 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                }\n            }\n            if (uVar9 == 0) {\n                iVar6 = -1;\n            }\n            uVar5 = -(iVar6 + -0x3f);\n        }\n    }\n    if (uVar4 == 0xffffffffffffffff) {\n        return 0x8000040000200;\n    }\n    if (uVar7 < uVar5) {\n        uVar7 = uVar5;\n    }\n    if (0x3d < uVar7) {\n        if (uVar7 == 0x200000) {\n            uVar7 = 0x8000000000000000;\n        }\n        else {\n            uVar7 = (uVar7 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n        }\n        return uVar7;\n    }\n    iVar2 = 0;\n    do {\n        if (7 < iVar2) {\n            if (uVar7 == 0x200000) {\n                uVar7 = 0x8000000000000000;\n            }\n            else {\n                uVar7 = (uVar7 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n            }\n            return uVar7;\n        }\n        uVar9 = *(in_RAX + iVar2 * 8);\n        iVar6 = 0;\n        if (uVar9 != 0) {\n            for (; (uVar9 >> iVar6 & 1) == 0; iVar6 = iVar6 + 1) {\n            }\n        }\n        uVar1 = iVar6;\n        if (uVar9 == 0) {\n            uVar1 = 0;\n        }\n        uVar9 = uVar9 >> (uVar1 & 0x3f);\n        if ((uVar9 & uVar9 + 1) != 0) {\n            uVar3 = 1;\n            uVar8 = uVar7;\ncode_r0x0042a2b3:\n            do {\n                if (uVar8 != 0) {\n                    if (uVar3 < uVar8) {\n                        uVar9 = uVar9 | uVar9 >> (uVar3 & 0x3f);\n                        if ((uVar9 & uVar9 + 1) == 0) break;\n                        uVar8 = uVar8 - uVar3;\n                        uVar3 = uVar3 << 1;\n                        goto code_r0x0042a2b3;\n                    }\n                    uVar9 = uVar9 | uVar9 >> (uVar8 & 0x3f);\n                    if ((uVar9 & uVar9 + 1) == 0) break;\n                }\n                uVar8 = ~uVar9;\n                iVar6 = 0;\n                if (uVar8 != 0) {\n                    for (; (uVar8 >> iVar6 & 1) == 0; iVar6 = iVar6 + 1) {\n                    }\n                }\n                uVar1 = iVar6;\n                if (uVar8 == 0) {\n                    uVar1 = 0;\n                }\n                uVar9 = uVar9 >> (uVar1 & 0x3f);\n                uVar8 = 0;\n                if (uVar9 != 0) {\n                    for (; (uVar9 >> uVar8 & 1) == 0; uVar8 = uVar8 + 1) {\n                    }\n                }\n                if (uVar9 == 0) {\n                    uVar8 = 0x40;\n                }\n                uVar9 = uVar9 >> (uVar8 & 0x3f);\n                uVar7 = uVar8 + uVar7;\n            } while ((uVar9 & uVar9 + 1) != 0);\n        }\n        iVar2 = iVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 1251
    },
    "0042a3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.0042a3a0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    arg1 = arg1 >> 6;\n    iVar3 = -1;\n    iVar5 = 0;\n    do {\n        if (7 < arg1) {\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        uVar6 = ~uVar1;\n        if (uVar6 == 0) {\n            iVar5 = 0;\n        }\n        else {\n            if (iVar3 == -1) {\n                iVar3 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                iVar3 = arg1 * 0x40 + iVar3;\n            }\n            iVar7 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> iVar7 & 1) == 0; iVar7 = iVar7 + 1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar7 = 0x40;\n            }\n            if (unaff_RBX <= iVar7 + iVar5) {\n                return arg1 * 0x40 - iVar5;\n            }\n            uVar4 = unaff_RBX - 1;\n            uVar2 = 1;\n            while (uVar4 != 0) {\n                if (uVar4 <= uVar2) {\n                    uVar6 = uVar6 >> (uVar4 & 0x3f) & uVar6;\n                    break;\n                }\n                uVar6 = uVar6 & uVar6 >> (uVar2 & 0x3f);\n                if (uVar6 == 0) {\n                    uVar4 = 0x40;\n                    goto code_r0x0042a42b;\n                }\n                uVar4 = uVar4 - uVar2;\n                uVar2 = uVar2 << 1;\n            }\n            uVar4 = 0;\n            if (uVar6 != 0) {\n                for (; (uVar6 >> uVar4 & 1) == 0; uVar4 = uVar4 + 1) {\n                }\n            }\n            if (uVar6 == 0) {\n                uVar4 = 0x40;\n            }\ncode_r0x0042a42b:\n            if (uVar4 < 0x40) {\n                return uVar4 + arg1 * 0x40;\n            }\n            iVar5 = 0x3f;\n            if (uVar1 != 0) {\n                for (; uVar1 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar5 = -1;\n            }\n            iVar5 = -(iVar5 + -0x3f);\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 739
    },
    "0042c660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid fcn.0042c660(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong unaff_RBX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar1 = fcn.0042cb60(in_RAX + 0x20);\n    uVar3 = *(in_RAX + 0x10);\n    uVar4 = iVar1 - 1U >> 9;\n    do {\n        if (uVar4 < uVar3) {\n            iVar5 = *(*(in_RAX + 8) + uVar4 * 8);\ncode_r0x0042c7ce:\n            *(iVar5 + (iVar1 - 1U & 0x1ff) * 8 + 0x18) = unaff_RBX;\n            return;\n        }\n        fcn.0040a520();\n        uVar3 = *(in_RAX + 0x10);\n        if (uVar3 <= uVar4) {\n            iVar2 = *(in_RAX + 8);\n            if (uVar3 == *(in_RAX + 0x18)) {\n                iVar5 = *(in_RAX + 0x18) << 1;\n                if (iVar5 == 0) {\n                    iVar5 = 0x100;\n                }\n                iVar2 = fcn.0040ca40(0x59ae58);\n                if (*(in_RAX + 0x18) != 0) {\n                    fcn.0045eda0(*(in_RAX + 0x18) << 3);\n                }\n                *(in_RAX + 8) = iVar2;\n                *(in_RAX + 0x18) = iVar5;\n            }\n            iVar5 = fcn.0042cac0();\n            *(iVar2 + uVar4 * 8) = iVar5;\n            iVar2 = *(in_RAX + 0x10);\n            *(in_RAX + 0x10) = uVar3 + 1;\n            fcn.0040a740(iVar2);\n            goto code_r0x0042c7ce;\n        }\n        fcn.0040a740();\n    } while( true );\n}\n",
        "token_count": 554
    },
    "004354c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid fcn.004354c0(void)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = in_XMM15;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x43550f;\n            uVar1 = fcn.0045e6cb();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (uVar2 = 99; 0 < uVar2; uVar2 = uVar2 - 1) {\n                *(*0x20 + (uVar2 - 0x6c)) = uVar1 + (uVar1 / 10) * -10 + '0';\n                if (uVar1 < 10) break;\n                uVar1 = uVar1 / 10;\n            }\n            if (uVar2 < 0x65) {\n                *(*0x20 + -0x90) = 0x43557f;\n                fcn.00434fa0(-(uVar2 - 100));\n                return;\n            }\n            *(*0x20 + -0x90) = 0x43559c;\n            in_RAX = fcn.0045e4e0(100);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4355a7;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 494
    },
    "00466580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nulong fcn.00466580(void)\n\n{\n    char cVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (-1 < in_RAX) {\n                if (in_RAX == 0) {\n                    return 0x4a7f3c;\n                }\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x4c) = in_XMM15;\n                uVar2 = 0x13;\n                break;\n            }\n            uVar2 = -in_RAX;\n            if (uVar2 == 0) goto code_r0x00466693;\n            *(*0x20 + -0x3c) = in_XMM15;\n            *(*0x20 + -0x38) = in_XMM15;\n            uVar4 = 0x13;\n            while (cVar1 = uVar2,  9 < uVar2) {\n                uVar2 = uVar2 / 10;\n                if (0x13 < uVar4) goto code_r0x0046673d;\n                *(*0x20 + (uVar4 - 0x3c)) = cVar1 + uVar2 * -10 + '0';\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar4 < 0x14) goto code_r0x004666fa;\n            *(*0x20 + -0x80) = 0x46673d;\n            fcn.0045e420(0x14);\ncode_r0x0046673d:\n            *(*0x20 + -0x80) = 0x46674a;\n            in_RAX = fcn.0045e420(0x14);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x466755;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\ncode_r0x0046660d:\n    cVar1 = in_RAX;\n    if (in_RAX < 10) goto code_r0x00466640;\n    in_RAX = in_RAX / 10;\n    if (0x13 < uVar2) goto code_r0x00466686;\n    *(*0x20 + (uVar2 - 0x50)) = cVar1 + in_RAX * -10 + '0';\n    uVar2 = uVar2 - 1;\n    goto code_r0x0046660d;\ncode_r0x004666fa:\n    *(*0x20 + (uVar4 - 0x3c)) = cVar1 + '0';\n    *(*0x20 + -0x80) = 0x466725;\n    fcn.00449920(-(uVar4 - 0x14));\n    goto code_r0x00466693;\ncode_r0x00466640:\n    if (uVar2 < 0x14) {\n        *(*0x20 + (uVar2 - 0x50)) = cVar1 + '0';\n        *(*0x20 + -0x80) = 0x46666e;\n        uVar3 = fcn.00449920(-(uVar2 - 0x14));\n        return uVar3;\n    }\n    *(*0x20 + -0x80) = 0x466686;\n    fcn.0045e420(0x14);\ncode_r0x00466686:\n    *(*0x20 + -0x80) = 0x466693;\n    fcn.0045e420(0x14);\ncode_r0x00466693:\n    *(*0x20 + -0x80) = 0x4666ac;\n    uVar3 = fcn.00449580(1);\n    return uVar3;\n}\n",
        "token_count": 1013
    },
    "0040b1e0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint64_t ** fcn.0040b1e0(uint64_t **arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t **ppuVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    int64_t *piVar6;\n    uint64_t **ppuVar7;\n    uint64_t arg2;\n    uint64_t **ppuVar8;\n    int64_t unaff_RBX;\n    uint64_t **ppuVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    uchar unaff_DIL;\n    int64_t iVar12;\n    uint64_t **ppuVar13;\n    uint64_t **in_R11;\n    ulong uVar14;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar15;\n    \n    while (puVar10 = *0x20,  ppuVar3 = in_R11, \n          *0x20 + -0x28 < *(unaff_R14 + 0x10) || *0x20 + -0x28 == *(unaff_R14 + 0x10)) {\ncode_r0x0040b966:\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        puVar10[0x20] = unaff_DIL;\n        *(puVar10 + -8) = 0x40b97f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_DIL = puVar10[0x20];\n        *0x20 = puVar10;\n        in_R11 = ppuVar3;\n    }\n    puVar10 = *0x20 + -0xa8;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x20) = unaff_DIL;\n    ppuVar9 = unaff_RBX + 0x3fffffU & 0xffffffffffc00000;\n    *(*0x20 + -0x78) = ppuVar9;\n    if (arg1 == in_RAX + 0x10390) {\n        unaff_DIL = 0xa0;\n        *(*0x20 + -0xb0) = 0x40b267;\n        ppuVar3 = fcn.0040ce20(0x400000);\n        if (ppuVar3 != NULL) {\n            ppuVar7 = *(*0x20 + -0x78);\n            goto code_r0x0040b296;\n        }\n        ppuVar7 = *(*0x20 + 0x18);\n        arg1 = *(*0x20 + -0x78);\n        unaff_DIL = *(*0x20 + 0x20);\n        in_RAX = *(*0x20 + 8);\n    }\n    else {\n        ppuVar3 = NULL;\n        ppuVar7 = arg1;\n        arg1 = ppuVar9;\n    }\ncode_r0x0040b616:\n    ppuVar9 = *ppuVar7;\n    if (ppuVar9 == NULL) {\n        ppuVar7 = NULL;\ncode_r0x0040b74b:\n        if (ppuVar7 == NULL) {\n            *(*0x20 + -0xb0) = 0x40b765;\n            iVar4 = fcn.0040b9a0(0x400000);\n            if (iVar4 == 0) {\n                return NULL;\n            }\n            *(*0x20 + -0x10) = iVar4;\n            *(*0x20 + -0x38) = arg1;\n            *(*0x20 + -0x28) = *(*0x20 + 8) + 0x16b80;\n            *(*0x20 + -0xb0) = 0x40b79a;\n            puVar5 = fcn.00416180();\n            *puVar5 = *(*0x20 + -0x10);\n            *(puVar5 + 1) = 1;\n            puVar5[2] = *0x56a9b0;\n            *(*0x20 + -0xb0) = 0x40b7c8;\n            *0x56a9b0 = puVar5;\n            piVar6 = fcn.00416180();\n            arg1 = *(*0x20 + -0x10);\n            ppuVar7 = *(*0x20 + -0x38);\n            *piVar6 = ppuVar7 + arg1;\n            piVar6[2] = *0x56a9b0;\n            unaff_DIL = *(*0x20 + 0x20);\n            ppuVar3 = arg1;\n            *0x56a9b0 = piVar6;\n        }\n        ppuVar13 = ppuVar7 + ppuVar3;\n        if (ppuVar13 < ppuVar3) {\n            iVar4 = 0x1c;\n            uVar14 = 0x4ad811;\n        }\n        else if (ppuVar3 + 0x100000000000 >> 0x16 < 0x4000000) {\n            bVar15 = 0x3ffffff < ppuVar13 + 0x7fffffffffffU >> 0x16;\n            iVar4 = 0;\n            if (bVar15) {\n                iVar4 = 0x20;\n            }\n            uVar14 = 0;\n            if (bVar15) {\n                uVar14 = 0x4ae50d;\n            }\n        }\n        else {\n            iVar4 = 0x21;\n            uVar14 = 0x4ae8f2;\n        }\n        if (iVar4 == 0) {\n            ppuVar9 = ppuVar7;\n            in_R11 = ppuVar3;\n            if ((ppuVar3 & 0x3fffff) == 0) {\ncode_r0x0040b296:\n                arg1 = ppuVar9;\n                *(*0x20 + -0x10) = ppuVar3;\n                *(*0x20 + -0x38) = ppuVar7;\n                uVar11 = ppuVar3 + 0x100000000000 >> 0x16;\n                iVar4 = *(*0x20 + 8);\n                do {\n                    if (ppuVar3 + ppuVar7 + 0x7fffffffffffU >> 0x16 < uVar11) {\n                        return ppuVar3;\n                    }\n                    ppuVar9 = uVar11 >> 0x14;\n                    ppuVar3 = in_R11;\n                    if (0x3f < ppuVar9) goto code_r0x0040b5d6;\n                    *(*0x20 + -0x40) = uVar11;\n                    iVar2 = *(iVar4 + 0x10170 + ppuVar9 * 8);\n                    ppuVar9 = iVar4 + ppuVar9 * 8 + 0x10170;\n                    if (iVar2 == 0) {\n                        *(*0x20 + -0x18) = ppuVar9;\n                        *(*0x20 + -0xa8) = _sym.imp.kernel32.dll_VirtualAlloc;\n                        *(*0x20 + -0xa0) = 0;\n                        *(*0x20 + -0x98) = 0x800000;\n                        *(*0x20 + -0x90) = 0x3000;\n                        *(*0x20 + -0x88) = 4;\n                        *(*0x20 + -0xb0) = 0x40b378;\n                        fcn.00430a00();\n                        unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                        iVar2 = *(*0x20 + -0x80);\n                        if (iVar2 == 0) goto code_r0x0040b5c5;\n                        **(*0x20 + -0x18) = iVar2;\n                        uVar11 = *(*0x20 + -0x40);\n                    }\n                    uVar11 = uVar11 & 0xfffff;\n                    in_R11 = *(iVar2 + uVar11 * 8);\n                    if (in_R11 != NULL) goto code_r0x0040b5b0;\n                    *(*0x20 + -0x20) = iVar2 + uVar11 * 8;\n                    arg1 = 0x114d0;\n                    unaff_DIL = 0x58;\n                    *(*0x20 + -0xb0) = 0x40b411;\n                    iVar2 = fcn.0040ce20(8);\n                    if (iVar2 == 0) {\n                        arg1 = 0x8;\n                        *(*0x20 + -0xb0) = 0x40b42c;\n                        iVar2 = fcn.0040ca40(0x59ae58);\n                        if (iVar2 == 0) goto code_r0x0040b59f;\n                    }\n                    ppuVar9 = *(*0x20 + 0x20);\n                    if (*(*0x20 + 0x20) == 0) {\n                        iVar4 = *(*0x20 + 8);\n                        iVar12 = *(*0x20 + -0x40);\n                    }\n                    else {\n                        iVar4 = *(*0x20 + 8);\n                        iVar12 = *(iVar4 + 0x103c8);\n                        if (*(iVar4 + 0x103c0) == iVar12) {\n                            *(*0x20 + -0x68) = iVar2;\n                            iVar12 = iVar12 << 4;\n                            if (iVar12 == 0) {\n                                iVar12 = *0x5984a8;\n                            }\n                            *(*0x20 + -0x70) = iVar12;\n                            *(*0x20 + -0xb0) = 0x40b49b;\n                            iVar4 = fcn.0040ca40(0x59ae58);\n                            if (iVar4 == 0) goto code_r0x0040b58e;\n                            iVar2 = *(*0x20 + 8);\n                            arg1 = *(iVar2 + 0x103b8);\n                            *(iVar2 + 0x103b8) = iVar4;\n                            *(iVar2 + 0x103c8) = *(*0x20 + -0x70) >> 3;\n                            iVar4 = *(iVar2 + 0x103c0);\n                            if (*(iVar2 + 0x103c0) < *(iVar2 + 0x103c0)) {\n                                iVar4 = *(iVar2 + 0x103c0);\n                            }\n                            if (*(iVar2 + 0x103b8) != arg1) {\n                                *(*0x20 + -0xb0) = 0x40b4f9;\n                                fcn.0045eda0(iVar4 << 3);\n                            }\n                            iVar2 = *(*0x20 + -0x68);\n                            ppuVar9 = *(*0x20 + 0x20);\n                            iVar4 = *(*0x20 + 8);\n                        }\n                        uVar1 = *(iVar4 + 0x103c0);\n                        arg2 = *(iVar4 + 0x103c8);\n                        uVar11 = uVar1 + 1;\n                        if (arg2 < uVar11) goto code_r0x0040b586;\n                        *(iVar4 + 0x103c0) = uVar11;\n                        arg2 = *(iVar4 + 0x103b8);\n                        if (uVar11 <= uVar1) goto code_r0x0040b57b;\n                        iVar12 = *(*0x20 + -0x40);\n                        *(arg2 + uVar1 * 8) = iVar12;\n                    }\n                    **(*0x20 + -0x20) = iVar2;\n                    uVar11 = iVar12 + 1;\n                    ppuVar3 = *(*0x20 + -0x10);\n                    ppuVar7 = *(*0x20 + -0x38);\n                } while( true );\n            }\n            *(*0x20 + -0xb0) = 0x40b8cb;\n            fcn.00433580();\n        }\n        *(*0x20 + -0x60) = ppuVar3;\n        *(*0x20 + -0x38) = ppuVar13;\n        *(*0x20 + -0x50) = iVar4;\n        *(*0x20 + -0x30) = uVar14;\n        *(*0x20 + -0xb0) = 0x40b8e5;\n        fcn.00434ec0();\n        *(*0x20 + -0xb0) = 0x40b8f6;\n        fcn.004357c0();\n        *(*0x20 + -0xb0) = 0x40b905;\n        fcn.00435620();\n        *(*0x20 + -0xb0) = 0x40b916;\n        fcn.004357c0();\n        *(*0x20 + -0xb0) = 0x40b925;\n        fcn.00435620();\n        *(*0x20 + -0xb0) = 0x40b936;\n        fcn.004357c0();\n        *(*0x20 + -0xb0) = 0x40b945;\n        fcn.004357c0();\n        *(*0x20 + -0xb0) = 0x40b94a;\n        fcn.00435120();\n        *(*0x20 + -0xb0) = 0x40b94f;\n        fcn.00434f40();\n        unaff_RBX = 0x2e;\n        *(*0x20 + -0xb0) = 0x40b965;\n        in_RAX = fcn.00433580();\n        goto code_r0x0040b966;\n    }\n    *(*0x20 + -0x48) = ppuVar9;\n    ppuVar13 = *ppuVar9;\n    if (*(ppuVar9 + 1) != '\\0') {\n        ppuVar13 = *ppuVar9 - arg1;\n    }\n    ppuVar8 = arg1 + ppuVar13;\n    if (ppuVar8 < ppuVar13) {\n        ppuVar3 = NULL;\n    }\n    else if (ppuVar8 + 0x7fffffffffffU >> 0x16 < 0x4000000) {\n        *(*0x20 + -0x58) = ppuVar13;\n        *(*0x20 + -0x38) = ppuVar8;\n        *(*0x20 + -0xb0) = 0x40b68d;\n        ppuVar3 = fcn.00414fe0();\n        ppuVar7 = *(*0x20 + 0x18);\n        ppuVar8 = *(*0x20 + -0x38);\n        arg1 = *(*0x20 + -0x78);\n        ppuVar9 = *(*0x20 + -0x48);\n        unaff_DIL = *(*0x20 + 0x20);\n        ppuVar13 = *(*0x20 + -0x58);\n        in_RAX = *(*0x20 + 8);\n    }\n    else {\n        ppuVar3 = NULL;\n    }\n    if (ppuVar3 == ppuVar13) {\n        if (*(ppuVar9 + 1) != '\\0') {\n            ppuVar8 = ppuVar13;\n        }\n        *ppuVar9 = ppuVar8;\n        ppuVar7 = arg1;\n        goto code_r0x0040b74b;\n    }\n    if (ppuVar3 != NULL) {\n        *(*0x20 + -0x10) = ppuVar3;\n        *(*0x20 + -0xb0) = 0x40b6e7;\n        fcn.00414ea0();\n        in_RAX = *(*0x20 + 8);\n        ppuVar7 = *(*0x20 + 0x18);\n        arg1 = *(*0x20 + -0x78);\n        ppuVar9 = *(*0x20 + -0x48);\n        unaff_DIL = *(*0x20 + 0x20);\n        ppuVar3 = *(*0x20 + -0x10);\n    }\n    goto code_r0x0040b5e5;\ncode_r0x0040b57b:\n    *(*0x20 + -0xb0) = 0x40b586;\n    fcn.0045e420(uVar11);\ncode_r0x0040b586:\n    *(*0x20 + -0xb0) = 0x40b58e;\n    fcn.0045e4a0(uVar11, arg2);\ncode_r0x0040b58e:\n    *(*0x20 + -0xb0) = 0x40b59f;\n    fcn.00433580();\ncode_r0x0040b59f:\n    *(*0x20 + -0xb0) = 0x40b5b0;\n    fcn.00433580();\ncode_r0x0040b5b0:\n    *(*0x20 + -0xb0) = 0x40b5c5;\n    fcn.00433580();\ncode_r0x0040b5c5:\n    arg1 = 0x27;\n    *(*0x20 + -0xb0) = 0x40b5d6;\n    fcn.00433580();\n    ppuVar3 = in_R11;\ncode_r0x0040b5d6:\n    ppuVar7 = 0x40;\n    *(*0x20 + -0xb0) = 0x40b5e5;\n    in_RAX = fcn.0045e440(0x40);\ncode_r0x0040b5e5:\n    *ppuVar7 = ppuVar9[2];\n    *(in_RAX + 0x16bb0) = *(in_RAX + 0x16bb0) - *(in_RAX + 0x16b80);\n    *ppuVar9 = *(in_RAX + 0x16b98);\n    *(in_RAX + 0x16b98) = ppuVar9;\n    goto code_r0x0040b616;\n}\n",
        "token_count": 4198
    },
    "00412660": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint64_t fcn.00412660(uint64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t uVar5;\n    uint64_t unaff_RDI;\n    uint32_t uVar4;\n    \n    if (arg1 + arg3 < 0x41) {\n        return in_RAX;\n    }\n    uVar5 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar5 < 0x40) {\n        iVar1 = *(*(uVar5 * 8 + 0x56a790) + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n        uVar4 = in_RAX >> 9;\n        uVar3 = uVar4 & 0x1fff;\n        *(iVar1 + uVar3 * 8) =\n             (1 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40)) - 1 & *(iVar1 + uVar3 * 8) |\n             unaff_RBX | unaff_RSI << (arg1 & 0x3f) & -(arg1 < 0x40);\n        uVar5 = uVar3 >> 3;\n        if (uVar5 < 0x400) {\n            *(iVar1 + 0x10000 + uVar5) = *(iVar1 + 0x10000 + uVar5) & ~(1 << (uVar4 & 7));\n            return in_RAX + 0x200;\n        }\n        fcn.0045e440(0x400);\n    }\n    fcn.0045e440(0x40);\n    pcVar2 = swi(3);\n    uVar5 = (*pcVar2)();\n    return uVar5;\n}\n",
        "token_count": 460
    },
    "004127a0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.004127a0(ulong arg1, ulong arg2)\n\n{\n    uint64_t unaff_RSI;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (unaff_RSI != 0) {\n        for (arg3 = unaff_RSI >> 3; 0x40 < arg3; arg3 = arg3 - 0x40) {\n            fcn.00412660(arg1, arg2, 0x40);\n        }\n        fcn.00412660(arg1, arg2, arg3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "00412840": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00412840(uint64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint64_t in_RAX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t uVar8;\n    uint64_t unaff_RDI;\n    uint32_t uVar5;\n    \n    uVar7 = ((arg3 + unaff_RSI) - in_RAX >> 3) - arg1;\n    if (uVar7 != 0) {\n        uVar8 = -(arg1 - 0x40);\n        if (uVar7 <= uVar8 && -uVar7 != arg1 - 0x40) {\n            uVar8 = uVar7;\n        }\n        arg1 = arg1 + uVar8;\n        uVar7 = uVar7 - uVar8;\n    }\n    uVar8 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar8 < 0x40) {\n        iVar2 = *(*(uVar8 * 8 + 0x56a790) + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n        uVar5 = in_RAX >> 9;\n        uVar4 = uVar5 & 0x1fff;\n        if (unaff_RDI != arg1) {\n            *(iVar2 + uVar4 * 8) =\n                 unaff_RBX |\n                 (-(1 << (arg1 & 0x3f) & -(arg1 < 0x40)) | (1 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40)) - 1) &\n                 *(iVar2 + uVar4 * 8);\n        }\n        if (uVar7 == 0) {\n            return;\n        }\n        uVar8 = uVar4 >> 3;\n        if (uVar8 < 0x400) {\n            *(iVar2 + 0x10000 + uVar8) = *(iVar2 + 0x10000 + uVar8) | 1 << (uVar5 & 7);\n            uVar8 = in_RAX + 0x200;\n            while( true ) {\n                uVar6 = uVar8 + 0x800000000000 >> 0x2a;\n                if (0x3f < uVar6) break;\n                iVar2 = *(*(uVar6 * 8 + 0x56a790) + (uVar8 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                uVar5 = uVar8 >> 9;\n                uVar4 = uVar5 & 0x1fff;\n                uVar6 = uVar4;\n                if (uVar7 < 0x40) {\n                    puVar1 = iVar2 + uVar6 * 8;\n                    *puVar1 = *puVar1 & -(1 << (uVar7 & 0x3f));\n                    return;\n                }\n                if (uVar7 == 0x40) {\n                    *(iVar2 + uVar6 * 8) = 0;\n                    return;\n                }\n                *(iVar2 + uVar6 * 8) = 0;\n                uVar6 = uVar4 >> 3;\n                if (0x3ff < uVar6) {\n                    fcn.0045e440(0x400);\n                    break;\n                }\n                *(iVar2 + 0x10000 + uVar6) = *(iVar2 + 0x10000 + uVar6) | 1 << (uVar5 & 7);\n                uVar7 = uVar7 - 0x40;\n                uVar8 = uVar8 + 0x200;\n            }\n            fcn.0045e440(0x40);\n        }\n        fcn.0045e440(0x400);\n    }\n    fcn.0045e440(0x40);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 963
    },
    "004488a0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nint32_t fcn.004488a0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t *piVar5;\n    char cVar6;\n    int64_t *in_RAX;\n    int64_t iVar7;\n    ulong uVar8;\n    ulong uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int32_t iVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar7 = *in_RAX;\n            iVar3 = in_RAX[1];\n            iVar1 = *(iVar7 + 8);\n            if (iVar1 != -0x80000000) {\n                return iVar1 + ((iVar1 >> 0x1f) >> 0x1d) >> 3;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = iVar3;\n            *(*0x20 + -0x18) = iVar7;\n            *(*0x20 + -0x78) = 0x4488fd;\n            fcn.0044c400();\n            if (iVar3 == 0x14) {\n                *(*0x20 + -0x78) = 0x448937;\n                cVar6 = fcn.004025e0(0x14, iVar7);\n            }\n            else {\n                if (iVar3 != 0x17) {\n                    return 0;\n                }\n                *(*0x20 + -0x78) = 0x44891d;\n                cVar6 = fcn.004025e0(0x17, iVar7);\n            }\n            if (cVar6 == '\\0') {\n                return 0;\n            }\n            puVar4 = *(*(*0x20 + 8) + 0x28);\n            if (puVar4 < *(*(*0x20 + 8) + 0x30) + -8) {\n                *(*0x20 + -0x51) = *(puVar4 + 4);\n                *(*0x20 + -0x28) = *puVar4;\n                *(*0x20 + -0x78) = 0x4489b3;\n                iVar7 = fcn.0044b9e0();\n                piVar5 = *(*0x20 + -0x28);\n                if (*piVar5 == iVar7) {\n                    iVar1 = *piVar5[1];\n                    if (*(*0x20 + -0x51) != '\\0') {\n                        return iVar1;\n                    }\n                    iVar11 = piVar5[2] >> 3;\n                    if (iVar11 < iVar1) {\n                        return iVar11;\n                    }\n                    return iVar1;\n                }\n                uVar9 = *(*0x20 + -0x10);\n                *(*0x20 + -0x78) = 0x448a07;\n                uVar8 = fcn.0044c400();\n                *(*0x20 + -0x20) = uVar8;\n                *(*0x20 + -0x30) = uVar9;\n                *(*0x20 + -0x78) = 0x448a16;\n                fcn.00434ec0();\n                *(*0x20 + -0x78) = 0x448a27;\n                fcn.004357c0();\n                *(*0x20 + -0x78) = 0x448a36;\n                fcn.004357c0();\n                *(*0x20 + -0x78) = 0x448a3b;\n                fcn.00435120();\n                *(*0x20 + -0x78) = 0x448a45;\n                fcn.00434f40();\n                *(*0x20 + -0x78) = 0x448a56;\n                fcn.00433580();\n            }\n            else {\n                *(*0x20 + -0x78) = 0x44896d;\n                iVar7 = fcn.0044b9e0();\n                if (*(*(*0x20 + 8) + 0x10) == iVar7) {\n                    return 0;\n                }\n            }\n            uVar9 = *(*0x20 + -0x10);\n            *(*0x20 + -0x78) = 0x448a65;\n            uVar8 = fcn.0044c400();\n            *(*0x20 + -0x20) = uVar8;\n            *(*0x20 + -0x30) = uVar9;\n            uVar2 = **(*0x20 + -0x18);\n            *(*0x20 + -0x78) = 0x448a85;\n            uVar9 = fcn.0044b9e0(uVar2);\n            *(*0x20 + -0x50) = uVar9;\n            iVar7 = *(*0x20 + 8);\n            *(*0x20 + -0x38) = *(iVar7 + 0x28);\n            *(*0x20 + -0x40) = *(iVar7 + 0x30);\n            *(*0x20 + -0x48) = *(iVar7 + 0x10);\n            *(*0x20 + -0x78) = 0x448aaf;\n            fcn.00434ec0();\n            *(*0x20 + -0x78) = 0x448ac5;\n            fcn.004357c0();\n            *(*0x20 + -0x78) = 0x448ad4;\n            fcn.004357c0();\n            *(*0x20 + -0x78) = 0x448ae5;\n            fcn.004357c0();\n            *(*0x20 + -0x78) = 0x448aef;\n            fcn.00435620();\n            *(*0x20 + -0x78) = 0x448b05;\n            fcn.004357c0();\n            *(*0x20 + -0x78) = 0x448b0f;\n            fcn.00435620();\n            *(*0x20 + -0x78) = 0x448b25;\n            fcn.004357c0();\n            *(*0x20 + -0x78) = 0x448b37;\n            fcn.00435620(*(*0x20 + -0x50));\n            *(*0x20 + -0x78) = 0x448b3c;\n            fcn.00435120();\n            *(*0x20 + -0x78) = 0x448b45;\n            fcn.00434f40();\n            *(*0x20 + -0x78) = 0x448b56;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + -8) = 0x448b65;\n        fcn.0045bdc0();\n        in_RAX = *(puVar10 + 8);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1663
    },
    "00428d20": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00428d20(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t arg1_00;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint64_t arg2;\n    int64_t iVar7;\n    uint64_t arg1_01;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00428d20:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0xa0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (((unaff_RBX & 0x3fffff) == 0) && ((arg1 & 0x3fffff) == 0)) {\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = in_XMM15;\n            *(*0x20 + -0x30) = 0x429240;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = 0x4291c0;\n            *(*0x20 + -0x18) = vtable.HHl_Hl_HsH_.0;\n            *(*0x20 + -0x10) = *0x20 + -0x30;\n            *(*0x20 + -0xa8) = 0x428dea;\n            uVar2 = fcn.0042bee0(vtable.HHl_Hl_HsH_.0, in_RAX + 0x10090);\n            *(*0x20 + -0x58) = uVar2;\n            iVar6 = 0;\n            do {\n                if (4 < iVar6) {\n                    *(*0x20 + -0xa8) = 0x4290d9;\n                    iVar6 = fcn.004292c0(*(*0x20 + 0x18));\n                    *(*(*0x20 + 8) + 0x10100) = *(*(*0x20 + 8) + 0x10100) + iVar6;\n                    return;\n                }\n                *(*0x20 + -0x60) = iVar6;\n                uVar2 = *(*0x20 + 0x18);\n                *(*0x20 + -0xa8) = 0x428e25;\n                arg1 = fcn.0042bca0();\n                *(*0x20 + -0xa8) = 0x428e4a;\n                iVar3 = (*_vtable.HHl_Hl_HsH_.0)(uVar2, vtable.HHl_Hl_HsH_.0);\n                iVar6 = *(*0x20 + -0x60);\n                iVar7 = *(*0x20 + 8);\n                arg2 = *(iVar7 + 0x10 + iVar6 * 0x18);\n                if (*(iVar7 + 8 + iVar6 * 0x18) < arg1) {\n                    if (arg2 < arg1) goto code_r0x0042911a;\n                    *(iVar7 + 8 + iVar6 * 0x18) = arg1;\n                }\n                iVar1 = *(iVar7 + iVar6 * 0x18);\n                arg2 = -*0x5984a8;\n                uVar8 = (*0x5984a8 + arg1 * 8) - 1 & arg2;\n                if (*(iVar7 + 8 + iVar6 * 0x18) == 0) goto code_r0x00429110;\n                arg2 = iVar1 + (iVar3 << 3 & arg2);\n                uVar8 = iVar1 + uVar8;\n                uVar4 = *(*0x20 + -0x58);\n                if (0 < uVar4) {\n                    iVar6 = *(iVar7 + 0x10090);\n                    arg1_01 = *(iVar7 + 0x10098);\n                    if (arg1_01 <= uVar4 - 1) goto code_r0x00429105;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x80) = uVar8;\n                    uVar2 = *((uVar4 - 1) * 0x10 + 8 + iVar6);\n                    *(*0x20 + -0xa8) = 0x428f05;\n                    uVar2 = (**(*0x20 + -0x20))(uVar2, *0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x80);\n                    *(*0x20 + -0xa8) = 0x428f1a;\n                    arg2 = fcn.0042bd20(uVar2);\n                    iVar6 = *(*0x20 + -0x60);\n                    iVar7 = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0x58);\n                    uVar8 = arg1;\n                }\n                arg1_01 = *(iVar7 + 0x10090);\n                arg1_00 = *(iVar7 + 0x10098);\n                if (uVar4 < arg1_00) {\n                    if (arg1_00 <= uVar4) goto code_r0x004290f8;\n                    *(*0x20 + -0x70) = uVar8;\n                    *(*0x20 + -0x68) = arg2;\n                    uVar2 = *(uVar4 * 0x10 + 8 + arg1_01);\n                    *(*0x20 + -0xa8) = 0x428f7a;\n                    uVar2 = (**(*0x20 + -0x20))(uVar2, *0x20 + -0x20);\n                    uVar8 = *(*0x20 + -0x70);\n                    *(*0x20 + -0xa8) = 0x428f8f;\n                    arg2 = fcn.0042bd20(uVar2);\n                    iVar6 = *(*0x20 + -0x60);\n                }\n                if (arg2 + 0x800000000000 < uVar8 + 0x800000000000) {\n                    iVar7 = uVar8 - arg2;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                if (iVar7 != 0) {\n                    *(*0x20 + -0x38) = arg2 + 0x800000000000;\n                    *(*0x20 + -0x40) = uVar8 + 0x800000000000;\n                    *(*0x20 + -0x48) = uVar8;\n                    *(*0x20 + -0x50) = arg2;\n                    *(*0x20 + -0xa8) = 0x429007;\n                    fcn.0042cc40();\n                    if (*(*0x20 + -0x38) < *(*0x20 + -0x40)) {\n                        iVar6 = *(*0x20 + -0x48) - *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar6 = 0;\n                    }\n                    LOCK();\n                    *0x598dc0 = *0x598dc0 + iVar6;\n                    *(*0x20 + -0xa8) = 0x42905a;\n                    fcn.00414c40();\n                    if (*(*0x20 + -0x38) < *(*0x20 + -0x40)) {\n                        iVar6 = *(*0x20 + -0x48) - *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar6 = 0;\n                    }\n                    *(*(*0x20 + 8) + 0x10100) = *(*(*0x20 + 8) + 0x10100) + iVar6;\n                    iVar6 = *(*0x20 + -0x60);\n                }\n                iVar6 = iVar6 + 1;\n            } while( true );\n        }\n        goto code_r0x00429125;\n    }\n    goto code_r0x00429186;\ncode_r0x004290f8:\n    *(*0x20 + -0xa8) = 0x429105;\n    fcn.0045e420(arg1_00);\ncode_r0x00429105:\n    *(*0x20 + -0xa8) = 0x429110;\n    fcn.0045e420(arg1_01);\ncode_r0x00429110:\n    *(*0x20 + -0xa8) = 0x42911a;\n    fcn.0045e420(0);\ncode_r0x0042911a:\n    *(*0x20 + -0xa8) = 0x429125;\n    fcn.0045e4a0(arg1, arg2);\ncode_r0x00429125:\n    *(*0x20 + -0xa8) = 0x42912a;\n    fcn.00434ec0();\n    *(*0x20 + -0xa8) = 0x42913b;\n    fcn.004357c0();\n    *(*0x20 + -0xa8) = 0x429148;\n    fcn.00435620();\n    *(*0x20 + -0xa8) = 0x429159;\n    fcn.004357c0();\n    *(*0x20 + -0xa8) = 0x429166;\n    fcn.00435620();\n    *(*0x20 + -0xa8) = 0x42916b;\n    fcn.00435120();\n    *(*0x20 + -0xa8) = 0x429170;\n    fcn.00434f40();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa8) = 0x429185;\n    in_RAX = fcn.00433580();\ncode_r0x00429186:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + -8) = 0x42919a;\n    fcn.0045bdc0();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    *0x20 = puVar5;\n    goto code_r0x00428d20;\n}\n",
        "token_count": 2501
    },
    "00437500": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00437500(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    *0x598346 = 1;\n    for (iVar2 = 0; iVar2 < 5; iVar2 = iVar2 + 1) {\n        *0x5460ec = 0x7fffffff;\n        *0x5460e8 = 1;\n        cVar1 = fcn.00440e20();\n        if (cVar1 == '\\0') break;\n        fcn.00430c40();\n    }\n    fcn.00430c40();\n    fcn.00440e20();\n    fcn.00430c40();\n    return;\n}\n",
        "token_count": 210
    },
    "0046e2a0": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.0046e2a0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uint32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (arg1 < unaff_RBX + 2U) {\n            in_RAX = fcn.00445800(arg1);\n        }\n        *(unaff_RBX + in_RAX) = uVar1 | 0xc0;\n        *(unaff_RBX + 1 + in_RAX) = unaff_EDI & 0x3f | 0x80;\n        return;\n    }\n    if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n        if (0xffff < unaff_EDI) {\n            if (arg1 < unaff_RBX + 4U) {\n                in_RAX = fcn.00445800(arg1);\n            }\n            *(unaff_RBX + in_RAX) = unaff_EDI >> 0x12 | 0xf0;\n            *(unaff_RBX + 1 + in_RAX) = unaff_EDI >> 0xc & 0x3f | 0x80;\n            *(unaff_RBX + 2 + in_RAX) = uVar1 & 0x3f | 0x80;\n            *(unaff_RBX + 3 + in_RAX) = unaff_EDI & 0x3f | 0x80;\n            return;\n        }\n    }\n    else {\n        unaff_EDI = 0xfffd;\n    }\n    if (arg1 < unaff_RBX + 3U) {\n        in_RAX = fcn.00445800(arg1);\n    }\n    *(unaff_RBX + in_RAX) = unaff_EDI >> 0xc | 0xe0;\n    *(unaff_RBX + 1 + in_RAX) = unaff_EDI >> 6 & 0x3f | 0x80;\n    *(unaff_RBX + 2 + in_RAX) = unaff_EDI & 0x3f | 0x80;\n    return;\n}\n",
        "token_count": 575
    },
    "00454fe0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.00454fe0(void)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    int64_t *piVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n        unaff_RBX = unaff_RBX & 0xff;\n    }\n    uVar2 = fcn.0044bc60();\n    if (uVar2 == 0) {\n        return 0;\n    }\n    cVar1 = *(uVar2 + 0x28);\n    if ((cVar1 == '\\x11') || (cVar1 == '\\n')) {\n        return 0;\n    }\n    if (cVar1 != '\\x10') {\n        piVar3 = fcn.0044c400();\n        if (unaff_RBX < 8) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = CONCAT71(0x2e656d69746e75, *piVar3 == 0x2e656d69746e7572);\n        }\n        return uVar2 & 0xffffffff;\n    }\n    if (unaff_RBX != '\\0') {\n        return 0;\n    }\n    return uVar2 & 0xffffffffffffff00 | (*0x598374 >> 1 & 1) == 0;\n}\n",
        "token_count": 342
    },
    "0043bb60": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nulong fcn.0043bb60(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    bool bVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            arg3 = 0;\n            while( true ) {\n                if (unaff_RBX <= arg3) {\n                    return 0;\n                }\n                iVar1 = *(in_RAX + arg3 * 8);\n                uVar2 = arg3 >> 5 & 0x7ffffff;\n                if (unaff_RSI <= uVar2) break;\n                if ((*(unaff_RDI + uVar2 * 4) >> (arg3 & 0x1f) & 1) == 0) {\n                    do {\n                    } while (*(iVar1 + 0x194) != *(iVar1 + 0x194));\n                    bVar3 = *(iVar1 + 0x194) != *(iVar1 + 400) || *(iVar1 + 0x998) != 0;\n                }\n                else {\n                    bVar3 = false;\n                }\n                if (bVar3) {\n                    *(*0x20 + -0x28) = 0x43bc15;\n                    fcn.0040a520();\n                    *(*0x20 + -0x28) = 0x43bc1c;\n                    iVar1 = fcn.00441fa0();\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x10) = iVar1;\n                        *(*0x20 + -0x28) = 0x43bc38;\n                        fcn.0040a740();\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x28) = 0x43bc55;\n                    fcn.0040a740();\n                    return 0;\n                }\n                arg3 = arg3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x43bc6b;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.0045e420(unaff_RSI);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x43bc8f;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 881
    },
    "0043bcc0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.0043bcc0(ulong noname_0, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    uVar4 = 0;\n    while( true ) {\n        if (unaff_RBX <= uVar4) {\n            return arg4;\n        }\n        iVar3 = *(in_RAX + uVar4 * 8);\n        uVar5 = uVar4 >> 5 & 0x7ffffff;\n        if (unaff_RSI <= uVar5) break;\n        iVar6 = arg4;\n        if ((*(unaff_RDI + uVar5 * 4) >> (uVar4 & 0x1f) & 1) != 0) {\n            iVar1 = *(iVar3 + 0x1200);\n            iVar6 = *(iVar3 + 0x1208);\n            if ((iVar1 != 0) && ((iVar6 == 0 || (iVar1 <= iVar6)))) {\n                iVar6 = iVar1;\n            }\n            if ((iVar6 == 0) || ((arg4 != 0 && (arg4 <= iVar6)))) {\n                iVar6 = arg4;\n            }\n        }\n        uVar4 = uVar4 + 1;\n        arg4 = iVar6;\n    }\n    fcn.0045e420(unaff_RSI);\n    pcVar2 = swi(3);\n    iVar3 = (*pcVar2)();\n    return iVar3;\n}\n",
        "token_count": 400
    },
    "004655e0": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nint64_t fcn.004655e0(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = fcn.00459a20();\n    if (uVar1 < in_RAX[1]) {\n        return uVar1 * 0x80 + *in_RAX;\n    }\n    iVar2 = fcn.00465660();\n    return iVar2;\n}\n",
        "token_count": 158
    },
    "004764c0": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nuint64_t fcn.004764c0(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    uint32_t in_EAX;\n    uint64_t uVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return in_EAX << 6;\n            }\n            if (arg1 + 0x15cU < 0x2b8) {\n                uVar1 = *((arg1 + 0x15cU) * 0x10 + 0x53adc8);\n                if (arg1 < 0) {\n                    uVar1 = uVar1 + 1;\n                }\n                return SUB168(ZEXT416(in_EAX) * ZEXT816(uVar1) >> 0x40, 0) << 7 |\n                       SUB168(ZEXT416(in_EAX) * ZEXT816(uVar1), 0) >> 0x39;\n            }\n            unaff_RBX = 0x4ca488;\n            *(*0x20 + -0x20) = 0x476570;\n            in_EAX = fcn.00432de0();\n        }\n        *(puVar2 + 8) = in_EAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x476585;\n        fcn.0045bdc0();\n        in_EAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 503
    },
    "0042f800": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong fcn.0042f800(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x78) = 0x42f839;\n            fcn.0040a520();\n            unaff_RBX = *(*0x20 + 0x18);\n            if (unaff_RBX < 0x40000001) {\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x20) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = 0x40000000;\n                iVar2 = *(*0x20 + -0x20);\n                *(*0x20 + -0x28) = iVar2;\n                arg1_00 = 0;\n                uVar3 = 0;\n                while (arg1_00 < unaff_RBX) {\n                    uVar1 = *(iVar2 + arg1_00);\n                    if (*(iVar2 + arg1_00) < 0x80) {\n                        arg1_01 = uVar3;\n                        uVar3 = unaff_RBX;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = uVar3;\n                        *(*0x20 + -0x78) = 0x42f8ad;\n                        uVar1 = fcn.004575e0(arg1_00);\n                        arg1_01 = *(*0x20 + -0x48);\n                        iVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x38);\n                        arg1_00 = unaff_RBX;\n                    }\n                    unaff_RBX = uVar3;\n                    if (0x3e5 < arg1_01) {\n                        if (1000 < arg1_01) goto code_r0x0042fa25;\n                        *(*0x20 + -0x4c) = uVar1;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x78) = 0x42f8f9;\n                        fcn.0042fa80(arg1_01);\n                        iVar2 = *(*0x20 + -0x28);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        uVar1 = *(*0x20 + -0x4c);\n                        arg1_00 = *(*0x20 + -0x40);\n                        arg1_01 = 0;\n                    }\n                    if (uVar1 < 0x10000) {\n                        if (999 < arg1_01) goto code_r0x0042fa13;\n                        *(arg1_01 * 2 + 0x599880) = uVar1;\n                        uVar3 = arg1_01 + 1;\n                    }\n                    else {\n                        if (999 < arg1_01) goto code_r0x0042fa06;\n                        *(arg1_01 * 2 + 0x599880) = (uVar1 - 0x10000 >> 10 & 0x3ff) + 0xd800;\n                        if (999 < arg1_01 + 1) goto code_r0x0042f9f9;\n                        *(arg1_01 * 2 + 0x599882) = (uVar1 - 0x10000 & 0x3ff) + 0xdc00;\n                        uVar3 = arg1_01 + 2;\n                    }\n                }\n                if (uVar3 < 0x3e9) {\n                    *(*0x20 + -0x78) = 0x42f9cf;\n                    fcn.0042fa80(uVar3);\n                    *(*0x20 + -0x78) = 0x42f9dd;\n                    fcn.0040a740();\n                    return *(*0x20 + -0x38);\n                }\n                arg1_01 = 1000;\n                *(*0x20 + -0x78) = 0x42f9f9;\n                fcn.0045e4a0(uVar3, 1000);\ncode_r0x0042f9f9:\n                *(*0x20 + -0x78) = 0x42fa06;\n                fcn.0045e420(1000);\ncode_r0x0042fa06:\n                *(*0x20 + -0x78) = 0x42fa13;\n                fcn.0045e420(1000);\ncode_r0x0042fa13:\n                *(*0x20 + -0x78) = 0x42fa25;\n                fcn.0045e420(1000);\ncode_r0x0042fa25:\n                *(*0x20 + -0x78) = 0x42fa32;\n                fcn.0045e4a0(arg1_01, 1000);\n            }\n            *(*0x20 + -0x78) = 0x42fa3f;\n            uVar3 = unaff_RBX;\n            in_RAX = fcn.0045e460(unaff_RBX, 0x40000000);\n            arg1._0_4_ = uVar3;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x42fa53;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1536
    },
    "00450540": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t fcn.00450540(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int32_t iVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong *unaff_RDI;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \ncode_r0x00450540:\n    puVar3 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar3 = *0x20 + -0x68;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (arg1 == 0) {\n            return 0;\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x48) = unaff_RBX;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x70) = 0x45058d;\n        iVar1 = fcn.0045de40(arg1 << 3);\n        unaff_RDI = *(*(*0x20 + 8) + 0x20 + (iVar1 & 0x1fff) * 8);\n        do {\n            if (unaff_RDI == NULL) {\n                iVar2 = 0;\ncode_r0x004505f7:\n                if (iVar2 == 0) {\n                    *(*0x20 + -0x4c) = 0;\n                    *(*0x20 + -0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x28) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x40) = 0x450700;\n                    *(*0x20 + -0x38) = *(*0x20 + 8);\n                    *(*0x20 + -0x30) = *0x20 + -0x4c;\n                    *(*0x20 + -0x28) = *(*0x20 + -0x48);\n                    *(*0x20 + -0x20) = *(*0x20 + 0x18);\n                    *(*0x20 + -0x18) = *(*0x20 + 0x20);\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x68) = *0x20 + -0x40;\n                    *(*0x20 + -0x70) = 0x45066c;\n                    fcn.0045bc80();\n                    return *(*0x20 + -0x4c);\n                }\n                return iVar2;\n            }\n            if ((unaff_RDI[1] == iVar1) && (unaff_RBX = unaff_RDI[3],  *(*0x20 + 0x18) == unaff_RBX)) {\n                if (0x80 < unaff_RBX) goto code_r0x004506b2;\n                iVar4 = 0;\n                while( true ) {\n                    if (unaff_RBX <= iVar4) {\n                        iVar2 = *(unaff_RDI + 2);\n                        goto code_r0x004505f7;\n                    }\n                    if (*(*(*0x20 + -0x48) + iVar4 * 8) != unaff_RDI[iVar4 + 4]) break;\n                    iVar4 = iVar4 + 1;\n                }\n            }\n            unaff_RDI = *unaff_RDI;\n        } while( true );\n    }\n    goto code_r0x004506c0;\ncode_r0x004506b2:\n    *(*0x20 + -0x70) = 0x4506bf;\n    arg1 = unaff_RBX;\n    in_RAX = fcn.0045e460(unaff_RBX, 0x80);\ncode_r0x004506c0:\n    *(puVar3 + 8) = in_RAX;\n    *(puVar3 + 0x10) = unaff_RBX;\n    *(puVar3 + 0x18) = arg1;\n    *(puVar3 + 0x20) = unaff_RDI;\n    *(puVar3 + -8) = 0x4506d9;\n    fcn.0045bdc0();\n    in_RAX = *(puVar3 + 8);\n    unaff_RBX = *(puVar3 + 0x10);\n    arg1 = *(puVar3 + 0x18);\n    unaff_RDI = *(puVar3 + 0x20);\n    *0x20 = puVar3;\n    goto code_r0x00450540;\n}\n",
        "token_count": 1282
    },
    "0045bf60": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.0045bf60(ulong param_1, ulong param_2, ulong param_3, ulong param_4, uint32_t param_5)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uchar *unaff_RBP;\n    uchar *puVar5;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    code **ppcStackX16;\n    uchar *puStackX24;\n    uint32_t uStackX32;\n    uint32_t uStackX36;\n    uchar auStack524296 [128];\n    uchar auStack524168 [262016];\n    uchar auStack262152 [128];\n    uchar auStack262024 [130944];\n    uchar auStack131080 [128];\n    uchar auStack130952 [65400];\n    ulong uStack65552;\n    uchar auStack65544 [128];\n    uchar auStack65416 [32632];\n    ulong uStack32784;\n    uchar auStack32776 [128];\n    uchar auStack32648 [16248];\n    ulong uStack16400;\n    uchar auStack16392 [128];\n    uchar auStack16264 [8056];\n    ulong uStack8208;\n    uchar auStack8200 [128];\n    uchar auStack8072 [3960];\n    ulong uStack4112;\n    uchar auStack4104 [128];\n    uchar auStack3976 [1912];\n    ulong uStack2064;\n    uchar auStack2056 [128];\n    uchar auStack1928 [888];\n    ulong uStack1040;\n    uchar auStack1032 [128];\n    uchar auStack904 [376];\n    ulong uStack528;\n    uchar auStack520 [128];\n    uchar auStack392 [120];\n    ulong uStack272;\n    uchar auStack264 [120];\n    ulong uStack144;\n    uchar auStack136 [56];\n    ulong uStack80;\n    uchar auStack72 [24];\n    ulong uStack48;\n    uchar auStack40 [8];\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    if (param_5 < 0x11) {\n        while (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack24;\n        }\n        puVar5 = auStack24;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32 = 0x45c1a3;\n        fcn.0045bea0();\n        uStack32 = 0x45c1ae;\n        (**ppcStackX16)();\n        uStack32 = 0x45c1b8;\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        uStack32 = 0x45c1db;\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x21) {\n        while (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack40;\n        }\n        puVar5 = auStack40;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack48 = 0x45c243;\n        fcn.0045bea0();\n        uStack48 = 0x45c24e;\n        (**ppcStackX16)();\n        uStack48 = 0x45c258;\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        uStack48 = 0x45c27b;\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x41) {\n        while (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack72;\n        }\n        puVar5 = auStack72;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack80 = 0x45c2e3;\n        fcn.0045bea0();\n        uStack80 = 0x45c2ee;\n        (**ppcStackX16)();\n        uStack80 = 0x45c2f8;\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        uStack80 = 0x45c31b;\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x81) {\n        while (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10, \n              &stack0xfffffffffffffff8 < *puVar1 || &stack0xfffffffffffffff8 == *puVar1) {\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack136;\n        }\n        puVar5 = auStack136;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack144 = 0x45c3a2;\n        fcn.0045bea0();\n        uStack144 = 0x45c3b0;\n        (**ppcStackX16)();\n        uStack144 = 0x45c3bd;\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        uStack144 = 0x45c3ec;\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x101) {\n        while (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10,  auStack136 < *puVar1 || auStack136 == *puVar1) {\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack264;\n        }\n        puVar5 = auStack264;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack272 = 0x45c4a5;\n        fcn.0045bea0();\n        uStack272 = 0x45c4b3;\n        (**ppcStackX16)();\n        uStack272 = 0x45c4c0;\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        uStack272 = 0x45c4ef;\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x201) {\n        while (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10,  auStack392 < *puVar1 || auStack392 == *puVar1) {\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack520;\n        }\n        puVar5 = auStack520;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack528 = 0x45c5a5;\n        fcn.0045bea0();\n        uStack528 = 0x45c5b3;\n        (**ppcStackX16)();\n        uStack528 = 0x45c5c0;\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        uStack528 = 0x45c5ef;\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x401) {\n        while (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10,  auStack904 < *puVar1 || auStack904 == *puVar1) {\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack1032;\n        }\n        puVar5 = auStack1032;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack1040 = 0x45c6a5;\n        fcn.0045bea0();\n        uStack1040 = 0x45c6b3;\n        (**ppcStackX16)();\n        uStack1040 = 0x45c6c0;\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        uStack1040 = 0x45c6ef;\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x801) {\n        while (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10,  auStack1928 < *puVar1 || auStack1928 == *puVar1) {\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack2056;\n        }\n        puVar5 = auStack2056;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack2064 = 0x45c7a5;\n        fcn.0045bea0();\n        uStack2064 = 0x45c7b3;\n        (**ppcStackX16)();\n        uStack2064 = 0x45c7c0;\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        uStack2064 = 0x45c7ef;\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1001) {\n        while( true ) {\n            if ((0xf87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10,  *puVar1 <= auStack3976 && auStack3976 != *puVar1)) break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack4104;\n        }\n        puVar5 = auStack4104;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack4112 = 0x45c8ad;\n        fcn.0045bea0();\n        uStack4112 = 0x45c8bb;\n        (**ppcStackX16)();\n        uStack4112 = 0x45c8c8;\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        uStack4112 = 0x45c8f7;\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2001) {\n        while( true ) {\n            if ((0x1f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10,  *puVar1 <= auStack8072 && auStack8072 != *puVar1)) break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack8200;\n        }\n        puVar5 = auStack8200;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack8208 = 0x45c9ad;\n        fcn.0045bea0();\n        uStack8208 = 0x45c9bb;\n        (**ppcStackX16)();\n        uStack8208 = 0x45c9c8;\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        uStack8208 = 0x45c9f7;\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4001) {\n        while( true ) {\n            if ((0x3f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10,  *puVar1 <= auStack16264 && auStack16264 != *puVar1))\n            break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack16392;\n        }\n        puVar5 = auStack16392;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack16400 = 0x45caad;\n        fcn.0045bea0();\n        uStack16400 = 0x45cabb;\n        (**ppcStackX16)();\n        uStack16400 = 0x45cac8;\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        uStack16400 = 0x45caf7;\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8001) {\n        while( true ) {\n            if ((0x7f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10,  *puVar1 <= auStack32648 && auStack32648 != *puVar1))\n            break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack32776;\n        }\n        puVar5 = auStack32776;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32784 = 0x45cbad;\n        fcn.0045bea0();\n        uStack32784 = 0x45cbbb;\n        (**ppcStackX16)();\n        uStack32784 = 0x45cbc8;\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        uStack32784 = 0x45cbf7;\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10001) {\n        while( true ) {\n            if ((0xff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10,  *puVar1 <= auStack65416 && auStack65416 != *puVar1))\n            break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack65544;\n        }\n        puVar5 = auStack65544;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack65552 = 0x45ccad;\n        fcn.0045bea0();\n        uStack65552 = 0x45ccbb;\n        (**ppcStackX16)();\n        uStack65552 = 0x45ccc8;\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        uStack65552 = 0x45ccf7;\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20001) {\n        while( true ) {\n            if ((0x1ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10,  *puVar1 <= auStack130952 && auStack130952 != *puVar1))\n            break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack131080;\n        }\n        puVar5 = auStack131080;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bea0();\n        (**ppcStackX16)();\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40001) {\n        while( true ) {\n            if ((0x3ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10,  *puVar1 <= auStack262024 && auStack262024 != *puVar1))\n            break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack262152;\n        }\n        puVar5 = auStack262152;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bea0();\n        (**ppcStackX16)();\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x80001) {\n        while( true ) {\n            if ((0x7ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10,  *puVar1 <= auStack524168 && auStack524168 != *puVar1))\n            break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack524296;\n        }\n        puVar5 = auStack524296;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bea0();\n        (**ppcStackX16)();\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x100001) {\n        while( true ) {\n            if ((0xfff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10, \n               *puVar1 <= &stack0xfffffffffff00078 && &stack0xfffffffffff00078 != *puVar1)) break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffeffff8;\n        }\n        puVar5 = &stack0xffffffffffeffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bea0();\n        (**ppcStackX16)();\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x200001) {\n        while( true ) {\n            if ((0x1fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10, \n               *puVar1 <= &stack0xffffffffffe00078 && &stack0xffffffffffe00078 != *puVar1)) break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffdffff8;\n        }\n        puVar5 = &stack0xffffffffffdffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bea0();\n        (**ppcStackX16)();\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x400001) {\n        while( true ) {\n            if ((0x3fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10, \n               *puVar1 <= &stack0xffffffffffc00078 && &stack0xffffffffffc00078 != *puVar1)) break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffbffff8;\n        }\n        puVar5 = &stack0xffffffffffbffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bea0();\n        (**ppcStackX16)();\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x800001) {\n        while( true ) {\n            if ((0x7fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10, \n               *puVar1 <= &stack0xffffffffff800078 && &stack0xffffffffff800078 != *puVar1)) break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffff7ffff8;\n        }\n        puVar5 = &stack0xffffffffff7ffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bea0();\n        (**ppcStackX16)();\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1000001) {\n        while( true ) {\n            if ((0xffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10, \n               *puVar1 <= &stack0xffffffffff000078 && &stack0xffffffffff000078 != *puVar1)) break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffefffff8;\n        }\n        puVar5 = &stack0xfffffffffefffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bea0();\n        (**ppcStackX16)();\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2000001) {\n        while( true ) {\n            if ((0x1ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10, \n               *puVar1 <= &stack0xfffffffffe000078 && &stack0xfffffffffe000078 != *puVar1)) break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffdfffff8;\n        }\n        puVar5 = &stack0xfffffffffdfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bea0();\n        (**ppcStackX16)();\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4000001) {\n        while( true ) {\n            if ((0x3ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10, \n               *puVar1 <= &stack0xfffffffffc000078 && &stack0xfffffffffc000078 != *puVar1)) break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffbfffff8;\n        }\n        puVar5 = &stack0xfffffffffbfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bea0();\n        (**ppcStackX16)();\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8000001) {\n        while( true ) {\n            if ((0x7ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10, \n               *puVar1 <= &stack0xfffffffff8000078 && &stack0xfffffffff8000078 != *puVar1)) break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffff7fffff8;\n        }\n        puVar5 = &stack0xfffffffff7fffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bea0();\n        (**ppcStackX16)();\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10000001) {\n        while( true ) {\n            if ((0xfffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10, \n               *puVar1 <= &stack0xfffffffff0000078 && &stack0xfffffffff0000078 != *puVar1)) break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffeffffff8;\n        }\n        puVar5 = &stack0xffffffffeffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bea0();\n        (**ppcStackX16)();\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20000001) {\n        while( true ) {\n            if ((0x1fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10, \n               *puVar1 <= &stack0xffffffffe0000078 && &stack0xffffffffe0000078 != *puVar1)) break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffdffffff8;\n        }\n        puVar5 = &stack0xffffffffdffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bea0();\n        (**ppcStackX16)();\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40000001) {\n        while( true ) {\n            if ((0x3fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + *0x598520) + 0x10, \n               *puVar1 <= &stack0xffffffffc0000078 && &stack0xffffffffc0000078 != *puVar1)) break;\n            fcn.0045bdc0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffbffffff8;\n        }\n        puVar5 = &stack0xffffffffbffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bea0();\n        (**ppcStackX16)();\n        fcn.0045bde0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045ae20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    iVar3 = **(in_GS_OFFSET + *0x598520);\n    do {\n        puVar1 = iVar3 + 0x10;\n        if (*puVar1 <= *0x20 && *0x20 != *puVar1) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x436987;\n            fcn.00432de0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43698d;\n        fcn.0045bdc0();\n    } while( true );\n}\n",
        "token_count": 9650
    },
    "00467400": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint64_t fcn.00467400(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    uint64_t arg1_01;\n    ulong in_RDX;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    int64_t unaff_R14;\n    int64_t iStack96;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00402740(arg1, in_RDX);\n    if (iStack96 != -1) {\n        return 0;\n    }\n    arg1_01 = unaff_RBX * 2 + 1;\n    iVar1 = fcn.00445720(arg1_01);\n    arg1_00 = 0;\n    uVar2 = 0;\n    while (arg1_00 < unaff_RBX) {\n        uVar3 = *(in_RAX + arg1_00);\n        if (*(in_RAX + arg1_00) < 0x80) {\n            arg1_00 = arg1_00 + 1;\n        }\n        else {\n            uVar3 = fcn.004575e0(arg1_00);\n            arg1_00 = unaff_RBX;\n        }\n        if ((uVar3 < 0xd800) || (uVar3 - 0xe000 < 0x2000)) {\n            uVar2 = uVar2 + 1;\n            if (arg1_01 < uVar2) {\n                iVar1 = fcn.00445800(arg1_01);\n            }\n            *(iVar1 + -2 + uVar2 * 2) = uVar3;\n        }\n        else {\n            uVar3 = uVar3 - 0x10000;\n            if (uVar3 < 0x100000) {\n                uVar2 = uVar2 + 2;\n                if (arg1_01 < uVar2) {\n                    iVar1 = fcn.00445800(arg1_01);\n                }\n                *(iVar1 + -4 + uVar2 * 2) = (uVar3 >> 10 & 0x3ff) + 0xd800;\n                *(iVar1 + -2 + uVar2 * 2) = (uVar3 & 0x3ff) + 0xdc00;\n            }\n            else {\n                uVar2 = uVar2 + 1;\n                if (arg1_01 < uVar2) {\n                    iVar1 = fcn.00445800(arg1_01);\n                }\n                *(iVar1 + -2 + uVar2 * 2) = 0xfffd;\n            }\n        }\n    }\n    if (arg1_01 < uVar2 + 1) {\n        iVar1 = fcn.00445800(arg1_01);\n    }\n    *(iVar1 + -2 + (uVar2 + 1) * 2) = 0;\n    return iVar1;\n}\n",
        "token_count": 698
    },
    "00486060": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.00486060(void)\n\n{\n    int64_t in_RAX;\n    uint32_t uVar1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = unaff_RBX;\n    if (0x10ffff < unaff_RBX) {\n        uVar1 = 0xfffd;\n    }\n    if (0x7f < uVar1) {\n        fcn.0046e2a0(0x44);\n    }\n    else {\n        *(in_RAX + 0x28) = uVar1;\n    }\n    fcn.00484760(0x7f >= uVar1);\n    return;\n}\n",
        "token_count": 202
    },
    "00477a60": {
        "rules": [
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b",
            "search for credit card data/ac143e9ae29c414184a69c9308e24693"
        ],
        "decompiled_code": "\nuint64_t fcn.00477a60(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint16_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    \n    iVar9 = *0x53e330;\n    uVar4 = in_RAX;\n    if (uVar4 < 0x100) {\n        if (uVar4 - 0x20 < 0x5f) {\n            return 1;\n        }\n        if (0xa0 < uVar4) {\n            return in_RAX & 0xffffffffffffff00 | uVar4 != 0xad;\n        }\n        return 0;\n    }\n    if (uVar4 < 0x10000) {\n        uVar15 = 0;\n        uVar12 = *0x53e358;\n        uVar8 = *0x53e318;\n        uVar11 = *0x53e310;\n        iVar9 = *0x53e350;\n        uVar13 = *0x53e358;\n    }\n    else {\n        uVar14 = 0;\n        uVar5 = *0x53e378;\n        while (uVar12 = uVar5,  uVar8 = *0x53e338,  uVar11 = *0x53e370,  uVar13 = *0x53e378,  uVar14 < uVar12) {\n            iVar7 = uVar12 - uVar14 >> 1;\n            uVar5 = iVar7 + uVar14;\n            uVar15 = uVar14;\n            if (*0x53e378 <= uVar5) goto code_r0x00477c3b;\n            if (*(*0x53e370 + uVar5 * 4) < uVar4) {\n                uVar14 = uVar14 + iVar7 + 1;\n                uVar5 = uVar12;\n            }\n        }\n        if (*0x53e378 <= uVar14) {\n            return 0;\n        }\n        uVar15 = uVar14 & 0xfffffffffffffffe;\n        if (uVar15 < *0x53e378) {\n            uVar2 = *(*0x53e370 + uVar15 * 4);\n            uVar15 = uVar2;\n            if (uVar4 < uVar2) {\n                return 0;\n            }\n            uVar14 = uVar14 | 1;\n            if (uVar14 < *0x53e378) {\n                if (*(*0x53e370 + uVar14 * 4) < uVar4) {\n                    return 0;\n                }\n                if (0x1ffff < uVar4) {\n                    return 1;\n                }\n                uVar11 = uVar4 - 0x10000;\n                uVar6 = 0;\n                uVar12 = *0x53e338;\n                uVar5 = *0x53e378;\n                while (uVar13 = uVar12,  uVar10 = uVar4 - 0x10000,  uVar6 < uVar13) {\n                    uVar8 = uVar13 - uVar6 >> 1;\n                    uVar5 = uVar8 + uVar6;\n                    uVar12 = *0x53e338;\n                    uVar15 = uVar5;\n                    if (*0x53e338 <= uVar5) goto code_r0x00477c15;\n                    uVar1 = *(*0x53e330 + uVar5 * 2);\n                    uVar14 = uVar1;\n                    uVar12 = uVar5;\n                    if (uVar1 < uVar10) {\n                        uVar6 = uVar6 + uVar8 + 1;\n                        uVar12 = uVar13;\n                        uVar5 = uVar13;\n                        uVar15 = uVar8 + 1;\n                    }\n                }\n                if (*0x53e338 <= uVar6) {\n                    return 1;\n                }\n                if (uVar6 < *0x53e338) {\n                    uVar1 = *(*0x53e330 + uVar6 * 2);\n                    return uVar1 & 0xff00 | uVar1 != uVar10;\n                }\n                uVar8 = *0x53e338;\n                uVar12 = fcn.0045e420(*0x53e338);\n                uVar13 = uVar5;\ncode_r0x00477c15:\n                fcn.0045e420(uVar12);\n            }\n            fcn.0045e420(uVar13);\n        }\n        fcn.0045e420(uVar13);\n        uVar12 = uVar14;\ncode_r0x00477c3b:\n        in_RAX = fcn.0045e420(uVar13);\n    }\n    while (uVar5 = uVar12,  uVar10 = in_RAX,  uVar15 < uVar5) {\n        iVar7 = uVar5 - uVar15 >> 1;\n        uVar12 = iVar7 + uVar15;\n        if (uVar13 <= uVar12) goto code_r0x00477d50;\n        if (*(iVar9 + uVar12 * 2) < uVar10) {\n            uVar15 = uVar15 + iVar7 + 1;\n            uVar12 = uVar5;\n        }\n    }\n    if (uVar13 <= uVar15) {\n        return 0;\n    }\n    if ((uVar15 & 0xfffffffffffffffe) < uVar13) {\n        if (uVar10 < *(iVar9 + (uVar15 & 0xfffffffffffffffe) * 2)) {\n            return 0;\n        }\n        if ((uVar15 | 1) < uVar13) {\n            if (*(iVar9 + (uVar15 | 1) * 2) < uVar10) {\n                return 0;\n            }\n            uVar12 = 0;\n            uVar14 = uVar8;\n            uVar5 = uVar13;\n            while (uVar13 = uVar14,  uVar12 < uVar13) {\n                iVar9 = uVar13 - uVar12 >> 1;\n                uVar5 = iVar9 + uVar12;\n                if (uVar8 <= uVar5) goto code_r0x00477d30;\n                uVar14 = uVar5;\n                if (*(uVar11 + uVar5 * 2) < uVar10) {\n                    uVar12 = uVar12 + iVar9 + 1;\n                    uVar14 = uVar13;\n                    uVar5 = uVar13;\n                }\n            }\n            if (uVar8 <= uVar12) {\n                return 1;\n            }\n            if (uVar12 < uVar8) {\n                uVar1 = *(uVar11 + uVar12 * 2);\n                return uVar1 & 0xff00 | uVar1 != uVar10;\n            }\n            fcn.0045e420(uVar8);\n            uVar13 = uVar5;\ncode_r0x00477d30:\n            fcn.0045e420(uVar8);\n        }\n        fcn.0045e420(uVar13);\n    }\n    fcn.0045e420(uVar13);\ncode_r0x00477d50:\n    fcn.0045e420(uVar13);\n    pcVar3 = swi(3);\n    uVar5 = (*pcVar3)();\n    return uVar5;\n}\n",
        "token_count": 1738
    },
    "00401080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401080(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00401640();\n    fcn.004010e0();\n    return;\n}\n",
        "token_count": 90
    },
    "00402820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040284d)\n\nint64_t fcn.00402820(void)\n\n{\n    float *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*in_RAX != 0.0) {\n        iVar1 = fcn.0045de40(4);\n        return iVar1;\n    }\n    return (unaff_RBX ^ 0x756ea16a56a621) * 0x52ef6bbb8f63bf;\n}\n",
        "token_count": 177
    },
    "00402920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040294f)\n\nint64_t fcn.00402920(void)\n\n{\n    double *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*in_RAX != 0.0) {\n        iVar1 = fcn.0045de40(8);\n        return iVar1;\n    }\n    return (unaff_RBX ^ 0x756ea16a56a621) * 0x52ef6bbb8f63bf;\n}\n",
        "token_count": 177
    },
    "00402a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402a20(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00402820();\n    fcn.00402820(in_RAX + 4);\n    return;\n}\n",
        "token_count": 104
    },
    "00402a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402a80(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00402920();\n    fcn.00402920(in_RAX + 8);\n    return;\n}\n",
        "token_count": 104
    },
    "00403760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.00403760(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x56a790);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x10400 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 != 0) {\n        return *(iVar2 + 0x65);\n    }\n    return 0;\n}\n",
        "token_count": 249
    },
    "004037e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004037e0(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x1260);\n    *puVar2 = *CONCAT71(in_RAX, in_AL);\n    puVar2[1] = unaff_RBX;\n    iVar3 = *(iVar1 + 0x1260) + 0x10;\n    *(iVar1 + 0x1260) = iVar3;\n    if (*(iVar1 + 0x1268) == iVar3) {\n        fcn.0042cf00();\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00404040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00404040(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    cVar2 = func_0x004238e0();\n    if (cVar2 == '\\0') {\n        if (*0x544c30 == NULL) {\n            iVar4 = 0;\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = **0x544c30;\n            iVar4 = (*0x544c30)[1];\n        }\n        iVar3 = 0;\n        while( true ) {\n            if (iVar4 <= iVar3) {\n                return 0;\n            }\n            iVar1 = *(iVar5 + iVar3 * 8);\n            if (((*(iVar1 + 0xd0) < in_RAX || *(iVar1 + 0xd0) == in_RAX) && (in_RAX < *(iVar1 + 0xd8))) ||\n               ((*(iVar1 + 0xe0) < in_RAX || *(iVar1 + 0xe0) == in_RAX && (in_RAX < *(iVar1 + 0xe8))))) break;\n            iVar3 = iVar3 + 1;\n        }\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 317
    },
    "00404ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404ba0(void)\n\n{\n    fcn.00404be0(1);\n    return;\n}\n",
        "token_count": 27
    },
    "00405900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405900(void)\n\n{\n    fcn.00405940(1);\n    return;\n}\n",
        "token_count": 25
    },
    "00406300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00406300(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    iVar1 = *0x598388;\n    fcn.0040a740();\n    if ((0 < in_RAX) && (in_RAX != iVar1)) {\n        fcn.004381c0();\n        *0x5983a0 = in_RAX;\n        fcn.00438240();\n        return iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 176
    },
    "00406a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00406a80(void)\n\n{\n    code *in_RAX;\n    int64_t unaff_R14;\n    uchar uStack50;\n    uchar uStack49;\n    uchar auStack48 [8];\n    uchar *puStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    puStack40 = auStack48;\n    uStack50 = 0;\n    auStack32 = CONCAT88(&uStack50, 0x406b40);\n    ppcStack16 = auStack32;\n    uStack49 = 1;\n    (*in_RAX)();\n    uStack50 = 1;\n    uStack49 = 0;\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 222
    },
    "00406ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00406ba0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.00435120();\n    fcn.00434f40();\n    return;\n}\n",
        "token_count": 934
    },
    "00407d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407d00(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (in_RAX != 0) {\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 < 0x8d826c96) {\n            if (uVar4 < 0x5272f85d) {\n                if (uVar4 < 0x3e2307d5) {\n                    if (uVar4 == 0x778cdb8) {\n                        if (in_RAX == 0x496000) {\n                            fcn.00434ec0();\n                            fcn.004357c0();\n                            fcn.00434f40();\n                            return;\n                        }\n                    }\n                    else if ((uVar4 == 0x3e2307d4) && (in_RAX == 0x4959c0)) {\n                        fcn.00434ec0();\n                        fcn.004355c0();\n                        fcn.00434f40();\n                        return;\n                    }\n                }\n                else if (uVar4 == 0x43daea34) {\n                    if (in_RAX == 0x495a80) {\n                        fcn.00434ec0();\n                        fcn.004355c0();\n                        fcn.00434f40();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x5272f85c) && (in_RAX == 0x4961c0)) {\n                    fcn.00434ec0();\n                    fcn.004354c0();\n                    fcn.00434f40();\n                    return;\n                }\n            }\n            else if (uVar4 < 0x6bed3cfb) {\n                if (uVar4 == 0x64fd0d3c) {\n                    if (in_RAX == 0x496080) {\n                        fcn.00434ec0();\n                        fcn.004354c0();\n                        fcn.00434f40();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x6bed3cfa) && (in_RAX == 0x495a00)) {\n                    fcn.00434ec0();\n                    fcn.004355c0();\n                    fcn.00434f40();\n                    return;\n                }\n            }\n            else if (uVar4 == 0x7688f20c) {\n                if (in_RAX == 0x4954c0) {\n                    uVar5 = unaff_RBX[1];\n                    uVar3 = *unaff_RBX;\n                    fcn.00434ec0();\n                    fcn.00435420(uVar3, uVar5);\n                    fcn.00434f40();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0x8d826c95) && (uVar5 = 0x495540,  in_RAX == 0x495540)) {\n                fcn.00434ec0();\n                fcn.004351c0(uVar5, param_2);\n                fcn.00434f40();\n                return;\n            }\n        }\n        else if (uVar4 < 0x99d6dd44) {\n            if (uVar4 < 0x93592d95) {\n                if (uVar4 == 0x8fc52ddb) {\n                    if (in_RAX == 0x496140) {\n                        fcn.00434ec0();\n                        fcn.004354c0();\n                        fcn.00434f40();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x93592d94) && (uVar5 = 0x495580,  in_RAX == 0x495580)) {\n                    fcn.00434ec0();\n                    fcn.004351c0(uVar5, param_2);\n                    fcn.00434f40();\n                    return;\n                }\n            }\n            else if (uVar4 == 0x95738979) {\n                if (in_RAX == 0x496180) {\n                    fcn.00434ec0();\n                    fcn.004354c0();\n                    fcn.00434f40();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0x99d6dd43) && (in_RAX == 0x495a40)) {\n                fcn.00434ec0();\n                fcn.004355c0();\n                fcn.00434f40();\n                return;\n            }\n        }\n        else if (uVar4 < 0xc1efe3a3) {\n            if (uVar4 == 0xb00b9f48) {\n                if (in_RAX == 0x495400) {\n                    fcn.00434ec0();\n                    fcn.00435160();\n                    fcn.00434f40();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xc1efe3a2) && (in_RAX == 0x495500)) {\n                fVar1 = *(unaff_RBX + 4);\n                fVar2 = *unaff_RBX;\n                fcn.00434ec0();\n                fcn.00435420(fVar2, fVar1);\n                fcn.00434f40();\n                return;\n            }\n        }\n        else if (uVar4 == 0xcb735792) {\n            if (in_RAX == 0x495980) {\n                fcn.00434ec0();\n                fcn.004355c0();\n                fcn.00434f40();\n                return;\n            }\n        }\n        else if (uVar4 == 0xd9632893) {\n            if (in_RAX == 0x4960c0) {\n                fcn.00434ec0();\n                fcn.004354c0();\n                fcn.00434f40();\n                return;\n            }\n        }\n        else if ((uVar4 == 0xe927f9e3) && (in_RAX == 0x496100)) {\n            fcn.00434ec0();\n            fcn.004354c0();\n            fcn.00434f40();\n            return;\n        }\n        fcn.00408280();\n        return;\n    }\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00434f40();\n    return;\n}\n",
        "token_count": 1519
    },
    "00408280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408280(void)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    int64_t noname_0;\n    ulong uVar4;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00455540();\n    noname_0 = *(in_RAX + 0x17) - 1;\n    uVar4 = 0x4cad40;\n    switch(noname_0) {\n    case 0:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.00435160();\n        fcn.004357c0();\n        fcn.00434f40();\n        break;\n    case 1:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.00434f40();\n        break;\n    case 2:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.00434f40();\n        break;\n    case 3:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.00434f40();\n        break;\n    case 4:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.00434f40();\n        break;\n    case 5:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.00434f40();\n        break;\n    case 6:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.00434f40();\n        break;\n    case 7:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.00434f40();\n        break;\n    case 8:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.00434f40();\n        break;\n    case 9:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.00434f40();\n        break;\n    case 10:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.00434f40();\n        break;\n    case 0xb:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.00434f40();\n        break;\n    case 0xc:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004351c0(noname_0, uVar4);\n        fcn.004357c0();\n        fcn.00434f40();\n        break;\n    case 0xd:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004351c0(noname_0, uVar4);\n        fcn.004357c0();\n        fcn.00434f40();\n        break;\n    case 0xe:\n        fVar1 = *unaff_RBX;\n        fVar2 = *(unaff_RBX + 4);\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00435420(fVar1, fVar2);\n        fcn.00434f40();\n        break;\n    case 0xf:\n        uVar4 = *unaff_RBX;\n        uVar3 = unaff_RBX[1];\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00435420(uVar4, uVar3);\n        fcn.00434f40();\n        break;\n    default:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.00435740();\n        fcn.00434f40();\n        break;\n    case 0x17:\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.00434f40();\n    }\n    return;\n}\n",
        "token_count": 1328
    },
    "00409520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00409520(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = *(unaff_RBX + 0x10) ^ *(arg1 + 0x10);\n    iVar3 = 1;\n    while( true ) {\n        uVar2 = uVar2 & *in_RAX - 1U;\n        piVar1 = in_RAX[uVar2 + 2];\n        if (piVar1 == NULL) {\n            return NULL;\n        }\n        if ((*piVar1 == unaff_RBX) && (piVar1[1] == arg1)) break;\n        uVar2 = uVar2 + iVar3;\n        iVar3 = iVar3 + 1;\n    }\n    return piVar1;\n}\n",
        "token_count": 206
    },
    "004096c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004096c0(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *unaff_RBX;\n    \n    uVar1 = *(*unaff_RBX + 0x10) ^ *(unaff_RBX[1] + 0x10);\n    iVar2 = 1;\n    while( true ) {\n        uVar1 = uVar1 & *in_RAX - 1U;\n        if (unaff_RBX == in_RAX[uVar1 + 2]) {\n            return;\n        }\n        if (in_RAX[uVar1 + 2] == NULL) break;\n        uVar1 = uVar1 + iVar2;\n        iVar2 = iVar2 + 1;\n    }\n    in_RAX[uVar1 + 2] = unaff_RBX;\n    in_RAX[1] = in_RAX[1] + 1;\n    return;\n}\n",
        "token_count": 214
    },
    "00409b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409b40(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    if (*0x544c30 == NULL) {\n        iVar3 = 0;\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = **0x544c30;\n        iVar3 = (*0x544c30)[1];\n    }\n    for (iVar2 = 0; iVar2 < iVar3; iVar2 = iVar2 + 1) {\n        iVar1 = *(*(iVar4 + iVar2 * 8) + 0x180);\n        for (iVar5 = 0; iVar5 < iVar1; iVar5 = iVar5 + 1) {\n            fcn.00409580();\n        }\n    }\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 267
    },
    "00409ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00409ee0(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (in_EAX < 0x100) {\n        puVar1 = in_EAX * 8 + 0x5389e0;\n    }\n    else {\n        puVar1 = fcn.0040bd20(0);\n        *puVar1 = in_EAX;\n    }\n    return puVar1;\n}\n",
        "token_count": 162
    },
    "00409f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.00409f60(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (in_RAX < 0x100) {\n        puVar1 = in_RAX * 8 + 0x5389e0;\n    }\n    else {\n        puVar1 = fcn.0040bd20(0);\n        *puVar1 = in_RAX;\n    }\n    return puVar1;\n}\n",
        "token_count": 162
    },
    "0040a140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040a140(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (unaff_RBX != 0) {\n        iVar1 = fcn.00409220(1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 146
    },
    "0040a1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a1e0(void)\n\n{\n    uint64_t *puVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (puVar1 = *0x53d958,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    for (uVar2 = 0; uVar2 <= *puVar1 && *puVar1 != uVar2; uVar2 = uVar2 + 1) {\n        if (puVar1[uVar2 + 2] != 0) {\n            (**in_RAX)(*in_RAX, in_RAX);\n        }\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0040a4e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a4e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 85
    },
    "0040a700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a700(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040ae80();\n    return;\n}\n",
        "token_count": 83
    },
    "0040ac80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ac80(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x40) = 0x40acb7;\n                fcn.0042fee0();\n                *(*0x20 + -0x40) = 0x40acca;\n                fcn.0040a9e0(0);\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x40) = 0x40ace5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x40acf5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 410
    },
    "0040ad20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0040ad20(void)\n\n{\n    uchar uVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) != unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x48) = 0x40ad57;\n                fcn.0042fee0();\n                *(*0x20 + -0x48) = 0x40ad5c;\n                fcn.0043d8a0();\n                *(*0x20 + -0x48) = 0x40ad6f;\n                uVar1 = fcn.0040a9e0(0);\n                *(*0x20 + -0x19) = uVar1;\n                *(*0x20 + -0x48) = 0x40ad78;\n                fcn.004597a0();\n                return *(*0x20 + -0x19);\n            }\n            unaff_RBX = 0x11;\n            *(*0x20 + -0x48) = 0x40ad98;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40ada8;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 505
    },
    "0040ae40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ae40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    return;\n}\n",
        "token_count": 83
    },
    "0040ae80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ae80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 83
    },
    "0040b9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0040b9a0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            iVar2 = 0;\n            while( true ) {\n                *(*0x20 + -0x30) = iVar2;\n                *(*0x20 + -0x20) = unaff_RBX + arg1;\n                *(*0x20 + -0x48) = 0x40b9f4;\n                uVar1 = fcn.00414fe0();\n                if (uVar1 == 0) {\n                    return 0;\n                }\n                if ((*(*0x20 + 0x18) - 1U & uVar1) == 0) {\n                    return uVar1;\n                }\n                *(*0x20 + -0x28) = uVar1;\n                *(*0x20 + -0x18) = *(*0x20 + 0x18) - 1U;\n                *(*0x20 + -0x48) = 0x40ba32;\n                fcn.00414ea0();\n                *(*0x20 + -0x28) = *(*0x20 + -0x18) + *(*0x20 + -0x28) & -*(*0x20 + 0x18);\n                *(*0x20 + -0x48) = 0x40ba5c;\n                uVar1 = fcn.00414fe0();\n                if (uVar1 == *(*0x20 + -0x28)) {\n                    return uVar1;\n                }\n                *(*0x20 + -0x48) = 0x40ba76;\n                fcn.00414ea0();\n                arg1 = *(*0x20 + -0x30);\n                if (arg1 == 99) break;\n                iVar2 = arg1 + 1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x48) = 0x40bacf;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40bae5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 799
    },
    "0040bb00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.0040bb00(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint8_t unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint16_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = unaff_BL;\n            if (uVar3 < 0x88) {\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + 8) = in_RAX;\n                noname_0 = *(in_RAX + 0x28 + uVar3 * 8);\n                *(*0x20 + -0x18) = noname_0;\n                *(*0x20 + -0x48) = 0x40bb4d;\n                uVar1 = fcn.00411640(noname_0, uVar3, param_3, param_4);\n                iVar2 = *(*0x20 + -0x18);\n                uVar3 = *(iVar2 + 0x38);\n                if (uVar1 == uVar3) {\n                    *(*0x20 + -0x20) = uVar3;\n                    uVar5 = *(iVar2 + 0x60);\n                    if (uVar3 == uVar5) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x48) = 0x40bb85;\n                        fcn.00413800();\n                        *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x28 + *(*0x20 + -0x10) * 8);\n                        *(*0x20 + -0x48) = 0x40bb9e;\n                        uVar1 = fcn.00411640(*(*0x20 + -0x10), *(*0x20 + 8), param_3, param_4);\n                        iVar2 = *(*0x20 + -0x18);\n                        goto code_r0x0040bbb2;\n                    }\n                }\n                else {\ncode_r0x0040bbb2:\n                    if (uVar1 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar1) {\n                        uVar5 = *(iVar2 + 0x60) + 1;\n                        *(iVar2 + 0x60) = uVar5;\n                        param_3 = *(iVar2 + 0x38);\n                        if (uVar5 <= param_3) {\n                            return uVar1 * *(iVar2 + 0x68) + *(iVar2 + 0x18);\n                        }\n                        *(*0x20 + -0x2a) = uVar5;\n                        *(*0x20 + -0x20) = param_3;\n                        *(*0x20 + -0x48) = 0x40bc05;\n                        fcn.00434ec0();\n                        *(*0x20 + -0x48) = 0x40bc16;\n                        fcn.004357c0();\n                        *(*0x20 + -0x48) = 0x40bc25;\n                        fcn.004354c0();\n                        *(*0x20 + -0x48) = 0x40bc36;\n                        fcn.004357c0();\n                        *(*0x20 + -0x48) = 0x40bc45;\n                        fcn.004354c0();\n                        *(*0x20 + -0x48) = 0x40bc4a;\n                        fcn.00435120();\n                        *(*0x20 + -0x48) = 0x40bc4f;\n                        fcn.00434f40();\n                        *(*0x20 + -0x48) = 0x40bc65;\n                        fcn.00433580();\n                    }\n                    uVar5 = iVar2;\n                    *(*0x20 + -0x48) = 0x40bc76;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x2a) = uVar5;\n                *(*0x20 + -0x48) = 0x40bc85;\n                fcn.00434ec0();\n                *(*0x20 + -0x48) = 0x40bc96;\n                fcn.004357c0();\n                *(*0x20 + -0x48) = 0x40bca5;\n                fcn.004354c0();\n                *(*0x20 + -0x48) = 0x40bcb6;\n                fcn.004357c0();\n                *(*0x20 + -0x48) = 0x40bcc5;\n                fcn.004354c0();\n                *(*0x20 + -0x48) = 0x40bcca;\n                fcn.00435120();\n                *(*0x20 + -0x48) = 0x40bccf;\n                fcn.00434f40();\n                unaff_BL = 0x31;\n                *(*0x20 + -0x48) = 0x40bce5;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x48) = 0x40bcf2;\n            in_RAX = fcn.0045e420(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x40bd05;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1433
    },
    "0040c6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c6e0(void)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040bd20(1, *in_RAX);\n    return;\n}\n",
        "token_count": 99
    },
    "0040ca40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040ca40(ulong arg1)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    ulong uStack56;\n    ulong uStack48;\n    ulong *puStack40;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uStack56 = 0;\n    uStack48 = 0x40cb00;\n    puStack40 = &uStack56;\n    auStack24 = CONCAT88(arg1, unaff_RBX);\n    fcn.0045bc80();\n    return uStack56;\n}\n",
        "token_count": 168
    },
    "0040d220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nint64_t fcn.0040d220(void)\n\n{\n    uchar auVar1 [16];\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar2 = fcn.0040c6e0();\n    uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar1 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n    *(iVar2 + 0xc) = SUB164(auVar1, 0) ^ SUB164(auVar1 >> 0x40, 0);\n    return iVar2;\n}\n",
        "token_count": 244
    },
    "004115e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004115e0(void)\n\n{\n    ulong unaff_RBX;\n    \n    fcn.00411cc0(unaff_RBX);\n    fcn.0045eaa0();\n    return;\n}\n",
        "token_count": 47
    },
    "00411c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00411c60(uint64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_RDI;\n    \n    while( true ) {\n        if (arg1 != 0) {\n            iVar1 = 0;\n            if (arg1 != 0) {\n                for (; (arg1 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                }\n            }\n            return in_RAX;\n        }\n        unaff_RBX = unaff_RBX + unaff_RDI * -8;\n        if (unaff_RBX == 0) break;\n        in_RAX = fcn.00411b40();\n        unaff_RDI = unaff_RDI * 8;\n    }\n    return in_RAX + unaff_RDI * 8;\n}\n",
        "token_count": 204
    },
    "004136e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004136e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0045bc80();\n    return;\n}\n",
        "token_count": 83
    },
    "00413e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413e20(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0x488);\n            if (iVar1 == *0x56a738) {\n                return;\n            }\n            if (iVar1 == *0x56a738 + -2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x413e59;\n                fcn.00413c20();\n                *(*0x20 + -0x28) = 0x413e65;\n                fcn.00446480();\n                *(*(*0x20 + 8) + 0x488) = *0x56a738;\n                return;\n            }\n            *(*0x20 + -0xc) = *0x56a738;\n            *(*0x20 + -0x10) = iVar1;\n            *(*0x20 + -0x28) = 0x413e98;\n            fcn.00434ec0();\n            *(*0x20 + -0x28) = 0x413ea9;\n            fcn.004357c0();\n            *(*0x20 + -0x28) = 0x413eb4;\n            fcn.004354c0();\n            *(*0x20 + -0x28) = 0x413ec5;\n            fcn.004357c0();\n            *(*0x20 + -0x28) = 0x413ece;\n            fcn.004354c0();\n            *(*0x20 + -0x28) = 0x413ed3;\n            fcn.00435120();\n            *(*0x20 + -0x28) = 0x413ed8;\n            fcn.00434f40();\n            *(*0x20 + -0x28) = 0x413ee9;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x413ef4;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 624
    },
    "00414440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414440(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \ncode_r0x00414440:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x40;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x10) = *0x56a9d8;\n        *(*0x20 + -0x18) = *0x56a9e0;\n        iVar2 = 0;\n        iVar4 = *0x56a9d8;\n        iVar3 = *0x56a9e0;\n        do {\n            if (iVar3 <= iVar2) {\n                *0x598350 = 1;\n                return;\n            }\n            uVar1 = *(iVar4 + iVar2 * 8);\n            uVar6 = uVar1 >> 0x14;\n            if (0x3f < uVar6) goto code_r0x00414538;\n            *(*0x20 + -0x20) = iVar2;\n            iVar3 = *(*(uVar6 * 8 + 0x56a790) + (uVar1 & 0xfffff) * 8);\n            if (*(iVar3 + 0x114c0) == 0) {\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0x48) = 0x4144ff;\n                iVar3 = fcn.0040ca40(0x59ae58);\n                if (iVar3 == 0) goto code_r0x00414527;\n                *(*(*0x20 + -0x28) + 0x114c0) = iVar3;\n            }\n            else {\n                *(*0x20 + -0x48) = 0x4144e5;\n                fcn.0045eaa0();\n            }\n            iVar2 = *(*0x20 + -0x20) + 1;\n            iVar3 = *(*0x20 + -0x18);\n            iVar4 = *(*0x20 + -0x10);\n        } while( true );\n    }\n    goto code_r0x00414546;\ncode_r0x00414527:\n    *(*0x20 + -0x48) = 0x414538;\n    fcn.00433580();\ncode_r0x00414538:\n    *(*0x20 + -0x48) = 0x414545;\n    fcn.0045e440(0x40);\ncode_r0x00414546:\n    *(puVar5 + -8) = 0x41454b;\n    fcn.0045bdc0();\n    *0x20 = puVar5;\n    goto code_r0x00414440;\n}\n",
        "token_count": 716
    },
    "00414560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414560(void)\n\n{\n    bool bVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x545a20 == 0) {\n                if (*0x545aa8 < *0x545aac) {\n                    bVar1 = true;\n                }\n                else {\n                    bVar1 = false;\n                }\n            }\n            else {\n                bVar1 = true;\n            }\n            if (!bVar1) {\n                *0x598350 = 0;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x4145c9;\n            fcn.00433580();\n        }\n        *(puVar2 + -8) = 0x4145cf;\n        fcn.0045bdc0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 296
    },
    "004145e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004145e0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t in_RAX;\n    uint8_t *puVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint8_t uVar3;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((*unaff_RDI & unaff_SIL) != 0) {\n                unaff_RBX = in_RAX + 0x800000000000;\n                if (unaff_RBX >> 0x2a < 0x40) {\n                    puVar1 = *(*(*((unaff_RBX >> 0x2a) * 8 + 0x56a790) + (unaff_RBX >> 0x16 & 0xfffff) * 8) + 0x114c0) +\n                             (in_RAX >> 0x19 & 0xffff);\n                    uVar3 = 1 << (in_RAX >> 0x16 & 7);\n                    if ((uVar3 & *puVar1) != 0) {\n                        return 1;\n                    }\n                    LOCK();\n                    *puVar1 = *puVar1 | uVar3;\n                    return 0;\n                }\n                arg1 = 0x40;\n                *(*0x20 + -0x40) = 0x41469a;\n                in_RAX = fcn.0045e440(0x40);\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x4146ae;\n            fcn.00434ec0();\n            *(*0x20 + -0x40) = 0x4146b3;\n            fcn.00434ec0();\n            *(*0x20 + -0x40) = 0x4146c5;\n            fcn.004357c0();\n            *(*0x20 + -0x40) = 0x4146cf;\n            fcn.00435620();\n            *(*0x20 + -0x40) = 0x4146d4;\n            fcn.00435120();\n            *(*0x20 + -0x40) = 0x4146d9;\n            fcn.00434f40();\n            *(*0x20 + -0x40) = 0x4146de;\n            fcn.00434ec0();\n            *(*0x20 + -0x40) = 0x4146ef;\n            fcn.004357c0();\n            *(*0x20 + -0x40) = 0x4146f9;\n            fcn.00435620();\n            *(*0x20 + -0x40) = 0x41470a;\n            fcn.004357c0();\n            *(*0x20 + -0x40) = 0x414714;\n            fcn.00435620();\n            *(*0x20 + -0x40) = 0x414725;\n            fcn.004357c0();\n            *(*0x20 + -0x40) = 0x41472a;\n            fcn.00434f40();\n            *(*0x20 + -0x40) = 0x414745;\n            fcn.0041cce0(*(*0x20 + -0x10));\n            arg1 = *(*0x20 + 8);\n            unaff_RDI = 0xffffffffffffffff;\n            *(*0x20 + -0x40) = 0x414765;\n            fcn.0041cce0(arg1);\n            *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x40) = 0x414785;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        puVar2[0x28] = unaff_SIL;\n        *(puVar2 + 0x30) = arg3;\n        *(puVar2 + -8) = 0x4147a9;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        unaff_SIL = puVar2[0x28];\n        arg3 = *(puVar2 + 0x30);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1251
    },
    "004147e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004147e0(void)\n\n{\n    int64_t in_RAX;\n    ulong uStack16;\n    \n    fcn.0042cc40();\n    LOCK();\n    *0x598dc0 = *0x598dc0 + in_RAX;\n    fcn.00430a00();\n    return uStack16;\n}\n",
        "token_count": 74
    },
    "00414880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414880(void)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    LOCK();\n    *0x598dc0 = *0x598dc0 - unaff_RBX;\n    fcn.00414a60(unaff_RBX);\n    return;\n}\n",
        "token_count": 118
    },
    "004148e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004148e0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (iVar1 = *0x598dc0,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    LOCK();\n    *0x598dc0 = *0x598dc0 + arg1;\n    fcn.00414c40(iVar1);\n    return;\n}\n",
        "token_count": 130
    },
    "00414940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414940(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    \n    fcn.0042cc40();\n    iVar1 = *0x598dc0;\n    LOCK();\n    *0x598dc0 = *0x598dc0 - unaff_RBX;\n    fcn.00414ea0(iVar1);\n    return;\n}\n",
        "token_count": 90
    },
    "004149a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004149a0(void)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    LOCK();\n    *0x598dc0 = *0x598dc0 - unaff_RBX;\n    fcn.00414fa0(unaff_RBX);\n    return;\n}\n",
        "token_count": 119
    },
    "00414a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414a00(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0042cc40();\n    return;\n}\n",
        "token_count": 86
    },
    "00414fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414fa0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00414a60();\n    return;\n}\n",
        "token_count": 83
    },
    "00414fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00414fe0(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack24;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00430a00();\n    if (iStack24 != 0) {\n        return iStack24;\n    }\n    fcn.00430a00();\n    return 0;\n}\n",
        "token_count": 123
    },
    "00415360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041538d)\n\nvoid fcn.00415360(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x598374 == 0) {\n        LOCK();\n        *0x598374 = 1;\n        fcn.0043e360();\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "004162c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004162c0(void)\n\n{\n    ulong arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    *0x54577c = 0x80000000;\n    fcn.0041e6e0();\n    arg1 = fcn.0041e760();\n    fcn.0041d300(arg1);\n    *0x545b18 = 0x100000001;\n    return;\n}\n",
        "token_count": 143
    },
    "00417f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417f00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    for (; *0x598378 < *0x598388; *0x598378 = *0x598378 + 1) {\n        fcn.0043e360();\n        fcn.0040ad20();\n        *0x545b20 = 0;\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00419160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419160(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t *in_RAX;\n    char unaff_BL;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*in_RAX == 0) {\n                *in_RAX = 1;\n                if (*(in_RAX + 8) != unaff_BL) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_BL;\n                    *(*0x20 + -0x28) = 0x4191a8;\n                    fcn.00419360();\n                    iVar1 = *(*0x20 + -0x10);\n                    *(iVar1 + 0x20) = *(*0x20 + 0x10);\n                    *(iVar1 + 0x21) = 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x4191d4;\n                fcn.00433580();\n            }\n            unaff_BL = '/';\n            *(*0x20 + -0x28) = 0x4191e5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        puVar2[0x10] = unaff_BL;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x4191f9;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_BL = puVar2[0x10];\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 505
    },
    "00419560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419560(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    \n    uVar1 = *(in_RAX + 8);\n    uVar3 = *(in_RAX + 0x10) - uVar1;\n    uVar2 = arg1 - unaff_RBX;\n    if ((0 < uVar2) && (uVar3 <= uVar2)) {\n        *(in_RAX + 0x18) = *(in_RAX + 0x18) + (uVar2 - uVar3);\n        *(in_RAX + 8) = *(in_RAX + 0x10);\n        if (uVar3 != 0) {\n            *(in_RAX + 4) = 1;\n            *(in_RAX + 0x48) = *0x59be78 + 1;\n        }\n        return;\n    }\n    if ((uVar2 < 0) && (uVar1 <= unaff_RBX - arg1)) {\n        *(in_RAX + 8) = 0;\n    }\n    else {\n        *(in_RAX + 8) = uVar1 - (unaff_RBX - arg1);\n    }\n    if ((uVar2 != 0) && (uVar3 == 0)) {\n        *(in_RAX + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 335
    },
    "00419660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419660(ulong arg1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int32_t *in_RAX;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*in_RAX == 0) {\n                *in_RAX = 1;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x28) = 0x4196a5;\n                fcn.00419360();\n                iVar2 = *(*0x20 + 0x18);\n                iVar4 = *(*0x20 + -0x10);\n                *(iVar4 + 0x4c) = iVar2;\n                puVar5 = iVar2 * 1000000000;\n                *(iVar4 + 0x10) = puVar5;\n                puVar6 = *(iVar4 + 8);\n                if (puVar5 < puVar6) {\n                    *(iVar4 + 8) = puVar5;\n                    uVar1 = *(iVar4 + 4);\n                    *(iVar4 + 4) = 1;\n                    puVar6 = uVar1;\n                    uVar3 = *(iVar4 + 0x48);\n                    *(iVar4 + 0x48) = *0x59be78 + 1;\n                    puVar5 = uVar3;\n                }\n                else if (puVar6 < puVar5) {\n                    puVar5 = iVar4 + 4;\n                    uVar1 = *puVar5;\n                    *puVar5 = 0;\n                    puVar6 = uVar1;\n                }\n                *(*0x20 + -0x28) = 0x4196f7;\n                fcn.00419600(puVar5, puVar6);\n                return;\n            }\n            unaff_RBX = 0x28;\n            *(*0x20 + -0x28) = 0x419712;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x419726;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 741
    },
    "00419b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419b80(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x545aac <= *0x545aa8) {\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x419c60;\n                *(*0x20 + -0x10) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x419bd7;\n                fcn.00436c60();\n                return;\n            }\n            *(*0x20 + -0x24) = *0x545aa8;\n            *(*0x20 + -0x28) = *0x545aac;\n            *(*0x20 + -0x40) = 0x419bee;\n            fcn.00434ec0();\n            *(*0x20 + -0x40) = 0x419bf7;\n            fcn.004354c0();\n            *(*0x20 + -0x40) = 0x419c08;\n            fcn.004357c0();\n            *(*0x20 + -0x40) = 0x419c11;\n            fcn.004354c0();\n            *(*0x20 + -0x40) = 0x419c25;\n            fcn.004357c0();\n            *(*0x20 + -0x40) = 0x419c2a;\n            fcn.00434f40();\n            *(*0x20 + -0x40) = 0x419c3b;\n            fcn.00433580();\n        }\n        *(puVar1 + -8) = 0x419c45;\n        fcn.0045bdc0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 540
    },
    "0041a320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0041a320(int64_t arg1)\n\n{\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (unaff_RBX <= unaff_RSI * 0x40000) {\n        return 0;\n    }\n    iVar1 = 0x40000;\n    if (unaff_RBX < unaff_RSI * 0x40000 + 0x40000U) {\n        iVar1 = unaff_RBX + unaff_RSI * -0x40000;\n    }\n    fcn.0041c260(arg1 + unaff_RSI * 0x1000);\n    return iVar1;\n}\n",
        "token_count": 215
    },
    "0041aea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041aea0(void)\n\n{\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    *0x545b50 = in_XMM15;\n    fcn.0043c020();\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 123
    },
    "0041c940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041c940(void)\n\n{\n    int64_t iVar1;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    arg3 = 0;\n    iVar1 = fcn.004119e0(0);\n    if (iVar1 != 0) {\n        fcn.0041c9c0(0, *(unaff_R14 + 0x30), arg3);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0041d240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d240(void)\n\n{\n    int64_t noname_1;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x5455b8,  iVar1 = *0x5455b0,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n        noname_1 = *(*(iVar1 + iVar3 * 8) + 0x40);\n        if ((noname_1 != 0) && (*(noname_1 + 0x10) != 0)) {\n            arg3 = 0;\n            fcn.004119e0(0);\n            fcn.0041c9c0(0, noname_1, arg3);\n        }\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "0041d6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\ndouble fcn.0041d6e0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    double dVar3;\n    int32_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar8 = *in_RAX;\n    iVar1 = *(in_RAX + 0x14);\n    iVar6 = *(in_RAX + 0x16);\n    iVar5 = *(in_RAX + 0x22);\n    iVar2 = *(in_RAX + 0x24);\n    iVar9 = *(in_RAX + 0x26);\n    iVar4 = fcn.0041e300();\n    if (iVar8 < 0) {\n        iVar8 = 100000;\n    }\n    iVar9 = iVar5 + iVar2 + iVar9;\n    iVar5 = *(in_RAX + 0x1a) + *(in_RAX + 0x18) + *(in_RAX + 0x1e);\n    iVar6 = iVar6 + *(in_RAX + 0x1c) + *(in_RAX + 0x1e);\n    if (iVar5 < iVar9) {\n        iVar2 = *(in_RAX + 0x10) + ((iVar4 - *(in_RAX + 0x10)) / iVar5) * iVar6;\n        iVar7 = (*0x4c9f28 + iVar8 / *0x4c9f68) * iVar4;\n        iVar4 = iVar2;\n        iVar5 = iVar6;\n        if (iVar7 < iVar2) {\n            iVar4 = iVar7;\n        }\n    }\n    if (iVar4 < iVar1) {\n        iVar4 = *0x4c9f30 * iVar4;\n        iVar5 = iVar6;\n    }\n    iVar5 = iVar5 - iVar9;\n    if (iVar5 < 1000) {\n        iVar5 = 1000;\n    }\n    iVar4 = iVar4 - iVar1;\n    if (iVar4 < 1) {\n        iVar4 = 1;\n    }\n    *(in_RAX + 0x38) = iVar5 / iVar4;\n    dVar3 = *(in_RAX + 0x3a);\n    *(in_RAX + 0x3a) = iVar4 / iVar5;\n    return dVar3;\n}\n",
        "token_count": 601
    },
    "0041e300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e300(void)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar2 = *(in_RAX + 0x30);\n    uVar1 = fcn.0041e3a0();\n    if (uVar2 <= uVar1) {\n        if (uVar2 < *(in_RAX + 0x38)) {\n            uVar2 = *(in_RAX + 0x38);\n        }\n        if ((*(in_RAX + 0x40) == -1) || (uVar1 = *(in_RAX + 0x40) + 0x10000,  uVar1 <= uVar2)) {\n            uVar1 = uVar2;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 243
    },
    "0041e440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041e440(void)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x41e465;\n            uVar1 = fcn.0041e300();\n            uVar3 = *(*(*0x20 + 8) + 0x80);\n            if (uVar1 <= uVar3) {\n                return;\n            }\n            if (unaff_RBX < uVar3) {\n                unaff_RBX = uVar3;\n            }\n            uVar2 = uVar1 - uVar3 >> 6;\n            uVar5 = uVar2 * 0x2d + uVar3;\n            if (unaff_RBX < uVar5) {\n                unaff_RBX = uVar5;\n            }\n            uVar3 = uVar3 + uVar2 * 0x3d;\n            if ((uVar1 < 0x400001) || (uVar2 = uVar1 - 0x400000,  uVar1 - 0x400000 <= uVar3)) {\n                uVar2 = uVar3;\n            }\n            uVar3 = *(*(*0x20 + 8) + 0x18);\n            uVar5 = uVar1 - uVar3;\n            if (uVar1 < uVar3) {\n                uVar5 = unaff_RBX;\n            }\n            if (uVar2 < unaff_RBX) {\n                uVar2 = unaff_RBX;\n            }\n            if (uVar5 < unaff_RBX) {\n                uVar5 = unaff_RBX;\n            }\n            if (uVar2 < uVar5) {\n                uVar5 = uVar2;\n            }\n            if (uVar5 <= uVar1) {\n                return;\n            }\n            *(*0x20 + -0x10) = uVar1;\n            *(*0x20 + -0x28) = uVar5;\n            *(*0x20 + -0x18) = uVar2;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x41e518;\n            fcn.00434ec0();\n            *(*0x20 + -0x40) = 0x41e529;\n            fcn.004357c0();\n            *(*0x20 + -0x40) = 0x41e533;\n            fcn.004354c0();\n            *(*0x20 + -0x40) = 0x41e545;\n            fcn.004357c0();\n            *(*0x20 + -0x40) = 0x41e54f;\n            fcn.004354c0();\n            *(*0x20 + -0x40) = 0x41e554;\n            fcn.00435120();\n            *(*0x20 + -0x40) = 0x41e559;\n            fcn.00434f40();\n            *(*0x20 + -0x40) = 0x41e55e;\n            fcn.00434ec0();\n            *(*0x20 + -0x40) = 0x41e56f;\n            fcn.004357c0();\n            *(*0x20 + -0x40) = 0x41e579;\n            fcn.004354c0();\n            *(*0x20 + -0x40) = 0x41e58a;\n            fcn.004357c0();\n            *(*0x20 + -0x40) = 0x41e594;\n            fcn.004354c0();\n            *(*0x20 + -0x40) = 0x41e599;\n            fcn.00435120();\n            *(*0x20 + -0x40) = 0x41e59e;\n            fcn.00434f40();\n            unaff_RBX = 0x2d;\n            *(*0x20 + -0x40) = 0x41e5af;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41e5ba;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1145
    },
    "0041e840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041e840(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    int32_t iVar6;\n    \n    while( true ) {\n        uVar2 = *(in_RAX + 0xd8);\n        iVar6 = uVar2;\n        if (uVar2 >> 0x20 <= iVar6) {\n            return 0;\n        }\n        if (iVar6 < 0) break;\n        LOCK();\n        puVar1 = in_RAX + 0xd8;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * (*puVar1 ^ (uVar2 & 0xffffffff00000000 | iVar6 + 1));\n        if (uVar2 == uVar3) {\n            return 1;\n        }\n    }\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.004355c0();\n    fcn.004357c0();\n    fcn.004355c0();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00433580();\n    pcVar4 = swi(3);\n    uVar5 = (*pcVar4)();\n    return uVar5;\n}\n",
        "token_count": 318
    },
    "0041e920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e920(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                uVar2 = *(in_RAX + 0xd8);\n                uVar3 = uVar2 - 1;\n                if (uVar3 < 0) break;\n                LOCK();\n                puVar1 = in_RAX + 0xd8;\n                bVar5 = uVar2 == *puVar1;\n                *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ (uVar2 & 0xffffffff00000000 | uVar3));\n                if (bVar5) {\n                    return uVar2 ^ !bVar5 * (uVar2 ^ *puVar1);\n                }\n            }\n            *(*0x20 + -0x10) = uVar2 >> 0x20;\n            *(*0x20 + -0x18) = uVar2;\n            *(*0x20 + -0x30) = 0x41e98b;\n            fcn.00434ec0();\n            *(*0x20 + -0x30) = 0x41e99c;\n            fcn.004357c0();\n            *(*0x20 + -0x30) = 0x41e9a9;\n            fcn.004355c0();\n            *(*0x20 + -0x30) = 0x41e9ba;\n            fcn.004357c0();\n            *(*0x20 + -0x30) = 0x41e9c7;\n            fcn.004355c0();\n            *(*0x20 + -0x30) = 0x41e9cc;\n            fcn.00435120();\n            *(*0x20 + -0x30) = 0x41e9d1;\n            fcn.00434f40();\n            *(*0x20 + -0x30) = 0x41e9e5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41e9f0;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 666
    },
    "0041ea00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041ea00(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while (uVar2 = *(in_RAX + 0xd8),  -1 < uVar2) {\n                LOCK();\n                puVar1 = in_RAX + 0xd8;\n                bVar4 = uVar2 == *puVar1;\n                *puVar1 = *puVar1 ^ bVar4 * (*puVar1 ^ (uVar2 & 0xffffffff | unaff_EBX << 0x20));\n                if (bVar4) {\n                    return uVar2 ^ !bVar4 * (uVar2 ^ *puVar1);\n                }\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = uVar2;\n            *(*0x20 + -0x28) = 0x41ea65;\n            fcn.00434ec0();\n            *(*0x20 + -0x28) = 0x41ea76;\n            fcn.004357c0();\n            *(*0x20 + -0x28) = 0x41ea85;\n            fcn.004355c0();\n            *(*0x20 + -0x28) = 0x41ea96;\n            fcn.004357c0();\n            *(*0x20 + -0x28) = 0x41eaa5;\n            fcn.004355c0();\n            *(*0x20 + -0x28) = 0x41eaaa;\n            fcn.00435120();\n            *(*0x20 + -0x28) = 0x41eaaf;\n            fcn.00434f40();\n            unaff_EBX = 0x1a;\n            *(*0x20 + -0x28) = 0x41eac5;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x41ead4;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 680
    },
    "00420620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420620(char param_1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x100) < unaff_RBX || *(in_RAX + 0x100) == unaff_RBX) &&\n               (unaff_RBX <= *(in_RAX + 0x108) && *(in_RAX + 0x108) != unaff_RBX)) {\n                piVar2 = in_RAX + 0x118;\n                if (param_1 != '\\0') {\n                    piVar2 = in_RAX + 0x128;\n                }\n                *(*0x20 + -0x10) = piVar2;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar1 = *piVar2;\n                if (iVar1 == 0) {\n                    *(*0x20 + -0x28) = 0x4206cd;\n                    iVar1 = fcn.00422fe0();\n                    *(iVar1 + 0x10) = in_XMM15;\n                    **(*0x20 + -0x10) = iVar1;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                else if (*(iVar1 + 0x10) == 0xfc) {\n                    iVar1 = *(in_RAX + 0x120);\n                    if (iVar1 == 0) {\n                        *(*0x20 + -0x28) = 0x4206a7;\n                        iVar1 = fcn.00422fe0();\n                        piVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                    else {\n                        *(in_RAX + 0x120) = 0;\n                    }\n                    *(iVar1 + 0x10) = 0;\n                    *(iVar1 + 0x18) = *piVar2;\n                    *piVar2 = iVar1;\n                }\n                if (*(iVar1 + 0x10) < 0xfc) {\n                    *(iVar1 + 0x20 + *(iVar1 + 0x10) * 8) = unaff_RBX;\n                    *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                    return;\n                }\n                param_1 = -4;\n                *(*0x20 + -0x28) = 0x42070b;\n                fcn.0045e420(0xfc);\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x28) = 0x42071c;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x420730;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 878
    },
    "00422861": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00422861(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    \n    if (*0x54577c == -0x80000000) {\n        *0x56a778 = 0.0;\n    }\n    else {\n        iVar1 = (in_RAX - *0x598cf0) + -0x100000;\n        if (iVar1 < 0x2000) {\n            iVar1 = 0x2000;\n        }\n        if (*0x56a758 - *0x56a760 < 1) {\n            *0x56a778 = 0.0;\n        }\n        else {\n            *0x56a778 = (*0x56a758 - *0x56a760) / iVar1;\n            *0x56a770 = *0x598cf0;\n            *0x56a768 = *0x56a760;\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00422900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422900(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = fcn.00422fe0();\n    *in_RAX = uVar1;\n    iVar2 = fcn.00423320();\n    if (iVar2 == 0) {\n        iVar2 = fcn.00422fe0();\n    }\n    in_RAX[1] = iVar2;\n    return;\n}\n",
        "token_count": 162
    },
    "00423260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423260(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00422f80();\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 93
    },
    "004232c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004232c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00422f20();\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 94
    },
    "00423320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00423320(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x545a20 == 0) {\n        piVar1 = NULL;\n    }\n    else {\n        piVar1 = (*0x545a20 >> 0x13) << 3;\n        *0x545a20 = *piVar1;\n        LOCK();\n    }\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    fcn.00422f20();\n    return piVar1;\n}\n",
        "token_count": 177
    },
    "004233c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.004233c0(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x4233e5;\n            iVar2 = fcn.00422fe0();\n            iVar1 = *(*0x20 + 8);\n            iVar3 = *(iVar1 + 0x10) / 2;\n            *(iVar1 + 0x10) = *(iVar1 + 0x10) - iVar3;\n            *(iVar2 + 0x10) = iVar3;\n            if (*(iVar1 + 0x10) < 0xfd) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x30) = 0x423433;\n                fcn.0045eda0(iVar3 << 3);\n                *(*0x20 + -0x30) = 0x42343d;\n                fcn.004232c0();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x30) = 0x423459;\n            in_RAX = fcn.0045e420(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x423465;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 483
    },
    "00423980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00423980(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x56a790);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x10400 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 351
    },
    "004241e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004241e0(uchar param_1)\n\n{\n    int64_t unaff_R14;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uStack56 = 0;\n    uStack48 = 0x4242a0;\n    fcn.0045bc80();\n    return uStack56;\n}\n",
        "token_count": 159
    },
    "00424320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424320(char param_1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (param_1 != '\\0') {\n                *(*0x20 + -0x28) = 0x42433f;\n                fcn.004246e0();\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x28) = 0x42435a;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        puVar1[0x18] = param_1;\n        *(puVar1 + -8) = 0x42436e;\n        fcn.00460800();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        param_1 = puVar1[0x18];\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 363
    },
    "00425200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425200(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0045bc80();\n    return;\n}\n",
        "token_count": 82
    },
    "00425300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425300(uchar param_1)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.00460800();\n    }\n    *(unaff_RBX + 100) = 1;\n    fcn.0040a520();\n    fcn.004253a0(param_1);\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 128
    },
    "00425760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425760(ulong arg1)\n\n{\n    uint *in_RAX;\n    ulong unaff_RBX;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *in_RAX = in_XMM15_Da;\n    in_RAX[1] = in_XMM15_Db;\n    in_RAX[2] = in_XMM15_Dc;\n    in_RAX[3] = in_XMM15_Dd;\n    *(in_RAX + 4) = 0;\n    *(in_RAX + 6) = unaff_RBX;\n    *(in_RAX + 8) = arg1;\n    *(in_RAX + 0x18) = 0;\n    *(in_RAX + 0x62) = 0;\n    *(in_RAX + 0x1a) = 0;\n    in_RAX[0x1e] = in_XMM15_Da;\n    in_RAX[0x1f] = in_XMM15_Db;\n    in_RAX[0x20] = in_XMM15_Dc;\n    in_RAX[0x21] = in_XMM15_Dd;\n    *(in_RAX + 0x19) = 0;\n    *(in_RAX + 0xc) = 0;\n    *(in_RAX + 0x26) = 0;\n    in_RAX[0x12] = in_XMM15_Da;\n    in_RAX[0x13] = in_XMM15_Db;\n    in_RAX[0x14] = in_XMM15_Dc;\n    in_RAX[0x15] = in_XMM15_Dd;\n    *(in_RAX + 99) = 0;\n    return;\n}\n",
        "token_count": 405
    },
    "004260e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004260e0(void)\n\n{\n    ulong *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    puVar1 = fcn.00425ca0();\n    if (puVar1 != NULL) {\n        fcn.0040a520();\n        *0x5710f0 = *0x5710f0 - *0x5710c0;\n        *puVar1 = *0x5710d8;\n        *0x5710d8 = puVar1;\n        fcn.0040a740();\n        return;\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "00426180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426180(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x4261af;\n            fcn.0040a520();\n            *(*0x20 + -0x30) = 0x4261bb;\n            uVar3 = fcn.00416180();\n            *(*0x20 + -0x18) = uVar3;\n            *(*0x20 + -0x30) = 0x4261ce;\n            fcn.0040a740();\n            iVar1 = *(*0x20 + -0x18);\n            *(iVar1 + 10) = 2;\n            *(iVar1 + 0x10) = *(*0x20 + 0x10);\n            *(*0x20 + -0x30) = 0x4261ea;\n            cVar2 = fcn.00425a60();\n            if (cVar2 != '\\0') {\n                return;\n            }\n            unaff_RBX = 0x25;\n            *(*0x20 + -0x30) = 0x426209;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x426219;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 538
    },
    "00426380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00426380(void)\n\n{\n    bool bVar1;\n    int64_t *piVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        piVar2 = *0x598670;\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar7 = in_RAX + 0x3fU >> 6;\n            if (*0x598670 == NULL) {\n                bVar1 = true;\n            }\n            else {\n                bVar1 = 0xfff0 < **0x598670 + uVar7 * 8;\n            }\n            if (bVar1) {\n                iVar5 = 0;\ncode_r0x00426413:\n                if (iVar5 != 0) {\n                    return iVar5;\n                }\n                *(*0x20 + -0x10) = uVar7 * 8;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x48) = 0x426434;\n                fcn.0040a520();\n                piVar2 = *0x598670;\n                if (*0x598670 == NULL) {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = true;\n                }\n                else {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = 0xfff0 < **0x598670 + iVar5 * 8;\n                }\n                if (bVar1) {\n                    iVar5 = 0;\ncode_r0x004264b3:\n                    if (iVar5 != 0) {\n                        *(*0x20 + -0x20) = iVar5;\n                        *(*0x20 + -0x48) = 0x42662b;\n                        fcn.0040a740();\n                        return *(*0x20 + -0x20);\n                    }\n                    *(*0x20 + -0x48) = 0x4264c5;\n                    piVar4 = fcn.004267a0();\n                    piVar2 = *0x598670;\n                    if (*0x598670 == NULL) {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = true;\n                    }\n                    else {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = 0xfff0 < **0x598670 + iVar5 * 8;\n                    }\n                    if (bVar1) {\n                        iVar9 = *(*0x20 + -0x10);\n                        iVar6 = 0;\ncode_r0x00426540:\n                        if (iVar6 != 0) {\n                            *(*0x20 + -0x28) = iVar6;\n                            piVar4[1] = *0x598668;\n                            *(*0x20 + -0x48) = 0x426609;\n                            *0x598668 = piVar4;\n                            fcn.0040a740();\n                            return *(*0x20 + -0x28);\n                        }\n                        if (piVar4 == NULL) {\n                            bVar1 = true;\n                        }\n                        else {\n                            bVar1 = 0xfff0 < *piVar4 + iVar5 * 8;\n                        }\n                        if (bVar1) {\n                            iVar5 = 0;\ncode_r0x004265a4:\n                            if (iVar5 != 0) {\n                                *(*0x20 + -0x30) = iVar5;\n                                piVar4[1] = *0x598670;\n                                *(*0x20 + -0x48) = 0x4265d5;\n                                *0x598670 = piVar4;\n                                fcn.0040a740();\n                                return *(*0x20 + -0x30);\n                            }\n                            *(*0x20 + -0x48) = 0x426658;\n                            fcn.00433580();\n                        }\n                        else {\n                            LOCK();\n                            iVar6 = *piVar4;\n                            *piVar4 = *piVar4 + iVar9;\n                            uVar7 = iVar6 + iVar5 * 8;\n                            if (0xfff0 < uVar7) {\n                                iVar5 = 0;\n                                goto code_r0x004265a4;\n                            }\n                            uVar7 = uVar7 - iVar9;\n                            if (uVar7 < 0xfff0) {\n                                iVar5 = uVar7 + 0x10 + piVar4;\n                                goto code_r0x004265a4;\n                            }\n                        }\n                        *(*0x20 + -0x48) = 0x426665;\n                        fcn.0045e440(0xfff0);\n                    }\n                    else {\n                        iVar9 = *(*0x20 + -0x10);\n                        LOCK();\n                        iVar6 = **0x598670;\n                        **0x598670 = **0x598670 + iVar9;\n                        uVar7 = iVar6 + iVar5 * 8;\n                        if (0xfff0 < uVar7) {\n                            iVar6 = 0;\n                            goto code_r0x00426540;\n                        }\n                        uVar7 = uVar7 - iVar9;\n                        if (uVar7 < 0xfff0) {\n                            iVar6 = uVar7 + 0x10 + piVar2;\n                            goto code_r0x00426540;\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x426672;\n                    fcn.0045e440(0xfff0);\n                }\n                else {\n                    iVar9 = *(*0x20 + -0x10);\n                    LOCK();\n                    iVar6 = **0x598670;\n                    **0x598670 = **0x598670 + iVar9;\n                    uVar7 = iVar6 + iVar5 * 8;\n                    if (0xfff0 < uVar7) {\n                        iVar5 = 0;\n                        goto code_r0x004264b3;\n                    }\n                    uVar7 = uVar7 - iVar9;\n                    if (uVar7 < 0xfff0) {\n                        iVar5 = piVar2 + uVar7 + 0x10;\n                        goto code_r0x004264b3;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x42667c;\n                fcn.0045e440(0xfff0);\n            }\n            else {\n                LOCK();\n                iVar5 = **0x598670;\n                **0x598670 = **0x598670 + uVar7 * 8;\n                uVar3 = iVar5 + uVar7 * 8;\n                if (0xfff0 < uVar3) {\n                    iVar5 = 0;\n                    goto code_r0x00426413;\n                }\n                uVar3 = uVar3 + uVar7 * -8;\n                if (uVar3 < 0xfff0) {\n                    iVar5 = uVar3 + 0x10 + piVar2;\n                    goto code_r0x00426413;\n                }\n            }\n            *(*0x20 + -0x48) = 0x426686;\n            in_RAX = fcn.0045e440(0xfff0);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x426691;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1771
    },
    "004266a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004266a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00426380();\n    return;\n}\n",
        "token_count": 82
    },
    "004266e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004266e0(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    if (*0x598680 != 0) {\n        iVar1 = *0x598680;\n        if (*0x598668 == 0) {\n            *0x598668 = *0x598680;\n        }\n        else {\n            do {\n                iVar3 = iVar1;\n                iVar1 = *(iVar3 + 8);\n            } while (iVar1 != 0);\n            *(iVar3 + 8) = *0x598668;\n            *0x598668 = *0x598680;\n        }\n    }\n    uVar2 = *0x598670;\n    *0x598680 = *0x598678;\n    *0x598678 = *0x598670;\n    *0x598670 = 0;\n    fcn.0040a740(uVar2);\n    return;\n}\n",
        "token_count": 277
    },
    "004267a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004267a0(void)\n\n{\n    int64_t iVar1;\n    uchar (*pauVar2) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x598668 != 0) {\n                *(*0x20 + -0x18) = *0x598668;\n                *0x598668 = *(*0x598668 + 8);\n                *(*0x20 + -0x30) = 0x4267df;\n                fcn.0045eaa0();\n                pauVar2 = *(*0x20 + -0x18);\n                goto code_r0x00426822;\n            }\n            *(*0x20 + -0x30) = 0x4267f4;\n            fcn.0040a740();\n            *(*0x20 + -0x30) = 0x426805;\n            iVar1 = fcn.004147e0();\n            if (iVar1 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x42681d;\n                fcn.0040a520();\n                pauVar2 = *(*0x20 + -0x10);\ncode_r0x00426822:\n                *pauVar2 = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x30) = 0x426845;\n            fcn.00433580();\n        }\n        *(puVar3 + -8) = 0x42684b;\n        fcn.0045bdc0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 483
    },
    "00428a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00428a00(void)\n\n{\n    code *pcVar1;\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    if (unaff_RBX != 0) {\n        uVar5 = *in_RAX;\n        if (uVar5 < 0) {\n            uVar3 = 0x200000;\n            uVar4 = 0x200000;\n            uVar5 = 0x200000;\n        }\n        else {\n            uVar3 = uVar5 & 0x1fffff;\n            uVar4 = uVar5 >> 0x15 & 0x1fffff;\n            uVar5 = uVar5 >> 0x2a & 0x1fffff;\n        }\n        for (iVar2 = 1; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n            uVar8 = in_RAX[iVar2];\n            if (uVar8 < 0) {\n                uVar6 = 0x200000;\n                uVar7 = 0x200000;\n                uVar8 = 0x200000;\n            }\n            else {\n                uVar6 = uVar8 & 0x1fffff;\n                uVar7 = uVar8 >> 0x15 & 0x1fffff;\n                uVar8 = uVar8 >> 0x2a & 0x1fffff;\n            }\n            if (uVar3 == (iVar2 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40))) {\n                uVar3 = uVar3 + uVar6;\n            }\n            uVar9 = 1 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40);\n            if (uVar8 == uVar9) {\n                uVar8 = uVar9 + uVar5;\n            }\n            if (uVar4 < uVar6 + uVar5) {\n                uVar4 = uVar6 + uVar5;\n            }\n            if (uVar4 < uVar7) {\n                uVar4 = uVar7;\n            }\n            uVar5 = uVar8;\n        }\n        if (uVar4 == 0x200000) {\n            uVar5 = 0x8000000000000000;\n        }\n        else {\n            uVar5 = (uVar5 & 0x1fffff) << 0x2a | (uVar4 & 0x1fffff) << 0x15 | uVar3 & 0x1fffff;\n        }\n        return uVar5;\n    }\n    fcn.0045e420(0);\n    pcVar1 = swi(3);\n    uVar5 = (*pcVar1)();\n    return uVar5;\n}\n",
        "token_count": 702
    },
    "0042b060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.0042b060(void)\n\n{\n    bool bVar1;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (in_RAX < 1) {\n        in_RAX = 1;\n    }\n    if (*0x5983f0 < 1) {\n        bVar1 = true;\n    }\n    else if (in_RAX < *0x5983f0) {\n        uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar2 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n        bVar1 = in_RAX < SUB168((ZEXT816(SUB168(auVar2 >> 0x40, 0) ^ SUB168(auVar2, 0)) & 0xffffffffffffffff) %\n                                SEXT816(*0x5983f0), 0);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (!bVar1) {\n        fcn.0042b140(unaff_RBX + 1);\n    }\n    return;\n}\n",
        "token_count": 371
    },
    "0042b360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b360(void)\n\n{\n    ulong in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xa0) != 0) {\n                *(*0x20 + -0x20) = 0x42b391;\n                fcn.0042b3c0();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42b3ac;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42b3b7;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 303
    },
    "0042b700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b700(ulong arg1, ulong arg2)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        uVar2 = arg1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x58) = 0;\n            *(*0x20 + -0x60) = 0x42b73e;\n            uVar1 = fcn.004514c0(0, arg2, unaff_RDI, 0x20);\n            if (0x1f < uVar1) {\n                return;\n            }\n            if (uVar1 < 0x20) {\n                *(*(*0x20 + 0x20) + uVar1 * 8) = 0;\n                return;\n            }\n            uVar2 = 0x20;\n            *(*0x20 + -0x60) = 0x42b769;\n            in_RAX = fcn.0045e420(0x20);\n            unaff_RDI = arg1;\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = uVar2;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x42b785;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 543
    },
    "0042b7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b7a0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    if (arg1 == 0) {\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00435740();\n        fcn.004357c0();\n        fcn.00435620();\n        fcn.004357c0();\n        fcn.00434f40();\n    }\n    else {\n        fcn.00455540();\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00435740();\n        fcn.004357c0();\n        fcn.00435620();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.004357c0();\n        fcn.00434f40();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 == 0) || (unaff_R14 == iVar1)) {\n        fcn.00454940();\n        fcn.0045bc80();\n    }\n    else {\n        fcn.00454940();\n        fcn.00453ca0(0);\n    }\n    fcn.00434ec0();\n    fcn.00435120();\n    fcn.00434f40();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 427
    },
    "0042ba40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ba40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435740();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.004357c0();\n    fcn.00434f40();\n    fcn.00454940();\n    fcn.0045bc80();\n    fcn.00434ec0();\n    fcn.00435120();\n    fcn.00434f40();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 242
    },
    "0042bbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bbe0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00434f40();\n    fcn.00454b80();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00434f40();\n    fcn.00434ec0();\n    fcn.00435120();\n    fcn.00434f40();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 227
    },
    "0042bca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0042bca0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x800000000000 == in_RAX <= in_RAX + 0x800000000000) {\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x20) = 0x42bcf0;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x42bd05;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 341
    },
    "0042bd20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042bd20(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = in_RAX + 0x800000000000;\n            if ((arg1 + 0x800000000000U <= uVar1) && (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                return 0;\n            }\n            if ((arg1 + 0x800000000000U <= uVar1) || (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                if ((unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U) ||\n                   (unaff_RDI + 0x800000000000U <= uVar1)) {\n                    unaff_RDI = in_RAX;\n                }\n                return unaff_RDI;\n            }\n            unaff_RBX = 9;\n            *(*0x20 + -0x20) = 0x42bdce;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42bde8;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 577
    },
    "0042bee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0042bee0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    uint64_t arg1;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    \n    arg1 = in_RAX[1];\n    iVar3 = *in_RAX;\n    uVar6 = 0;\n    uVar1 = arg1;\n    while (uVar5 = uVar1,  8 < uVar5 - uVar6) {\n        iVar7 = (uVar5 - uVar6) / 2;\n        uVar1 = iVar7 + uVar6;\n        if (arg1 <= uVar1) goto code_r0x0042bfd0;\n        uVar8 = *(uVar1 * 0x10 + iVar3) + 0x800000000000;\n        uVar2 = unaff_RBX + 0x800000000000;\n        if ((uVar8 <= uVar2) && (uVar2 < *(iVar3 + 8 + uVar1 * 0x10) + 0x800000000000U)) {\n            return uVar6 + iVar7 + 1;\n        }\n        if (uVar8 <= uVar2) {\n            uVar6 = uVar6 + iVar7 + 1;\n            uVar1 = uVar5;\n        }\n    }\n    while( true ) {\n        if (uVar5 <= uVar6) {\n            return uVar5;\n        }\n        if (arg1 <= uVar6) break;\n        if (unaff_RBX + 0x800000000000U < *(uVar6 * 0x10 + iVar3) + 0x800000000000U) {\n            return uVar6;\n        }\n        uVar6 = uVar6 + 1;\n    }\n    arg1 = fcn.0045e420(arg1);\ncode_r0x0042bfd0:\n    fcn.0045e420(arg1);\n    pcVar4 = swi(3);\n    uVar6 = (*pcVar4)();\n    return uVar6;\n}\n",
        "token_count": 514
    },
    "0042c820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042c820(void)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int32_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t in_RAX;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    while( true ) {\n        uVar13 = *(in_RAX + 0x20);\n        uVar10 = uVar13 >> 0x20;\n        if (uVar13 <= uVar10) {\n            return 0;\n        }\n        if (*(in_RAX + 0x10) <= uVar13 >> 0x29) break;\n        while (uVar11 = uVar13 >> 0x20,  uVar11 == uVar10) {\n            LOCK();\n            puVar1 = in_RAX + 0x20;\n            uVar7 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar13 == uVar7) * (*puVar1 ^ (uVar10 + 1 << 0x20 | uVar13 & 0xffffffff));\n            if (uVar13 == uVar7) {\n                piVar4 = *(in_RAX + 8) + (uVar11 >> 9) * 8;\n                iVar8 = *piVar4;\n                piVar2 = iVar8 + (uVar11 & 0x1ff) * 8 + 0x18;\n                iVar12 = *piVar2;\n                while (iVar12 == 0) {\n                    iVar12 = *piVar2;\n                }\n                *piVar2 = 0;\n                LOCK();\n                piVar3 = iVar8 + 0x10;\n                iVar5 = *piVar3;\n                *piVar3 = *piVar3 + 1;\n                if (iVar5 == 0x1ff) {\n                    iVar9 = *piVar4;\n                    *piVar4 = 0;\n                    uVar6 = *(iVar8 + 0x10);\n                    *(iVar8 + 0x10) = 0;\n                    fcn.0040a2a0(uVar6, iVar9);\n                }\n                return iVar12;\n            }\n            uVar13 = *(in_RAX + 0x20);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 623
    },
    "0042c960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c960(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = *(in_RAX + 0x20);\n            piVar5 = uVar6 >> 0x20;\n            uVar4 = uVar6 >> 0x20;\n            if (uVar6 <= uVar4) {\n                uVar6 = uVar4 >> 9;\n                if (*(in_RAX + 0x10) <= uVar6) goto code_r0x0042c9ee;\n                piVar5 = *(in_RAX + 8) + uVar6 * 8;\n                iVar2 = *piVar5;\n                if (iVar2 == 0) goto code_r0x0042c9ee;\n                uVar6 = *(iVar2 + 0x10);\n                if (*(iVar2 + 0x10) != 0) {\n                    uVar6 = *(iVar2 + 0x10);\n                    if (*(iVar2 + 0x10) != 0x200) {\n                        *(*0x20 + 8) = in_RAX;\n                        iVar3 = *piVar5;\n                        *piVar5 = 0;\n                        uVar1 = *(iVar2 + 0x10);\n                        *(iVar2 + 0x10) = 0;\n                        *(*0x20 + -0x30) = 0x42c9e7;\n                        fcn.0040a2a0(uVar1, iVar3);\n                        in_RAX = *(*0x20 + 8);\ncode_r0x0042c9ee:\n                        *(in_RAX + 0x20) = 0;\n                        *(in_RAX + 0x10) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x42ca16;\n                    fcn.00433580();\n                }\n                *(*0x20 + -0x30) = 0x42ca27;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x10) = uVar6;\n            *(*0x20 + -0x18) = piVar5;\n            *(*0x20 + -0x30) = 0x42ca36;\n            fcn.00434ec0();\n            *(*0x20 + -0x30) = 0x42ca47;\n            fcn.004357c0();\n            *(*0x20 + -0x30) = 0x42ca51;\n            fcn.004354c0();\n            *(*0x20 + -0x30) = 0x42ca65;\n            fcn.004357c0();\n            *(*0x20 + -0x30) = 0x42ca71;\n            fcn.004354c0();\n            *(*0x20 + -0x30) = 0x42ca76;\n            fcn.00435120();\n            *(*0x20 + -0x30) = 0x42ca7b;\n            fcn.00434f40();\n            *(*0x20 + -0x30) = 0x42ca8c;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42ca97;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 937
    },
    "0042cac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.0042cac0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    do {\n        uVar1 = *in_RAX;\n        if (uVar1 == 0) {\n            puVar3 = NULL;\n            break;\n        }\n        puVar3 = (uVar1 >> 0x13) << 3;\n        LOCK();\n        uVar2 = *in_RAX;\n        *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ *puVar3);\n    } while (uVar1 != uVar2);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040ca40(0x59ae58);\n        return puVar3;\n    }\n    return puVar3;\n}\n",
        "token_count": 262
    },
    "0042cb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cb60(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            iVar1 = *in_RAX;\n            *in_RAX = *in_RAX + 1;\n            if (iVar1 + 1 != 0) {\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1 + 1;\n            *(*0x20 + -0x28) = 0x42cb9e;\n            fcn.00434ec0();\n            *(*0x20 + -0x28) = 0x42cbaf;\n            fcn.004357c0();\n            *(*0x20 + -0x28) = 0x42cbbd;\n            fcn.004354c0();\n            *(*0x20 + -0x28) = 0x42cbce;\n            fcn.004357c0();\n            *(*0x20 + -0x28) = 0x42cbd5;\n            fcn.004354c0();\n            *(*0x20 + -0x28) = 0x42cbda;\n            fcn.00435120();\n            *(*0x20 + -0x28) = 0x42cbdf;\n            fcn.00434f40();\n            *(*0x20 + -0x28) = 0x42cbf0;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x42cbfb;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 510
    },
    "0042cc40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cc40(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    \n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + unaff_RBX;\n    if (((unaff_RBX < 1) || (unaff_RBX <= unaff_RBX + iVar1)) &&\n       ((-1 < unaff_RBX || (unaff_RBX <= iVar1 + unaff_RBX * 2)))) {\n        return;\n    }\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.004354c0();\n    fcn.004357c0();\n    fcn.004355c0();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00433580();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 223
    },
    "0042cde0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cde0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t unaff_R14;\n    \n    iVar3 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar3 == 0) {\n        fcn.0040a740();\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + 0x2274;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        if ((iVar2 + 1U & 1) != 0) {\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.004354c0();\n            fcn.00435120();\n            fcn.00434f40();\n            fcn.00433580();\n            pcVar4 = swi(3);\n            (*pcVar4)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "0042d280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d280(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x598394 == 0) {\n        fcn.0040a520();\n        if (*0x598394 == 0) {\n            fcn.0042d540();\n            *0x598394 = 1;\n        }\n        fcn.0040a740();\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "0042d300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d300(void)\n\n{\n    int64_t in_RAX;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    *unaff_RBX = *(in_RAX + 8);\n    *(in_RAX + 8) = unaff_RBX;\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 138
    },
    "0042d540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d540(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_CreateIoCompletionPort;\n            *(*0x20 + -0x38) = 0xffffffffffffffff;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0xffffffff;\n            *(*0x20 + -0x48) = 0x42d585;\n            fcn.00430a00();\n            *0x52d378 = *(*0x20 + -0x18);\n            if (*0x52d378 != 0) {\n                return;\n            }\n            *(*0x20 + -0x48) = 0x42d5b7;\n            fcn.0045f960();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + *0x598520);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42d5d6;\n            fcn.00434ec0();\n            *(*0x20 + -0x48) = 0x42d5e7;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x42d5f1;\n            fcn.004354c0();\n            *(*0x20 + -0x48) = 0x42d605;\n            fcn.004357c0();\n            *(*0x20 + -0x48) = 0x42d60a;\n            fcn.00434f40();\n            *(*0x20 + -0x48) = 0x42d61b;\n            fcn.00433580();\n        }\n        *(puVar1 + -8) = 0x42d625;\n        fcn.0045bdc0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 674
    },
    "0042dba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042dba0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(unaff_RBX + 0x28);\n            if ((uVar1 == 0x72) || (uVar1 == 0x77)) {\n                *(unaff_RBX + 0x2c) = arg1;\n                *(unaff_RBX + 0x30) = unaff_EDI;\n                *(*0x20 + -0x30) = 0x42dbdb;\n                fcn.0042d380(uVar1);\n                return;\n            }\n            *(*0x20 + -0xc) = uVar1;\n            *(*0x20 + -0x30) = 0x42dbee;\n            fcn.00434ec0();\n            *(*0x20 + -0x30) = 0x42dbff;\n            fcn.004357c0();\n            *(*0x20 + -0x30) = 0x42dc0b;\n            fcn.004355c0();\n            *(*0x20 + -0x30) = 0x42dc10;\n            fcn.00435120();\n            *(*0x20 + -0x30) = 0x42dc15;\n            fcn.00434f40();\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x30) = 0x42dc26;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x1c) = unaff_EDI;\n        *(puVar2 + -8) = 0x42dc3e;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1._0_4_ = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x1c);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 647
    },
    "0042dc60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042dc60(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 - 1 < arg1) {\n                uVar1 = *((arg1 - 1) + unaff_RBX);\n                arg1 = uVar1;\n                if (uVar1 == 0) {\n                    *(*0x20 + -0x28) = _sym.imp.kernel32.dll_GetProcAddress;\n                    *(*0x20 + -0x20) = in_RAX;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x30) = 0x42dca9;\n                    fcn.00430900();\n                    return *(*0x20 + -0x10);\n                }\n                unaff_RBX = 5;\n                *(*0x20 + -0x30) = 0x42dcdb;\n                fcn.00433580();\n            }\n            *(*0x20 + -0x30) = 0x42dce5;\n            in_RAX = fcn.0045e420(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42dcff;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 568
    },
    "0042e9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e9c0(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00430a00();\n    if (iStack16 != 0) {\n        *0x598347 = 1;\n        fcn.00430880();\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0042eea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042eea0(void)\n\n{\n    fcn.00430880();\n    return -*0x5984e0 * *0x5984d8;\n}\n",
        "token_count": 41
    },
    "0042ef20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042ef20(void)\n\n{\n    fcn.00430880();\n    fcn.00430880();\n    return 0x195726909;\n}\n",
        "token_count": 38
    },
    "0042f2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f2e0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != 0) {\n        fcn.00430900();\n        fcn.00443740(arg1);\n        return;\n    }\n    fcn.0045e420(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 100
    },
    "0042f5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f5c0(void)\n\n{\n    fcn.0040a520();\n    *0x598368 = 1;\n    fcn.00430880();\n    return;\n}\n",
        "token_count": 45
    },
    "00430040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430040(void)\n\n{\n    int64_t iStack32;\n    \n    fcn.00430b00();\n    if (iStack32 != 0) {\n        fcn.00430880();\n        return;\n    }\n    if (*0x598368 != 0) goto code_r0x0043016f;\n    do {\n        fcn.0045f960();\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.004355c0();\n        fcn.004357c0();\n        fcn.004354c0();\n        fcn.004357c0();\n        fcn.00434f40();\n        fcn.00433580();\ncode_r0x0043016f:\n        fcn.0040a520();\n        fcn.0040a520();\n    } while( true );\n}\n",
        "token_count": 191
    },
    "00430640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430640(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*(in_RAX + 0x328) != 0) {\n        fcn.00430880();\n        *(in_RAX + 0x328) = 0;\n    }\n    if (*(in_RAX + 0x318) != 0) {\n        fcn.00430880();\n        *(in_RAX + 0x318) = 0;\n    }\n    if (*(in_RAX + 800) != 0) {\n        fcn.00430880();\n        *(in_RAX + 800) = 0;\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00430820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430820(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x280) = 0;\n    *(iVar1 + 0x288) = auStackX8;\n    fcn.00430740();\n    return;\n}\n",
        "token_count": 94
    },
    "00430880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430880(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [8];\n    ulong uStackX24;\n    \n    uStackX24 = 0;\n    iVar1 = *(**(in_GS_OFFSET + *0x598520) + 0x30);\n    *(iVar1 + 0x280) = 1;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430740();\n    return;\n}\n",
        "token_count": 118
    },
    "00430900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430900(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [16];\n    ulong uStackX32;\n    \n    uStackX32 = 0;\n    iVar1 = *(**(in_GS_OFFSET + *0x598520) + 0x30);\n    *(iVar1 + 0x280) = 2;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430740();\n    return;\n}\n",
        "token_count": 118
    },
    "00430980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430980(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = 0;\n    iVar1 = *(**(in_GS_OFFSET + *0x598520) + 0x30);\n    *(iVar1 + 0x280) = 3;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430740();\n    return;\n}\n",
        "token_count": 126
    },
    "00430a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430a00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = 0;\n    iVar1 = *(**(in_GS_OFFSET + *0x598520) + 0x30);\n    *(iVar1 + 0x280) = 4;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430740();\n    return;\n}\n",
        "token_count": 127
    },
    "00430a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430a80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000038;\n    \n    uStack0000000000000038 = 0;\n    iVar1 = *(**(in_GS_OFFSET + *0x598520) + 0x30);\n    *(iVar1 + 0x280) = 5;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430740();\n    return;\n}\n",
        "token_count": 127
    },
    "00430b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430b00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = 0;\n    iVar1 = *(**(in_GS_OFFSET + *0x598520) + 0x30);\n    *(iVar1 + 0x280) = 6;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430740();\n    return;\n}\n",
        "token_count": 127
    },
    "00430b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430b80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000048;\n    \n    uStack0000000000000048 = 0;\n    iVar1 = *(**(in_GS_OFFSET + *0x598520) + 0x30);\n    *(iVar1 + 0x280) = 7;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430740();\n    return;\n}\n",
        "token_count": 127
    },
    "00430c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430c40(void)\n\n{\n    fcn.0045bc80();\n    return;\n}\n",
        "token_count": 25
    },
    "00431c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431c60(void)\n\n{\n    code *pcVar1;\n    ushort *in_RAX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    \n    if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) {\n        *in_RAX = 0;\n        *(in_RAX + 1) = 0;\n        *(in_RAX + 4) = auStackX8;\n        *(in_RAX + 8) = in_stack_00000000;\n        *(in_RAX + 0x1c) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        *(in_RAX + 0x10) = 0;\n        *(in_RAX + 0x18) = 0;\n        *(in_RAX + 0x14) = *(unaff_R14 + 0x28);\n        *(unaff_R14 + 0x28) = in_RAX;\n        fcn.0045df20();\n        return;\n    }\n    fcn.00433580();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 328
    },
    "00432640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432640(int64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0045bc80();\n    return;\n}\n",
        "token_count": 86
    },
    "00433580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433580(void)\n\n{\n    fcn.0045bc80();\n    fcn.004338c0();\n    return;\n}\n",
        "token_count": 33
    },
    "00433680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433680(void)\n\n{\n    fcn.0045bc80();\n    fcn.004338c0();\n    return;\n}\n",
        "token_count": 33
    },
    "00434ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434ec0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + 1;\n    cVar1 = *(iVar2 + 0xe7);\n    *(iVar2 + 0xe7) = cVar1 + '\\x01';\n    if (cVar1 == '\\0') {\n        fcn.0040a520();\n    }\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 205
    },
    "004350e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004350e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.004357c0();\n    return;\n}\n",
        "token_count": 83
    },
    "00435120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435120(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.004357c0();\n    return;\n}\n",
        "token_count": 82
    },
    "00435160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435160(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (in_AL == '\\0') {\n        fcn.004357c0();\n    }\n    else {\n        fcn.004357c0();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00435420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435420(ulong param_1, ulong param_2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.004351c0(param_1, param_2);\n    fcn.004351c0(param_1, param_2);\n    fcn.004357c0();\n    fcn.00434f40();\n    return;\n}\n",
        "token_count": 150
    },
    "004355c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004355c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (in_RAX < 0) {\n        fcn.004357c0();\n    }\n    fcn.004354c0();\n    return;\n}\n",
        "token_count": 113
    },
    "00435620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435620(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = in_XMM15;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x43566f;\n            uVar2 = fcn.0045e6cb();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (iVar3 = 99;\n                (0 < iVar3 &&\n                ((*(*0x20 + iVar3 + -0x6c) = *((uVar2 & 0xf) + 0x4aa077),  0xf < uVar2 ||\n                 (iVar1 = *0x598468 + iVar3 + -100,  iVar1 != 0 && SBORROW8(*0x598468, -(iVar3 + -100)) == iVar1 < 0))))\n                ; iVar3 = iVar3 + -1) {\n                uVar2 = uVar2 >> 4;\n            }\n            if (iVar3 - 1U < 100) {\n                *(*0x20 + iVar3 + -0x6d) = 0x78;\n                if (iVar3 - 2U < 100) {\n                    *(*0x20 + iVar3 + -0x6e) = 0x30;\n                    *(*0x20 + -0x90) = 0x4356f8;\n                    fcn.00434fa0(-(iVar3 + -0x66));\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x435712;\n                fcn.0045e420(100);\n            }\n            *(*0x20 + -0x90) = 0x43571c;\n            in_RAX = fcn.0045e420(100);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x435727;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 626
    },
    "00435740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435740(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00435620();\n    return;\n}\n",
        "token_count": 81
    },
    "00435780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435780(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00435620();\n    return;\n}\n",
        "token_count": 81
    },
    "00435840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435840(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.004355c0();\n    fcn.004357c0();\n    fcn.004355c0();\n    fcn.004357c0();\n    fcn.00434f40();\n    fcn.00435620();\n    return;\n}\n",
        "token_count": 147
    },
    "00435920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435920(code **arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint *puVar2;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00434ec0();\n    *0x598468 = 0x10;\n    for (uVar1 = 0; uVar1 + in_RAX < unaff_RBX; uVar1 = uVar1 + 8) {\n        if ((uVar1 & 0xf) == 0) {\n            if (uVar1 != 0) {\n                fcn.00434ec0();\n                fcn.00435120();\n                fcn.00434f40();\n            }\n            fcn.00434ec0();\n            fcn.00435620();\n            fcn.004357c0();\n            fcn.00434f40();\n        }\n        if (arg1 != NULL) {\n            (**arg1)(*arg1, arg1, unaff_RBX);\n        }\n        fcn.00434fa0(1);\n        fcn.00434ec0();\n        fcn.00435620();\n        fcn.00434f40();\n        fcn.00434ec0();\n        fcn.004350e0();\n        fcn.00434f40();\n        puVar2 = fcn.0044bc60();\n        if (puVar2 != NULL) {\n            fcn.0044c400();\n            uVar3 = fcn.0044b9e0(*puVar2);\n            fcn.00434ec0();\n            fcn.004357c0();\n            fcn.004357c0();\n            fcn.004357c0();\n            fcn.00435620(uVar3);\n            fcn.004357c0();\n            fcn.00434f40();\n        }\n    }\n    *0x598468 = 0;\n    fcn.00434ec0();\n    fcn.00435120();\n    fcn.00434f40();\n    fcn.00434f40();\n    return;\n}\n",
        "token_count": 518
    },
    "004361e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004361e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0045bc80();\n    return;\n}\n",
        "token_count": 83
    },
    "00436ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436ba0(void)\n\n{\n    int64_t iVar1;\n    code **in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    iVar1 = *0x545598;\n    for (iVar2 = 0; iVar2 < iVar1; iVar2 = iVar2 + 1) {\n        (**in_RAX)();\n    }\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 156
    },
    "00436c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436c60(void)\n\n{\n    uint64_t uVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x5983d8,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    for (uVar2 = 0; uVar2 < uVar1; uVar2 = uVar2 + 1) {\n        (**in_RAX)(*in_RAX, in_RAX);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00437000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437000(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x546030 - *0x546040 <= *0x546038) {\n                return;\n            }\n            *(*0x20 + -0xc) = *0x546038;\n            *(*0x20 + -0x28) = 0x437045;\n            fcn.00434ec0();\n            *(*0x20 + -0x28) = 0x437056;\n            fcn.004357c0();\n            *(*0x20 + -0x28) = 0x437065;\n            fcn.004355c0();\n            *(*0x20 + -0x28) = 0x437076;\n            fcn.004357c0();\n            *(*0x20 + -0x28) = 0x43707b;\n            fcn.00434f40();\n            *(*0x20 + -0x28) = 0x43708c;\n            fcn.00433580();\n        }\n        *(puVar1 + -8) = 0x437092;\n        fcn.0045bdc0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 380
    },
    "004370a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004370a0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x546030 <= *0x546030 + 1) {\n                *(*0x20 + -0x10) = *0x546030;\n                *(*0x20 + -0x28) = 0x4370d6;\n                *0x546030 = *0x546030 + 1;\n                fcn.00437000();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x28) = 0x4370f6;\n            fcn.00433580();\n        }\n        *(puVar1 + -8) = 0x4370fc;\n        fcn.0045bdc0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 298
    },
    "00438240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438240(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.004380e0();\n    fcn.00443ee0(0);\n    return;\n}\n",
        "token_count": 93
    },
    "004387a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004387a0(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(unaff_R14 + 0x48) = unaff_R14;\n                *(unaff_R14 + 0x40) = **0x20;\n                *(unaff_R14 + 0x38) = *0x20 + 8;\n                *(*0x20 + -0x28) = 0x4387e9;\n                fcn.0045bba0();\n                *(*0x20 + -0x28) = 0x438805;\n                fcn.004301e0();\n                iVar3 = *(*0x20 + -0x10);\n                if (*(iVar3 + 0x30) == 0x545c20) {\n                    *(*0x20 + -0x28) = 0x43881c;\n                    fcn.004388a0();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                ppcVar1 = *(*(iVar3 + 0x30) + 0x88);\n                if (ppcVar1 != NULL) {\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x28) = 0x43883d;\n                    (*pcVar2)();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                if (*(iVar3 + 0x30) != 0x545c20) {\n                    *(*0x20 + -0x28) = 0x43885e;\n                    fcn.00440000();\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                }\n                *(*0x20 + -0x28) = 0x438877;\n                fcn.0043c300();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x438892;\n            fcn.00433580();\n        }\n        *(puVar4 + -8) = 0x438898;\n        fcn.0045bdc0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 648
    },
    "004388e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004388e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    fcn.0040a8a0();\n    *(*(unaff_R14 + 0x30) + 0x118) = 0;\n    return;\n}\n",
        "token_count": 60
    },
    "004393c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004393c0(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x598370,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    *0x598370 = 0;\n    if (uVar1 == 0) {\n        uVar2 = fcn.00439700();\n        uVar3 = *0x598418;\n        *0x598418 = uVar2;\n        if (uVar2 == 0) {\n            uVar3 = fcn.00439440();\n        }\n    }\n    else {\n        for (uVar3 = 0; uVar3 < uVar1; uVar3 = uVar3 + 1) {\n            fcn.00439440();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 242
    },
    "0043bf40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043bf40(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x546008 == 0) {\n        if ((*0x546010 == 0) || (in_RAX < *0x546010)) {\n            fcn.0042d700();\n        }\n    }\n    else {\n        fcn.0043a3c0();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0043d8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0043d8a0(void)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    *(unaff_R14 + 0xb7) = 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14[6] + 0x26c) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    fcn.0043d3c0();\n    uVar2 = unaff_R14[7];\n    unaff_R14[0xe] = uVar2;\n    unaff_R14[0xf] = unaff_R14[8];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.0045bc80();\n    }\n    fcn.00437a40(3);\n    uVar2 = unaff_R14[0xe];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.0045bc80();\n    }\n    fcn.0045bc80();\n    fcn.0043d3c0();\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 433
    },
    "0043dfe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043dfe0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    iVar2 = fcn.00441e00();\n    cVar1 = *0x5460f8;\n    if (iVar2 != 0 && *0x5460f8 != '\\0') {\n        *0x5460f8 = '\\0';\n        fcn.0040a820(cVar1);\n    }\n    fcn.0040a740();\n    if (iVar2 != 0) {\n        fcn.00440000();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 205
    },
    "0043e220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e220(void)\n\n{\n    int32_t in_EAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    piVar1 = fcn.0040c6e0();\n    if (-1 < in_EAX) {\n        uVar2 = 0;\n        while ((1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) < in_EAX + 0x1000) {\n            uVar2 = uVar2 + 1;\n        }\n        fcn.0045bc80();\n        piVar1[2] = *piVar1 + 0x13a0;\n        piVar1[3] = -1;\n        **piVar1 = 0;\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "004402e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004402e0(void)\n\n{\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    *0x54602c = *0x54602c + in_EAX;\n    if (0 < in_EAX) {\n        fcn.00440340();\n    }\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 139
    },
    "00441860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441860(void)\n\n{\n    uint8_t in_AL;\n    uint8_t uVar1;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    iVar2 = *0x546098;\n    uVar1 = in_AL ^ 1;\n    if (*0x546080 != uVar1) {\n        *0x546080 = uVar1;\n        if (in_AL == 0) {\n            fcn.0040a740();\n        }\n        else {\n            *0x546098 = 0;\n            if (*0x546090 != 0) {\n                *(*0x546090 + 0xa0) = 0;\n                if (*0x546070 == 0) {\n                    *0x546068 = *0x546088;\n                }\n                else {\n                    *(*0x546070 + 0xa0) = *0x546088;\n                }\n                *0x546070 = *0x546090;\n            }\n            *0x546078 = *0x546078 + iVar2;\n            *0x546088 = in_XMM15;\n            fcn.0040a740();\n            for (; iVar2 != 0 && *0x546058 != 0; iVar2 = iVar2 + -1) {\n                fcn.00439de0();\n            }\n        }\n        return;\n    }\n    fcn.0040a740();\n    return;\n}\n",
        "token_count": 378
    },
    "004419a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004419a0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    *(in_RAX + 0x128) = *0x546020;\n    *0x546028 = *0x546028 + 1;\n    *0x546020 = in_RAX;\n    fcn.00440340();\n    return;\n}\n",
        "token_count": 135
    },
    "00441b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441b60(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x2298) != 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x2278;\n            *(*0x20 + -0x28) = 0x441ba5;\n            fcn.0040a520();\n            if ((*(*0x20 + 8))[0x8a6] != 0) goto code_r0x00441c02;\n            iVar2 = **(*0x20 + 8);\n            uVar5 = iVar2 % 0x20;\n            if (-1 < uVar5) {\n                uVar3 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n                if (uVar3 < *0x545678) {\n                    puVar1 = *0x545670 + uVar3 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar5 & 0x1f) & -(uVar5 < 0x20));\ncode_r0x00441c02:\n                    *(*0x20 + -0x28) = 0x441c0c;\n                    fcn.0040a740();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x441c29;\n                fcn.0045e420(*0x545678);\n            }\n            *(*0x20 + -0x28) = 0x441c2e;\n            in_RAX = fcn.00431ba0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x441c39;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 608
    },
    "00441c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441c60(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int64_t in_RAX;\n    uint64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n            } while (*(in_RAX + 0x194) != *(in_RAX + 0x194));\n            if ((*(in_RAX + 0x194) == *(in_RAX + 400)) && (*(in_RAX + 0x998) == 0)) {\n                *(*0x20 + 8) = in_RAX;\n                if (unaff_RBX == 0) {\n                    *(*0x20 + -0x28) = 0x441cb9;\n                    fcn.0045fdc0();\n                    unaff_R14 = **(in_GS_OFFSET + *0x598520);\n                    unaff_RBX = *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x28) = 0x441cde;\n                fcn.00441b60();\n                piVar3 = *(*0x20 + 8);\n                iVar2 = *piVar3;\n                uVar6 = iVar2 % 0x20;\n                if (-1 < uVar6) {\n                    uVar5 = ((iVar2 >> 0x1f) >> 0x1b) + iVar2 >> 5;\n                    arg1 = *0x545638;\n                    if (uVar5 < *0x545638) {\n                        puVar1 = *0x545630 + uVar5 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | 1 << (uVar6 & 0x1f) & -(uVar6 < 0x20);\n                        *(piVar3 + 2) = *0x546050;\n                        LOCK();\n                        *0x546058 = *0x546058 + 1;\n                        *0x546050 = piVar3;\n                        if (*(piVar3 + 0x488) >> 0x3d == 0) {\n                            *(piVar3 + 0x488) = *(*0x20 + -0x10) & 0x1fffffffffffffff | 0x8000000000000000;\n                            return;\n                        }\n                        *(*0x20 + -0x28) = 0x441da8;\n                        arg1 = fcn.00433580();\n                    }\n                    *(*0x20 + -0x28) = 0x441db3;\n                    fcn.0045e420(arg1);\n                }\n                *(*0x20 + -0x28) = 0x441db8;\n                fcn.00431ba0();\n            }\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x28) = 0x441dc9;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x441dd9;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 916
    },
    "00441fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00441fa0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar1 = fcn.00441e00();\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    *0x546060 = 1;\n    return 0;\n}\n",
        "token_count": 124
    },
    "00442000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00442000(char param_1)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar4 = unaff_RBX;\n    if (param_1 != '\\0') {\n        do {\n            uVar4 = *(in_RAX + 0x998);\n            LOCK();\n            puVar1 = in_RAX + 0x998;\n            bVar5 = uVar4 == *puVar1;\n            *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ unaff_RBX);\n        } while (!bVar5);\n        if (uVar4 == 0) {\n            return uVar4 ^ !bVar5 * (uVar4 ^ *puVar1);\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 0x194);\n        if (uVar2 - *(in_RAX + 400) < 0x100) {\n            *(in_RAX + 0x198 + (uVar2 & 0xff) * 8) = uVar4;\n            *(in_RAX + 0x194) = uVar2 + 1;\n            return in_RAX;\n        }\n        uVar3 = fcn.00442100(*(in_RAX + 400));\n    } while (uVar3 == '\\0');\n    return uVar3;\n}\n",
        "token_count": 402
    },
    "004438c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004438c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    LOCK();\n    piVar1 = in_RAX + 0x28;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + 1;\n    if (iVar2 + 1 < 0) {\n        fcn.0045bc80();\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00444ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444ac0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00430880();\n    fcn.00430880();\n    return;\n}\n",
        "token_count": 90
    },
    "00444b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444b60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00430900();\n    if (*0x544b68 == 0) {\n        fcn.00430880();\n    }\n    else {\n        fcn.00430900();\n        fcn.00430900();\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "00445720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00445720(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar auVar2 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = *in_RAX;\n    auVar2 = ZEXT816(uVar1) * ZEXT816(arg1);\n    if ((((SUB168(auVar2 >> 0x40, 0) == 0) && (SUB168(auVar2, 0) < 0x1000000000001)) && (-1 < unaff_RBX)) &&\n       (unaff_RBX <= arg1)) {\n        fcn.0040bd20(1);\n        return;\n    }\n    do {\n        auVar2 = ZEXT816(uVar1) * ZEXT816(unaff_RBX);\n        uVar3 = SUB168(auVar2, 0);\n        if (SUB168(auVar2 >> 0x40, 0) == 0) goto code_r0x00445798;\n        do {\n            unaff_RBX = 0x4ca2a8;\n            uVar3 = fcn.00432de0();\ncode_r0x00445798:\n        } while ((0x1000000000000 < uVar3) || (unaff_RBX < 0));\n        unaff_RBX = 0x4ca2b8;\n        fcn.00432de0();\n    } while( true );\n}\n",
        "token_count": 391
    },
    "00447100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00447100(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t *unaff_RBX;\n    \n    uVar1 = *(in_RAX + 0x28);\n    if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n        *(in_RAX + 0x28) = uVar1 + unaff_RBX[2];\n    }\n    for (iVar2 = *(in_RAX + 0x28); iVar2 != 0; iVar2 = *(iVar2 + 0x28)) {\n        uVar1 = *(iVar2 + 0x18);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x18) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 8);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 8) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x20);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x20) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x28);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x28) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x38);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x38) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x30);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x30) = uVar1 + unaff_RBX[2];\n        }\n    }\n    return;\n}\n",
        "token_count": 693
    },
    "00447200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00447200(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar3 = *(in_RAX + 0x148);\n    if (iVar3 != 0) {\n        iVar4 = 0;\n        for (; iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            if (iVar4 != *(iVar3 + 0x50)) {\n                fcn.0040a520();\n            }\n            iVar4 = *(iVar3 + 0x50);\n        }\n        for (iVar3 = *(in_RAX + 0x148); iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            uVar1 = *(iVar3 + 0x18);\n            if ((*arg1 < uVar1 || *arg1 == uVar1) && (uVar1 <= arg1[1] && arg1[1] != uVar1)) {\n                *(iVar3 + 0x18) = uVar1 + arg1[2];\n            }\n        }\n        if (arg1[0x23] == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = arg1[0x23] - (arg1[1] - unaff_RBX);\n            fcn.0045eda0(iVar3);\n        }\n        iVar2 = 0;\n        for (iVar4 = *(in_RAX + 0x148); iVar4 != 0; iVar4 = *(iVar4 + 0x40)) {\n            if (iVar2 != *(iVar4 + 0x50)) {\n                fcn.0040a740();\n            }\n            iVar2 = *(iVar4 + 0x50);\n        }\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 493
    },
    "00448840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00448840(void)\n\n{\n    int32_t iVar1;\n    int64_t *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*(*in_RAX + 8) != -0x80000000) {\n        return *(*in_RAX + 8);\n    }\n    iVar1 = fcn.004488a0();\n    return iVar1 << 3;\n}\n",
        "token_count": 140
    },
    "00449620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449620(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00449340(3);\n    return;\n}\n",
        "token_count": 124
    },
    "00449700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449700(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00449340(4);\n    return;\n}\n",
        "token_count": 124
    },
    "00449a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449a40(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == 0) || (0x20 < unaff_RBX)) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                unaff_RBX = 0;\n                *(*0x20 + -0x28) = 0x449a86;\n                iVar1 = fcn.0040bd20(0);\n                if (-1 < *(*0x20 + 0x10)) {\n                    if (*(*0x20 + 0x10) <= -iVar1) {\n                        return;\n                    }\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x28) = 0x449abe;\n                        fcn.004574e0();\n                    }\n                    *(*0x20 + -0x28) = 0x449ac5;\n                    fcn.00457520();\n                }\n                *(*0x20 + -0x28) = 0x449aca;\n                fcn.004574e0();\ncode_r0x00449aca:\n                *(*0x20 + -0x28) = 0x449ad4;\n                fcn.0045e420(0);\n            }\n            else if (unaff_RBX < 0x21) {\n                if (unaff_RBX != 0) {\n                    return;\n                }\n                goto code_r0x00449aca;\n            }\n            *(*0x20 + -0x28) = 0x449ae5;\n            in_RAX = fcn.0045e460(unaff_RBX, 0x20);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x449af5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 601
    },
    "00449b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449b20(uchar (*arg1) [16])\n\n{\n    uchar (*in_RAX) [16];\n    uchar (*arg1_00) [16];\n    uchar (*unaff_RBX) [16];\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((in_RAX == NULL) || (0x20 < arg1)) {\n        in_RAX = fcn.00449de0();\n        arg1_00 = unaff_RBX;\n    }\n    else {\n        *in_RAX = in_XMM15;\n        in_RAX[1] = in_XMM15;\n        arg1_00 = arg1;\n    }\n    if (arg1 < arg1_00) {\n        arg1_00 = arg1;\n    }\n    if (unaff_RBX != in_RAX) {\n        fcn.0045eda0(arg1_00);\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "00449c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00449c00(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x54) = 0;\n            iVar1 = 0;\n            iVar4 = 0;\n            while (*(*0x20 + -0x48) = iVar1,  iVar4 < arg1) {\n                *(*0x20 + -0x28) = iVar4;\n                unaff_RDI = *(unaff_RBX + iVar4 * 4);\n                *(*0x20 + -0x80) = 0x449c55;\n                iVar1 = fcn.004577c0(4);\n                iVar1 = *(*0x20 + -0x48) + iVar1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar4 = *(*0x20 + -0x28) + 1;\n            }\n            unaff_RBX = iVar1 + 3;\n            *(*0x20 + -0x80) = 0x449c8e;\n            uVar2 = fcn.00449a40();\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x38) = unaff_RDI;\n            *(*0x20 + -0x30) = iVar1;\n            iVar4 = *(*0x20 + 0x18);\n            iVar6 = *(*0x20 + -0x48);\n            iVar7 = 0;\n            arg1_00 = 0;\n            while ((iVar7 < iVar4 && (arg1_00 < iVar6))) {\n                if (unaff_RDI < arg1_00) goto code_r0x00449d88;\n                *(*0x20 + -0x28) = iVar7;\n                *(*0x20 + -0x50) = arg1_00;\n                *(*0x20 + -0x80) = 0x449cf6;\n                iVar3 = fcn.004577c0(iVar1 - arg1_00);\n                iVar7 = *(*0x20 + -0x28) + 1;\n                iVar4 = *(*0x20 + 0x18);\n                uVar2 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + -0x40);\n                iVar1 = *(*0x20 + -0x30);\n                unaff_RDI = *(*0x20 + -0x38);\n                iVar6 = *(*0x20 + -0x48);\n                arg1_00 = *(*0x20 + -0x50) + iVar3;\n            }\n            if (arg1_00 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x449d88;\n            fcn.0045e460(arg1_00, unaff_RBX);\ncode_r0x00449d88:\n            *(*0x20 + -0x80) = 0x449d93;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045e4e0(unaff_RDI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x449dad;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1137
    },
    "0044a280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044a280(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg2;\n    int64_t iStack56;\n    \n    if (in_RAX != 0) {\n        arg2 = -((in_RAX & 0xfff) - 0x1000);\n        iVar1 = 0;\n        while( true ) {\n            fcn.00402740(in_RAX, arg2);\n            if (iStack56 != -1) break;\n            in_RAX = in_RAX + arg2;\n            iVar1 = iVar1 + arg2;\n            arg2 = 0x1000;\n        }\n        return iStack56 + iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 167
    },
    "0044a340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044a340(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint64_t arg1;\n    ulong arg1_00;\n    int64_t unaff_R14;\n    \ncode_r0x0044a340:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x18) = 0;\n        iVar1 = 0;\n        uVar2 = 0;\n        while (iVar6 = 0x3fffffffffff,  uVar2 < 0x3fffffffffff) {\n            *(*0x20 + -0x30) = iVar1;\n            if (*(in_RAX + uVar2 * 2) == 0) {\n                *(*0x20 + -0x40) = iVar1 + 4;\n                *(*0x20 + -0x68) = 0x44a3d7;\n                iVar1 = fcn.0040bd20(0);\n                uVar2 = *(*0x20 + -0x40);\n                if (uVar2 < 0) goto code_r0x0044a4f4;\n                if (-iVar1 < uVar2) goto code_r0x0044a4e5;\n                *(*0x20 + -0x10) = iVar1;\n                iVar6 = *(*0x20 + 8);\n                iVar4 = *(*0x20 + -0x30);\n                uVar3 = 0;\n                arg1 = 0;\n                goto code_r0x0044a477;\n            }\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x68) = 0x44a385;\n            iVar1 = fcn.004577c0(8);\n            iVar1 = *(*0x20 + -0x30) + iVar1;\n            in_RAX = *(*0x20 + 8);\n            uVar2 = *(*0x20 + -0x20) + 1;\n        }\n        goto code_r0x0044a4f9;\n    }\n    goto code_r0x0044a506;\ncode_r0x0044a477:\n    arg1_00 = 0x3fffffffffff;\n    if (0x3ffffffffffe < uVar3) goto code_r0x0044a4db;\n    if ((*(iVar6 + uVar3 * 2) == 0) || (iVar4 <= arg1)) {\n        if (arg1 < uVar2) {\n            *(iVar1 + arg1) = 0;\n            if (arg1 <= uVar2) {\n                return iVar1;\n            }\n            *(*0x20 + -0x68) = 0x44a4cb;\n            fcn.0045e460(arg1, uVar2);\n            uVar2 = arg1;\n        }\n        *(*0x20 + -0x68) = 0x44a4d3;\n        fcn.0045e420(uVar2);\ncode_r0x0044a4d3:\n        *(*0x20 + -0x68) = 0x44a4db;\n        fcn.0045e4e0(uVar2);\n        goto code_r0x0044a4db;\n    }\n    if (uVar2 < arg1) goto code_r0x0044a4d3;\n    *(*0x20 + -0x28) = uVar3;\n    *(*0x20 + -0x38) = arg1;\n    *(*0x20 + -0x68) = 0x44a43d;\n    iVar1 = fcn.004577c0((iVar4 - arg1) + 4);\n    uVar3 = *(*0x20 + -0x28) + 1;\n    arg1 = *(*0x20 + -0x38) + iVar1;\n    uVar2 = *(*0x20 + -0x40);\n    iVar6 = *(*0x20 + 8);\n    iVar4 = *(*0x20 + -0x30);\n    iVar1 = *(*0x20 + -0x10);\n    goto code_r0x0044a477;\ncode_r0x0044a4db:\n    *(*0x20 + -0x68) = 0x44a4e5;\n    fcn.0045e420(arg1_00);\ncode_r0x0044a4e5:\n    if (iVar1 != 0) {\n        *(*0x20 + -0x68) = 0x44a4ef;\n        fcn.004574e0();\n    }\n    *(*0x20 + -0x68) = 0x44a4f4;\n    fcn.00457520();\n    iVar6 = iVar1;\ncode_r0x0044a4f4:\n    *(*0x20 + -0x68) = 0x44a4f9;\n    fcn.004574e0();\ncode_r0x0044a4f9:\n    *(*0x20 + -0x68) = 0x44a505;\n    in_RAX = fcn.0045e420(iVar6);\ncode_r0x0044a506:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x44a510;\n    fcn.0045bdc0();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x0044a340;\n}\n",
        "token_count": 1363
    },
    "0044a560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nuint64_t fcn.0044a560(void)\n\n{\n    uchar auVar1 [16];\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    uVar2 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar1 = ZEXT816(uVar2) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar2;\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 162
    },
    "0044bc00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044bc00(void)\n\n{\n    uint *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0044b9e0(*in_RAX);\n    return;\n}\n",
        "token_count": 96
    },
    "0044c4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c4a0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x0044c4a0:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar2 = *0x20 + -0x18;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = 0x44c4c5;\n        iVar1 = fcn.0044c400();\n        arg1 = unaff_RBX;\n        do {\n            arg1 = arg1 - 1;\n            if (arg1 < 1) break;\n        } while (*(arg1 + iVar1) != '/');\n        do {\n            if (unaff_RBX <= arg1) goto code_r0x0044c4f6;\n            if (unaff_RBX <= arg1) goto code_r0x0044c50d;\n            if (*(arg1 + iVar1) == '.') goto code_r0x0044c4f6;\n            arg1 = arg1 + 1;\n        } while( true );\n    }\n    goto code_r0x0044c519;\ncode_r0x0044c4f6:\n    if (arg1 <= unaff_RBX) {\n        return;\n    }\n    *(*0x20 + -0x20) = 0x44c50d;\n    fcn.0045e460(arg1, unaff_RBX);\ncode_r0x0044c50d:\n    *(*0x20 + -0x20) = 0x44c518;\n    in_RAX = fcn.0045e420(unaff_RBX);\ncode_r0x0044c519:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44c528;\n    fcn.0045bdc0();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044c4a0;\n}\n",
        "token_count": 608
    },
    "0044c7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c7e0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0044c6c0(arg1);\n    return;\n}\n",
        "token_count": 92
    },
    "0044c840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c840(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0044be00(*(in_RAX + 0x10));\n    return;\n}\n",
        "token_count": 103
    },
    "0044c8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044c8c0(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    uint *in_RAX;\n    ulong uVar6;\n    int64_t arg1;\n    int64_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar3 = *(unaff_RBX + 0x58);\n            uVar6 = *(unaff_RBX + 0x50);\n            uVar4 = *(unaff_RBX + 0x60);\n            uVar1 = in_RAX[4];\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x18) = in_RAX;\n                *(*0x20 + -0x30) = uVar4;\n                *(*0x20 + -0x20) = uVar6;\n                *(*0x20 + -0x38) = uVar3;\n                *(*0x20 + -0x40) = uVar1;\n                uVar2 = *in_RAX;\n                *(*0x20 + -0x98) = 0x44c93b;\n                uVar6 = fcn.0044b9e0(uVar2);\n                *(*0x20 + -0x58) = uVar6;\n                *(*0x20 + -0x60) = 0xffffffff;\n                uVar3 = *(*0x20 + -0x40);\n                arg1 = *(*0x20 + -0x30) - uVar3;\n                iVar9 = *(*0x20 + -0x38) - uVar3;\n                iVar7 = *(*0x20 + -0x20) + (uVar3 & -arg1 >> 0x3f);\n                iVar5 = 0;\n                while( true ) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x48) = arg1;\n                    *(*0x20 + -0x50) = iVar9;\n                    *(*0x20 + -0x5c) = iVar5;\n                    *(*0x20 + -0x98) = 0x44c9b9;\n                    fcn.0044b9e0();\n                    iVar9 = *(*0x20 + -0x50);\n                    arg1 = *(*0x20 + -0x48);\n                    *(*0x20 + -0x98) = 0x44c9e5;\n                    iVar7 = fcn.0044cc20(arg1);\n                    if (*0x20 == 'X') break;\n                    iVar5 = *(*0x20 + -0x5c);\n                    if (*(*0x20 + -0x5c) < *(*0x20 + -0x60)) {\n                        iVar5 = *(*0x20 + -0x60);\n                    }\n                }\n                return *(*0x20 + -0x5c);\n            }\n            *(*0x20 + -0x98) = 0x44ca06;\n            in_RAX = fcn.0045e4e0(uVar3);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x44ca16;\n        fcn.0045bdc0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 980
    },
    "0044ca40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044ca40(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044be00(*(in_RAX + arg1 * 4 + 0x2c));\n    return uVar1;\n}\n",
        "token_count": 164
    },
    "0044cae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044cae0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044be00(*(in_RAX + arg1 * 4 + 0x2c));\n    return uVar1;\n}\n",
        "token_count": 164
    },
    "0044cb80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044cb80(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044be00(*(in_RAX + arg1 * 4 + 0x2c));\n    return uVar1;\n}\n",
        "token_count": 164
    },
    "0044f260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044f260(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040a520();\n    iVar3 = 0x7fffffffffffffff;\n    for (iVar2 = 0; iVar2 < *0x5455b8; iVar2 = iVar2 + 1) {\n        iVar1 = *(*0x5455b0 + iVar2 * 8);\n        if (iVar1 != 0) {\n            iVar4 = *(iVar1 + 0x1200);\n            if ((iVar4 == 0) || (iVar3 <= iVar4)) {\n                iVar4 = iVar3;\n            }\n            iVar3 = *(iVar1 + 0x1208);\n            if ((iVar3 == 0) || (iVar4 <= iVar3)) {\n                iVar3 = iVar4;\n            }\n        }\n    }\n    fcn.0040a740();\n    return iVar3;\n}\n",
        "token_count": 279
    },
    "0044f720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044f720(void)\n\n{\n    ulong uStack16;\n    \n    fcn.0045fdc0();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "0044f760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f760(ulong param_1)\n\n{\n    if (*0x544c38 != NULL) {\n        (***0x544c38)();\n        return;\n    }\n    fcn.0042f640(param_1);\n    return;\n}\n",
        "token_count": 58
    },
    "004508c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004508c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00450920();\n    return;\n}\n",
        "token_count": 82
    },
    "00450a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450a40(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uStack16 = *(*(unaff_R14 + 0x30) + 0xb8);\n    fcn.0044f960(&uStack16);\n    return;\n}\n",
        "token_count": 116
    },
    "004512e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004512e0(void)\n\n{\n    int64_t unaff_R14;\n    uchar auStack16 [8];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0044f960(auStack16);\n    return;\n}\n",
        "token_count": 95
    },
    "00451360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00451360(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iStack16 = fcn.0041e300();\n    if (iStack16 == -1) {\n        iStack16 = 0;\n        fcn.0044f960(&iStack16);\n    }\n    else {\n        fcn.0044f960(&iStack16);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "004536c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004536c0(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uchar unaff_BL;\n    uchar *puVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004536c0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x208 && *0x20 + -0x208 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x288;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_BL;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x298) = *0x20 + -8;\n        *(*0x20 + -0x290) = 0x45372f;\n        fcn.0045e694();\n        uVar1 = *(*0x20 + -0x298);\n        puVar5 = *0x20 + -0x240;\n        *(*0x20 + -0x290) = 0x453748;\n        fcn.00455460(0x20);\n        *(*0x20 + -0x40) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x298) = uVar1;\n        *(*0x20 + -0x290) = 0x45378f;\n        fcn.0045e9a0();\n        unaff_RBP = *(*0x20 + -0x298);\n        cVar4 = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + 8);\n        iVar7 = *(*0x20 + 0x28);\n        uVar8 = *(*0x20 + 0x20);\n        iVar2 = 0;\n        uVar3 = 0;\n        do {\n            unaff_BL = SUB81(puVar5, 0);\n            *(*0x20 + -0x248) = uVar8;\n            if (((0x1f < iVar2) || (unaff_RDI = *(*0x20 + iVar2 * 8 + -0x140),  unaff_RDI == 0)) || (iVar7 <= uVar8)) {\n                if (uVar3 != 0) {\n                    *(*0x20 + -0x40) = 0;\n                    *(*0x20 + -0x290) = 0x4538d0;\n                    fcn.004553e0();\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                return uVar8;\n            }\n            if (unaff_RSI != 0) {\n                if (0xfffff < uVar8) goto code_r0x004538e8;\n                *(unaff_RSI + uVar8 * 8) = unaff_RDI;\n            }\n            if (cVar4 != '\\0') {\n                *(*0x20 + -0x250) = iVar2;\n                *(*0x20 + -0x261) = uVar3;\n                *(*0x20 + -600) = *0x544c00;\n                if (*0x544c00 == 0) {\n                    *(*0x20 + -0x260) = unaff_RDI;\n                    *(*0x20 + -0x290) = 0x453855;\n                    fcn.00434ec0();\n                    puVar5 = 0x16;\n                    *(*0x20 + -0x290) = 0x453866;\n                    fcn.004357c0();\n                    *(*0x20 + -0x290) = 0x453870;\n                    fcn.00435620();\n                    *(*0x20 + -0x290) = 0x453875;\n                    fcn.00435120();\n                    *(*0x20 + -0x290) = 0x45387a;\n                    fcn.00434f40();\n                    iVar2 = *(*0x20 + -600);\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                else {\n                    puVar5 = iVar7 - uVar8;\n                    *(*0x20 + -0x290) = 0x453834;\n                    iVar2 = fcn.004551e0(*0x20 + -0x40);\n                    uVar8 = *(*0x20 + -0x248) + iVar2 + -1;\n                    iVar2 = *(*0x20 + -600);\n                }\n                uVar3 = iVar2 != 0 | *(*0x20 + -0x261);\n                iVar2 = *(*0x20 + -0x250);\n                cVar4 = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + 8);\n                iVar7 = *(*0x20 + 0x28);\n            }\n            iVar2 = iVar2 + 1;\n            uVar8 = uVar8 + 1;\n        } while( true );\n    }\n    goto code_r0x004538f6;\ncode_r0x004538e8:\n    arg1 = 0x100000;\n    *(*0x20 + -0x290) = 0x4538f5;\n    in_RAX = fcn.0045e420(0x100000);\ncode_r0x004538f6:\n    *(puVar6 + 8) = in_RAX;\n    puVar6[0x10] = unaff_BL;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = unaff_RSI;\n    *(puVar6 + -8) = 0x453913;\n    fcn.0045bdc0();\n    in_RAX = *(puVar6 + 8);\n    unaff_BL = puVar6[0x10];\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    *0x20 = puVar6;\n    goto code_r0x004536c0;\n}\n",
        "token_count": 1557
    },
    "004539e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004539e0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0044c400();\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.004357c0();\n    fcn.00435120();\n    fcn.00434f40();\n    uVar1 = fcn.0044b9e0();\n    uVar2 = arg1;\n    if (uVar1 < arg1) {\n        uVar2 = arg1 - 1;\n    }\n    fcn.0044c6c0(uVar2);\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.004357c0();\n    fcn.004357c0();\n    fcn.004355c0(uVar2 & 0xffffffff);\n    fcn.00434f40();\n    uVar2 = fcn.0044b9e0();\n    if (uVar2 < arg1) {\n        uVar3 = fcn.0044b9e0();\n        fcn.00434ec0();\n        fcn.004357c0();\n        fcn.00435620(uVar3);\n        fcn.00434f40();\n    }\n    fcn.00434ec0();\n    fcn.00435120();\n    fcn.00434f40();\n    return;\n}\n",
        "token_count": 382
    },
    "00454460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.00454460(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    ulong uStack88;\n    ulong uStack80;\n    ulong *puStack72;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uStack88 = 0;\n    uStack80 = 0x454560;\n    puStack72 = &uStack88;\n    fcn.0045bc80();\n    return uStack88;\n}\n",
        "token_count": 136
    },
    "004545e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004545e0(ulong arg1, ulong arg2)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI != 0) {\n                *(*0x20 + -0x58) = 0;\n                *(*0x20 + -0x60) = 0x454629;\n                fcn.004514c0(0, arg2, arg1, unaff_RDI);\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x60) = 0x45463d;\n            in_RAX = fcn.0045e420(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + 0x28) = unaff_RSI;\n        *(puVar1 + -8) = 0x45465c;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        unaff_RSI = *(puVar1 + 0x28);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 495
    },
    "00454dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454dc0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00434ec0();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.004357c0();\n    fcn.00435620();\n    fcn.004357c0();\n    fcn.00434f40();\n    auStack32 = CONCAT88(arg1, 0x454fa0);\n    fcn.00435920(auStack32);\n    return;\n}\n",
        "token_count": 209
    },
    "004553e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004553e0(void)\n\n{\n    code *pcVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((*0x5983a4 == 0) && (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n        pcVar1 = vtable..0;\n    }\n    else {\n        pcVar1 = 0x4b2828;\n    }\n    (**pcVar1)(pcVar1, pcVar1);\n    return;\n}\n",
        "token_count": 164
    },
    "004556e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004556e0(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            for (iVar3 = 0x532f00; iVar3 != 0; iVar3 = *(iVar3 + 0x230)) {\n                param_2 = *(iVar3 + 0x128);\n                if ((param_2 <= in_RAX) && (unaff_RSI = *(iVar3 + 0x130),  in_RAX < unaff_RSI)) {\n                    if (param_2 + unaff_EBX <= unaff_RSI) {\n                        return param_2 + unaff_EBX;\n                    }\n                    goto code_r0x004558b6;\n                }\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x58) = 0x45576b;\n            fcn.0040a520();\n            uVar1 = *0x545730;\n            *(*0x20 + -0x58) = 0x455785;\n            puVar2 = fcn.0040f300(*(*0x20 + 0x10));\n            *(*0x20 + -0x31) = uVar1;\n            *(*0x20 + -0x18) = *puVar2;\n            *(*0x20 + -0x58) = 0x4557a5;\n            fcn.0040a740();\n            if (*(*0x20 + -0x31) != '\\0') {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x58) = 0x4557b3;\n            fcn.00434ec0();\n            *(*0x20 + -0x58) = 0x4557c5;\n            fcn.004357c0();\n            *(*0x20 + -0x58) = 0x4557d1;\n            fcn.00435620();\n            *(*0x20 + -0x58) = 0x4557e5;\n            fcn.004357c0();\n            *(*0x20 + -0x58) = 0x4557ef;\n            fcn.00435620();\n            *(*0x20 + -0x58) = 0x455805;\n            fcn.004357c0();\n            *(*0x20 + -0x58) = 0x45580a;\n            fcn.00434f40();\n            iVar3 = 0x532f00;\n            while (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x20) = *(iVar3 + 0x128);\n                param_2 = *(iVar3 + 0x130);\n                *(*0x20 + -0x28) = param_2;\n                *(*0x20 + -0x58) = 0x455847;\n                fcn.00434ec0();\n                *(*0x20 + -0x58) = 0x455858;\n                fcn.004357c0();\n                *(*0x20 + -0x58) = 0x455865;\n                fcn.00435620();\n                *(*0x20 + -0x58) = 0x455876;\n                fcn.004357c0();\n                *(*0x20 + -0x58) = 0x455885;\n                fcn.00435620();\n                *(*0x20 + -0x58) = 0x45588a;\n                fcn.00435120();\n                *(*0x20 + -0x58) = 0x45588f;\n                fcn.00434f40();\n                iVar3 = *(*(*0x20 + -0x10) + 0x230);\n            }\n            *(*0x20 + -0x58) = 0x4558b6;\n            fcn.00433580();\ncode_r0x004558b6:\n            *(*0x20 + -0x20) = param_2;\n            *(*0x20 + -0x28) = unaff_RSI;\n            *(*0x20 + -0x58) = 0x4558c5;\n            fcn.00434ec0();\n            *(*0x20 + -0x58) = 0x4558d6;\n            fcn.004357c0();\n            *(*0x20 + -0x58) = 0x4558e5;\n            fcn.00435620();\n            *(*0x20 + -0x58) = 0x4558f6;\n            fcn.004357c0();\n            *(*0x20 + -0x58) = 0x455905;\n            fcn.00435620();\n            *(*0x20 + -0x58) = 0x455916;\n            fcn.004357c0();\n            *(*0x20 + -0x58) = 0x455925;\n            fcn.00435620();\n            *(*0x20 + -0x58) = 0x45592a;\n            fcn.00435120();\n            *(*0x20 + -0x58) = 0x45592f;\n            fcn.00434f40();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x455945;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x455954;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1505
    },
    "00457920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457920(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX != 0) {\n                *(*0x20 + -0x28) = 0x45794e;\n                fcn.0044f760(unaff_RBX);\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x28) = 0x457965;\n            in_RAX = fcn.0045e420(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x45797a;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 385
    },
    "00457d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457d60(ulong param_1, ulong param_2)\n\n{\n    ulong arg3;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong *unaff_RBX;\n    ulong *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = unaff_RBX;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x98) = 0x457d93;\n            iVar1 = fcn.00433540();\n            if (iVar1 == 0) {\n                return;\n            }\n            if ((*(iVar1 + 0x10) == 0x778cdb8) && (param_2 = 0x496000,  iVar1 == 0x496000)) {\n                uVar2 = unaff_RBX[1];\n                arg3 = *unaff_RBX;\n                unaff_RBX = 0x4ae56d;\n                *(*0x20 + -0x98) = 0x457de6;\n                fcn.00449620(0x20, 0x496000, arg3, uVar2);\n                *(*0x20 + -0x98) = 0x457deb;\n                iVar1 = fcn.00433580();\n            }\n            *(*0x20 + -0x18) = iVar1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x98) = 0x457e05;\n            uVar2 = fcn.00455540();\n            puVar3 = 0x4ae56d;\n            *(*0x20 + -0x98) = 0x457e2d;\n            fcn.00449620(0x20, param_2, uVar2, unaff_RBX);\n            *(*0x20 + -0x98) = 0x457e32;\n            fcn.00433580();\n        }\n        *(puVar4 + -8) = 0x457e38;\n        fcn.0045bdc0();\n        unaff_RBX = puVar3;\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 595
    },
    "00458dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458dc0(void)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040bd20(1, *in_RAX);\n    return;\n}\n",
        "token_count": 97
    },
    "00458e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458e20(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040e060(arg1, arg2, arg3, arg4);\n    return;\n}\n",
        "token_count": 109
    },
    "00458e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458e80(ulong arg1)\n\n{\n    ulong in_RDX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0040e2e0(arg1, in_RDX);\n    return;\n}\n",
        "token_count": 100
    },
    "00458f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458f20(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.004112e0(arg1);\n    return;\n}\n",
        "token_count": 88
    },
    "00458f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458f80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00411580();\n    return;\n}\n",
        "token_count": 82
    },
    "00458fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00458fc0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x56a790);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x10400 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        uVar1 = CONCAT71(0xdeaddeaddeadde, in_RAX != 0xdeaddeaddeaddead);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1 & 0xffffffff;\n}\n",
        "token_count": 286
    },
    "004590c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.004590c0(void)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    int64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (0 < *0x598470) {\n        uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar2 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n        auVar1 = SEXT816(*0x598470);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n        if (SUB168((ZEXT816(SUB168(auVar2 >> 0x40, 0) ^ SUB168(auVar2, 0)) & 0xffffffffffffffff) % auVar1, 0) == 0) {\n            fcn.0042b140(unaff_RBX + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "004596c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004596c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00433680();\n    return;\n}\n",
        "token_count": 82
    },
    "00459720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459720(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00408d40(arg1, arg2, arg3, in_R9);\n    return;\n}\n",
        "token_count": 111
    },
    "00459760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459760(void)\n\n{\n    fcn.0043d420();\n    return;\n}\n",
        "token_count": 24
    },
    "00459ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459ae0(void)\n\n{\n    fcn.0045db40();\n    return;\n}\n",
        "token_count": 25
    },
    "00459b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459b20(void)\n\n{\n    fcn.0042f5c0();\n    return;\n}\n",
        "token_count": 27
    },
    "00459c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459c60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.004556e0();\n    return;\n}\n",
        "token_count": 83
    },
    "00459ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459ca0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00455980();\n    return;\n}\n",
        "token_count": 82
    },
    "00459ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459ce0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00455c40();\n    return;\n}\n",
        "token_count": 83
    },
    "00459d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459d20(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.004556e0();\n    return;\n}\n",
        "token_count": 83
    },
    "00459f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459f00(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00443ee0(arg1);\n    return;\n}\n",
        "token_count": 88
    },
    "00459fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459fc0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00443ee0(0);\n    return;\n}\n",
        "token_count": 85
    },
    "0045a000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a000(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0x20) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x45a032;\n            fcn.00434ec0();\n            *(*0x20 + -0x20) = 0x45a045;\n            fcn.004357c0();\n            *(*0x20 + -0x20) = 0x45a04f;\n            fcn.004354c0();\n            *(*0x20 + -0x20) = 0x45a065;\n            fcn.004357c0();\n            *(*0x20 + -0x20) = 0x45a06f;\n            fcn.004354c0();\n            *(*0x20 + -0x20) = 0x45a074;\n            fcn.00435120();\n            *(*0x20 + -0x20) = 0x45a079;\n            fcn.00434f40();\n            *(*0x20 + -0x20) = 0x45a08a;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x45a095;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 472
    },
    "0045a0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045a0a0(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0045fdc0();\n    return uStack16;\n}\n",
        "token_count": 94
    },
    "0045a120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045a120(void)\n\n{\n    uint64_t arg1;\n    ulong in_RAX;\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x40) = 0x45a145;\n            iVar1 = fcn.0044a280();\n            if (iVar1 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x20) = iVar1;\n            *(*0x20 + -0x40) = 0x45a167;\n            iVar1 = fcn.0040bd20(0);\n            arg1 = *(*0x20 + -0x20);\n            if (-1 < arg1) {\n                if (arg1 <= -iVar1) {\n                    *(*0x20 + -0x18) = iVar1;\n                    *(*0x20 + -0x40) = 0x45a18e;\n                    fcn.0045eda0(arg1);\n                    return *(*0x20 + -0x18);\n                }\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x40) = 0x45a1ac;\n                    fcn.004574e0();\n                }\n                *(*0x20 + -0x40) = 0x45a1b1;\n                fcn.00457520();\n            }\n            *(*0x20 + -0x40) = 0x45a1b6;\n            in_RAX = fcn.004574e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x45a1c5;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 537
    },
    "0045a1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a1e0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0045eda0(arg1);\n    return;\n}\n",
        "token_count": 90
    },
    "0045ab20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ab20(ulong arg1)\n\n{\n    fcn.0045ac20(3);\n    return;\n}\n",
        "token_count": 30
    },
    "0045ab80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ab80(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    fcn.0045ac20(9);\n    return;\n}\n",
        "token_count": 44
    },
    "0045ac20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045ac20(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uchar *unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack56 [32];\n    int64_t iStack24;\n    ulong uStack16;\n    \n    uStack16 = 0;\n    if (arg1 < 4) {\n        if (unaff_RBX != auStack56) {\n            fcn.0045eda0(arg1 << 3);\n        }\n        unaff_RBX = auStack56;\n        iVar3 = 4;\n    }\n    else {\n        iVar3 = arg1;\n        if (0x2a < arg1) goto code_r0x0045ad7f;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    *(*(unaff_R14 + 0x30) + 0x130) = unaff_R14;\n    *(unaff_R14 + 0xe8) = *(unaff_R14 + 0x30);\n    uStack16 = 0x4b2af8;\n    iStack24 = *(unaff_R14 + 0x30);\n    *(iStack24 + 0x2c0) = in_RAX;\n    *(iStack24 + 0x2c8) = arg1;\n    if (iVar3 != 0) {\n        *(iStack24 + 0x2d0) = unaff_RBX;\n        fcn.00403880();\n        uVar2 = *(iStack24 + 0x2d8);\n        fcn.0043f100();\n        return uVar2;\n    }\n    fcn.0045e420(0);\ncode_r0x0045ad7f:\n    fcn.00432de0();\n    fcn.00432280();\n    return 0;\n}\n",
        "token_count": 450
    },
    "0045df80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045df80(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong in_RAX;\n    ulong *unaff_RDI;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x1260);\n    *(iVar1 + 0x1260) = puVar2 + 2;\n    puVar3 = *(iVar1 + 0x1268);\n    *puVar2 = in_RAX;\n    puVar2[1] = *unaff_RDI;\n    if (puVar2 + 2 == puVar3) {\n        fcn.00460380();\n    }\n    *unaff_RDI = in_RAX;\n    return;\n}\n",
        "token_count": 207
    },
    "0045e992": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e992(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    return;\n}\n",
        "token_count": 1849
    },
    "0045e9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e9a0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    return;\n}\n",
        "token_count": 1744
    },
    "0045e9d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e9d8(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    return;\n}\n",
        "token_count": 1304
    },
    "0045e9e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e9e6(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    return;\n}\n",
        "token_count": 1189
    },
    "0045ea2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ea2c(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    return;\n}\n",
        "token_count": 637
    },
    "0045ea3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ea3a(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    return;\n}\n",
        "token_count": 530
    },
    "0045fd00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fd00(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int32_t iStackX8;\n    uchar auStack72 [24];\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    int64_t iStack24;\n    uchar *puStack16;\n    \n    puStack16 = auStack72;\n    iStack24 = iStackX8;\n    uStack32 = *(*(**(in_GS_OFFSET + *0x598520) + 0x30) + 0x328);\n    uStack48 = 0;\n    uStack40 = 0;\n    (*_sym.imp.kernel32.dll_SetWaitableTimer)(uStack32, &iStack24, 0, 0);\n    (**0x544b88)(uStack32, 0, 0);\n    return;\n}\n",
        "token_count": 188
    },
    "00460380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460380(void)\n\n{\n    fcn.0042cf00();\n    return;\n}\n",
        "token_count": 24
    },
    "00460560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460560(void)\n\n{\n    fcn.0044f760(0x17);\n    return;\n}\n",
        "token_count": 28
    },
    "00460580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460580(void)\n\n{\n    fcn.0044f760(0x1c);\n    return;\n}\n",
        "token_count": 29
    },
    "00460620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460620(void)\n\n{\n    fcn.0043e360();\n    return;\n}\n",
        "token_count": 24
    },
    "00460660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460660(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.00442d80(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 58
    },
    "00460900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00460900(void)\n\n{\n    ulong uStack24;\n    \n    fcn.0045a700();\n    return uStack24;\n}\n",
        "token_count": 34
    },
    "00460960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00460960(void)\n\n{\n    ulong uStack24;\n    \n    fcn.0045a880();\n    return uStack24;\n}\n",
        "token_count": 34
    },
    "004609a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004609a0(void)\n\n{\n    ulong uStack24;\n    \n    fcn.0045a9e0();\n    return uStack24;\n}\n",
        "token_count": 37
    },
    "00464340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00464340(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    int32_t *in_RAX;\n    int64_t **ppiVar3;\n    int64_t *piVar4;\n    char cVar5;\n    ulong uVar6;\n    char cVar7;\n    int64_t unaff_R14;\n    uchar auStackX16 [8];\n    ulong uStackX24;\n    \n    uStackX24 = arg1;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    puVar2 = *(in_RAX + 2);\n    if (puVar2 == NULL) {\n        cVar7 = '\\0';\n        cVar5 = '\\0';\n    }\n    else {\n        cVar7 = *(puVar2 + 1);\n        cVar5 = *puVar2;\n    }\n    ppiVar3 = fcn.0040d6c0(auStackX16);\n    piVar4 = *ppiVar3;\n    if ((cVar5 == '\\0') && (cVar7 != '\\0')) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.00464ca0();\n        }\n        puVar2 = *(in_RAX + 2);\n        if (puVar2 == NULL) {\n            cVar7 = '\\0';\n            cVar5 = '\\0';\n        }\n        else {\n            cVar7 = *(puVar2 + 1);\n            cVar5 = *puVar2;\n        }\n        ppiVar3 = fcn.0040d6c0(auStackX16);\n        piVar4 = *ppiVar3;\n        if ((cVar5 == '\\0') && (cVar7 != '\\0')) {\n            uVar6 = *(in_RAX + 4);\n            ppiVar3 = fcn.0040d6c0(auStackX16);\n            cVar5 = uVar6;\n            piVar4 = *ppiVar3;\n            fcn.004649c0();\n        }\n        LOCK();\n        iVar1 = *in_RAX;\n        *in_RAX = *in_RAX + -1;\n        if (iVar1 != 1) {\n            fcn.00464fa0();\n        }\n    }\n    if (cVar5 == '\\0') {\n        return 0;\n    }\n    puVar2 = *piVar4;\n    if ((puVar2 == NULL) || (*0x544c80 == puVar2)) {\n        uVar6 = 0;\n    }\n    else {\n        uVar6 = *puVar2;\n    }\n    return uVar6;\n}\n",
        "token_count": 630
    },
    "00464c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00464c20(void)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar2 = *in_RAX;\n    while( true ) {\n        if (iVar2 != 0) {\n            return in_RAX & 0xffffffffffffff00 | *0x544c80 == iVar2;\n        }\n        cVar1 = fcn.00458d40(*0x544c80);\n        if (cVar1 != '\\0') break;\n        iVar2 = *in_RAX;\n    }\n    return 1;\n}\n",
        "token_count": 191
    },
    "00464f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00464f40(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + -1;\n    if (iVar1 != 1) {\n        fcn.00464fa0();\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00464fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00464fa0(void)\n\n{\n    uint32_t *in_RAX;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((unaff_EBX + 1 & 1) == 0) {\n        fcn.004596c0();\n    }\n    if ((unaff_EBX >> 2 & 1) == 0) {\n        while ((unaff_EBX >> 3 != 0 && ((unaff_EBX & 7) == 0))) {\n            LOCK();\n            if (unaff_EBX == *in_RAX) {\n                *in_RAX = unaff_EBX - 8 | 2;\n                fcn.00459f00(1);\n                return;\n            }\n            unaff_EBX = *in_RAX;\n        }\n        return;\n    }\n    fcn.00459f00(1);\n    return;\n}\n",
        "token_count": 248
    },
    "00466080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00466080(ulong param_1)\n\n{\n    int64_t *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar2 = *in_RAX;\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        uVar1 = fcn.00465c00();\n        if (param_1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x28);\n    }\n    return uVar1;\n}\n",
        "token_count": 174
    },
    "00466100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00466100(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    arg1 = *(in_RAX + 8);\n    if (arg1 == 0) {\n        return 0;\n    }\n    while( true ) {\n        arg1 = *(arg1 + 0x20);\n        iVar3 = arg1;\n        uVar2 = fcn.00465d40();\n        if (iVar3 != '\\0') {\n            return uVar2;\n        }\n        if (arg1 == 0) break;\n        cVar1 = fcn.00458d40(arg1);\n        if (cVar1 != '\\0') {\n            fcn.00458ce0(arg1 + 0x28);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 252
    },
    "00466400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00466400(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = 0x466431;\n            iVar5 = fcn.00445720(unaff_RBX);\n            arg1 = *(*0x20 + 0x10);\n            iVar4 = *(*0x20 + 8);\n            unaff_RBX = 0;\n            for (uVar6 = 0; uVar6 < arg1; uVar6 = uVar6 + 1) {\n                if (arg1 <= uVar6) goto code_r0x00466531;\n                uVar2 = *(iVar4 + uVar6 * 2);\n                if ((uVar2 < 0xd800) || (0xdfff < uVar2)) {\n                    if (arg1 <= unaff_RBX) goto code_r0x00466526;\n                    *(iVar5 + unaff_RBX * 4) = uVar2;\n                }\n                else {\n                    if ((uVar2 < 0xdc00) && (uVar1 = uVar6 + 1,  uVar1 < arg1)) {\n                        if (arg1 <= uVar1) goto code_r0x0046651b;\n                        uVar3 = *(iVar4 + 2 + uVar6 * 2);\n                        if ((0xdbff < uVar3) && (uVar3 < 0xe000)) {\n                            if (unaff_RBX < arg1) {\n                                *(iVar5 + unaff_RBX * 4) = ((uVar2 - 0xd800) * 0x400 | uVar3 - 0xdc00) + 0x10000;\n                                uVar6 = uVar1;\n                                goto code_r0x00466442;\n                            }\n                            goto code_r0x00466510;\n                        }\n                    }\n                    if (arg1 <= unaff_RBX) goto code_r0x00466505;\n                    *(iVar5 + unaff_RBX * 4) = 0xfffd;\n                }\ncode_r0x00466442:\n                unaff_RBX = unaff_RBX + 1;\n            }\n            if (unaff_RBX <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x28) = 0x466505;\n            fcn.0045e4a0(unaff_RBX, arg1);\ncode_r0x00466505:\n            *(*0x20 + -0x28) = 0x466510;\n            fcn.0045e420(arg1);\ncode_r0x00466510:\n            *(*0x20 + -0x28) = 0x46651b;\n            fcn.0045e420(arg1);\ncode_r0x0046651b:\n            *(*0x20 + -0x28) = 0x466526;\n            fcn.0045e420(arg1);\ncode_r0x00466526:\n            *(*0x20 + -0x28) = 0x466531;\n            fcn.0045e420(arg1);\ncode_r0x00466531:\n            *(*0x20 + -0x28) = 0x46653c;\n            in_RAX = fcn.0045e420(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x466551;\n        fcn.0045bdc0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1056
    },
    "00466ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00466ea0(ulong arg1)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar1 = fcn.0045ac20(arg1);\n    fcn.00409f60();\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "004676a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004676a0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    for (iVar1 = 0; (arg1_00 = unaff_RBX,  iVar1 < unaff_RBX && (arg1_00 = iVar1,  *(in_RAX + iVar1 * 2) != 0));\n        iVar1 = iVar1 + 1) {\n    }\n    fcn.00466400(arg1);\n    fcn.00449c00(arg1_00);\n    return;\n}\n",
        "token_count": 200
    },
    "00467a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00467a00(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x544d50;\n            *(*0x20 + -0x48) = 0x467a32;\n            iVar1 = fcn.00467100();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x467a58;\n                iVar2 = fcn.0045ab20(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x53e230;\n                    if ((iVar1 != 0) && (uVar3 = *0x53e240,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x467a96;\n                        fcn.00409f60();\n                        uVar3 = 0x4ca5d8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x467ac5;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x467ad0;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 507
    },
    "00467ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00467ae0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x544e20;\n            *(*0x20 + -0x48) = 0x467b12;\n            iVar1 = fcn.00467100();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x467b38;\n                iVar2 = fcn.0045ab20(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x53e230;\n                    if ((iVar1 != 0) && (uVar3 = *0x53e240,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x467b76;\n                        fcn.00409f60();\n                        uVar3 = 0x4ca5d8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x467ba5;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x467bb0;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 507
    },
    "00467bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00467bc0(ulong arg1, ulong noname_1, int64_t arg3, ulong arg4)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint64_t arg1_00;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RSI;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x1c) = unaff_EDI;\n            *(*0x20 + 0x28) = arg3;\n            *(*0x20 + -0x28) = unaff_RBX;\n            if (arg3 == 0) {\n                unaff_RSI = 0;\n            }\n            *(*0x20 + -0x10) = unaff_RSI;\n            *(*0x20 + -0x18) = in_R10;\n            *(*0x20 + -0x20) = *0x544e48;\n            *(*0x20 + -0x90) = 0x467c33;\n            iVar1 = fcn.00467100();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x88) = in_XMM15;\n                arg1_00 = *(*0x20 + 8);\n                *(*0x20 + -0x90) = 0x467c8b;\n                uVar2 = fcn.0045ab80(arg1_00, *(*0x20 + 0x1c), *(*0x20 + 0x1c), *(*0x20 + -0x10));\n                if (((uVar2 == 0) && (arg1_00 != 0)) && (arg1_00 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x90) = 0x467cca;\n                    fcn.00409f60();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x90) = 0x467d05;\n            in_EAX = fcn.00432de0();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x1c) = unaff_EDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + 0x28) = arg3;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + -8) = 0x467d30;\n        fcn.0045bdc0();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x1c);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 960
    },
    "00467d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00467d60(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x544e80;\n            *(*0x20 + -0x40) = 0x467d86;\n            iVar1 = fcn.00467100();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x40) = 0x467da8;\n                fcn.0045ab20(0);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x467dbd;\n            fcn.00432de0();\n        }\n        *(puVar2 + -8) = 0x467dc5;\n        fcn.0045bdc0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 305
    },
    "004681e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004681e0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x545068;\n            *(*0x20 + -0x48) = 0x468216;\n            iVar1 = fcn.00467100();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x468247;\n                iVar2 = fcn.0045ab20(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x53e230;\n                    if ((iVar1 != 0) && (uVar3 = *0x53e240,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x468285;\n                        fcn.00409f60();\n                        uVar3 = 0x4ca5d8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x4682b0;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x4682bf;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 553
    },
    "00468400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00468400(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x38) = in_R11;\n            *(*0x20 + -0x40) = in_RAX;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x20) = arg4;\n            *(*0x20 + -0x28) = in_R10;\n            *(*0x20 + -0x30) = *0x5450d8;\n            *(*0x20 + -0xa0) = 0x468475;\n            arg1 = *0x5450d8;\n            iVar1 = fcn.00467100();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x98) = *(*0x20 + -0x28);\n                *(*0x20 + -0x90) = *(*0x20 + -0x38);\n                iVar1 = *(*0x20 + -0x40);\n                *(*0x20 + -0xa0) = 0x4684df;\n                iVar2 = fcn.0045ab80(iVar1, *(*0x20 + 0x30), *(*0x20 + 0x20), *(*0x20 + -0x18));\n                if (iVar2 == 0xffffffff) {\n                    uVar3 = *0x53e230;\n                    if ((iVar1 != 0) && (uVar3 = *0x53e240,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xa0) = 0x468525;\n                        fcn.00409f60();\n                        uVar3 = 0x4ca5d8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xa0) = 0x468556;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_EDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + 0x40) = in_R10;\n        *(puVar4 + 0x48) = in_R11;\n        *(puVar4 + -8) = 0x468587;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_EDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3._0_4_ = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        in_R10 = *(puVar4 + 0x40);\n        in_R11 = *(puVar4 + 0x48);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1031
    },
    "004685c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004685c0(void)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x545100;\n            *(*0x20 + -0x48) = 0x4685f6;\n            iVar1 = fcn.00467100();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x48) = 0x468625;\n                iVar1 = fcn.0045ab20(*(*0x20 + 8));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x468635;\n                    fcn.00409f60();\n                    uVar2 = 0x4ca5d8;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x48) = 0x468657;\n            in_EAX = fcn.00432de0();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x468666;\n        fcn.0045bdc0();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 494
    },
    "0046e760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e760(void)\n\n{\n    int64_t in_RAX;\n    ulong arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    arg1 = (**(in_RAX + 0x18))();\n    fcn.0046e8e0(arg1);\n    return;\n}\n",
        "token_count": 116
    },
    "0046e7c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e7c0(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (iVar2 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    while (iVar2 = iVar2 + 1,  iVar3 = iVar2,  iVar2 < unaff_RDI) {\n        while( true ) {\n            if (arg1 < iVar3) {\n                cVar1 = (**(in_RAX + 0x20))(iVar3 + -1);\n            }\n            else {\n                cVar1 = '\\0';\n            }\n            if (cVar1 == '\\0') break;\n            (**(in_RAX + 0x28))();\n            iVar3 = iVar3 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "0046edc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046edc0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RSI;\n    int64_t iVar2;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    arg1 = unaff_RDI - arg1;\n    iVar2 = unaff_RSI - unaff_RDI;\n    while (iVar2 != arg1) {\n        if (iVar2 < arg1) {\n            for (iVar1 = 0; iVar1 < iVar2; iVar1 = iVar1 + 1) {\n                (**(in_RAX + 0x28))(iVar1 + unaff_RDI, unaff_RDI - arg1);\n            }\n            arg1 = arg1 - iVar2;\n        }\n        else {\n            for (iVar1 = 0; iVar1 < arg1; iVar1 = iVar1 + 1) {\n                (**(in_RAX + 0x28))(iVar1 + ((unaff_RDI + iVar2) - arg1), unaff_RDI - arg1);\n            }\n            iVar2 = iVar2 - arg1;\n        }\n    }\n    for (iVar2 = 0; iVar2 < arg1; iVar2 = iVar2 + 1) {\n        (**(in_RAX + 0x28))(iVar2 + unaff_RDI, unaff_RDI - arg1, iVar2 + (unaff_RDI - arg1));\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "0046f7c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046f7c0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x544a18;\n            *(*0x20 + -0x58) = 0x46f7fb;\n            iVar1 = fcn.00467100();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x58) = 0x46f832;\n                uVar2 = fcn.0045ab20(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x58) = 0x46f871;\n                    fcn.00409f60();\n                    uVar2 = *(*0x20 + -0x28);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x58) = 0x46f8a5;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x46f8b9;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 594
    },
    "00470b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00470b20(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                uVar3 = *in_RAX;\n                if ((uVar3 & 1) != 0) {\n                    return 0;\n                }\n                uVar2 = (uVar3 | 1) + 8;\n                if ((uVar2 & 0x7ffff8) == 0) break;\n                LOCK();\n                uVar1 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar3 == uVar1) * (*in_RAX ^ uVar2 & 0x80000000007fffff);\n                if (uVar3 == uVar1) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    while ((uVar3 & 0x7ffff800000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x470b9e;\n                        fcn.00459fc0();\n                        uVar3 = *(*0x20 + -0x18) - 0x800000;\n                    }\n                    while ((uVar3 & 0x7ffff80000000000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x470bd0;\n                        fcn.00459fc0();\n                        uVar3 = *(*0x20 + -0x18) - 0x80000000000;\n                    }\n                    return 1;\n                }\n            }\n            *(*0x20 + -0x30) = 0x470c1b;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x470c26;\n        fcn.0045bdc0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 615
    },
    "00470ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00470ce0(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (*0x598568 == 0) {\n        fcn.00465080();\n    }\n    uVar1 = fcn.004591c0();\n    if (unaff_RBX == 0) {\n        *in_RAX = uVar1;\n        return 0;\n    }\n    uVar1 = *0x53e0d0;\n    if (unaff_RBX != 0x3e5) {\n        fcn.00409f60();\n        uVar1 = 0x4ca5d8;\n    }\n    return uVar1;\n}\n",
        "token_count": 218
    },
    "00470dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00470dc0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong *puVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if ((0x4e2f < *0x20) && (*(unaff_R14 + 0x10) <= *0x20 + -0x4e30 && *0x20 + -0x4e30 != *(unaff_R14 + 0x10))) {\n            puVar4 = *0x20 + -0x4eb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x4eb8) = 0x470dfd;\n            iVar2 = fcn.00467100();\n            if (iVar2 != 0) {\n                return;\n            }\n            *(*0x20 + -0x4e90) = 6;\n            puVar5 = *0x20 + -0x4e88;\n            for (iVar2 = 0x9d0; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *(*0x20 + -0x4e94) = 0x4e80;\n            *(*0x20 + -0x4eb8) = 0x470e39;\n            iVar1 = fcn.004682e0(*0x20 + -0x4e94);\n            if (*0x20 != 0x4e88) {\n                return;\n            }\n            iVar3 = 0;\n            while( true ) {\n                if (iVar1 <= iVar3) {\n                    *0x598340 = 1;\n                    return;\n                }\n                if (0x1f < iVar3) break;\n                if ((*(iVar3 * 0x274) >> 0x11 & 1) == 0) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *0xffffffffffffffd0 = 0x470eb6;\n            fcn.0045e420(0x20);\n        }\n        *(puVar4 + -8) = 0x470ebc;\n        fcn.0045bdc0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 573
    },
    "00471f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00471f00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.00471f40();\n    return;\n}\n",
        "token_count": 83
    },
    "00471f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00471f40(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            arg1 = 0x400;\n            while( true ) {\n                *(*0x20 + -0x1c) = arg1;\n                *(*0x20 + -0x40) = 0x471f7c;\n                iVar3 = fcn.00445720(arg1);\n                if (*(*0x20 + -0x1c) == 0) break;\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x40) = 0x471f97;\n                uVar2 = fcn.0046f7c0(*(*0x20 + -0x1c));\n                if (iVar3 != 0) {\n                    return 0;\n                }\n                uVar1 = *(*0x20 + -0x1c);\n                if (uVar2 < uVar1) {\n                    *(*0x20 + -0x40) = 0x471fb0;\n                    uVar4 = fcn.004676a0(uVar1);\n                    return uVar4;\n                }\n                arg1 = uVar1 + 0x400;\n            }\n            *(*0x20 + -0x40) = 0x471fdc;\n            in_RAX = fcn.0045e420(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x471fe7;\n        fcn.0045bdc0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 541
    },
    "004723a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004723a0(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (in_RAX != 0) {\ncode_r0x004723ce:\n                *(*0x20 + -0x20) = 0x4723d3;\n                fcn.00459720(arg1, arg2, arg3);\n                *(*0x20 + -0x20) = 0x4723dd;\n                fcn.00459b20();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x4723c5;\n            cVar1 = fcn.0046f5c0();\n            if (cVar1 == '\\0') goto code_r0x004723ce;\n            *(*0x20 + -0x20) = 0x4723fa;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x472405;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 415
    },
    "00473720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00473720(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint8_t unaff_SIL;\n    int64_t unaff_RDI;\n    ulong in_R10;\n    ulong *in_R11;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uint8_t uStack0000000000000028;\n    ulong uStack0000000000000038;\n    ulong *puStack0000000000000040;\n    uchar auStack872 [16];\n    uchar auStack856 [784];\n    int64_t iStack72;\n    int64_t iStack64;\n    uchar *puStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack0000000000000038 = in_R10;\n    puStack0000000000000040 = in_R11;\n    uStack0000000000000028 = unaff_SIL;\n    while (auStack856 < *(unaff_R14 + 0x10) || auStack856 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    fcn.0045e5c9();\n    fcn.00472880();\n    fcn.00472de0(puStack0000000000000040, *puStack0000000000000040);\n    puStack48 = SUB168(in_XMM15, 0);\n    uStack40 = SUB164(in_XMM15, 0);\n    uStack36 = SUB164(in_XMM15 >> 0x20, 0);\n    uStack32 = SUB164(in_XMM15 >> 0x40, 0);\n    uStack28 = SUB164(in_XMM15 >> 0x60, 0);\n    if (unaff_RDI < 0) {\n        fcn.00473d80(uStack0000000000000038);\n        if (uStack0000000000000028 < 0x48) {\n            if (uStack0000000000000028 == 0x45) {\ncode_r0x00473a08:\n                unaff_RDI = iStack72 + -1;\n                goto code_r0x00473a67;\n            }\n            if (uStack0000000000000028 != 0x47) goto code_r0x00473a67;\n        }\n        else {\n            if (uStack0000000000000028 == 0x65) goto code_r0x00473a08;\n            if (uStack0000000000000028 == 0x66) {\n                unaff_RDI = 0;\n                if (0 < iStack72 - iStack64) {\n                    unaff_RDI = iStack72 - iStack64;\n                }\n                goto code_r0x00473a67;\n            }\n            if (uStack0000000000000028 != 0x67) goto code_r0x00473a67;\n        }\n        unaff_RDI = iStack72;\n        goto code_r0x00473a67;\n    }\n    if (uStack0000000000000028 < 0x48) {\n        if (uStack0000000000000028 == 0x45) {\ncode_r0x00473846:\n            fcn.00472ea0(unaff_RDI + 1);\n            goto code_r0x00473a67;\n        }\n        if (uStack0000000000000028 != 0x47) goto code_r0x00473a67;\n    }\n    else {\n        if (uStack0000000000000028 == 0x65) goto code_r0x00473846;\n        if (uStack0000000000000028 == 0x66) {\n            fcn.00472ea0(iStack64 + unaff_RDI);\n            goto code_r0x00473a67;\n        }\n        if (uStack0000000000000028 != 0x67) goto code_r0x00473a67;\n    }\n    if (unaff_RDI == 0) {\n        unaff_RDI = 1;\n    }\n    fcn.00472ea0();\ncode_r0x00473a67:\n    puStack48 = auStack872;\n    uStack28 = 0;\n    uStack32 = 800;\n    uStack36 = 0;\n    uStack40 = 800;\n    fcn.00473b40(arg1, puStack48, unaff_RDI);\n    return;\n}\n",
        "token_count": 1001
    },
    "00473b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00473b40(uint64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    char unaff_DIL;\n    uint8_t uVar1;\n    uint32_t in_R9D;\n    int64_t unaff_R14;\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong uStackX24;\n    int64_t iStackX32;\n    int64_t in_stack_00000028;\n    int64_t iStack0000000000000030;\n    \n    iStack0000000000000030 = in_RAX;\n    while (uVar1 = in_R9D,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n        in_R9D = in_R9D & 0xff;\n    }\n    if (uVar1 < 0x48) {\n        if (uVar1 == 0x45) {\ncode_r0x00473b7d:\n            fcn.00474280(arg1, uStackX8, uStackX16, uStackX24);\n            return;\n        }\n        if (uVar1 == 0x47) {\ncode_r0x00473bd4:\n            if ((iStackX32 < arg3) && (in_stack_00000028 <= iStackX32)) {\n                arg3 = iStackX32;\n            }\n            if (unaff_DIL != '\\0') {\n                arg3 = 6;\n            }\n            if ((-5 < in_stack_00000028 + -1) && (in_stack_00000028 + -1 < arg3)) {\n                fcn.00474720(arg1, iStackX32, uStackX16, uStackX24);\n                return;\n            }\n            fcn.00474280(arg1, in_R9D - 2, uStackX16, uStackX24);\n            return;\n        }\n    }\n    else {\n        if (uVar1 == 0x65) goto code_r0x00473b7d;\n        if (uVar1 == 0x66) {\n            fcn.00474720(arg1, uStackX8, uStackX16, uStackX24);\n            return;\n        }\n        if (uVar1 == 0x67) goto code_r0x00473bd4;\n    }\n    if (arg1 < unaff_RBX + 2U) {\n        iStack0000000000000030 = fcn.00445800(arg1);\n        in_R9D = in_R9D & 0xff;\n    }\n    *(unaff_RBX + iStack0000000000000030) = 0x25;\n    *(unaff_RBX + 1 + iStack0000000000000030) = in_R9D;\n    return;\n}\n",
        "token_count": 660
    },
    "00474720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00474720(uint64_t arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t arg2;\n    uint64_t unaff_RBX;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uchar uVar4;\n    int64_t in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    \ncode_r0x00474720:\n    puVar3 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar3 = *0x20 + -0x80;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = in_RAX;\n        *(*0x20 + 0x30) = unaff_RSI;\n        *(*0x20 + 0x38) = arg3;\n        *(*0x20 + 0x40) = arg4;\n        *(*0x20 + 0x48) = in_R10;\n        *(*0x20 + 0x50) = in_R11;\n        if (unaff_RDI != '\\0') {\n            if (arg1 < unaff_RBX + 1) {\n                unaff_RSI = 0x496180;\n                *(*0x20 + -0x88) = 0x474786;\n                in_RAX = fcn.00445800(arg1);\n            }\n            *(unaff_RBX + in_RAX) = 0x2d;\n            unaff_RBX = unaff_RBX + 1;\n        }\n        unaff_RDI = *(*0x20 + 0x50);\n        if (unaff_RDI < 1) {\n            uVar2 = unaff_RBX + 1;\n            if (arg1 < uVar2) {\n                unaff_RDI = 1;\n                *(*0x20 + -0x88) = 0x4747b6;\n                in_RAX = fcn.00445800(arg1);\n            }\n            *(unaff_RBX + in_RAX) = 0x30;\ncode_r0x004748ad:\n            arg2 = *(*0x20 + 8);\n            if (arg2 < 1) {\n                return;\n            }\n            if (arg1 < uVar2 + 1) {\n                unaff_RDI = 1;\n                *(*0x20 + -0x88) = 0x4748d6;\n                in_RAX = fcn.00445800(arg1);\n                arg2 = *(*0x20 + 8);\n            }\n            *(uVar2 + in_RAX) = 0x2e;\n            unaff_RSI = 0;\n            unaff_RBX = uVar2 + 1;\n            do {\n                if (arg2 <= unaff_RSI) {\n                    return;\n                }\n                arg3 = *(*0x20 + 0x50) + unaff_RSI;\n                if ((arg3 < 0) || (*(*0x20 + 0x48) == arg3 || *(*0x20 + 0x48) < arg3)) {\n                    uVar4 = 0x30;\n                }\n                else {\n                    arg4 = *(*0x20 + 0x38);\n                    in_R10 = *(*0x20 + 0x30);\n                    if (arg4 <= arg3) goto code_r0x0047497d;\n                    uVar4 = *(in_R10 + arg3);\n                }\n                if (arg1 < unaff_RBX + 1) {\n                    *(*0x20 + -0x28) = unaff_RSI;\n                    *(*0x20 + -0x39) = uVar4;\n                    unaff_RDI = 1;\n                    *(*0x20 + -0x88) = 0x474965;\n                    in_RAX = fcn.00445800(arg1);\n                    arg2 = *(*0x20 + 8);\n                    unaff_RSI = *(*0x20 + -0x28);\n                    uVar4 = *(*0x20 + -0x39);\n                }\n                *(unaff_RBX + in_RAX) = uVar4;\n                unaff_RSI = unaff_RSI + 1;\n                unaff_RBX = unaff_RBX + 1;\n            } while( true );\n        }\n        if (*(*0x20 + 0x48) < unaff_RDI) {\n            unaff_RDI = *(*0x20 + 0x48);\n        }\n        arg2 = *(*0x20 + 0x40);\n        arg3 = *(*0x20 + 0x30);\n        if (unaff_RDI <= arg2) {\n            *(*0x20 + -0x38) = unaff_RDI;\n            uVar2 = unaff_RDI + unaff_RBX;\n            if (arg1 < uVar2) {\n                *(*0x20 + -0x10) = arg3;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x88) = 0x474814;\n                in_RAX = fcn.00445800(arg1);\n                unaff_RDI = *(*0x20 + -0x38);\n            }\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x88) = 0x474847;\n            fcn.0045eda0(unaff_RDI);\n            in_RAX = *(*0x20 + -0x10);\n            arg1 = *(*0x20 + -0x18);\n            uVar2 = *(*0x20 + -0x20);\n            for (iVar1 = *(*0x20 + -0x38); unaff_RDI = arg1,  *(*0x20 + 0x50) != iVar1 && iVar1 <= *(*0x20 + 0x50);\n                iVar1 = iVar1 + 1) {\n                if (arg1 < uVar2 + 1) {\n                    *(*0x20 + -0x30) = iVar1;\n                    *(*0x20 + -0x88) = 0x474897;\n                    in_RAX = fcn.00445800(arg1);\n                    iVar1 = *(*0x20 + -0x30);\n                }\n                *(uVar2 + in_RAX) = 0x30;\n                uVar2 = uVar2 + 1;\n            }\n            goto code_r0x004748ad;\n        }\n        goto code_r0x00474988;\n    }\n    goto code_r0x00474991;\ncode_r0x0047497d:\n    *(*0x20 + -0x88) = 0x474988;\n    fcn.0045e420(arg4);\ncode_r0x00474988:\n    *(*0x20 + -0x88) = 0x474990;\n    arg1 = unaff_RDI;\n    in_RAX = fcn.0045e4a0(unaff_RDI, arg2);\ncode_r0x00474991:\n    *(puVar3 + 0x10) = in_RAX;\n    *(puVar3 + 0x18) = unaff_RBX;\n    *(puVar3 + 0x20) = arg1;\n    puVar3[0x28] = unaff_RDI;\n    *(puVar3 + 0x30) = unaff_RSI;\n    *(puVar3 + 0x38) = arg3;\n    *(puVar3 + 0x40) = arg4;\n    *(puVar3 + 0x48) = in_R10;\n    *(puVar3 + 0x50) = in_R11;\n    *(puVar3 + -8) = 0x4749c5;\n    fcn.0045bdc0();\n    in_RAX = *(puVar3 + 0x10);\n    unaff_RBX = *(puVar3 + 0x18);\n    arg1 = *(puVar3 + 0x20);\n    unaff_RDI = puVar3[0x28];\n    unaff_RSI = *(puVar3 + 0x30);\n    arg3 = *(puVar3 + 0x38);\n    arg4 = *(puVar3 + 0x40);\n    in_R10 = *(puVar3 + 0x48);\n    in_R11 = *(puVar3 + 0x50);\n    *0x20 = puVar3;\n    goto code_r0x00474720;\n}\n",
        "token_count": 1994
    },
    "00474a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00474a00(uint64_t arg1, ulong noname_1, int64_t arg3, int64_t *arg4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uint64_t uVar2;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000030;\n    int64_t *piStack0000000000000038;\n    \n    iStack0000000000000030 = arg3;\n    piStack0000000000000038 = arg4;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    uVar2 = unaff_RBX;\n    if (unaff_DIL != '\\0') {\n        uVar2 = unaff_RBX + 1;\n        if (arg1 < uVar2) {\n            in_RAX = fcn.00445800(arg1);\n        }\n        *(unaff_RBX + in_RAX) = 0x2d;\n    }\n    iVar1 = fcn.004767c0(arg1);\n    if (arg1 < uVar2 + 1) {\n        iVar1 = fcn.00445800(arg1);\n    }\n    *(uVar2 + iVar1) = 0x70;\n    if (-1 < iStack0000000000000030 - *piStack0000000000000038) {\n        if (arg1 < uVar2 + 2) {\n            iVar1 = fcn.00445800(arg1);\n        }\n        *(uVar2 + 1 + iVar1) = 0x2b;\n    }\n    fcn.004767c0(arg1);\n    return;\n}\n",
        "token_count": 415
    },
    "004770e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004770e0(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar unaff_SIL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (arg1 < unaff_RBX + 1U) {\n        in_RAX = fcn.00445800(arg1);\n    }\n    *(unaff_RBX + in_RAX) = unaff_SIL;\n    iVar1 = fcn.00477200(arg1);\n    if (arg1 < unaff_RBX + 2U) {\n        iVar1 = fcn.00445800(arg1);\n    }\n    *(unaff_RBX + 1 + iVar1) = unaff_SIL;\n    return;\n}\n",
        "token_count": 221
    },
    "00481840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00481840(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((*(in_RAX + 0x17) & 0x20) == 0) {\n        fcn.00458dc0();\n        fcn.00458f20(arg1);\n        return in_RAX;\n    }\n    return in_RAX;\n}\n",
        "token_count": 141
    },
    "00481900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00481900(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX != 0) {\n                if ((arg1 >> 9 & 1) != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x20) = 0x48193c;\n                uVar1 = fcn.0047df80();\n                return uVar1;\n            }\n            *(*0x20 + -0x20) = 0x481952;\n            unaff_RBX = fcn.0040c6e0();\n            unaff_RBX[1] = 0x17;\n            arg1 = 0x4ac3d8;\n            *unaff_RBX = 0x4ac3d8;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x20) = 0x48197b;\n            in_RAX = fcn.00432de0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x481990;\n        fcn.0045bdc0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 515
    },
    "00481f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00481f80(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong in_RDX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((arg1 & 0x1f) != 0) {\n        if ((arg1 == 0) || ((arg1 >> 9 & 1) != 0)) {\n            iVar1 = fcn.00482060(arg1);\n        }\n        else {\n            iVar1 = 0x4cb460;\n        }\n        (**(iVar1 + 0xf8))();\n        uVar2 = fcn.00449620(1, in_RDX, 0x4a8531, 7);\n        return uVar2;\n    }\n    return 0x4a9d47;\n}\n",
        "token_count": 227
    },
    "00482a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00482a20(void)\n\n{\n    fcn.0047d5e0();\n    return;\n}\n",
        "token_count": 27
    },
    "00482a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00482a60(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [16];\n    ulong uStackX24;\n    uchar auStack40 [32];\n    \n    piVar1 = *(**(in_GS_OFFSET + *0x598520) + 0x20);\n    if ((piVar1 != NULL) && (*piVar1 == auStackX8)) {\n        *piVar1 = auStack40;\n    }\n    fcn.0047fc00(uStackX24);\n    return;\n}\n",
        "token_count": 129
    },
    "00484ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00484ce0(void)\n\n{\n    char unaff_BL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if (unaff_BL == '\\0') {\n        fcn.00484a20(5);\n    }\n    else {\n        fcn.00484a20(4);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00486c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00486c40(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong arg1_00;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    iVar1 = fcn.00486a80();\n    fcn.0048c3a0(unaff_RBX, in_RDX, uStack0000000000000028);\n    arg1_00 = *(iVar1 + 8);\n    uVar2 = fcn.00449920(arg1_00);\n    fcn.00486b20(arg1_00, in_RDX, uStack0000000000000028);\n    return uVar2;\n}\n",
        "token_count": 241
    },
    "004875e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004875e0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bdc0();\n    }\n    if ((arg1 == 0x74) || (arg1 == 0x76)) {\n        fcn.00484ce0();\n    }\n    else {\n        fcn.00487080();\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0048bf40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0048bf40(uint64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    char cVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI <= unaff_RSI) {\n                return unaff_RBX;\n            }\n            if (unaff_RSI < unaff_RDI) {\n                if (*(arg1 + unaff_RSI) != '[') {\n                    return unaff_RBX;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x30) = arg3;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + 0x28) = unaff_RSI;\n                *(in_RAX + 0xb0) = 1;\n                cVar2 = arg1 + (-(unaff_RDI - unaff_RSI) >> 0x3f & unaff_RSI);\n                *(*0x20 + -0x28) = 0x48bfbc;\n                iVar1 = fcn.0048be60();\n                if (((cVar2 != '\\0') && (-1 < iVar1)) && (iVar1 < *(*0x20 + 0x30))) {\n                    return iVar1;\n                }\n                *(*(*0x20 + 8) + 0xb1) = 0;\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x28) = 0x48c018;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045e420(unaff_RDI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + 0x30) = arg3;\n        *(puVar3 + -8) = 0x48c03c;\n        fcn.0045bdc0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        arg3 = *(puVar3 + 0x30);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 761
    },
    "0048d7c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0048d7c0(void)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    uVar5 = 0;\n    for (uVar4 = 1; uVar4 < unaff_RSI; uVar4 = uVar4 + 2) {\n        if (unaff_RSI <= uVar4 - 1) goto code_r0x0048d91b;\n        if (unaff_RSI <= uVar4) goto code_r0x0048d910;\n        uVar1 = *(*(unaff_RDI + -1 + uVar4) + 0x4b1d9d);\n        uVar2 = *(*(unaff_RDI + uVar4) + 0x4b1d9d);\n        if (0xf < uVar1) {\n            return uVar5;\n        }\n        if (0xf < uVar2) {\n            return uVar5;\n        }\n        if (unaff_RBX <= uVar5) goto code_r0x0048d905;\n        *(in_RAX + uVar5) = uVar1 << 4 | uVar2;\n        uVar5 = uVar5 + 1;\n    }\n    if ((unaff_RSI & 1) == 0) {\n        return uVar5;\n    }\n    if (uVar4 - 1 < unaff_RSI) {\n        if (*(*(unaff_RDI + -1 + uVar4) + 0x4b1d9d) < 0x10) {\n            return uVar5;\n        }\n        return uVar5;\n    }\n    fcn.0045e420(unaff_RSI);\ncode_r0x0048d905:\n    fcn.0045e420(unaff_RBX);\ncode_r0x0048d910:\n    fcn.0045e420(unaff_RSI);\ncode_r0x0048d91b:\n    fcn.0045e420(unaff_RSI);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 528
    },
    "00419740": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00419740(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    while( true ) {\n        uVar1 = *in_RAX;\n        if (uVar1 >> 0x3d == 0) {\n            return 0;\n        }\n        uVar3 = uVar1 & 0x1fffffffffffffff | unaff_RBX & 0xe000000000000000;\n        iVar2 = unaff_RBX - uVar3;\n        if (unaff_RBX < uVar3) {\n            iVar2 = 0;\n        }\n        if (iVar2 == 0) break;\n        LOCK();\n        uVar3 = *in_RAX;\n        *in_RAX = *in_RAX ^ (uVar1 == uVar3) * (*in_RAX ^ (uVar1 & 0xe000000000000000 | unaff_RBX & 0x1fffffffffffffff))\n        ;\n        if (uVar1 == uVar3) {\n            return uVar1 >> 0x3d;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 272
    },
    "0041e3a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e3a0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    \n    do {\n        uVar1 = *(in_RAX + 0x120);\n        iVar2 = *(in_RAX + 0x110) - *(in_RAX + 0x118);\n    } while (uVar1 < iVar2 + *(in_RAX + 0x108));\n    uVar3 = *(in_RAX + 8);\n    iVar4 = 0;\n    if (uVar3 < uVar1) {\n        iVar4 = uVar1 - uVar3;\n    }\n    uVar1 = ((uVar1 - *(in_RAX + 0x108)) - iVar2) + iVar4;\n    if (uVar1 < uVar3) {\n        uVar3 = uVar3 - uVar1;\n        if ((uVar3 < 0x100000) || (uVar3 = uVar3 - 0x100000,  uVar3 < 0x100000)) {\n            uVar3 = 0x100000;\n        }\n        if (uVar3 < *(in_RAX + 0x80)) {\n            uVar3 = *(in_RAX + 0x80);\n        }\n        return uVar3;\n    }\n    return *(in_RAX + 0x80);\n}\n",
        "token_count": 328
    },
    "0041ef60": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041ef60(void)\n\n{\n    ulong in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x41ef85;\n            fcn.0040a520();\n            if (*(*(*0x20 + 8) + 8) == unaff_R14) {\n                *(*(*0x20 + 8) + 0x10) = 1;\n                *(*0x20 + -0x30) = 0x41efb3;\n                fcn.004360a0(0xd);\n                return;\n            }\n            *(*0x20 + -0x30) = 0x41efce;\n            in_RAX = fcn.00433580();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x41efd9;\n        fcn.0045bdc0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 362
    },
    "00401ee0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00401ee0(ulong noname_0, ulong arg2)\n\n{\n    int32_t iStackX8;\n    \n    if (iStackX8 == 0) {\n        cpuid_basic_info(0);\n    }\n    else if (iStackX8 == 1) {\n        cpuid_Version_info(1);\n    }\n    else if (iStackX8 == 2) {\n        cpuid_cache_tlb_info(2);\n    }\n    else if (iStackX8 == 3) {\n        cpuid_serial_info(3);\n    }\n    else if (iStackX8 == 4) {\n        cpuid_Deterministic_Cache_Parameters_info(4);\n    }\n    else if (iStackX8 == 5) {\n        cpuid_MONITOR_MWAIT_Features_info(5);\n    }\n    else if (iStackX8 == 6) {\n        cpuid_Thermal_Power_Management_info(6);\n    }\n    else if (iStackX8 == 7) {\n        cpuid_Extended_Feature_Enumeration_info(7);\n    }\n    else if (iStackX8 == 9) {\n        cpuid_Direct_Cache_Access_info(9);\n    }\n    else if (iStackX8 == 10) {\n        cpuid_Architectural_Performance_Monitoring_info(10);\n    }\n    else if (iStackX8 == 0xb) {\n        cpuid_Extended_Topology_info(0xb);\n    }\n    else if (iStackX8 == 0xd) {\n        cpuid_Processor_Extended_States_info(0xd);\n    }\n    else if (iStackX8 == 0xf) {\n        cpuid_Quality_of_Service_info(0xf);\n    }\n    else if (iStackX8 == -0x7ffffffe) {\n        cpuid_brand_part1_info(0x80000002);\n    }\n    else if (iStackX8 == -0x7ffffffd) {\n        cpuid_brand_part2_info(0x80000003);\n    }\n    else if (iStackX8 == -0x7ffffffc) {\n        cpuid_brand_part3_info(0x80000004);\n    }\n    else {\n        cpuid(iStackX8);\n    }\n    return;\n}\n",
        "token_count": 498
    },
    "00431ba0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00431ba0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = 0x431bca;\n            fcn.00431380(0x15);\n            *(*0x20 + -0x28) = 0x431be9;\n            fcn.00432de0();\n        }\n        *(puVar1 + -8) = 0x431bef;\n        fcn.0045bdc0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 234
    },
    "00431c00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00431c00(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x431c25;\n            fcn.00431440();\n            iVar1 = *0x53e170;\n            if (*0x53e170 != 0) {\n                iVar1 = *(*0x53e170 + 8);\n            }\n            *(*0x20 + -0x20) = 0x431c45;\n            fcn.00432de0(iVar1);\n        }\n        *(puVar2 + -8) = 0x431c4b;\n        fcn.0045bdc0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 282
    },
    "00432200": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00432200(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x432225;\n            fcn.00433580();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43222b;\n        fcn.0045bdc0();\n    } while( true );\n}\n",
        "token_count": 175
    },
    "00432240": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00432240(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x432265;\n            fcn.00433580();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43226b;\n        fcn.0045bdc0();\n    } while( true );\n}\n",
        "token_count": 175
    },
    "004368e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004368e0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x436905;\n            fcn.00433580();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43690b;\n        fcn.0045bdc0();\n    } while( true );\n}\n",
        "token_count": 176
    },
    "00436920": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436920(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x436945;\n            fcn.00433580();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43694b;\n        fcn.0045bdc0();\n    } while( true );\n}\n",
        "token_count": 175
    },
    "00436a20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436a20(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    puVar7 = &stack0xfffffffffffffff8;\n    iVar3 = fcn.00433580();\n    puVar5 = auStack24;\n    do {\n        puVar6 = puVar5;\n        if (*(unaff_R14 + 0x10) <= puVar5 && puVar5 != *(unaff_R14 + 0x10)) {\n            puVar6 = puVar5 + -0x50;\n            *(puVar5 + -8) = puVar7;\n            puVar7 = puVar5 + -8;\n            if (*(iVar3 + 0x90) != 0) {\n                *(puVar5 + 8) = iVar3;\n                *(puVar5 + -0x58) = 0x436a7b;\n                fcn.0040a520();\n                uVar4 = *0x545598 + 1;\n                iVar3 = *0x545590;\n                arg1 = *0x5455a0;\n                iVar2 = *0x545590;\n                if (*0x5455a0 < uVar4) {\n                    *(puVar5 + -0x58) = 0x436aa9;\n                    iVar3 = fcn.00445800(*0x5455a0);\n                    arg1 = *0x5455a0;\n                    iVar2 = iVar3;\n                    if (*0x5985b0 != 0) {\n                        *(puVar5 + -0x58) = 0x436ace;\n                        iVar3 = fcn.0045df80(*0x5455a0, param_2, param_3, param_4);\n                        iVar2 = *0x545590;\n                    }\n                }\n                *0x545590 = iVar2;\n                *0x545598 = uVar4;\n                if (*0x5985b0 == 0) {\n                    param_2 = *(puVar5 + 8);\n                    *(iVar3 + -8 + uVar4 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(puVar5 + 8);\n                    *(puVar5 + -0x58) = 0x436afc;\n                    fcn.0045e0a0(arg1, param_2, param_3, param_4);\n                }\n                if (*0x545598 != 0) {\n                    iVar3 = *0x544bd0;\n                    if ((*0x544bd0 != *0x545590) && (iVar3 = *0x545590,  *0x5985b0 != '\\0')) {\n                        *(puVar5 + -0x10) = *0x545590;\n                        *(puVar5 + -0x58) = 0x436b33;\n                        fcn.004037e0();\n                        iVar3 = *(puVar5 + -0x10);\n                    }\n                    *0x544bd0 = iVar3;\n                    uVar1 = *0x5983d8;\n                    *0x5983d8 = *0x545598;\n                    *(puVar5 + -0x58) = 0x436b65;\n                    fcn.0040a740(uVar1);\n                    return;\n                }\n                *(puVar5 + -0x58) = 0x436b79;\n                fcn.0045e420(0);\n            }\n            *(puVar5 + -0x58) = 0x436b8a;\n            iVar3 = fcn.00433580();\n        }\n        *(puVar6 + 8) = iVar3;\n        *(puVar6 + -8) = 0x436b95;\n        fcn.0045bdc0();\n        iVar3 = *(puVar6 + 8);\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 938
    },
    "00442420": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00442420(void)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    \n    uVar3 = *(in_RAX + 0x998);\n    if (uVar3 != 0) {\n        LOCK();\n        puVar1 = in_RAX + 0x998;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n        if (uVar3 == uVar4) {\n            return uVar3;\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 400);\n        if (uVar2 == *(in_RAX + 0x194)) {\n            return 0;\n        }\n        uVar3 = *(in_RAX + 0x198 + (uVar2 & 0xff) * 8);\n        LOCK();\n    } while (uVar2 != *(in_RAX + 400));\n    *(in_RAX + 400) = uVar2 + 1;\n    return uVar3;\n}\n",
        "token_count": 268
    },
    "0044f6e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044f6e0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x44f705;\n            fcn.00433580();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x44f70b;\n        fcn.0045bdc0();\n    } while( true );\n}\n",
        "token_count": 180
    },
    "004574e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004574e0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x457507;\n            fcn.00432de0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x45750d;\n        fcn.0045bdc0();\n    } while( true );\n}\n",
        "token_count": 177
    },
    "00457520": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00457520(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x457547;\n            fcn.00432de0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x45754d;\n        fcn.0045bdc0();\n    } while( true );\n}\n",
        "token_count": 176
    },
    "0045db40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045db40(void)\n\n{\n    int32_t iStackX8;\n    \n    do {\n        iStackX8 = iStackX8 + -1;\n    } while (iStackX8 != 0);\n    return;\n}\n",
        "token_count": 55
    },
    "0045e420": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e420(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x4314f4;\n            fcn.00431380(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            *(*0x20 + -0x40) = 0x431530;\n            arg1 = fcn.00409e60();\n            *(*0x20 + -0x40) = 0x43153f;\n            in_RAX = fcn.00432de0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x43154f;\n        fcn.0045bdc0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 450
    },
    "0045e440": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e440(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x431594;\n            fcn.00431380(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            *(*0x20 + -0x40) = 0x4315d0;\n            arg1 = fcn.00409e60();\n            *(*0x20 + -0x40) = 0x4315df;\n            in_RAX = fcn.00432de0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x4315ef;\n        fcn.0045bdc0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 450
    },
    "0045e460": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e460(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x431634;\n            fcn.00431380(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 1;\n            *(*0x20 + -0x40) = 0x431670;\n            arg2 = fcn.00409e60();\n            *(*0x20 + -0x40) = 0x43167f;\n            arg1 = fcn.00432de0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x43168f;\n        fcn.0045bdc0();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 442
    },
    "0045e4a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e4a0(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x431774;\n            fcn.00431380(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            *(*0x20 + -0x40) = 0x4317b0;\n            arg2 = fcn.00409e60();\n            *(*0x20 + -0x40) = 0x4317bf;\n            arg1 = fcn.00432de0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x4317cf;\n        fcn.0045bdc0();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 446
    },
    "0045e4c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e4c0(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x431814;\n            fcn.00431380(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            *(*0x20 + -0x40) = 0x431850;\n            arg2 = fcn.00409e60();\n            *(*0x20 + -0x40) = 0x43185f;\n            arg1 = fcn.00432de0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x43186f;\n        fcn.0045bdc0();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 444
    },
    "0045e4e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e4e0(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x4318b4;\n            fcn.00431380(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            *(*0x20 + -0x40) = 0x4318f0;\n            arg1 = fcn.00409e60();\n            *(*0x20 + -0x40) = 0x4318ff;\n            in_RAX = fcn.00432de0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x43190f;\n        fcn.0045bdc0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 454
    },
    "0045e500": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e500(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x431954;\n            fcn.00431380(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            *(*0x20 + -0x40) = 0x431990;\n            arg1 = fcn.00409e60();\n            *(*0x20 + -0x40) = 0x43199f;\n            in_RAX = fcn.00432de0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x4319af;\n        fcn.0045bdc0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 448
    },
    "0045e520": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e520(ulong noname_0, ulong arg2)\n\n{\n    ulong unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x4319f4;\n            fcn.00431380(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            *(*0x20 + -0x40) = 0x431a30;\n            unaff_RBX = fcn.00409e60();\n            *(*0x20 + -0x40) = 0x431a3f;\n            arg2 = fcn.00432de0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x431a4f;\n        fcn.0045bdc0();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 464
    },
    "0045e540": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e540(ulong noname_0, ulong arg2)\n\n{\n    ulong unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x431a94;\n            fcn.00431380(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            *(*0x20 + -0x40) = 0x431ad0;\n            unaff_RBX = fcn.00409e60();\n            *(*0x20 + -0x40) = 0x431adf;\n            arg2 = fcn.00432de0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x431aef;\n        fcn.0045bdc0();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 460
    },
    "00460800": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00460800(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t arg1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int64_t in_GS_OFFSET;\n    uchar auStack24 [16];\n    \n    iVar2 = **(in_GS_OFFSET + *0x598520);\n    puVar7 = &stack0xfffffffffffffff8;\n    uVar3 = fcn.00433580();\n    puVar5 = auStack24;\n    do {\n        puVar1 = iVar2 + 0x10;\n        puVar6 = puVar5;\n        if (*puVar1 <= puVar5 && puVar5 != *puVar1) {\n            puVar6 = puVar5 + -0x38;\n            *(puVar5 + -8) = puVar7;\n            puVar7 = puVar5 + -8;\n            *(puVar5 + -0x10) = uVar3;\n            *(puVar5 + -0x40) = 0x45a145;\n            iVar4 = fcn.0044a280();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(puVar5 + -0x20) = iVar4;\n            *(puVar5 + -0x40) = 0x45a167;\n            iVar4 = fcn.0040bd20(0);\n            arg1 = *(puVar5 + -0x20);\n            if (-1 < arg1) {\n                if (arg1 <= -iVar4) {\n                    *(puVar5 + -0x18) = iVar4;\n                    *(puVar5 + -0x40) = 0x45a18e;\n                    fcn.0045eda0(arg1);\n                    return *(puVar5 + -0x18);\n                }\n                if (iVar4 != 0) {\n                    *(puVar5 + -0x40) = 0x45a1ac;\n                    fcn.004574e0();\n                }\n                *(puVar5 + -0x40) = 0x45a1b1;\n                fcn.00457520();\n            }\n            *(puVar5 + -0x40) = 0x45a1b6;\n            uVar3 = fcn.004574e0();\n        }\n        *(puVar6 + 8) = uVar3;\n        *(puVar6 + -8) = 0x45a1c5;\n        fcn.0045bdc0();\n        uVar3 = *(puVar6 + 8);\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 608
    }
}