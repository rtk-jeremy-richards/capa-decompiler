{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_5ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    // [00] -r-x section size 28672 named .text\n    iVar3 = *0x4705bc;\n    if (arg_ch == 0xf) {\n        uVar4 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_5ch);\n        var_ch = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_1ch);\n        iVar5 = var_10h;\n        pcVar1 = _sym.imp.GDI32.dll_DeleteObject;\n        var_10h = 0;\n        for (; var_18h < iVar5; var_18h = var_18h + 4) {\n            iVar7 = iVar5 - var_18h;\n            var_8h = (((*(iVar3 + 0x52) * iVar7 + *(iVar3 + 0x56) * var_18h) / iVar5 & 0xffU) << 8 |\n                     (*(iVar3 + 0x51) * iVar7 + *(iVar3 + 0x55) * var_18h) / iVar5 & 0xffU) << 8 |\n                     (*(iVar3 + 0x50) * iVar7 + *(iVar3 + 0x54) * var_18h) / iVar5 & 0xffU;\n            uVar6 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            var_10h = var_10h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar4, &var_1ch, uVar6);\n            (*pcVar1)(uVar6);\n        }\n        if (*(iVar3 + 0x58) != -1) {\n            iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectW)(*(iVar3 + 0x34));\n            if (iVar5 != 0) {\n                var_1ch = 0x10;\n                var_18h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar4, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar4, *(iVar3 + 0x58));\n                pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n                uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, iVar5);\n                (*_sym.imp.USER32.dll_DrawTextW)(uVar4, 0x4685a0, 0xffffffff, &var_1ch, 0x820);\n                (*pcVar2)(uVar4, uVar6);\n                (*pcVar1)(iVar5);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_5ch);\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = *0x4705b4;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_DefWindowProcW)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar4;\n}\n",
        "token_count": 862
    },
    "00406900": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00406900(uint32_t *param_1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint16_t *puVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    bool bVar12;\n    uint32_t auStack140 [4];\n    int32_t iStack124;\n    uint32_t uStack120;\n    uint8_t *puStack116;\n    int32_t iStack112;\n    uint8_t *puStack108;\n    int32_t iStack104;\n    uint32_t uStack100;\n    uint8_t uStack96;\n    uint8_t uStack95;\n    uint16_t *puStack92;\n    uint16_t *puStack88;\n    int32_t iStack84;\n    uint32_t uStack80;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    puVar10 = param_1;\n    puVar11 = auStack140;\n    for (iVar6 = 0x22; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar11 = *puVar10;\n        puVar10 = puVar10 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    iVar6 = iStack8;\n    uVar8 = uStack72;\n    puVar9 = puStack88;\n    if (iStack52 == -1) {\n        return 1;\n    }\ncode_r0x00406932:\n    do {\n        uVar5 = uStack36;\n        puVar3 = puStack108;\n    // switch table (29 cases) at 0x4072ec\n        switch(auStack140[0]) {\n        case 0:\n            if (iStack112 == 0) goto code_r0x004072d1;\n            iStack112 = iStack112 + -1;\n            uVar1 = *puStack116;\n            puStack116 = puStack116 + 1;\n            if (0xe1 < uVar1) {\n                return 0xffffffff;\n            }\n            uStack64 = (uVar1 % 0x2d) % 9;\n            uStack32 = (1 << uVar1 / 0x2d) - 1;\n            uStack28 = (1 << (uVar1 % 0x2d) / 9) - 1;\n            iVar7 = (0x300 << uStack64 + uVar1 / 0x2d) + 0x736;\n            iVar6 = iVar7 * 2;\n            if (iVar6 != iStack124) {\n                if (iStack8 != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(iStack8);\n                }\n                iStack8 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar6);\n                if (iStack8 == 0) {\n                    return 0xffffffff;\n                }\n                iStack124 = iVar6;\n            }\n            while (iVar7 != 0) {\n                iVar7 = iVar7 + -1;\n                *(iStack8 + iVar7 * 2) = 0x400;\n            }\n            uStack68 = 0;\n            for (uStack76 = 0; uStack76 < 4; uStack76 = uStack76 + 1) {\ncode_r0x004069ed:\n                if (iStack112 == 0) {\n                    auStack140[0] = 1;\n                    goto code_r0x004072d1;\n                }\n                iStack112 = iStack112 + -1;\n                uStack68 = uStack68 | *puStack116 << (uStack76 << 3 & 0x1f);\n                puStack116 = puStack116 + 1;\n            }\n            if (uStack68 != uStack120) {\n                uStack120 = uStack68;\n                if (iStack12 != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(iStack12);\n                }\n                iStack12 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, uStack68);\n                if (iStack12 == 0) {\n                    return 0xffffffff;\n                }\n            }\n            *(iStack12 + -1 + uStack120) = 0;\n            uStack76 = 5;\n            while (uVar5 = uStack76,  uStack76 = uStack76 - 1,  iVar6 = iStack8,  uVar5 != 0) {\ncode_r0x00406a5b:\n                if (iStack112 == 0) {\n                    auStack140[0] = 3;\n                    goto code_r0x004072d1;\n                }\n                uVar1 = *puStack116;\n                iStack112 = iStack112 + -1;\n                puStack116 = puStack116 + 1;\n                uStack16 = uStack16 << 8 | uVar1;\n            }\n        case 2:\n            uStack80 = uStack100 & uStack32;\n            puVar9 = iVar6 + (iStack60 * 0x10 + (uStack100 & uStack32)) * 2;\n            auStack140[1] = 6;\n            break;\n        case 1:\n            goto code_r0x004069ed;\n        case 3:\n            goto code_r0x00406a5b;\n        case 4:\n            goto code_r0x004070df;\n        case 5:\n            goto code_r0x0040712e;\n        case 6:\n            if (uStack68 != 0) {\n                iStack56 = 1;\n                puVar9 = iVar6 + 0x180 + iStack60 * 2;\n                auStack140[1] = 7;\n                break;\n            }\n            puStack92 = ((uStack96 >> (8 - uStack64 & 0x1f)) + ((uStack100 & uStack28) << (uStack64 & 0x1f))) * 0x600 +\n                        0xe6c + iVar6;\n            if (iStack60 < 4) {\n                iStack60 = 0;\n            }\n            else if (iStack60 < 10) {\n                iStack60 = iStack60 + -3;\n            }\n            else {\n                iStack60 = iStack60 + -6;\n            }\n            if (iStack56 != 0) {\n                uVar8 = uStack24 - uStack48;\n                if (uStack120 <= uVar8) {\n                    uVar8 = uVar8 + uStack120;\n                }\n                uStack95 = *(uVar8 + iStack12);\n                uVar8 = 1;\n                do {\n                    uVar1 = uStack95;\n                    uStack95 = uStack95 << 1;\n                    uStack76 = uVar1 >> 7;\n                    puVar9 = puStack92 + ((uVar1 >> 7) + 1) * 0x100 + uVar8;\n                    uVar2 = *puVar9;\n                    uVar5 = (uStack20 >> 0xb) * uVar2;\n                    puStack88 = puVar9;\n                    bVar12 = uVar5 <= uStack16;\n                    if (bVar12) {\n                        uStack20 = uStack20 - uVar5;\n                        uStack16 = uStack16 - uVar5;\n                        uStack68 = 1;\n                        *puVar9 = uVar2 - (uVar2 >> 5);\n                        uVar8 = uVar8 * 2 + 1;\n                    }\n                    else {\n                        uStack68 = 0;\n                        uStack20 = uVar5;\n                        *puVar9 = (0x800 - uVar2 >> 5) + uVar2;\n                        uVar8 = uVar8 * 2;\n                    }\n                    uStack68 = bVar12;\n                    uStack72 = uVar8;\n                    if (uStack20 < 0x1000000) {\ncode_r0x00406b3a:\n                        if (iStack112 == 0) {\n                            auStack140[0] = 0xd;\n                            goto code_r0x004072d1;\n                        }\n                        uVar1 = *puStack116;\n                        uStack20 = uStack20 << 8;\n                        iStack112 = iStack112 + -1;\n                        puStack116 = puStack116 + 1;\n                        uStack16 = uStack16 << 8 | uVar1;\n                    }\n                    if (uStack76 != uStack68) goto code_r0x00406c19;\n                } while (uVar8 < 0x100);\n                goto code_r0x00406c7e;\n            }\n            uVar8 = 1;\n            do {\n                puVar9 = puStack92 + uVar8;\n                uVar2 = *puVar9;\n                uVar5 = (uStack20 >> 0xb) * uVar2;\n                puStack88 = puVar9;\n                if (uStack16 < uVar5) {\n                    uStack20 = uVar5;\n                    *puVar9 = (0x800 - uVar2 >> 5) + uVar2;\n                    uVar8 = uVar8 * 2;\n                }\n                else {\n                    uStack20 = uStack20 - uVar5;\n                    uStack16 = uStack16 - uVar5;\n                    *puVar9 = uVar2 - (uVar2 >> 5);\n                    uVar8 = uVar8 * 2 + 1;\n                }\n                uStack72 = uVar8;\n                if (uStack20 < 0x1000000) {\ncode_r0x00406cb9:\n                    if (iStack112 == 0) {\n                        auStack140[0] = 0xf;\n                        goto code_r0x004072d1;\n                    }\n                    uVar1 = *puStack116;\n                    uStack20 = uStack20 << 8;\n                    iStack112 = iStack112 + -1;\n                    puStack116 = puStack116 + 1;\n                    uStack16 = uStack16 << 8 | uVar1;\n                }\n            } while (uVar8 < 0x100);\n            goto code_r0x00406c82;\n        case 7:\n            if (uStack68 != 1) {\n                uStack36 = uStack40;\n                uStack40 = uStack44;\n                uStack44 = uStack48;\n                auStack140[2] = 0x16;\n                iStack60 = ((6 < iStack60) - 1 & 0xfffffffd) + 10;\n                puStack92 = iVar6 + 0x664;\n                goto code_r0x00406d94;\n            }\n            puVar9 = iVar6 + 0x198 + iStack60 * 2;\n            auStack140[1] = 8;\n            break;\n        case 8:\n            if (uStack68 == 0) {\n                auStack140[1] = 9;\n                puVar9 = iVar6 + ((iStack60 + 0xf) * 0x10 + uStack80) * 2;\n            }\n            else {\n                puVar9 = iVar6 + 0x1b0 + iStack60 * 2;\n                auStack140[1] = 10;\n            }\n            break;\n        case 9:\n            if (uStack68 != 0) goto code_r0x00406e89;\n            if (uStack100 == 0) {\n                return 0xffffffff;\n            }\n            iStack60 = (6 < iStack60) * 2 + 9;\n        case 0x1b:\n            if (iStack104 == 0) {\n                auStack140[0] = 0x1b;\n                goto code_r0x004072d1;\n            }\n            uVar5 = uStack24 - uStack48;\n            if (uStack120 <= uVar5) {\n                uVar5 = uVar5 + uStack120;\n            }\n            uStack96 = *(uVar5 + iStack12);\n            *(uStack24 + iStack12) = uStack96;\n            uStack100 = uStack100 + 1;\n            puStack108 = puStack108 + 1;\n            iStack104 = iStack104 + -1;\n            *puVar3 = uStack96;\n            goto code_r0x00406e36;\n        case 10:\n            uVar4 = uStack44;\n            if (uStack68 == 0) goto code_r0x00406e80;\n            puVar9 = iVar6 + 0x1c8 + iStack60 * 2;\n            auStack140[1] = 0xb;\n            break;\n        case 0xb:\n            uVar4 = uStack40;\n            if (uStack68 != 0) {\n                uStack36 = uStack40;\n                uVar4 = uVar5;\n            }\n            uStack40 = uStack44;\ncode_r0x00406e80:\n            uStack44 = uStack48;\n            uStack48 = uVar4;\ncode_r0x00406e89:\n            puStack92 = iVar6 + 0xa68;\n            auStack140[2] = 0x15;\n        case 0x11:\ncode_r0x00406d94:\n            auStack140[1] = 0x12;\n            puVar9 = puStack92;\n            break;\n        case 0xc:\n            while (iStack112 != 0) {\n                uVar1 = *puStack116;\n                uStack20 = uStack20 << 8;\n                iStack112 = iStack112 + -1;\n                puStack116 = puStack116 + 1;\n                uStack16 = uStack16 << 8 | uVar1;\n                do {\n                    uStack76 = uStack76 - 1;\ncode_r0x00406f4e:\n                    if (uStack76 < 1) {\n                        uStack48 = uStack48 + uVar8 * 0x10;\n                        puStack92 = iVar6 + 0x644;\n                        uStack68 = 4;\n                        goto code_r0x00406f93;\n                    }\n                    uStack20 = uStack20 >> 1;\n                    uVar8 = uVar8 * 2;\n                    uStack72 = uVar8;\n                    if (uStack20 <= uStack16) {\n                        uVar8 = uVar8 | 1;\n                        uStack16 = uStack16 - uStack20;\n                        uStack72 = uVar8;\n                    }\n                } while (0xffffff < uStack20);\n            }\n            auStack140[0] = 0xc;\n            goto code_r0x004072d1;\n        case 0xd:\n            goto code_r0x00406b3a;\n        case 0xe:\n            goto code_r0x00406bf4;\n        case 0xf:\n            goto code_r0x00406cb9;\n        case 0x10:\n            goto code_r0x00406fa4;\n        case 0x12:\n            if (uStack68 == 0) {\n                iStack52 = 0;\n                iVar7 = uStack80 * 8 + 2;\ncode_r0x00407178:\n                puStack92 = puStack92 + iVar7;\n                uStack68 = 3;\n                goto code_r0x00407199;\n            }\n            auStack140[1] = 0x13;\n            puVar9 = puStack92 + 1;\n            break;\n        case 0x13:\n            if (uStack68 == 0) {\n                iStack52 = 8;\n                iVar7 = uStack80 * 8 + 0x82;\n                goto code_r0x00407178;\n            }\n            puStack92 = puStack92 + 0x102;\n            iStack52 = 0x10;\n            uStack68 = 8;\ncode_r0x00407199:\n            auStack140[3] = 0x14;\n        case 0x17:\ncode_r0x004071a0:\n            iStack84 = 1;\n            for (uStack76 = uStack68; 0 < uStack76; uStack76 = uStack76 - 1) {\n                puVar9 = puStack92 + iStack84;\n                uVar2 = *puVar9;\n                uVar8 = (uStack20 >> 0xb) * uVar2;\n                puStack88 = puVar9;\n                if (uStack16 < uVar8) {\n                    uStack20 = uVar8;\n                    iStack84 = iStack84 << 1;\n                    *puVar9 = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    uStack20 = uStack20 - uVar8;\n                    uStack16 = uStack16 - uVar8;\n                    *puVar9 = uVar2 - (uVar2 >> 5);\n                    iStack84 = iStack84 * 2 + 1;\n                }\n                if (uStack20 < 0x1000000) {\ncode_r0x004071af:\n                    if (iStack112 == 0) {\n                        auStack140[0] = 0x18;\n                        goto code_r0x004072d1;\n                    }\n                    uVar1 = *puStack116;\n                    uStack20 = uStack20 << 8;\n                    iStack112 = iStack112 + -1;\n                    puStack116 = puStack116 + 1;\n                    uStack16 = uStack16 << 8 | uVar1;\n                }\n                iVar6 = iStack8;\n            }\n            uVar8 = iStack84 - (1 << (uStack68 & 0x1f));\n            uStack72 = uVar8;\n            auStack140[0] = auStack140[3];\n            goto code_r0x00407259;\n        case 0x14:\n            iStack52 = iStack52 + uVar8;\n            auStack140[0] = auStack140[2];\n            goto code_r0x00407259;\n        case 0x15:\n            iStack60 = ((6 < iStack60) - 1 & 0xfffffffd) + 0xb;\n            goto code_r0x0040704c;\n        case 0x16:\n            iVar7 = iStack52;\n            if (3 < iStack52) {\n                iVar7 = 3;\n            }\n            puStack92 = iVar7 * 0x80 + 0x360 + iVar6;\n            uStack68 = 6;\n            auStack140[3] = 0x19;\n            goto code_r0x004071a0;\n        case 0x18:\n            goto code_r0x004071af;\n        case 0x19:\n            uStack48 = uVar8;\n            if (3 < uVar8) {\n                iVar7 = uVar8 >> 1;\n                uStack68 = iVar7 - 1;\n                uStack48 = (uVar8 & 1 | 2) << (uStack68 & 0x1f);\n                if (0xd < uVar8) {\n                    uVar8 = 0;\n                    uStack76 = iVar7 - 5;\n                    goto code_r0x00406f4e;\n                }\n                puStack92 = iVar6 + 0x55e + (uStack48 - uVar8) * 2;\ncode_r0x00406f93:\n                uVar8 = 0;\n                iStack84 = 1;\n                uStack72 = 0;\n                for (uStack76 = 0; uStack76 < uStack68; uStack76 = uStack76 + 1) {\n                    puVar9 = puStack92 + iStack84;\n                    uVar2 = *puVar9;\n                    uVar5 = (uStack20 >> 0xb) * uVar2;\n                    puStack88 = puVar9;\n                    if (uStack16 < uVar5) {\n                        uStack20 = uVar5;\n                        iStack84 = iStack84 << 1;\n                        *puVar9 = (0x800 - uVar2 >> 5) + uVar2;\n                    }\n                    else {\n                        uStack20 = uStack20 - uVar5;\n                        uStack16 = uStack16 - uVar5;\n                        uVar8 = uStack72 | 1 << (uStack76 & 0x1f);\n                        uStack72 = uVar8;\n                        *puVar9 = uVar2 - (uVar2 >> 5);\n                        iStack84 = iStack84 * 2 + 1;\n                    }\n                    if (uStack20 < 0x1000000) {\ncode_r0x00406fa4:\n                        if (iStack112 == 0) {\n                            auStack140[0] = 0x10;\n                            goto code_r0x004072d1;\n                        }\n                        uVar1 = *puStack116;\n                        uStack20 = uStack20 << 8;\n                        iStack112 = iStack112 + -1;\n                        puStack116 = puStack116 + 1;\n                        uStack16 = uStack16 << 8 | uVar1;\n                    }\n                }\n                uStack48 = uStack48 + uVar8;\n            }\n            uStack48 = uStack48 + 1;\ncode_r0x0040704c:\n            if (uStack48 == 0) {\n                iStack52 = 0xffffffff;\n                goto code_r0x004072d1;\n            }\n            if (uStack100 < uStack48) {\n                return 0xffffffff;\n            }\n            iStack52 = iStack52 + 2;\n            uStack100 = uStack100 + iStack52;\ncode_r0x0040706a:\n            do {\n                puVar3 = puStack108;\n                if (iStack104 == 0) {\n                    auStack140[0] = 0x1c;\n                    goto code_r0x004072d1;\n                }\n                uVar5 = uStack24 - uStack48;\n                if (uStack120 <= uVar5) {\n                    uVar5 = uVar5 + uStack120;\n                }\n                uStack96 = *(uVar5 + iStack12);\n                *(uStack24 + iStack12) = uStack96;\n                puStack108 = puStack108 + 1;\n                iStack104 = iStack104 + -1;\n                iStack52 = iStack52 + -1;\n                *puVar3 = uStack96;\n                uStack24 = (uStack24 + 1) % uStack120;\n            } while (0 < iStack52);\n            goto code_r0x00406e39;\n        case 0x1a:\n            goto code_r0x00406c88;\n        case 0x1c:\n            goto code_r0x0040706a;\n        default:\n            return 0xffffffff;\n        }\n        puStack88 = puVar9;\ncode_r0x004070df:\n        uVar2 = *puVar9;\n        uVar5 = (uStack20 >> 0xb) * uVar2;\n        bVar12 = uVar5 <= uStack16;\n        if (bVar12) {\n            uStack20 = uStack20 - uVar5;\n            uStack16 = uStack16 - uVar5;\n            *puVar9 = uVar2 - (uVar2 >> 5);\n            uStack68 = 1;\n        }\n        else {\n            uStack20 = uVar5;\n            uStack68 = 0;\n            *puVar9 = (0x800 - uVar2 >> 5) + uVar2;\n        }\n        uStack68 = bVar12;\n        auStack140[0] = auStack140[1];\n        if (uStack20 < 0x1000000) {\ncode_r0x0040712e:\n            if (iStack112 == 0) {\n                auStack140[0] = 5;\n                goto code_r0x004072d1;\n            }\n            uVar1 = *puStack116;\n            uStack20 = uStack20 << 8;\n            iStack112 = iStack112 + -1;\n            puStack116 = puStack116 + 1;\n            uStack16 = uStack16 << 8 | uVar1;\n            auStack140[0] = auStack140[1];\n        }\ncode_r0x00407259:\n    } while( true );\ncode_r0x00406c19:\n    if (uVar8 < 0x100) {\n        puVar9 = puStack92 + uVar8;\n        uVar2 = *puVar9;\n        uVar5 = (uStack20 >> 0xb) * uVar2;\n        puStack88 = puVar9;\n        if (uStack16 < uVar5) {\n            uStack20 = uVar5;\n            *puVar9 = (0x800 - uVar2 >> 5) + uVar2;\n            uVar8 = uVar8 * 2;\n        }\n        else {\n            uStack20 = uStack20 - uVar5;\n            uStack16 = uStack16 - uVar5;\n            *puVar9 = uVar2 - (uVar2 >> 5);\n            uVar8 = uVar8 * 2 + 1;\n        }\n        uStack72 = uVar8;\n        if (uStack20 < 0x1000000) {\ncode_r0x00406bf4:\n            if (iStack112 == 0) {\n                auStack140[0] = 0xe;\n                goto code_r0x004072d1;\n            }\n            uVar1 = *puStack116;\n            uStack20 = uStack20 << 8;\n            iStack112 = iStack112 + -1;\n            puStack116 = puStack116 + 1;\n            uStack16 = uStack16 << 8 | uVar1;\n        }\n        goto code_r0x00406c19;\n    }\ncode_r0x00406c7e:\n    iStack56 = 0;\ncode_r0x00406c82:\n    uStack96 = uStack72;\ncode_r0x00406c88:\n    if (iStack104 == 0) {\n        auStack140[0] = 0x1a;\ncode_r0x004072d1:\n        puVar10 = auStack140;\n        for (iVar6 = 0x22; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *param_1 = *puVar10;\n            puVar10 = puVar10 + 1;\n            param_1 = param_1 + 1;\n        }\n        return 0;\n    }\n    uStack100 = uStack100 + 1;\n    puStack108 = puStack108 + 1;\n    iStack104 = iStack104 + -1;\n    *puVar3 = uStack96;\n    *(uStack24 + iStack12) = uStack96;\ncode_r0x00406e36:\n    uStack24 = (uStack24 + 1) % uStack120;\ncode_r0x00406e39:\n    auStack140[0] = 2;\n    iVar6 = iStack8;\n    goto code_r0x00406932;\n}\n",
        "token_count": 6216
    },
    "0040159c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040159c(int32_t **hWndChildAfter)\n\n{\n    uint32_t *puVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t *arg_10h;\n    uint32_t uVar9;\n    uint uVar10;\n    int32_t iVar11;\n    int32_t **ppiVar12;\n    int32_t iVar13;\n    int32_t **ppiVar14;\n    int16_t iVar15;\n    int32_t **ppiVar16;\n    bool bVar17;\n    uint in_stack_fffffcf4;\n    uint in_stack_fffffcf8;\n    uint *puVar18;\n    int32_t **ppiVar19;\n    uint uVar20;\n    uint uVar21;\n    uint lpFindFileData;\n    uint *puStack676;\n    uint *puStack672;\n    uint uStack664;\n    int32_t iStack660;\n    int32_t **ppiStack656;\n    uint var_278h;\n    int32_t lpFileOp;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t lpRect;\n    uint var_44h;\n    int32_t lpString2;\n    uint lpNumberOfBytesRead;\n    ushort uStack60;\n    uint lpValueName;\n    char var_2dh;\n    int32_t **nNumberOfBytesToWrite;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    uint32_t dwFileAttributes;\n    uint32_t var_1ch;\n    uint32_t lpLastWriteTime;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t **lpNumberOfBytesWritten;\n    int32_t lpWideCharStr;\n    uint32_t var_4h;\n    \n    ppiVar14 = *0x40a0a0;\n    pcVar6 = _sym.imp.USER32.dll_ShowWindow;\n    var_4h = 0;\n    ppiVar16 = hWndChildAfter;\n    ppiVar12 = &fcn.0040159c::var_28h;\n    for (iVar11 = 7; iVar11 != 0; iVar11 = iVar11 + -1) {\n        *ppiVar12 = *ppiVar16;\n        ppiVar16 = ppiVar16 + 1;\n        ppiVar12 = ppiVar12 + 1;\n    }\n    lpWideCharStr = *0x4705b4;\n    iVar11 = var_24h * 0x4008;\n    ppiVar16 = iVar11 + 0x471000;\n    ppiVar12 = dwFileAttributes * 0x4008 + 0x471000;\n    *0x40a0a4 = &fcn.0040159c::var_24h;\n    if (0x44 < var_28h - 2U) goto code_r0x00402c58;\n    // switch table (69 cases) at 0x402c6c\n    switch(*((var_28h - 2U) * 4 + 0x402c6c)) {\n    case 0x4015fd:\ncode_r0x00401600:\n        fcn.00404ba9(in_stack_fffffcf4, in_stack_fffffcf8);\n        return 0x7fffffff;\n    case 0x40160f:\n        *0x468574 = *0x468574 + 1;\n        if (*0x4705b4 == 0) {\n            return 0x7fffffff;\n        }\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        return 0x7fffffff;\n    case 0x401625:\n        iVar11 = fcn.0040137c(var_24h);\n        uVar9 = fcn.0040139b(iVar11 + -1, 0);\n        return uVar9;\n    case 0x401639:\n        fcn.00404ba9(var_24h, 0);\n        break;\n    case 0x401646:\n        iVar11 = fcn.00401446();\n        if (iVar11 < 2) {\n            iVar11 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar11);\n        break;\n    case 0x401661:\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(*0x4705b4);\n        break;\n    case 0x40166f:\n        iVar11 = var_24h * 4;\n        if (var_1ch == 0) {\n            *(iVar11 + 0x470620) = *(iVar11 + 0x470660);\n            uVar10 = fcn.00401446();\n            *(var_24h * 4 + 0x470660) = uVar10;\n        }\n        else {\n            *(iVar11 + 0x470660) = *(iVar11 + 0x470620);\n        }\n        break;\n    case 0x4016ac:\n        puVar1 = var_1ch * 4 + 0x470660;\n        uVar9 = *puVar1;\n        *puVar1 = uVar9 & lpLastWriteTime;\n        return (&fcn.0040159c::var_24h)[uVar9 == 0];\n    case 0x4016cd:\n        goto code_r0x00402c53;\n    case 0x4016d9:\n        if (*0x468580 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x468580, dwFileAttributes);\n        }\n        if (*0x46856c != 0) {\n            (*pcVar6)(*0x46856c, var_24h);\n        }\n        break;\n    case 0x401707:\n        uVar10 = fcn.0040145c();\n        iVar11 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(uVar10, dwFileAttributes);\n        goto code_r0x00401719;\n    case 0x40172d:\n        uVar10 = fcn.0040145c();\n        piVar4 = fcn.0040593d(uVar10);\n        if (piVar4 != NULL) {\n            do {\n                piVar4 = fcn.004058e9(piVar4, 0x5c);\n                iVar15 = *piVar4;\n                *piVar4 = 0;\n                iVar11 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(uVar10, 0);\n                if ((iVar11 == 0) &&\n                   ((iVar11 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar11 != 0xb7 ||\n                    (uVar9 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(uVar10),  (uVar9 & 0x10) == 0)))) {\n                    var_4h = var_4h + 1;\n                }\n                *piVar4 = iVar15;\n                piVar4 = piVar4 + 1;\n            } while (iVar15 != 0);\n        }\n        if (dwFileAttributes == 0) goto code_r0x004017ac;\n        fcn.00401435(0xffffffe6);\n        fcn.00405bee(0x4c90b0, uVar10);\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(uVar10);\n        break;\n    case 0x4017b6:\n        uVar10 = fcn.0040145c();\n        iVar11 = fcn.00405cce(uVar10);\n        lpLastWriteTime = dwFileAttributes;\n        goto joined_r0x00401b8a;\n    case 0x4017d3:\n        uVar10 = fcn.0040145c();\n        uVar8 = fcn.0040145c();\n        fcn.0040145c();\n        iVar11 = (*_sym.imp.KERNEL32.dll_MoveFileW)(uVar10, uVar8);\n        if (iVar11 == 0) {\n            if ((var_1ch == 0) || (iVar11 = fcn.00405cce(uVar10),  iVar11 == 0)) goto code_r0x00401721;\n            fcn.0040665c(uVar10, uVar8);\n        }\n        goto code_r0x004017ac;\n    case 0x401822:\n        ppiVar14 = fcn.0040145c();\n        iVar11 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(ppiVar14, 0x2004, ppiVar12, &fcn.0040159c::hWndChildAfter);\n        if (iVar11 == 0) {\ncode_r0x00401865:\n            *ppiVar12 = 0;\n            var_4h = 1;\n        }\n        else if ((ppiVar14 < hWndChildAfter) && (*hWndChildAfter != 0)) {\n            iVar11 = fcn.00405cce(ppiVar14);\n            if (iVar11 == 0) goto code_r0x00401865;\n            fcn.00405bee(hWndChildAfter, iVar11 + 0x2c);\n        }\n        if (var_1ch == 0) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameW)(ppiVar12, ppiVar12, 0x2004);\n        }\n        break;\n    case 0x40188d:\n        uVar10 = fcn.0040145c();\n        iVar11 = (*_sym.imp.KERNEL32.dll_SearchPathW)(0, uVar10, 0, 0x2004, ppiVar16, &fcn.0040159c::hWndChildAfter);\n        goto code_r0x004018aa;\n    case 0x4018c3:\n        uVar10 = fcn.0040145c();\n        iVar11 = fcn.00405a63(ppiVar16, uVar10);\n        goto code_r0x00401719;\n    case 0x4018d7:\n        ppiVar14 = fcn.0040145c();\n        hWndChildAfter = var_24h & 7;\n        lpNumberOfBytesWritten = ppiVar14;\n        iVar11 = fcn.00405908(ppiVar14);\n        if (iVar11 == 0) {\n            uVar10 = fcn.00405bee(0x40a0a8, 0x4c90b0, ppiVar14);\n            uVar10 = fcn.0040611c(uVar10);\n            sub.KERNEL32.dll_lstrcatW(uVar10);\n        }\n        else {\n            fcn.00405bee(0x40a0a8);\n        }\n        fcn.00405c1d(0x40a0a8);\n        do {\n            if (2 < hWndChildAfter) {\n                iVar11 = fcn.00405cce(0x40a0a8);\n                uVar9 = 0;\n                if (iVar11 != 0) {\n                    uVar9 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(iVar11 + 0x14, &fcn.0040159c::lpLastWriteTime);\n                }\n                hWndChildAfter = ((hWndChildAfter - 3U | 0x80000000) & uVar9) == 0;\n            }\n            if (hWndChildAfter == NULL) {\n                fcn.00405a14(0x40a0a8);\n            }\n            lpWideCharStr = fcn.00405a34(0x40a0a8, 0x40000000, (hWndChildAfter != 0x1) + '\\x01');\n            if (lpWideCharStr != -1) {\n                fcn.00404ba9(0xffffffea, lpNumberOfBytesWritten);\n                *0x470694 = *0x470694 + 1;\n                iVar11 = fcn.004030b8(var_1ch, lpWideCharStr, 0, 0);\n                *0x470694 = *0x470694 + -1;\n                if ((lpLastWriteTime != 0xffffffff) || (var_14h != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)\n                              (lpWideCharStr, &fcn.0040159c::lpLastWriteTime, 0, &fcn.0040159c::lpLastWriteTime);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(lpWideCharStr);\n                if (-1 < iVar11) goto code_r0x00402c58;\n                if (iVar11 == -2) {\n                    uVar21 = 0xffffffe9;\n                    fcn.00406200(0x40a0a8, 0xffffffe9);\n                    uVar20 = 0x40a0a8;\n                    sub.KERNEL32.dll_lstrcatW();\n                }\n                else {\n                    uVar21 = 0xffffffee;\n                    uVar20 = 0x40a0a8;\n                    fcn.00406200(0x40a0a8, 0xffffffee);\n                }\n                uVar8 = 0x200010;\n                uVar10 = 0x40a0a8;\n                goto code_r0x00401a71;\n            }\n            if (hWndChildAfter != NULL) {\n                fcn.00404ba9(0xffffffe2, lpNumberOfBytesWritten);\n                bVar17 = hWndChildAfter == 0x2;\n                goto code_r0x0040171b;\n            }\n            fcn.00405bee(0x4120b8, 0x471000);\n            fcn.00405bee(0x471000, 0x40a0a8);\n            fcn.00406200(0x40e0b0, var_10h);\n            fcn.00405bee(0x471000, 0x4120b8);\n            iVar11 = fcn.00405883();\n        } while (iVar11 == 4);\n        if (iVar11 != 5) {\n            in_stack_fffffcf8 = 0x40a0a8;\n            in_stack_fffffcf4 = 0xfffffffa;\n            goto code_r0x00401600;\n        }\n        *0x470668 = *0x470668 + 1;\n        goto code_r0x00402c61;\n    case 0x401a7b:\n        goto code_r0x00401a7d;\n    case 0x401a90:\n        uVar10 = fcn.0040145c();\n        uVar9 = fcn.00405883(uVar10, var_24h);\n        if (uVar9 == 0) goto code_r0x00401721;\n        if (uVar9 == var_1ch) {\n            return lpLastWriteTime;\n        }\n        if (uVar9 == var_14h) {\n            return var_10h;\n        }\n        break;\n    case 0x401ac7:\ncode_r0x00401a7d:\n        uVar10 = fcn.0040145c();\n        fcn.0040668f(uVar10, dwFileAttributes);\n        break;\n    case 0x401acc:\n        uVar10 = fcn.0040145c();\n        sub.KERNEL32.dll_lstrlenW(uVar10);\n        goto code_r0x00402c53;\n    case 0x401adf:\n        hWndChildAfter = fcn.00401446();\n        iVar11 = fcn.00401446();\n        iVar13 = fcn.0040145c();\n        *ppiVar16 = 0;\n        if (((var_1ch == 0) || (hWndChildAfter != NULL)) &&\n           ((iVar7 = sub.KERNEL32.dll_lstrlenW(iVar13),  -1 < iVar11 || (iVar11 = iVar11 + iVar7,  -1 < iVar11)))) {\n            if (iVar7 < iVar11) {\n                iVar11 = iVar7;\n            }\n            fcn.00405bee(ppiVar16, iVar13 + iVar11 * 2);\n            iVar11 = hWndChildAfter;\n            if (hWndChildAfter != NULL) {\n                if (hWndChildAfter < 0) {\n                    iVar13 = sub.KERNEL32.dll_lstrlenW(ppiVar16);\n                    hWndChildAfter = iVar11 + iVar13;\n                    if (hWndChildAfter < 0) {\n                        hWndChildAfter = NULL;\n                    }\n                }\n                if (hWndChildAfter < 0x2004) {\n                    *(ppiVar16 + hWndChildAfter * 2) = 0;\n                }\n            }\n        }\n        break;\n    case 0x401b68:\n        uVar10 = fcn.0040145c();\n        uVar8 = fcn.0040145c();\n        if (var_14h == 0) {\n            iVar11 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n        }\n        else {\n            iVar11 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(uVar10, uVar8);\n        }\n        goto joined_r0x00401b8a;\n    case 0x401ba0:\n        uVar10 = fcn.0040145c();\n        iVar13 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(uVar10, ppiVar16, 0x2004);\n        if ((iVar13 == 0) ||\n           ((var_1ch != 0 && (iVar13 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(uVar10, ppiVar16),  iVar13 == 0)))) {\n            var_4h = 1;\n            *ppiVar16 = 0;\n        }\n        *(iVar11 + 0x475006) = 0;\n        break;\n    case 0x401be3:\n        uVar9 = fcn.00401446();\n        uVar3 = fcn.00401446();\n        if (var_10h != 0) {\n            if (uVar9 < uVar3) {\n                return lpLastWriteTime;\n            }\n            if (uVar9 <= uVar3) {\n                return var_1ch;\n            }\n            return var_14h;\n        }\n        if (uVar9 < uVar3) {\n            return lpLastWriteTime;\n        }\n        if (uVar9 <= uVar3) {\n            return var_1ch;\n        }\n        return var_14h;\n    case 0x401c1c:\n        fcn.00401446();\n        iVar11 = fcn.00401446();\n        if (0xc < lpLastWriteTime) goto code_r0x00402c53;\n    // switch table (13 cases) at 0x402d80\n        switch(*(lpLastWriteTime * 4 + 0x402d80)) {\n        case 0x401c41:\n            break;\n        case 0x401c45:\n            break;\n        case 0x401c49:\n            break;\n        case 0x401c50:\n            goto joined_r0x00401c8f;\n        case 0x401c62:\n            break;\n        case 0x401c66:\n            break;\n        case 0x401c6a:\n            break;\n        case 0x401c6e:\n            break;\n        case 0x401c79:\n            break;\n        case 0x401c85:\n            break;\n        case 0x401c8d:\njoined_r0x00401c8f:\n            if (iVar11 == 0) {\n                var_4h = 1;\n            }\n            break;\n        case 0x401c9a:\n            break;\n        case 0x401c9e:\n        }\n        goto code_r0x00402c53;\n    case 0x401ca6:\n        uVar10 = fcn.0040145c();\n        uVar8 = fcn.00401446();\n        (*_sym.imp.USER32.dll_wsprintfW)(ppiVar16, uVar10, uVar8);\n        break;\n    case 0x401cc9:\n        ppiVar12 = *0x40a0a0;\n        if (var_1ch != 0) {\n            do {\n                var_1ch = var_1ch - 1;\n                if (ppiVar12 == NULL) goto code_r0x00401ce5;\n                ppiVar12 = *ppiVar12;\n            } while (var_1ch != 0);\n            if (ppiVar12 == NULL) goto code_r0x00401ce5;\n            ppiVar12 = ppiVar12 + 1;\n            ppiVar16 = 0x40a0a8;\n            ppiVar14 = ppiVar12;\n            fcn.00405bee(0x40a0a8, ppiVar12);\n            fcn.00405bee(ppiVar12, *0x40a0a0 + 1);\n            goto code_r0x00402a25;\n        }\n        if (dwFileAttributes != 0) {\n            if (*0x40a0a0 != NULL) {\n                fcn.00405bee(ppiVar16, *0x40a0a0 + 1);\n                *0x40a0a0 = *ppiVar14;\n                ppiVar19 = ppiVar16;\n                goto code_r0x00402139;\n            }\n            goto code_r0x00401721;\n        }\n        ppiVar14 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x400c);\n        fcn.00406200(ppiVar14 + 1, var_24h);\n        *ppiVar14 = *0x40a0a0;\n        *0x40a0a0 = ppiVar14;\n        break;\n    case 0x401d76:\n        lpWideCharStr = fcn.00401446();\n        hWndChildAfter = fcn.00401446();\n        if ((var_10h & 1) != 0) {\n            lpWideCharStr = fcn.0040145c();\n        }\n        if ((var_10h & 2) != 0) {\n            hWndChildAfter = fcn.0040145c();\n        }\n        if (var_28h == 0x21) {\n            uVar10 = fcn.00401446();\n            uVar8 = fcn.00401446();\n            if (var_10h >> 2 == 0) {\n                lpNumberOfBytesWritten =\n                     (*_sym.imp.USER32.dll_SendMessageW)(uVar10, uVar8, lpWideCharStr, hWndChildAfter);\n                dwFileAttributes = var_24h;\n            }\n            else {\n                iVar11 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)\n                                   (uVar10, uVar8, lpWideCharStr, hWndChildAfter, 0, var_10h >> 2, \n                                    &fcn.0040159c::lpNumberOfBytesWritten);\n                var_4h = iVar11 == 0;\n                dwFileAttributes = var_24h;\n            }\n        }\n        else {\n            piVar4 = fcn.0040145c();\n            piVar5 = fcn.0040145c();\n            lpNumberOfBytesWritten =\n                 (*_sym.imp.USER32.dll_FindWindowExW)\n                           (lpWideCharStr, hWndChildAfter, -(*piVar4 != 0) & piVar4, -(*piVar5 != 0) & piVar5);\n            dwFileAttributes = var_24h;\n        }\njoined_r0x004029a0:\n        if (-1 < dwFileAttributes) goto code_r0x00402c53;\n        break;\n    case 0x401e46:\n        uVar10 = fcn.00401446();\n        iVar11 = (*_sym.imp.USER32.dll_IsWindow)(uVar10);\n        lpLastWriteTime = dwFileAttributes;\njoined_r0x00401b8a:\n        if (iVar11 == 0) {\n            return var_1ch;\n        }\n        return lpLastWriteTime;\n    case 0x401e59:\n        uVar10 = fcn.00401446();\n        uVar10 = fcn.00401446(uVar10);\n        (*_sym.imp.USER32.dll_GetDlgItem)(uVar10);\n        goto code_r0x00402c53;\n    case 0x401e76:\n        uVar10 = fcn.00401446(0xffffffeb, *0x4705e8 + dwFileAttributes);\n        (*_sym.imp.USER32.dll_SetWindowLongW)(uVar10);\n        break;\n    case 0x401e93:\n        uVar10 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x4705b4, dwFileAttributes);\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar10, &fcn.0040159c::lpRect);\n        uVar8 = fcn.0040145c(0, lpString2 * var_1ch, CONCAT22(lpNumberOfBytesRead._2_2_, lpNumberOfBytesRead) * var_1ch\n                             , 0x10);\n        uVar8 = (*_sym.imp.USER32.dll_LoadImageW)(0, uVar8);\n        iVar11 = (*_sym.imp.USER32.dll_SendMessageW)(uVar10, 0x172, 0, uVar8);\n        if (iVar11 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar11);\n        }\n        break;\n    case 0x401ef0:\n        uVar10 = (*_sym.imp.USER32.dll_GetDC)(*0x4705b4, 0x5a, 0x48);\n        uVar10 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar10);\n        uVar10 = fcn.00401446(uVar10);\n        *0x41e0d0 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar10);\n        *0x41e0d0 = -*0x41e0d0;\n        *0x41e0e0 = fcn.00401446();\n        *0x41e0e4 = var_14h & 1;\n        *0x41e0e5 = var_14h & 2;\n        *0x41e0e6 = var_14h & 4;\n        *0x41e0e7 = 1;\n        fcn.00406200(0x41e0ec, dwFileAttributes);\n        (*_sym.imp.GDI32.dll_CreateFontIndirectW)(0x41e0d0);\n        goto code_r0x00402c53;\n    case 0x401f6c:\n        uVar10 = fcn.00401446();\n        uVar8 = fcn.00401446();\n        if (lpLastWriteTime == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar10, uVar8);\n        }\n        break;\n    case 0x401f9b:\n        piVar4 = fcn.0040145c();\n        hWndChildAfter = fcn.0040145c();\n        piVar5 = fcn.0040145c();\n        fcn.0040145c();\n        fcn.00401435(0xffffffec);\n        iVar11 = (*_sym.imp.SHELL32.dll_ShellExecuteW)\n                           (lpWideCharStr, -(*piVar4 != 0) & piVar4, hWndChildAfter, -(*piVar5 != 0) & piVar5, 0x4c90b0\n                            , lpLastWriteTime);\n        if (iVar11 < 0x21) goto code_r0x00401721;\n        break;\n    case 0x401ffe:\n        uVar10 = fcn.0040145c();\n        fcn.00404ba9(0xffffffeb, uVar10);\n        hWndChildAfter = fcn.00405822(uVar10);\n        pcVar6 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n        if (hWndChildAfter == NULL) goto code_r0x00401721;\n        ppiVar14 = hWndChildAfter;\n        if (var_1ch != 0) {\n            iVar11 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hWndChildAfter, 100);\n            while (iVar11 == 0x102) {\n                fcn.00405d2c(0xf);\n                iVar11 = (*pcVar6)(hWndChildAfter, 100);\n            }\n            (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hWndChildAfter, &fcn.0040159c::lpNumberOfBytesWritten);\n            if (dwFileAttributes < 0) {\n                ppiVar14 = hWndChildAfter;\n                if (lpNumberOfBytesWritten != NULL) {\n                    var_4h = 1;\n                }\n            }\n            else {\n                fcn.00405b35(uVar10, lpNumberOfBytesWritten, ppiVar12);\n                ppiVar14 = hWndChildAfter;\n            }\n        }\ncode_r0x004026bd:\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(ppiVar14);\n        break;\n    case 0x40207d:\n        uVar10 = fcn.0040145c();\n        iVar11 = fcn.00405cce(uVar10);\n        if (iVar11 != 0) {\n            fcn.00405b35(ppiVar12, *(iVar11 + 0x14));\n            goto code_r0x00402c53;\n        }\n        *ppiVar16 = 0;\n        *ppiVar12 = 0;\n        goto code_r0x00401721;\n    case 0x4020af:\n        nNumberOfBytesToWrite = fcn.0040145c();\n        iStack660 = sub.VERSION.dll_GetFileVersionInfoSizeW(nNumberOfBytesToWrite, &fcn.0040159c::lpNumberOfBytesRead);\n        *ppiVar16 = 0;\n        *ppiVar12 = 0;\n        var_4h = 1;\n        if ((iStack660 != 0) &&\n           (ppiStack656 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iStack660),  ppiStack656 != NULL)) {\n            uStack664 = 0;\n            puStack672 = 0x4020fd;\n            ppiVar19 = nNumberOfBytesToWrite;\n            lpNumberOfBytesWritten = ppiStack656;\n            iVar11 = sub.VERSION.dll_GetFileVersionInfoW();\n            ppiVar14 = lpNumberOfBytesWritten;\n            if (iVar11 != 0) {\n                puStack672 = &fcn.0040159c::lpValueName;\n                puStack676 = &fcn.0040159c::hWndChildAfter;\n                lpFindFileData = 0x4082c8;\n                ppiVar19 = lpNumberOfBytesWritten;\n                iVar11 = sub.VERSION.dll_VerQueryValueW();\n                ppiVar14 = lpNumberOfBytesWritten;\n                if (iVar11 != 0) {\n                    fcn.00405b35(ppiVar16, hWndChildAfter[2]);\n                    fcn.00405b35(ppiVar12, hWndChildAfter[3]);\n                    var_4h = 0;\n                    ppiVar14 = lpNumberOfBytesWritten;\n                    ppiVar19 = ppiVar12;\n                }\n            }\n            goto code_r0x00402139;\n        }\n        break;\n    case 0x402144:\n        var_4h = 1;\n        if (-1 < *0x470698) {\n            uVar10 = fcn.0040145c();\n            hWndChildAfter = fcn.0040145c();\n            if (((var_14h != 0) && (iVar11 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(uVar10),  iVar11 != 0)) ||\n               (iVar11 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(uVar10, 0, 8),  iVar11 != 0)) {\n                pcVar6 = fcn.00405d5f(iVar11, hWndChildAfter);\n                if (pcVar6 == NULL) {\n                    fcn.00404ba9(0xfffffff7, hWndChildAfter);\n                }\n                else {\n                    var_4h = 0;\n                    if (var_1ch == 0) {\n                        (*pcVar6)(lpWideCharStr, 0x2004, 0x471000, 0x40a0a0, 0x40a000);\n                    }\n                    else {\n                        fcn.00401435(var_1ch);\n                        iVar13 = (*pcVar6)();\n                        if (iVar13 != 0) {\n                            var_4h = 1;\n                        }\n                    }\n                }\n                if ((lpLastWriteTime == 0) && (iVar13 = fcn.00403976(iVar11),  iVar13 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar11);\n                }\n                break;\n            }\n        }\n        goto code_r0x004017ac;\n    case 0x402218:\n        uVar10 = fcn.0040145c();\n        lpNumberOfBytesRead._0_2_ = uVar10;\n        lpNumberOfBytesRead._2_2_ = uVar10 >> 0x10;\n        uVar10 = fcn.0040145c();\n        lpWideCharStr = fcn.0040145c();\n        nNumberOfBytesToWrite = fcn.0040145c();\n        lpValueName = fcn.0040145c();\n        iVar11 = fcn.00405908(uVar10);\n        if (iVar11 == 0) {\n            fcn.0040145c();\n        }\n        iVar11 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x408a08, 0, 1, 0x4089e8, &fcn.0040159c::hWndChildAfter);\n        if (-1 < iVar11) {\n            iVar11 = (***hWndChildAfter)(hWndChildAfter, 0x4089f8, &fcn.0040159c::lpNumberOfBytesWritten);\n            if (-1 < iVar11) {\n                iVar11 = (*(*hWndChildAfter)[0x14])(hWndChildAfter, uVar10);\n                (*(*hWndChildAfter)[9])(hWndChildAfter, 0x4c90b0);\n                uVar9 = var_14h >> 8 & 0xff;\n                if (uVar9 != 0) {\n                    (*(*hWndChildAfter)[0xf])(hWndChildAfter, uVar9);\n                }\n                (*(*hWndChildAfter)[0xd])(hWndChildAfter, var_14h >> 0x10);\n                if (*nNumberOfBytesToWrite != 0) {\n                    (*(*hWndChildAfter)[0x11])(hWndChildAfter, nNumberOfBytesToWrite, var_14h & 0xff);\n                }\n                (*(*hWndChildAfter)[0xb])(hWndChildAfter, lpWideCharStr);\n                (*(*hWndChildAfter)[7])(hWndChildAfter, lpValueName);\n                if (-1 < iVar11) {\n                    iVar11 = (*(*lpNumberOfBytesWritten)[6])\n                                       (lpNumberOfBytesWritten, CONCAT22(lpNumberOfBytesRead._2_2_, lpNumberOfBytesRead)\n                                        , 1);\n                }\n                (*(*lpNumberOfBytesWritten)[2])(lpNumberOfBytesWritten);\n            }\n            (*(*hWndChildAfter)[2])(hWndChildAfter);\n            if (-1 < iVar11) goto code_r0x004017ac;\n        }\n        var_4h = 1;\n        goto code_r0x004017ac;\n    case 0x402350:\n        iVar11 = fcn.0040145c();\n        iVar13 = fcn.0040145c();\n        uVar10 = fcn.0040145c();\n        iVar7 = fcn.00405cce(iVar11);\n        if (iVar7 != 0) {\n            lpFileOp = lpWideCharStr;\n            var_50h = 2;\n            iVar7 = sub.KERNEL32.dll_lstrlenW(iVar11);\n            *(iVar11 + 2 + iVar7 * 2) = 0;\n            iVar7 = sub.KERNEL32.dll_lstrlenW(iVar13);\n            *(iVar13 + 2 + iVar7 * 2) = 0;\n            lpNumberOfBytesRead._2_2_ = uVar10;\n            uStack60 = uVar10 >> 0x10;\n            var_44h._0_2_ = var_1ch;\n            var_4ch = iVar11;\n            lpRect = iVar13;\n            fcn.00404ba9(0, uVar10);\n            iVar11 = (*_sym.imp.SHELL32.dll_SHFileOperationW)(&fcn.0040159c::lpFileOp);\n            if (iVar11 == 0) break;\n        }\n        fcn.00404ba9(0xfffffff9, 0);\n        goto code_r0x00401721;\n    case 0x4023d8:\n        if (var_24h != 0xbadf00d) {\ncode_r0x00401ce5:\n            uVar21 = 0x200010;\n            uVar20 = 0xffffffe8;\n            uVar8 = 0;\n            uVar10 = fcn.00406200(0, 0xffffffe8);\ncode_r0x00401a71:\n            fcn.00405883(uVar10, uVar8, uVar20, uVar21);\n            return 0x7fffffff;\n        }\n        *0x470674 = *0x470674 + 1;\n        break;\n    case 0x4023ee:\n        uVar8 = 0;\n        uVar10 = 0;\n        hWndChildAfter = NULL;\n        if (var_24h != 0) {\n            uVar10 = fcn.0040145c();\n        }\n        if (dwFileAttributes != 0) {\n            hWndChildAfter = fcn.0040145c();\n        }\n        if (var_14h != 0) {\n            uVar8 = fcn.0040145c();\n        }\n        uVar20 = fcn.0040145c();\n        iVar11 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(uVar10, hWndChildAfter, uVar8, uVar20);\ncode_r0x00401719:\n        bVar17 = iVar11 == 0;\ncode_r0x0040171b:\n        if (bVar17) goto code_r0x00401721;\n        break;\n    case 0x40243c:\n        lpString2 = *0x4082c0;\n        lpNumberOfBytesRead._0_2_ = *0x4082c4;\n        lpNumberOfBytesRead._2_2_ = *0x4082c4 >> 0x10;\n        uVar10 = fcn.0040145c();\n        hWndChildAfter = fcn.0040145c();\n        uVar8 = fcn.0040145c();\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)\n                  (uVar10, hWndChildAfter, &fcn.0040159c::lpString2, ppiVar16, 0x2003, uVar8);\n        iVar11 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(ppiVar16, &fcn.0040159c::lpString2);\ncode_r0x004018aa:\n        if (iVar11 == 0) {\ncode_r0x004018b2:\n            var_4h = 1;\n            *ppiVar16 = 0;\n        }\n        break;\n    case 0x40248e:\n        if (var_14h == 0) {\n            iVar13 = fcn.0040154d(2);\n            if (iVar13 == 0) goto code_r0x00401721;\n            uVar10 = fcn.0040145c();\n            iVar11 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(iVar13, uVar10);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar13);\n        }\n        else {\n            uVar10 = fcn.0040145c();\n            if (dwFileAttributes == 0) {\n                dwFileAttributes = *0x470664 + 0x80000001;\n            }\n            iVar11 = fcn.00401497(dwFileAttributes, uVar10, var_14h & 2);\n        }\n        if (iVar11 != 0) goto code_r0x00401721;\n        break;\n    case 0x4024f8:\n        if (var_24h == 0) {\n            var_24h = *0x470664 + 0x80000001;\n        }\n        lpNumberOfBytesRead._0_2_ = var_10h;\n        lpNumberOfBytesRead._2_2_ = var_10h >> 0x10;\n        lpValueName = fcn.0040145c();\n        uVar10 = fcn.0040145c();\n        var_4h = 1;\n        uVar9 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                          (var_24h, uVar10, 0, 0, 0, *0x470690 | 2, 0, &fcn.0040159c::hWndChildAfter, 0);\n        if (uVar9 == 0) {\n            if (var_14h == 1) {\n                fcn.0040145c();\n                iVar11 = sub.KERNEL32.dll_lstrlenW(0x4120b8);\n                uVar9 = iVar11 * 2 + 2;\n            }\n            if (var_14h == 4) {\n                *0x4120b8 = fcn.00401446();\n                uVar9 = var_14h;\n            }\n            if (var_14h == 3) {\n                uVar9 = fcn.004030b8(lpLastWriteTime, 0, 0x4120b8, 0xc018);\n            }\n            iVar11 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                               (hWndChildAfter, lpValueName, 0, CONCAT22(lpNumberOfBytesRead._2_2_, lpNumberOfBytesRead)\n                                , 0x4120b8, uVar9);\n            ppiVar14 = hWndChildAfter;\n            if (iVar11 == 0) {\n                var_4h = 0;\n            }\n            goto code_r0x004025b6;\n        }\n        break;\n    case 0x4025c1:\n        ppiVar14 = fcn.0040154d(0x20019);\n        uVar10 = fcn.0040145c();\n        *ppiVar16 = 0;\n        if (ppiVar14 == NULL) goto code_r0x00401721;\n        lpNumberOfBytesWritten = 0x4008;\n        iVar11 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                           (ppiVar14, uVar10, 0, &fcn.0040159c::hWndChildAfter, ppiVar16, \n                            &fcn.0040159c::lpNumberOfBytesWritten);\n        if (iVar11 == 0) {\n            if (hWndChildAfter == 0x4) {\n                var_4h = var_14h == 0;\n                fcn.00405b35();\n            }\n            else {\n                if ((hWndChildAfter != 0x1) && (hWndChildAfter != 0x2)) goto code_r0x0040263a;\n                var_4h = var_14h;\n                *(ppiVar16 + lpNumberOfBytesWritten * 2) = 0;\n            }\n        }\n        else {\ncode_r0x0040263a:\n            *ppiVar16 = 0;\n            var_4h = 1;\n        }\ncode_r0x004025b6:\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(ppiVar14);\n        break;\n    case 0x402648:\n        ppiVar14 = fcn.0040154d(0x20019);\n        uVar10 = fcn.00401446();\n        *ppiVar16 = 0;\n        if (ppiVar14 != NULL) {\n            hWndChildAfter = 0x2003;\n            if (var_14h == 0) {\n                iVar13 = (*_sym.imp.ADVAPI32.dll_RegEnumValueW)\n                                   (ppiVar14, uVar10, ppiVar16, &fcn.0040159c::hWndChildAfter, 0, 0, 0, 0);\n                if (iVar13 != 0) goto code_r0x00401721;\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyW)(ppiVar14, uVar10, ppiVar16, 0x2003);\n            }\n            *(iVar11 + 0x475006) = 0;\n            goto code_r0x004025b6;\n        }\n        goto code_r0x00401721;\n    case 0x4026ac:\n        if (*ppiVar16 != 0) {\n            ppiVar14 = fcn.00405b4e(ppiVar16);\n            goto code_r0x004026bd;\n        }\n        break;\n    case 0x4026c8:\n        uVar10 = fcn.0040145c();\n        iVar11 = fcn.00405a34(uVar10, dwFileAttributes, var_1ch);\n        if (iVar11 != -1) goto code_r0x00402c53;\ncode_r0x004026e5:\n        *ppiVar16 = 0;\n        goto code_r0x00401721;\n    case 0x4026ef:\n        ppiVar19 = 0x40;\n        ppiVar14 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x2004);\n        hWndChildAfter = ppiVar14;\n        if (var_1ch == 0) {\n            fcn.0040145c();\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, 0x40e0b0, 0xffffffff, hWndChildAfter, 0x2004, 0, 0);\n            uVar10 = (*_sym.imp.KERNEL32.dll_lstrlenA)(hWndChildAfter);\n        }\n        else {\n            uVar2 = fcn.00401446();\n            *ppiVar14 = uVar2;\n            uVar10 = 1;\n        }\n        if (*ppiVar16 != 0) {\n            uVar20 = 0;\n            puVar18 = &fcn.0040159c::lpNumberOfBytesRead;\n            ppiVar14 = hWndChildAfter;\n            uVar8 = fcn.00405b4e(ppiVar16);\n            iVar11 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar8, ppiVar16, ppiVar14, uVar10, puVar18, uVar20);\n            ppiVar14 = hWndChildAfter;\n            if (iVar11 != 0) goto code_r0x00402139;\n        }\n        var_4h = 1;\n        ppiVar14 = hWndChildAfter;\ncode_r0x00402139:\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar14, ppiVar19);\n        break;\n    case 0x40276f:\n        iVar11 = 0;\n        lpNumberOfBytesWritten = fcn.00401446();\n        if (lpNumberOfBytesWritten < 1) break;\n        if (0x2003 < lpNumberOfBytesWritten) {\n            lpNumberOfBytesWritten = 0x2003;\n        }\n        if (*ppiVar16 != 0) {\n            var_2dh = '\\0';\n            nNumberOfBytesToWrite = fcn.00405b4e(ppiVar16);\n            if (0 < lpNumberOfBytesWritten) {\ncode_r0x004027b0:\n                iVar13 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                   (nNumberOfBytesToWrite, &fcn.0040159c::hWndChildAfter + 3, 1, \n                                    &fcn.0040159c::lpNumberOfBytesRead, 0);\n                if ((iVar13 != 0) && (CONCAT22(lpNumberOfBytesRead._2_2_, lpNumberOfBytesRead) == 1)) {\n                    if (lpLastWriteTime == 0) {\n                        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                  (0, 0, &fcn.0040159c::hWndChildAfter + 3, 1, &fcn.0040159c::lpWideCharStr, 2);\n                        if ((var_2dh != '\\r') && (var_2dh != '\\n')) goto code_r0x004027f9;\n                        if ((var_2dh == hWndChildAfter._3_1_) ||\n                           ((hWndChildAfter._0_2_ = lpWideCharStr,  hWndChildAfter._3_1_ != '\\r' &&\n                            (hWndChildAfter._3_1_ != '\\n')))) {\n                            uVar10 = 0xffffffff;\ncode_r0x00402844:\n                            (*_sym.imp.KERNEL32.dll_SetFilePointer)(nNumberOfBytesToWrite, uVar10, 0, 1);\n                        }\n                        else {\ncode_r0x00402838:\n                            *(ppiVar12 + iVar11 * 2) = hWndChildAfter;\n                            iVar11 = iVar11 + 1;\n                        }\n                        goto code_r0x0040284d;\n                    }\n                    uVar9 = hWndChildAfter >> 0x18;\ncode_r0x00402817:\n                    fcn.00405b35(ppiVar12, uVar9);\n                    goto code_r0x00402c61;\n                }\n            }\n        }\ncode_r0x0040284d:\n        *(ppiVar12 + iVar11 * 2) = 0;\n        bVar17 = iVar11 == 0;\n        goto code_r0x0040171b;\n    case 0x40285a:\n        if (var_1ch == 0) {\n            uVar10 = fcn.0040145c();\n            iVar11 = sub.KERNEL32.dll_lstrlenW(uVar10);\n        }\n        else {\n            *0x40e0b0 = fcn.00401446();\n            iVar11 = 1;\n        }\n        if (*ppiVar16 != 0) {\n            uVar20 = 0;\n            puVar18 = &fcn.0040159c::hWndChildAfter;\n            iVar11 = iVar11 * 2;\n            uVar8 = 0x40e0b0;\n            uVar10 = fcn.00405b4e(ppiVar16);\n            iVar11 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar10, ppiVar16, uVar8, iVar11, puVar18, uVar20);\n            goto code_r0x00401719;\n        }\ncode_r0x00401721:\n        var_4h = 1;\n        break;\n    case 0x4028ab:\n        iVar11 = 0;\n        lpWideCharStr = fcn.00401446();\n        if (0 < lpWideCharStr) {\n            if (0x2003 < lpWideCharStr) {\n                lpWideCharStr = 0x2003;\n            }\n            if (*ppiVar16 != 0) {\n                hWndChildAfter = NULL;\n                nNumberOfBytesToWrite = fcn.00405b4e(ppiVar16);\n                ppiVar14 = hWndChildAfter;\n                if (0 < lpWideCharStr) {\n                    while ((iVar13 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                               (nNumberOfBytesToWrite, &fcn.0040159c::hWndChildAfter, 2, \n                                                &fcn.0040159c::lpNumberOfBytesRead, 0),  iVar13 != 0 &&\n                           (CONCAT22(lpNumberOfBytesRead._2_2_, lpNumberOfBytesRead) == 2))) {\n                        if (lpLastWriteTime != 0) {\n                            uVar9 = hWndChildAfter & 0xffff;\n                            goto code_r0x00402817;\n                        }\n                        iVar15 = ppiVar14;\n                        if ((iVar15 == 0xd) || (iVar15 == 10)) {\n                            if ((iVar15 != hWndChildAfter) && ((hWndChildAfter == 0xd || (hWndChildAfter == 10))))\n                            goto code_r0x00402838;\n                            uVar10 = 0xfffffffe;\n                            goto code_r0x00402844;\n                        }\n                        *(ppiVar12 + iVar11 * 2) = hWndChildAfter;\n                        iVar11 = iVar11 + 1;\n                        if ((hWndChildAfter == 0) || (ppiVar14 = hWndChildAfter & 0xffff,  lpWideCharStr <= iVar11))\n                        break;\n                    }\n                }\n            }\n            goto code_r0x0040284d;\n        }\n        break;\n    case 0x402977:\n        if (*ppiVar16 != 0) {\n            uVar10 = fcn.00401446(0, lpLastWriteTime);\n            uVar8 = fcn.00405b4e(ppiVar16);\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar8, ppiVar16, uVar10);\n            ppiVar16 = ppiVar12;\n            goto joined_r0x004029a0;\n        }\n        break;\n    case 0x4029ad:\n        if (*ppiVar16 != 0) {\n            uVar10 = fcn.00405b4e(ppiVar16);\n            (*_sym.imp.KERNEL32.dll_FindClose)(uVar10);\n        }\n        break;\n    case 0x4029c9:\n        if (*ppiVar12 != 0) {\n            puVar18 = &fcn.0040159c::lpFindFileData;\n            uVar10 = fcn.00405b4e(ppiVar12);\n            iVar11 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(uVar10, ppiVar12, puVar18);\n            if (iVar11 != 0) goto code_r0x00402a1d;\n        }\n        goto code_r0x004018b2;\n    case 0x4029f1:\n        uVar10 = fcn.0040145c();\n        iVar11 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(uVar10, &fcn.0040159c::lpFindFileData);\n        if (iVar11 == -1) {\n            *ppiVar12 = 0;\n            goto code_r0x004026e5;\n        }\n        fcn.00405b35(ppiVar12, iVar11);\ncode_r0x00402a1d:\n        ppiVar14 = &fcn.0040159c::var_278h;\ncode_r0x00402a25:\n        fcn.00405bee(ppiVar16, ppiVar14);\n        break;\n    case 0x402a2f:\n        iVar13 = -0x29a;\n        uVar10 = fcn.0040145c();\n        lpValueName = uVar10;\n        iVar11 = fcn.00405908(uVar10);\n        if (iVar11 == 0) {\n            fcn.0040145c();\n        }\n        fcn.00405a14(uVar10);\n        hWndChildAfter = fcn.00405a34(uVar10, 0x40000000, 2);\n        pcVar6 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        if (hWndChildAfter != 0xffffffff) {\n            nNumberOfBytesToWrite = *0x47060c;\n            iVar11 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x47060c);\n            if (iVar11 != 0) {\n                fcn.00402f23(0);\n                fcn.00402ef1(iVar11, nNumberOfBytesToWrite);\n                arg_10h = (*pcVar6)(0x40, var_1ch);\n                lpNumberOfBytesRead._0_2_ = SUB42(arg_10h, 0);\n                lpNumberOfBytesRead._2_2_ = arg_10h >> 0x10;\n                if (arg_10h != NULL) {\n                    fcn.004030b8(dwFileAttributes, 0, arg_10h, var_1ch);\n                    for (; *arg_10h != '\\0'; arg_10h = arg_10h + 2 + iVar13) {\n                        iVar13 = *arg_10h;\n                        fcn.004059f0(arg_10h[1] + iVar11, arg_10h + 2, iVar13);\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(CONCAT22(lpNumberOfBytesRead._2_2_, lpNumberOfBytesRead));\n                }\n                (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (hWndChildAfter, iVar11, nNumberOfBytesToWrite, &fcn.0040159c::lpNumberOfBytesWritten, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar11);\n                iVar13 = fcn.004030b8(0xffffffff, hWndChildAfter, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hWndChildAfter);\n        }\n        if (iVar13 < 0) {\n            (*_sym.imp.KERNEL32.dll_DeleteFileW)(lpValueName);\n            var_4h = 1;\n        }\ncode_r0x004017ac:\n        fcn.00401435();\n        break;\n    case 0x402b2f:\n        uVar9 = fcn.00401446();\n        if (*0x4705cc <= uVar9) goto code_r0x00401721;\n        iVar11 = uVar9 * 0x4020 + *0x4705c8;\n        if (-1 < var_1ch) {\n            ppiVar16 = ppiVar12;\n            if (var_1ch == 0) {\n                ppiVar14 = iVar11 + 0x18;\n                goto code_r0x00402a25;\n            }\n            goto code_r0x00402c53;\n        }\n        var_1ch = -1 - var_1ch;\n        if (var_1ch == 0) {\n            fcn.00406200(iVar11 + 0x18, var_14h);\n            *(iVar11 + 8) = *(iVar11 + 8) | 0x100;\n        }\n        else {\n            dwFileAttributes = fcn.00401446();\n        }\n        *(iVar11 + var_1ch * 4) = dwFileAttributes;\n        if (lpLastWriteTime != 0) {\n            fcn.00401186(uVar9);\n        }\n        break;\n    case 0x402bb6:\n        uVar9 = fcn.00401446();\n        if (0x1f < uVar9) goto code_r0x00401721;\n        if (lpLastWriteTime == 0) {\n            if (var_1ch == 0) {\n                fcn.00406200(ppiVar12, *(*0x4705bc + 0x94 + uVar9 * 4));\n            }\n            else {\n                *(*0x4705bc + 0x94 + uVar9 * 4) = dwFileAttributes;\n            }\n        }\n        else {\n            if (var_1ch == 0) {\n                fcn.004012f1(0);\n                ppiVar16 = ppiVar12;\n                goto code_r0x00402c53;\n            }\n            fcn.004012a6(uVar9);\n            fcn.004011f8(0, 0);\n        }\n        break;\n    case 0x402c18:\n        (*_sym.imp.USER32.dll_SendMessageW)(*0x4705b4, 0xb, *0x456264 & var_24h, 0);\n        if (var_24h != 0) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(lpWideCharStr, 0, 0);\n        }\n        break;\n    case 0x402c43:\n        uVar10 = fcn.0040145c();\n        fcn.00405da6(uVar10);\ncode_r0x00402c53:\n        fcn.00405b35(ppiVar16);\n        break;\n    case 0x402c63:\n        goto code_r0x00402c63;\n    }\ncode_r0x00402c58:\n    *0x470668 = *0x470668 + var_4h;\ncode_r0x00402c61:\n    var_24h = 0;\ncode_r0x00402c63:\n    return var_24h;\ncode_r0x004027f9:\n    *(ppiVar12 + iVar11 * 2) = lpWideCharStr;\n    var_2dh = hWndChildAfter._3_1_;\n    iVar11 = iVar11 + 1;\n    if ((hWndChildAfter._3_1_ == '\\0') || (lpNumberOfBytesWritten <= iVar11)) goto code_r0x0040284d;\n    goto code_r0x004027b0;\n}\n",
        "token_count": 13691
    },
    "004031e3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar16_t * __cdecl fcn.004031e3(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *arg_10h;\n    int32_t *piVar5;\n    uint32_t lpNumberOfBytesRead;\n    uint lpFileName;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t dwBytes;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    *0x470600 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x470600 = *0x470600 + 1000;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x4dd0d8, 0x2004);\n    iVar1 = fcn.00405a34(0x4dd0d8, 0x80000000, 3);\n    if (iVar1 == -1) {\n        *0x40a010 = iVar1;\n        return L\"Error launching installer\";\n    }\n    *0x40a010 = iVar1;\n    fcn.00405bee(0x4cd0b8, 0x4dd0d8);\n    uVar2 = fcn.0040614b(0x4cd0b8);\n    fcn.00405bee(0x4e10e0, uVar2);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar1, 0);\n    *0x42e1c0 = uVar3;\n    for (; 0 < uVar3; uVar3 = uVar3 - lpNumberOfBytesRead) {\n        uVar4 = (-(*0x47060c != 0) & 0x7e00) + 0x200;\n        lpNumberOfBytesRead = uVar3;\n        if (uVar4 <= uVar3) {\n            lpNumberOfBytesRead = uVar4;\n        }\n        iVar1 = fcn.00402ef1(0x41e138, lpNumberOfBytesRead);\n        if (iVar1 == 0) {\n            fcn.00402e4f(1);\n            goto code_r0x004033f3;\n        }\n        if (*0x47060c == 0) {\n            fcn.004059f0(&var_24h, 0x41e138, 0x1c);\n            if (((((var_24h & 0xfffffff0) == 0) && (var_20h == -0x21524111)) && (var_14h == 0x74736e49)) &&\n               ((var_18h == 0x74666f73 && (var_1ch == 0x6c6c754e)))) {\n                arg_8h = arg_8h | var_24h;\n                *0x470680 = *0x470680 | arg_8h & 2;\n                *0x47060c = *0x41e134;\n                if (uVar3 < var_ch) goto code_r0x004033f3;\n                if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                var_8h = var_8h + 1;\n                uVar3 = var_ch - 4;\n                if (uVar3 < lpNumberOfBytesRead) {\n                    lpNumberOfBytesRead = uVar3;\n                }\n            }\n        }\n        else if ((arg_8h & 2) == 0) {\n            fcn.00402e4f(0);\n        }\n        if (uVar3 < *0x42e1c0) {\n            var_4h = fcn.0040686f(var_4h, 0x41e138, lpNumberOfBytesRead);\n        }\n        *0x41e134 = *0x41e134 + lpNumberOfBytesRead;\n    }\n    fcn.00402e4f(1);\n    if (*0x47060c != 0) {\n        if (var_8h != 0) {\n            fcn.00402f23(*0x41e134);\n            iVar1 = fcn.00402ef1(&arg_8h, 4);\n            if ((iVar1 == 0) || (var_4h != arg_8h)) goto code_r0x004033f3;\n        }\n        arg_10h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n        fcn.004068e0();\n        fcn.00405a63(&lpFileName, 0x4d50c8);\n        *0x40a014 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&lpFileName, 0xc0000000, 0, 0, 2, 0x4000100, 0);\n        if (*0x40a014 == -1) {\n            return L\"Error writing temporary file. Make sure your temp folder is valid.\";\n        }\n        *0x4321cc = fcn.00402f23(*0x47060c + 0x1c);\n        *0x4321c8 = (*0x4321cc - (~var_24h & 4)) + -0x1c + var_ch;\n        iVar1 = fcn.004030b8(0xffffffff, 0, arg_10h, dwBytes);\n        if (iVar1 == dwBytes) {\n            *0x470608 = *arg_10h;\n            if ((var_24h & 1) != 0) {\n                *0x470604 = *0x470604 + 1;\n            }\n            iVar1 = 8;\n            piVar5 = arg_10h + 0x11;\n            *0x4705bc = arg_10h;\n            do {\n                piVar5 = piVar5 + -2;\n                *piVar5 = *piVar5 + arg_10h;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n            arg_10h[0xf] = *0x42e1c4;\n            fcn.004059f0(0x4705c0, arg_10h + 1, 0x40);\n            return NULL;\n        }\n    }\ncode_r0x004033f3:\n    return \n    L\"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n    ;\n}\n",
        "token_count": 1540
    },
    "00403509": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00403509(void)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (*0x40a010 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a010);\n        *0x40a010 = -1;\n    }\n    if (*0x40a014 != -1) {\n        (*pcVar1)(*0x40a014);\n        *0x40a014 = -1;\n    }\n    fcn.00403941();\n    fcn.0040668f(0x4d90d0, 7);\n    return;\n}\n",
        "token_count": 148
    },
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    char16_t cVar1;\n    char16_t *pcVar2;\n    int32_t iVar3;\n    ushort *arg_8h;\n    int32_t iVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint uVar9;\n    char16_t *pcVar10;\n    char16_t *pcVar11;\n    int32_t iStack788;\n    uint32_t uStack784;\n    uint uStack780;\n    char16_t *pcStack776;\n    uint uStack772;\n    int32_t iStack768;\n    uchar *puStack764;\n    uint uStack760;\n    uint uStack756;\n    uint uStack752;\n    uint uStack748;\n    uint uStack744;\n    uchar auStack704 [704];\n    \n    iVar8 = 0x20;\n    uStack744 = 0x403570;\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    uStack744 = 0x8001;\n    uStack748 = 0x40357b;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    uStack748 = 0;\n    uStack752 = 0x403582;\n    *0x470698 = (*_sym.imp.ole32.dll_OleInitialize)();\n    uStack752 = 8;\n    uStack756 = 0x40358e;\n    *0x4705b0 = fcn.00405cf5();\n    uStack756 = 0;\n    uStack760 = 0x2b4;\n    puStack764 = &stack0xfffffd40;\n    iStack768 = 0;\n    uStack772 = 0x40861c;\n    pcStack776 = 0x4035aa;\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoW)();\n    pcStack776 = L\"NSIS Error\";\n    uStack780 = 0x4685a0;\n    uStack784 = 0x4035b9;\n    fcn.00405bee();\n    uStack784 = 0x4035bf;\n    uStack784 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    iStack788 = 0x4c10a0;\n    fcn.00405bee();\n    *0x4705b8 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    if (*0x4c10a0 == 0x22) {\n        iVar8 = 0x22;\n    }\n    fcn.004058e9();\n    pcVar2 = (*_sym.imp.USER32.dll_CharNextW)();\n    pcStack776 = pcVar2;\n    while (cVar1 = *pcVar2,  cVar1 != L'\\0') {\n        while (cVar1 == L' ') {\n            pcVar2 = pcVar2 + 1;\n            cVar1 = *pcVar2;\n        }\n        if (*pcVar2 == L'\\\"') {\n            pcVar2 = pcVar2 + 1;\n        }\n        if (*pcVar2 == L'/') {\n            if ((pcVar2[1] == L'S') && ((pcVar2[2] == L' ' || (pcVar2[2] == L'\\0')))) {\n                uStack784 = uStack784 | 2;\n            }\n            iVar3 = fcn.004034b2(pcVar2 + 1, L\"NCRC\", 4);\n            if ((iVar3 == 0) && ((pcVar2[5] == L' ' || (pcVar2[5] == L'\\0')))) {\n                uStack784 = uStack784 | 4;\n            }\n            iVar3 = fcn.004034b2(pcVar2 + -1, L\" /D=\", 4);\n            if (iVar3 == 0) {\n                fcn.00407360(pcVar2 + -1, 0, 8);\n                fcn.00405bee(0x4c50a8, pcVar2 + 3);\n                break;\n            }\n        }\n        pcVar2 = fcn.004058e9();\n        if (*pcVar2 == L'\\\"') {\n            pcVar2 = pcVar2 + 1;\n        }\n    }\n    pcVar2 = 0x4d50c8;\n    pcVar10 = 0x4d50c8;\n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x2004, 0x4d50c8);\n    iVar3 = fcn.0040347e();\n    if (iVar3 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(0x4d50c8, 0x1fff);\n        pcVar10 = L\"\\\\Temp\";\n        sub.KERNEL32.dll_lstrcatW(0x4d50c8, L\"\\\\Temp\");\n        iVar3 = fcn.0040347e();\n        pcVar11 = pcVar10;\n        if (iVar3 == 0) goto code_r0x0040378a;\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteFileW)(0x4d10c0);\n    iStack788 = 0x40370d;\n    iStack768 = fcn.004031e3(uStack760);\n    pcVar11 = pcVar10;\n    if (iStack768 == 0) {\n        if (*0x470604 != 0) {\n            iStack788 = 0;\n            iVar8 = 0x403724;\n            arg_8h = fcn.004058e9();\n            pcVar11 = pcVar10;\n            for (; 0x4c109f < arg_8h; arg_8h = arg_8h + -1) {\n                iVar8 = 4;\n                pcVar11 = 0x403735;\n                iVar3 = fcn.004034b2(arg_8h, L\" _?=\", 4);\n                if (iVar3 == 0) break;\n            }\n            pcStack776 = L\"Error launching installer\";\n            if (arg_8h < 0x4c10a0) goto code_r0x004037b5;\n            *arg_8h = 0;\n            pcVar10 = arg_8h + 4;\n            iVar3 = fcn.00406178();\n            if (iVar3 == 0) goto code_r0x0040378a;\n            fcn.00405bee();\n            fcn.00405bee(0x4c90b0, pcVar10);\n            iVar8 = 0;\n        }\n        *0x47068c = -1;\n        iStack788 = fcn.0040552e();\n        pcVar11 = pcVar10;\n    }\ncode_r0x0040378a:\n    do {\n        fcn.00403509();\n        (*_sym.imp.ole32.dll_OleUninitialize)();\n        if (iVar8 == 0) {\n            if (*0x470674 != 0) {\n                uVar9 = 3;\n                pcVar2 = fcn.00405cf5(3);\n                pcVar5 = fcn.00405cf5(4);\n                pcVar6 = fcn.00405cf5(5);\n                if (((pcVar2 != NULL) && (pcVar5 != NULL)) && (pcVar6 != NULL)) {\n                    uVar7 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &stack0xfffffce4);\n                    iVar8 = (*pcVar2)(uVar7);\n                    if (iVar8 != 0) {\n                        (*pcVar5)(0, L\"SeShutdownPrivilege\", &stack0xfffffcec);\n                        (*pcVar6)(pcVar11, 0, &stack0xfffffcdc, 0, 0, 0);\n                    }\n                }\n                iVar8 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0);\n                if (iVar8 == 0) {\n                    fcn.0040141d(uVar9, 9);\n                }\n            }\n            iVar3 = iStack788;\n            if (*0x47068c != -1) {\n                iStack788 = *0x47068c;\n                iVar3 = *0x47068c;\n            }\n        }\n        else {\n            iVar3 = 0x200010;\n            fcn.00405883(iVar8, 0x200010);\n        }\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(iVar3);\ncode_r0x004037b5:\n        iVar8 = 0x4085c0;\n        sub.KERNEL32.dll_lstrcatW();\n        pcVar11 = pcVar2;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(pcVar2, 0);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(pcVar2);\n            if (*0x4c50a8 == 0) {\n                iStack788 = 0x4c50a8;\n                fcn.00405bee();\n            }\n            iVar8 = 0x471000;\n            fcn.00405bee();\n            fcn.00405bee();\n            iVar3 = 0x1a;\n            do {\n                fcn.00406200(0x4321d8, *(*0x4705bc + 0x120));\n                (*_sym.imp.KERNEL32.dll_DeleteFileW)(0x4321d8);\n                if ((iStack788 != 0) && (iVar4 = (*_sym.imp.KERNEL32.dll_CopyFileW)(0x4dd0d8, 0x4321d8, 1),  iVar4 != 0)\n                   ) {\n                    fcn.0040665c(0x4321d8, 0);\n                    fcn.00406200(0x4321d8, *(*0x4705bc + 0x124));\n                    iVar4 = fcn.00405822(0x4321d8);\n                    if (iVar4 != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n                        iStack788 = 0;\n                    }\n                }\n                *0x475008 = *0x475008 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            pcVar11 = NULL;\n            fcn.0040665c(pcVar2);\n        }\n    } while( true );\n}\n",
        "token_count": 2332
    },
    "004045b3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004045b3(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint32_t *var_3ch;\n    uint32_t *var_38h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    var_4h = (*pcVar1)(arg_8h, 0x408);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_18h = *0x4705c8;\n    var_1ch = *0x4705bc + 0x94;\n    if (arg_ch == 0x110) {\n        *0x470610 = arg_8h;\n        var_20h = 0;\n        var_14h = 2;\n        *0x43a20c = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x4705cc << 2);\n        var_10h = (*_sym.imp.USER32.dll_LoadBitmapW)(*0x4705b8, 0x6e);\n        *0x456260 = 0xffffffff;\n        *0x4361f0 = (*_sym.imp.USER32.dll_SetWindowLongW)(var_4h, 0xfffffffc, fcn.00404503);\n        *0x43a208 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.dll_ImageList_AddMasked)(*0x43a208, var_10h, 0xff00ff);\n        (*pcVar1)(var_4h, 0x1109, 2, *0x43a208);\n        iVar2 = (*pcVar1)(var_4h, 0x111c, 0, 0);\n        if (iVar2 < 0x10) {\n            (*pcVar1)(var_4h, 0x111b, 0x10, 0);\n        }\n        (*_sym.imp.GDI32.dll_DeleteObject)(var_10h);\n        iVar2 = 0;\n        do {\n            iVar6 = *(var_1ch + iVar2 * 4);\n            if (iVar6 != 0) {\n                if (iVar2 != 0x20) {\n                    var_14h = 0;\n                }\n                uVar3 = fcn.00406200(0, iVar6);\n                uVar3 = (*pcVar1)(var_8h, 0x143, 0, uVar3);\n                (*pcVar1)(var_8h, 0x151, uVar3, iVar2);\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < 0x21);\n        fcn.004039fd(arg_8h, 0x15, *(arg_14h + 0x30 + var_14h * 4));\n        fcn.004039fd(arg_8h, 0x16, *(arg_14h + 0x34 + var_14h * 4));\n        iVar2 = 0;\n        var_ch = 0;\n        if (*0x4705cc < 1) {\ncode_r0x004047e1:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(var_4h, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongW)(var_4h, 0xfffffff0, uVar4 & 0xfffffffb);\n        }\n        else {\n            var_10h = var_18h + 8;\n            do {\n                puVar7 = var_10h + 4;\n                if (*puVar7 != 0) {\n                    var_54h = var_ch;\n                    var_44h = *var_10h & 0x20;\n                    var_50h = 0xffff0002;\n                    var_4ch = 0xd;\n                    var_40h = 0x20;\n                    var_3ch = puVar7;\n                    var_28h = iVar2;\n                    if ((*var_10h & 2) == 0) {\n                        if ((*var_10h & 4) != 0) {\n                            var_ch = (*pcVar1)(var_4h, 0x110a, 3, var_ch);\n                            goto code_r0x004047c7;\n                        }\n                        uVar3 = (*pcVar1)(var_4h, 0x1132, 0, &var_54h);\n                    }\n                    else {\n                        var_4ch = 0x4d;\n                        var_2ch = 1;\n                        uVar3 = (*pcVar1)(var_4h, 0x1132, 0, &var_54h);\n                        var_20h = 1;\n                        var_ch = uVar3;\n                    }\n                    *(*0x43a20c + iVar2 * 4) = uVar3;\n                }\ncode_r0x004047c7:\n                var_10h = var_10h + 0x1008;\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < *0x4705cc);\n            if (var_20h == 0) goto code_r0x004047e1;\n        }\n        if (var_14h == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_8h, 5);\n            fcn.00403a56(var_8h);\n            goto code_r0x00404b94;\n        }\n        fcn.00403a56(var_4h);\n    }\n    if (arg_ch == 0x405) {\n        arg_10h = 0;\n        arg_14h = 1;\n        arg_ch = 0x40f;\n    }\n    uVar4 = arg_14h;\n    if (((arg_ch == 0x4e) || (arg_ch == 0x413)) && ((arg_ch == 0x413 || (*(arg_14h + 4) == 0x408)))) {\n        if (((*0x470608 & 0x200) == 0) && ((arg_ch == 0x413 || (*(arg_14h + 8) == -2)))) {\n            iVar2 = fcn.00404485(var_4h, arg_ch != 0x413);\n            if (-1 < iVar2) {\n                puVar7 = iVar2 * 0x4020 + 8 + var_18h;\n                uVar5 = *puVar7;\n                if ((uVar5 & 0x10) == 0) {\n                    if ((uVar5 & 0x40) == 0) {\n                        uVar5 = uVar5 ^ 1;\n                    }\n                    else {\n                        uVar5 = uVar5 ^ 0x80;\n                        if (uVar5 < '\\0') {\n                            uVar5 = uVar5 | 1;\n                        }\n                        else {\n                            uVar5 = uVar5 & 0xfffffffe;\n                        }\n                    }\n                    *puVar7 = uVar5;\n                    fcn.00401186(iVar2);\n                    arg_14h = ~(*0x470608 >> 8) & 1;\n                    arg_10h = 1;\n                    arg_ch = 0x40f;\n                }\n            }\n        }\n        if (uVar4 != 0) {\n            if (*(uVar4 + 8) == -0x1c3) {\n                (*pcVar1)(var_4h, 0x419, 0, *(uVar4 + 0x5c));\n            }\n            if (*(uVar4 + 8) == -0x1c7) {\n                puVar7 = *(uVar4 + 0x5c) * 0x4020 + 8 + var_18h;\n                if (*(uVar4 + 0xc) == 2) {\n                    *puVar7 = *puVar7 | 0x20;\n                }\n                else {\n                    *puVar7 = *puVar7 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    if (arg_ch == 0x111) {\n        if ((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) goto code_r0x00404b94;\n        iVar2 = (*pcVar1)(var_8h, 0x147, 0, 0);\n        if (iVar2 == -1) goto code_r0x00404b94;\n        iVar2 = (*pcVar1)(var_8h, 0x150, iVar2, 0);\n        if ((iVar2 == -1) || (*(var_1ch + iVar2 * 4) == 0)) {\n            iVar2 = 0x20;\n        }\n        fcn.004012a6(iVar2);\n        (*pcVar1)(arg_8h, 0x420, 0, iVar2);\n        arg_10h = 1;\n        arg_14h = 0;\n        arg_ch = 0x40f;\n    }\n    if (arg_ch == 0x200) {\n        (*pcVar1)(var_4h, 0x200, 0, 0);\n    }\n    if (arg_ch == 0x40b) {\n        if (*0x43a208 != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*0x43a208);\n        }\n        if (*0x43a20c != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x43a20c);\n        }\n        *0x43a208 = 0;\n        *0x43a20c = 0;\n        *0x470610 = 0;\n    }\n    if (arg_ch == 0x40f) {\n        fcn.004011f8(0, 0);\n        if (arg_10h != 0) {\n            fcn.0040141d(8);\n        }\n        if (arg_14h != 0) {\n            arg_14h = fcn.004012f1(*0x43a20c);\n            fcn.004012a6(arg_14h);\n            iVar2 = 0;\n            iVar6 = 0;\n            if (0 < arg_14h) {\n                do {\n                    if (*(var_1ch + iVar2 * 4) != 0) {\n                        iVar6 = iVar6 + 1;\n                    }\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 < arg_14h);\n            }\n            (*pcVar1)(var_8h, 0x14e, iVar6, 0);\n            arg_ch = 0x420;\n        }\n        fcn.004011f8(0, 0);\n        var_20h = *0x43a20c;\n        var_3ch = 0xf030;\n        var_18h = 0;\n        if (0 < *0x4705cc) {\n            puVar7 = *0x4705c8 + 8;\n            do {\n                uVar4 = *(var_20h + var_18h * 4);\n                if (uVar4 != 0) {\n                    uVar5 = *puVar7;\n                    var_48h = 8;\n                    if ((uVar5 & 0x100) != 0) {\n                        var_38h = puVar7 + 4;\n                        var_48h = 9;\n                        *puVar7 = *puVar7 & 0xfffffeff;\n                    }\n                    if ((uVar5 & 0x40) == 0) {\n                        iVar2 = (uVar5 & 1) + 1;\n                        if ((uVar5 & 0x10) != 0) {\n                            iVar2 = (uVar5 & 1) + 4;\n                        }\n                    }\n                    else {\n                        iVar2 = 3;\n                    }\n                    var_40h = (iVar2 << 0xb | uVar5 & 8) * 2 | uVar5 & 0x20;\n                    var_44h = uVar4;\n                    (*pcVar1)(var_4h, 0x1102, (uVar5 >> 5 & 1U) + 1, uVar4);\n                    (*pcVar1)(var_4h, 0x113f, 0, &var_48h);\n                }\n                var_18h = var_18h + 1;\n                puVar7 = puVar7 + 0x1008;\n            } while (var_18h < *0x4705cc);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(var_4h, 0, 1);\n        if (*(*0x468588 + 0x10) != 0) {\n            fcn.00404112(5);\n            fcn.00404049(0x3ff, 0xfffffffb);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x470608 & 0x100) != 0)) {\n        iVar2 = (arg_14h == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(var_4h, iVar2);\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe, iVar2);\n        (*pcVar1)(uVar3);\n    }\ncode_r0x00404b94:\n    fcn.00403a88(arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 3270
    },
    "00404cea": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404cea(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_54h;\n    uint var_4ch;\n    uint var_44h;\n    ushort *var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar9 = *0x46856c;\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar8 = 0;\n    var_4h = *0x46856c;\n    if (arg_ch == 0x110) {\n        var_3ch = 0xffffffff;\n        var_30h = 0xffffffff;\n        var_44h = 2;\n        var_40h = NULL;\n        var_38h = 0;\n        var_34h = 0;\n        var_2ch = 0;\n        uStack44 = 0;\n        uStack40 = 0;\n        uStack36 = 0;\n        uStack32 = 0;\n        iVar9 = *(*0x4705bc + 0x5c);\n        iVar8 = *(*0x4705bc + 0x60);\n        *0x468580 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x468578 = (*pcVar1)(arg_8h, 0x3ee);\n        *0x46856c = (*pcVar1)(arg_8h, 0x3f8);\n        var_4h = *0x46856c;\n        fcn.00403a56(*0x468580);\n        *0x468584 = fcn.00404112(4);\n        *0x46858c = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(var_4h, &var_18h);\n        var_3ch = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x15);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n        var_3ch = var_10h - var_3ch;\n        (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1061, 0, &var_44h);\n        (*pcVar2)(var_4h, 0x1036, 0x4000, 0x4000);\n        if (-1 < iVar9) {\n            (*pcVar2)(var_4h, 0x1001, 0, iVar9);\n            (*pcVar2)(var_4h, 0x1026, 0, iVar9);\n        }\n        if (-1 < iVar8) {\n            (*pcVar2)(var_4h, 0x1024, 0, iVar8);\n        }\n        fcn.004039fd(arg_8h, 0x1b, *(arg_14h + 0x30));\n        if ((*0x470608 & 3) != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x468580, 0);\n            if ((*0x470608 & 2) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(var_4h, 8);\n            }\n            else {\n                *0x468580 = 0;\n            }\n            fcn.00403a56(*0x468578);\n        }\n        uVar3 = (*pcVar1)(arg_8h, 0x3ec);\n        (*pcVar2)(uVar3, 0x401, 0, 0x75300000);\n        if ((*0x470608 & 4) != 0) {\n            (*pcVar2)(uVar3, 0x409, 0, iVar8);\n            (*pcVar2)(uVar3, 0x2001, 0, iVar9);\n        }\ncode_r0x00404e90:\n        uVar3 = 0;\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec, 0, &var_8h);\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00404c7e, uVar3);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        }\n        pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n        if (arg_ch == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x468580, 0);\n                (*pcVar1)(iVar9, 8);\n                fcn.00403a56(iVar9);\n                goto code_r0x00404ef6;\n            }\n        }\n        else {\ncode_r0x00404ef6:\n            if (arg_ch == 0x404) {\n                if (*0x468574 != 0) {\n                    *0x456258 = 2;\n                    fcn.004039d6();\n                    goto code_r0x00404f18;\n                }\n                (*pcVar1)(*0x4705b4, 8);\n                if (*0x47066c == 0) {\n                    fcn.00404ba9(*(*0x456250 + 0x34), 0);\n                }\n                fcn.004039d6(1);\n            }\n            if ((arg_ch == 0x7b) && (arg_10h == iVar9)) {\n                iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(iVar9, 0x1004, 0, 0);\n                if (0 < iVar4) {\n                    uVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    uVar5 = fcn.00406200(0, 0xffffffe1);\n                    (*_sym.imp.USER32.dll_AppendMenuW)(uVar3, 0, 1, uVar5);\n                    if (arg_14h == -1) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(iVar9, &var_18h);\n                    }\n                    else {\n                        var_18h = arg_14h;\n                        var_14h = arg_14h >> 0x10;\n                    }\n                    iVar6 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar3, 0x180, var_18h, var_14h, 0, arg_8h, 0);\n                    iVar9 = 1;\n                    if (iVar6 == 1) {\n                        var_4ch = 0;\n                        var_40h = 0x446230;\n                        var_3ch = 0x1001f;\n                        arg_8h = iVar4;\n                        do {\n                            arg_8h = arg_8h + -1;\n                            iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1073, arg_8h, &var_54h);\n                            iVar9 = iVar9 + 2 + iVar6;\n                        } while (arg_8h != 0);\n                        (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                        (*_sym.imp.USER32.dll_EmptyClipboard)();\n                        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar9 * 2);\n                        puVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                        do {\n                            var_40h = puVar7;\n                            iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1073, iVar8, &var_54h);\n                            puVar7 = puVar7 + iVar9;\n                            *puVar7 = 0xd;\n                            puVar7[1] = 10;\n                            puVar7 = puVar7 + 2;\n                            iVar8 = iVar8 + 1;\n                        } while (iVar8 < iVar4);\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n                        (*_sym.imp.USER32.dll_SetClipboardData)(0xd, uVar3);\n                        (*_sym.imp.USER32.dll_CloseClipboard)();\n                    }\n                }\n                goto code_r0x00404e90;\n            }\n        }\ncode_r0x00404f18:\n        uVar3 = fcn.00403a88(arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 2034
    },
    "0040552e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040552e(void)\n\n{\n    ushort uVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t pvParam;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint lpClassName;\n    uint var_4h;\n    \n    iVar8 = *0x4705bc;\n    pcVar3 = fcn.00405cf5(6);\n    if (pcVar3 == NULL) {\n        *0x4d10c0 = 0x30;\n        *0x4d10c2 = 0x78;\n        *0x4d10c4 = 0;\n        fcn.00405ab7(0x80000001, L\"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x446230, 0);\n        if (*0x446230 == 0) {\n            fcn.00405ab7(0x80000003, L\".DEFAULT\\\\Control Panel\\\\International\", L\"Locale\", 0x446230, 0);\n        }\n        sub.KERNEL32.dll_lstrcatW(0x4d10c0, 0x446230);\n    }\n    else {\n        uVar1 = (*pcVar3)();\n        fcn.00405b35(0x4d10c0, uVar1);\n    }\n    fcn.00403b32();\n    *0x470660 = *0x470608 & 0x20;\n    *0x47067c = 0x10000;\n    iVar4 = fcn.00406178(0x4c50a8);\n    if ((iVar4 == 0) && (*(iVar8 + 0x48) != 0)) {\n        uVar9 = 0x460520;\n        fcn.00405ab7(*(iVar8 + 0x44), *0x4705d8 + *(iVar8 + 0x48) * 2, *0x4705d8 + *(iVar8 + 0x4c) * 2, 0x460520, 0);\n        if (*0x460520 != 0) {\n            if (*0x460520 == 0x22) {\n                uVar9 = 0x460522;\n                puVar5 = fcn.004058e9(0x460522, 0x22);\n                *puVar5 = 0;\n            }\n            iVar4 = sub.KERNEL32.dll_lstrlenW(uVar9);\n            uVar10 = (uVar9 - 8) + iVar4 * 2;\n            if (((uVar9 < uVar10) && (iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(uVar10, L\".exe\"),  iVar4 == 0)) &&\n               ((uVar10 = uVar9,  uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(uVar9),  uVar6 == 0xffffffff ||\n                ((uVar6 & 0x10) == 0)))) {\n                fcn.0040614b(uVar10, uVar9);\n            }\n            uVar7 = fcn.0040611c(uVar9);\n            fcn.00405bee(0x4c50a8, uVar7);\n        }\n    }\n    iVar4 = fcn.00406178(0x4c50a8);\n    if (iVar4 == 0) {\n        fcn.00406200(0x4c50a8, *(iVar8 + 0x118));\n    }\n    *0x468570 = (*_sym.imp.USER32.dll_LoadImageW)(*0x4705b8, 0x67, 1, 0, 0, 0x8040);\n    if (*(iVar8 + 0x50) == -1) {\ncode_r0x00405749:\n        iVar8 = fcn.0040141d(0);\n        if (iVar8 == 0) {\n            fcn.00403b32();\n            if (*0x470680 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x43a210, 5);\n                pcVar3 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n                iVar8 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"RichEd20\");\n                if (iVar8 == 0) {\n                    (*pcVar3)(L\"RichEd32\");\n                }\n                pcVar3 = _sym.imp.USER32.dll_GetClassInfoW;\n                iVar8 = (*_sym.imp.USER32.dll_GetClassInfoW)(0, L\"RichEdit20A\", 0x468540);\n                if (iVar8 == 0) {\n                    (*pcVar3)(0, L\"RichEdit\", 0x468540);\n                    *0x468564 = L\"RichEdit20A\";\n                    (*_sym.imp.USER32.dll_RegisterClassW)(0x468540);\n                }\n                uVar7 = (*_sym.imp.USER32.dll_DialogBoxParamW)(*0x4705b8, *0x46857c + 0x69U & 0xffff, 0, 0x40507b, 0);\n                fcn.0040141d(5);\n                fcn.00403926(1);\n                return uVar7;\n            }\n            iVar8 = fcn.00404c7e(0);\n            if (iVar8 == 0) {\n                fcn.0040141d(1);\n                goto code_r0x0040581b;\n            }\n            if (*0x468574 == 0) {\n                fcn.0040141d(2);\n            }\n        }\n        uVar7 = 2;\n    }\n    else {\n        lpClassName = *0x408694;\n        var_4h = *0x408698;\n        *0x468564 = &lpClassName;\n        *0x468544 = fcn.00401000;\n        *0x468550 = *0x4705b8;\n        *0x468554 = *0x468570;\n        iVar2 = (*_sym.imp.USER32.dll_RegisterClassW)(0x468540);\n        if (iVar2 != 0) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &pvParam, 0);\n            *0x43a210 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                                  (0x80, &lpClassName, 0, 0x80000000, pvParam, var_14h, var_10h - pvParam, \n                                   var_ch - var_14h, 0, 0, *0x4705b8, 0);\n            goto code_r0x00405749;\n        }\ncode_r0x0040581b:\n        uVar7 = 0;\n    }\n    return uVar7;\n}\n",
        "token_count": 1576
    },
    "00405a14": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405a14(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(unaff_retaddr, uVar1 & 0xfffffffe);\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00405cce": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405cce(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(param_1, 0x45aeb8);\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        uVar2 = 0x45aeb8;\n    }\n    return uVar2;\n}\n",
        "token_count": 117
    },
    "00405da6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405da6(uint32_t lpString)\n\n{\n    code *pcVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_b98h;\n    uint var_b78h;\n    uint lpString1;\n    uint var_568h;\n    uint var_560h;\n    uint lpString2;\n    uint lpVersionInformation;\n    int32_t var_124h;\n    code *var_20h;\n    uint var_1ch;\n    code *var_18h;\n    uint32_t var_14h;\n    int32_t hLibModule;\n    code *var_ch;\n    code *var_8h;\n    int32_t hObject;\n    \n    hObject = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 4000);\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n    if (0x103 < iVar3 - 1U) {\n        return 0x278;\n    }\n    iVar7 = 0;\n    if (0 < iVar3) {\n        do {\n            uVar2 = fcn.00405c10(*(lpString + iVar7 * 2));\n            *(&lpString2 + iVar7 * 2) = uVar2;\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < iVar3);\n    }\n    *(&lpString2 + iVar3 * 2) = 0;\n    lpVersionInformation = 0x114;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar3 == 0) {\n        return 0x25e;\n    }\n    if (var_124h == 2) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"PSAPI.DLL\");\n        if (iVar3 != 0) {\n            hLibModule = iVar3;\n            pcVar4 = (*pcVar1)(iVar3, \"EnumProcesses\");\n            var_8h = (*pcVar1)(iVar3, \"EnumProcessModules\");\n            var_ch = (*pcVar1)(iVar3, \"GetModuleBaseNameW\");\n            if (((pcVar4 != NULL) && (var_8h != NULL)) && (var_ch != NULL)) {\n                iVar7 = (*pcVar4)(hObject, 1000, &var_14h);\n                if (iVar7 == 0) {\n                    uVar6 = 0x25d;\ncode_r0x00405ecd:\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(hObject);\n                    return uVar6;\n                }\n                lpString = 0;\n                if (var_14h >> 2 != 0) {\n                    do {\n                        (*_sym.imp.KERNEL32.dll_lstrcpyW)(&lpString1, L\"Unknown\");\n                        iVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x410, 0, *(hObject + lpString * 4));\n                        if ((iVar3 != 0) && (iVar7 = (*var_8h)(iVar3, &var_1ch, 4, &var_14h),  iVar7 != 0)) {\n                            (*var_ch)(iVar3, var_1ch, &lpString1, 0x104);\n                        }\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n                        uVar6 = (*_sym.imp.USER32.dll_CharUpperW)(&lpString1);\n                        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(uVar6, &lpString2);\n                        if (iVar3 == 0) {\n                            uVar6 = 1;\n                            iVar3 = hLibModule;\n                            goto code_r0x00405ecd;\n                        }\n                        lpString = lpString + 1;\n                    } while (lpString < var_14h >> 2);\n                }\n                goto code_r0x00405f7f;\n            }\ncode_r0x0040604b:\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n        }\ncode_r0x00405e72:\n        uVar6 = 0x25d;\n    }\n    else {\n        if (var_124h != 1) {\n            return 0x25f;\n        }\ncode_r0x00405f7f:\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(hObject);\n        if (var_124h == 1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"Kernel32.DLL\");\n            if (iVar3 == 0) goto code_r0x00405e72;\n            hLibModule = iVar3;\n            pcVar4 = (*pcVar1)(iVar3, \"CreateToolhelp32Snapshot\");\n            var_8h = (*pcVar1)(iVar3, \"Process32FirstW\");\n            var_ch = (*pcVar1)(iVar3, \"Process32NextW\");\n            var_18h = (*pcVar1)(iVar3, \"Module32FirstW\");\n            var_20h = (*pcVar1)(iVar3, \"Module32NextW\");\n            if (((var_ch == NULL) || (var_8h == NULL)) ||\n               ((var_20h == NULL ||\n                (((var_18h == NULL || (pcVar4 == NULL)) || (hObject = (*pcVar4)(2, 0),  hObject == -1))))))\n            goto code_r0x0040604b;\n            var_568h = 0x22c;\n            iVar7 = (*var_8h)(hObject, &var_568h);\n            while (iVar7 != 0) {\n                iVar7 = (*pcVar4)(8, var_560h);\n                if (iVar7 == -1) {\n                    uVar6 = 0x25d;\ncode_r0x004060e9:\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                    return uVar6;\n                }\n                var_b98h = 0x428;\n                iVar5 = (*var_18h)(iVar7, &var_b98h);\n                while (iVar5 != 0) {\n                    iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(&var_b78h, &lpString2);\n                    if (iVar5 == 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar7);\n                        uVar6 = 1;\n                        goto code_r0x004060e9;\n                    }\n                    var_b98h = 0x428;\n                    iVar5 = (*var_20h)(iVar7, &var_b98h);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar7);\n                var_568h = 0x22c;\n                iVar7 = (*var_ch)(hObject, &var_568h);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n        uVar6 = 0;\n    }\n    return uVar6;\n}\n",
        "token_count": 1620
    },
    "00406178": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00406178(uint param_1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    fcn.00405bee(0x4562b0, param_1);\n    piVar2 = fcn.0040593d(0x4562b0);\n    if ((piVar2 == NULL) ||\n       ((fcn.00405c1d(piVar2),  pcVar1 = _sym.imp.KERNEL32.dll_lstrlenW,  (*0x470608 & 0x80) != 0 &&\n        ((*piVar2 == 0 || (*piVar2 == 0x5c)))))) {\n        bVar5 = false;\n    }\n    else {\n        while (iVar4 = (*pcVar1)(0x4562b0),  piVar2 + -0x22b158 >> 1 < iVar4) {\n            puVar3 = fcn.00405cce(0x4562b0);\n            if ((puVar3 != NULL) && ((*puVar3 & 0x10) == 0)) {\n                return false;\n            }\n            fcn.0040614b(0x4562b0);\n        }\n        fcn.0040611c(0x4562b0);\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(0x4562b0);\n        bVar5 = iVar4 != -1;\n    }\n    return bVar5;\n}\n",
        "token_count": 346
    },
    "00406491": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00406491(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    int32_t unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n    if (unaff_retaddr != 0) {\n        fcn.00405a34();\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetShortPathNameW)();\n        if (iVar2 == 0) {\n            return;\n        }\n        if (0x400 < iVar2) {\n            return;\n        }\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetShortPathNameW)();\n    pcVar1 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n    if ((((iVar2 != 0) && (iVar2 < 0x401)) && (iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(),  iVar2 != 0)) &&\n       (iVar2 = (*pcVar1)(),  iVar2 != 0)) {\n        iVar2 = (*_sym.imp.USER32.dll_wsprintfA)();\n        fcn.00406200(0x45f910, *(*0x4705bc + 0x128));\n        iVar3 = fcn.00405a34();\n        if (iVar3 != -1) {\n            puVar4 = (*_sym.imp.KERNEL32.dll_GetFileSize)();\n            iVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n            if (((iVar3 != 0) && (iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)(),  iVar5 != 0)) && (puVar4 == 0x45f910)) {\n                iVar5 = fcn.0040599a(iVar3, \"[Rename]\\r\\n\");\n                if (iVar5 == 0) {\n                    iVar5 = iVar3 + 0x45f910;\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n                    puVar4 = 0x45f91a;\n                    puVar8 = puVar4;\n                }\n                else {\n                    iVar5 = iVar5 + 10;\n                    puVar6 = fcn.0040599a(iVar5, 0x4089c8);\n                    puVar8 = puVar4;\n                    if (puVar6 != NULL) {\n                        puVar8 = iVar3 + 0x45f910;\n                        puVar7 = puVar8 + iVar2;\n                        for (; puVar6 < puVar8; puVar8 = puVar8 + -1) {\n                            *puVar7 = *puVar8;\n                            puVar7 = puVar7 + -1;\n                        }\n                        puVar8 = puVar6 + (1 - iVar3);\n                    }\n                }\n                fcn.004059f0(puVar8 + iVar3, 0x45b508, iVar2);\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(0x40, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_WriteFile)(iVar5, iVar3, puVar4 + iVar2, &stack0xffffff58, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar3);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n    }\n    return;\n}\n",
        "token_count": 774
    },
    "0040668f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040668f(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint *puVar5;\n    int16_t *piVar6;\n    uint lpFindFileData;\n    uint var_230h;\n    uint var_28h;\n    int32_t var_ch;\n    int32_t hFindFile;\n    int16_t *var_4h;\n    \n    var_ch = fcn.00406178(arg_8h);\n    if ((arg_ch & 8) == 0) {\n        uVar1 = arg_ch & 1;\n        if ((uVar1 == 0) || ((var_ch != 0 && ((arg_ch & 2) != 0)))) {\n            fcn.00405bee(0x45b908, arg_8h);\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrcatW;\n            if (uVar1 == 0) {\n                fcn.0040614b(arg_8h);\n            }\n            else {\n                (*_sym.imp.KERNEL32.dll_lstrcatW)(0x45b908, L\"\\\\*.*\");\n            }\n            if ((*arg_8h != 0) || (*0x45b908 == 0x5c)) {\n                (*pcVar2)(arg_8h, 0x4082c8);\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_8h);\n            var_4h = arg_8h + iVar3;\n            piVar6 = 0x45b908;\n            hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(0x45b908, &lpFindFileData);\n            if (hFindFile != -1) {\n                do {\n                    puVar5 = &var_230h;\n                    piVar4 = fcn.004058e9(puVar5, 0x3f);\n                    if ((*piVar4 != 0) && (var_28h != 0)) {\n                        puVar5 = &var_28h;\n                    }\n                    if ((*puVar5 != 0x2e) || ((*(puVar5 + 2) != 0 && ((*(puVar5 + 2) != 0x2e || (*(puVar5 + 1) != 0)))))\n                       ) {\n                        fcn.00405bee(var_4h, puVar5);\n                        if ((lpFindFileData & 0x10) == 0) {\n                            fcn.00405a14(arg_8h);\n                            piVar6 = arg_8h;\n                            iVar3 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(arg_8h);\n                            if (iVar3 == 0) {\n                                if ((arg_ch & 4) == 0) {\n                                    *0x470668 = *0x470668 + 1;\n                                }\n                                else {\n                                    fcn.00404ba9(0xfffffff1, arg_8h);\n                                    piVar6 = arg_8h;\n                                    fcn.0040665c();\n                                }\n                            }\n                            else {\n                                piVar6 = 0xfffffff2;\n                                fcn.00404ba9(0xfffffff2, arg_8h);\n                            }\n                        }\n                        else if ((arg_ch & 3) == 3) {\n                            piVar6 = arg_8h;\n                            fcn.0040668f(arg_8h, arg_ch);\n                        }\n                    }\n                    iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(hFindFile, &lpFindFileData, piVar6);\n                } while (iVar3 != 0);\n                (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n            }\n            if (uVar1 != 0) {\n                var_4h[-1] = 0;\n            }\n        }\n        if (uVar1 != 0) {\n            if (var_ch != 0) {\n                iVar3 = fcn.00405cce(arg_8h);\n                if (iVar3 == 0) {\n                    return;\n                }\n                fcn.0040611c(arg_8h);\n                fcn.00405a14(arg_8h);\n                iVar3 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)(arg_8h);\n                if (iVar3 != 0) {\n                    fcn.00404ba9(0xffffffe5, arg_8h);\n                    return;\n                }\n                if ((arg_ch & 4) != 0) {\n                    fcn.00404ba9(0xfffffff1, arg_8h);\n                    fcn.0040665c(arg_8h, 0);\n                    return;\n                }\n            }\n            *0x470668 = *0x470668 + 1;\n        }\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(arg_8h);\n        *0x470668 = *0x470668 + (iVar3 == 0);\n    }\n    return;\n}\n",
        "token_count": 1149
    },
    "00401186": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid fcn.00401186(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar1 = *(param_1 * 0x4020 + 8 + *0x4705c8);\n    if ((uVar1 & 2) != 0) {\n        uVar4 = param_1 + 1;\n        if (uVar4 < *0x4705cc) {\n            puVar3 = uVar4 * 0x4020 + 8 + *0x4705c8;\n            iVar5 = 0;\n            do {\n                uVar2 = *puVar3;\n                if ((uVar2 & 2) == 0) {\n                    if ((uVar2 & 4) == 0) {\n                        iVar6 = iVar5;\n                        if ((uVar2 & 0x10) == 0) {\n                            *puVar3 = (uVar2 ^ uVar1) & 1 ^ uVar2;\n                        }\n                    }\n                    else {\n                        iVar6 = iVar5 + -1;\n                        if (iVar5 == 0) {\n                            return;\n                        }\n                    }\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x1008;\n                iVar5 = iVar6;\n            } while (uVar4 < *0x4705cc);\n        }\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "004012f1": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012f1(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    bool bVar3;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *0x4705bc + 0x94;\n    do {\n        uVar1 = 0;\n        if (*var_8h != 0) {\n            bVar3 = *0x4705cc == 0;\n            if (*0x4705cc != 0) {\n                puVar2 = *0x4705c8 + 8;\n                do {\n                    if (((*puVar2 & 6) == 0) &&\n                       (((arg_8h == 0 || (*(arg_8h + uVar1 * 4) != 0)) &&\n                        ((puVar2[-1] & 1 << (var_4h & 0x1f)) != (*puVar2 & 1) << (var_4h & 0x1f))))) break;\n                    uVar1 = uVar1 + 1;\n                    puVar2 = puVar2 + 0x1008;\n                } while (uVar1 < *0x4705cc);\n                bVar3 = uVar1 == *0x4705cc;\n            }\n            if (bVar3) {\n                return var_4h;\n            }\n        }\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        if (0x1f < var_4h) {\n            return var_4h;\n        }\n    } while( true );\n}\n",
        "token_count": 392
    },
    "00403d55": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403d55(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint16_t *puVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t *puVar9;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint16_t *var_ch;\n    uint var_8h;\n    code *var_4h;\n    \n    pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n    var_8h = 0;\n    if (arg_ch == 0x110) {\n        iVar6 = *(arg_14h + 0x30);\n        if (iVar6 < 0) {\n            iVar6 = *(*0x468588 - (iVar6 * 4 + 4));\n        }\n        puVar4 = *0x4705d8 + iVar6 * 2;\n        uVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n        *0x456254 = 0;\n        if ((uVar1 & 0x10) == 0) {\n            var_4h = fcn.00403caa;\n            var_ch = fcn.00403c67(puVar4);\n            *0x43a200 = 1;\n        }\n        else {\n            var_4h = fcn.00403d14;\n            var_ch = puVar4;\n        }\n        uVar8 = (~(*(arg_14h + 0x14) >> 5) | *(arg_14h + 0x14)) & 1;\n        fcn.004039fd(arg_8h, 0x22, *(arg_14h + 0x34));\n        fcn.004039fd(arg_8h, 0x23, *(arg_14h + 0x38));\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, (uVar8 == 0) + 0x40a, 1);\n        fcn.00403a43(uVar8);\n        uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.00403a56(uVar5);\n        pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar5, 0x45b, 1, 0);\n        iVar6 = *(*0x4705bc + 0x68);\n        if (iVar6 < 0) {\n            iVar6 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar6);\n        }\n        (*pcVar3)(uVar5, 0x443, 0, iVar6);\n        (*pcVar3)(uVar5, 0x445, 0, 0x4010000);\n        *0x4361e8 = 0;\n        uVar7 = sub.KERNEL32.dll_lstrlenW(puVar4);\n        (*pcVar3)(uVar5, 0x435, 0, uVar7);\n        (*pcVar3)(uVar5, 0x449, uVar1, &var_ch);\n        *0x45625c = 0;\n        return 0;\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h >> 0x10 != 0) || (*0x45625c != 0)) || (puVar9 = *0x456250 + 0x14,  (*puVar9 & 0x20) == 0))\n        goto code_r0x00403fec;\n        uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a, 0xf0, 0, 0);\n        uVar8 = (*pcVar3)(uVar5);\n        *puVar9 = *puVar9 & 0xfffffffe | uVar8 & 1;\n        fcn.00403a43(uVar8 & 1);\n        fcn.00403a1f();\n    }\n    if (arg_ch == 0x4e) {\n        uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n            var_14h = *(arg_14h + 0x1c);\n            var_18h = *(arg_14h + 0x18);\n            var_10h = 0x460520;\n            if (var_14h - var_18h < 0x8010) {\n                (*pcVar3)(uVar5, 1099, 0, &var_18h);\n                pcVar2 = _sym.imp.USER32.dll_LoadCursorW;\n                uVar5 = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f02);\n                (*_sym.imp.USER32.dll_SetCursor)(uVar5);\n                (*_sym.imp.SHELL32.dll_ShellExecuteW)(arg_8h, L\"open\", var_10h, 0, 0, 1);\n                uVar5 = (*pcVar2)(0, 0x7f00);\n                (*_sym.imp.USER32.dll_SetCursor)(uVar5);\n            }\n        }\n        if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n            if (*(arg_14h + 0x10) == 0xd) {\n                (*pcVar3)(*0x4705b4, 0x111, 1, 0);\n            }\n            if (*(arg_14h + 0x10) == 0x1b) {\n                (*pcVar3)(*0x4705b4, 0x10, 0, 0);\n            }\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x40b) {\n        *0x45625c = *0x45625c + 1;\n    }\ncode_r0x00403fec:\n    uVar5 = fcn.00403a88(arg_10h, arg_14h);\n    return uVar5;\n}\n",
        "token_count": 1463
    },
    "00404ba9": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ba9(uint arg_8h, int32_t lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_30h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *0x46856c;\n    if (*0x46856c != 0) {\n        var_8h = *0x470694;\n        uVar4 = *0x470694 & 1;\n        if (uVar4 == 0) {\n            fcn.00406200(0x43e220, arg_8h);\n        }\n        iVar2 = sub.KERNEL32.dll_lstrlenW(0x43e220);\n        if (lpString2 != 0) {\n            iVar3 = sub.KERNEL32.dll_lstrlenW(lpString2);\n            if (0x800f < iVar3 + iVar2) {\n                return;\n            }\n            sub.KERNEL32.dll_lstrcatW(0x43e220, lpString2);\n        }\n        if ((var_8h & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextW)(*0x468578, 0x43e220);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        if ((var_8h & 2) == 0) {\n            var_30h = 0x43e220;\n            var_44h = 1;\n            var_40h = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1004, 0, 0);\n            var_40h = var_40h - uVar4;\n            var_3ch = 0;\n            (*pcVar1)(var_4h, 0x104d - uVar4, 0, &var_44h);\n            (*pcVar1)(var_4h, 0x1013, var_40h, 0);\n        }\n        if (uVar4 != 0) {\n            *(iVar2 * 2 + 0x43e220) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 524
    },
    "0040686f": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040686f(uint32_t arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x460114 == 0) {\n        uVar2 = 0;\n        do {\n            iVar3 = 8;\n            uVar1 = uVar2;\n            do {\n                uVar1 = uVar1 >> 1 ^ -((uVar1 & 1) != 0) & 0xedb88320;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(uVar2 * 4 + 0x460110) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n    }\n    arg_8h = ~arg_8h;\n    if (arg_10h != 0) {\n        do {\n            arg_10h = arg_10h + -1;\n            arg_8h = arg_8h >> 8 ^ *(((*arg_ch ^ arg_8h) & 0xff) * 4 + 0x460110);\n            arg_ch = arg_ch + 1;\n        } while (arg_10h != 0);\n    }\n    return ~arg_8h;\n}\n",
        "token_count": 316
    },
    "004011f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011f8(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *0x4705c8;\n    iVar5 = arg_8h * 0x4020 + *0x4705c8;\n    var_4h = 0;\n    var_8h = 0;\n    if (((*(iVar5 + 8) & 2) != 0) && (arg_ch != 0)) {\n        *(iVar5 + 8) = *(iVar5 + 8) & 0xffffffbe;\n        arg_8h = arg_8h + 1;\n    }\n    if (arg_8h < *0x4705cc) {\n        do {\n            puVar1 = arg_8h * 0x4020 + 8 + iVar2;\n            uVar4 = *puVar1;\n            uVar3 = arg_8h + 1;\n            if ((uVar4 & 2) != 0) {\n                uVar3 = fcn.004011f8(arg_8h, 1);\n                uVar4 = *puVar1;\n            }\n            if ((uVar4 & 4) != 0) {\n                if (var_4h == 0) {\n                    return uVar3;\n                }\n                if (var_8h != 0) {\n                    *(iVar5 + 8) = *(iVar5 + 8) | 0x40;\n                    return uVar3;\n                }\n                *(iVar5 + 8) = *(iVar5 + 8) & 0xffffff7f | 1;\n                return uVar3;\n            }\n            if ((uVar4 & 0x40) != 0) {\n                var_4h = var_4h + 1;\n            }\n            if ((uVar4 & 1) == 0) {\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_4h = var_4h + 1;\n            }\n            arg_8h = uVar3;\n        } while (uVar3 < *0x4705cc);\n    }\n    return 0;\n}\n",
        "token_count": 542
    },
    "00402e4f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e4f(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_80h;\n    \n    if (arg_8h == 0) {\n        if (*0x41e130 == 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            if (*0x470600 < uVar1) {\n                if (*0x4705b4 == 0) {\n                    *0x41e130 = (*_sym.imp.USER32.dll_CreateDialogParamW)(*0x4705b8, 0x6f, 0, fcn.00402dd0, 0);\n                    (*_sym.imp.USER32.dll_ShowWindow)(*0x41e130, 5);\n                }\n                else if ((*0x470694 & 1) != 0) {\n                    uVar2 = fcn.00402db4();\n                    (*_sym.imp.USER32.dll_wsprintfW)(&var_80h, L\"... %d%%\", uVar2);\n                    fcn.00404ba9(0, &var_80h);\n                }\n            }\n        }\n        else {\n            fcn.00405d2c(0);\n        }\n    }\n    else {\n        if (*0x41e130 != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(*0x41e130);\n        }\n        *0x41e130 = 0;\n    }\n    return;\n}\n",
        "token_count": 332
    },
    "00403a88": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403a88(uint hdc, uint hWnd)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((in_EAX - 0x133U < 6) &&\n       (puVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xffffffeb),  pcVar1 = _sym.imp.USER32.dll_GetSysColor, \n       puVar2 != NULL)) {\n        uVar3 = *puVar2;\n        if ((*(puVar2 + 5) & 2) != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetSysColor)(uVar3);\n        }\n        if ((*(puVar2 + 5) & 1) != 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar3);\n        }\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, puVar2[4]);\n        var_8h = puVar2[1];\n        if ((*(puVar2 + 5) & 8) != 0) {\n            var_8h = (*pcVar1)(var_8h);\n        }\n        if ((*(puVar2 + 5) & 4) != 0) {\n            (*_sym.imp.GDI32.dll_SetBkColor)(hdc, var_8h);\n        }\n        if ((*(puVar2 + 5) & 0x10) != 0) {\n            var_ch = puVar2[2];\n            if (puVar2[3] != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(puVar2[3]);\n            }\n            uVar3 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            puVar2[3] = uVar3;\n        }\n        return puVar2[3];\n    }\n    return 0;\n}\n",
        "token_count": 454
    },
    "00404112": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00404112(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x4705c8;\n    iVar3 = *0x4705cc;\n    if (*0x4705cc != 0) {\n        do {\n            iVar3 = iVar3 + -1;\n            if ((*(iVar2 + 8) & 1) != 0) {\n                iVar1 = iVar1 + *(iVar2 + param_1 * 4);\n            }\n            iVar2 = iVar2 + 0x4020;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 166
    },
    "00404c7e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00404c7e(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar4 = *0x4705cc;\n    iVar2 = *0x4705c8;\n    uVar1 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x470698 = *0x470698 | uVar1;\n    uVar5 = 0;\n    fcn.00403a6d(0);\n    if (iVar4 != 0) {\n        puVar3 = iVar2 + 0xc;\n        do {\n            iVar4 = iVar4 + -1;\n            if ((*(puVar3 + -1) & 1) != 0) {\n                uVar5 = *puVar3;\n                iVar2 = fcn.0040139b();\n                if (iVar2 != 0) {\n                    *0x47066c = *0x47066c + 1;\n                    break;\n                }\n            }\n            puVar3 = puVar3 + 0x1008;\n        } while (iVar4 != 0);\n    }\n    fcn.00403a6d(0x404, uVar5);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    return *0x47066c;\n}\n",
        "token_count": 311
    },
    "0040139b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint fcn.0040139b(int32_t param_1)\n\n{\n    int32_t *hWndChildAfter;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_retaddr;\n    \n    while ((-1 < param_1 && (hWndChildAfter = param_1 * 0x1c + *0x4705d0,  *hWndChildAfter != 1))) {\n        iVar1 = fcn.0040159c(hWndChildAfter);\n        if (iVar1 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        iVar1 = fcn.0040137c();\n        if (iVar1 == 0) {\n            iVar2 = 1;\n            iVar1 = param_1 + 1;\n        }\n        else {\n            iVar1 = iVar1 + -1;\n            iVar2 = iVar1 - param_1;\n        }\n        param_1 = iVar1;\n        if (unaff_retaddr != 0) {\n            *0x46858c = *0x46858c + iVar2;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*0x46858c, 30000, *0x468584, 0);\n            (*_sym.imp.USER32.dll_SendMessageW)(0x4013ba, 0x402, uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 319
    },
    "00402dd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402dd0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    char16_t *pcVar2;\n    uint var_80h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n        arg_ch = 0x113;\n    }\n    if (arg_ch == 0x113) {\n        uVar1 = fcn.00402db4();\n        pcVar2 = L\"unpacking data: %d%%\";\n        if (*0x4705bc == 0) {\n            pcVar2 = 0x4082cc;\n        }\n        (*_sym.imp.USER32.dll_wsprintfW)(&var_80h, pcVar2, uVar1);\n        (*_sym.imp.USER32.dll_SetWindowTextW)(arg_8h, &var_80h);\n        sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x406, &var_80h);\n    }\n    return 0;\n}\n",
        "token_count": 245
    },
    "004030b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004030b8(int32_t arg_8h, uint hFile, int32_t arg_10h, int32_t lpNumberOfBytesWritten)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    int32_t nNumberOfBytesToWrite;\n    \n    if (-1 < arg_8h) {\n        *0x42e1c4 = arg_8h + *0x4705f8;\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40a014, *0x42e1c4, 0, 0);\n    }\n    iVar2 = fcn.00402f3a(4);\n    pcVar1 = _sym.imp.KERNEL32.dll_ReadFile;\n    if (iVar2 < 0) {\n        return iVar2;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(*0x40a014, &arg_8h, 4, &nNumberOfBytesToWrite, 0);\n    if ((iVar2 != 0) && (nNumberOfBytesToWrite == 4)) {\n        *0x42e1c4 = *0x42e1c4 + 4;\n        iVar2 = fcn.00402f3a(arg_8h);\n        if (iVar2 < 0) {\n            return iVar2;\n        }\n        if (arg_10h == 0) {\n            while( true ) {\n                if (arg_8h < 1) {\n                    return iVar2;\n                }\n                iVar4 = 0x4000;\n                if (arg_8h < 0x4000) {\n                    iVar4 = arg_8h;\n                }\n                iVar3 = (*pcVar1)(*0x40a014, 0x42e1c8, iVar4, &nNumberOfBytesToWrite, 0);\n                if ((iVar3 == 0) || (iVar4 != nNumberOfBytesToWrite)) break;\n                iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                  (hFile, 0x42e1c8, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n                if ((iVar3 == 0) || (lpNumberOfBytesWritten != iVar4)) {\n                    return -2;\n                }\n                iVar2 = iVar2 + nNumberOfBytesToWrite;\n                arg_8h = arg_8h - nNumberOfBytesToWrite;\n                *0x42e1c4 = *0x42e1c4 + nNumberOfBytesToWrite;\n            }\n        }\n        else {\n            iVar2 = arg_8h;\n            if (lpNumberOfBytesWritten <= arg_8h) {\n                iVar2 = lpNumberOfBytesWritten;\n            }\n            iVar2 = (*pcVar1)(*0x40a014, arg_10h, iVar2, &nNumberOfBytesToWrite, 0);\n            if (iVar2 != 0) {\n                *0x42e1c4 = *0x42e1c4 + nNumberOfBytesToWrite;\n                return nNumberOfBytesToWrite;\n            }\n        }\n    }\n    return -3;\n}\n",
        "token_count": 709
    },
    "004034b2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004034b2(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    while( true ) {\n        uVar1 = *arg_8h;\n        uVar2 = *arg_ch;\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + -1;\n        if (uVar1 >= uVar2 && uVar1 != uVar2) {\n            iVar3 = 1;\n            goto code_r0x004034ec;\n        }\n        if (uVar1 < uVar2) break;\n        if (((uVar1 == 0) || (uVar2 == 0)) || (arg_10h == 0)) goto code_r0x004034ec;\n    }\n    iVar3 = -1;\ncode_r0x004034ec:\n    if (((arg_10h != 0) && (iVar3 == 0)) && (uVar1 != uVar2)) {\n        iVar3 = (uVar1 != 0) * 2 + -1;\n    }\n    return iVar3;\n}\n",
        "token_count": 297
    },
    "00403a1f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403a1f(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x43a204;\n    if (*0x47066c == 0) {\n        uVar1 = *0x43a214;\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 90
    },
    "00403c01": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403c01(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (arg_ch == 1) {\n        fcn.00405867(0x3fb, arg_14h);\n        (*pcVar1)(arg_8h, 0x467, 1, arg_14h);\n    }\n    if (arg_ch == 2) {\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(arg_10h, arg_14h);\n        if ((iVar2 == 0) || (iVar2 = fcn.0040141d(7),  iVar2 != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        (*pcVar1)(arg_8h, 0x465, 0, uVar3);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "00403caa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403caa(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x456254 == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch, *0x4361e8 + arg_8h, arg_10h);\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n        *0x4361e8 = *0x4361e8 + iVar1;\n        *arg_14h = iVar1;\n        if (((0 < arg_10h) && (iVar1 == 0)) && (*0x43a200 != 0)) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(arg_8h);\n            *0x456254 = 1;\n        }\n    }\n    else {\n        *arg_14h = 0;\n    }\n    return 0;\n}\n",
        "token_count": 227
    },
    "00404485": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404485(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_34h = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n        lpPoint = uVar2;\n        var_ch = uVar2 >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        (*pcVar1)(arg_8h, 0x1111, 0, &lpPoint);\n        var_34h = var_4h;\n        if ((var_8h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_38h = 4;\n    (*pcVar1)(arg_8h, 0x113e, 0, &var_38h);\n    return var_14h;\n}\n",
        "token_count": 320
    },
    "00405883": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405883(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 & 0x1fffff;\n    if ((*0x470680 == 0) || (param_2 >> 0x15 == 0)) {\n        if (*0x470688 != 0) {\n            uVar1 = uVar1 ^ 0x180000;\n        }\n        *0x40a034 = *0x4705b4;\n        *0x40a038 = *0x4705b8;\n        *0x40a03c = param_1;\n        *0x40a040 = 0x4685a0;\n        *0x40a044 = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectW)(0x40a030);\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0040593d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * fcn.0040593d(int16_t *param_1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextW;\n    piVar2 = (*_sym.imp.USER32.dll_CharNextW)(param_1);\n    uVar3 = (*pcVar1)(piVar2);\n    if (((*param_1 == 0) || (*piVar2 != 0x3a)) || (piVar2[1] != 0x5c)) {\n        if ((*param_1 == 0x5c) && (param_1[1] == 0x5c)) {\n            iVar4 = 2;\n            do {\n                iVar4 = iVar4 + -1;\n                piVar2 = fcn.004058e9();\n                if (*piVar2 == 0) goto code_r0x00405992;\n                piVar2 = piVar2 + 1;\n            } while (iVar4 != 0);\n        }\n        else {\ncode_r0x00405992:\n            piVar2 = NULL;\n        }\n    }\n    else {\n        piVar2 = (*pcVar1)(uVar3);\n    }\n    return piVar2;\n}\n",
        "token_count": 292
    },
    "004059f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004059f0(uchar *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (0 < arg_10h) {\n        arg_ch = arg_ch - arg_8h;\n        do {\n            arg_10h = arg_10h + -1;\n            *arg_8h = arg_8h[arg_ch];\n            arg_8h = arg_8h + 1;\n        } while (0 < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00405ab7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ab7(uint hKey, uint lpSubKey, uint lpValueName, ushort *arg_14h, int32_t arg_18h)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = arg_14h;\n    *arg_14h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpSubKey, 0, -(arg_18h != 0) & 0x100 | 0x20019, &arg_18h);\n    if (iVar2 == 0) {\n        lpSubKey = 0x4008;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(arg_18h, lpValueName, 0, &arg_14h, puVar1, &lpSubKey);\n        if ((iVar2 != 0) || ((arg_14h != 0x1 && (arg_14h != 0x2)))) {\n            *puVar1 = 0;\n        }\n        puVar1[0x2003] = 0;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(arg_18h);\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "00405c1d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405c1d(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint16_t *arg_8h;\n    uint16_t *arg_ch;\n    \n    if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n        param_1 = param_1 + 4;\n    }\n    if ((*param_1 != 0) && (iVar3 = fcn.00405908(param_1),  iVar3 != 0)) {\n        param_1 = param_1 + 2;\n    }\n    pcVar2 = _sym.imp.USER32.dll_CharNextW;\n    uVar1 = *param_1;\n    arg_ch = param_1;\n    arg_8h = param_1;\n    while (uVar1 != 0) {\n        if ((0x1f < uVar1) && (piVar4 = fcn.004058e9(L\"*?|<>/\\\":\", uVar1),  *piVar4 == 0)) {\n            iVar3 = (*pcVar2)(arg_ch);\n            fcn.004059f0(arg_8h, arg_ch, iVar3 - arg_ch >> 1);\n            arg_8h = (*pcVar2)(arg_8h);\n        }\n        arg_ch = (*pcVar2)(arg_ch);\n        uVar1 = *arg_ch;\n    }\n    *arg_8h = 0;\n    while( true ) {\n        arg_8h = (*_sym.imp.USER32.dll_CharPrevW)(param_1, arg_8h);\n        if ((*arg_8h != 0x20) && (*arg_8h != 0x5c)) break;\n        *arg_8h = 0;\n        if (arg_8h <= param_1) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 473
    },
    "00406200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00406200(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint *arg_8h_00;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint16_t *var_8h;\n    uint *ppidl;\n    \n    puVar7 = arg_8h;\n    if (arg_ch < 0) {\n        arg_ch = *(*0x468588 - (arg_ch * 4 + 4));\n    }\n    puVar1 = *0x4705d8 + arg_ch * 2;\n    arg_8h_00 = 0x460520;\n    if ((0x46051f < arg_8h) && (arg_8h + -0x118148 >> 1 < 0x4008)) {\n        arg_8h = NULL;\n        arg_8h_00 = puVar7;\n    }\n    uVar2 = *puVar1;\n    do {\n        if ((uVar2 == 0) || (0x4007 < (arg_8h_00 + -0x118148 & 0xfffffffe))) {\n            *arg_8h_00 = 0;\n            if (arg_8h != NULL) {\n                fcn.00405bee(arg_8h, 0x460520);\n            }\n            return;\n        }\n        puVar6 = puVar1 + 1;\n        if (((uVar2 & 0xe000) == 0) || (uVar2 < 0xe001)) {\n            if (uVar2 == 0xe000) {\n                *arg_8h_00 = *puVar6;\n                arg_8h_00 = arg_8h_00 + 2;\n                puVar6 = puVar1 + 2;\n            }\n            else {\n                *arg_8h_00 = uVar2;\n                arg_8h_00 = arg_8h_00 + 2;\n            }\n        }\n        else {\n            uVar4 = *puVar6;\n            var_ch = *puVar6 >> 8;\n            puVar7 = uVar4 & 0xff;\n            var_10h = var_ch | 0x8000;\n            var_18h = puVar7 | 0x8000;\n            uVar8 = uVar4 & 0x7fff;\n            var_8h = puVar1 + 2;\n            var_14h = puVar7;\n            if (uVar2 == 0xe002) {\n                iVar9 = 2;\n                iVar5 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n                if ((((iVar5 < 0) && (iVar5 != 0x5a04)) && (var_ch != 0x23)) && (var_ch != 0x2e)) {\n                    bVar3 = false;\n                }\n                else {\n                    bVar3 = true;\n                }\n                if (*0x470664 != 0) {\n                    var_10h = 0x4;\n                    iVar9 = 4;\n                }\n                if (puVar7 < '\\0') {\n                    var_10h = uVar4 & 0x40;\n                    var_18h = *0x4705d8 + (uVar4 & 0x3f) * 2;\n                    var_14h = arg_8h_00;\n                    fcn.00405ab7(0x80000002, L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", var_18h, arg_8h_00, \n                                 var_10h);\n                    if (*arg_8h_00 == 0) {\n                        fcn.00406200(arg_8h_00, var_ch);\n                        goto code_r0x004063ce;\n                    }\ncode_r0x004063d4:\n                    if (var_ch == 0x1a) {\n                        (*_sym.imp.KERNEL32.dll_lstrcatW)(arg_8h_00, L\"\\\\Microsoft\\\\Internet Explorer\\\\Quick Launch\");\n                    }\n                }\n                else {\n                    if (puVar7 == 0x25) {\n                        var_10h = 0x2004;\n                        var_18h = 0x406359;\n                        var_14h = arg_8h_00;\n                        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n                    }\n                    else {\n                        if (puVar7 == 0x24) {\n                            var_10h = 0x2004;\n                            var_18h = 0x40636c;\n                            var_14h = arg_8h_00;\n                            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)();\n                            iVar9 = 0;\n                        }\n                        while (iVar9 != 0) {\n                            iVar9 = iVar9 + -1;\n                            if ((*0x4705b0 != NULL) && (bVar3)) {\n                                var_10h = arg_8h_00;\n                                var_14h = NULL;\n                                var_18h = NULL;\n                                iVar5 = (**0x4705b0)(*0x4705b4, (&fcn.00406200::var_18h)[iVar9]);\n                                if (iVar5 == 0) break;\n                            }\n                            var_10h = &fcn.00406200::ppidl;\n                            var_14h = (&fcn.00406200::var_18h)[iVar9];\n                            var_18h = *0x4705b4;\n                            iVar5 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)();\n                            if (iVar5 == 0) {\n                                var_14h = ppidl;\n                                var_18h = 0x4063b6;\n                                var_10h = arg_8h_00;\n                                iVar5 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)();\n                                var_18h = ppidl;\n                                (*_sym.imp.ole32.dll_CoTaskMemFree)();\n                                if (iVar5 != 0) break;\n                            }\n                            *arg_8h_00 = 0;\n                        }\n                    }\ncode_r0x004063ce:\n                    if (*arg_8h_00 != 0) goto code_r0x004063d4;\n                }\ncode_r0x00406422:\n                fcn.00405c1d(arg_8h_00);\n            }\n            else if (uVar2 == 0xe001) {\n                if (uVar8 == 0x1d) {\n                    fcn.00405b35(arg_8h_00, *0x4705b4);\n                }\n                else {\n                    fcn.00405bee(arg_8h_00, uVar8 * 0x4008 + 0x471000);\n                }\n                if (uVar8 - 0x15 < 7) goto code_r0x00406422;\n            }\n            else if (uVar2 == 0xe003) {\n                fcn.00406200(arg_8h_00, -1 - uVar8);\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_8h_00);\n            arg_8h_00 = arg_8h_00 + iVar5 * 2;\n            puVar6 = var_8h;\n        }\n        uVar2 = *puVar6;\n        puVar1 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1763
    },
    "00403d14": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403d14(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    arg_10h = arg_10h >> 1;\n    if (arg_10h == 0) {\n        arg_10h = 1;\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcpynW)(arg_ch, arg_8h + *0x4361e8 * 2, arg_10h);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_ch);\n    *0x4361e8 = *0x4361e8 + iVar1;\n    *arg_14h = iVar1 * 2;\n    return 0;\n}\n",
        "token_count": 183
    },
    "00404141": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404141(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint uVar8;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    code *var_34h;\n    int32_t var_30h;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = *0x456250;\n    var_4h = *(*0x456250 + 0x38);\n    iVar6 = *(*0x456250 + 0x3c) * 0x4008 + 0x471000;\n    if (arg_ch == 0x40b) {\n        fcn.00405867(0x3fb, iVar6);\n        fcn.00405c1d(iVar6);\n    }\n    if (arg_ch == 0x110) {\n        var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fb);\n        iVar1 = fcn.00405908(iVar6);\n        if ((iVar1 != 0) && (iVar1 = fcn.0040593d(iVar6),  iVar1 == 0)) {\n            fcn.0040611c(iVar6);\n        }\n        *0x468568 = arg_8h;\n        (*_sym.imp.USER32.dll_SetWindowTextW)(var_8h, iVar6);\n        var_44h = *(arg_14h + 0x34);\n        var_48h = 1;\n        fcn.004039fd(arg_8h);\n        fcn.004039fd(arg_8h, 0x14, *(arg_14h + 0x30));\n        fcn.00403a56(var_8h);\n        pcVar2 = fcn.00405cf5(7);\n        if (pcVar2 == NULL) goto code_r0x00404470;\n        (*pcVar2)(var_8h, 1);\n    }\n    iVar1 = var_4h;\n    if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            if (arg_10h >> 0x10 != 0x300) goto code_r0x00404470;\n            arg_ch = 0x40f;\n        }\n        if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar7 = &fcn.00404141::var_44h;\n            for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            var_48h = arg_8h;\n            var_40h = 0x446230;\n            var_34h = fcn.00403c01;\n            var_30h = iVar6;\n            var_3ch = fcn.00406200(0x4361f8, iVar1);\n            var_38h = 0x41;\n            iVar1 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderW)(&fcn.00404141::var_48h);\n            if (iVar1 == 0) {\n                arg_ch = 0x40f;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar1);\n                fcn.0040611c(iVar6);\n                if ((*(*0x4705bc + 0x11c) != 0) && (iVar6 == 0x4c50a8)) {\n                    uVar8 = 0;\n                    fcn.00406200(0, *(*0x4705bc + 0x11c));\n                    iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(0x460520, 0x446230);\n                    if (iVar1 != 0) {\n                        sub.KERNEL32.dll_lstrcatW(uVar8, 0x460520, 0x4c50a8);\n                    }\n                }\n                *0x4361f4 = *0x4361f4 + 1;\n                sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x3fb, iVar6);\n            }\n        }\n    }\n    if ((arg_ch == 0x40f) || (arg_ch == 0x405)) {\n        var_4h = 0;\n        var_8h = 0;\n        fcn.00405867(0x3fb, iVar6);\n        iVar1 = fcn.00406178(iVar6);\n        if (iVar1 == 0) {\n            var_4h = 1;\n        }\n        fcn.00405bee(0x43a218, iVar6);\n        puVar5 = NULL;\n        var_48h = 0;\n        var_ch = fcn.00405cf5();\n        if (var_ch != NULL) {\n            do {\n                iVar1 = (*var_ch)(0x43a218, &fcn.00404141::var_28h, &fcn.00404141::var_14h, &fcn.00404141::var_1ch);\n                if (iVar1 != 0) {\n                    arg_ch = var_28h >> 10 | var_24h << 0x16;\n                    var_8h = 1;\n                    goto code_r0x004043dc;\n                }\n                if (puVar5 != NULL) {\n                    *puVar5 = 0;\n                }\n                var_48h = 0x43a218;\n                puVar5 = fcn.0040614b();\n                *puVar5 = 0;\n                puVar5 = puVar5 + -1;\n                *puVar5 = 0x5c;\n            } while (puVar5 != 0x43a218);\n        }\n        fcn.00405bee(0x43a218, iVar6);\n        puVar5 = fcn.0040593d(0x43a218);\n        if (puVar5 != NULL) {\n            *puVar5 = 0;\n        }\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceW)\n                          (0x43a218, &fcn.00404141::var_10h, &fcn.00404141::var_18h, &fcn.00404141::var_ch, \n                           &fcn.00404141::var_24h);\n        if (iVar6 != 0) {\n            var_48h = 0x400;\n            arg_ch = (*_sym.imp.KERNEL32.dll_MulDiv)(var_10h * var_18h, var_ch);\n            var_8h = 1;\n        }\ncode_r0x004043dc:\n        uVar8 = 5;\n        uVar3 = fcn.00404112();\n        if ((var_8h != 0) && (arg_ch < uVar3)) {\n            var_4h = 2;\n        }\n        if (*(*0x468588 + 0x10) != 0) {\n            fcn.00404049(0x3ff, 0xfffffffb);\n            if (var_8h == 0) {\n                sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x400, 0x40861c);\n                uVar8 = arg_8h;\n            }\n            else {\n                uVar8 = 0x404419;\n                fcn.00404049(0x404419, 0xfffffffc);\n            }\n        }\n        *0x470684 = var_4h;\n        if (var_4h == 0) {\n            uVar8 = 7;\n            var_4h = fcn.0040141d();\n        }\n        if ((*(var_20h + 0x14) & 0x400) != 0) {\n            var_4h = 0;\n        }\n        fcn.00403a43(var_4h == 0, uVar8);\n        if ((var_4h == 0) && (*0x4361f4 == 0)) {\n            fcn.00403a1f();\n        }\n        *0x4361f4 = 0;\n    }\ncode_r0x00404470:\n    fcn.00403a88(arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 2018
    },
    "00405b4e": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405b4e(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar2 = 10;\n    var_8h = 1;\n    uVar6 = 0x39;\n    if (*arg_8h == 0x2d) {\n        arg_8h = arg_8h + 1;\n        var_8h = -1;\n    }\n    puVar3 = arg_8h;\n    if (*arg_8h == 0x30) {\n        puVar3 = arg_8h + 1;\n        uVar1 = *puVar3;\n        if ((0x2f < uVar1) && (uVar1 < 0x38)) {\n            uVar2 = 8;\n            uVar6 = 0x37;\n        }\n        if ((uVar1 & 0xffdf) == 0x58) {\n            uVar2 = 0x10;\n            puVar3 = arg_8h + 2;\n        }\n    }\n    do {\n        uVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if ((uVar4 < 0x30) || (uVar6 < uVar4)) {\n            if ((uVar2 != 0x10) || (((uVar4 & 0xffffffdf) < 0x41 || (0x46 < (uVar4 & 0xffffffdf))))) {\n                return var_8h * var_4h;\n            }\n            iVar5 = (uVar4 & 7) + 9;\n        }\n        else {\n            iVar5 = uVar4 - 0x30;\n        }\n        var_4h = uVar2 * var_4h + iVar5;\n    } while( true );\n}\n",
        "token_count": 473
    },
    "00407360": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t * fcn.00407360(int32_t *param_1, uint8_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    \n    if (param_3 != 0) {\n        piVar2 = param_1;\n        for (uVar1 = param_3 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *piVar2 = param_2 * 0x1010101;\n            piVar2 = piVar2 + 1;\n        }\n        for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n            *piVar2 = param_2 * 0x1010101;\n            piVar2 = piVar2 + 1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 209
    },
    "00401497": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key",
            "delete registry key"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401497(uint hKey, uint lpSubKey, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_210h;\n    uint phkResult;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpSubKey, 0, *0x470690 | 8, &phkResult);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegEnumKeyW;\n    if (iVar1 == 0) {\n        do {\n            iVar1 = (*pcVar2)(phkResult, 0, &var_210h, 0x105);\n            if (iVar1 != 0) break;\n            if (arg_10h != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n                goto code_r0x00401529;\n            }\n            iVar1 = fcn.00401497(phkResult, &var_210h, 0);\n        } while (iVar1 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        pcVar2 = fcn.00405cf5(2);\n        if (pcVar2 == NULL) {\n            if ((*0x470690 != 0) || (iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(hKey, lpSubKey),  iVar1 != 0)) {\ncode_r0x00401529:\n                iVar1 = 1;\n            }\n        }\n        else {\n            iVar1 = (*pcVar2)(hKey, lpSubKey, *0x470690, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 390
    },
    "00402f3a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "write file on Windows"
        ],
        "decompiled_code": "\nuint fcn.00402f3a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t lpNumberOfBytesRead;\n    int32_t iStack32;\n    uint uStack28;\n    int32_t iVar3;\n    \n    param_1 = (*0x42e1c4 - *0x4321d0) + param_1;\n    *0x470600 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x470600 = *0x470600 + 500;\n    if (0 < param_1) {\n        uStack28 = 0x402f74;\n        iVar3 = *0x4321cc;\n        fcn.00402f23();\n        uStack28 = 0;\n        iStack32 = 0;\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40a014, *0x4321d0);\n        *0x41e134 = 0;\n        *0x42e1c0 = param_1;\n        do {\n            lpNumberOfBytesRead = 0x4000;\n            if (*0x4321c8 - *0x4321cc < 0x4001) {\n                lpNumberOfBytesRead = *0x4321c8 - *0x4321cc;\n            }\n            iVar1 = fcn.00402ef1(0x42e1c8, lpNumberOfBytesRead);\n            if (iVar1 == 0) {\n                return 0xffffffff;\n            }\n            *0x4321cc = *0x4321cc + lpNumberOfBytesRead;\n            *0x426150 = 0x42e1c8;\n            *0x426154 = lpNumberOfBytesRead;\n            do {\n                if ((*0x4705bc != 0) && (*0x470680 == 0)) {\n                    *0x41e134 = ((*0x42e1c0 - *0x42e1c4) - iVar3) + *0x4321d0;\n                    fcn.00402e4f(0);\n                }\n                *0x426158 = 0x4261c0;\n                *0x42615c = 0x8000;\n                iVar1 = fcn.00406900();\n                if (iVar1 < 0) {\n                    return 0xfffffffd;\n                }\n                iVar1 = *0x426158 + -0x4261c0;\n                if (iVar1 == 0) {\n                    if (*0x426154 != 0) {\n                        return 0xfffffffd;\n                    }\n                    if (lpNumberOfBytesRead == 0) {\n                        return 0xfffffffd;\n                    }\n                    break;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(*0x40a014, 0x4261c0, iVar1, &stack0xffffffe0, 0);\n                if ((iVar2 == 0) || (iVar1 != iStack32)) {\n                    return 0xfffffffe;\n                }\n                *0x4321d0 = *0x4321d0 + iVar1;\n            } while (*0x426154 != 0);\n        } while (0 < (*0x42e1c4 - *0x4321d0) + unaff_ESI);\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40a014, *0x42e1c4, 0, 0);\n    }\n    uStack28 = 0x40309f;\n    fcn.00402e4f(1);\n    return 0;\n}\n",
        "token_count": 806
    },
    "00404049": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404049(uint nIDDlgItem, uint arg_ch)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int8_t iVar4;\n    uint *arg_8h;\n    uint uVar5;\n    uint var_84h;\n    uint var_44h;\n    uint var_4h;\n    \n    iVar4 = 0x14;\n    var_4h = 0xffffffdc;\n    if (in_EAX < 0x100000) {\n        iVar4 = 10;\n        var_4h = 0xffffffdd;\n    }\n    if (in_EAX < 0x400) {\n        iVar4 = 0;\n        var_4h = 0xffffffde;\n    }\n    if (in_EAX < 0xffff3333) {\n        in_EAX = in_EAX + (1 << iVar4) / 0x14;\n    }\n    fcn.00406200(0x446230, arg_ch);\n    uVar1 = fcn.00406200(&var_44h, 0xffffffdf);\n    arg_8h = &var_84h;\n    uVar5 = var_4h;\n    uVar2 = fcn.00406200(arg_8h, var_4h);\n    iVar3 = sub.KERNEL32.dll_lstrlenW\n                      (0x446230, L\"%u.%u%s%s\", in_EAX >> iVar4, ((in_EAX & 0xffffff) * 10 >> iVar4) % 10, uVar2, arg_8h\n                       , uVar5, uVar1);\n    (*_sym.imp.USER32.dll_wsprintfW)(iVar3 * 2 + 0x446230);\n    sub.USER32.dll_SetDlgItemTextW(*0x468568, nIDDlgItem, 0x446230);\n    return;\n}\n",
        "token_count": 424
    },
    "004012a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004012a6(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if ((param_1 < 0x20) && (*0x4705cc != 0)) {\n        puVar2 = *0x4705c8 + 8;\n        do {\n            uVar1 = *puVar2;\n            if ((uVar1 & 6) == 0) {\n                if ((puVar2[-1] & 1 << (param_1 & 0x1f)) == 0) {\n                    uVar1 = uVar1 & 0xfffffffe;\n                }\n                else {\n                    uVar1 = uVar1 | 1;\n                }\n                *puVar2 = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 0x1008;\n        } while (uVar3 < *0x4705cc);\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0040145c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040145c(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_ESI;\n    \n    uVar1 = unaff_ESI;\n    if (unaff_ESI < 0) {\n        uVar1 = -unaff_ESI;\n    }\n    uVar2 = fcn.00406200((uVar1 >> 4) * 0x4008 + 0x40a0a8, *(*0x40a0a4 + (uVar1 & 0xf) * 4));\n    if (unaff_ESI < 0) {\n        fcn.00405c1d(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 162
    },
    "0040154d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040154d(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*0x40a0a4 + 4);\n    if (iVar2 == 0) {\n        iVar2 = *0x470664 + -0x7fffffff;\n    }\n    uVar1 = fcn.0040145c(0, *0x470690 | arg_8h, &arg_8h);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(iVar2, uVar1);\n    return ~-(iVar2 != 0) & arg_8h;\n}\n",
        "token_count": 155
    },
    "004039fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004039fd(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.00406200(0, param_3);\n    sub.USER32.dll_SetDlgItemTextW(param_3, unaff_retaddr + 1000, uVar1);\n    return;\n}\n",
        "token_count": 88
    },
    "00403b32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403b32(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    int32_t *piVar6;\n    \n    uVar5 = 0xffff;\n    uVar1 = fcn.00405b4e(0x4d10c0);\n    do {\n        if (*0x4705e4 != 0) {\n            puVar2 = *(*0x4705bc + 100) * *0x4705e4 + *0x4705e0;\n            iVar4 = *0x4705e4;\n            do {\n                puVar2 = puVar2 - *(*0x4705bc + 100);\n                iVar4 = iVar4 + -1;\n                if ((uVar5 & (*puVar2 ^ uVar1)) == 0) {\n                    *0x46857c = *(puVar2 + 1);\n                    *0x470688 = *(puVar2 + 3);\n                    *0x468588 = puVar2 + 5;\n                    if (*0x468588 != NULL) {\n                        fcn.00405b35(0x4d10c0, *puVar2);\n                        uVar3 = fcn.00406200(0x4685a0, 0xfffffffe);\n                        (*_sym.imp.USER32.dll_SetWindowTextW)(*0x43a210, uVar3);\n                        piVar6 = *0x4705c8;\n                        iVar4 = *0x4705cc;\n                        while (iVar4 != 0) {\n                            iVar4 = iVar4 + -1;\n                            if (*piVar6 != 0) {\n                                fcn.00406200(piVar6 + 6, *piVar6);\n                            }\n                            piVar6 = piVar6 + 0x1008;\n                        }\n                        return;\n                    }\n                    break;\n                }\n            } while (iVar4 != 0);\n        }\n        if (uVar5 == 0xffff) {\n            uVar5 = 0x3ff;\n        }\n        else {\n            uVar5 = 0;\n        }\n    } while( true );\n}\n",
        "token_count": 489
    },
    "00403fff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403fff(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.004039fd(arg_8h, 0x1d, *(arg_14h + 0x30));\n        sub.USER32.dll_SetDlgItemTextW(arg_8h, 1000, *(arg_14h + 0x3c) * 0x4008 + 0x471000);\n    }\n    fcn.00403a88(arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 145
    },
    "00405908": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00405908(uint16_t *param_1)\n\n{\n    uint uVar1;\n    \n    if (((*param_1 == 0x5c) && (param_1[1] == 0x5c)) || (((*param_1 | 0x20) - 0x61 < 0x1a && (param_1[1] == 0x3a)))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "00405a63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nushort * __cdecl fcn.00405a63(ushort *arg_8h, uint lpPathName)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint lpPrefixString;\n    uint32_t var_4h;\n    \n    iVar3 = 100;\n    do {\n        lpPrefixString = *0x4088ec;\n        iVar3 = iVar3 + -1;\n        var_4h = *0x4088f0;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        var_4h = var_4h & 0xffff0000 | var_4h + uVar1 % 0x1a;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(lpPathName, &lpPrefixString, 0, arg_8h);\n        if (iVar2 != 0) {\n            return arg_8h;\n        }\n    } while (iVar3 != 0);\n    *arg_8h = 0;\n    return NULL;\n}\n",
        "token_count": 246
    },
    "00405b35": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405b35(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfW)(param_1, 0x408834, param_2);\n    return;\n}\n",
        "token_count": 50
    },
    "0040614b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.0040614b(int16_t *param_1)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1);\n    piVar2 = param_1 + iVar1;\n    do {\n        if (*piVar2 == 0x5c) break;\n        piVar2 = (*_sym.imp.USER32.dll_CharPrevW)(param_1, piVar2);\n    } while (param_1 < piVar2);\n    *piVar2 = 0;\n    return piVar2 + 1;\n}\n",
        "token_count": 143
    },
    "00405a34": {
        "rules": [
            "get file attributes",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00405a34(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    (*_sym.imp.KERNEL32.dll_CreateFileW)(unaff_retaddr, param_1, 1, 0, param_2, -(uVar1 != 0xffffffff) & uVar1, 0);\n    return;\n}\n",
        "token_count": 111
    },
    "00405822": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405822(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    int32_t lpProcessAttributes;\n    uint hObject;\n    \n    *0x456268 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, lpCommandLine, 0, 0, 0, 0, 0, 0, 0x456268, &lpProcessAttributes);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        iVar1 = lpProcessAttributes;\n    }\n    return iVar1;\n}\n",
        "token_count": 140
    },
    "00403c67": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint fcn.00403c67(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, 0xffffffff, 0, 0, 0, 0);\n    uVar3 = 0;\n    if (iVar2 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar2 + 1);\n        (*pcVar1)(0, 0, param_1, 0xffffffff, uVar3, iVar2 + 1, 0, 0);\n    }\n    return uVar3;\n}\n",
        "token_count": 187
    },
    "00403926": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403926(uint param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x4361e0; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_1);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00403941": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403941(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x4361e0;\n    fcn.00403926(0);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(piVar2[2]);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    *0x4361e0 = NULL;\n    return;\n}\n",
        "token_count": 146
    },
    "00403976": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00403976(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x4361e0;\n    while( true ) {\n        if (puVar1 == NULL) {\n            return 1;\n        }\n        if (puVar1[2] == param_1) break;\n        puVar1 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 94
    },
    "004058e9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004058e9(int16_t *param_1, int16_t param_2)\n\n{\n    for (; (*param_1 != 0 && (*param_1 != param_2)); param_1 = (*_sym.imp.USER32.dll_CharNextW)(param_1)) {\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0040599a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040599a(int32_t arg_8h, uint lpString2)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    while( true ) {\n        iVar4 = (*pcVar2)(arg_8h);\n        if (iVar4 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(iVar3 + arg_8h);\n        *(iVar3 + arg_8h) = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(arg_8h, lpString2);\n        *(iVar3 + arg_8h) = uVar1;\n        if (iVar4 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 247
    },
    "00405d2c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405d2c(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageW;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "004068e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004068e0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x80;\n    do {\n        iVar1 = iVar1 + -1;\n        *(iVar1 + param_1) = 0;\n    } while (iVar1 != 0);\n    *(param_1 + 0x78) = 0xffffffff;\n    *(param_1 + 0x68) = 1;\n    *(param_1 + 100) = 1;\n    *(param_1 + 0x60) = 1;\n    *(param_1 + 0x5c) = 1;\n    return;\n}\n",
        "token_count": 151
    },
    "0040347e": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nvoid fcn.0040347e(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.00405c1d(0x4d50c8);\n    iVar1 = fcn.00405908(0x4d50c8);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.0040611c(0x4d50c8);\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(0x4d50c8, 0);\n    fcn.00405a63(0x4d10c0, 0x4d50c8);\n    return;\n}\n",
        "token_count": 143
    },
    "00402ef1": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ef1(uint lpBuffer, int32_t lpNumberOfBytesRead)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = lpNumberOfBytesRead;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(*0x40a010, lpBuffer, lpNumberOfBytesRead, &lpNumberOfBytesRead, 0);\n    if ((iVar2 == 0) || (lpNumberOfBytesRead != iVar1)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 142
    },
    "00405cf5": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00405cf5(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(param_1 * 8 + 0x40a058);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    if ((iVar2 == 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1),  iVar2 == 0)) {\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, *(param_1 * 8 + 0x40a05c));\n    return;\n}\n",
        "token_count": 150
    }
}