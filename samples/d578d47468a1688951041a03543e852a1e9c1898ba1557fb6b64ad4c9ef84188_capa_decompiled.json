{
    "0040122b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar fcn.0040122b(char *param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = '\\0';\n    if (((((param_2 != 0) && (*param_1 == 'R')) && (6 < param_2)) && ((param_1[1] == 'a' && (param_1[2] == 'r')))) &&\n       ((param_1[3] == '!' && ((param_1[4] == '\\x1a' && (param_1[5] == '\\a')))))) {\n        cVar1 = (param_1[6] != '\\0') + '\\x02';\n    }\n    return cVar1;\n}\n",
        "token_count": 161
    },
    "00401373": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401373(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint8_t uVar8;\n    uchar uVar9;\n    int32_t in_ECX;\n    int32_t iVar10;\n    uint uVar11;\n    uint var_24h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *(in_ECX + 0x71c8) = 0;\n    iVar4 = fcn.00405f9d(in_ECX + 0x4a68, 7);\n    if (iVar4 != 7) {\n        return 0;\n    }\n    *(in_ECX + 0x71cc) = 0;\n    var_8h = fcn.0040122b(in_ECX + 0x4a68, 7);\n    if (var_8h == 0) {\n        fcn.00403d6a(0x100000);\n        iVar4 = fcn.00405838();\n        iVar5 = fcn.00405f9d(var_18h, var_14h + -0x10);\n        iVar10 = 0;\n        if (0 < iVar5) {\n            do {\n                if (((*(var_18h + iVar10) == 'R') && (var_8h = fcn.0040122b(),  var_8h != 0)) &&\n                   (((*(in_ECX + 0x71c0) = var_8h == 1,  var_8h != 1 ||\n                     (((iVar10 < 1 || (0x1b < iVar4)) || (iVar5 < 0x20)))) ||\n                    ((((iVar6 = var_18h - iVar4,  *(iVar6 + 0x1c) == 'R' && (*(iVar6 + 0x1d) == 'S')) &&\n                      (*(iVar6 + 0x1e) == 'F')) && (*(iVar6 + 0x1f) == 'X')))))) {\n                    *(in_ECX + 0x71cc) = iVar10 + iVar4;\n                    fcn.00405de9();\n                    if (*(in_ECX + 0x71c0) == '\\0') {\n                        fcn.00405f9d(in_ECX + 0x4a68, 7);\n                    }\n                    break;\n                }\n                iVar10 = iVar10 + 1;\n            } while (iVar10 < iVar5);\n        }\n        if (*(in_ECX + 0x71cc) == 0) {\n            if (var_18h == 0) {\n                return 0;\n            }\n            fcn.0040a41c(var_18h);\n            return 0;\n        }\n        if (var_18h != 0) {\n            fcn.0040a41c(var_18h);\n        }\n    }\n    else {\n        *(in_ECX + 0x71c0) = var_8h == 1;\n        if (var_8h == 1) {\n            fcn.00405de9(0, 0, 0);\n        }\n    }\n    if (var_8h != 3) {\n        fcn.00401d3e();\n        fcn.00401271();\n        if (*(in_ECX + 0x71d2) != *(in_ECX + 0x4ac8)) {\n            uVar11 = 0x7c;\n            uVar7 = fcn.00409b0b();\n            fcn.0040b986(in_ECX + 0x41e, uVar7, uVar11);\n            fcn.0040359c();\n            if (arg_8h == '\\0') {\n                return 0;\n            }\n        }\n        *(in_ECX + 0x71c2) = *(in_ECX + 0x4ad0) & 1;\n        uVar8 = *(in_ECX + 0x4ad0);\n        *(in_ECX + 0x71c1) = uVar8 >> 3 & 1;\n        *(in_ECX + 0x71c3) = uVar8 >> 1 & 1;\n        *(in_ECX + 0x71c4) = uVar8 >> 2 & 1;\n        *(in_ECX + 0x71c5) = *(in_ECX + 0x4ad8) != 0;\n        *(in_ECX + 0x71c7) = uVar8 >> 6 & 1;\n        cVar3 = -(uVar8 >> 7);\n        *(in_ECX + 0x71c8) = cVar3;\n        if (*(in_ECX + 0x4adc) < 0x25) {\n            if ((cVar3 == '\\0') || ((*(in_ECX + 0x4ad0) & 0x100) != 0)) {\n                uVar9 = 0;\n            }\n            else {\n                uVar9 = 1;\n            }\n            *(in_ECX + 0x71c6) = uVar9;\n            if ((*(in_ECX + 0x4ab8) == '\\0') || (cVar3 == '\\0')) {\n                fcn.0040ac98();\n                uVar7 = *(in_ECX + 0x71b8);\n                uVar11 = *(in_ECX + 0x71b0);\n                uVar1 = *(in_ECX + 0x71b4);\n                uVar2 = *(in_ECX + 0x71bc);\n                *(in_ECX + 0x71c6) = 0;\n                while (iVar4 = fcn.00401d3e(),  iVar4 != 0) {\n                    if (*(in_ECX + 0x4ab4) != 0x7a) {\n                        if ((*(in_ECX + 0x4ab4) == 0x74) &&\n                           (((*(in_ECX + 0x4ae8) & 1) != 0 ||\n                            (((*(in_ECX + 0x71c2) != '\\0' && (0x1c < *(in_ECX + 0x4b00))) &&\n                             ((*(in_ECX + 0x4ad0) & 0x100) == 0)))))) {\n                            *(in_ECX + 0x71c6) = 1;\n                        }\n                        break;\n                    }\n                    iVar4 = fcn.0040a705(in_ECX + 0x5820, 0x4142ec);\n                    if (iVar4 == 0) {\n                        *(in_ECX + 0x71c3) = 1;\n                    }\n                    if (((*(in_ECX + 0x57f8) & 1) != 0) ||\n                       ((*(in_ECX + 0x71c2) != '\\0' && ((*(in_ECX + 0x4ad0) & 0x100) == 0)))) {\n                        *(in_ECX + 0x71c6) = 1;\n                    }\n                    fcn.00401271();\n                }\n                *(in_ECX + 0x71b8) = uVar7;\n                *(in_ECX + 0x71b0) = uVar11;\n                *(in_ECX + 0x71b4) = uVar1;\n                *(in_ECX + 0x71bc) = uVar2;\n                fcn.0040acbf();\n            }\n            if ((*(in_ECX + 0x71c2) == '\\0') || (*(in_ECX + 0x71c6) == '\\0')) {\n                fcn.0040a693(in_ECX + 0x71ed, in_ECX + 0x1d);\n                fcn.0040a850(in_ECX + 0x75ee, in_ECX + 0x41e);\n            }\n            return 1;\n        }\n        fcn.00403537(1);\n    }\n    return 0;\n}\n",
        "token_count": 1846
    },
    "0040182f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040182f(int32_t *arg_8h, uint *arg_ch)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint32_t arg_10h;\n    int32_t arg_10h_00;\n    int32_t var_ch;\n    \n    uVar1 = *(in_ECX + 0x5814);\n    cVar2 = fcn.004025be(arg_8h, 0);\n    if (cVar2 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = arg_8h[1];\n        if ((uVar1 & 1) == 0) {\n            if (arg_ch != NULL) {\n                fcn.004016ee(0);\n                fcn.00401723(uVar3 + 1);\n                fcn.0040ecd2(*arg_8h, *arg_ch, uVar3 + 1);\n                fcn.00401709(uVar3);\n                uVar4 = fcn.0040a826(*arg_ch);\n                fcn.00401723(uVar4);\n            }\n        }\n        else {\n            arg_10h = uVar3 >> 1;\n            fcn.00401285(arg_10h + 1);\n            fcn.0040ed2d(*arg_8h, var_ch, arg_10h);\n            *(var_ch + (uVar3 & 0xfffffffe)) = 0;\n            arg_10h_00 = arg_10h * 4;\n            fcn.00401709(arg_10h_00 + 1);\n            fcn.0040eca0(var_ch, *arg_8h, arg_10h_00);\n            *(arg_10h_00 + *arg_8h) = 0;\n            uVar3 = fcn.0040a5a0(*arg_8h);\n            fcn.00401709(uVar3);\n            if (arg_ch != NULL) {\n                fcn.00401800(&var_ch);\n                fcn.00401723(uVar3);\n            }\n            if (var_ch != 0) {\n                fcn.0040a41c(var_ch);\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 526
    },
    "00405783": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405783(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint8_t uVar1;\n    \n    uVar1 = 1;\n    if (*(param_1 + 0xc) == 0) {\n        in_EAX = *(param_1 + 4);\n        if (in_EAX != 0xffffffff) {\n            if (*(param_1 + 0x10) == '\\0') {\n                in_EAX = (*_sym.imp.KERNEL32.dll_CloseHandle)(in_EAX);\n                uVar1 = 1 - (in_EAX != 1);\n                if ((uVar1 != 0) || (*0x418e80 == 0)) {\n                    in_EAX = 0;\n                    do {\n                        if (*(in_EAX * 4 + 0x418a80) == param_1) {\n                            *(in_EAX * 4 + 0x418a80) = 0;\n                            break;\n                        }\n                        in_EAX = in_EAX + 1;\n                    } while (in_EAX < 0x100);\n                }\n            }\n            *(param_1 + 4) = 0xffffffff;\n            if ((uVar1 == 0) && (*(param_1 + 0x14) != '\\0')) {\n                in_EAX = fcn.004035c4(param_1 + 0x1d, param_1 + 0x41e);\n            }\n        }\n    }\n    else {\n        *(param_1 + 0xc) = 0;\n    }\n    *(param_1 + 0xc24) = *(param_1 + 0xc24) + 1;\n    return in_EAX & 0xffffff00 | uVar1;\n}\n",
        "token_count": 388
    },
    "00405808": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405808(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        if (*(param_1 + 4) != -1) {\n            in_EAX = fcn.00405783();\n        }\n        if (*(param_1 + 0x13) != '\\0') {\n            uVar1 = fcn.0040616e(param_1 + 0x1d, param_1 + 0x41e);\n            return uVar1;\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 153
    },
    "004058fd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004058fd(uint *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint8_t uVar2;\n    \n    *param_1 = 0x4143c4;\n    if ((param_1[1] == -1) || (*(param_1 + 4) != '\\0')) {\n        return in_EAX;\n    }\n    if (*(param_1 + 0x12) != '\\0') {\n        if (param_1[3] == 0) {\n            if (param_1[1] != -1) {\n                in_EAX = fcn.00405783();\n            }\n            if (*(param_1 + 0x13) != '\\0') {\n                uVar1 = fcn.0040616e(param_1 + 0x1d, param_1 + 0x41e);\n                return uVar1;\n            }\n        }\n        return in_EAX & 0xffffff00;\n    }\n    uVar2 = 1;\n    if (param_1[3] == 0) {\n        in_EAX = param_1[1];\n        if (in_EAX != 0xffffffff) {\n            if (*(param_1 + 4) == '\\0') {\n                in_EAX = (*_sym.imp.KERNEL32.dll_CloseHandle)(in_EAX);\n                uVar2 = 1 - (in_EAX != 1);\n                if ((uVar2 != 0) || (*0x418e80 == 0)) {\n                    in_EAX = 0;\n                    do {\n                        if (*(in_EAX * 4 + 0x418a80) == param_1) {\n                            *(in_EAX * 4 + 0x418a80) = 0;\n                            break;\n                        }\n                        in_EAX = in_EAX + 1;\n                    } while (in_EAX < 0x100);\n                }\n            }\n            param_1[1] = 0xffffffff;\n            if ((uVar2 == 0) && (*(param_1 + 5) != '\\0')) {\n                in_EAX = fcn.004035c4(param_1 + 0x1d, param_1 + 0x41e);\n            }\n        }\n    }\n    else {\n        param_1[3] = 0;\n    }\n    param_1[0x309] = param_1[0x309] + 1;\n    return in_EAX & 0xffffff00 | uVar2;\n}\n",
        "token_count": 558
    },
    "00401ad2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401ad2(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t uVar3;\n    uint var_18h;\n    \n    if (*(in_ECX + 0x71c3) == '\\0') {\n        uVar1 = in_EAX & 0xffffff00;\n    }\n    else {\n        fcn.0040ac98();\n        if ((*(in_ECX + 0x4ad0) & 2) == 0) {\n            fcn.00405de9(*(in_ECX + 0x4ad2) + 7 + *(in_ECX + 0x71cc), 0, 0);\n            iVar2 = fcn.00402851(0x4142ec);\n            if ((iVar2 == 0) || (iVar2 = fcn.0040182f(arg_8h, arg_ch),  iVar2 == 0)) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = 1;\n            }\n            uVar1 = fcn.0040acbf();\n            uVar1 = uVar1 & 0xffffff00 | uVar3;\n        }\n        else {\n            fcn.00405de9(*(in_ECX + 0x71cc) + 0x14, 0, 0);\n            fcn.00401d3e();\n            iVar2 = arg_8h[1];\n            if ((iVar2 != 0) && ((*_sym.imp.USER32.dll_OemToCharBuffA)(*arg_8h, *arg_8h, iVar2),  arg_ch != NULL)) {\n                fcn.00401723(iVar2 + 1);\n                fcn.004016ee(0);\n                fcn.0040ecd2(*arg_8h, *arg_ch, iVar2 + 1);\n                fcn.00401709(iVar2);\n                fcn.0040a826(*arg_ch);\n                fcn.00401723();\n            }\n            iVar2 = arg_8h[1];\n            uVar1 = fcn.0040acbf();\n            uVar1 = uVar1 & 0xffffff00 | iVar2 != 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 531
    },
    "00401c80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t * fcn.00401c80(uint8_t *param_1)\n\n{\n    if (*0x42d5f0 != '\\0') {\n        if ((*(*param_1 + 0x42d4f0) == '\\0') || (param_1[1] == 0)) {\n            param_1 = param_1 + 1;\n        }\n        else {\n            param_1 = param_1 + 2;\n        }\n        return param_1;\n    }\n    return param_1 + 1;\n}\n",
        "token_count": 119
    },
    "00401c9b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401c9b(int32_t param_1)\n\n{\n    char *pcVar1;\n    int16_t *piVar2;\n    \n    if ((*(param_1 + 0x4b00) < 0x14) && ((*(param_1 + 0x4b04) & 0x10) != 0)) {\n        *(param_1 + 0x4ae8) = *(param_1 + 0x4ae8) | 0xe0;\n    }\n    if (5 < *(param_1 + 0x4af4)) {\n        *(param_1 + 0x4b04) = (((*(param_1 + 0x4ae8) & 0xe0) != 0xe0) - 1 & 0xfffffff0) + 0x20;\n    }\n    pcVar1 = param_1 + 0x4b10;\n    while (*pcVar1 != '\\0') {\n        if ((*pcVar1 == '/') || (*pcVar1 == '\\\\')) {\n            *pcVar1 = '\\\\';\n        }\n        if (*pcVar1 == ':') {\n            *pcVar1 = '_';\n        }\n        pcVar1 = fcn.00401c80();\n    }\n    for (piVar2 = param_1 + 0x4f10; *piVar2 != 0; piVar2 = piVar2 + 1) {\n        if ((*piVar2 == 0x2f) || (*piVar2 == 0x5c)) {\n            *piVar2 = 0x5c;\n        }\n        if (*piVar2 == 0x3a) {\n            *piVar2 = 0x5f;\n        }\n    }\n    return;\n}\n",
        "token_count": 393
    },
    "00401d3e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_15h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: pDst\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00401d3e(void)\n\n{\n    int32_t *piVar1;\n    uint16_t *puVar2;\n    uint32_t *puVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t extraout_ECX;\n    uint32_t uVar10;\n    uint *puVar11;\n    uint32_t unaff_EDI;\n    uint *puVar12;\n    int32_t iVar13;\n    uint *puVar14;\n    ulong uVar15;\n    int64_t iVar16;\n    uint var_107ch;\n    uint uStackY144;\n    uint *var_7ch;\n    int32_t iStack124;\n    int32_t iStack120;\n    uint var_68h;\n    uint var_64h;\n    uint uVar17;\n    int32_t var_58h;\n    uint var_54h;\n    char *var_50h;\n    uint *var_4ch;\n    uint *var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    int32_t var_24h;\n    uchar auStack28 [3];\n    uint *var_15h;\n    uint var_1ch;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint *pDst;\n    uint var_1h;\n    \n    fcn.00401200();\n    if (*(extraout_ECX + 0x4a88) != '\\0') {\n        return 0;\n    }\n    uVar15 = fcn.00405838();\n    *(extraout_ECX + 0x71b0) = uVar15;\n    *(extraout_ECX + 0x71b4) = uVar15 >> 0x20;\n    stack0xffffffe8 = 0x401d7a;\n    fcn.00408f45();\n    if (*(extraout_ECX + 0x71c8) == '\\0') {\ncode_r0x00401e5c:\n        var_1h._0_1_ = '\\0';\ncode_r0x00401e40:\n        var_44h = 0x7;\n        var_48h = 0x401e4a;\n        fcn.00408dad(7);\n        if (var_24h != 0) {\n            var_48h = extraout_ECX + 0x4abc;\n            var_4ch = 0x401e71;\n            fcn.00408e5f();\n            var_4ch = &fcn.00401d3e::var_15h;\n            var_50h = 0x401e7d;\n            fcn.00408e3d();\n            puVar2 = extraout_ECX + 0x4ac4;\n            *(extraout_ECX + 0x4ac0) = _auStack28 >> 0x18;\n            var_50h = puVar2;\n            fcn.00408e5f();\n            fcn.00408e5f();\n            uVar6 = *(extraout_ECX + 0x4ac6);\n            if (uVar6 < 7) {\n                uVar17 = 0x68;\n                uVar8 = fcn.00409b0b();\n                fcn.0040b986(extraout_ECX + 0x41e, uVar8, uVar17);\n                *(extraout_ECX + 0x71d0) = 1;\n                fcn.00403537();\n                goto code_r0x00402599;\n            }\n            if ((*(extraout_ECX + 0x4ac0) == 0x75) || ((*(extraout_ECX + 0x4ac0) == 0x73 && ((*puVar2 & 2) != 0)))) {\n                var_58h = 6;\n            }\n            else {\n                var_58h = uVar6 - 7;\n            }\n            fcn.00408dad(var_58h);\n            uVar9 = *(extraout_ECX + 0x4ac6);\n            *(extraout_ECX + 0x71b8) = uVar9 + *(extraout_ECX + 0x71b0);\n            iVar7 = *(extraout_ECX + 0x4ac0);\n            *(extraout_ECX + 0x71bc) = *(extraout_ECX + 0x71b4) + CARRY4(uVar9, *(extraout_ECX + 0x71b0));\n            if (iVar7 == 0x73) {\n                *(extraout_ECX + 0x4ac8) = *(extraout_ECX + 0x4abc);\n                *(extraout_ECX + 0x4acc) = *(extraout_ECX + 0x4ac0);\n                *(extraout_ECX + 0x4ad0) = *(extraout_ECX + 0x4ac4);\n                fcn.00408e5f();\n                fcn.00408e9e();\n                if ((*(extraout_ECX + 0x4ad0) & 0x200) != 0) {\n                    fcn.00408e3d();\n                }\n            }\n            else if ((iVar7 == 0x74) || (iVar7 == 0x7a)) {\n                unique0x00001e00 = extraout_ECX + 0x4ae0;\n                if (iVar7 != 0x74) {\n                    unique0x00001e00 = extraout_ECX + 0x57f0;\n                }\n                **NULL = *(extraout_ECX + 0x4abc);\n                (*NULL)[1] = *(extraout_ECX + 0x4ac0);\n                var_3ch = *NULL + 3;\n                (*NULL)[2] = *(extraout_ECX + 0x4ac4);\n                fcn.00408e9e();\n                puVar11 = stack0xffffffe8;\n                piVar1 = stack0xffffffe8 + 4;\n                fcn.00408e9e();\n                fcn.00408e3d();\n                fcn.00408e9e();\n                var_38h = puVar11 + 7;\n                fcn.00408e9e();\n                iStack120 = 0x40202e;\n                fcn.00408e3d();\n                iStack120 = puVar11 + 0x21;\n                iStack124 = 0x40203a;\n                fcn.00408e3d();\n                iStack124 = puVar11 + 0x22;\n                var_7ch = 0x402049;\n                fcn.00408e5f();\n                var_7ch = puVar11 + 9;\n                fcn.00408e9e();\n                if ((*(puVar11 + 2) & 0x100) == 0) {\n                    puVar11[10] = 0;\n                    puVar11[0xb] = 0;\n                    if (*piVar1 == -1) {\n                        *piVar1 = 0x7fffffff;\n                        puVar11[0xb] = 0x7fffffff;\n                    }\n                }\n                else {\n                    fcn.00408e9e();\n                    fcn.00408e9e();\n                }\n                iVar16 = fcn.00401030();\n                var_1h._0_1_ = '\\0';\n                puVar11[0x336] = iVar16 + 0x7a00;\n                puVar11[0x337] = iVar16 + 0x7a00 >> 0x20;\n                stack0xffffffe8 = 0x4020cc;\n                uVar15 = fcn.00401030();\n                puVar11[0x338] = uVar15;\n                uVar9 = _pe_dos_header;\n                puVar12 = 0xfff;\n                puVar11[0x339] = uVar15 >> 0x20;\n                if (_pe_dos_header < 0xfff) {\n                    puVar12 = uVar9 & 0xffff;\n                }\n                _auStack28 = &fcn.00401d3e::var_107ch;\n                unique0x100008a7 = puVar12;\n                fcn.00408ee3();\n                pDst = puVar11 + 0xc;\n                *(&fcn.00401d3e::var_107ch + puVar12) = 0;\n                var_3ch = pDst;\n                fcn.0040e57b();\n                if (puVar11[1] == 0x7a) {\n                    iVar7 = *(puVar11 + 10) - (_pe_dos_header & 0xffff);\n                    iVar13 = iVar7 + -0x20;\n                    if ((*(puVar11 + 2) & 0x400) != 0) {\n                        iVar13 = iVar7 + -0x28;\n                    }\n                    if (0 < iVar13) {\n                        fcn.00401709();\n                        var_30h = puVar11[0x30c];\n                        var_34h = 0x402172;\n                        fcn.00408ee3();\n                        var_34h = 0x4142fc;\n                        var_3ch = 0x40217f;\n                        iVar7 = fcn.0040a705(0x40217f, 0x4142fc);\n                        if (iVar7 == 0) {\n                            *(extraout_ECX + 0x4a78) = *(puVar11[0x30c] + 8);\n                        }\n                    }\n                }\n                else if (puVar11[1] == 0x74) {\n                    if ((*(puVar11 + 2) & 0x200) == 0) {\n                        *(puVar11 + 0x10c) = 0;\n                    }\n                    else {\n                        fcn.0040330c();\n                        uVar9 = fcn.0040a5a0(&fcn.00401d3e::var_107ch);\n                        puVar12 = puVar11 + 0x10c;\n                        var_30h = puVar12;\n                        if (uVar9 == (_pe_dos_header & 0xffff)) {\n                            var_34h = &fcn.00401d3e::var_107ch;\n                            var_38h = 0x402207;\n                            fcn.0040ed6d(var_34h, puVar12, 0x3ff);\n                            var_38h = 0x3ff;\n                            var_44h = 0x402215;\n                            var_40h = puVar12;\n                            var_3ch = pDst;\n                            fcn.0040eca0(puVar12, pDst, 0x3ff);\n                            var_4ch = 0x402220;\n                            var_44h = pDst;\n                            var_3ch = pDst;\n                            sub.USER32.dll_CharToOemA();\n                        }\n                        else {\n                            var_34h = (_pe_dos_header & 0xffff) - (uVar9 + 1);\n                            var_38h = &fcn.00401d3e::var_107ch + uVar9 + 1;\n                            var_3ch = &fcn.00401d3e::var_107ch;\n                            var_40h = 0x402243;\n                            fcn.0040331d(var_3ch, var_38h, var_34h, puVar12, 0x400);\n                        }\n                        if (*puVar12 == 0) {\n                            *(puVar11 + 2) = *(puVar11 + 2) & 0xfdff;\n                        }\n                    }\n                    var_40h = 0x402264;\n                    fcn.00401c9b();\n                }\n                if ((*(puVar11 + 2) & 0x400) != 0) {\n                    var_40h = 0x8;\n                    var_3ch = puVar11 + 0x30f;\n                    var_48h = 0x402280;\n                    fcn.00408ee3();\n                }\n                var_44h = 0x402290;\n                fcn.0040ea78();\n                puVar11[0x31a] = 0;\n                puVar11[0x323] = 0;\n                puVar11[0x32c] = 0;\n                if ((*(puVar11 + 2) & 0x1000) != 0) {\n                    var_44h = &fcn.00401d3e::var_3ch;\n                    var_48h = 0x4022bf;\n                    fcn.00408e5f();\n                    var_50h = extraout_ECX + 0x5724;\n                    var_4ch = extraout_ECX + 0x5748;\n                    var_48h = extraout_ECX + 0x576c;\n                    var_44h = extraout_ECX + 0x5790;\n                    var_10h = 0;\n                    var_ch = 0xc;\n                    do {\n                        var_3ch._0_2_ = var_3ch >> (var_ch & 0x1f);\n                        var_40h = var_3ch;\n                        if ((var_3ch & 8) != 0) {\n                            if (var_10h != 0) {\n                                var_48h = &fcn.00401d3e::var_38h;\n                                var_4ch = 0x402316;\n                                fcn.00408e9e();\n                                var_44h = var_38h;\n                                var_50h = 0x402320;\n                                fcn.0040ea78();\n                            }\n                            uVar9 = var_40h;\n                            puVar11 = (&fcn.00401d3e::var_50h)[var_10h];\n                            puVar12 = &fcn.00401d3e::var_7ch;\n                            for (iVar7 = 9; iVar7 != 0; iVar7 = iVar7 + -1) {\n                                *puVar12 = *puVar11;\n                                puVar11 = puVar11 + 1;\n                                puVar12 = puVar12 + 1;\n                            }\n                            var_48h = 0x3;\n                            puVar11 = stack0xffffffe8;\n                            for (uVar9 = uVar9 & 3; unique0x100008c3 = puVar11,  uVar9 != 0; uVar9 = uVar9 - 1) {\n                                var_44h = &stack0xffffffe6;\n                                var_48h = 0x402357;\n                                fcn.00408e3d();\n                                puVar11 = stack0xffffffe8;\n                            }\n                            var_48h = 0x9;\n                            puVar12 = &fcn.00401d3e::var_7ch;\n                            puVar14 = (&fcn.00401d3e::var_50h)[var_10h];\n                            for (iVar7 = 9; iVar7 != 0; iVar7 = iVar7 + -1) {\n                                *puVar14 = *puVar12;\n                                puVar12 = puVar12 + 1;\n                                puVar14 = puVar14 + 1;\n                            }\n                        }\n                        var_10h = var_10h + 1;\n                        var_ch = var_ch + -4;\n                    } while (-4 < var_ch);\n                }\n                uVar9 = puVar11[0x336];\n                puVar3 = extraout_ECX + 0x71b8;\n                uVar10 = *puVar3;\n                *puVar3 = *puVar3 + uVar9;\n                *(extraout_ECX + 0x71bc) = *(extraout_ECX + 0x71bc) + puVar11[0x337] + CARRY4(uVar10, uVar9);\n                var_40h = var_40h & 0xffffff00 | *(puVar11 + 2) >> 3 & 0xffffff01;\n                var_4ch = 0x4023b9;\n                uVar6 = fcn.00408f1b();\n                *(extraout_ECX + 0x71d2) = ~uVar6;\n                if (*puVar11 != ~uVar6) {\n                    if (stack0xffffffe8[1] == 0x7a) {\n                        var_50h = 0x4023dc;\n                        uVar9 = fcn.0040a5a0(pDst);\n                        if (uVar9 < 0x3fb) {\n                            var_50h = \"- ???\";\n                            fcn.0040a7b6(pDst, \"- ???\");\n                        }\n                    }\n                    *(extraout_ECX + 0x71d0) = 1;\n                    fcn.00403537();\n                    if ((var_1h == '\\0') || (uVar6 = fcn.00408f1b(),  *(extraout_ECX + 0x4abc) == ~uVar6)) {\n                        fcn.0040e776();\n                        fcn.0040e679();\n                        uVar8 = fcn.00409b0b();\n                        iStack120 = 0x402441;\n                        fcn.0040b986(extraout_ECX + 0x41e, uVar8, 0x68);\n                    }\n                }\n            }\n            else if (iVar7 == 0x7b) {\n                *(extraout_ECX + 0x57c8) = *(extraout_ECX + 0x4abc);\n                *(extraout_ECX + 0x57cc) = *(extraout_ECX + 0x4ac0);\n                *(extraout_ECX + 0x57d0) = *(extraout_ECX + 0x4ac4);\n                if ((*(extraout_ECX + 0x57d0) & 2) != 0) {\n                    fcn.00408e9e();\n                }\n                if ((*(extraout_ECX + 0x57d0) & 8) != 0) {\n                    fcn.00408e5f();\n                }\n            }\n            else if ((*puVar2 & 0x8000) != 0) {\n                fcn.00408e9e();\n                puVar3 = extraout_ECX + 0x71b8;\n                uVar9 = *puVar3;\n                *puVar3 = *puVar3 + unaff_EDI;\n                *(extraout_ECX + 0x71bc) = *(extraout_ECX + 0x71bc) + CARRY4(uVar9, unaff_EDI);\n            }\n            uVar6 = fcn.00408f1b();\n            *(extraout_ECX + 0x71d2) = ~uVar6;\n            *(extraout_ECX + 0x4ab4) = *(extraout_ECX + 0x4ac0);\n            if (var_1h == '\\0') {\ncode_r0x00402549:\n                if ((*(extraout_ECX + 0x71b4) < *(extraout_ECX + 0x71bc)) ||\n                   ((*(extraout_ECX + 0x71b4) <= *(extraout_ECX + 0x71bc) &&\n                    (*(extraout_ECX + 0x71b0) <= *(extraout_ECX + 0x71b8) &&\n                     *(extraout_ECX + 0x71b8) != *(extraout_ECX + 0x71b0))))) {\n                    if (var_34h == NULL) {\n                        return var_24h;\n                    }\n                    var_7ch = var_34h;\n                    fcn.0040a41c(var_34h);\n                    return var_24h;\n                }\n                var_7ch = 0x414300;\n                uVar17 = 0x68;\n                uVar8 = fcn.00409b0b();\n                uStackY144 = 0x402580;\n                fcn.0040b986(extraout_ECX + 0x41e, uVar8, uVar17);\n            }\n            else {\n                uVar10 = var_30h + (8 - var_24h);\n                puVar3 = extraout_ECX + 0x71b8;\n                uVar9 = *puVar3;\n                *puVar3 = *puVar3 + uVar10;\n                *(extraout_ECX + 0x71bc) = *(extraout_ECX + 0x71bc) + CARRY4(uVar9, uVar10);\n                if (*(extraout_ECX + 0x4abc) == ~uVar6) goto code_r0x00402549;\n                if ((*(extraout_ECX + 0x4ac0) == 0x7b) && ((*(extraout_ECX + 0x57d0) & 4) != 0)) {\n                    fcn.0040ac98();\n                    uVar15 = fcn.00405838();\n                    iVar7 = 7;\n                    iStack124 = uVar15 - 7;\n                    iStack120 = (uVar15 >> 0x20) - (uVar15 < 7);\n                    var_7ch = 0x402507;\n                    fcn.00405de9();\n                    bVar4 = true;\n                    do {\n                        var_7ch = 0x402512;\n                        cVar5 = fcn.00406070();\n                        if (cVar5 != '\\0') {\n                            bVar4 = false;\n                        }\n                        iVar7 = iVar7 + -1;\n                    } while (iVar7 != 0);\n                    var_7ch = 0x402525;\n                    fcn.0040acbf();\n                    if (bVar4) goto code_r0x00402549;\n                }\n                uVar17 = 0x70;\n                var_7ch = extraout_ECX + 0x41e;\n                uVar8 = fcn.00409b0b();\n                uStackY144 = 0x402540;\n                fcn.0040b986(extraout_ECX + 0x41e, uVar8, uVar17);\n                *(extraout_ECX + 0x4a88) = 1;\n            }\n            *(extraout_ECX + 0x71d0) = 1;\n            fcn.00403537();\n            goto code_r0x00402599;\n        }\n    }\n    else {\n        uVar9 = 0xffffffeb < *(extraout_ECX + 0x71cc);\n        if ((*(extraout_ECX + 0x71b4) < uVar9) ||\n           ((*(extraout_ECX + 0x71b4) <= uVar9 && (*(extraout_ECX + 0x71b0) < *(extraout_ECX + 0x71cc) + 0x14))))\n        goto code_r0x00401e5c;\n        stack0xffffffe8 = 0x8;\n        puVar11 = extraout_ECX + 0xe68;\n        var_1h._0_1_ = '\\x01';\n        _auStack28 = puVar11;\n        iVar7 = fcn.00405f9d(puVar11, 8);\n        if (iVar7 == 8) {\n            if (*(*(extraout_ECX + 0x1398) + 0x291c) == '\\0') {\n                var_24h = extraout_ECX + 0x1d;\n                cVar5 = fcn.00402e4c(2, var_24h, extraout_ECX + 0x41e, *(extraout_ECX + 0x1398) + 0x281c);\n                if (cVar5 == '\\0') {\n                    fcn.00405783();\n                    var_30h = 0x401e10;\n                    fcn.00403897();\n                }\n            }\n            var_30h = 1 - (*(extraout_ECX + 0x4adc) < 0x24);\n            var_34h = NULL;\n            var_38h = NULL;\n            var_40h = *(extraout_ECX + 0x1398) + 0x281c;\n            var_44h = 0x401e3d;\n            var_3ch = puVar11;\n            fcn.00402fa6();\n            goto code_r0x00401e40;\n        }\n    }\n    fcn.00401bd6();\ncode_r0x00402599:\n    if (var_34h != NULL) {\n        fcn.0040a41c(var_34h);\n    }\n    return 0;\n}\n",
        "token_count": 5850
    },
    "00402915": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402915(uint arg_8h, uint arg_ch, ushort *arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_ch_00;\n    ushort *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *arg_8h_00;\n    bool bVar7;\n    uint var_c58h;\n    uint var_458h;\n    uint auStack1112 [255];\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint *var_4ch;\n    ushort *var_3ch;\n    uint var_38h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    \n    arg_8h_00 = &var_458h;\n    if (arg_14h != 0) {\n        fcn.0040a850(arg_8h_00, arg_14h);\n        iVar2 = fcn.0040a826(arg_8h_00);\n        iVar3 = auStack1112 + iVar2 * 2 + -2;\n        fcn.0040a850(iVar3, arg_14h);\n        iVar3 = fcn.0040a826(iVar3);\n        arg_8h_00 = auStack1112 + iVar3 * 2 + iVar2 * 2;\n    }\n    arg_ch_00 = fcn.00409b0b(0x85);\n    fcn.0040a850(arg_8h_00, arg_ch_00);\n    iVar3 = fcn.0040a826(arg_8h_00);\n    iVar3 = arg_8h_00 + iVar3 * 2 + 2;\n    fcn.0040a850(iVar3, 0x414308);\n    iVar2 = fcn.0040a826(iVar3);\n    *(iVar3 + 2 + iVar2 * 2) = 0;\n    fcn.0040a4a0(&var_58h, 0, 0x58);\n    var_54h = arg_8h;\n    var_50h = *0x418e88;\n    var_4ch = &var_458h;\n    var_58h = 0x58;\n    var_3ch = arg_10h;\n    var_38h = 0x400;\n    var_28h = arg_ch;\n    puVar4 = fcn.004072cf(arg_10h);\n    if (puVar4 == arg_10h) {\n        fcn.00413135(&var_c58h, 0x400);\n        var_2ch = &var_c58h;\n    }\n    pcVar1 = _sym.imp.COMDLG32.dll_GetOpenFileNameW;\n    var_24h = 0x1080c;\n    if (arg_18h == '\\0') {\n        uVar5 = (*_sym.imp.COMDLG32.dll_GetOpenFileNameW)(&var_58h);\n    }\n    else {\n        uVar5 = (*_sym.imp.COMDLG32.dll_GetSaveFileNameW)();\n    }\n    bVar7 = uVar5 == 0;\n    uVar6 = uVar5;\n    if (bVar7) {\n        uVar6 = (*_sym.imp.COMDLG32.dll_CommDlgExtendedError)();\n        if (uVar6 == 0x3002) {\n            *arg_10h = 0;\n            if (arg_18h == '\\0') {\n                uVar6 = (*pcVar1)(&var_58h);\n                uVar5 = uVar6;\n            }\n            else {\n                uVar6 = (*_sym.imp.COMDLG32.dll_GetSaveFileNameW)();\n                uVar5 = uVar6;\n            }\n        }\n        bVar7 = uVar5 == 0;\n    }\n    return uVar6 & 0xffffff00 | !bVar7;\n}\n",
        "token_count": 904
    },
    "0040e7bb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e7bb(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0x4144b6;\n    }\n    if (arg_ch == 0) {\n        arg_ch = 0x41437c;\n    }\n    iVar1 = in_ECX[1];\n    iVar2 = fcn.0040a5a0(arg_8h);\n    fcn.004012cc(iVar2 + 1);\n    fcn.0040a693(*in_ECX + iVar1, arg_8h);\n    iVar1 = in_ECX[5];\n    iVar2 = fcn.0040a826(arg_ch);\n    fcn.0040132c(iVar2 + 1);\n    fcn.0040a850(in_ECX[4] + iVar1 * 2, arg_ch);\n    in_ECX[8] = in_ECX[8] + 1;\n    return;\n}\n",
        "token_count": 250
    },
    "00402e4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_800h\n\nuint32_t __cdecl fcn.00402e4c(int32_t arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_800h;\n    \n    uVar2 = *0x424920;\n    if (*0x425a5a == '\\0') {\n        if (arg_8h == 2) {\n            iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*0x424920);\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n        }\n        in_EAX = fcn.004071cb(arg_ch, arg_10h, &var_800h, 0x400);\n        if (*0x42aa78 == '\\0') {\n            in_EAX = (*_sym.imp.USER32.dll_DialogBoxParamW)(*0x418e84, L\"GETPASSWORD1\", uVar2, fcn.0040b8c4, &var_800h);\n            if (in_EAX != 0) goto code_r0x0040c45d;\n            in_EAX = fcn.0040ae3a();\n            *0x424912 = 1;\n        }\n        else {\ncode_r0x0040c45d:\n            puVar3 = 0x42a978;\n            puVar4 = arg_14h;\n            for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            *puVar4 = *puVar3;\n        }\n        if (*(arg_14h + 0x40) == '\\0') goto code_r0x0040c485;\n        puVar4 = 0x42595a;\n        puVar3 = arg_14h;\n    }\n    else {\n        puVar3 = 0x42595a;\n        puVar4 = arg_14h;\n    }\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\ncode_r0x0040c485:\n    return in_EAX & 0xffffff00 | *(arg_14h + 0x40);\n}\n",
        "token_count": 615
    },
    "00402ebb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00402ebb(uint param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x4181c4 == 0) {\n        fcn.00402e51();\n    }\n    for (; (param_3 != 0 && ((param_2 & 7) != 0)); param_2 = param_2 + 1) {\n        param_3 = param_3 - 1;\n    }\n    if (7 < param_3) {\n        uVar1 = param_3 >> 3;\n        do {\n            param_3 = param_3 - 8;\n            uVar1 = uVar1 - 1;\n        } while (uVar1 != 0);\n    }\n    for (; param_3 != 0; param_3 = param_3 - 1) {\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00402fa6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall\nfcn.00402fa6(int32_t param_1, uint *param_2, int32_t param_3, char param_4, uint32_t param_5, uint param_6)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uchar *arg_8h;\n    uint *puVar6;\n    uint *puVar7;\n    uchar *puVar8;\n    bool bVar9;\n    uchar auStack728 [264];\n    uchar auStack464 [256];\n    uint auStack208 [39];\n    uchar auStack52 [16];\n    uchar uStack36;\n    uint32_t auStack32 [5];\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    if (*(param_2 + 0x40) != '\\0') {\n        iStack8 = param_1;\n        fcn.0040ae06(auStack464, 0x80);\n        if (param_5 == '\\0') {\n            uVar5 = 0;\n            param_5 = 0;\n            do {\n                cVar1 = fcn.0040ae98(param_2);\n                if (cVar1 != '\\0') {\n                    if (param_3 == 0) {\n                        if (*(uVar5 + 0x4186ea) == '\\0') {\ncode_r0x0040303c:\n                            if (*(uVar5 + 0x4186f3) == param_6) {\n                                iVar2 = param_5 * 300;\n                                arg_8h = param_1 + 0x21f;\n                                fcn.0040a4cd(arg_8h, iVar2 + 0x4185c8, 0x10);\n                                param_1 = param_1 + 0x22f;\n                                fcn.0040a4cd(param_1, iVar2 + 0x4185d8, 0x10);\n                                goto code_r0x00403226;\n                            }\n                        }\n                    }\n                    else if ((*(uVar5 + 0x4186ea) != '\\0') &&\n                            (iVar2 = fcn.0040a4ff(uVar5 + 0x4186eb, param_3, 8),  iVar2 == 0)) goto code_r0x0040303c;\n                }\n                param_5 = param_5 + 1;\n                uVar5 = uVar5 + 300;\n            } while (uVar5 < 0x4b0);\n            fcn.0040ecfd(auStack464, auStack728, 0x1000000);\n            iVar2 = fcn.0040a826(auStack464);\n            iVar2 = iVar2 * 2;\n            uVar5 = 0;\n            if (param_3 != 0) {\n                iStack12 = iVar2;\n                fcn.0040a4cd(auStack728 + iVar2, param_3, 8);\n                iVar2 = iVar2 + 8;\n            }\n            iStack12 = iVar2;\n            fcn.0040e2b8(auStack208);\n            do {\n                fcn.0040e2e9(auStack208, auStack728, iVar2, param_6);\n                param_5 = param_5 & 0xff000000 | (uVar5 >> 8 & 0xffff) << 8;\n                param_5 = param_5 | uVar5 & 0xff;\n                fcn.0040e2e9(auStack208, &param_5, 3, param_6);\n                uVar3 = uVar5 & 0x80003fff;\n                bVar9 = uVar3 == 0;\n                if (uVar3 < 0) {\n                    bVar9 = (uVar3 - 1 | 0xffffc000) == 0xffffffff;\n                }\n                if (bVar9) {\n                    puVar6 = auStack208;\n                    puVar7 = &stack0xfffffc8c;\n                    for (iVar2 = 0x27; iVar2 != 0; iVar2 = iVar2 + -1) {\n                        *puVar7 = *puVar6;\n                        puVar6 = puVar6 + 1;\n                        puVar7 = puVar7 + 1;\n                    }\n                    fcn.0040e397(&stack0xfffffc8c, auStack52, param_6);\n                    *((uVar5 + (uVar5 >> 0x1f & 0x3fffU) >> 0xe) + 0x22f + iStack8) = uStack36;\n                    iVar2 = iStack12;\n                    param_1 = iStack8;\n                }\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < 0x40000);\n            fcn.0040e397(auStack208, auStack32, param_6);\n            arg_8h = param_1 + 0x21f;\n            iVar2 = 0;\n            puVar8 = arg_8h;\n            do {\n                uVar5 = auStack32[iVar2];\n                param_5 = 0;\n                do {\n                    uVar3 = param_5 + 8;\n                    *puVar8 = uVar5 >> (param_5 & 0x1f);\n                    puVar8 = puVar8 + 1;\n                    param_5 = uVar3;\n                } while (uVar3 < 0x20);\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < 4);\n            iVar2 = *0x4185c0 * 300;\n            puVar6 = iVar2 + 0x4185e8;\n            for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar6 = *param_2;\n                param_2 = param_2 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            *puVar6 = *param_2;\n            *(iVar2 + 0x4186ea) = param_3 != 0;\n            if (param_3 != 0) {\n                fcn.0040a4cd(iVar2 + 0x4186eb, param_3, 8);\n            }\n            iVar2 = *0x4185c0 * 300;\n            *(iVar2 + 0x4186f3) = param_6;\n            fcn.0040a4cd(iVar2 + 0x4185c8, arg_8h, 0x10);\n            param_1 = iStack8 + 0x22f;\n            fcn.0040a4cd(*0x4185c0 * 300 + 0x4185d8, param_1, 0x10);\n            *0x4185c0 = *0x4185c0 + 1 & 3;\n            fcn.0040ae82(auStack728, 0x108);\ncode_r0x00403226:\n            fcn.0040a2ef(param_4 == '\\0', arg_8h, param_1);\n            fcn.0040ae82(auStack464, 0x100);\n        }\n        else {\n            fcn.0040ae82(auStack464, 0x100);\n        }\n    }\n    return;\n}\n",
        "token_count": 1658
    },
    "0040331d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0040331d(int32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = *arg_ch;\n    uVar6 = 1;\n    uVar4 = 0;\n    if (1 < arg_10h) {\n        do {\n            if (arg_18h <= uVar4) goto code_r0x004033f6;\n            uVar7 = uVar6;\n            if (*(in_ECX + 8) == 0) {\n                *(in_ECX + 4) = arg_ch[uVar6];\n                uVar7 = uVar6 + 1;\n                *(in_ECX + 8) = 8;\n            }\n            uVar3 = *(in_ECX + 4) >> 6;\n            if (uVar3 == 0) {\n                *(arg_14h + uVar4 * 2) = arg_ch[uVar7];\n                uVar4 = uVar4 + 1;\n                uVar6 = uVar7 + 1;\n            }\n            else if (uVar3 == 1) {\n                *(arg_14h + uVar4 * 2) = arg_ch[uVar7] + uVar1 * 0x100;\n                uVar4 = uVar4 + 1;\n                uVar6 = uVar7 + 1;\n            }\n            else if (uVar3 == 2) {\n                *(arg_14h + uVar4 * 2) = arg_ch[uVar7 + 1] * 0x100 + arg_ch[uVar7];\n                uVar4 = uVar4 + 1;\n                uVar6 = uVar7 + 2;\n            }\n            else {\n                uVar6 = uVar7;\n                if (uVar3 == 3) {\n                    uVar3 = arg_ch[uVar7];\n                    uVar6 = uVar7 + 1;\n                    if (uVar3 < '\\0') {\n                        uVar2 = arg_ch[uVar6];\n                        uVar6 = uVar7 + 2;\n                        var_ch = (uVar3 & 0x7f) + 2;\n                        if (var_ch != 0) {\n                            do {\n                                if (arg_18h <= uVar4) break;\n                                var_ch = var_ch + -1;\n                                *(arg_14h + uVar4 * 2) = (*(uVar4 + arg_8h) + uVar2 & 0xff) + uVar1 * 0x100;\n                                uVar4 = uVar4 + 1;\n                            } while (0 < var_ch);\n                        }\n                    }\n                    else {\n                        iVar5 = uVar3 + 2;\n                        for (; (0 < iVar5 && (uVar4 < arg_18h)); uVar4 = uVar4 + 1) {\n                            *(arg_14h + uVar4 * 2) = *(uVar4 + arg_8h);\n                            iVar5 = iVar5 + -1;\n                        }\n                    }\n                }\n            }\n            *(in_ECX + 4) = *(in_ECX + 4) << 2;\n            *(in_ECX + 8) = *(in_ECX + 8) + -2;\n        } while (uVar6 < arg_10h);\n    }\n    if (arg_18h <= uVar4) {\ncode_r0x004033f6:\n        uVar4 = arg_18h - 1;\n    }\n    *(arg_14h + uVar4 * 2) = 0;\n    return;\n}\n",
        "token_count": 909
    },
    "00403537": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403537(int32_t *param_1, int32_t param_2)\n\n{\n    if (param_2 == 1) {\ncode_r0x0040354a:\n        if (*param_1 != 0) goto code_r0x00403551;\n    }\n    else {\n        if (param_2 == 2) {\n            if ((*param_1 == 0) || (*param_1 == 1)) {\n                *param_1 = 2;\n            }\n            goto code_r0x00403551;\n        }\n        if (param_2 == 0xff) goto code_r0x0040354a;\n    }\n    *param_1 = param_2;\ncode_r0x00403551:\n    param_1[1] = param_1[1] + 1;\n    return;\n}\n",
        "token_count": 188
    },
    "0040356a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040356a(int32_t param_1, int32_t param_2)\n\n{\n    if ((param_2 != 0xff) || (*(param_1 + 8) != '\\0')) {\n        fcn.00403537(param_2);\n        fcn.00405d6e();\n        fcn.0040bf66();\n        fcn.0040aa8d(param_2);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "004035c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004035c4(uint arg_8h, uint arg_ch)\n\n{\n    uint ARG_1;\n    uint arglist;\n    uint var_800h;\n    \n    if (*0x418a78 == '\\0') {\n        fcn.004071cb(arg_8h, arg_ch, &var_800h, 0x400);\n        arglist = 0x76;\n        ARG_1 = fcn.00409b0b(0x76, &var_800h);\n        fcn.0040b986(0, ARG_1, arglist);\n    }\n    fcn.0040356a(2);\n    return;\n}\n",
        "token_count": 148
    },
    "00403617": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403617(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint lpText;\n    uint var_800h;\n    uint uStackY60;\n    uint uStackY56;\n    uint uStackY52;\n    uint arg_14h;\n    \n    uVar1 = fcn.00401200();\n    if (*(extraout_ECX + 9) == '\\0') {\n        fcn.004071cb(arg_8h, arg_ch, &fcn.00403617::var_800h, 0x400);\n        arg_14h = 0x74;\n        uVar2 = fcn.00409b0b();\n        uStackY52 = 0x403663;\n        fcn.0040aac4(&fcn.00403617::lpText, 0x500, uVar2, arg_14h);\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00409b0b();\n        uStackY52 = *0x42491c;\n        uStackY56 = 0x40368b;\n        iVar3 = (*_sym.imp.USER32.dll_MessageBoxW)();\n        uStackY60 = 0x403698;\n        uStackY56 = uVar2;\n        uVar1 = (*_sym.imp.KERNEL32.dll_SetLastError)();\n        uVar1 = uVar1 & 0xffffff00 | iVar3 == 4;\n    }\n    else {\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    return uVar1;\n}\n",
        "token_count": 376
    },
    "004036a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004036a4(uint arg_8h, uint arg_ch)\n\n{\n    uint ARG_1;\n    uint arglist;\n    uint var_800h;\n    \n    if (*0x418a78 == '\\0') {\n        fcn.004071cb(arg_8h, arg_ch, &var_800h, 0x400);\n        arglist = 0x204;\n        ARG_1 = fcn.00409b0b(0x204, &var_800h);\n        fcn.0040b986(0, ARG_1, arglist);\n    }\n    fcn.0040356a(2);\n    return;\n}\n",
        "token_count": 148
    },
    "00403c92": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403c92(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    \n    if (*(arg_8h + 0x2d7c) != '\\0') {\n        iVar1 = fcn.0040a705(arg_ch + 0x5820, 0x414378);\n        if (iVar1 == 0) {\n            fcn.00403be0(arg_ch, arg_10h, arg_14h);\n        }\n    }\n    iVar1 = fcn.0040a705(arg_ch + 0x5820, 0x414374);\n    if (iVar1 == 0) {\n        fcn.004039de(arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00403e43": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403e43(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    int32_t var_ch;\n    uint var_8h;\n    \n    fcn.00403d6a(0x10000);\n    uVar1 = fcn.004090e2(var_ch, var_8h);\n    while ((uVar1 != 0 && (uVar1 != 0xffffffff))) {\n        if ((arg_10h < 1) && ((0x7fffffff < arg_10h || (arg_ch <= uVar1)))) {\n            uVar1 = arg_ch;\n        }\n        fcn.00409244(var_ch, uVar1);\n        if (-1 < arg_10h) {\n            bVar2 = arg_ch < uVar1;\n            arg_ch = arg_ch - uVar1;\n            arg_10h = arg_10h - bVar2;\n        }\n        uVar1 = fcn.004090e2(var_ch, var_8h);\n    }\n    if (var_ch != 0) {\n        fcn.0040a41c(var_ch);\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "00403ec4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar fcn.00403ec4(uint32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    bool bVar1;\n    uint32_t arg_ch;\n    char cVar2;\n    uint8_t uVar3;\n    char cVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uchar *puVar9;\n    int32_t extraout_ECX;\n    uchar uVar10;\n    uint *puVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    uint32_t arg_8h;\n    ulong uVar14;\n    uchar auStackY15216 [3088];\n    char cStackY12128;\n    uchar auStackY9936 [2048];\n    uchar auStackY7888 [1024];\n    uchar auStackY6864 [19];\n    uchar uStackY6845;\n    uchar auStackY6835 [1025];\n    uchar auStackY5810 [2058];\n    ushort uStackY3752;\n    uchar auStackY1704 [1024];\n    uint auStackY680 [89];\n    uint uStackY324;\n    uint uStackY316;\n    uint uStackY312;\n    uint32_t uStackY308;\n    uchar *puStackY304;\n    uint32_t uStackY300;\n    uint uVar15;\n    uint uVar16;\n    uint32_t in_stack_ffffffe4;\n    uint32_t in_stack_ffffffe8;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    char cVar19;\n    char *arg_8h_00;\n    int32_t iVar20;\n    \n    fcn.00401200();\n    arg_ch = param_2;\n    arg_8h = param_1;\n    uVar8 = in_stack_ffffffe8 & 0xffffff00 | *(param_1 + 0x36d1);\n    uVar17 = uVar8;\n    if (param_3 == 0) {\n        if (*(extraout_ECX + 0x4ee) == '\\0') goto code_r0x00404e55;\n        in_stack_ffffffe4 = extraout_ECX + 0x28;\n        uVar17 = 0;\n        cVar2 = fcn.00412023(param_2, in_stack_ffffffe4, 0, uVar8);\n        if (cVar2 != '\\0') {\n            *(extraout_ECX + 0x1e61) = 0;\n            goto code_r0x00403f28;\n        }\ncode_r0x00403f10:\n        fcn.00403537();\ncode_r0x00404e55:\n        uVar10 = 0;\n    }\n    else {\ncode_r0x00403f28:\n        param_3 = *(arg_ch + 0x4ab4);\n        if (param_3 == 0x74) {\n            *(extraout_ECX + 0x125f) = 0;\n            if ((*(extraout_ECX + 0x1e61) != '\\0') ||\n               (((*(arg_8h + 0x2d50) == 0 && (*(*(arg_8h + 0x4f04) + 0x20) <= *(extraout_ECX + 0x554))) &&\n                (*(extraout_ECX + 0x559) != '\\0')))) goto code_r0x00404e55;\n            iVar6 = arg_ch + 0x4b10;\n            sub.USER32.dll_OemToCharA();\n            fcn.0040a693(&stack0xfffff958, arg_ch + 0x4b10);\n            uStackY3752 = 0;\n            in_stack_ffffffe4 = in_stack_ffffffe4 & 0xffffff;\n            iVar7 = fcn.00402bd3(arg_ch + 0x4ae0, &stack0xffffffe7, 5);\n            iVar20 = (iVar7 != 0) << 0x18;\n            if ((iVar7 != 0) && (in_stack_ffffffe4 >> 0x18 == '\\0')) {\n                *(extraout_ECX + 0x559) = 0;\n            }\n            if ((*(arg_ch + 0x4ae8) & 0x200) == 0) {\ncode_r0x0040409a:\n                param_2 = param_2 & 0xffffff;\n            }\n            else {\n                cVar2 = fcn.0040eef8();\n                param_2 = CONCAT13(1, param_2);\n                if (cVar2 == '\\0') goto code_r0x0040409a;\n            }\n            uVar8 = -(param_2._3_1_ != '\\0') & extraout_ECX + 0x1660U;\n            if (param_2._3_1_ != '\\0') {\n                fcn.00407426(arg_ch + 0x4f10, &stack0xfffff158);\n                cVar2 = fcn.0040eca0(&stack0xfffff158, &stack0xffffe130, 0x1000000);\n                if ((cVar2 != '\\0') && (cVar2 = fcn.00407977(),  cVar2 != '\\0')) {\n                    fcn.0040a693(&stack0xfffff958, &stack0xffffe130);\n                }\n            }\n            fcn.00407327(&stack0xfffff958, &stack0xfffff958);\n            cVar2 = fcn.00401c40();\n            if (cVar2 == '\\0') {\n                if ((*(arg_ch + 0x4ae8) & 0x800) == 0) {\n                    cVar2 = fcn.00401c2e();\n                    if ((cVar2 == '\\0') && (1 < *(arg_8h + 0x32ac))) {\ncode_r0x00404196:\n                        iVar20 = 0;\n                    }\n                }\n                else if ((*(arg_8h + 0x32ac) != 1) && (in_stack_ffffffe4 >> 0x18 == '\\0')) {\n                    if (*(arg_8h + 0x32ac) == 0) {\n                        iVar20 = 0;\n                    }\n                    iVar7 = fcn.00407b0e(&stack0xfffff958, &stack0xfffff158, 0);\n                    if (*(arg_8h + 0x32ac) + -1 != iVar7) goto code_r0x00404196;\n                    fcn.00407b0e(&stack0xfffff958, &stack0xfffff158, 1);\n                }\n                fcn.00401c59();\n                *(extraout_ECX + 0x4ee) = *(arg_ch + 0x4ae8) >> 1 & 1;\n                *(extraout_ECX + 0x4ef) = 0;\n                fcn.00405de9();\n                uVar18 = 0;\n                param_3 = param_3 & 0xffffff;\n                iVar7 = 0;\n                iVar12 = extraout_ECX;\n                if (iVar20 >> 0x18 == '\\0') {\n                    uVar3 = *(arg_ch + 0x71c1);\n                    iVar7 = uVar3 << 0x18;\n                    if (uVar3 != 0) goto code_r0x004041fe;\ncode_r0x00404e2b:\n                    if (*(iVar12 + 0x4ef) == '\\0') {\n                        if (param_3._3_1_ == '\\0') {\n                            if (*(arg_ch + 0x71c1) == '\\0') goto code_r0x00403fdd;\n                            if (uVar3 == 0) goto code_r0x00404e55;\n                        }\n                        goto code_r0x00403fe4;\n                    }\n                }\n                else {\ncode_r0x004041fe:\n                    cVar2 = fcn.0040b475(&stack0xfffff958, &stack0xfffff158, *(arg_8h + 0x2dea), uVar17 == 'I', \n                                         CONCAT31(in_stack_ffffffe4, iVar7 >> 0x18));\n                    if (cVar2 != '\\0') {\n                        if (((*(arg_ch + 0x4ae8) & 4) != 0) && (*(extraout_ECX + 0x125c) == '\\0')) {\n                            uVar16 = 1;\n                            cVar2 = fcn.00402e4c(1, &stack0xfffff958, &stack0xfffff158, extraout_ECX + 0x115c);\n                            if (cVar2 == '\\0') {\n                                fcn.0040b433(0, uVar16);\n                                fcn.0040e6b9();\n                                uVar15 = 0x73;\n                                uVar16 = fcn.00409b0b();\n                                fcn.0040b433(uVar16, uVar15);\n                                *(extraout_ECX + 0x1e60) = 1;\n                                goto code_r0x00404e55;\n                            }\n                        }\n                        arg_8h_00 = extraout_ECX + 0x1260;\n                        fcn.0040a693(arg_8h_00, arg_8h + 0x411);\n                        if (((*(arg_8h + 0x2d4c) == 4) && (uVar17 == 'X')) && (cVar2 = fcn.00406eb4(),  cVar2 != '\\0'))\n                        {\n                            param_3 = CONCAT13(1, param_3);\n                            *arg_8h_00 = '\\0';\n                        }\n                        else {\n                            param_3 = param_3 & 0xffffff;\n                        }\n                        if ((uVar17 == 'E') || (*(arg_8h + 0x2d4c) == 1)) {\n                            puVar9 = fcn.00407278();\n                        }\n                        else {\n                            puVar9 = &stack0xfffff958;\n                        }\n                        fcn.0040a7b6(arg_8h_00, puVar9);\n                        uVar3 = fcn.0040e518();\n                        uVar18 = uVar18 & 0xff000000 | uVar3 << 0x10;\n                        if (param_3._3_1_ != '\\0') {\n                            if (((*(extraout_ECX + 0x1261) == '_') && (cVar2 = fcn.00406e9c(),  cVar2 != '\\0')) &&\n                               ((uVar18 >> 0x10) + 0xbfU < 0x1a)) {\n                                *(extraout_ECX + 0x1261) = 0x3a;\n                            }\n                            else if ((*arg_8h_00 == '_') && (*(extraout_ECX + 0x1261) == '_')) {\n                                *arg_8h_00 = '\\\\';\n                                *(extraout_ECX + 0x1261) = 0x5c;\n                            }\n                        }\n                        if (param_2._3_1_ == '\\0') {\n                            *(extraout_ECX + 0x1660) = 0;\n                        }\n                        else {\n                            if (*(arg_8h + 0x812) == 0) {\n                                fcn.0040ecd2();\n                            }\n                            else {\n                                fcn.0040a850(extraout_ECX + 0x1660, arg_8h + 0x812);\n                            }\n                            if (param_3._3_1_ != '\\0') {\n                                *(extraout_ECX + 0x1660) = 0;\n                            }\n                            if ((uVar17 == 'E') || (*(arg_8h + 0x2d4c) == 1)) {\n                                puVar9 = fcn.004072cf();\n                            }\n                            else {\n                                puVar9 = &stack0xfffff158;\n                            }\n                            fcn.0040a8c2(0x4043dc, puVar9);\n                            if (((param_3._3_1_ != '\\0') && (*(extraout_ECX + 0x1662) == 0x5f)) &&\n                               (cVar2 = fcn.00406e9c(),  cVar2 != '\\0')) {\n                                *(extraout_ECX + 0x1662) = 0x3a;\n                            }\n                        }\n                        if (iVar7 >> 0x18 == '\\0') {\n                            param_3 = CONCAT13(1, param_3);\n                            if ((*(arg_ch + 0x4ae8) & 1) != 0) goto code_r0x00404425;\n                        }\n                        else {\ncode_r0x00404425:\n                            param_3 = param_3 & 0xffffff;\n                        }\n                        if (((*(arg_8h + 0x2d48) != '\\0') || (*(arg_8h + 0x2d49) != '\\0')) &&\n                           ((uVar17 == 'E' || (uVar17 == 'X')))) {\n                            fcn.004039b6();\n                            cVar2 = fcn.0040695b(arg_8h_00, uVar8, &stack0xffffc490);\n                            if (cVar2 == '\\0') {\n                                cVar2 = *(arg_8h + 0x2d48);\ncode_r0x004044a0:\n                                if (cVar2 != '\\0') {\ncode_r0x004044a2:\n                                    param_3 = param_3 & 0xffffff;\n                                }\n                            }\n                            else {\n                                cVar2 = fcn.0040ec42();\n                                if (cVar2 != '\\0') {\n                                    if (cStackY12128 != '\\0') {\n                                        cVar2 = fcn.0040ebe2();\n                                        goto code_r0x004044a0;\n                                    }\n                                    goto code_r0x004044a2;\n                                }\n                            }\n                        }\n                        if (((*(arg_ch + 0x4ae8) & 4) != 0) && (*(extraout_ECX + 0x125c) == '\\0')) {\n                            fcn.00403537();\n                            param_3 = param_3 & 0xffffff;\n                        }\n                        if (((*(arg_ch + 0x4b00) != '$') && (*(arg_ch + 0x4b00) != '\\x1d')) &&\n                           (*(arg_ch + 0x4b01) != '0')) {\n                            fcn.0040e6b9();\n                            uVar15 = 0x6c;\n                            uVar16 = fcn.00409b0b();\n                            fcn.0040b986(arg_ch + 0x41e, uVar16, uVar15);\n                            param_3 = param_3 & 0xffffff;\n                            fcn.00403537();\n                        }\n                        fcn.00405711();\n                        cVar2 = fcn.004060f8();\n                        if (cVar2 == '\\0') {\n                            cVar2 = fcn.00401c2e();\n                            cVar5 = uVar17;\n                            if (cVar2 == '\\0') {\n                                if ((*(arg_8h + 0x2dea) != '\\0') && (param_3._3_1_ != '\\0')) {\n                                    uVar18 = CONCAT13(1, uVar18);\n                                }\n                                if ((cVar5 != 'E') && (cVar5 != 'X')) goto code_r0x004048c5;\n                                if (param_3._3_1_ == '\\0') goto code_r0x004048cb;\n                                if ((*(arg_8h + 0x2dea) != '\\0') ||\n                                   (cVar2 = fcn.0040549a(arg_8h, &stack0xffffe530, arg_8h_00, uVar8, *(arg_8h + 0x2d28)\n                                                         , &stack0xfffffff2, *(arg_ch + 0x57c0), *(arg_ch + 0x57c4), \n                                                         *(arg_ch + 0x4afc), 1),  cVar2 != '\\0')) goto code_r0x004048c5;\n                                param_3 = param_3 & 0xffffff;\n                                if (uVar18 >> 0x10 == '\\0') {\n                                    fcn.00403772(arg_ch + 0x1d, arg_ch + 0x41e, arg_8h_00, extraout_ECX + 0x1660);\n                                    fcn.00403537();\n                                    cVar2 = fcn.00407977();\n                                    if ((cVar2 == '\\0') &&\n                                       ((param_2._3_1_ == '\\0' || (cVar2 = fcn.00406ee7(),  cVar2 == '\\0')))) {\n                                        uVar15 = 0x456;\n                                        uVar16 = fcn.00409b0b();\n                                        fcn.0040b986(arg_ch + 0x41e, uVar16, uVar15);\n                                        fcn.0040e57b();\n                                        uStackY300 = 0x404837;\n                                        uStackY300 = fcn.0040e494();\n                                        puStackY304 = &stack0xffffd930;\n                                        uStackY308 = 0x404844;\n                                        fcn.0040e5a3();\n                                        uStackY308 = 1;\n                                        uStackY316 = 0x40484e;\n                                        fcn.004079ff(arg_8h_00, 1);\n                                        if (param_2._3_1_ != '\\0') {\n                                            uStackY316 = 1;\n                                            uStackY324 = 0x40485e;\n                                            fcn.00406f51();\n                                        }\n                                        fcn.00406378();\n                                        cVar2 = fcn.0040549a(arg_8h, &stack0xffffe530, arg_8h_00, uVar8, \n                                                             *(arg_8h + 0x2d28), &stack0xfffffff2, *(arg_ch + 0x57c0), \n                                                             *(arg_ch + 0x57c4), *(arg_ch + 0x4afc), 1);\n                                        if (cVar2 == '\\0') {\n                                            fcn.00403772(arg_ch + 0x1d, arg_ch + 0x41e, arg_8h_00, extraout_ECX + 0x1660\n                                                        );\n                                            goto code_r0x004048c5;\n                                        }\n                                        param_3 = CONCAT13(1, param_3);\n                                        goto code_r0x00404912;\n                                    }\n                                }\n                                goto code_r0x004048cb;\n                            }\n                            if ((((param_3._3_1_ == '\\0') || (cVar5 == 'P')) ||\n                                ((cVar5 == 'E' || ((*(arg_8h + 0x2d4c) == 1 || (iVar7 >> 0x18 != '\\0')))))) ||\n                               (*(extraout_ECX + 0x54c) = *(extraout_ECX + 0x54c) + 1,  *(arg_8h + 0x2dea) != '\\0')) {\n                                fcn.004058fd();\n                                goto code_r0x00403fe4;\n                            }\n                            param_3 = fcn.004061a0(arg_8h_00, uVar8, *(arg_8h + 0x2d8f) == '\\0', *(arg_ch + 0x4b04));\n                            if (param_3 == 0) {\ncode_r0x0040466b:\n                                *(extraout_ECX + 0x125f) = 1;\n                            }\n                            else {\n                                uVar3 = fcn.00406088();\n                                param_1 = param_1 & 0xffffff | uVar3 << 0x18;\n                                if (uVar3 == 0) {\ncode_r0x00404616:\n                                    fcn.00406378();\n                                    param_3 = fcn.004061a0(arg_8h_00, uVar8, *(arg_8h + 0x2d8f) == '\\0', \n                                                           *(arg_ch + 0x4b04));\n                                }\n                                else {\n                                    fcn.004060fd();\n                                    cVar2 = fcn.004060e0();\n                                    if (cVar2 == '\\0') {\n                                        fcn.0040549a(arg_8h, 0, arg_8h_00, uVar8, *(arg_8h + 0x2d28), &stack0x00000007, \n                                                     *(arg_ch + 0x57c0), *(arg_ch + 0x57c4), *(arg_ch + 0x4afc), 0);\n                                        param_1 = param_1 & 0xffffff;\n                                    }\n                                    if (param_1._3_1_ == '\\0') goto code_r0x00404616;\n                                }\n                                if (param_3 == 0) goto code_r0x0040466b;\n                                if (param_1._3_1_ != '\\0') {\n                                    if (*(arg_8h + 0x2d8f) == '\\0') {\n                                        fcn.0040612a(arg_8h_00, uVar8, *(arg_ch + 0x4b04));\n                                    }\n                                    goto code_r0x0040466b;\n                                }\n                                fcn.0040e6b9();\n                                uVar15 = 0x6f;\n                                uVar16 = fcn.00409b0b();\n                                fcn.0040b986(arg_ch + 0x41e, uVar16, uVar15);\n                                fcn.004034a1(arg_8h_00, uVar8);\n                                fcn.0040359c();\n                                fcn.00403537();\n                            }\n                            if (*(extraout_ECX + 0x125f) != '\\0') {\n                                uStackY300 = -(*(arg_8h + 0x32b8) != 0) & arg_ch + 0x5748;\n                                puStackY304 = -(*(arg_8h + 0x32b4) != 0) & arg_ch + 0x5724;\n                                uStackY316 = 0x40470e;\n                                uStackY308 = uVar8;\n                                fcn.004063b0(arg_8h_00, uVar8, puStackY304, uStackY300, \n                                             -(*(arg_8h + 0x32bc) != 0) & arg_ch + 0x576c);\n                            }\n                            uVar10 = 1;\ncode_r0x00404710:\n                            fcn.004058fd();\n                            return uVar10;\n                        }\ncode_r0x004048c5:\n                        if (param_3._3_1_ == '\\0') {\ncode_r0x004048cb:\n                            uVar3 = iVar7 >> 0x18;\n                            cVar2 = iVar20 >> 0x18;\n                            if (*(arg_ch + 0x71c1) != '\\0') {\n                                iVar7 = 0x1000000;\n                                uVar18 = 0x1000000;\n                                param_3 = CONCAT13(1, param_3);\n                                cVar2 = fcn.0040b475(&stack0xfffff958, &stack0xfffff158, 0, 0, 1);\n                                iVar12 = iVar6;\n                                if (cVar2 == '\\0') {\n                                    uVar10 = 0;\n                                    goto code_r0x00404710;\n                                }\n                                goto code_r0x00404982;\n                            }\n                            if (param_3._3_1_ != '\\0') goto code_r0x00404912;\n                        }\n                        else {\ncode_r0x00404912:\n                            iVar12 = iVar6;\n                            if (iVar7 >> 0x18 == '\\0') {\n                                if (((uVar18 >> 0x18 == '\\0') && (uVar17 != 'P')) &&\n                                   (cVar2 = fcn.004058da(),  cVar2 != '\\0')) {\n                                    fcn.0040e6b9();\n                                    uVar15 = 0x406;\n                                    uVar16 = fcn.00409b0b();\n                                    uStackY300 = 0x40495a;\n                                    fcn.0040b986(arg_ch + 0x41e, uVar16, uVar15);\n                                    puStackY304 = 0x40497c;\n                                    fcn.004038bd();\n                                }\n                                *(extraout_ECX + 0x54c) = *(extraout_ECX + 0x54c) + 1;\n                                iVar12 = iVar6;\n                            }\ncode_r0x00404982:\n                            *(extraout_ECX + 0x550) = *(extraout_ECX + 0x550) + 1;\n                            *(extraout_ECX + 0x510) = 0;\n                            *(extraout_ECX + 0x514) = 0;\n                            *(extraout_ECX + 0x518) = 0;\n                            *(extraout_ECX + 0x51c) = 0;\n                            cVar2 = *(arg_ch + 0x71c0);\n                            *(extraout_ECX + 0x538) = 0xffffffff;\n                            *(extraout_ECX + 0x534) = (cVar2 != '\\0') - 1;\n                            fcn.0040ae71();\n                            uVar3 = iVar7 >> 0x18;\n                            cVar2 = iVar20 >> 0x18;\n                            cVar5 = uVar17;\n                            cVar19 = uVar18 >> 0x18;\n                            if (*(arg_ch + 0x4af4) == '\\0') {\n                                fcn.0040ae06();\n                                (*_sym.imp.USER32.dll_CharToOemBuffW)();\n                                fcn.0040ecd2();\n                                fcn.0040ae3a();\n                                fcn.0040ae82();\n                                fcn.0040ae82();\n                                iVar12 = extraout_ECX;\n                            }\n                            else {\n                                iVar6 = 0x40;\n                                puVar11 = extraout_ECX + 0x115c;\n                                puVar13 = &stack0xfffffd58;\n                                while( true ) {\n                                    uVar3 = iVar7 >> 0x18;\n                                    cVar2 = iVar20 >> 0x18;\n                                    cVar5 = uVar17;\n                                    cVar19 = uVar18 >> 0x18;\n                                    if (iVar6 == 0) break;\n                                    iVar6 = iVar6 + -1;\n                                    *puVar13 = *puVar11;\n                                    puVar11 = puVar11 + 1;\n                                    puVar13 = puVar13 + 1;\n                                }\n                                *puVar13 = *puVar11;\n                                arg_8h = param_1;\n                            }\n                            if ((*(arg_ch + 0x4ae8) & 4) == 0) {\n                                param_1 = 0;\n                            }\n                            else {\n                                param_1 = *(arg_ch + 0x4b00);\n                            }\n                            fcn.004092b2(param_1, &stack0xfffffd58, \n                                         -((*(arg_ch + 0x4ae8) & 0x400) != 0) & arg_ch + 0x571c, 0, \n                                         1 - (*(arg_ch + 0x4b00) < 0x24));\n                            *(iVar12 + 0x48) = *(arg_ch + 0x57b8);\n                            *(iVar12 + 0x4c) = *(arg_ch + 0x57bc);\n                            fcn.0040908c();\n                            *(iVar12 + 0x51) = cVar19;\n                            *(iVar12 + 0x52) = uVar3;\n                            if ((cVar19 == '\\0') && (*(arg_ch + 0x71d0) == '\\0')) {\n                                iVar6 = *(arg_ch + 0x57c4);\n                                uVar8 = *(arg_ch + 0x57bc) << 0xb | *(arg_ch + 0x57b8) >> 0x15;\n                                uVar17 = *(arg_ch + 0x57b8) << 0xb;\n                                if ((iVar6 <= uVar8) &&\n                                   ((iVar6 < uVar8 || (*(arg_ch + 0x57c0) <= uVar17 && uVar17 != *(arg_ch + 0x57c0)))))\n                                {\n                                    if ((-1 < iVar6) && ((0 < iVar6 || (99999999 < *(arg_ch + 0x57c0))))) {\n                                        uVar14 = fcn.00405e4d();\n                                        iVar6 = uVar14 >> 0x20;\n                                        if ((iVar6 < *(arg_ch + 0x57bc)) ||\n                                           ((iVar6 <= *(arg_ch + 0x57bc) &&\n                                            (uVar14 < *(arg_ch + 0x57b8) || uVar14 == *(arg_ch + 0x57b8)))))\n                                        goto code_r0x00404b5b;\n                                    }\n                                    fcn.00405e1f();\n                                }\n                            }\ncode_r0x00404b5b:\n                            uStackY6845 = *(arg_8h + 0x2d88) == '\\0';\n                            if (*(arg_8h + 0x2dea) == '\\0') {\n                                param_1 = CONCAT31(param_1._1_3_, 1);\n                                if (uVar3 != 0) goto code_r0x00404b7e;\n                            }\n                            else {\ncode_r0x00404b7e:\n                                param_1 = param_1 & 0xffffff00;\n                            }\n                            uVar17 = iVar12 + 0x28;\n                            cVar4 = fcn.0040ec9b();\n                            if (cVar4 == '\\0') {\n                                if ((*(arg_ch + 0x4ae8) & 1) == 0) {\n                                    if (*(arg_ch + 0x4b01) == '0') {\n                                        uVar17 = iVar12 + 0x28;\n                                        fcn.00403e43(uVar17, uVar17, *(arg_ch + 0x57c4));\n                                    }\n                                    else {\n                                        iVar6 = *(iVar12 + 0x548);\n                                        *(iVar6 + 0x9898) = *(arg_ch + 0x57c0);\n                                        *(iVar6 + 0x989c) = *(arg_ch + 0x57c4);\n                                        *(iVar6 + 0x98b0) = 0;\n                                        uVar17 = *(arg_ch + 0x4b00);\n                                        fcn.00411ff4();\n                                    }\n                                }\n                            }\n                            else {\n                                *(iVar12 + 0x125f) = param_1;\n                            }\n                            fcn.00401271();\n                            if (*(arg_ch + 0x71c0) == '\\0') {\ncode_r0x00404c3f:\n                                if (*(iVar12 + 0x534) == ~*(arg_ch + 0x4af8)) goto code_r0x00404c4f;\ncode_r0x00404c53:\n                                bVar1 = false;\n                            }\n                            else {\n                                if (*(iVar12 + 0x534) != *(arg_ch + 0x4af8)) {\n                                    if (*(arg_ch + 0x71c0) == '\\0') goto code_r0x00404c3f;\n                                    goto code_r0x00404c53;\n                                }\ncode_r0x00404c4f:\n                                bVar1 = true;\n                            }\n                            if ((*(arg_ch + 0x4ae8) & 0x10) == 0) {\n                                *(iVar12 + 0x55b) = 0;\n                            }\n                            else if ((((*(arg_ch + 0x4b01) != '0') && (-1 < *(arg_ch + 0x57c4))) &&\n                                     ((0 < *(arg_ch + 0x57c4) || (*(arg_ch + 0x57c0) != 0)))) && (bVar1)) {\n                                *(iVar12 + 0x55b) = 1;\n                            }\n                            param_1 = param_1 & 0xffffff;\n                            if ((uVar3 == 0) && (!bVar1)) {\n                                if (((*(arg_ch + 0x4ae8) & 4) == 0) || (*(iVar12 + 0x55b) != '\\0')) {\n                                    fcn.0040e6b9();\n                                }\n                                else {\n                                    fcn.0040e6b9();\n                                }\n                                uVar16 = fcn.00409b0b();\n                                uStackY300 = 0x404cee;\n                                fcn.0040b986(arg_ch + 0x41e, uVar16, uVar17);\n                                param_1 = CONCAT13(1, param_1);\n                                fcn.00403537();\n                                fcn.0040359c();\n                            }\n                            if ((cVar19 == '\\0') &&\n                               (((cVar5 == 'X' || (cVar5 == 'E')) && (cVar5 = fcn.004060f8(),  cVar5 == '\\0')))) {\n                                if (*(arg_8h + 0x2d44) != '\\0') {\n                                    *(arg_ch + 0x4b04) = *(arg_ch + 0x4b04) & 0xffffffdf;\n                                }\n                                if (param_1._3_1_ != '\\0') {\n                                    if (*(arg_8h + 0x2d88) == '\\0') goto code_r0x00404e09;\n                                    fcn.004058c7();\n                                }\n                                fcn.00405caa(-(*(arg_8h + 0x32b4) != 0) & arg_ch + 0x5724, \n                                             -(*(arg_8h + 0x32b8) != 0) & arg_ch + 0x5748, \n                                             -(*(arg_8h + 0x32bc) != 0) & arg_ch + 0x576c);\n                                fcn.00405783();\n                                uStackY300 = 0x404de0;\n                                fcn.004058d7();\n                                if (*(arg_8h + 0x2d8f) == '\\0') {\n                                    uStackY300 = *(arg_ch + 0x4b04);\n                                    puStackY304 = &stack0xffffe94e;\n                                    uStackY312 = 0x404e02;\n                                    fcn.0040612a(&stack0xffffe54d, puStackY304, uStackY300);\n                                }\n                                *(iVar12 + 0x125f) = 1;\n                            }\ncode_r0x00404e09:\n                            fcn.0040af11();\n                        }\n                        fcn.004058fd();\n                        if (cVar2 != '\\0') {\n                            *(iVar12 + 0x554) = *(iVar12 + 0x554) + 1;\n                        }\n                        goto code_r0x00404e2b;\n                    }\n                }\n                goto code_r0x00404e55;\n            }\n        }\n        else {\n            if ((param_3 == 0x76) || (param_3 == 0x79)) {\n                *(extraout_ECX + 0x1e61) = 1;\n            }\n            if (param_3 == 0x7a) {\n                iVar6 = fcn.0040a705(arg_ch + 0x5820, 0x414380);\n                if (iVar6 == 0) {\n                    *(extraout_ECX + 0x1e61) = 1;\n                }\n                if (*(extraout_ECX + 0x125f) != '\\0') {\n                    fcn.00403c92(arg_8h, arg_ch, extraout_ECX + 0x1260, \n                                 -(*(extraout_ECX + 0x1660U) != 0) & extraout_ECX + 0x1660U);\n                    goto code_r0x00403f96;\n                }\n            }\n            else {\ncode_r0x00403f96:\n                if (param_3 == 0x7b) {\n                    if ((*(arg_ch + 0x57d0) & 1) != 0) {\n                        cVar2 = fcn.00412023(arg_ch, extraout_ECX + 0x28, 0, uVar17);\n                        if (cVar2 != '\\0') {\n                            *(extraout_ECX + 0x1e61) = 0;\n                            fcn.00405de9();\n                            goto code_r0x00403fe4;\n                        }\n                        goto code_r0x00403f10;\n                    }\n                    goto code_r0x00404e55;\n                }\n            }\ncode_r0x00403fdd:\n            fcn.00401271();\n        }\ncode_r0x00403fe4:\n        uVar10 = 1;\n    }\n    return uVar10;\n}\n",
        "token_count": 8322
    },
    "00404e61": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404e61(uchar *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uchar *puVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    uint auStackY40596 [7];\n    uchar auStackY40567 [1025];\n    uchar auStackY39542 [18098];\n    uint8_t uStackY21444;\n    char cStackY11476;\n    char cStackY11474;\n    uchar auStackY8356 [3072];\n    uint32_t var_14a0h;\n    uint32_t var_149ch;\n    uint var_c00h;\n    uint var_400h;\n    uint uStackY84;\n    uint *puStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uint *puStackY64;\n    uint *puStackY60;\n    uchar *puStackY56;\n    uchar *puStackY52;\n    \n    fcn.00401200();\n    fcn.0040191b();\n    cVar3 = fcn.00405a67();\n    if (cVar3 != '\\0') {\n        cVar3 = fcn.00401373(1);\n        if (cVar3 != '\\0') {\n            iVar5 = 0;\n            uVar6 = 0;\n            if (cStackY11474 != '\\0') {\n                fcn.0040a693(&fcn.00404e61::var_400h, &stack0xffff6189);\n                puStackY52 = 0x404f0d;\n                uVar4 = fcn.0040a850(&fcn.00404e61::var_c00h, &stack0xffff658a);\n                while( true ) {\n                    if (((uStackY21444 & 0x10) == 0) || (cStackY11476 != '\\0')) {\n                        puStackY52 = 0x1;\n                    }\n                    else {\n                        puStackY52 = uVar4 & 0xffffff00;\n                    }\n                    puStackY56 = 0x400;\n                    puStackY60 = &fcn.00404e61::var_c00h;\n                    puStackY64 = &fcn.00404e61::var_400h;\n                    uStackY68 = 0x404f3f;\n                    fcn.00407738();\n                    uStackY68 = 0x404f4a;\n                    fcn.004039b6();\n                    uStackY68 = 0;\n                    puStackY72 = &stack0xffffdf5c;\n                    puStackY76 = &fcn.00404e61::var_c00h;\n                    uStackY84 = 0x404f66;\n                    cVar3 = fcn.0040695b(&fcn.00404e61::var_400h, puStackY76, puStackY72);\n                    if (cVar3 == '\\0') break;\n                    bVar7 = CARRY4(uVar6, var_14a0h);\n                    uVar6 = uVar6 + var_14a0h;\n                    iVar5 = iVar5 + var_149ch + bVar7;\n                    uVar4 = var_149ch;\n                }\n                puVar1 = extraout_ECX + 0x528;\n                uVar4 = *puVar1;\n                *puVar1 = *puVar1 + uVar6;\n                *(extraout_ECX + 0x52c) = *(extraout_ECX + 0x52c) + iVar5 + CARRY4(uVar4, uVar6);\n            }\n            puVar2 = arg_8h;\n            puStackY52 = &stack0xffff616c;\n            puStackY56 = arg_8h;\n            puStackY60 = 0x404f99;\n            fcn.00403dc2();\n            if ((puVar2[0x36d1] == 'T') || (puVar2[0x36d1] == 'I')) {\n                puVar2[0x2dea] = 1;\n            }\n            puStackY56 = 0x404fba;\n            fcn.0040359c();\n            do {\n                puStackY56 = 0x404fc5;\n                puStackY60 = fcn.00401d3e();\n                puStackY56 = &fcn.00404e61::arg_8h + 3;\n                puStackY64 = &stack0xffff616c;\n                puStackY52 = puVar2;\n                puStackY72 = 0x404fd9;\n                cVar3 = fcn.00403ec4();\n            } while (cVar3 != '\\0');\n            goto code_r0x00404fdd;\n        }\n        cVar3 = fcn.0040757d();\n        if (cVar3 == '\\0') goto code_r0x00404fdd;\n    }\n    puStackY56 = 0x404ea9;\n    fcn.00403537();\ncode_r0x00404fdd:\n    puStackY56 = 0x404fe8;\n    fcn.00401a8a();\n    return 0;\n}\n",
        "token_count": 1173
    },
    "00404ff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404ff0(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    char cVar3;\n    uint ARG_1;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uchar auStackY5548 [3072];\n    uint32_t uStackY2476;\n    int32_t iStackY2472;\n    uint auStackY268 [48];\n    uint uStackY76;\n    int32_t iStackY68;\n    uint uStackY64;\n    uint arglist;\n    int32_t arg_ch;\n    \n    fcn.00401200();\n    *(extraout_ECX + 0x1e60) = 0;\n    *(extraout_ECX + 0x4ec) = *(param_1 + 0x36d1);\n    fcn.004039b6();\n    arg_ch = extraout_ECX + 0x95c;\n    while (cVar3 = fcn.00402b4a(),  cVar3 != '\\0') {\n        cVar3 = fcn.0040695b(extraout_ECX + 0x55c, arg_ch, &stack0xffffea54);\n        if (cVar3 != '\\0') {\n            puVar1 = extraout_ECX + 0x528;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 + uStackY2476;\n            *(extraout_ECX + 0x52c) = *(extraout_ECX + 0x52c) + iStackY2472 + CARRY4(uVar2, uStackY2476);\n        }\n    }\n    fcn.0040e78d();\n    cVar3 = fcn.00402b4a();\n    while (cVar3 != '\\0') {\n        fcn.0040ae71();\n        while( true ) {\n            puVar6 = param_1 + 0x281c;\n            puVar7 = &stack0xfffffef4;\n            for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar7 = *puVar6;\n                puVar6 = puVar6 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = *puVar6;\n            iVar4 = fcn.00404e61(param_1);\n            puVar6 = &stack0xfffffef4;\n            puVar7 = param_1 + 0x281c;\n            for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = *puVar6;\n                puVar6 = puVar6 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = *puVar6;\n            if (iVar4 != 1) break;\n            fcn.0040af11();\n            fcn.0040ae71();\n        }\n        fcn.0040af11();\n        uStackY64 = 0x405122;\n        cVar3 = fcn.0040695b(extraout_ECX + 0x55c, arg_ch, &stack0xffffea54);\n        iStackY68 = arg_ch;\n        if (cVar3 != '\\0') {\n            puVar1 = extraout_ECX + 0x520;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 + uStackY2476;\n            *(extraout_ECX + 0x524) = *(extraout_ECX + 0x524) + iStackY2472 + CARRY4(uVar2, uStackY2476);\n        }\n        uStackY64 = 0x400;\n        uStackY76 = 0x40514e;\n        arg_ch = iStackY68;\n        cVar3 = fcn.00402b4a();\n    }\n    if ((*(extraout_ECX + 0x54c) == 0) && (*(param_1 + 0x36d1) != 'I')) {\n        if (*(extraout_ECX + 0x1e60) == '\\0') {\n            arglist = 0x343;\n            ARG_1 = fcn.00409b0b();\n            fcn.0040b986(arg_ch, ARG_1, arglist);\n        }\n        fcn.00403537();\n    }\n    return;\n}\n",
        "token_count": 1021
    },
    "0040519e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040519e(char *arg_8h, int16_t *arg_ch)\n\n{\n    char *arg_8h_00;\n    int16_t *arg_8h_01;\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_c00h;\n    uint var_400h;\n    \n    arg_8h_01 = arg_ch;\n    arg_8h_00 = arg_8h;\n    if (((arg_8h == NULL) || (uVar2 = fcn.0040a5a0(arg_8h),  uVar2 < 0x3f7)) &&\n       ((arg_ch == NULL || (uVar2 = fcn.0040a826(arg_ch),  uVar2 < 0x3f7)))) {\n        arg_8h = NULL;\n        if (((arg_8h_00 != NULL) && (*arg_8h_00 != '\\0')) && (arg_8h = fcn.00407545(arg_8h_00),  arg_8h == NULL)) {\n            iVar3 = fcn.0040a5a0(arg_8h_00);\n            arg_8h = arg_8h_00 + iVar3;\n        }\n        arg_ch = NULL;\n        if (((arg_8h_01 != NULL) && (*arg_8h_01 != 0)) && (arg_ch = fcn.00407561(arg_8h_01),  arg_ch == NULL)) {\n            iVar3 = fcn.0040a826(arg_8h_01);\n            arg_ch = arg_8h_01 + iVar3;\n        }\n        var_400h._0_1_ = 0;\n        var_c00h._0_2_ = 0;\n        iVar3 = 1;\n        while( true ) {\n            if ((arg_8h_00 != NULL) && (*arg_8h_00 != '\\0')) {\n                fcn.0040aa9d(&var_400h, \"%.*s(%d)%s\", arg_8h - arg_8h_00);\n            }\n            if ((arg_8h_01 != NULL) && (*arg_8h_01 != 0)) {\n                fcn.0040aac4(&var_c00h, 0x400, 0x414388, arg_ch - arg_8h_01 >> 1);\n            }\n            cVar1 = fcn.00406088();\n            if (cVar1 == '\\0') {\n                if ((arg_8h_00 != NULL) && (*arg_8h_00 != '\\0')) {\n                    fcn.0040a693(arg_8h_00, &var_400h);\n                }\n                if ((arg_8h_01 != NULL) && (*arg_8h_01 != 0)) {\n                    fcn.0040a850(arg_8h_01, &var_c00h);\n                }\n                return 1;\n            }\n            if (999999 < iVar3) break;\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 709
    },
    "0040549a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0040549a(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, uint *arg_14h, int32_t arg_18h, uchar *arg_1ch, uint arg_20h\n            , uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *arg_ch_00;\n    uint var_c04h;\n    uint var_404h;\n    uint var_1h;\n    \n    if (arg_1ch != NULL) {\n        *arg_1ch = 0;\n    }\n    var_1h._0_1_ = '\\0';\n    puVar3 = arg_10h;\n    arg_ch_00 = arg_14h;\n    cVar1 = fcn.00406088(arg_10h);\n    do {\n        if (cVar1 == '\\0') {\ncode_r0x0040568e:\n            iVar5 = (arg_2ch != '\\0') + 9;\n            if ((arg_ch == 0) || (cVar1 = fcn.00405a95(arg_10h, arg_14h, iVar5),  cVar1 == '\\0')) {\n                fcn.004064f3(arg_10h, arg_14h, puVar3);\n                fcn.00406378(arg_10h, arg_14h, 1);\n                if (arg_ch == 0) {\n                    uVar4 = fcn.0040616e(arg_10h, arg_14h);\n                }\n                else {\n                    uVar4 = fcn.00405a95(arg_10h, arg_14h, iVar5);\n                }\n            }\n            else {\n                uVar4 = 1;\n            }\n            return uVar4;\n        }\n        if (var_1h == '\\0') {\n            var_1h._0_1_ = '\\x01';\n            fcn.004071cb(arg_10h, arg_14h, &var_c04h, 0x400);\n            puVar3 = &var_c04h;\n            cVar1 = fcn.004052ec(puVar3);\n            if (cVar1 == '\\0') goto code_r0x00405538;\n            if ((arg_10h != NULL) && (*arg_10h != '\\0')) {\n                fcn.0040eca0(&var_c04h, arg_10h, 0x1000000);\n            }\n            if ((arg_14h != NULL) && (puVar3 = arg_14h,  *arg_14h != 0)) {\ncode_r0x0040552e:\n                fcn.0040a850(puVar3, arg_ch_00);\n            }\n        }\n        else {\ncode_r0x00405538:\n            var_1h._0_1_ = '\\0';\n            if (arg_18h == 2) {\ncode_r0x004056b0:\n                if (arg_1ch != NULL) {\n                    *arg_1ch = 1;\n                }\n                return 0;\n            }\n            if (arg_18h == 3) {\n                cVar1 = fcn.0040519e(arg_10h, arg_14h);\n                if (cVar1 == '\\0') {\n                    arg_18h = 0;\n                }\n            }\n            else {\n                if ((*(arg_8h + 0x2d70) != '\\0') || (arg_18h == 1)) goto code_r0x0040568e;\n                if ((arg_18h == 0) || (arg_18h == 4)) {\n                    var_c04h._0_2_ = 0;\n                    fcn.0040a693(&var_404h, arg_10h);\n                    uVar4 = fcn.0040e494(arg_14h);\n                    fcn.0040a850(&var_c04h, uVar4);\n                    cVar1 = fcn.0040c34e(&var_404h, &var_c04h, arg_20h, arg_24h, arg_28h);\n                    puVar3 = *0x416000;\n                    iVar5 = fcn.0040a5c9(*0x416000, cVar1);\n                    iVar5 = iVar5 + (1 - *0x416000);\n                    if (iVar5 == 1) goto code_r0x0040568e;\n                    if (iVar5 == 2) goto code_r0x004056b0;\n                    if (iVar5 == 3) {\n                        *(arg_8h + 0x2d28) = 1;\n                        goto code_r0x0040568e;\n                    }\n                    if (iVar5 == 4) {\n                        if (arg_1ch != NULL) {\n                            *arg_1ch = 1;\n                        }\n                        *(arg_8h + 0x2d28) = 2;\n                        return 0;\n                    }\n                    if (iVar5 == 5) {\n                        puVar2 = fcn.00407278(&var_404h);\n                        puVar3 = arg_10h;\n                        if (puVar2 == &var_404h) {\n                            puVar3 = fcn.00407278();\n                        }\n                        fcn.0040a693(puVar3, arg_ch_00);\n                        if (arg_14h != NULL) {\n                            puVar2 = fcn.004072cf(&var_c04h);\n                            if (puVar2 == &var_c04h) {\n                                fcn.004072cf(arg_14h, &var_c04h);\n                            }\n                            goto code_r0x0040552e;\n                        }\n                    }\n                    else if (iVar5 == 6) {\n                        fcn.00403897();\n                    }\n                }\n            }\n        }\n        puVar3 = arg_10h;\n        cVar1 = fcn.00406088();\n    } while( true );\n}\n",
        "token_count": 1380
    },
    "0040575c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040575c(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    if (param_2 != -1) {\n        uVar1 = 0;\n        do {\n            if (*(uVar1 * 4 + 0x418a80) == 0) {\n                *(uVar1 * 4 + 0x418a80) = param_1;\n                return;\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < 0x100);\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00405bb7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405bb7(uint lpBuffer, uint32_t nNumberOfBytesToRead)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t lpNumberOfBytesRead;\n    \n    lpNumberOfBytesRead = in_ECX;\n    if (*(in_ECX + 0xc) == 1) {\n        if (20000 < nNumberOfBytesToRead) {\n            nNumberOfBytesToRead = 20000;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n        *(in_ECX + 4) = uVar2;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(in_ECX + 4), lpBuffer, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n    if (iVar3 == 0) {\n        cVar1 = fcn.004058da();\n        if ((cVar1 == '\\0') || (nNumberOfBytesToRead < 0x4e21)) {\n            if ((*(in_ECX + 0xc) == 1) && (iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 == 0x6d)) {\n                lpNumberOfBytesRead = 0;\n            }\n            else {\n                lpNumberOfBytesRead = -1;\n            }\n        }\n        else {\n            lpNumberOfBytesRead = fcn.00405bb7(lpBuffer, 20000);\n        }\n    }\n    return lpNumberOfBytesRead;\n}\n",
        "token_count": 349
    },
    "00405c36": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405c36(uint lDistanceToMove, int32_t arg_ch, int32_t dwMoveMethod)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int64_t iVar3;\n    uint lpDistanceToMoveHigh;\n    \n    iVar1 = CONCAT44(arg_ch, lDistanceToMove);\n    if (*(in_ECX + 4) != -1) {\n        if (((arg_ch < 1) && (arg_ch < 0)) && (dwMoveMethod != 0)) {\n            if (dwMoveMethod == 1) {\n                iVar3 = fcn.00405838();\n            }\n            else {\n                iVar3 = fcn.00405e4d();\n            }\n            iVar1 = iVar3 + iVar1;\n            dwMoveMethod = 0;\n        }\n        lpDistanceToMoveHigh = iVar1 >> 0x20;\n        lDistanceToMove = iVar1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)\n                          (*(in_ECX + 4), lDistanceToMove, &lpDistanceToMoveHigh, dwMoveMethod);\n        if ((iVar2 == -1) && (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0)) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 301
    },
    "00405caa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405caa(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t in_ECX;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    if ((*(in_ECX + 0x18) != 0x100) && ((*(in_ECX + 0x18) & 2) == 0)) {\n        (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(*(in_ECX + 4));\n    }\n    if ((arg_8h == NULL) || (bVar2 = true,  *arg_8h == 0)) {\n        bVar2 = false;\n    }\n    if ((arg_ch == NULL) || (bVar3 = true,  *arg_ch == 0)) {\n        bVar3 = false;\n    }\n    if ((arg_10h == NULL) || (*arg_10h == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar2) {\n        fcn.0040e9a0(&var_ch);\n    }\n    if (bVar3) {\n        fcn.0040e9a0(&var_1ch);\n    }\n    if (bVar1) {\n        fcn.0040e9a0(&var_14h);\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(*(var_4h + 4), -bVar3 & &var_1ch, -bVar1 & &var_14h, -bVar2 & &var_ch);\n    return;\n}\n",
        "token_count": 412
    },
    "00405d6e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t fcn.00405d6e(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    *0x418e80 = *0x418e80 + 1;\n    _auStack8 = 0x1000000;\n    uVar2 = 0;\n    do {\n        uVar1 = *(uVar2 + 0x418a80);\n        if (uVar1 != 0) {\n            *(uVar1 + 0x14) = 0;\n            if (*(*(uVar2 + 0x418a80) + 0x12) == '\\0') {\n                uVar1 = fcn.00405783();\n            }\n            else {\n                uVar1 = fcn.00405808();\n            }\n            if (uVar1 == '\\0') {\n                _auStack8 = 0;\n            }\n            else {\n                *(uVar2 + 0x418a80) = 0;\n            }\n        }\n        uVar2 = uVar2 + 4;\n    } while (uVar2 < 0x400);\n    *0x418e80 = *0x418e80 + -1;\n    return uVar1 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 316
    },
    "00405e88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e88(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint uVar6;\n    uint32_t var_4h;\n    \n    if (arg_ch == 0) {\n        return;\n    }\n    iVar4 = *(in_ECX + 0xc);\n    pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n    if (iVar4 != 0) {\n        if (iVar4 == 1) {\n            uVar6 = 0xfffffff5;\n        }\n        else {\n            if (iVar4 != 2) goto code_r0x00405ebd;\n            uVar6 = 0xfffffff4;\n        }\n        uVar6 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(uVar6);\n        *(in_ECX + 4) = uVar6;\n        pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n    }\ncode_r0x00405ebd:\n    do {\n        uVar5 = 0;\n        var_4h = 0;\n        if (*(in_ECX + 0xc) == 0) {\n            iVar4 = (*pcVar1)(*(in_ECX + 4), arg_8h, arg_ch, &var_4h, 0);\n            cVar2 = '\\x01' - (iVar4 != 1);\ncode_r0x00405f1b:\n            if (cVar2 != '\\0') goto code_r0x00405f92;\n        }\n        else if (arg_ch != 0) {\n            do {\n                uVar3 = 0x4000;\n                if (arg_ch - uVar5 < 0x4000) {\n                    uVar3 = arg_ch - uVar5;\n                }\n                iVar4 = (*pcVar1)(*(in_ECX + 4), arg_8h + uVar5, uVar3, &var_4h, 0);\n                cVar2 = '\\x01' - (iVar4 != 1);\n                if (cVar2 == '\\0') goto code_r0x00405f1f;\n                uVar5 = uVar5 + 0x4000;\n            } while (uVar5 < arg_ch);\n            goto code_r0x00405f1b;\n        }\ncode_r0x00405f1f:\n        if ((*(in_ECX + 0x14) == '\\0') || (*(in_ECX + 0xc) != 0)) goto code_r0x00405f92;\n        cVar2 = fcn.00403617(in_ECX + 0x1d, in_ECX + 0x41e);\n        if (cVar2 == '\\0') {\n            fcn.004038bd(0, 0, in_ECX + 0x1d, in_ECX + 0x41e);\ncode_r0x00405f92:\n            *(in_ECX + 8) = 1;\n            return;\n        }\n        if ((var_4h < arg_ch) && (var_4h != 0)) {\n            fcn.00405838(0);\n            fcn.00405de9();\n        }\n    } while( true );\n}\n",
        "token_count": 753
    },
    "00406088": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00406088(int32_t param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.00406a2a();\n    if (((iVar1 == 0) || (param_2 == NULL)) || (*param_2 == 0)) {\n        if ((param_1 != 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1),  iVar1 != -1)) {\n            return 1;\n        }\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_2);\n        uVar2 = uVar2 & 0xffffff00 | uVar2 != 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 195
    },
    "004060fd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004060fd(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406a2a();\n    if (((iVar1 == 0) || (param_2 == NULL)) || (*param_2 == 0)) {\n        (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_2);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "0040612a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040612a(int32_t lpFileName, int16_t *arg_ch, uint dwFileAttributes)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    \n    piVar1 = fcn.00406a2a();\n    if (((piVar1 == NULL) || (piVar1 = arg_ch,  arg_ch == NULL)) || (*arg_ch == 0)) {\n        if (lpFileName == 0) {\n            return piVar1 & 0xffffff00;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(lpFileName, dwFileAttributes);\n    }\n    else {\n        uVar2 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(arg_ch, dwFileAttributes);\n    }\n    return uVar2 & 0xffffff00 | uVar2 != 0;\n}\n",
        "token_count": 196
    },
    "0040616e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.0040616e(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.00406a2a();\n    if (((iVar1 == 0) || (param_2 == NULL)) || (*param_2 == 0)) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n    }\n    else {\n        uVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(param_2);\n    }\n    return uVar2 & 0xffffff00 | uVar2 != 0;\n}\n",
        "token_count": 149
    },
    "0040620c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040620c(char *arg_8h, uint arg_ch)\n\n{\n    char *arg_ch_00;\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_400h;\n    \n    arg_ch_00 = arg_8h;\n    if ((arg_8h == NULL) || (*arg_8h == '\\0')) {\n        uVar3 = in_EAX & 0xffffff00;\n    }\n    else {\n        arg_8h = 0x1000000;\n        pcVar2 = arg_ch_00;\n        do {\n            iVar4 = pcVar2 - arg_ch_00;\n            if (0x3ff < iVar4) break;\n            cVar1 = fcn.00406e9c(*pcVar2);\n            if (cVar1 != '\\0') {\n                fcn.0040a6c7(&var_400h, arg_ch_00, iVar4);\n                *(&var_400h + iVar4) = 0;\n                iVar4 = fcn.004061a0(&var_400h, 0, 1, 0);\n                if (iVar4 != 0) {\n                    arg_8h = NULL;\n                }\n            }\n            in_EAX = fcn.00401c80();\n            pcVar2 = in_EAX;\n        } while (*in_EAX != '\\0');\n        if (arg_ch == '\\0') {\n            pcVar2 = fcn.0040730b(arg_ch_00);\n            in_EAX = fcn.00406e9c(*pcVar2);\n            if (in_EAX == '\\0') {\n                in_EAX = fcn.004061a0(arg_ch_00, 0, 1, 0);\n                if (in_EAX != NULL) {\n                    arg_8h = NULL;\n                }\n            }\n        }\n        uVar3 = in_EAX & 0xffffff00 | arg_8h >> 0x18;\n    }\n    return uVar3;\n}\n",
        "token_count": 467
    },
    "004062c3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004062c3(int16_t *arg_8h, uint arg_ch)\n\n{\n    int16_t *arg_ch_00;\n    uint32_t in_EAX;\n    ushort *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t arg_10h;\n    uint var_800h;\n    \n    arg_ch_00 = arg_8h;\n    iVar3 = 0;\n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        uVar2 = in_EAX & 0xffffff00;\n    }\n    else {\n        arg_8h = 0x1000000;\n        do {\n            arg_10h = iVar3 >> 1;\n            if (0x3ff < arg_10h) break;\n            in_EAX = fcn.00406e9c(*(iVar3 + arg_ch_00));\n            if (in_EAX != '\\0') {\n                fcn.0040a880(&var_800h, arg_ch_00, arg_10h);\n                *(&var_800h + arg_10h * 2) = 0;\n                in_EAX = fcn.004061a0(0, &var_800h, 1, 0);\n                if (in_EAX != 0) {\n                    arg_8h = NULL;\n                }\n            }\n            iVar3 = iVar3 + 2;\n        } while (*(iVar3 + arg_ch_00) != 0);\n        if (arg_ch == '\\0') {\n            puVar1 = fcn.00406e46(arg_ch_00);\n            in_EAX = fcn.00406e9c(*puVar1);\n            if (in_EAX == '\\0') {\n                in_EAX = fcn.004061a0(0, arg_ch_00, 1, 0);\n                if (in_EAX != 0) {\n                    arg_8h = NULL;\n                }\n            }\n        }\n        uVar2 = in_EAX & 0xffffff00 | arg_8h >> 0x18;\n    }\n    return uVar2;\n}\n",
        "token_count": 478
    },
    "00406378": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00406378(char *param_1, int16_t *param_2, uint param_3)\n\n{\n    uint32_t uVar1;\n    \n    if ((param_2 == NULL) || (*param_2 == 0)) {\n        if ((param_1 == NULL) || (*param_1 == '\\0')) {\n            uVar1 = param_1 & 0xffffff00;\n        }\n        else {\n            uVar1 = fcn.0040620c(param_1, param_3);\n        }\n    }\n    else {\n        uVar1 = fcn.004062c3(param_2, param_3);\n    }\n    return uVar1;\n}\n",
        "token_count": 152
    },
    "00406535": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00406535(char *param_1, int32_t param_2)\n\n{\n    if (param_2 != 0) {\n        fcn.0040a850(param_1 + 0x400, param_2);\n        if (*param_1 == '\\0') {\n            fcn.0040eca0(param_2, param_1, 0x1000000);\n        }\n        param_1[0xc00] = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0040656b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040656b(int32_t param_1, char *param_2, int16_t *param_3, int32_t param_4)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *lpFileTime;\n    bool bVar4;\n    int64_t iVar5;\n    int32_t arg_ch;\n    uchar auStack2644 [1024];\n    uchar auStack1620 [1024];\n    uint uStack596;\n    uint uStack592;\n    uint uStack588;\n    uint uStack584;\n    uint uStack580;\n    uint uStack576;\n    uint uStack572;\n    uint uStack568;\n    uchar auStack552 [228];\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uchar auStack280 [248];\n    uchar auStack32 [12];\n    uchar auStack20 [16];\n    \n    iVar2 = fcn.00406a2a();\n    if (iVar2 == 0) {\n        if ((param_2 == NULL) || (*param_2 == '\\0')) {\n            fcn.0040eca0(param_3, auStack1620, 0x1000000);\n        }\n        else {\n            fcn.0040a693(auStack1620, param_2);\n        }\n        if (param_1 == -1) {\n            param_1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(auStack1620);\n            if (param_1 == -1) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                if (iVar2 != 2) {\n                    bVar4 = iVar2 == 3;\n                    goto code_r0x004065f0;\n                }\n                goto code_r0x004065f7;\n            }\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(param_1, &uStack324);\n            if (iVar2 == 0) {\n                param_1 = -1;\n                iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                *(param_4 + 0x149c) = iVar2 != 0x12;\n            }\n            if (param_1 == -1) goto code_r0x004068af;\n        }\n        fcn.0040a693(param_4, auStack1620);\n        iVar2 = param_4;\n        uVar3 = fcn.00407278(param_4, auStack280);\n        fcn.0040a693(uVar3, iVar2);\n        fcn.0040ecd2(param_4, param_4 + 0x400, 0x1000000);\n        iVar5 = fcn.00401030(uStack296, 0, 0, 1);\n        *(param_4 + 0xc00) = iVar5 + -0x124;\n        *(param_4 + 0xc08) = uStack324;\n        *(param_4 + 0xc04) = iVar5 + -0x124 >> 0x20;\n        fcn.0040ecd2(auStack20, param_4 + 0xc80, 0x1000000);\n        *(param_4 + 0x1480) = uStack320;\n        *(param_4 + 0x1484) = uStack316;\n        *(param_4 + 0x1488) = uStack312;\n        *(param_4 + 0x148c) = uStack308;\n        *(param_4 + 0x1490) = uStack304;\n        *(param_4 + 0x1494) = uStack300;\n        fcn.0040eaf8(&uStack304);\n        fcn.0040eaf8(&uStack320);\n        lpFileTime = &uStack312;\n    }\n    else {\n        if ((param_3 == NULL) || (*param_3 == 0)) {\n            fcn.0040ecd2(param_2, auStack2644, 0x1000000);\n        }\n        else {\n            fcn.0040a850(auStack2644, param_3);\n        }\n        if (param_1 == -1) {\n            param_1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(auStack2644);\n            if (param_1 == -1) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                if ((iVar2 == 2) || (iVar2 == 3)) {\ncode_r0x004065f7:\n                    uVar1 = 0;\n                }\n                else {\n                    bVar4 = iVar2 == 0x12;\ncode_r0x004065f0:\n                    if (bVar4) goto code_r0x004065f7;\n                    uVar1 = 1;\n                }\n                *(param_4 + 0x149c) = uVar1;\n                goto code_r0x004068af;\n            }\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(param_1, &uStack596);\n            if (iVar2 == 0) {\n                param_1 = -1;\n                iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                *(param_4 + 0x149c) = iVar2 != 0x12;\n            }\n            if (param_1 == -1) goto code_r0x004068af;\n        }\n        iVar2 = param_4 + 0x400;\n        fcn.0040a850(iVar2, auStack2644);\n        arg_ch = iVar2;\n        uVar3 = fcn.004072cf(iVar2, auStack552);\n        fcn.0040a850(uVar3, arg_ch);\n        fcn.0040eca0(iVar2, param_4, 0x1000000);\n        iVar5 = fcn.00401030(uStack568, 0, 0, 1);\n        *(param_4 + 0xc00) = iVar5 + -0x234;\n        *(param_4 + 0xc08) = uStack596;\n        *(param_4 + 0xc04) = iVar5 + -0x234 >> 0x20;\n        fcn.0040a850(param_4 + 0xc80, auStack32);\n        *(param_4 + 0x1480) = uStack592;\n        *(param_4 + 0x1484) = uStack588;\n        *(param_4 + 0x1488) = uStack584;\n        *(param_4 + 0x148c) = uStack580;\n        *(param_4 + 0x1490) = uStack576;\n        *(param_4 + 0x1494) = uStack572;\n        fcn.0040eaf8(&uStack576);\n        fcn.0040eaf8(&uStack592);\n        lpFileTime = &uStack584;\n    }\n    fcn.0040eaf8(lpFileTime);\n    uVar3 = fcn.0040ea50();\n    *(param_4 + 0xc0c) = uVar3;\ncode_r0x004068af:\n    *(param_4 + 0x1498) = 0;\n    return param_1;\n}\n",
        "token_count": 1655
    },
    "00406a96": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406a96(uchar param_1, char param_2)\n\n{\n    if (param_2 == '\\0') {\n        (*_sym.imp.USER32.dll_CharUpperW)(param_1);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "00406aac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406aac(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    if (arg_10h == '\\0') {\n        fcn.0040e576();\n    }\n    else {\n        fcn.0040a705(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "00406acb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406acb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_14h == '\\0') {\n        fcn.0040e4e4();\n    }\n    else {\n        fcn.0040a759(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00406aed": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00406aed(char *arg_8h, char *arg_ch, uint arg_10h)\n\n{\n    char *arg_8h_00;\n    char cVar1;\n    char cVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    char *arg_8h_01;\n    \n    do {\n        while( true ) {\n            cVar1 = fcn.00406a96(*arg_ch, arg_10h);\n            cVar2 = fcn.00406a96();\n            arg_8h_01 = arg_8h + 1;\n            if (cVar2 == '\\0') {\n                return cVar1 == '\\0';\n            }\n            if (cVar2 == '*') {\n                if (*arg_8h_01 == '\\0') {\n                    return true;\n                }\n                if (*arg_8h_01 == '.') {\n                    arg_8h_00 = arg_8h + 2;\n                    if ((*arg_8h_00 == '*') && (arg_8h[3] == '\\0')) {\n                        return true;\n                    }\n                    pcVar3 = fcn.0040a5c9(arg_ch, 0x2e);\n                    if (*arg_8h_00 == '\\0') {\n                        if ((pcVar3 != NULL) && (pcVar3[1] != '\\0')) {\n                            return false;\n                        }\n                        return true;\n                    }\n                    if ((pcVar3 != NULL) && (iVar4 = fcn.0040a632(arg_8h_01, 0x4143e0),  arg_ch = pcVar3,  iVar4 == 0))\n                    {\n                        iVar4 = fcn.0040a5c9(pcVar3 + 1, 0x2e);\n                        if (iVar4 == 0) {\n                            iVar4 = fcn.00406aac(arg_8h_00, pcVar3 + 1, arg_10h);\n                            return iVar4 == 0;\n                        }\n                    }\n                }\n                do {\n                    if (*arg_ch == '\\0') {\n                        return false;\n                    }\n                    cVar1 = fcn.00406aed(arg_8h_01, arg_ch, arg_10h);\n                    arg_ch = arg_ch + 1;\n                } while (cVar1 == '\\0');\n                return true;\n            }\n            arg_8h = arg_8h_01;\n            if (cVar2 != '?') break;\n            if (cVar1 == '\\0') {\n                return false;\n            }\ncode_r0x00406b44:\n            arg_ch = arg_ch + 1;\n        }\n        if (cVar2 == cVar1) goto code_r0x00406b44;\n        if ((cVar2 != '.') || (((cVar1 != '\\0' && (cVar1 != '\\\\')) && (cVar1 != '.')))) {\n            return false;\n        }\n    } while( true );\n}\n",
        "token_count": 652
    },
    "00406bef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00406bef(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t arg_10h_00;\n    uint32_t uVar2;\n    uint arg_10h_01;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint in_stack_fffff79c;\n    uint32_t in_stack_fffff7a0;\n    uint *arg_8h_00;\n    uint var_800h;\n    uint var_400h;\n    \n    uVar4 = arg_10h & 0xffff;\n    arg_10h = arg_10h & 0xffffff00 | arg_10h >> 0x1f;\n    if (uVar4 != 0) {\n        arg_10h_00 = fcn.0040a5a0(arg_8h);\n        uVar2 = arg_10h_00;\n        if (((uVar4 != 2) && (uVar4 != 3)) && (uVar2 = fcn.00406acb(arg_8h, arg_ch, arg_10h_00, arg_10h),  uVar2 == 0))\n        {\n            cVar1 = *(arg_10h_00 + arg_ch);\n            uVar2 = arg_ch & 0xffffff00;\n            if (((cVar1 == '\\\\') || (cVar1 == '/')) || (cVar1 == '\\0')) {\n                return CONCAT31(uVar2 >> 8, 1);\n            }\n        }\n        if (uVar4 == 1) goto code_r0x00406c55;\n        fcn.004075a1(arg_8h, &var_400h, 0x400);\n        fcn.004075a1(arg_ch, &var_800h, 0x400);\n        if (((uVar4 == 2) || (uVar4 == 3)) && (uVar2 = fcn.00406aac(&var_400h, &var_800h, arg_10h),  uVar2 != 0))\n        goto code_r0x00406c55;\n        if ((uVar4 == 4) || (uVar4 == 5)) {\n            cVar1 = fcn.00406e5f(&var_400h, 0);\n            if (cVar1 != '\\0') goto code_r0x00406cc6;\n            if ((uVar4 == 4) || (cVar1 = fcn.00406e5f(arg_8h, 0),  cVar1 != '\\0')) {\n                if (var_400h == '\\0') goto code_r0x00406d30;\n                arg_8h_00 = &var_400h;\n                arg_10h_01 = fcn.0040a5a0(arg_8h_00);\n                uVar2 = fcn.00406acb(&var_400h, &var_800h, arg_10h_01, arg_8h_00);\n            }\n            else {\n                uVar2 = fcn.00406aac(&var_400h, &var_800h, arg_10h);\n            }\n            if (uVar2 != 0) goto code_r0x00406c55;\n        }\n    }\ncode_r0x00406d30:\n    arg_8h = fcn.00407278(arg_8h);\n    in_stack_fffff79c = fcn.00407278(arg_ch);\n    uVar2 = fcn.0040e4e4(\"__rar_\", in_stack_fffff79c, 6);\n    if (uVar2 != 0) {\n        in_stack_fffff7a0 = arg_10h;\n        if (uVar4 == 2) {\n            iVar3 = fcn.00406aac(arg_8h, in_stack_fffff79c, arg_10h);\n            return iVar3 == 0;\n        }\ncode_r0x00406cc6:\n        uVar4 = fcn.00406aed(arg_8h, in_stack_fffff79c, in_stack_fffff7a0);\n        return uVar4;\n    }\ncode_r0x00406c55:\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 970
    },
    "00406e5f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.00406e5f(int32_t param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((param_2 == NULL) || (*param_2 == 0)) {\n        if (param_1 == 0) {\n            return false;\n        }\n        iVar1 = fcn.0040a632(param_1, 0x4143e0);\n    }\n    else {\n        iVar1 = fcn.0040aa58(param_2, 0x4143ec);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 131
    },
    "00406ee7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00406ee7(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t *extraout_ECX;\n    uint16_t *puVar4;\n    \n    if (((*param_1 == 0) || (param_1[1] == 0)) || (uVar2 = fcn.0040a9ea(param_1 + 2, 0x3a),  uVar2 == 0)) {\n        uVar1 = *param_1;\n        puVar4 = param_1;\n        if (uVar1 != 0) {\n            do {\n                uVar2 = uVar1;\n                if ((uVar1 < 0x20) ||\n                   ((uVar1 == 0x20 && (uVar2 = fcn.00406e9c(puVar4[1]),  puVar4 = extraout_ECX,  uVar2 != '\\0'))))\n                goto code_r0x00406f08;\n                uVar1 = puVar4[1];\n                puVar4 = puVar4 + 1;\n            } while (uVar1 != 0);\n            iVar3 = fcn.0040aa58(param_1, 0x4143f8);\n            if (iVar3 == 0) {\n                return 1;\n            }\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x00406f08:\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    return uVar2;\n}\n",
        "token_count": 359
    },
    "00406f51": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406f51(uint16_t *param_1, char param_2)\n\n{\n    char cVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    uint16_t *extraout_ECX;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    char unaff_retaddr;\n    \n    if (*param_1 != 0) {\n        puVar4 = param_1;\n        do {\n            arg_8h = 0x4143f8;\n            if (param_2 == '\\0') {\n                arg_8h = 0x414408;\n            }\n            iVar2 = fcn.0040a9ea(arg_8h, *puVar4);\n            if ((iVar2 != 0) || ((unaff_retaddr != '\\0' && (*puVar4 < 0x20)))) {\n                *puVar4 = 0x5f;\n            }\n            puVar3 = puVar4 + 1;\n            if ((2 < ((-2 - param_1) + puVar3 & 0xfffffffeU)) && (*puVar4 == 0x3a)) {\n                *puVar4 = 0x5f;\n            }\n            if ((*puVar4 == 0x20) && (cVar1 = fcn.00406e9c(*puVar3),  puVar3 = extraout_ECX,  cVar1 != '\\0')) {\n                *puVar4 = 0x5f;\n            }\n            puVar4 = puVar3;\n        } while (*puVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "00406fd3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * fcn.00406fd3(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    \n    if ((param_2 != NULL) && (param_2 != param_1)) {\n        piVar1 = fcn.0040a826(param_1);\n        if (param_2 <= piVar1) {\n            *param_2 = 0;\n            return param_2;\n        }\n        fcn.0040a850(param_2, param_1);\n    }\n    if (*param_1 != 0) {\n        iVar2 = 0;\n        piVar1 = param_1;\n        do {\n            if (*piVar1 == 0x2f) {\n                if (param_2 == NULL) {\n                    *piVar1 = 0x5c;\n                }\n                else {\n                    param_2[iVar2 >> 1] = 0x5c;\n                }\n            }\n            piVar1 = piVar1 + 1;\n            iVar2 = iVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    if (param_2 != NULL) {\n        return param_2;\n    }\n    return param_1;\n}\n",
        "token_count": 281
    },
    "00407088": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407088(uint *lpFilePart, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *lpWideCharStr;\n    uint lpBuffer;\n    uint var_400h;\n    \n    lpWideCharStr = lpFilePart;\n    if ((lpFilePart == NULL) || (*lpFilePart == 0)) {\n        *arg_ch = 0;\n    }\n    else {\n        iVar1 = fcn.00406a2a();\n        if (iVar1 == 0) {\n            fcn.0040eca0(lpWideCharStr, &var_400h, 0x1000000);\n            fcn.0040703d(&var_400h, &var_400h);\n            fcn.0040ecd2(&var_400h, arg_ch, 0x1000000);\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(lpWideCharStr, 0x400, &lpBuffer, &lpFilePart);\n            if ((uVar2 == 0) || (0x3ff < uVar2)) {\n                if (lpWideCharStr == arg_ch) {\n                    return;\n                }\n            }\n            else {\n                lpWideCharStr = &lpBuffer;\n            }\n            fcn.0040a850(arg_ch, lpWideCharStr);\n        }\n    }\n    return;\n}\n",
        "token_count": 315
    },
    "004071cb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.004071cb(int32_t arg_8h, int16_t *arg_ch, int16_t *arg_10h, int32_t arg_14h)\n\n{\n    if ((arg_ch == NULL) || (*arg_ch == 0)) {\n        if (arg_8h == 0) {\n            *arg_10h = 0;\n        }\n        else {\n            fcn.0040ecd2(arg_8h, arg_10h, arg_14h);\n        }\n    }\n    else if (arg_10h != arg_ch) {\n        fcn.0040a880(arg_10h, arg_ch, arg_14h);\n    }\n    if (arg_14h != 0) {\n        arg_10h[arg_14h + -1] = 0;\n    }\n    return arg_10h;\n}\n",
        "token_count": 192
    },
    "00407248": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nuint8_t * fcn.00407248(uint8_t *param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    \n    if (*0x42d5f0 == '\\0') {\n        while( true ) {\n            if (*param_1 == 0) {\n                return NULL;\n            }\n            if (*param_1 == param_2) break;\n            param_1 = param_1 + 1;\n        }\n        return param_1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            if (uVar1 == 0) {\n                return NULL;\n            }\n            if (*(uVar1 + 0x42d4f0) == '\\0') break;\n            param_1 = param_1 + 2;\n        }\n        if (uVar1 == param_2) break;\n        param_1 = param_1 + 1;\n    }\n    return param_1;\n}\n",
        "token_count": 218
    },
    "00407260": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint8_t * __cdecl fcn.00407260(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t var_4h;\n    \n    if (*0x42d5f0 != '\\0') {\n        puVar2 = NULL;\n        uVar1 = *arg_8h;\n        while (uVar1 != 0) {\n            if (*(uVar1 + 0x42d4f0) == '\\0') {\n                if (uVar1 == arg_ch) {\n                    puVar2 = arg_8h;\n                }\n                arg_8h = arg_8h + 1;\n            }\n            else {\n                arg_8h = arg_8h + 2;\n            }\n            uVar1 = *arg_8h;\n        }\n        return puVar2;\n    }\n    var_4h = fcn.0040a5a0(arg_8h);\n    do {\n        var_4h = var_4h + -1;\n        if (var_4h < 0) {\n            return NULL;\n        }\n    } while (arg_8h[var_4h] != arg_ch);\n    return arg_8h + var_4h;\n}\n",
        "token_count": 301
    },
    "00407278": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.00407278(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t extraout_ECX;\n    char *pcVar3;\n    \n    cVar1 = *param_1;\n    pcVar3 = NULL;\n    if (cVar1 != '\\0') {\n        do {\n            cVar1 = fcn.00406e9c(cVar1);\n            if (cVar1 != '\\0') {\n                pcVar3 = extraout_ECX + 1;\n            }\n            pcVar2 = fcn.00401c80();\n            cVar1 = *pcVar2;\n        } while (cVar1 != '\\0');\n        if (pcVar3 != NULL) {\n            return pcVar3;\n        }\n        if ((*param_1 != '\\0') && (param_1[1] == ':')) {\n            pcVar3 = fcn.00401c80(param_1);\n            if (pcVar3 == param_1 + 1) {\n                return param_1 + 2;\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 247
    },
    "004072cf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * fcn.004072cf(int16_t *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    \n    iVar2 = fcn.0040a826(param_1);\n    while (-1 < iVar2 + -1) {\n        cVar1 = fcn.00406e9c();\n        iVar2 = extraout_ECX;\n        if (cVar1 != '\\0') {\n            return param_1 + extraout_ECX + 1;\n        }\n    }\n    if ((*param_1 != 0) && (param_1[1] == 0x3a)) {\n        return param_1 + 2;\n    }\n    return param_1;\n}\n",
        "token_count": 166
    },
    "0040730b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.0040730b(char *param_1)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    while (pcVar1 = param_1,  *pcVar1 != '\\0') {\n        param_1 = fcn.00401c80();\n        pcVar2 = pcVar1;\n    }\n    return pcVar2;\n}\n",
        "token_count": 93
    },
    "00407327": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00407327(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *extraout_ECX;\n    char *extraout_ECX_00;\n    char *pcVar3;\n    int32_t extraout_ECX_01;\n    char extraout_DL;\n    uint var_400h;\n    \n    cVar1 = *arg_8h;\n    while (cVar1 != '\\0') {\n        cVar1 = fcn.00406e9c();\n        pcVar3 = extraout_ECX;\n        if ((((cVar1 != '\\0') && (extraout_ECX[-1] == '.')) && (*extraout_ECX == '.')) &&\n           (cVar1 = fcn.00406e9c(),  pcVar3 = extraout_ECX_00,  cVar1 != '\\0')) {\n            arg_8h = extraout_ECX_00 + 2;\n        }\n        cVar1 = pcVar3[-1];\n    }\n    cVar1 = *arg_8h;\n    while (cVar1 != '\\0') {\n        if ((*arg_8h == '\\0') || (arg_8h[1] != ':')) {\n            pcVar3 = arg_8h;\n            if (((*arg_8h == '\\\\') && ((arg_8h[1] == '\\\\' && (iVar2 = fcn.0040a5c9(arg_8h + 2, 0x5c),  iVar2 != 0)))) &&\n               (iVar2 = fcn.0040a5c9(iVar2 + 1, 0x5c),  iVar2 != 0)) {\n                pcVar3 = iVar2 + 1;\n            }\n        }\n        else {\n            pcVar3 = arg_8h + 2;\n        }\n        cVar1 = *pcVar3;\n        while (cVar1 != '\\0') {\n            cVar1 = fcn.00406e9c(cVar1);\n            if (cVar1 == '\\0') {\n                if (extraout_DL != '.') break;\n            }\n            else {\n                pcVar3 = extraout_ECX_01 + 1;\n            }\n            cVar1 = *(extraout_ECX_01 + 1);\n        }\n        if (pcVar3 == arg_8h) break;\n        arg_8h = pcVar3;\n        cVar1 = *pcVar3;\n    }\n    if (((*arg_8h == '.') && (arg_8h[1] == '.')) && (arg_8h[2] == '\\0')) {\n        arg_8h = arg_8h + 2;\n    }\n    if (arg_ch != 0) {\n        fcn.0040e57b(&var_400h, arg_8h, 0x400);\n        fcn.0040a693(arg_ch, &var_400h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 664
    },
    "00407426": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00407426(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int16_t extraout_CX;\n    int16_t *extraout_ECX;\n    int16_t *extraout_ECX_00;\n    int16_t *piVar4;\n    int32_t extraout_EDX;\n    uint var_800h;\n    \n    iVar1 = *arg_8h;\n    while (iVar1 != 0) {\n        cVar2 = fcn.00406e9c();\n        piVar4 = extraout_ECX;\n        if ((((cVar2 != '\\0') && (extraout_ECX[-1] == 0x2e)) && (*extraout_ECX == 0x2e)) &&\n           (cVar2 = fcn.00406e9c(),  piVar4 = extraout_ECX_00,  cVar2 != '\\0')) {\n            arg_8h = extraout_ECX_00 + 2;\n        }\n        iVar1 = piVar4[-1];\n    }\n    iVar1 = *arg_8h;\n    while (iVar1 != 0) {\n        piVar4 = arg_8h;\n        if ((*arg_8h != 0) && (arg_8h[1] == 0x3a)) {\n            piVar4 = arg_8h + 2;\n        }\n        if (((*piVar4 == 0x5c) && (piVar4[1] == 0x5c)) &&\n           ((iVar3 = fcn.0040a9ea(piVar4 + 2, 0x5c),  iVar3 != 0 && (iVar3 = fcn.0040a9ea(iVar3 + 2, 0x5c),  iVar3 != 0)\n            ))) {\n            piVar4 = iVar3 + 2;\n        }\n        iVar1 = *piVar4;\n        while (iVar1 != 0) {\n            cVar2 = fcn.00406e9c(iVar1);\n            if (cVar2 == '\\0') {\n                if (extraout_CX != 0x2e) break;\n            }\n            else {\n                piVar4 = extraout_EDX + 2;\n            }\n            iVar1 = *(extraout_EDX + 2);\n        }\n        if (piVar4 == arg_8h) break;\n        arg_8h = piVar4;\n        iVar1 = *piVar4;\n    }\n    if (((*arg_8h == 0x2e) && (arg_8h[1] == 0x2e)) && (arg_8h[2] == 0)) {\n        arg_8h = arg_8h + 2;\n    }\n    if (arg_ch != 0) {\n        fcn.0040e5a3(&var_800h, arg_8h, 0x400);\n        fcn.0040a850(arg_ch, &var_800h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 697
    },
    "00407738": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00407738(char *param_1, uint param_2, char *param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    int16_t *piVar7;\n    int16_t *piVar8;\n    int16_t *unaff_EDI;\n    char unaff_retaddr;\n    char in_stack_ffffffe8;\n    char *pcVar9;\n    \n    if ((param_1 != NULL) && (*param_1 != '\\0')) {\n        iVar2 = fcn.00407545(param_1);\n        if (iVar2 == 0) {\n            pcVar9 = param_3;\n            fcn.0040e5cd(param_1, \".rar\", param_3);\n            iVar2 = fcn.00407545(param_1);\n        }\n        else {\n            pcVar4 = iVar2 + 1;\n            if ((((*pcVar4 == '\\0') && (pcVar9 = param_1,  pcVar3 = fcn.0040a5a0(param_1),  pcVar3 < param_3 + -3)) ||\n                (pcVar9 = pcVar4,  iVar5 = fcn.0040e4c3(),  iVar5 == 0)) ||\n               (pcVar9 = pcVar4,  iVar5 = fcn.0040e4c3(),  iVar5 == 0)) {\n                fcn.0040a693(pcVar4, 0x414384);\n            }\n        }\n        in_stack_ffffffe8 = pcVar9;\n        if (unaff_retaddr == '\\0') {\n            pcVar4 = fcn.0040763e(param_1);\n            do {\n                pcVar3 = pcVar4;\n                in_stack_ffffffe8 = pcVar9;\n                *pcVar3 = *pcVar3 + '\\x01';\n                if (*pcVar3 != ':') goto code_r0x00407849;\n                *pcVar3 = '0';\n                pcVar4 = pcVar3 + -1;\n                if (pcVar4 < param_1) break;\n                cVar1 = fcn.0040e54c();\n                in_stack_ffffffe8 = pcVar9;\n            } while (cVar1 != '\\0');\n            iVar2 = fcn.0040a5a0(param_1);\n            for (param_1 = param_1 + iVar2; param_1 != pcVar4; param_1 = param_1 + -1) {\n                param_1[1] = *param_1;\n            }\n            *pcVar3 = '1';\n        }\n        else {\n            cVar1 = fcn.0040e54c(*(iVar2 + 2));\n            if (cVar1 != '\\0') {\n                pcVar4 = iVar2 + 3;\n                cVar1 = fcn.0040e54c(*pcVar4);\n                if (cVar1 != '\\0') {\n                    while (*pcVar4 = *pcVar4 + '\\x01',  *pcVar4 == ':') {\n                        if (pcVar4[-1] == '.') {\n                            *pcVar4 = 'A';\n                            break;\n                        }\n                        *pcVar4 = '0';\n                        pcVar4 = pcVar4 + -1;\n                    }\n                    goto code_r0x00407849;\n                }\n            }\n            fcn.0040a693(iVar2 + 2, 0x414448);\n        }\n    }\ncode_r0x00407849:\n    if ((unaff_EDI != NULL) && (*unaff_EDI != 0)) {\n        iVar2 = fcn.00407561(unaff_EDI);\n        if (iVar2 == 0) {\n            fcn.0040e5f8(unaff_EDI, 0x41443c, param_3);\n            iVar2 = fcn.00407561(unaff_EDI);\n        }\n        else {\n            piVar6 = iVar2 + 2;\n            if (((*piVar6 == 0) && (pcVar4 = fcn.0040a826(unaff_EDI),  pcVar4 < param_3 + -3)) ||\n               ((iVar5 = fcn.0040eefb(piVar6, 0x414434),  iVar5 == 0 ||\n                (iVar5 = fcn.0040eefb(piVar6, 0x41442c),  iVar5 == 0)))) {\n                fcn.0040a850(piVar6, 0x414424);\n            }\n        }\n        if (in_stack_ffffffe8 == '\\0') {\n            piVar6 = fcn.004076b8(unaff_EDI);\n            do {\n                piVar8 = piVar6;\n                *piVar8 = *piVar8 + 1;\n                if (*piVar8 != 0x3a) {\n                    return;\n                }\n                *piVar8 = 0x30;\n                piVar6 = piVar8 + -1;\n            } while ((unaff_EDI <= piVar6) && (cVar1 = fcn.0040e54c(0x30, *piVar6),  cVar1 != '\\0'));\n            iVar2 = fcn.0040a826(unaff_EDI);\n            for (piVar7 = unaff_EDI + iVar2; piVar7 != piVar6; piVar7 = piVar7 + -1) {\n                piVar7[1] = *piVar7;\n            }\n            *piVar8 = 0x31;\n        }\n        else {\n            cVar1 = fcn.0040e54c(*(iVar2 + 4));\n            if (cVar1 != '\\0') {\n                piVar6 = iVar2 + 6;\n                cVar1 = fcn.0040e54c(*piVar6);\n                if (cVar1 != '\\0') {\n                    while( true ) {\n                        *piVar6 = *piVar6 + 1;\n                        if (*piVar6 != 0x3a) {\n                            return;\n                        }\n                        if (piVar6[-1] == 0x2e) break;\n                        *piVar6 = 0x30;\n                        piVar6 = piVar6 + -1;\n                    }\n                    *piVar6 = 0x41;\n                    return;\n                }\n            }\n            fcn.0040a850(iVar2 + 4, 0x41441c);\n        }\n    }\n    return;\n}\n",
        "token_count": 1457
    },
    "004079ff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004079ff(uint8_t *arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *arg_8h_00;\n    uint8_t *puVar4;\n    uint var_800h;\n    \n    iVar3 = fcn.0040a5a0(arg_8h);\n    fcn.0040ecd2(arg_8h, &var_800h, 0x400);\n    fcn.0040eca0(&var_800h, arg_8h, iVar3 + 1);\n    arg_8h[iVar3] = 0;\n    uVar1 = *arg_8h;\n    puVar4 = arg_8h;\n    while (uVar1 != 0) {\n        arg_8h_00 = \"?*<>|\\\"\";\n        if (arg_ch == '\\0') {\n            arg_8h_00 = 0x414464;\n        }\n        iVar3 = fcn.0040a5c9(arg_8h_00, *puVar4);\n        if ((iVar3 != 0) || ((arg_ch != '\\0' && (*puVar4 < 0x20)))) {\n            *puVar4 = 0x5f;\n        }\n        if ((1 < puVar4 - arg_8h) && (*puVar4 == 0x3a)) {\n            *puVar4 = 0x5f;\n        }\n        if ((*puVar4 == 0x20) && (cVar2 = fcn.00406e9c(puVar4[1]),  cVar2 != '\\0')) {\n            *puVar4 = 0x5f;\n        }\n        puVar4 = fcn.00401c80();\n        uVar1 = *puVar4;\n    }\n    return;\n}\n",
        "token_count": 416
    },
    "00407b0e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407b0e(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar *puVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    puVar1 = fcn.00407260(arg_8h, 0x3b);\n    if (puVar1 != NULL) {\n        iVar3 = fcn.0040ab29(puVar1 + 1);\n        if (arg_10h != '\\0') {\n            *puVar1 = 0;\n        }\n    }\n    if (arg_ch != 0) {\n        puVar2 = fcn.0040aa17(arg_ch, 0x3b);\n        if (puVar2 != NULL) {\n            if (iVar3 == 0) {\n                iVar3 = fcn.0040f08f(puVar2 + 1);\n            }\n            if (arg_10h != '\\0') {\n                *puVar2 = 0;\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 244
    },
    "00407b95": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407b95(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        uVar1 = fcn.0040ab1c(0x40004);\n        *(param_1 + 0xc) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00407dd9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407dd9(int32_t param_1, uint *param_2, char param_3)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = fcn.00406a25();\n    if ((uVar1 & 0x8000) == 0) {\n        if ((uVar1 & 0xc000) == 0) {\n            *param_2 = 1;\n            if (param_3 == '\\0') {\n                fcn.00406a0e(2);\n                uVar2 = fcn.00407bd7(param_1);\n                param_2[1] = uVar2;\n                return;\n            }\n            param_2[1] = uVar1 >> 6 & 0xff;\n            uVar2 = 10;\n        }\n        else {\n            *param_2 = 2;\n            if ((uVar1 & 0x2000) != 0) {\n                if ((uVar1 & 0x1000) == 0) {\n                    uVar1 = uVar1 >> 9 & 7;\n                    param_2[1] = uVar1;\n                    param_2[3] = param_1 + 0x10 + uVar1 * 4;\n                    uVar2 = 7;\n                }\n                else {\n                    param_2[1] = 0;\n                    uVar2 = 4;\n                }\n                fcn.00406a0e(uVar2);\n                uVar2 = fcn.00407bd7(param_1);\n                param_2[2] = uVar2;\n                return;\n            }\n            uVar1 = uVar1 >> 10 & 7;\n            param_2[2] = 0;\n            param_2[1] = uVar1;\n            param_2[3] = param_1 + 0x10 + uVar1 * 4;\n            uVar2 = 6;\n        }\n        fcn.00406a0e(uVar2);\n    }\n    else {\n        *param_2 = 0;\n        uVar1 = uVar1 >> 0xc & 7;\n        param_2[1] = uVar1;\n        param_2[3] = param_1 + 0x10 + uVar1 * 4;\n        fcn.00406a0e(4);\n    }\n    return;\n}\n",
        "token_count": 536
    },
    "0040839d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040839d(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char cVar6;\n    uint8_t uVar7;\n    int32_t in_ECX;\n    uint *puVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint *puVar12;\n    bool bVar13;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 25000000;\n    puVar12 = arg_8h;\ncode_r0x004083b2:\n    puVar2 = fcn.00407bbb(puVar12 + 2);\n    puVar3 = fcn.00407bbb();\n    // switch table (41 cases) at 0x408969\n    switch(*puVar12) {\n    case 0:\n        if (*(puVar12 + 1) == '\\0') {\n            uVar11 = *puVar3;\n            goto code_r0x004083f1;\n        }\n        uVar11 = *puVar3;\n        goto code_r0x004083e8;\n    case 1:\n        if (*(puVar12 + 1) == '\\0') {\n            uVar9 = *puVar2;\n            uVar11 = *puVar3;\n        }\n        else {\n            uVar9 = *puVar2;\n            uVar11 = *puVar3;\n        }\n        uVar11 = uVar9 - uVar11;\n        if (uVar11 == 0) goto code_r0x00408417;\n        uVar11 = uVar9 < uVar11 | uVar11 & 0x80000000;\n        goto code_r0x0040842a;\n    case 2:\n        if (*(puVar12 + 1) == '\\0') {\n            uVar9 = *puVar2;\n            uVar5 = *puVar3;\n        }\n        else {\n            uVar9 = *puVar2;\n            uVar5 = *puVar3;\n        }\n        uVar5 = uVar5 + uVar9;\n        if (*(puVar12 + 1) == '\\0') {\n            uVar11 = uVar5;\n            if (uVar5 == 0) goto code_r0x00408473;\n            uVar4 = uVar5 & 0x80000000;\n        }\n        else {\n            uVar11 = uVar5 & 0xff;\n            if (uVar11 == 0) {\ncode_r0x00408473:\n                uVar4 = 2;\n                uVar5 = uVar11;\n            }\n            else {\n                uVar4 = -((uVar5 & 0x80) != 0) & 0x80000000;\n                uVar5 = uVar11;\n            }\n        }\n        *(in_ECX + 0x30) = uVar5 < uVar9 | uVar4;\n        goto code_r0x0040848a;\n    case 3:\n        if (*(puVar12 + 1) == '\\0') {\n            uVar9 = *puVar2;\n            uVar5 = *puVar3;\n        }\n        else {\n            uVar9 = *puVar2;\n            uVar5 = *puVar3;\n        }\n        uVar5 = uVar9 - uVar5;\n        if (uVar5 != 0) {\n            uVar9 = uVar9 < uVar5 | uVar5 & 0x80000000;\n            goto code_r0x004084d5;\n        }\n        goto code_r0x004084c0;\n    case 4:\n        bVar13 = (*(in_ECX + 0x30) & 2) == 0;\n        goto joined_r0x00408617;\n    case 5:\n        bVar13 = (*(in_ECX + 0x30) & 2) == 0;\n        goto joined_r0x00408617;\n    case 6:\n        cVar6 = *(puVar12 + 1);\n        if (cVar6 == '\\0') {\n            uVar11 = *puVar2;\n        }\n        else {\n            uVar11 = *puVar2;\n        }\n        uVar11 = uVar11 + 1;\n        if (cVar6 != '\\0') {\n            uVar11 = uVar11 & 0xff;\n            goto code_r0x00408549;\n        }\ncode_r0x00408551:\n        *puVar2 = uVar11;\n        goto code_r0x00408555;\n    case 7:\n        cVar6 = *(puVar12 + 1);\n        if (cVar6 == '\\0') {\n            uVar11 = *puVar2;\n        }\n        else {\n            uVar11 = *puVar2;\n        }\n        uVar11 = uVar11 - 1;\ncode_r0x00408549:\n        if (cVar6 == '\\0') goto code_r0x00408551;\n        *puVar2 = uVar11;\n        goto code_r0x00408555;\n    case 8:\n        goto code_r0x004084e8;\n    case 9:\n        if (*(puVar12 + 1) == '\\0') {\n            uVar9 = *puVar2;\n            uVar5 = *puVar3;\n        }\n        else {\n            uVar9 = *puVar2;\n            uVar5 = *puVar3;\n        }\n        uVar5 = uVar5 ^ uVar9;\n        bVar13 = uVar5 == 0;\n        goto code_r0x004085a0;\n    case 10:\n        if (*(puVar12 + 1) == '\\0') {\n            uVar9 = *puVar2;\n            uVar5 = *puVar3;\n        }\n        else {\n            uVar9 = *puVar2;\n            uVar5 = *puVar3;\n        }\n        uVar5 = uVar5 & uVar9;\n        bVar13 = uVar5 == 0;\n        goto code_r0x004085a0;\n    case 0xb:\n        if (*(puVar12 + 1) == '\\0') {\n            uVar9 = *puVar2;\n            uVar5 = *puVar3;\n        }\n        else {\n            uVar9 = *puVar2;\n            uVar5 = *puVar3;\n        }\n        uVar5 = uVar5 | uVar9;\n        bVar13 = uVar5 == 0;\ncode_r0x004085a0:\n        if (bVar13) {\ncode_r0x004084c0:\n            uVar9 = 2;\n        }\n        else {\n            uVar9 = uVar5 & 0x80000000;\n        }\ncode_r0x004084d5:\n        *(in_ECX + 0x30) = uVar9;\n        cVar6 = *(puVar12 + 1);\ncode_r0x00408491:\n        if (cVar6 == '\\0') {\n            *puVar2 = uVar5;\n        }\n        else {\n            *puVar2 = uVar5;\n        }\n        break;\n    case 0xc:\n        if (*(puVar12 + 1) == '\\0') {\n            uVar9 = *puVar2;\n            uVar11 = *puVar3;\n        }\n        else {\n            uVar9 = *puVar2;\n            uVar11 = *puVar3;\n        }\n        uVar11 = uVar11 & uVar9;\ncode_r0x00408555:\n        if (uVar11 == 0) {\ncode_r0x00408417:\n            uVar11 = 2;\n        }\n        else {\n            uVar11 = uVar11 & 0x80000000;\n        }\ncode_r0x0040842a:\n        *(in_ECX + 0x30) = uVar11;\n        break;\n    case 0xd:\n        bVar13 = (*(in_ECX + 0x30) & 0x80000000) == 0;\n        goto joined_r0x00408617;\n    case 0xe:\n        bVar13 = (*(in_ECX + 0x30) & 0x80000000) == 0;\n        goto joined_r0x00408617;\n    case 0xf:\n        bVar13 = (*(in_ECX + 0x30) & 1) == 0;\n        goto joined_r0x00408617;\n    case 0x10:\n        bVar13 = (*(in_ECX + 0x30) & 3) == 0;\n        goto joined_r0x00408617;\n    case 0x11:\n        bVar13 = (*(in_ECX + 0x30) & 3) == 0;\n        goto joined_r0x00408617;\n    case 0x12:\n        bVar13 = (*(in_ECX + 0x30) & 1) == 0;\njoined_r0x00408617:\n        if (bVar13) {\ncode_r0x004084e8:\n            if (arg_ch <= *puVar2) {\n                return 1;\n            }\n            var_4h = var_4h + -1;\n            if (var_4h < 1) {\n                return 0;\n            }\n            puVar12 = arg_8h + *puVar2 * 10;\n            goto code_r0x004083b2;\n        }\n        break;\n    case 0x13:\n        *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + -4;\n        uVar9 = *puVar2;\n        goto code_r0x00408628;\n    case 0x14:\n        *puVar2 = *((*(in_ECX + 0x2c) & 0x3ffff) + *(in_ECX + 0xc));\n        *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + 4;\n        break;\n    case 0x15:\n        *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + -4;\n        *((*(in_ECX + 0x2c) & 0x3ffff) + *(in_ECX + 0xc)) = (puVar12 - arg_8h) / 0x28 + 1;\n        goto code_r0x004084e8;\n    case 0x16:\n        goto code_r0x0040890b;\n    case 0x17:\n        if (*(puVar12 + 1) != '\\0') {\n            uVar11 = ~*puVar2;\n            goto code_r0x004083e8;\n        }\n        uVar11 = ~*puVar2;\n        goto code_r0x004083f1;\n    case 0x18:\n        if (*(puVar12 + 1) == '\\0') {\n            uVar9 = *puVar2;\n            uVar7 = *puVar3;\n        }\n        else {\n            uVar9 = *puVar2;\n            uVar7 = *puVar3;\n        }\n        uVar11 = uVar9 << (uVar7 & 0x1f);\n        if (uVar11 == 0) {\n            uVar5 = 2;\n        }\n        else {\n            uVar5 = uVar11 & 0x80000000;\n        }\n        uVar9 = (uVar9 << (uVar7 - 1 & 0x1f)) >> 0x1f;\n        goto code_r0x004086c5;\n    case 0x19:\n        if (*(puVar12 + 1) == '\\0') {\n            uVar9 = *puVar2;\n            uVar7 = *puVar3;\n        }\n        else {\n            uVar9 = *puVar2;\n            uVar7 = *puVar3;\n        }\n        uVar11 = uVar9 >> (uVar7 & 0x1f);\n        goto code_r0x004086f9;\n    case 0x1a:\n        if (*(puVar12 + 1) == '\\0') {\n            uVar9 = *puVar2;\n            uVar7 = *puVar3;\n        }\n        else {\n            uVar9 = *puVar2;\n            uVar7 = *puVar3;\n        }\n        uVar11 = uVar9 >> (uVar7 & 0x1f);\ncode_r0x004086f9:\n        if (uVar11 == 0) {\n            uVar5 = 2;\n        }\n        else {\n            uVar5 = uVar11 & 0x80000000;\n        }\n        uVar9 = uVar9 >> (uVar7 - 1 & 0x1f) & 1;\ncode_r0x004086c5:\n        *(in_ECX + 0x30) = uVar9 | uVar5;\n        bVar13 = *(puVar12 + 1) == '\\0';\ncode_r0x004086d1:\n        if (bVar13) goto code_r0x004083f1;\ncode_r0x004083e8:\n        *puVar2 = uVar11;\n        break;\n    case 0x1b:\n        if (*(puVar12 + 1) == '\\0') {\n            uVar5 = *puVar2;\n        }\n        else {\n            uVar5 = *puVar2;\n        }\n        uVar5 = -uVar5;\n        if (uVar5 == 0) goto code_r0x004084c0;\n        uVar9 = uVar5 & 0x80000001 | 1;\n        goto code_r0x004084d5;\n    case 0x1c:\n        uVar9 = *(in_ECX + 0x2c);\n        puVar8 = in_ECX + 0x10;\n        var_ch = 8;\n        do {\n            uVar9 = uVar9 - 4;\n            uVar1 = *puVar8;\n            puVar8 = puVar8 + 1;\n            var_ch = var_ch + -1;\n            *((uVar9 & 0x3ffff) + *(in_ECX + 0xc)) = uVar1;\n        } while (var_ch != 0);\n        *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + -0x20;\n        break;\n    case 0x1d:\n        puVar2 = in_ECX + 0x2c;\n        uVar9 = *puVar2;\n        iVar10 = 8;\n        do {\n            *puVar2 = *((uVar9 & 0x3ffff) + *(in_ECX + 0xc));\n            puVar2 = puVar2 + -1;\n            uVar9 = uVar9 + 4;\n            iVar10 = iVar10 + -1;\n        } while (iVar10 != 0);\n        break;\n    case 0x1e:\n        *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + -4;\n        uVar9 = *(in_ECX + 0x30);\ncode_r0x00408628:\n        *((*(in_ECX + 0x2c) & 0x3ffff) + *(in_ECX + 0xc)) = uVar9;\n        break;\n    case 0x1f:\n        *(in_ECX + 0x30) = *((*(in_ECX + 0x2c) & 0x3ffff) + *(in_ECX + 0xc));\n        *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + 4;\n        break;\n    case 0x20:\n        uVar11 = *puVar3;\n        goto code_r0x004083f1;\n    case 0x21:\n        uVar11 = *puVar3;\ncode_r0x004083f1:\n        *puVar2 = uVar11;\n        break;\n    case 0x22:\n        if (*(puVar12 + 1) == '\\0') {\n            uVar9 = *puVar2;\n            *puVar2 = *puVar3;\n        }\n        else {\n            uVar9 = *puVar2;\n            *puVar2 = *puVar3;\n        }\n        if (*(puVar12 + 1) == '\\0') {\n            *puVar3 = uVar9;\n        }\n        else {\n            *puVar3 = uVar9;\n        }\n        break;\n    case 0x23:\n        if (*(puVar12 + 1) == '\\0') {\n            uVar9 = *puVar2;\n            uVar11 = *puVar3;\n        }\n        else {\n            uVar9 = *puVar2;\n            uVar11 = *puVar3;\n        }\n        uVar11 = uVar11 * uVar9;\n        bVar13 = *(puVar12 + 1) == '\\0';\n        goto code_r0x004086d1;\n    case 0x24:\n        cVar6 = *(puVar12 + 1);\n        if (cVar6 == '\\0') {\n            uVar9 = *puVar3;\n        }\n        else {\n            uVar9 = *puVar3;\n        }\n        if (uVar9 != 0) {\n            if (cVar6 == '\\0') {\n                uVar11 = *puVar2;\n            }\n            else {\n                uVar11 = *puVar2;\n            }\n            uVar11 = uVar11 / uVar9;\n            bVar13 = cVar6 == '\\0';\n            goto code_r0x004086d1;\n        }\n        break;\n    case 0x25:\n        if (*(puVar12 + 1) == '\\0') {\n            uVar9 = *puVar2;\n        }\n        else {\n            uVar9 = *puVar2;\n        }\n        uVar11 = *(in_ECX + 0x30) & 1;\n        if (*(puVar12 + 1) == '\\0') {\n            uVar5 = *puVar3;\n        }\n        else {\n            uVar5 = *puVar3;\n        }\n        uVar5 = uVar9 + uVar11 + uVar5;\n        if (*(puVar12 + 1) != '\\0') {\n            uVar5 = uVar5 & 0xff;\n        }\n        bVar13 = uVar5 == uVar9;\n        if (uVar5 < uVar9) goto code_r0x004088b1;\ncode_r0x004088a7:\n        if ((bVar13) && (uVar11 != 0)) goto code_r0x004088b1;\n        uVar9 = 0;\n        goto code_r0x004088b4;\n    case 0x26:\n        cVar6 = *(puVar12 + 1);\n        if (cVar6 == '\\0') {\n            uVar9 = *puVar2;\n        }\n        else {\n            uVar9 = *puVar2;\n        }\n        uVar11 = *(in_ECX + 0x30) & 1;\n        if (cVar6 == '\\0') {\n            uVar5 = *puVar3;\n        }\n        else {\n            uVar5 = *puVar3;\n        }\n        uVar5 = uVar9 + (-uVar5 - uVar11);\n        if (cVar6 != '\\0') {\n            uVar5 = uVar5 & 0xff;\n        }\n        bVar13 = uVar5 == uVar9;\n        if (uVar5 <= uVar9) goto code_r0x004088a7;\ncode_r0x004088b1:\n        uVar9 = 1;\ncode_r0x004088b4:\n        if (uVar5 == 0) {\n            uVar11 = 2;\n        }\n        else {\n            uVar11 = uVar5 & 0x80000000;\n        }\n        *(in_ECX + 0x30) = uVar11 | uVar9;\ncode_r0x0040848a:\n        cVar6 = *(puVar12 + 1);\n        goto code_r0x00408491;\n    case 0x28:\n        fcn.00407ea7(puVar12[3]);\n    }\n    puVar12 = puVar12 + 10;\n    var_4h = var_4h + -1;\n    goto code_r0x004083b2;\ncode_r0x0040890b:\n    uVar9 = *(in_ECX + 0x2c);\n    if (0x3ffff < uVar9) {\n        return 1;\n    }\n    uVar11 = *((uVar9 & 0x3ffff) + *(in_ECX + 0xc));\n    if (arg_ch <= uVar11) {\n        return 1;\n    }\n    var_4h = var_4h + -1;\n    if (var_4h < 1) {\n        return 0;\n    }\n    puVar12 = arg_8h + uVar11 * 10;\n    *(in_ECX + 0x2c) = uVar9 + 4;\n    goto code_r0x004083b2;\n}\n",
        "token_count": 4786
    },
    "00408a0d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408a0d(uint8_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uchar extraout_AH;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint32_t *in_ECX;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint uVar9;\n    \n    in_ECX[1] = 0;\n    *in_ECX = 0;\n    uVar6 = 0x8000;\n    if (arg_ch < 0x8000) {\n        uVar6 = arg_ch;\n    }\n    fcn.0040a4cd(in_ECX[2], arg_8h, uVar6);\n    uVar2 = 0;\n    uVar6 = 1;\n    uVar1 = 0;\n    if (1 < arg_ch) {\n        do {\n            uVar2 = uVar2 ^ arg_8h[uVar6];\n            uVar6 = uVar6 + 1;\n            uVar1 = uVar2;\n        } while (uVar6 < arg_ch);\n    }\n    fcn.00406a0e(8);\n    arg_10h[4] = 0;\n    if (uVar1 == *arg_8h) {\n        iVar3 = fcn.00407ca6(arg_8h, arg_ch);\n        if (iVar3 != 0) {\n            fcn.00407d90(1);\n            puVar4 = arg_10h[4] * 0x28 + *arg_10h;\n            arg_ch = 0;\n            arg_10h[4] = arg_10h[4] + 1;\n            puVar4[3] = iVar3;\n            puVar4[5] = puVar4 + 3;\n            puVar4[9] = puVar4 + 7;\n            *puVar4 = 0x28;\n            puVar4[6] = 3;\n            puVar4[2] = 3;\n        }\n        uVar6 = fcn.00406a25();\n        fcn.00406a0e(1);\n        if ((uVar6 & 0x8000) != 0) {\n            iVar3 = fcn.00407bd7();\n            arg_8h = NULL;\n            if (arg_ch <= *in_ECX) goto code_r0x00408c36;\n            do {\n                if (iVar3 + 1U <= arg_8h) break;\n                fcn.004012cc(1);\n                iVar8 = arg_10h[8];\n                fcn.00406a25();\n                *(iVar8 + arg_8h) = extraout_AH;\n                fcn.00406a0e();\n                arg_8h = arg_8h + 1;\n            } while (*in_ECX < arg_ch);\n        }\n        while (*in_ECX < arg_ch) {\n            fcn.00407d90(1);\n            puVar7 = arg_10h[4] * 0x28 + *arg_10h;\n            uVar6 = fcn.00406a25();\n            if ((uVar6 & 0x8000) == 0) {\n                uVar6 = uVar6 >> 0xc;\n                uVar9 = 4;\n            }\n            else {\n                uVar6 = (uVar6 >> 10) - 0x18;\n                uVar9 = 6;\n            }\n            *puVar7 = uVar6;\n            fcn.00406a0e(uVar9);\n            if ((*(*puVar7 + 0x416010) & 4) == 0) {\n                *(puVar7 + 1) = 0;\n            }\n            else {\n                uVar6 = fcn.00406a25();\n                *(puVar7 + 1) = (uVar6 & 0xffff8000) != 0;\n                fcn.00406a0e(1);\n            }\n            puVar7[6] = 3;\n            puVar7[2] = 3;\n            uVar1 = *(*puVar7 + 0x416010);\n            puVar7[9] = 0;\n            puVar7[5] = 0;\n            if ((uVar1 & 3) != 0) {\n                fcn.00407dd9(puVar7 + 2, *(puVar7 + 1));\n                if ((uVar1 & 3) == 2) {\n                    fcn.00407dd9(puVar7 + 6, *(puVar7 + 1));\n                }\n                else if ((puVar7[2] == 1) && ((*(*puVar7 + 0x416010) & 0x18) != 0)) {\n                    uVar6 = puVar7[3];\n                    if (uVar6 < 0x100) {\n                        if (uVar6 < 0x88) {\n                            if (uVar6 < 0x10) {\n                                if (7 < uVar6) {\n                                    uVar6 = uVar6 - 0x10;\n                                }\n                            }\n                            else {\n                                uVar6 = uVar6 - 8;\n                            }\n                        }\n                        else {\n                            uVar6 = uVar6 - 0x108;\n                        }\n                        uVar6 = uVar6 + arg_10h[4];\n                    }\n                    else {\n                        uVar6 = uVar6 - 0x100;\n                    }\n                    puVar7[3] = uVar6;\n                }\n            }\n            arg_10h[4] = arg_10h[4] + 1;\n        }\n    }\ncode_r0x00408c36:\n    fcn.00407d90(1);\n    puVar4 = arg_10h[4] * 0x28 + *arg_10h;\n    arg_10h[4] = arg_10h[4] + 1;\n    puVar4[5] = puVar4 + 3;\n    puVar4[9] = puVar4 + 7;\n    puVar4[6] = 3;\n    puVar4[2] = 3;\n    *puVar4 = 0x16;\n    iVar3 = 0;\n    if (0 < arg_10h[4]) {\n        iVar8 = 0;\n        do {\n            iVar5 = *arg_10h + iVar8;\n            if (*(iVar5 + 0x14) == 0) {\n                *(iVar5 + 0x14) = iVar5 + 0xc;\n            }\n            if (*(iVar5 + 0x24) == 0) {\n                *(iVar5 + 0x24) = iVar5 + 0x1c;\n            }\n            iVar3 = iVar3 + 1;\n            iVar8 = iVar8 + 0x28;\n        } while (iVar3 < arg_10h[4]);\n    }\n    return;\n}\n",
        "token_count": 1583
    },
    "00408c9d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408c9d(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint *arg_8h_00;\n    \n    puVar2 = arg_8h;\n    fcn.0040a4cd(in_ECX + 0x10, arg_8h + 0xb, 0x1c);\n    arg_8h = arg_8h[6];\n    if (0x1fff < arg_8h) {\n        arg_8h = 0x2000;\n    }\n    if (arg_8h != NULL) {\n        fcn.0040a4cd(*(in_ECX + 0xc) + 0x3c000, puVar2[5], arg_8h);\n    }\n    uVar4 = puVar2[9];\n    if (0x2000U - arg_8h <= puVar2[9]) {\n        uVar4 = 0x2000U - arg_8h;\n    }\n    if (uVar4 != 0) {\n        fcn.0040a4cd(*(in_ECX + 0xc) + 0x3c000 + arg_8h, puVar2[8], uVar4);\n    }\n    *(in_ECX + 0x30) = 0;\n    *(in_ECX + 0x2c) = 0x40000;\n    arg_8h_00 = puVar2[3];\n    if (arg_8h_00 == NULL) {\n        arg_8h_00 = *puVar2;\n    }\n    if (0 < puVar2[4]) {\n        cVar3 = fcn.0040839d(arg_8h_00, puVar2[4]);\n        if (cVar3 == '\\0') {\n            *arg_8h_00 = 0x16;\n        }\n    }\n    iVar1 = *(in_ECX + 0xc);\n    uVar5 = *(iVar1 + 0x3c020) & 0x3ffff;\n    uVar4 = *(iVar1 + 0x3c01c) & 0x3ffff;\n    if (0x3ffff < uVar4 + uVar5) {\n        uVar4 = 0;\n        uVar5 = 0;\n    }\n    puVar2[0x12] = iVar1 + uVar5;\n    puVar2[0x13] = uVar4;\n    fcn.00401310();\n    uVar4 = *(*(in_ECX + 0xc) + 0x3c030);\n    uVar5 = 0x1fc0;\n    if (uVar4 < 0x1fc0) {\n        uVar5 = uVar4;\n    }\n    if (uVar5 != 0) {\n        fcn.004012cc(uVar5 + 0x40);\n        fcn.0040a4cd(puVar2[5], *(in_ECX + 0xc) + 0x3c000, uVar5 + 0x40);\n    }\n    return;\n}\n",
        "token_count": 726
    },
    "00408dad": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408dad(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t arg_ch;\n    uint var_4h;\n    \n    if (in_ECX[6] == 0) {\n        if (arg_8h != 0) {\n            fcn.004012cc(arg_8h);\n            iVar3 = fcn.00405f9d(in_ECX[4] + *in_ECX, arg_8h);\n            in_ECX[4] = in_ECX[4] + iVar3;\n        }\n    }\n    else {\n        iVar3 = in_ECX[1];\n        uVar1 = (in_ECX[4] - iVar3) + arg_8h;\n        if (uVar1 == 0) {\n            in_ECX[4] = in_ECX[4] + arg_8h;\n        }\n        else {\n            arg_ch = (~uVar1 + 1 & 0xf) + uVar1;\n            fcn.004012cc(arg_ch);\n            iVar2 = fcn.00405f9d(*in_ECX + iVar3, arg_ch);\n            fcn.00402f92(*in_ECX + iVar3, arg_ch);\n            in_ECX[4] = in_ECX[4] + (-(iVar2 != 0) & arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 335
    },
    "00408f1b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00408f1b(int32_t *param_1, char param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = param_1[4];\n    if (uVar2 < 3) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        if (param_2 != '\\0') {\n            uVar2 = param_1[5];\n        }\n        uVar1 = fcn.00402ebb(0xffffffff, *param_1 + 2, uVar2 - 2);\n    }\n    return uVar1;\n}\n",
        "token_count": 141
    },
    "00409021": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409021(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    bool bVar2;\n    \n    if ((*(in_ECX + 0x28) != '\\0') && (iVar1 = *(in_ECX + 0x2c),  iVar1 != 0)) {\n        if ((*(in_ECX + 0x500) | *(in_ECX + 0x504)) != 0) {\n            bVar2 = CARRY4(arg_8h, *(in_ECX + 0x4f8));\n            arg_8h = arg_8h + *(in_ECX + 0x4f8);\n            arg_ch = arg_ch + *(in_ECX + 0x4fc) + bVar2;\n            arg_10h = *(in_ECX + 0x500);\n            arg_14h = *(in_ECX + 0x504);\n        }\n        fcn.0040b9e3(*(in_ECX + 0x4f0), *(in_ECX + 0x4f4), *(iVar1 + 0x57c0), *(iVar1 + 0x57c4), arg_8h, arg_ch, arg_10h\n                     , arg_14h);\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "004090e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint32_t __cdecl fcn.004090e2(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint uVar6;\n    char *in_ECX;\n    uint32_t uVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar7 = 0;\n    var_8h = 0;\n    var_4h = arg_8h;\n    if (arg_ch != 0) {\n        do {\n            iVar2 = *(in_ECX + 0x2c);\n            uVar7 = arg_ch;\n            if ((*(in_ECX + 0x24) < 1) &&\n               ((0x7fffffff < *(in_ECX + 0x24) || (*(in_ECX + 0x20) <= arg_ch && arg_ch != *(in_ECX + 0x20))))) {\n                uVar7 = *(in_ECX + 0x20);\n            }\n            if (*in_ECX == '\\0') {\n                if (*(iVar2 + 4) == -1) {\n                    return 0xffffffff;\n                }\n                uVar7 = fcn.00405f9d(var_4h, uVar7);\n                iVar5 = *(in_ECX + 0x38);\n                if (iVar5 == 0) {\n                    iVar5 = iVar2 + 0x4ae0;\n                }\n                if ((*(iVar5 + 8) & 2) != 0) {\n                    uVar6 = fcn.00402ebb();\n                    *(in_ECX + 0x510) = uVar6;\n                }\n            }\n            else {\n                fcn.0040a4cd(arg_8h, *(in_ECX + 8), *(in_ECX + 4));\n                uVar7 = *(in_ECX + 4);\n                *(in_ECX + 4) = 0;\n            }\n            puVar1 = in_ECX + 0x4e8;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 + uVar7;\n            *(in_ECX + 0x4ec) = *(in_ECX + 0x4ec) + (uVar7 >> 0x1f) + CARRY4(uVar3, uVar7);\n            var_8h = var_8h + uVar7;\n            var_4h = var_4h + uVar7;\n            arg_ch = arg_ch - uVar7;\n            puVar1 = in_ECX + 0x20;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 - uVar7;\n            *(in_ECX + 0x24) = (*(in_ECX + 0x24) - (uVar7 >> 0x1f)) - (uVar3 < uVar7);\n            if (((*(in_ECX + 0x20) | *(in_ECX + 0x24)) != 0) || (in_ECX[0x4c6] == '\\0')) break;\n            cVar4 = fcn.00412023(iVar2, in_ECX, 1, in_ECX[0x4c4]);\n            if (cVar4 == '\\0') {\n                in_ECX[0x4c7] = '\\x01';\n                return 0xffffffff;\n            }\n        } while (arg_ch != 0);\n    }\n    iVar2 = *(in_ECX + 0x2c);\n    if (iVar2 != 0) {\n        fcn.00409021(*(iVar2 + 0x71b0) + *(in_ECX + 0x4e8), \n                     *(iVar2 + 0x71b4) + *(in_ECX + 0x4ec) + CARRY4(*(iVar2 + 0x71b0), *(in_ECX + 0x4e8)), \n                     *(in_ECX + 0x4d0), *(in_ECX + 0x4d4));\n    }\n    if ((uVar7 != 0xffffffff) && (uVar7 = var_8h,  *(in_ECX + 0x518) != 0)) {\n        if ((var_8h & 0xf) != 0) {\n            var_8h = (var_8h & 0xfffffff0) + 0x10;\n        }\n        fcn.00402f92(arg_8h, var_8h);\n    }\n    fcn.0040e915();\n    return uVar7;\n}\n",
        "token_count": 1068
    },
    "00409244": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00409244(int32_t param_1, uint param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    *(param_1 + 0x1c) = param_2;\n    *(param_1 + 0x18) = param_3;\n    if (*(param_1 + 0xc) == '\\0') {\n        if (*(param_1 + 0x29) == '\\0') {\n            fcn.00405e88(param_2, param_3);\n        }\n    }\n    else if (param_3 < *(param_1 + 0x10) || param_3 == *(param_1 + 0x10)) {\n        fcn.0040a4cd(*(param_1 + 0x14), param_2, param_3);\n        *(param_1 + 0x14) = *(param_1 + 0x14) + param_3;\n        *(param_1 + 0x10) = *(param_1 + 0x10) - param_3;\n    }\n    puVar1 = param_1 + 0x4f0;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + param_3;\n    *(param_1 + 0x4f4) = *(param_1 + 0x4f4) + CARRY4(uVar2, param_3);\n    if (*(param_1 + 0x2a) == '\\0') {\n        uVar3 = fcn.00402ebb(*(param_1 + 0x50c), param_2, param_3);\n        *(param_1 + 0x50c) = uVar3;\n    }\n    fcn.0040e915();\n    return;\n}\n",
        "token_count": 417
    },
    "00409330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00409330(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint *arg_8h_00;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t *extraout_ECX;\n    int16_t iVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    ushort uStackY13372;\n    int16_t iStackY13370;\n    uchar auStackY13368 [8188];\n    uint var_1438h;\n    uint var_c38h;\n    uint uStackY104;\n    char *pcStackY96;\n    uint uStackY92;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00401200();\n    iVar5 = fcn.0040a9ea(arg_8h, 0x5c);\n    arg_8h_00 = &fcn.00409330::var_1438h;\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)();\n        iVar5 = fcn.0040aa17(&fcn.00409330::var_1438h, 0x5c);\n        if (iVar5 == 0) {\n            return;\n        }\n        arg_8h_00 = iVar5 + 2;\n    }\n    fcn.0040a850(arg_8h_00, arg_8h);\n    fcn.00405711();\n    cVar4 = fcn.00405920(0, &fcn.00409330::var_1438h, 4);\n    if (cVar4 == '\\0') {\n        fcn.004058fd();\n        return;\n    }\n    var_4h = -1;\n    bVar3 = false;\n    var_8h = 0;\n    do {\n        if (var_4h != -1) goto code_r0x004094de;\n        iVar5 = fcn.00405838();\n        iVar6 = fcn.00405f9d(&stack0xffffcbc4, 0x2000);\n        iVar11 = 0;\n        if (-1 < iVar6 + -0x10) {\n            do {\n                piVar1 = &stack0xffffcbc4 + iVar11;\n                if ((*piVar1 == '*') && ((&stack0xffffcbc5)[iVar11] == '*')) {\n                    uStackY92 = 0xb;\n                    pcStackY96 = \"*messages***\";\n                    uStackY104 = 0x40942f;\n                    iVar7 = fcn.0040a759(&stack0xffffcbc6 + iVar11, \"*messages***\", 0xb);\n                    if (iVar7 != 0) goto code_r0x00409433;\ncode_r0x004094a2:\n                    var_4h = iVar11 + iVar5;\n                    break;\n                }\ncode_r0x00409433:\n                if (((*piVar1 == 0x2a) && (*(&stack0xffffcbc6 + iVar11) == 0x2a)) && (iVar11 <= iVar6 + -0x20)) {\n                    uStackY92 = 0x40945e;\n                    iVar7 = fcn.0040a98b(&stack0xffffcbc8 + iVar11, 0x414474, 0xb);\n                    if (iVar7 == 0) {\n                        bVar3 = true;\n                        goto code_r0x004094a2;\n                    }\n                }\n                if ((*piVar1 == 'R') && ((&stack0xffffcbc5)[iVar11] == 'a')) {\n                    uStackY92 = 0x409485;\n                    iVar7 = fcn.0040a759(&stack0xffffcbc6 + iVar11, 0x41446c, 4);\n                    if (iVar7 == 0) goto code_r0x004095e2;\n                }\n                iVar11 = iVar11 + 1;\n            } while (iVar11 <= iVar6 + -0x10);\n        }\n        uStackY92 = 0;\n        pcStackY96 = NULL;\n        uStackY104 = 0x4094c4;\n        fcn.00405de9();\n        var_8h = var_8h + 1;\n    } while (var_8h < 0x80);\n    if (var_4h != -1) {\ncode_r0x004094de:\n        fcn.00405de9();\n        iVar5 = fcn.0040a403(0x80002);\n        *extraout_ECX = iVar5;\n        if (iVar5 != 0) {\n            uVar8 = fcn.00405f9d(iVar5, 0x80000);\n            extraout_ECX[1] = uVar8;\n            if (bVar3) {\n                extraout_ECX[1] = uVar8 >> 1;\n            }\n            else {\n                iVar5 = fcn.0040a403(uVar8 * 2 + 2);\n                if (iVar5 == 0) goto code_r0x004095e2;\n                *(extraout_ECX[1] + *extraout_ECX) = 0;\n                fcn.0040ecd2();\n                uStackY92 = 0x409556;\n                fcn.0040a41c(*extraout_ECX);\n                *extraout_ECX = iVar5;\n            }\n            uVar8 = 0x40000;\n            if (extraout_ECX[1] < 0x40001) {\n                uVar8 = extraout_ECX[1];\n            }\n            *(*extraout_ECX + uVar8 * 2) = 0;\n            iVar5 = 0;\n            uVar8 = 0;\n            if (extraout_ECX[1] != 0) {\n                do {\n                    iVar6 = *extraout_ECX;\n                    iVar9 = *(iVar6 + uVar8 * 2);\n                    uVar10 = uVar8 + 1;\n                    if (iVar9 == 0) break;\n                    if (iVar9 == 0x5c) {\n                        iVar2 = *(iVar6 + uVar10 * 2);\n                        if (iVar2 == 0x22) {\n                            iVar9 = 0x22;\n                        }\n                        else if (iVar2 == 0x5c) {\n                            iVar9 = 0x5c;\n                        }\n                        else if (iVar2 == 0x6e) {\n                            iVar9 = 10;\n                        }\n                        else if (iVar2 == 0x72) {\n                            iVar9 = 0xd;\n                        }\n                        else {\n                            if (iVar2 != 0x74) goto code_r0x004095c7;\n                            iVar9 = 9;\n                        }\n                        uVar10 = uVar8 + 2;\n                    }\n                    else if ((iVar9 == 0xd) || (iVar9 == 10)) {\n                        iVar9 = 0xc;\n                    }\ncode_r0x004095c7:\n                    *(iVar6 + iVar5 * 2) = iVar9;\n                    iVar5 = iVar5 + 1;\n                    uVar8 = uVar10;\n                } while (uVar10 < extraout_ECX[1]);\n            }\n            *(*extraout_ECX + iVar5 * 2) = 0;\n            extraout_ECX[1] = iVar5;\n        }\n    }\ncode_r0x004095e2:\n    uStackY92 = 0x4095e7;\n    fcn.004058fd();\n    return;\n}\n",
        "token_count": 1775
    },
    "00409659": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00409659(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x10) != '\\0') {\n        uVar2 = 0xffffffec;\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(param_2, 0xffffffec);\n        (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xffffffec, uVar1 | 0x400000);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00409680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409680(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    int32_t *extraout_ECX;\n    uchar auStackY8216 [4096];\n    uint var_1014h;\n    uint uStackY120;\n    uint var_15h;\n    uint uStack20;\n    \n    fcn.00401200();\n    if (*extraout_ECX != 0) {\n        *0x4 = 0x4144b6;\n        if (arg_14h == 0) {\n            *0x4 = 0x4144ac;\n        }\n        else if (arg_14h == 1) {\n            *0x4 = 0x4144b0;\n        }\n        else if (arg_14h == 2) {\n            *0x4 = 0x4144b4;\n        }\n        uStack20 = 1;\n        fcn.00402ebb();\n        if (arg_18h != 0) {\n            fcn.0040eca0(arg_18h, &stack0xffffdfe8, 0x1000);\n            fcn.0040a5a0(&stack0xffffdfe8);\n            fcn.00402ebb();\n        }\n        fcn.0040eca0(arg_8h, &fcn.00409680::var_1014h, 0x1000);\n        fcn.0040a5a0(&fcn.00409680::var_1014h);\n        uVar1 = fcn.00402ebb();\n        fcn.0040aac4(&fcn.00409680::var_15h + 1, 10, L\"%08x\", ~uVar1);\n        iVar2 = fcn.004095f6();\n        if (iVar2 != 0) {\n            iVar2 = iVar2 + 0x14;\n            iVar3 = fcn.0040a9ea(iVar2, 0xc);\n            if (iVar3 == 0) {\n                uVar1 = 0xff;\n            }\n            else {\n                uVar1 = iVar3 - iVar2 >> 1;\n            }\n            if (arg_10h - 1U < uVar1) {\n                uVar1 = -(arg_10h != 0) & arg_10h - 1U;\n            }\n            if (uVar1 != 0) {\n                fcn.0040a880(arg_ch, iVar2, uVar1);\n            }\n            *(arg_ch + uVar1 * 2) = 0;\n            uStackY120 = 0x4097a2;\n            puVar4 = fcn.0040aa17(arg_ch, 0x22);\n            if (puVar4 == NULL) {\n                return;\n            }\n            *puVar4 = 0;\n            return;\n        }\n    }\n    if (arg_8h != arg_ch) {\n        fcn.0040a850(arg_ch, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 716
    },
    "004098a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004098a8(int32_t hWnd, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint lpString;\n    uint var_50h;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t lpRect;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = fcn.004097c5(arg_ch, &var_10h, &var_ch);\n    (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n    (*_sym.imp.USER32.dll_GetClientRect)(hWnd, &var_50h);\n    iVar2 = (var_28h - lpRect) + 1;\n    iVar4 = (var_24h - var_2ch) + 1;\n    iVar5 = iVar4 - var_44h;\n    iVar3 = iVar2 - var_48h;\n    var_8h = iVar3;\n    if (var_1h != '\\0') {\n        if (arg_10h != '\\0') goto code_r0x004099ed;\n        var_14h = (var_48h * var_10h) / 100 + iVar3;\n        var_18h = (var_44h * var_ch) / 100 + iVar5;\n        iVar3 = (iVar2 - var_14h) / 2 + lpRect;\n        iVar2 = (iVar4 - var_18h) / 2 + var_2ch;\n        if (iVar3 < 0) {\n            iVar3 = 0;\n        }\n        if (iVar2 < 0) {\n            iVar2 = 0;\n        }\n        var_1ch = 0x204;\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xfffffff0);\n        if ((uVar1 & 0x800) == 0) {\n            var_1ch = 0x206;\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(hWnd, 0, iVar3, iVar2, var_14h, var_18h, var_1ch);\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n    }\n    iVar3 = var_8h;\n    if (arg_10h == '\\0') {\n        (*_sym.imp.USER32.dll_GetWindowTextW)(hWnd, &lpString, 0x400);\n        fcn.00409680(&lpString, &lpString, 0x400, 1, arg_ch);\n        (*_sym.imp.USER32.dll_SetWindowTextW)(hWnd, &lpString);\n    }\ncode_r0x004099ed:\n    iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(8);\n    iVar4 = (*_sym.imp.USER32.dll_GetWindow)(hWnd, 5);\n    hWnd = 0;\n    var_8h = iVar4;\n    while( true ) {\n        if ((iVar4 == 0) || (0x1ff < hWnd)) {\n            return;\n        }\n        (*_sym.imp.USER32.dll_GetWindowTextW)(iVar4, &lpString, 0x400);\n        if (lpString != 0) {\n            fcn.00409680(&lpString, &lpString, 0x400, 1, arg_ch);\n            (*_sym.imp.USER32.dll_SetWindowTextW)(iVar4, &lpString);\n        }\n        if (var_1h != '\\0') {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar4, &var_40h);\n            (*_sym.imp.USER32.dll_SetWindowPos)\n                      (iVar4, 0, (((var_40h - iVar3 / 2) - lpRect) * var_10h) / 100, \n                       (((var_3ch - (iVar5 - iVar2)) - var_2ch) * var_ch) / 100, \n                       (((var_38h - var_40h) + 1) * var_10h) / 100, (((var_34h - var_3ch) + 1) * var_ch) / 100, 0x204);\n        }\n        iVar4 = (*_sym.imp.USER32.dll_GetWindow)(iVar4, 2);\n        if (iVar4 == var_8h) break;\n        hWnd = hWnd + 1;\n    }\n    return;\n}\n",
        "token_count": 1153
    },
    "00409ff7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00409ff7(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uchar uStack776;\n    uint var_303h;\n    uint var_2ebh;\n    uint var_29ch;\n    uint var_23dh;\n    uint var_225h;\n    uint var_216h;\n    uint var_205h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    iVar4 = 0;\n    uVar1 = 1;\n    do {\n        (&uStack776)[iVar4] = uVar1;\n        *(&var_205h + iVar4) = uVar1;\n        *(&var_104h + uVar1) = iVar4;\n        iVar4 = iVar4 + 1;\n        uVar1 = uVar1 ^ -((uVar1 & 0x80) != 0) & 0x11b ^ uVar1 * 2;\n    } while (uVar1 != 1);\n    uVar5 = 0;\n    do {\n        *(uVar5 + 0x41dec0) = uVar1;\n        uVar1 = uVar1 * 2 ^ -((uVar1 & 0x80) != 0) & 0x11b;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 < 0x1e);\n    var_4h = 0;\n    do {\n        if (var_4h == '\\0') {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = *(&var_205h - *(&var_104h + (var_4h & 0xff)));\n        }\n        iVar4 = (((uVar1 * 2 ^ uVar1) * 2 ^ uVar1) * 2 ^ uVar1) * 2;\n        uVar2 = iVar4 >> 8 ^ uVar1 ^ iVar4 ^ 99;\n        iVar4 = var_4h * 4;\n        *(var_4h + 0x41dfe0) = uVar2;\n        *(iVar4 + 0x41cec1) = uVar2;\n        *(iVar4 + 0x41cec0) = uVar2;\n        *(iVar4 + 0x41d2c3) = uVar2;\n        *(iVar4 + 0x41d2c0) = uVar2;\n        *(iVar4 + 0x41d6c3) = uVar2;\n        *(iVar4 + 0x41d6c2) = uVar2;\n        *(iVar4 + 0x41dac2) = uVar2;\n        *(iVar4 + 0x41dac1) = uVar2;\n        if (uVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = *(&var_2ebh + *(&var_104h + uVar2));\n        }\n        *(iVar4 + 0x41cec3) = uVar3;\n        *(iVar4 + 0x41d2c2) = uVar3;\n        *(iVar4 + 0x41d6c1) = uVar3;\n        *(iVar4 + 0x41dac0) = uVar3;\n        if (uVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = *(&var_303h + *(&var_104h + uVar2));\n        }\n        *(iVar4 + 0x41cec2) = uVar3;\n        *(iVar4 + 0x41d2c1) = uVar3;\n        *(iVar4 + 0x41d6c0) = uVar3;\n        *(iVar4 + 0x41dac3) = uVar3;\n        uVar1 = var_4h & 0xff;\n        iVar6 = ((uVar1 << 3 ^ uVar1) << 2 ^ uVar1) * 2;\n        if ((iVar6 >> 8 ^ iVar6) == 5) {\n            uVar2 = 0;\n        }\n        else {\n            uVar1 = ((uVar1 << 3 ^ uVar1) << 2 ^ uVar1) * 2;\n            uVar2 = *(&var_205h - *(&var_104h + (uVar1 >> 8 ^ uVar1 & 0xff ^ 5)));\n        }\n        *(var_4h + 0x41dee0) = uVar2;\n        if (uVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = *(&var_29ch + *(&var_104h + uVar2));\n        }\n        uVar1 = uVar2;\n        iVar6 = uVar1 * 4;\n        *(iVar4 + 0x41bec2) = uVar3;\n        *(iVar4 + 0x41c2c1) = uVar3;\n        *(iVar4 + 0x41c6c0) = uVar3;\n        *(iVar4 + 0x41cac3) = uVar3;\n        *(iVar6 + 0x41aec2) = uVar3;\n        *(iVar6 + 0x41b2c1) = uVar3;\n        *(iVar6 + 0x41b6c0) = uVar3;\n        *(iVar6 + 0x41bac3) = uVar3;\n        if (uVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = *(&var_23dh + *(&var_104h + uVar1));\n        }\n        *(iVar4 + 0x41bec0) = uVar3;\n        *(iVar4 + 0x41c2c3) = uVar3;\n        *(iVar4 + 0x41c6c2) = uVar3;\n        *(iVar4 + 0x41cac1) = uVar3;\n        *(iVar6 + 0x41aec0) = uVar3;\n        *(iVar6 + 0x41b2c3) = uVar3;\n        *(iVar6 + 0x41b6c2) = uVar3;\n        *(iVar6 + 0x41bac1) = uVar3;\n        if (uVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = *(&var_216h + *(&var_104h + uVar1));\n        }\n        *(iVar4 + 0x41bec1) = uVar3;\n        *(iVar4 + 0x41c2c0) = uVar3;\n        *(iVar4 + 0x41c6c3) = uVar3;\n        *(iVar4 + 0x41cac2) = uVar3;\n        *(iVar6 + 0x41aec1) = uVar3;\n        *(iVar6 + 0x41b2c0) = uVar3;\n        *(iVar6 + 0x41b6c3) = uVar3;\n        *(iVar6 + 0x41bac2) = uVar3;\n        if (uVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = *(&var_225h + *(&var_104h + uVar1));\n        }\n        var_4h = var_4h + 1;\n        *(iVar4 + 0x41bec3) = uVar3;\n        *(iVar4 + 0x41c2c2) = uVar3;\n        *(iVar4 + 0x41c6c1) = uVar3;\n        *(iVar4 + 0x41cac0) = uVar3;\n        *(iVar6 + 0x41aec3) = uVar3;\n        *(iVar6 + 0x41b2c2) = uVar3;\n        *(iVar6 + 0x41b6c1) = uVar3;\n        *(iVar6 + 0x41bac0) = uVar3;\n    } while (var_4h < 0x100);\n    return;\n}\n",
        "token_count": 1869
    },
    "0040a2da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a2da(uint param_1)\n\n{\n    if (*0x41dfe0 == '\\0') {\n        fcn.00409ff7();\n    }\n    return param_1;\n}\n",
        "token_count": 50
    },
    "0040a2ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a2ef(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_20h;\n    \n    *in_ECX = arg_8h;\n    uVar1 = 0;\n    do {\n        uVar2 = uVar1 + 1;\n        *(&var_20h + (uVar1 & 0xfffffffc) + (uVar1 & 3)) = *(uVar1 + arg_ch);\n        uVar1 = uVar2;\n    } while (uVar2 < 0x10);\n    iVar3 = 0;\n    do {\n        *(in_ECX + iVar3 + 4) = *(iVar3 + arg_10h);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x10);\n    fcn.00409bb9(&var_20h);\n    if (*in_ECX == 1) {\n        fcn.00409cce();\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "0040a41c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a41c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (arg_8h != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, arg_8h);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0040a43b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a43b(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    \n    if (arg_8h == 0) {\n        fcn.0040a403(arg_ch);\n    }\n    else {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, arg_8h, arg_ch);\n        (*_sym.imp.KERNEL32.dll_HeapReAlloc)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0040a555": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040a555(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_4h;\n    \n    if (arg_8h < arg_ch) {\n        fcn.0040a4cd(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        for (var_4h = arg_10h + -1; -1 < var_4h; var_4h = var_4h + -1) {\n            *(arg_8h + var_4h) = *(arg_ch + var_4h);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 157
    },
    "0040aa17": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040aa17(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t var_4h;\n    \n    var_4h = fcn.0040a826(arg_8h);\n    do {\n        var_4h = var_4h + -1;\n        if (var_4h < 0) {\n            return 0;\n        }\n    } while (*(arg_8h + var_4h * 2) != arg_ch);\n    return arg_8h + var_4h * 2;\n}\n",
        "token_count": 129
    },
    "0040ab6f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ab6f(void)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0040a550(0x101, 0x42d4f0);\n    if (iVar1 != 0) {\n        fcn.0040f16d();\n    }\n    iVar1 = fcn.0040a550(0xc, 0x418e8c);\n    if (iVar1 != 0) {\n        fcn.0040359d();\n    }\n    iVar1 = fcn.0040a550(0x14, 0x418e98);\n    if (iVar1 != 0) {\n        fcn.0040931b();\n    }\n    iVar1 = fcn.0040a550(0x4f18, 0x425a60);\n    if (iVar1 != 0) {\n        fcn.00402e19();\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "0040ac50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ac50(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        for (; (arg_10h = arg_10h + -1,  arg_10h != 0 && (*arg_8h == *arg_ch)); arg_8h = arg_8h + 1) {\n            arg_ch = arg_ch + 1;\n        }\n        return *arg_8h - *arg_ch;\n    }\n    return 0;\n}\n",
        "token_count": 132
    },
    "0040acf9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040acf9(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 1) == '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"Crypt32.dll\");\n        *param_1 = iVar2;\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"CryptProtectMemory\");\n            param_1[2] = iVar2;\n            iVar2 = (*pcVar1)(*param_1, \"CryptUnprotectMemory\");\n            param_1[3] = iVar2;\n        }\n        *(param_1 + 1) = 1;\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "0040ad38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ad38(int32_t arg_8h, uint16_t *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    \n    if (*0x41e0e8 == NULL) {\n        fcn.0040acf9();\n    }\n    if (arg_14h == '\\0') {\n        if ((*0x41e0ec == NULL) || ((arg_10h & 0xf) != 0)) goto code_r0x0040add8;\n        fcn.0040a4cd(arg_ch, arg_8h, arg_10h * 2);\n        iVar3 = (**0x41e0ec)(arg_ch, arg_10h * 2, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n        pcVar5 = \"CryptUnprotectMemory failed\";\n    }\n    else {\n        if ((*0x41e0e8 == NULL) || ((arg_10h & 0xf) != 0)) {\ncode_r0x0040add8:\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n            uVar4 = 0;\n            if (arg_10h == 0) {\n                return;\n            }\n            arg_8h = arg_8h - arg_ch;\n            do {\n                iVar1 = uVar4;\n                uVar4 = uVar4 + 1;\n                *arg_ch = iVar2 + 0x4b + iVar1 ^ *(arg_8h + arg_ch);\n                arg_ch = arg_ch + 1;\n            } while (uVar4 < arg_10h);\n            return;\n        }\n        fcn.0040a4cd(arg_ch, arg_8h, arg_10h * 2);\n        iVar3 = (**0x41e0e8)(arg_ch, arg_10h * 2, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n        pcVar5 = \"CryptProtectMemory failed\";\n    }\n    fcn.004036fa(pcVar5);\n    fcn.0040359c();\n    fcn.00403897(2);\n    return;\n}\n",
        "token_count": 520
    },
    "0040ae06": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040ae06(int32_t param_1, ushort *param_2, int32_t param_3)\n\n{\n    if (*(param_1 + 0x100) == '\\0') {\n        *param_2 = 0;\n    }\n    else {\n        fcn.0040ad38(param_1, param_2, param_3, 0);\n        param_2[param_3 + -1] = 0;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0040af55": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040af55(uint arg_8h, uint arg_ch, ushort *arg_10h, int32_t arg_14h)\n\n{\n    uint lpLCData;\n    uint var_64h;\n    \n    if (*0x4160b0 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(0x400, 0xf, &lpLCData, 100);\n        *0x42aa7c = lpLCData;\n        *0x42aa7e = 0;\n        *0x4160b0 = 0x42aa7c;\n    }\n    fcn.0040e623(arg_8h, arg_ch, &var_64h);\n    *arg_10h = 0;\n    (*_sym.imp.KERNEL32.dll_GetNumberFormatW)(0x400, 0, &var_64h, 0x4160a0, arg_10h, arg_14h);\n    arg_10h[arg_14h + -1] = 0;\n    return;\n}\n",
        "token_count": 247
    },
    "0040afdc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040afdc(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    if (1000000 < arg_8h) {\n        arg_8h = arg_8h >> 8;\n        arg_ch = arg_ch >> 8;\n    }\n    if (arg_ch == 0) {\n        arg_ch = 0;\n    }\n    else if (arg_ch < arg_8h) {\n        arg_ch = 100;\n    }\n    else {\n        arg_ch = (arg_8h * 100) / arg_ch;\n    }\n    return arg_ch;\n}\n",
        "token_count": 136
    },
    "0040b010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0040b010(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int16_t *arg_8h_00;\n    int16_t iVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    bool bVar6;\n    uint uVar7;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (iVar1 = *arg_8h,  iVar1 == 0)) {\n        piVar5 = NULL;\n        *arg_ch = 0;\n    }\n    else {\n        piVar5 = arg_8h;\n        bVar2 = false;\n        do {\n            uVar7 = 0x22;\n            bVar6 = bVar2;\n            if (iVar1 == 0x22) {\n                arg_8h_00 = piVar5 + 1;\n                if ((*arg_8h_00 == 0x22) &&\n                   (((bVar2 != false || (piVar5 != arg_8h)) || ((piVar5[2] != 0x2c && (piVar5[2] != 0)))))) {\n                    *arg_ch = 0x22;\n                    piVar5 = arg_8h_00;\n                    goto code_r0x0040b09a;\n                }\n                if (bVar2 == false) {\n                    uVar7 = 0x22;\n                    iVar4 = fcn.0040a9ea(arg_8h_00, 0x22);\n                    bVar6 = iVar4 != 0;\n                }\n                else {\n                    bVar6 = false;\n                }\n                if (bVar2 == bVar6) goto code_r0x0040b088;\n            }\n            else {\ncode_r0x0040b088:\n                if ((*piVar5 == 0x2c) && (!bVar6)) {\n                    *arg_ch = 0;\n                    do {\n                        piVar5 = piVar5 + 1;\n                        cVar3 = fcn.0040e55e(uVar7, *piVar5);\n                    } while (cVar3 != '\\0');\n                    return piVar5;\n                }\n                *arg_ch = *piVar5;\ncode_r0x0040b09a:\n                arg_ch = arg_ch + 1;\n            }\n            piVar5 = piVar5 + 1;\n            iVar1 = *piVar5;\n            bVar2 = bVar6;\n        } while (iVar1 != 0);\n        *arg_ch = 0;\n    }\n    return piVar5;\n}\n",
        "token_count": 588
    },
    "0040b10e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040b10e(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    iVar1 = *param_1;\n    piVar2 = param_1;\n    do {\n        if (iVar1 == 0) {\n            *param_1 = 0;\n            return;\n        }\n        if (*piVar2 == 0x5c) {\n            if (piVar2[1] == 0x5c) {\n                iVar1 = 0x5c;\n            }\n            else {\n                if (piVar2[1] != 0x6e) goto code_r0x0040b144;\n                iVar1 = 10;\n            }\n            *param_1 = iVar1;\n            piVar2 = piVar2 + 2;\n        }\n        else {\ncode_r0x0040b144:\n            *param_1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        }\n        param_1 = param_1 + 1;\n        iVar1 = *piVar2;\n    } while( true );\n}\n",
        "token_count": 250
    },
    "0040b21f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040b21f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x42aa80 == 0) && (iVar1 = (*_sym.imp.USER32.dll_GetDC)(0),  iVar1 != 0)) {\n        *0x42aa80 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(iVar1, 0x58);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, iVar1);\n    }\n    return (*0x42aa80 * param_1) / 0x60;\n}\n",
        "token_count": 131
    },
    "0040b262": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040b262(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x42aa84 == 0) && (iVar1 = (*_sym.imp.USER32.dll_GetDC)(0),  iVar1 != 0)) {\n        *0x42aa84 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(iVar1, 0x5a);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, iVar1);\n    }\n    return (*0x42aa84 * param_1) / 0x60;\n}\n",
        "token_count": 131
    },
    "0040b31f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b31f(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_60h;\n    uint var_5ch;\n    uint32_t var_58h;\n    uint var_4ch;\n    uint var_47h;\n    uint var_4h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x424920, 0x68);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_4h = uVar2;\n    if (*0x424924 == '\\0') {\n        fcn.004126b4();\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar2, 5);\n        (*pcVar1)(uVar2, 0xb1, 0, 0xffffffff);\n        (*pcVar1)(uVar2, 0xc2, 0, 0x41437c);\n        *0x424924 = '\\x01';\n    }\n    (*pcVar1)(var_4h, 0xb1, 100000000, 100000000);\n    var_60h = 0x5c;\n    (*pcVar1)(var_4h, 0x43a, 0, &var_60h);\n    var_47h._0_1_ = 0;\n    var_5ch = 1;\n    if (arg_8h != '\\0') {\n        var_58h = var_58h & 0xbfffffff | 1;\n        var_4ch = 0xa0;\n        var_5ch = 0x40000001;\n    }\n    (*pcVar1)(var_4h, 0x444, 1, &var_60h);\n    (*pcVar1)(var_4h, 0xc2, 0, arg_ch);\n    (*pcVar1)(var_4h, 0xb1, 100000000, 100000000);\n    if (arg_8h != '\\0') {\n        var_58h = var_58h & 0xfffffffe | 0x40000000;\n        (*pcVar1)(var_4h, 0x444, 1, &var_60h);\n    }\n    (*pcVar1)(var_4h, 0xc2, 0, 0x414554);\n    return;\n}\n",
        "token_count": 548
    },
    "0040b433": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b433(int16_t *arg_8h, uint arglist)\n\n{\n    uint ARG_0;\n    uint uStackY28;\n    \n    fcn.00401200();\n    if (arg_8h != NULL) {\n        if (*arg_8h == 0) {\n            return;\n        }\n        (*_sym.imp.USER32.dll_wvsprintfW)();\n        uStackY28 = 0x40b46d;\n        fcn.0040b31f(1, &fcn.0040b433::ARG_0);\n    }\n    *0x424918 = *0x424918 + 1;\n    return;\n}\n",
        "token_count": 148
    },
    "0040b475": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040b475(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    uint ARG_1;\n    uint lpString;\n    uint var_800h;\n    uint uStackY44;\n    uint arg_14h;\n    \n    fcn.00401200();\n    fcn.004071cb(arg_8h, arg_ch, &fcn.0040b475::var_800h, 0x400);\n    if (arg_18h == '\\0') {\n        arg_14h = 0x65;\n    }\n    else {\n        arg_14h = 0x66;\n    }\n    ARG_1 = fcn.00409b0b();\n    uStackY44 = 0x40b4c3;\n    fcn.0040aac4(&fcn.0040b475::lpString, 0x600, ARG_1, arg_14h);\n    (*_sym.imp.USER32.dll_SetDlgItemTextW)();\n    fcn.0040af16();\n    return *0x424912 == '\\0';\n}\n",
        "token_count": 251
    },
    "0040b986": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b986(uint noname_0, int16_t *ARG_1, uint arglist)\n\n{\n    int32_t iVar1;\n    uchar auStackY8196 [8164];\n    uint uStackY32;\n    \n    fcn.00401200();\n    if ((*0x424912 == '\\0') && (*ARG_1 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        (*_sym.imp.USER32.dll_wvsprintfW)();\n        uStackY32 = 0x40b9d3;\n        fcn.0040b433(0x414314, &stack0xffffdffc);\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)();\n        }\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "0040bbd3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bbd3(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *arg_ch;\n    uint arg_10h;\n    uint var_804h;\n    uint16_t var_800h;\n    int16_t var_7feh;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    arg_10h = 0x400;\n    arg_ch = &var_804h;\ncode_r0x0040bce3:\n    do {\n        while( true ) {\n            do {\n                arg_8h = fcn.0040e6d3(arg_8h, arg_ch, arg_10h);\n                if (arg_8h == 0) {\n                    return;\n                }\n                var_4h = var_4h + 1;\n            } while ((var_4h == 1) || ((var_804h != 0x2f && (var_804h != 0x2d))));\n            iVar1 = fcn.0040f028(var_804h._2_2_);\n            if (iVar1 != 0x44) break;\ncode_r0x0040bcd5:\n            fcn.0040e5a3();\n        }\n        if (iVar1 != 0x45) {\n            if (iVar1 == 0x50) {\n                fcn.0040ae3a(&var_800h);\n            }\n            else if (iVar1 == 0x53) {\n                iVar1 = fcn.0040f028(var_800h);\n                if ((iVar1 == 0) || (iVar1 == 0x31)) {\n                    *0x424954 = 1;\n                }\n                else {\n                    if (iVar1 != 0x32) {\n                        if (iVar1 == 0x50) goto code_r0x0040bcd5;\n                        goto code_r0x0040bce3;\n                    }\n                    *0x424954 = 2;\n                }\n                *0x424926 = 1;\n            }\n            goto code_r0x0040bce3;\n        }\n        iVar1 = fcn.0040f028(var_800h);\n        if ((iVar1 == 0x4c) && (var_7feh == 0)) {\n            *0x424959 = 1;\n        }\n    } while( true );\n}\n",
        "token_count": 539
    },
    "0040bcf8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0040bcf8(int16_t *arg_8h, ushort *arg_ch, uchar *arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    uchar *extraout_ECX;\n    int32_t iVar3;\n    int16_t *extraout_EDX;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    uchar auStack8196 [8152];\n    uint uStack44;\n    ushort *puStack40;\n    uchar *puStack36;\n    int32_t iStack32;\n    int16_t *piStack28;\n    uchar *puStack24;\n    uint uStack20;\n    \n    fcn.00401200();\n    if (extraout_ECX != NULL) {\n        *extraout_ECX = 0;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = 0;\n    }\n    if ((arg_8h == NULL) || (iVar1 = *arg_8h,  iVar1 == 0)) {\n        piVar2 = NULL;\n    }\n    else {\n        piVar5 = NULL;\n        iVar3 = 0;\n        piVar4 = extraout_EDX;\n        do {\n            piVar2 = arg_8h + 1;\n            if (iVar1 == 0x3d) {\n                if ((arg_ch == NULL) || (piVar5 != NULL)) goto code_r0x0040bd62;\n                piVar5 = piVar4;\n                if (extraout_ECX != NULL) {\n                    *extraout_ECX = 1;\n                }\n            }\n            else {\n                if (iVar1 == 0xd) {\n                    piVar2 = arg_8h + 2;\n                    break;\n                }\n                if (iVar1 == 10) break;\ncode_r0x0040bd62:\n                *piVar4 = iVar1;\n                piVar4 = piVar4 + 1;\n                if (arg_14h + -2 < iVar3) {\n                    *arg_10h = 1;\n                    break;\n                }\n            }\n            iVar1 = *piVar2;\n            iVar3 = iVar3 + 1;\n            arg_8h = piVar2;\n        } while (iVar1 != 0);\n        *piVar4 = 0;\n        if ((arg_ch != NULL) && (*arg_ch = 0,  piVar5 != NULL)) {\n            uStack20 = 0x1000;\n            puStack24 = &stack0xffffdffc;\n            iStack32 = 0x40bdac;\n            piStack28 = piVar5;\n            (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)();\n            iStack32 = arg_14h;\n            puStack36 = &stack0xffffdffc;\n            puStack40 = arg_ch;\n            uStack44 = 0x40bdbc;\n            fcn.0040e5a3();\n            *piVar5 = 0;\n        }\n    }\n    return piVar2;\n}\n",
        "token_count": 682
    },
    "0040be0d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040be0d(void)\n\n{\n    uint lpString1;\n    int32_t iVar1;\n    uint *lpString2;\n    uint arg_10h;\n    uint var_820h;\n    uint lpFileOp;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_10h;\n    \n    fcn.00413135(&var_820h, 0x400);\n    if (*0x424925 == '\\0') {\n        lpString2 = &var_820h;\n        arg_10h = *0x41609c;\n        lpString1 = fcn.004072cf(lpString2, *0x41609c, 6);\n        iVar1 = fcn.0040efb8(lpString1, lpString2, arg_10h);\n        if (iVar1 == 0) {\n            fcn.00413122(0x4145e8);\n            iVar1 = fcn.0040a826(&var_820h);\n            *(&var_820h + iVar1 * 2 + 2) = 0;\n            fcn.0040a4a0(&lpFileOp, 0, 0x1e);\n            var_10h._0_2_ = 0x14;\n            var_18h = &var_820h;\n            var_1ch = 3;\n            (*_sym.imp.SHELL32.dll_SHFileOperationW)(&lpFileOp);\n        }\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "0040be9d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t * fcn.0040be9d(void)\n\n{\n    int16_t *arg_8h;\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t iVar3;\n    int32_t *unaff_EDI;\n    int16_t iStackY8200;\n    uint uStackY60;\n    uint uStackY52;\n    uint uStackY48;\n    uint var_1h;\n    \n    fcn.00401200();\n    arg_8h = fcn.0040a403(0x20000);\n    if (arg_8h == NULL) {\n        fcn.004035b1();\n    }\n    *arg_8h = 0;\n    iVar3 = 0;\n    do {\n        do {\n            iVar2 = fcn.0040bcf8(*unaff_EDI, 0, &fcn.0040be9d::var_1h, 0x1000);\n            *unaff_EDI = iVar2;\n            if (iVar2 == 0) {\n                return arg_8h;\n            }\n        } while ((*arg_8h == 0) && (iStackY8200 == 0x7b));\n        if (iStackY8200 == 0x7d) {\n            return arg_8h;\n        }\n        iVar2 = fcn.0040a826(&stack0xffffdff8);\n        if (0xfffb < iVar2 + iVar3) {\n            return arg_8h;\n        }\n        uStackY48 = 0x40bf0b;\n        fcn.0040a8c2(arg_8h, &stack0xffffdff8);\n        uStackY52 = 0x40bf11;\n        iVar3 = fcn.0040a826(arg_8h);\n        if (iVar3 != 0) {\n            piVar1 = arg_8h + iVar3 + -1;\n            do {\n                if (*piVar1 != 0x20) break;\n                iVar3 = iVar3 + -1;\n                piVar1 = piVar1 + -1;\n            } while (iVar3 != 0);\n        }\n        var_1h._0_1_ = unaff_EBX >> 0x18;\n        if (var_1h == '\\0') {\n            uStackY52 = 0x414554;\n            uStackY60 = 0x40bf3c;\n            fcn.0040a850(arg_8h + iVar3, 0x414554);\n        }\n    } while( true );\n}\n",
        "token_count": 597
    },
    "0040bffe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040bffe(uint param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *unaff_ESI;\n    \n    fcn.0040a850(unaff_ESI, param_1);\n    iVar3 = 0;\n    iVar2 = *unaff_ESI;\n    piVar1 = unaff_ESI;\n    while (iVar2 != 0) {\n        iVar2 = *piVar1;\n        if (((iVar2 == 0x3a) || (iVar2 == 0x5c)) || (iVar2 == 0x2f)) {\n            *piVar1 = 0x25;\n        }\n        iVar3 = iVar3 + 1;\n        piVar1 = unaff_ESI + iVar3;\n        iVar2 = *piVar1;\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0040c0be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c0be(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint lpValueName;\n    uint var_80ch;\n    uint uStack68;\n    uint uStack64;\n    uint *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint *puStack40;\n    uint *puStack36;\n    uint *puStack32;\n    char16_t *pcStack28;\n    uint uStack24;\n    uint uStack20;\n    uint *var_ch;\n    uint hKey;\n    uint32_t var_4h;\n    \n    var_4h = 0x40c0cb;\n    fcn.00401200();\n    if (*0x424958 != '\\0') {\n        hKey = arg_8h;\n        var_ch = 0x40c0e7;\n        fcn.0040bffe();\n        var_ch = &fcn.0040c0be::hKey;\n        uStack20 = 1;\n        uStack24 = 0;\n        pcStack28 = L\"Software\\\\WinRAR SFX\";\n        puStack32 = 0x80000001;\n        puStack36 = 0x40c0ff;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n        if (iVar1 == 0) {\n            puStack32 = &fcn.0040c0be::var_4h;\n            puStack36 = &fcn.0040c0be::var_80ch;\n            puStack40 = &fcn.0040c0be::var_ch;\n            uStack44 = 0;\n            puStack48 = &fcn.0040c0be::lpValueName;\n            uStack52 = hKey;\n            var_4h = 0x800;\n            uStack56 = 0x40c12c;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)();\n            if (iVar1 == 0) {\n                var_4h = var_4h >> 1;\n                uVar2 = 0x3ff;\n                if (var_4h < 0x3ff) {\n                    uVar2 = var_4h;\n                }\n                uStack56 = arg_ch;\n                *(&fcn.0040c0be::var_80ch + uVar2 * 2) = 0;\n                puStack60 = &fcn.0040c0be::var_80ch;\n                uStack64 = arg_8h;\n                uStack68 = 0x40c15c;\n                fcn.0040e5a3();\n            }\n            uStack56 = hKey;\n            puStack60 = 0x40c165;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        }\n    }\n    return;\n}\n",
        "token_count": 665
    },
    "0040c28d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c28d(uint lpFileName, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_DialogBoxParamW;\n    do {\n        *0x424908 = arg_ch;\n        *0x42490c = arg_10h;\n        *0x424900 = arg_14h;\n        if (*0x424906 == '\\0') {\n            if (*0x424907 == '\\0') {\n                iVar2 = (*pcVar1)(*0x418e84, L\"REPLACEFILEDLG\", *0x424920, 0x40b4ef, lpFileName);\n            }\n            else {\n                iVar2 = 2;\n            }\n        }\n        else {\n            iVar2 = 1;\n        }\n        if (iVar2 == 1) {\ncode_r0x0040c338:\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(lpFileName, 0);\n            return 0x59;\n        }\n        if (iVar2 == 2) {\n            return 0x4e;\n        }\n        if (iVar2 == 3) {\n            *0x424906 = '\\x01';\n            goto code_r0x0040c338;\n        }\n        if (iVar2 != 4) {\n            if (iVar2 == 5) {\n                *0x424912 = 1;\n                return 0x43;\n            }\n            if (iVar2 != 6) {\n                return 0x4e;\n            }\n            *0x424907 = 1;\n            return 0x4e;\n        }\n        iVar2 = (*pcVar1)(*0x418e84, L\"RENAMEDLG\", *0x424920, fcn.0040b83b, lpFileName);\n        if (iVar2 != 0) {\n            return 0x52;\n        }\n    } while( true );\n}\n",
        "token_count": 441
    },
    "0040c34e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c34e(char *arg_8h, int16_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_800h;\n    \n    fcn.004071cb(arg_8h, arg_ch, &var_800h, 0x400);\n    uVar1 = fcn.0040c28d(&var_800h, arg_10h, arg_14h, arg_18h);\n    uVar2 = uVar1;\n    if ((arg_ch != NULL) && (*arg_ch != 0)) {\n        uVar2 = fcn.0040a850(arg_ch, &var_800h);\n    }\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        uVar2 = fcn.0040eca0(&var_800h, arg_8h, 0x1000000);\n    }\n    return uVar2 & 0xffffff00 | uVar1 & 0xff;\n}\n",
        "token_count": 253
    },
    "0040c492": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c492(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint dwInitParam;\n    \n    fcn.004071cb(arg_8h, arg_ch, &dwInitParam, 0x400);\n    uVar1 = (*_sym.imp.USER32.dll_DialogBoxParamW)(*0x418e88, 0x4145d0, *0x424920, fcn.0040baa4, &dwInitParam);\n    if (arg_8h != 0) {\n        fcn.0040eca0(&dwInitParam, arg_8h, 0x1000000);\n    }\n    if (arg_ch != 0) {\n        fcn.0040a850(arg_ch, &dwInitParam);\n    }\n    return uVar1;\n}\n",
        "token_count": 190
    },
    "0040c50e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpExitCode\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: hProcess\n\nvoid __cdecl fcn.0040c50e(uint arg_8h)\n\n{\n    uint *puVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    bool bVar4;\n    code *pcVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint *arg_8h_00;\n    uint unaff_EDI;\n    uint var_1048h;\n    uint var_848h;\n    uint uStackY80;\n    uint *pExecInfo;\n    uint *var_44h;\n    uint var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint hProcess;\n    uint lpExitCode;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00401200();\n    if (*arg_8h_00 == 0) {\n        return;\n    }\n    uVar7 = fcn.0040a826(arg_8h_00);\n    if (0x3f5 < uVar7) {\n        return;\n    }\n    fcn.0040a4a0(&fcn.0040c50e::pExecInfo, 0, 0x3c);\n    iVar3 = *arg_8h_00;\n    pExecInfo = 0x3c;\n    var_44h = 0x1c0;\n    var_38h = arg_8h_00;\n    if (iVar3 == 0x22) {\n        var_38h = arg_8h_00 + 2;\n    }\n    iVar8 = 0;\n    puVar1 = arg_8h_00;\n    while (iVar3 != 0) {\n        if (*puVar1 == 0x22) {\n            do {\n                iVar8 = iVar8 + 1;\n                if (*(arg_8h_00 + iVar8 * 2) == 0) goto code_r0x0040c590;\n            } while (*(arg_8h_00 + iVar8 * 2) != 0x22);\n            *(arg_8h_00 + iVar8 * 2) = 0x20;\n        }\ncode_r0x0040c590:\n        if ((*(arg_8h_00 + iVar8 * 2) == 0x20) || (*(arg_8h_00 + iVar8 * 2 + 2) == 0x2f)) {\n            piVar2 = arg_8h_00 + iVar8 * 2;\n            if (*piVar2 == 0x20) {\n                *piVar2 = 0;\n            }\n            break;\n        }\n        iVar8 = iVar8 + 1;\n        puVar1 = arg_8h_00 + iVar8 * 2;\n        iVar3 = *puVar1;\n    }\n    iVar8 = fcn.00407561();\n    if (iVar8 != 0) {\n        fcn.0040eefb(iVar8, L\".inf\");\n    }\n    cVar6 = fcn.004060d2();\n    if (cVar6 != '\\0') {\n        fcn.00407088(var_38h, &fcn.0040c50e::var_1048h);\n        var_38h = &fcn.0040c50e::var_1048h;\n    }\n    if ((arg_8h != '\\0') && (cVar6 == '\\0')) {\n        fcn.0040a850(&fcn.0040c50e::var_848h, var_38h);\n        var_44h = &fcn.0040c50e::var_848h;\n        pExecInfo = 0x40c655;\n        fcn.0040a8c2(var_44h, L\".exe\");\n        pExecInfo = &fcn.0040c50e::var_848h;\n        uStackY80 = 0x40c661;\n        cVar6 = fcn.004060d2();\n        if (cVar6 == '\\0') {\n            return;\n        }\n    }\n    iVar9 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)();\n    pcVar5 = _sym.imp.USER32.dll_ShowWindow;\n    if (iVar9 == 0) {\n        return;\n    }\n    bVar4 = false;\n    if (((*0x424950 != '\\0') || (arg_8h != '\\0')) || (*0x424939 != '\\0')) {\n        if ((*0x424920 != 0) && (iVar9 = (*_sym.imp.USER32.dll_IsWindowVisible)(),  iVar9 != 0)) {\n            var_44h = 0x40c6c0;\n            (*pcVar5)();\n            bVar4 = true;\n        }\n        var_44h = 0x40c6d2;\n        (*_sym.imp.USER32.dll_WaitForInputIdle)();\n        fcn.0040bdce(unaff_EDI);\n        if (*0x424939 != '\\0') {\n            var_44h = 0x40c6f0;\n            iVar9 = (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)();\n            if ((iVar9 != 0) && (*0x42493c < arg_8h_00 + 0xfa)) {\n                *0x42493c = arg_8h_00 + 0xfa;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    if (iVar8 != 0) {\n        pExecInfo = 0x40c71e;\n        var_44h = iVar8;\n        iVar8 = fcn.0040eefb(iVar8, L\".exe\");\n        if (iVar8 == 0) goto code_r0x0040c752;\n    }\n    if ((*0x424950 == '\\0') || (arg_8h != '\\0')) {\n        *0x424940 = ((arg_8h == '\\0') - 1 & 0xfffffce0) + 1000;\n    }\n    else {\n        *0x424940 = 7000;\n    }\ncode_r0x0040c752:\n    if ((bVar4) && (arg_8h != '\\0')) {\n        var_44h = *0x424920;\n        pExecInfo = 0x40c768;\n        (*pcVar5)();\n    }\n    return;\n}\n",
        "token_count": 1556
    },
    "0040c76f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: hKey\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: lpFileOp\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c76f(uint *hWnd, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int16_t *piVar8;\n    ushort *puVar9;\n    uint uVar10;\n    uint arg_14h;\n    uint *puVar11;\n    uchar *puVar12;\n    uint32_t uVar13;\n    uint *puVar14;\n    uint *puVar15;\n    bool bVar16;\n    uint16_t uStackY86236;\n    uchar auStackY78044 [2];\n    uchar auStackY78042 [8190];\n    int16_t iStackY69852;\n    uchar auStackY61660 [16384];\n    int16_t iStackY45276;\n    uchar auStackY37084 [8192];\n    uchar auStackY28892 [2048];\n    ushort uStackY26844;\n    uchar auStackY24796 [2048];\n    uchar auStackY22748 [1024];\n    uint uStackY21724;\n    char cStackY19660;\n    int16_t iStackY16436;\n    uchar auStackY14388 [4096];\n    ushort uStackY10292;\n    uint var_1830h;\n    uint lpExistingFileName;\n    int16_t iStackY2102;\n    uint lpString;\n    uint lpCaption;\n    uint uStackY236;\n    uint *puStackY232;\n    uchar *in_stack_ffffff3c;\n    uint *arg_ch_00;\n    uint *lpFileOp;\n    uint *var_2ch;\n    char16_t *var_28h;\n    uint var_20h;\n    int32_t var_10h;\n    uchar *hKey;\n    uint32_t var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0x40c77c;\n    fcn.00401200();\n    if (arg_ch != 0) {\n        _auStack8 = 0x1000;\n        var_8h = &fcn.0040c76f::arg_ch + 3;\n        hKey = &stack0xffffc7cc;\n        var_10h = arg_ch;\n        arg_ch = fcn.0040bcf8(arg_ch, hKey, var_8h, 0x1000);\n        if (arg_ch != 0) {\ncode_r0x0040c7b5:\n            puVar4 = &stack0xffffc7cc;\n            puVar12 = &stack0xfffeaf24;\n            puVar15 = 0x6;\n            do {\n                var_28h = 0x40c7d0;\n                puVar4 = fcn.0040b010(puVar4, puVar12);\n                puVar12 = puVar12 + 0x2000;\n                puVar15 = puVar15 + -1;\n            } while (puVar15 != NULL);\n            uVar13 = 0;\n            while( true ) {\n                var_28h = 0x40c7ee;\n                iVar5 = fcn.0040eefb(&stack0xffff6f24, *(uVar13 * 4 + 0x4160b8));\n                if (iVar5 == 0) break;\n                uVar13 = uVar13 + 1;\n                if (0xd < uVar13) goto code_r0x0040d2a8;\n            }\n    // switch table (14 cases) at 0x40d2db\n            switch(uVar13) {\n            case 0:\n                if (arg_10h == 2) {\n                    var_28h = 0x400;\n                    var_2ch = &fcn.0040c76f::lpString;\n                    lpFileOp = 0x40c824;\n                    fcn.00413135();\n                    lpFileOp = &fcn.0040c76f::lpString;\n                    fcn.0040a850(&fcn.0040c76f::var_1830h, lpFileOp);\n                    fcn.00406ec1();\n                    fcn.0040a8c2(&fcn.0040c76f::var_1830h, &stack0xffffc7cc);\n                    fcn.00406505();\n                    fcn.00406535();\n                    fcn.004039b6();\n                    cVar3 = fcn.004068c3();\n                    pcVar2 = _sym.imp.KERNEL32.dll_GetFileAttributesW;\n                    goto joined_r0x0040c893;\n                }\n                goto code_r0x0040d2a8;\n            case 1:\n                if (arg_10h == 0) {\n                    bVar16 = *0x42492c != NULL;\n                    if (bVar16) {\n                        var_28h = L\"<br>\";\n                        var_2ch = *0x42492c;\n                        lpFileOp = 0x40ca29;\n                        fcn.0040a8c2(*0x42492c, L\"<br>\");\n                    }\n                    if (var_1h == '\\0') {\n                        puVar4 = fcn.0040be9d();\n                    }\n                    else {\n                        puVar4 = &stack0xffffc7cc;\n                    }\n                    if (bVar16) {\n                        iVar5 = fcn.0040a826(*0x42492c);\n                    }\n                    else {\n                        iVar5 = 0;\n                    }\n                    iVar7 = fcn.0040a826(puVar4);\n                    *0x42492c = fcn.0040a43b(*0x42492c, (iVar7 + iVar5) * 2 + 10);\n                    if (!bVar16) {\n                        **0x42492c = 0;\n                    }\n                    in_stack_ffffff3c = 0x40ca83;\n                    fcn.0040a8c2(0x40ca83, puVar4);\n                    if (var_1h == '\\0') {\n                        fcn.0040a41c(puVar4);\n                        in_stack_ffffff3c = puVar4;\n                    }\n                }\n                goto code_r0x0040d2a8;\n            case 2:\n                if (arg_10h == 0) {\n                    var_28h = &stack0xffffc7cc;\n                    var_2ch = hWnd;\n                    lpFileOp = 0x40cab1;\n                    (*_sym.imp.USER32.dll_SetWindowTextW)();\n                }\n                goto code_r0x0040d2a8;\n            case 3:\n                if ((arg_10h != 0) || (*0x42495a != 0)) goto code_r0x0040d2a8;\n                puVar11 = &stack0xffffc7cc;\n                lpString._0_2_ = 0;\n                if (auStackY14388._0_2_ == 0x22) {\n                    puVar11 = &stack0xffffc7ce;\n                }\n                var_2ch = 0x40caf1;\n                var_28h = puVar11;\n                uVar13 = fcn.0040a826(puVar11);\n                if (0x3ff < uVar13) goto code_r0x0040d2a8;\n                iVar1 = *puVar11;\n                if ((iVar1 == 0x2e) && (*(puVar11 + 2) == 0x5c)) {\n                    puVar11 = puVar11 + 1;\n                    if (*(puVar11 + 1) == 0) goto code_r0x0040d2a8;\ncode_r0x0040cbf7:\n                    var_2ch = puVar11;\n                    lpFileOp = &fcn.0040c76f::lpString;\n                    fcn.0040a850(lpFileOp, var_2ch);\n                }\n                else {\n                    if ((iVar1 == 0x5c) || ((iVar1 != 0 && (*(puVar11 + 2) == 0x3a)))) goto code_r0x0040cbf7;\n                    var_2ch = &fcn.0040c76f::hKey;\n                    lpFileOp = 0x1;\n                    iVar5 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n                    if (iVar5 == 0) {\n                        var_28h = &fcn.0040c76f::lpString;\n                        var_2ch = &fcn.0040c76f::var_10h;\n                        var_8h = 0x800;\n                        lpFileOp = puVar15;\n                        (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)();\n                        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                        var_8h = var_8h >> 1;\n                        uVar13 = 0x3ff;\n                        if (var_8h < 0x3ff) {\n                            uVar13 = var_8h;\n                        }\n                        *(&fcn.0040c76f::lpString + uVar13 * 2) = 0;\n                    }\n                    if (lpString != 0) {\n                        var_28h = 0x40cbad;\n                        iVar5 = fcn.0040a826(&fcn.0040c76f::lpString);\n                        if (*(&stack0xfffff7ca + iVar5 * 2) != 0x5c) {\n                            var_28h = 0x4143f4;\n                            lpFileOp = 0x40cbc9;\n                            fcn.0040a8c2(&fcn.0040c76f::lpString, 0x4143f4);\n                        }\n                    }\n                    var_28h = 0x40cbcf;\n                    iVar5 = fcn.0040a826(puVar11);\n                    lpFileOp = &fcn.0040c76f::lpString;\n                    var_2ch = 0x40cbdd;\n                    iVar7 = fcn.0040a826(lpFileOp);\n                    if (iVar5 + iVar7 < 0x3ff) {\n                        lpFileOp = &fcn.0040c76f::lpString;\n                        var_2ch = puVar11;\n                        fcn.0040a8c2(lpFileOp, puVar11);\n                    }\n                }\n                puVar9 = fcn.0040aa17(&fcn.0040c76f::lpString, 0x22);\n                if ((puVar9 != NULL) && (puVar9[1] == 0)) {\n                    *puVar9 = 0;\n                }\n                fcn.0040a850(0x41e0f8, &fcn.0040c76f::lpString);\n                fcn.0040c0be(&fcn.0040c76f::lpString, 0x400);\n                (*_sym.imp.USER32.dll_GetDlgItem)();\n                (*_sym.imp.USER32.dll_SetWindowTextW)();\n                pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n                (*_sym.imp.USER32.dll_SendMessageW)();\n                in_stack_ffffff3c = 0x41e0f8;\n                iVar5 = fcn.0040a93b(0x41e0f8, &fcn.0040c76f::lpString);\n                if (iVar5 != 0) {\n                    (*pcVar2)();\n                }\n                goto code_r0x0040d2a8;\n            case 4:\n                if (*0x424954 != 0x1) {\n                    var_28h = auStackY14388._0_2_;\n                    var_2ch = 0x40ccb1;\n                    cVar3 = fcn.0040e54c();\n                    if (cVar3 == '\\0') {\n                        *0x424954 = 0x2;\n                    }\n                    else {\n                        *0x424954 = auStackY14388._0_2_ - 0x30;\n                    }\n                }\n                goto code_r0x0040d2a8;\n            case 5:\n                if (auStackY14388._0_2_ == 0) {\ncode_r0x0040cd0e:\n                    *0x424907 = 0;\n                    *0x424906 = 1;\n                }\n                else {\n                    if (auStackY14388._0_2_ == 0x30) {\n                        *0x424907 = 0;\n                    }\n                    else {\n                        if (auStackY14388._0_2_ == 0x31) goto code_r0x0040cd0e;\n                        if (auStackY14388._0_2_ != 0x32) goto code_r0x0040d2a8;\n                        *0x424907 = 1;\n                    }\n                    *0x424906 = 0;\n                }\n                goto code_r0x0040d2a8;\n            case 6:\n                if (arg_10h == 4) {\n                    var_28h = 0x41466c;\n                    var_2ch = &stack0xffffc7cc;\n                    lpFileOp = 0x40cd7a;\n                    iVar5 = fcn.0040a93b(var_2ch, 0x41466c);\n                    if (iVar5 != 0) goto code_r0x0040cd7f;\n                }\n                break;\n            case 7:\n                if (arg_10h != 1) goto code_r0x0040cf33;\n                var_28h = &fcn.0040c76f::lpExistingFileName;\n                var_2ch = 0x400;\n                lpFileOp = 0x40cdba;\n                (*_sym.imp.KERNEL32.dll_GetTempPathW)();\n                lpFileOp = &fcn.0040c76f::lpExistingFileName;\n                fcn.00406ec1();\n                fcn.0040aac4(&fcn.0040c76f::var_1830h, 0x400, L\"%s%s%d\", &fcn.0040c76f::lpExistingFileName);\n                pcVar2 = _sym.imp.KERNEL32.dll_GetFileAttributesW;\n                while (iVar5 = (*pcVar2)(),  iVar5 != -1) {\n                    fcn.0040aac4(&fcn.0040c76f::var_1830h, 0x400, L\"%s%s%d\", &fcn.0040c76f::lpExistingFileName);\n                }\n                (*_sym.imp.USER32.dll_SetDlgItemTextW)();\n                if ((auStackY14388._0_2_ != 0) && (*0x424926 == '\\0')) {\n                    lpCaption._0_2_ = 0;\n                    iVar5 = fcn.0040a9ea(&stack0xffffc7cc, 0x2c);\n                    if ((iVar5 == 0) && (iVar5 = 0,  auStackY14388._0_2_ != 0)) {\n                        piVar8 = &stack0xffffc7cc;\n                        do {\n                            if (*piVar8 == 0x40) {\n                                fcn.0040a850(&fcn.0040c76f::lpCaption, &stack0xffffc7ce + iVar5 * 2);\n                                *(&stack0xffffc7cc + iVar5 * 2) = 0;\n                                break;\n                            }\n                            iVar5 = iVar5 + 1;\n                            piVar8 = &stack0xffffc7cc + iVar5 * 2;\n                        } while (*piVar8 != 0);\n                    }\n                    if (lpCaption == 0) {\n                        fcn.0040a850(&stack0xffffc7cc, &stack0xfffeaf24);\n                        puStackY232 = 0x40cee1;\n                        fcn.0040a850(&fcn.0040c76f::lpCaption, &stack0xfffecf24);\n                    }\n                    fcn.0040b10e();\n                    uStackY10292 = 0;\n                    puStackY232 = hWnd;\n                    uStackY236 = 0x40cf0f;\n                    iVar5 = (*_sym.imp.USER32.dll_MessageBoxW)();\n                    if (iVar5 == 6) goto code_r0x0040d2a8;\n                    *0x424925 = 1;\n                    *0x424912 = 1;\n                    (*_sym.imp.USER32.dll_EndDialog)();\n                    puVar15 = NULL;\ncode_r0x0040cf33:\n                    if (arg_10h == 7) {\n                        if (*0x424954 == puVar15) {\n                            *0x424954 = 0x2;\n                        }\n                        *0x424950 = 1;\n                    }\n                }\n                goto code_r0x0040d2a8;\n            case 8:\n                if (arg_10h == 3) {\n                    if (auStackY14388._0_2_ != 0) {\n                        var_28h = &stack0xffffc7cc;\n                        var_2ch = hWnd;\n                        lpFileOp = 0x40cf7a;\n                        (*_sym.imp.USER32.dll_SetWindowTextW)();\n                    }\n                    *0x424930 = fcn.0040be9d();\n                }\n                *0x424927 = 1;\n                goto code_r0x0040d2a8;\n            case 9:\n                if (arg_10h == 5) {\n                    var_28h = 0x1;\n                    puVar15 = lpFileOp;\ncode_r0x0040cd7f:\n                    lpFileOp = puVar15;\n                    fcn.0040c50e(in_stack_ffffff3c);\n                }\n                break;\n            case 10:\n                if (arg_10h == 6) {\n                    lpString._0_2_ = 0;\n                    var_28h = uStackY86236;\n                    var_2ch = 0x40cfc4;\n                    iVar5 = fcn.0040a467(var_28h);\n                    var_2ch = 0x400;\n                    if (iVar5 == 0x50) {\n                        lpFileOp = 0x423900;\n                        fcn.0040e5a3();\n                        var_8h = 2;\n                    }\n                    else if (iVar5 == 0x54) {\n                        lpFileOp = 0x423100;\n                        fcn.0040e5a3();\n                        var_8h = 7;\n                    }\n                    else {\n                        lpFileOp = 0x424100;\n                        fcn.0040e5a3();\n                        var_8h = 0x10;\n                    }\n                    uStackY26844 = 0;\n                    var_1830h._0_2_ = 0;\n                    fcn.0040a850(&fcn.0040c76f::lpExistingFileName, &stack0xfffecf24);\n                    if (lpExistingFileName == 0x22) {\n                        fcn.0040a850(&fcn.0040c76f::lpExistingFileName, &stack0xfffecf26);\n                        puVar9 = fcn.0040a9ea(&fcn.0040c76f::lpExistingFileName + 2, 0x22);\n                        if (puVar9 != NULL) {\n                            *puVar9 = 0;\n                            fcn.0040a850(&fcn.0040c76f::var_1830h, puVar9 + 1);\n                        }\n                    }\n                    else {\n                        cVar3 = fcn.004060d2();\n                        if (cVar3 == '\\0') {\n                            puVar11 = NULL;\n                            puVar15 = &fcn.0040c76f::lpExistingFileName;\n                            if (lpExistingFileName != 0) {\n                                do {\n                                    iVar1 = *puVar15;\n                                    if ((iVar1 == 0x20) || (iVar1 == 0x2f)) {\n                                        *puVar15 = 0;\n                                        cVar3 = fcn.004060d2();\n                                        if (cVar3 == '\\0') {\n                                            *puVar15 = iVar1;\n                                        }\n                                        else {\n                                            puVar14 = puVar15;\n                                            if (iVar1 == 0x2f) {\n                                                var_1830h._0_2_ = 0x2f;\n                                                puVar11 = &fcn.0040c76f::var_1830h + 2;\n                                                arg_ch_00 = puVar15 + 2;\n                                            }\n                                            else {\n                                                do {\n                                                    puVar14 = puVar14 + 2;\n                                                } while (*puVar14 == 0x20);\n                                                puVar11 = &fcn.0040c76f::var_1830h;\n                                                arg_ch_00 = puVar14;\n                                            }\n                                            fcn.0040a850(puVar11, arg_ch_00);\n                                            *puVar15 = iVar1;\n                                            puVar11 = puVar15;\n                                            puVar15 = puVar14;\n                                        }\n                                    }\n                                    puVar15 = puVar15 + 2;\n                                } while (*puVar15 != 0);\n                                if (puVar11 != NULL) {\n                                    *puVar11 = 0;\n                                }\n                            }\n                        }\n                    }\n                    if (iStackY45276 != 0) {\n                        fcn.00407088(&stack0xffff4f24, &stack0xffff9724);\n                    }\n                    fcn.00407088(&fcn.0040c76f::lpExistingFileName, &stack0xffff8f24);\n                    if (lpString == 0) {\n                        fcn.0040b0d4(&fcn.0040c76f::lpString, var_8h);\n                    }\n                    fcn.00406ec1();\n                    if (iStackY69852 != 0) {\n                        fcn.0040a8c2(&fcn.0040c76f::lpString, &stack0xfffeef24);\n                        fcn.00406ec1();\n                    }\n                    fcn.0040a850(&stack0xffffbfcc, &fcn.0040c76f::lpString);\n                    uVar10 = fcn.004072cf();\n                    fcn.0040a8c2(&fcn.0040c76f::lpString, uVar10);\n                    iVar5 = fcn.00407561();\n                    if ((iVar5 == 0) || (iVar5 = fcn.0040eefb(iVar5, L\".lnk\"),  iVar5 != 0)) {\n                        fcn.0040a8c2(&fcn.0040c76f::lpString, L\".lnk\");\n                    }\n                    fcn.004062c3(&fcn.0040c76f::lpString, 1);\n                    fcn.0040a850(&stack0xffff9f24, &stack0xffff8f24);\n                    fcn.00407613();\n                    fcn.0040e4a4();\n                    fcn.0040e4a4();\n                    puVar4 = &stack0xffff0f24;\n                    uVar10 = fcn.0040e4a4();\n                    puVar12 = &stack0xffff9f24;\n                    arg_14h = fcn.0040e4a4();\n                    in_stack_ffffff3c = NULL;\n                    fcn.0041304a(0, &stack0xffff8f24, &fcn.0040c76f::lpString, arg_14h, puVar12, uVar10, puVar4);\n                    if (iStackY16436 != 0) {\n                        (*_sym.imp.SHELL32.dll_SHChangeNotify)();\n                    }\n                }\n                goto code_r0x0040d2a8;\n            case 0xb:\n                if (arg_10h == 7) {\n                    *0x424958 = 1;\n                }\n                goto code_r0x0040d2a8;\n            case 0xc:\n                var_28h = auStackY14388._0_2_;\n                var_2ch = 0x40cd2e;\n                iVar5 = fcn.0040a467(var_28h);\n                if (iVar5 == 0x46) {\n                    *0x424905 = 1;\n                }\n                else if (iVar5 == 0x55) {\n                    *0x424904 = 1;\n                }\n                else {\n                    *0x424905 = 0;\n                    *0x424904 = 0;\n                }\n                goto code_r0x0040d2a8;\n            case 0xd:\n                *0x424939 = 1;\n            default:\n                goto code_r0x0040d2a8;\n            }\n            *0x424938 = 1;\n            goto code_r0x0040d2a8;\n        }\n    }\n    return;\njoined_r0x0040c893:\n    if (cVar3 == '\\0') goto code_r0x0040c9f7;\n    (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n    if ((cStackY19660 != '\\0') && (iVar5 = fcn.00406a2a(),  iVar5 != 0x400)) {\n        fcn.0040714e();\n        fcn.00406ec1();\n        uVar13 = fcn.0040a826(&fcn.0040c76f::lpString);\n        if ((uVar13 < 4) || (uVar6 = fcn.0040a826(&fcn.0040c76f::lpExistingFileName),  uVar13 <= uVar6)) {\n            in_stack_ffffff3c = NULL;\n            cVar3 = fcn.00406e5f();\n            if (cVar3 != '\\0') goto code_r0x0040c9f7;\n        }\n        iVar5 = fcn.0040a826(&stack0xffffab24);\n        *(&stack0xffffab26 + iVar5 * 2) = 0;\n        fcn.0040a4a0(&fcn.0040c76f::lpFileOp, 0, 0x1e);\n        var_28h = &stack0xffffab24;\n        var_2ch = 0x3;\n        (*_sym.imp.SHELL32.dll_SHFileOperationW)();\n    }\n    iVar5 = (*pcVar2)();\n    if ((iVar5 != -1) && (iVar5 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(),  iVar5 == 0)) {\n        do {\n            fcn.0040aac4(&fcn.0040c76f::lpExistingFileName, 0x400, L\"%s.%d.tmp\", &stack0xffffab24);\n            iVar5 = (*pcVar2)();\n        } while (iVar5 != -1);\n        iVar5 = (*_sym.imp.KERNEL32.dll_MoveFileW)();\n        if (iVar5 != 0) {\n            (*_sym.imp.KERNEL32.dll_MoveFileExW)();\n        }\n    }\n    in_stack_ffffff3c = &stack0xffffa724;\n    cVar3 = fcn.004068c3();\n    goto joined_r0x0040c893;\ncode_r0x0040c9f7:\n    fcn.00406522();\ncode_r0x0040d2a8:\n    arg_ch = fcn.0040bcf8(arg_ch, &stack0xffffc7cc, &fcn.0040c76f::arg_ch + 3, 0x1000);\n    if (arg_ch == 0) {\n        return;\n    }\n    goto code_r0x0040c7b5;\n}\n",
        "token_count": 6283
    },
    "0040d4de": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0040d4de(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    char cVar3;\n    uint uVar4;\n    uchar *arg_ch_00;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *unaff_EBX;\n    ushort uStack27240;\n    uchar auStack20608 [9752];\n    uchar auStack10856 [5416];\n    uint var_153ch;\n    uint var_1140h;\n    uint var_113ch;\n    uint var_93ch;\n    uint var_13ch;\n    uint uStack152;\n    uint uStack148;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint uVar7;\n    uint *var_4h;\n    \n    fcn.00401200();\n    cVar3 = fcn.004032cc(arg_8h, arg_ch, arg_10h, arg_14h, L\"STARTDLG\", 0, 0);\n    if (cVar3 != '\\0') {\n        return 1;\n    }\n    if (arg_ch == 0x110) {\n        *0x424920 = arg_8h;\n        *0x42491c = arg_8h;\n        if (*0x41e8fc != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)();\n        }\n        if (*0x41e8f8 != 0) {\n            (*_sym.imp.USER32.dll_SendDlgItemMessageW)();\n        }\n        fcn.0040c169(arg_8h);\n        pcVar2 = _sym.imp.USER32.dll_GetDlgItem;\n        uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)();\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        fcn.00413135();\n        uVar7 = (*pcVar2)();\n        (*_sym.imp.USER32.dll_SetWindowTextW)();\n        fcn.0041314c(uVar7);\n        *0x424924 = '\\0';\n        fcn.0040d313(0x41e900, 0x424928, 0x424934);\n        if (*0x424934 != 0) {\n            fcn.0040c76f(arg_8h, *0x424928, 7);\n        }\n        if (*0x424924 == '\\0') {\n            uStack27240 = 0;\n            arg_ch = 0x96;\n            do {\n                if (((arg_ch != 0x96) || (*0x424938 != '\\0')) && ((arg_ch != 0x97 || (*0x424938 == '\\0')))) {\n                    fcn.0040a8c2(&stack0xffff9598, 0x41480c);\n                    uVar7 = fcn.00409b0b();\n                    fcn.0040a8c2(&stack0xffff9598, uVar7);\n                }\n                arg_ch = arg_ch + 1;\n            } while (arg_ch < 0x9d);\n            if (*0x424954 == 0) {\n                fcn.00412f38(*0x418e84, uVar4, &stack0xffff9598, 0, 0);\n            }\n        }\n        pcVar2 = _sym.imp.USER32.dll_SetDlgItemTextW;\n        if (*0x424938 == '\\0') {\n            fcn.00409b0b();\n            (*pcVar2)();\n            fcn.00409b0b();\n            (*pcVar2)();\n        }\n        if (*0x424934 == 0) {\ncode_r0x0040dcbd:\n            if (*0x424954 == 2) {\n                (*_sym.imp.USER32.dll_EnableWindow)();\n            }\n            if (*0x424950 != '\\0') {\n                fcn.00403289();\n                fcn.00403289();\n            }\n            if ((*0x424954 != 0) && (*0x424912 == '\\0')) {\n                if (*0x424954 == 1) {\n                    (*_sym.imp.USER32.dll_SendMessageW)();\n                }\n                else {\n                    (*_sym.imp.USER32.dll_PostMessageW)();\n                }\n            }\n            if (*0x424910 == '\\0') {\n                return 1;\n            }\n            fcn.00409b0b();\n            (*pcVar2)();\n            return 1;\n        }\n        fcn.0040c76f(arg_8h, *0x424928, 0);\n        if ((*0x42492c != 0) && (*0x424954 == 0)) {\n            fcn.00412f38(*0x418e84, uVar4, *0x42492c, 0, 0);\n            fcn.0040a41c(*0x42492c);\n        }\n        if ((((*0x424954 == 1) || ((*_sym.imp.USER32.dll_SetForegroundWindow)(),  *0x424954 == 1)) ||\n            (*0x424959 != '\\0')) || (iVar5 = (*_sym.imp.USER32.dll_DialogBoxParamW)(),  iVar5 != 0)) {\n            fcn.0040c76f(arg_8h, *0x424928, 1);\n            goto code_r0x0040dcbd;\n        }\ncode_r0x0040d5c7:\n        *0x424912 = '\\x01';\n        goto code_r0x0040d590;\n    }\n    if (arg_ch != 0x111) {\n        return 0;\n    }\n    arg_10h = arg_10h & 0xffff;\n    if (arg_10h != 1) {\n        if (arg_10h != 2) {\n            if (arg_10h != 0x67) {\n                return 0;\n            }\n            uVar4 = fcn.00409b0b();\n            cVar3 = fcn.00402899(arg_8h, uVar4, 100);\n            if (cVar3 == '\\0') {\n                return 1;\n            }\n            (*_sym.imp.USER32.dll_SetDlgItemTextW)();\n            return 1;\n        }\n        *0x424920 = 0;\n        *0x424912 = '\\x01';\n        if ((*0x424914 != 0) && (*0x424918 != 0)) {\n            *0x424912 = 1;\n            *0x424920 = 0;\n            return 1;\n        }\n        goto code_r0x0040d590;\n    }\n    (*_sym.imp.USER32.dll_GetDlgItemTextW)();\n    if (*0x424911 != '\\0') {\n        *0x424920 = 0;\n        if (*0x424910 == '\\0') goto code_r0x0040d590;\n        goto code_r0x0040d5c7;\n    }\n    if (*0x424910 != '\\0') {\n        *0x424912 = '\\x01';\n        goto code_r0x0040da22;\n    }\n    (*_sym.imp.USER32.dll_GetDlgItem)();\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    if (*0x424918 == 0) {\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        (*pcVar2)();\n    }\n    (*_sym.imp.USER32.dll_SetFocus)();\n    if (*0x424950 == '\\0') {\n        var_4h = &fcn.0040d4de::var_93ch;\n        fcn.0040a850(&fcn.0040d4de::var_1140h, var_4h);\n        fcn.0040c25c();\n        uVar7 = 0xa5;\n        uVar4 = fcn.00409b0b();\n        fcn.0040aac4(&stack0xffffd598, 0x480, uVar4, uVar7);\n        arg_ch_00 = &stack0xffffd598;\n    }\n    else {\n        arg_ch_00 = fcn.00409b0b();\n        var_4h = unaff_EBX;\n    }\n    fcn.0040b31f(0x40d68d, arg_ch_00);\n    if (*0x424959 == '\\0') {\n        fcn.0040c039(&fcn.0040d4de::var_93ch);\n    }\n    bVar1 = false;\n    cVar3 = fcn.004062c3(&fcn.0040d4de::var_93ch, 0);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    if ((cVar3 == '\\0') && ((iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar5 == 5 || (iVar5 == 3)))) {\n        bVar1 = true;\n    }\n    cVar3 = fcn.00413122();\n    if ((cVar3 == '\\0') && (iVar5 = (*pcVar2)(),  iVar5 == 5)) {\n        bVar1 = true;\n    }\n    if (*0x424959 == '\\0') {\n        if (cVar3 != '\\0') {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            fcn.0040aac4(&fcn.0040d4de::var_113ch, 0x400, L\"__tmp_rar_sfx_access_check_%u\", uVar4);\n            fcn.00405711();\n            cVar3 = fcn.00405a95(0, &fcn.0040d4de::var_113ch, 9);\n            if ((cVar3 == '\\0') && (iVar5 = (*pcVar2)(),  iVar5 == 5)) {\n                bVar1 = true;\n            }\n            fcn.004058fd();\n            goto code_r0x0040d753;\n        }\n    }\n    else {\ncode_r0x0040d753:\n        if (cVar3 != '\\0') {\n            *0x424914 = 1;\n            fcn.004032a7();\n            fcn.004032a7();\n            fcn.00403289();\n            fcn.004032a7();\n            (*_sym.imp.USER32.dll_SetDlgItemTextW)();\n            iVar5 = (*_sym.imp.USER32.dll_GetDlgItem)();\n            if (iVar5 != 0) {\n                (*_sym.imp.USER32.dll_GetWindowLongW)();\n                (*_sym.imp.USER32.dll_SetWindowLongW)();\n            }\n            fcn.0040c76f(arg_8h, *0x424928, 5);\n            fcn.0040c76f(arg_8h, *0x424928, 2);\n            fcn.0040ba00(0x41e900);\n            fcn.0040c76f(arg_8h, *0x424928, 6);\n            if (((*0x424912 == '\\0') && (*0x424918 == 0)) && (*0x424944 == NULL)) {\n                fcn.0040c76f(0, *0x424928, 4);\n            }\n            fcn.00403289();\n            *0x424914 = 0;\ncode_r0x0040da22:\n            if ((*0x424918 < 1) || (*0x424912 != '\\0')) {\n                (*_sym.imp.USER32.dll_EndDialog)();\n            }\n            else {\n                *0x424911 = '\\x01';\n                fcn.00409b0b();\n                (*_sym.imp.USER32.dll_SetDlgItemTextW)();\n                fcn.00409b0b();\n                fcn.00409b0b();\n                (*_sym.imp.USER32.dll_MessageBoxW)();\n            }\n            return 1;\n        }\n        if (*0x424959 != '\\0') {\n            bVar1 = false;\n        }\n    }\n    if (bVar1) {\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)();\n        fcn.0040ae06();\n        fcn.0040aac4(&stack0xffffaf80, 0x130c, L\"-el -s2 \\\"-d%s\\\" \\\"-p%s\\\" \\\"-sp%s\\\"\", &fcn.0040d4de::var_93ch);\n        iVar5 = (*_sym.imp.KERNEL32.dll_CreateFileMappingW)();\n        if (iVar5 != 0) {\n            iVar6 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n            if (iVar6 != 0) {\n                fcn.0040e5a3();\n            }\n            fcn.0040b0d4(0x423100, 7);\n            fcn.0040b0d4(0x423900, 2);\n            fcn.0040b0d4(0x424100, 0x10);\n            uVar4 = (*_sym.imp.KERNEL32.dll_MapViewOfFile)();\n            uStack148 = 0x40d883;\n            fcn.0040a4cd(uVar4, 0x41f100, 0x5800);\n            uStack152 = 0x40d88c;\n            uStack148 = uVar4;\n            (*_sym.imp.KERNEL32.dll_UnmapViewOfFile)();\n        }\n        iVar6 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)();\n        fcn.0040ae82();\n        fcn.0040ae82();\n        if (iVar6 != 0) {\n            (*_sym.imp.USER32.dll_WaitForInputIdle)();\n            (*_sym.imp.KERNEL32.dll_Sleep)();\n            *0x424944 = var_4h;\n        }\n        if (iVar5 != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n        if (iVar6 != 0 && bVar1) goto code_r0x0040d590;\n    }\n    fcn.00409b0b();\n    fcn.0040aac4(&fcn.0040d4de::var_153ch, 0x600, 0x414810, &fcn.0040d4de::var_93ch);\n    fcn.00403537();\n    fcn.00409b0b();\n    (*_sym.imp.USER32.dll_MessageBoxW)();\n    *0x424918 = *0x424918 + 1;\ncode_r0x0040d590:\n    (*_sym.imp.USER32.dll_EndDialog)();\n    return 1;\n}\n",
        "token_count": 3412
    },
    "0040df5b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040df5b(int32_t *arg_8h, uint32_t *arg_ch, uint32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint var_20h;\n    uint32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    puVar8 = arg_10h;\n    if (arg_14h != '\\0') {\n        fcn.0040a4cd(arg_ch, arg_10h, 0x40);\n        puVar8 = arg_ch;\n    }\n    if (*0x42b0d0 == '\\0') {\n        iVar4 = 0;\n        piVar2 = 0x42aa94;\n        do {\n            piVar2[-1] = iVar4;\n            *piVar2 = (iVar4 + 1) % 5;\n            piVar6 = piVar2 + 5;\n            piVar2[1] = (iVar4 + 2) % 5;\n            piVar2[2] = (iVar4 + 3) % 5;\n            piVar2[3] = (iVar4 + 4) % 5;\n            if (iVar4 == 0) {\n                iVar4 = 4;\n            }\n            else {\n                iVar4 = iVar4 + -1;\n            }\n            piVar2 = piVar6;\n        } while (piVar6 < 0x42b0d4);\n        *0x42b0d0 = '\\x01';\n    }\n    piVar2 = arg_8h;\n    piVar6 = &var_20h;\n    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *piVar6 = *piVar2;\n        piVar2 = piVar2 + 1;\n        piVar6 = piVar6 + 1;\n    }\n    piVar2 = 0x42aa9c;\n    arg_14h = puVar8;\n    do {\n        uVar5 = *arg_14h;\n        uVar5 = uVar5 >> 8 & 0xff00ff00 | uVar5 << 0x18 | (uVar5 & 0xff00) << 8 | uVar5 >> 0x18;\n        *arg_14h = uVar5;\n        arg_14h = arg_14h + 1;\n        puVar1 = &var_20h + piVar2[-2];\n        var_4h = &var_20h + piVar2[1];\n        *var_4h = *var_4h + (((&var_20h)[piVar2[-1]] ^ (&var_20h)[*piVar2]) & *puVar1 ^ (&var_20h)[*piVar2]) +\n                            0x5a827999 + ((&var_20h)[piVar2[-3]] << 5 | (&var_20h)[piVar2[-3]] >> 0x1b) + uVar5;\n        *puVar1 = *puVar1 >> 2 | *puVar1 << 0x1e;\n        piVar2 = piVar2 + 5;\n        piVar6 = 0x42abdc;\n    } while (piVar2 < 0x42abdc);\n    arg_14h = 0x10;\n    do {\n        uVar5 = puVar8[arg_14h - 8U & 0xf] ^ puVar8[arg_14h + 2U & 0xf] ^ puVar8[arg_14h - 3U & 0xf] ^\n                puVar8[arg_14h & 0xf];\n        uVar5 = uVar5 << 1 | uVar5 < 0;\n        puVar8[arg_14h & 0xf] = uVar5;\n        puVar1 = &var_20h + piVar6[-2];\n        var_4h = &var_20h + piVar6[1];\n        *var_4h = *var_4h + (((&var_20h)[piVar6[-1]] ^ (&var_20h)[*piVar6]) & *puVar1 ^ (&var_20h)[*piVar6]) +\n                            0x5a827999 + ((&var_20h)[piVar6[-3]] << 5 | (&var_20h)[piVar6[-3]] >> 0x1b) + uVar5;\n        *puVar1 = *puVar1 >> 2 | *puVar1 << 0x1e;\n        arg_14h = arg_14h + 1;\n        piVar6 = piVar6 + 5;\n    } while (piVar6 < 0x42ac2c);\n    arg_14h = 0x14;\n    piVar2 = 0x42ac2c;\n    do {\n        uVar5 = puVar8[arg_14h - 8U & 0xf] ^ puVar8[arg_14h + 2U & 0xf] ^ puVar8[arg_14h - 3U & 0xf] ^\n                puVar8[arg_14h & 0xf];\n        uVar5 = uVar5 << 1 | uVar5 < 0;\n        puVar8[arg_14h & 0xf] = uVar5;\n        puVar1 = &var_20h + piVar2[-2];\n        var_4h = &var_20h + piVar2[1];\n        *var_4h = *var_4h + ((&var_20h)[piVar2[-1]] ^ (&var_20h)[*piVar2] ^ *puVar1) + 0x6ed9eba1 +\n                            ((&var_20h)[piVar2[-3]] << 5 | (&var_20h)[piVar2[-3]] >> 0x1b) + uVar5;\n        *puVar1 = *puVar1 >> 2 | *puVar1 << 0x1e;\n        arg_14h = arg_14h + 1;\n        piVar2 = piVar2 + 5;\n    } while (piVar2 < 0x42adbc);\n    arg_14h = 0x28;\n    arg_10h = 0x42adb8;\n    do {\n        uVar5 = puVar8[arg_14h - 8U & 0xf] ^ puVar8[arg_14h + 2U & 0xf] ^ puVar8[arg_14h - 3U & 0xf] ^\n                puVar8[arg_14h & 0xf];\n        uVar3 = uVar5 << 1 | uVar5 < 0;\n        puVar8[arg_14h & 0xf] = uVar3;\n        var_8h = &var_20h + arg_10h[2];\n        var_ch = &var_20h + arg_10h[-1];\n        uVar5 = (&var_20h)[arg_10h[-1]];\n        *var_8h = *var_8h + ((&var_20h)[arg_10h[1]] & (uVar5 | (&var_20h)[*arg_10h]) | uVar5 & (&var_20h)[*arg_10h]) +\n                            0x8f1bbcdc + ((&var_20h)[arg_10h[-2]] << 5 | (&var_20h)[arg_10h[-2]] >> 0x1b) + uVar3;\n        *var_ch = *var_ch >> 2 | *var_ch << 0x1e;\n        arg_14h = arg_14h + 1;\n        arg_10h = arg_10h + 5;\n    } while (arg_10h < 0x42af48);\n    arg_14h = 0x3c;\n    piVar2 = 0x42af4c;\n    do {\n        uVar5 = puVar8[arg_14h - 8U & 0xf] ^ puVar8[arg_14h + 2U & 0xf] ^ puVar8[arg_14h - 3U & 0xf] ^\n                puVar8[arg_14h & 0xf];\n        uVar5 = uVar5 << 1 | uVar5 < 0;\n        puVar8[arg_14h & 0xf] = uVar5;\n        puVar1 = &var_20h + piVar2[-2];\n        var_ch = &var_20h + piVar2[1];\n        *var_ch = *var_ch + ((&var_20h)[piVar2[-1]] ^ (&var_20h)[*piVar2] ^ *puVar1) + 0xca62c1d6 +\n                            ((&var_20h)[piVar2[-3]] << 5 | (&var_20h)[piVar2[-3]] >> 0x1b) + uVar5;\n        *puVar1 = *puVar1 >> 2 | *puVar1 << 0x1e;\n        arg_14h = arg_14h + 1;\n        piVar2 = piVar2 + 5;\n    } while (piVar2 < 0x42b0dc);\n    iVar4 = &var_20h - arg_8h;\n    iVar7 = 5;\n    do {\n        *arg_8h = *arg_8h + *(iVar4 + arg_8h);\n        arg_8h = arg_8h + 1;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    return;\n}\n",
        "token_count": 2252
    },
    "0040e397": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e397(uint32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_8h_00 = arg_8h;\n    uVar1 = 0;\n    do {\n        var_4h = uVar1 + 1;\n        *(&var_10h + uVar1) = *(arg_8h + 0x14 + (uVar1 < 4) * 4) >> (('\\x03' - (uVar1 & 3)) * '\\b' & 0x1f);\n        uVar1 = var_4h;\n    } while (var_4h < 8);\n    arg_8h = CONCAT13(0x80, arg_8h);\n    fcn.0040e2e9(arg_8h_00, &arg_8h + 3, 1, arg_10h);\n    while ((*(arg_8h_00 + 0x14) & 0x1f8) != 0x1c0) {\n        arg_8h = arg_8h & 0xffffff;\n        fcn.0040e2e9(arg_8h_00, &arg_8h + 3, 1, arg_10h);\n    }\n    fcn.0040e2e9(arg_8h_00, &var_10h, 8, arg_10h);\n    var_4h = 0;\n    do {\n        *(var_4h * 4 + arg_ch) = *(var_4h * 4 + arg_8h_00);\n        var_4h = var_4h + 1;\n    } while (var_4h < 5);\n    fcn.0040ae82(&var_4h, 4);\n    fcn.0040ae82(&var_8h, 4);\n    fcn.0040ae82(arg_8h_00 + 0x1c, 0x40);\n    fcn.0040ae82(arg_8h_00, 0x14);\n    fcn.0040ae82(arg_8h_00 + 0x14, 8);\n    fcn.0040ae82(&var_10h, 8);\n    if (arg_10h != '\\0') {\n        fcn.0040a4a0(arg_8h_00 + 0x5c, 0, 0x40);\n    }\n    return;\n}\n",
        "token_count": 600
    },
    "0040e4a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * fcn.0040e4a4(int16_t *param_1)\n\n{\n    if ((param_1 == NULL) || (*param_1 == 0)) {\n        param_1 = NULL;\n    }\n    return param_1;\n}\n",
        "token_count": 58
    },
    "0040e6b9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040e6b9(uint param_1, int16_t *param_2)\n\n{\n    if ((param_2 == NULL) || (*param_2 == 0)) {\n        fcn.0040e679(param_1);\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0040e6d3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0040e6d3(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int16_t *piVar3;\n    int16_t extraout_CX;\n    int16_t iVar4;\n    int16_t *extraout_EDX;\n    int16_t *extraout_EDX_00;\n    int16_t *piVar5;\n    uint32_t uVar6;\n    \n    do {\n        cVar2 = fcn.0040e55e();\n    } while (cVar2 != '\\0');\n    iVar4 = *extraout_EDX;\n    if (iVar4 == 0) {\n        piVar3 = NULL;\n    }\n    else {\n        uVar6 = 0;\n        bVar1 = false;\n        piVar3 = extraout_EDX;\n        do {\n            if ((!bVar1) &&\n               (cVar2 = fcn.0040e55e(iVar4),  piVar3 = extraout_EDX_00,  iVar4 = extraout_CX,  cVar2 != '\\0')) break;\n            piVar5 = piVar3;\n            if (iVar4 == 0x22) {\n                piVar5 = piVar3 + 1;\n                if (*piVar5 == 0x22) {\n                    if ((arg_ch != 0) && (uVar6 < arg_10h - 1U)) {\n                        *(arg_ch + uVar6 * 2) = 0x22;\n                        uVar6 = uVar6 + 1;\n                    }\n                }\n                else {\n                    bVar1 = !bVar1;\n                    piVar5 = piVar3;\n                }\n            }\n            else if ((arg_ch != 0) && (uVar6 < arg_10h - 1U)) {\n                *(arg_ch + uVar6 * 2) = iVar4;\n                uVar6 = uVar6 + 1;\n            }\n            piVar3 = piVar5 + 1;\n            iVar4 = *piVar3;\n        } while (iVar4 != 0);\n        if (arg_ch != 0) {\n            *(arg_ch + uVar6 * 2) = 0;\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 514
    },
    "0040e8bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar __cdecl fcn.0040e8bf(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.0040e828(&var_4h, &var_8h);\n    if (cVar1 != '\\0') {\n        if (arg_8h != 0) {\n            fcn.0040a6c7(arg_8h, var_4h, arg_10h);\n        }\n        if (arg_ch != 0) {\n            fcn.0040a880(arg_ch, var_8h, arg_10h);\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 179
    },
    "0040e915": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040e915(void)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uchar auStack32 [12];\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    if ((*0x42d4e8 & 1) == 0) {\n        *0x42d4e8 = *0x42d4e8 | 1;\n        *0x42d4e4 = fcn.0040ab64();\n    }\n    iVar1 = fcn.0040ab64();\n    if (0x32 < iVar1 - *0x42d4e4) {\n        if (*0x424912 != '\\0') {\n            uStack12 = 0xff;\n            uStack16 = 0x40e95c;\n            fcn.00403537();\n            uStack16 = 0xff;\n            uStack20 = 0x40e964;\n            fcn.00403897();\n            unaff_ESI = uStack12;\n        }\n        iVar1 = (*_sym.imp.USER32.dll_PeekMessageW)(&stack0xffffffe0, 0, 0, 0, 0, unaff_ESI);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_GetMessageW)(&stack0xffffffe0, 0, 0, 0);\n            (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xffffffe0);\n            (*_sym.imp.USER32.dll_DispatchMessageW)(&stack0xffffffe0);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "0040ecfd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ecfd(int16_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (param_3 != 0) {\n        do {\n            *(param_2 + uVar1 * 2) = *param_1;\n            *(param_2 + 1 + uVar1 * 2) = *(param_1 + 1);\n            if (*param_1 == 0) {\n                return;\n            }\n            uVar1 = uVar1 + 1;\n            param_1 = param_1 + 1;\n        } while (uVar1 < param_3);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0040f0b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f0b5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t lpCPInfo;\n    \n    uVar2 = 0;\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)(0, &lpCPInfo);\n    *(param_1 + 0x100) = 1 < lpCPInfo;\n    do {\n        iVar1 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByte)(uVar2);\n        *(uVar2 + param_1) = iVar1 != 0;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x100);\n    return;\n}\n",
        "token_count": 163
    },
    "0040f1d9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f1d9(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        *param_1 = 0;\n        fcn.0040a41c(param_1[0x2b]);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0040f527": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f527(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    \n    uVar3 = *(in_ECX + 0x96e8);\n    uVar1 = uVar3 - arg_ch;\n    if ((uVar1 < 0x3ffeff) && (uVar3 < 0x3ffeff)) {\n        puVar2 = uVar1 + *(in_ECX + 0x9890);\n        puVar4 = *(in_ECX + 0x9890) + uVar3;\n        *(in_ECX + 0x96e8) = uVar3 + arg_8h;\n        if (7 < arg_8h) {\n            uVar3 = arg_8h >> 3;\n            do {\n                *puVar4 = *puVar2;\n                puVar4[1] = puVar2[1];\n                puVar4[2] = puVar2[2];\n                puVar4[3] = puVar2[3];\n                puVar4[4] = puVar2[4];\n                puVar4[5] = puVar2[5];\n                puVar4[6] = puVar2[6];\n                puVar4[7] = puVar2[7];\n                puVar2 = puVar2 + 8;\n                puVar4 = puVar4 + 8;\n                arg_8h = arg_8h - 8;\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n        }\n        if ((((arg_8h != 0) && (*puVar4 = *puVar2,  1 < arg_8h)) && (puVar4[1] = puVar2[1],  2 < arg_8h)) &&\n           (((puVar4[2] = puVar2[2],  3 < arg_8h && (puVar4[3] = puVar2[3],  4 < arg_8h)) &&\n            ((puVar4[4] = puVar2[4],  5 < arg_8h && (puVar4[5] = puVar2[5],  6 < arg_8h)))))) {\n            puVar4[6] = puVar2[6];\n        }\n    }\n    else if (arg_8h != 0) {\n        do {\n            arg_8h = arg_8h - 1;\n            *(*(in_ECX + 0x9890) + *(in_ECX + 0x96e8)) = *((uVar1 & 0x3fffff) + *(in_ECX + 0x9890));\n            uVar1 = uVar1 + 1;\n            *(in_ECX + 0x96e8) = *(in_ECX + 0x96e8) + 1U & 0x3fffff;\n        } while (arg_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 705
    },
    "0040f984": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f984(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    uint var_10h;\n    int32_t **var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(param_1 + 0xb0) != *(param_1 + 0xb4)) {\n        **(param_1 + 0xb0) = 0;\n    }\n    puVar6 = param_1 + 4;\n    piVar3 = param_1 + 0xb8;\n    var_4h = 0x26;\n    var_ch = &var_10h;\n    do {\n        while (*piVar3 != 0) {\n            ppiVar4 = *piVar3;\n            *piVar3 = *ppiVar4;\n            ppiVar4[2] = &var_10h;\n            ppiVar4[1] = var_ch;\n            var_ch[2] = ppiVar4;\n            *ppiVar4 = 0xffff;\n            *(ppiVar4 + 2) = *puVar6;\n            var_ch = ppiVar4;\n        }\n        piVar3 = piVar3 + 1;\n        puVar6 = puVar6 + 1;\n        var_4h = var_4h + -1;\n    } while (var_4h != 0);\n    ppiVar4 = var_ch;\n    if (var_ch != &var_10h) {\n        do {\n            while ((ppiVar1 = ppiVar4 + *(ppiVar4 + 2) * 3,  *ppiVar1 == -1 &&\n                   (*(ppiVar1 + 2) + *(ppiVar4 + 2) < 0x10000))) {\n                ppiVar1[2][1] = ppiVar1[1];\n                ppiVar1[1][2] = ppiVar1[2];\n                *(ppiVar4 + 2) = *(ppiVar4 + 2) + *(ppiVar1 + 2);\n            }\n            ppiVar1 = ppiVar4 + 1;\n            ppiVar4 = *ppiVar1;\n        } while (*ppiVar1 != &var_10h);\n    }\n    while (var_ch != &var_10h) {\n        var_ch[2][1] = var_ch[1];\n        var_ch[1][2] = var_ch[2];\n        uVar2 = *(var_ch + 2);\n        ppiVar4 = var_ch;\n        if (0x80 < uVar2) {\n            iVar5 = (uVar2 - 0x81 >> 7) + 1;\n            uVar2 = uVar2 + iVar5 * -0x80;\n            do {\n                *ppiVar4 = *(param_1 + 0x14c);\n                *(param_1 + 0x14c) = ppiVar4;\n                ppiVar4 = ppiVar4 + 0x180;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        uVar7 = *(param_1 + 0x29 + uVar2);\n        if (*(param_1 + 4 + uVar7) != uVar2) {\n            puVar6 = param_1 + 3 + uVar7;\n            uVar7 = uVar7 - 1;\n            iVar5 = uVar2 - *puVar6;\n            ppiVar1 = param_1 + 0xb4 + iVar5 * 4;\n            ppiVar4[(uVar2 - iVar5) * 3] = *ppiVar1;\n            *ppiVar1 = ppiVar4 + (uVar2 - iVar5) * 3;\n        }\n        ppiVar1 = param_1 + 0xb8 + uVar7 * 4;\n        *ppiVar4 = *ppiVar1;\n        *ppiVar1 = ppiVar4;\n    }\n    return;\n}\n",
        "token_count": 937
    },
    "0040fae4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040fae4(int32_t param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    if (*(param_1 + 0xaa) == '\\0') {\n        *(param_1 + 0xaa) = 0xff;\n        fcn.0040f984();\n        piVar4 = param_1 + 0xb8 + param_2 * 4;\n        piVar2 = *piVar4;\n        if (piVar2 != NULL) {\n            *piVar4 = *piVar2;\n            return piVar2;\n        }\n    }\n    piVar4 = param_1 + 0xb8 + param_2 * 4;\n    iVar6 = param_2;\n    do {\n        iVar6 = iVar6 + 1;\n        piVar4 = piVar4 + 1;\n        if (iVar6 == 0x26) {\n            *(param_1 + 0xaa) = *(param_1 + 0xaa) + -1;\n            uVar5 = *(param_2 + 4 + param_1);\n            iVar6 = *(param_1 + 0x15c);\n            if (uVar5 * 0xc < iVar6 - *(param_1 + 0x150)) {\n                *(param_1 + 0x15c) = iVar6 + uVar5 * -0xc;\n                piVar4 = param_1 + 0x154;\n                *piVar4 = *piVar4 + uVar5 * -0xc;\n                return *piVar4;\n            }\n            return NULL;\n        }\n    } while (*piVar4 == 0);\n    puVar1 = param_1 + 0xb8 + iVar6 * 4;\n    puVar3 = *puVar1;\n    *puVar1 = *puVar3;\n    fcn.0040f179(puVar3, iVar6, param_2);\n    return puVar3;\n}\n",
        "token_count": 477
    },
    "0040fbd6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fbd6(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + 0xb4);\n    if (iVar2 != *(param_1 + 0xb0)) {\n        *(param_1 + 0xb4) = iVar2 + -0xc;\n        return;\n    }\n    ppiVar1 = param_1 + 0xb8;\n    if (*ppiVar1 != NULL) {\n        *ppiVar1 = **ppiVar1;\n        return;\n    }\n    fcn.0040fae4(0);\n    return;\n}\n",
        "token_count": 149
    },
    "0040fed1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040fed1(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t **ppuVar2;\n    ushort uVar3;\n    uint16_t uVar4;\n    uint32_t **ppuVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *arg_8h_00;\n    char *pcVar8;\n    uint uVar9;\n    uint16_t *in_ECX;\n    int32_t arg_ch;\n    uint8_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar6 = *in_ECX;\n    var_4h = uVar6 - 1;\n    arg_8h_00 = *(arg_8h + 0x650);\n    while (arg_8h_00 != *(in_ECX + 2)) {\n        fcn.0040f8b4(arg_8h_00, arg_8h_00 + -6);\n        arg_8h_00 = arg_8h_00 + -6;\n    }\n    *(*(in_ECX + 2) + 1) = *(*(in_ECX + 2) + 1) + '\\x04';\n    puVar1 = in_ECX + 1;\n    *puVar1 = *puVar1 + 4;\n    var_8h = *puVar1 - *(arg_8h_00 + 1);\n    uVar11 = *(arg_8h + 0x65c) != 0;\n    iVar12 = *(arg_8h_00 + 1) + uVar11 >> 1;\n    *(arg_8h_00 + 1) = iVar12;\n    *puVar1 = iVar12;\n    do {\n        puVar7 = arg_8h_00;\n        var_8h = var_8h - *(puVar7 + 7);\n        arg_8h_00 = puVar7 + 6;\n        iVar12 = *(puVar7 + 7) + uVar11 >> 1;\n        *(puVar7 + 7) = iVar12;\n        *puVar1 = *puVar1 + iVar12;\n        if (*(puVar7 + 1) <= *(puVar7 + 7) && *(puVar7 + 7) != *(puVar7 + 1)) {\n            uVar9 = *arg_8h_00;\n            uVar3 = *(puVar7 + 10);\n            puVar14 = arg_8h_00;\n            do {\n                puVar13 = puVar14;\n                *puVar13 = *(puVar13 + -6);\n                puVar14 = puVar13 + -6;\n                *(puVar13 + 1) = *(puVar13 + -2);\n                if (puVar14 == *(in_ECX + 2)) break;\n                uVar10 = uVar9 >> 8;\n            } while (*(puVar13 + -0xb) <= uVar10 && uVar10 != *(puVar13 + -0xb));\n            *puVar14 = uVar9;\n            *(puVar13 + -2) = uVar3;\n        }\n        var_4h = var_4h + -1;\n        if (var_4h == 0) {\n            pcVar8 = puVar7 + 7;\n            if (*pcVar8 == '\\0') {\n                do {\n                    var_4h = var_4h + 1;\n                    pcVar8 = pcVar8 + -6;\n                } while (*pcVar8 == '\\0');\n                *in_ECX = *in_ECX - var_4h;\n                var_8h = var_8h + var_4h;\n                if (*in_ECX == 1) {\n                    ppuVar5 = *(in_ECX + 2);\n                    var_10h = *ppuVar5;\n                    uVar4 = *(ppuVar5 + 1);\n                    do {\n                        uVar10 = var_10h >> 8;\n                        var_8h = var_8h >> 1;\n                        var_10h._0_2_ = CONCAT11(uVar10 - (uVar10 >> 1), var_10h);\n                        var_10h = var_10h & 0xffff0000 | var_10h;\n                    } while (1 < var_8h);\n                    ppuVar2 = arg_8h + 0x4b44 + *((uVar6 + 1 >> 1) + 0x4ab5 + arg_8h) * 4;\n                    *ppuVar5 = *ppuVar2;\n                    *ppuVar2 = ppuVar5;\n                    *(arg_8h + 0x650) = puVar1;\n                    *puVar1 = var_10h;\n                    in_ECX[3] = uVar4;\n                    return;\n                }\n            }\n            *puVar1 = *puVar1 + (var_8h - (var_8h >> 1));\n            arg_ch = uVar6 + 1 >> 1;\n            iVar12 = *in_ECX + 1 >> 1;\n            if (arg_ch != iVar12) {\n                uVar9 = fcn.0040f343(*(in_ECX + 2), arg_ch, iVar12);\n                *(in_ECX + 2) = uVar9;\n            }\n            *(arg_8h + 0x650) = *(in_ECX + 2);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1307
    },
    "00410060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.00410060(uint arg_8h, uint16_t *arg_ch)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint16_t **ppuVar6;\n    uint16_t *var_108h;\n    uint var_104h;\n    char var_8h;\n    char var_7h;\n    char *var_6h;\n    \n    puVar4 = *(in_ECX + 0x644);\n    pcVar1 = *(*(in_ECX + 0x650) + 1);\n    ppuVar6 = &var_108h;\n    if (arg_8h == '\\0') {\n        var_108h = *(in_ECX + 0x650);\n        ppuVar6 = &var_104h;\n        if (*(puVar4 + 4) == 0) goto code_r0x004100ec;\n    }\n    if (arg_ch == NULL) goto code_r0x004100a7;\n    puVar4 = *(puVar4 + 4);\n    while (*(arg_ch + 1) == pcVar1) {\n        *ppuVar6 = arg_ch;\n        ppuVar6 = ppuVar6 + 1;\n        if (*(puVar4 + 4) == 0) goto code_r0x004100de;\ncode_r0x004100a7:\n        puVar4 = *(puVar4 + 4);\n        if (*puVar4 == 1) {\n            arg_ch = puVar4 + 1;\n        }\n        else {\n            for (arg_ch = *(puVar4 + 2); *arg_ch != **(in_ECX + 0x650); arg_ch = arg_ch + 3) {\n            }\n        }\n    }\n    puVar4 = *(arg_ch + 1);\ncode_r0x004100de:\n    if (ppuVar6 == &var_108h) {\n        return puVar4;\n    }\ncode_r0x004100ec:\n    var_6h = pcVar1 + 1;\n    var_8h = *pcVar1;\n    if (*puVar4 == 1) {\n        var_7h = *(puVar4 + 3);\n    }\n    else {\n        if (puVar4 < *(in_ECX + 0x4bdc) || puVar4 == *(in_ECX + 0x4bdc)) {\n            return NULL;\n        }\n        for (pcVar2 = *(puVar4 + 2); *pcVar2 != *pcVar1; pcVar2 = pcVar2 + 6) {\n        }\n        iVar3 = pcVar2[1] - 1;\n        uVar5 = (puVar4[1] - *puVar4) - iVar3;\n        if (uVar5 < iVar3 * 2) {\n            var_7h = (uVar5 * 3 + -1 + iVar3 * 2) / (uVar5 * 2);\n        }\n        else {\n            var_7h = uVar5 < iVar3 * 5;\n        }\n        var_7h = var_7h + '\\x01';\n    }\n    do {\n        ppuVar6 = ppuVar6 + -1;\n        puVar4 = fcn.0040fc59();\n        if (puVar4 == NULL) {\n            return NULL;\n        }\n    } while (ppuVar6 != &var_108h);\n    return puVar4;\n}\n",
        "token_count": 799
    },
    "0041017a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041017a(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int16_t *piVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    char *pcVar10;\n    uint16_t *puVar11;\n    int16_t iVar12;\n    uint16_t uVar13;\n    uint32_t uVar14;\n    int16_t *arg_8h;\n    int16_t *arg_ch;\n    uint32_t uVar15;\n    uint16_t *puVar16;\n    uint var_20h;\n    ushort uStack32;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = **(param_1 + 0x650);\n    var_20h._0_1_ = uVar6;\n    var_20h._1_1_ = uVar6 >> 8;\n    var_20h._2_2_ = uVar6 >> 0x10;\n    uStack32 = *(*(param_1 + 0x650) + 1);\n    arg_8h = NULL;\n    if ((var_20h._1_1_ < 0x1f) && (piVar4 = *(*(param_1 + 0x644) + 8),  piVar4 != NULL)) {\n        if (*piVar4 == 1) {\n            arg_8h = piVar4 + 1;\n            *(piVar4 + 3) = (*(piVar4 + 3) < 0x20) + *(piVar4 + 3);\n        }\n        else {\n            arg_8h = *(piVar4 + 2);\n            if (*arg_8h != var_20h) {\n                do {\n                    arg_ch = arg_8h;\n                    arg_8h = arg_ch + 3;\n                } while (*arg_8h != var_20h);\n                if (*(arg_ch + 1) <= *(arg_ch + 7)) {\n                    fcn.0040f8b4(arg_8h, arg_ch);\n                    arg_8h = arg_ch;\n                }\n            }\n            if (*(arg_8h + 1) < 0x73) {\n                *(arg_8h + 1) = *(arg_8h + 1) + 2;\n                piVar4[1] = piVar4[1] + 2;\n            }\n        }\n    }\n    if (*(param_1 + 0x65c) == 0) {\n        uVar6 = fcn.00410060(1, arg_8h);\n        *(*(param_1 + 0x650) + 2) = uVar6;\n        iVar7 = *(*(param_1 + 0x650) + 2);\n        *(param_1 + 0x64c) = iVar7;\n        *(param_1 + 0x644) = iVar7;\n        if (iVar7 != 0) {\n            return;\n        }\n    }\n    else {\n        **(param_1 + 0x4bdc) = var_20h;\n        *(param_1 + 0x4bdc) = *(param_1 + 0x4bdc) + 1;\n        var_14h = *(param_1 + 0x4bdc);\n        if (var_14h < *(param_1 + 0x4be8)) {\n            if (CONCAT22(uStack32, var_20h._2_2_) == 0) {\n                *(*(param_1 + 0x650) + 2) = var_14h;\n                var_20h._2_2_ = *(param_1 + 0x644);\n                uStack32 = *(param_1 + 0x644) >> 0x10;\n            }\n            else {\n                if (CONCAT22(uStack32, var_20h._2_2_) < var_14h || CONCAT22(uStack32, var_20h._2_2_) == var_14h) {\n                    iVar7 = fcn.00410060(0, arg_8h);\n                    var_20h._2_2_ = iVar7;\n                    uStack32 = iVar7 >> 0x10;\n                    if (iVar7 == 0) goto code_r0x00410238;\n                }\n                piVar1 = param_1 + 0x65c;\n                *piVar1 = *piVar1 + -1;\n                if (*piVar1 == 0) {\n                    var_14h = CONCAT22(uStack32, var_20h._2_2_);\n                    *(param_1 + 0x4bdc) = *(param_1 + 0x4bdc) - (*(param_1 + 0x64c) != *(param_1 + 0x644));\n                }\n            }\n            puVar11 = *(param_1 + 0x644);\n            uVar15 = *puVar11;\n            uVar2 = puVar11[1];\n            puVar16 = *(param_1 + 0x64c);\n            if (puVar16 != puVar11) {\n                do {\n                    uVar3 = *puVar16;\n                    uVar8 = uVar3;\n                    if (uVar8 == 1) {\n                        puVar9 = fcn.0040fb81(1);\n                        if (puVar9 == NULL) goto code_r0x00410238;\n                        *puVar9 = *(puVar16 + 1);\n                        *(puVar9 + 1) = puVar16[3];\n                        *(puVar16 + 2) = puVar9;\n                        if (*(puVar9 + 1) < 0x1e) {\n                            *(puVar9 + 1) = *(puVar9 + 1) * '\\x02';\n                        }\n                        else {\n                            *(puVar9 + 1) = 0x78;\n                        }\n                        uVar13 = *(puVar9 + 1);\n                        iVar12 = (3 < uVar15) + *(param_1 + 0x658);\n                    }\n                    else {\n                        if ((uVar3 & 1) == 0) {\n                            iVar7 = fcn.0040fc06(*(puVar16 + 2), uVar3 >> 1);\n                            *(puVar16 + 2) = iVar7;\n                            if (iVar7 == 0) goto code_r0x00410238;\n                        }\n                        iVar12 = (puVar16[1] <= uVar8 << 3 && uVar8 << 2 <= uVar15) * 2 + (uVar8 * 2 < uVar15);\n                        uVar13 = puVar16[1];\n                    }\n                    puVar11 = puVar16 + 1;\n                    uVar13 = iVar12 + uVar13;\n                    *puVar11 = uVar13;\n                    uVar14 = uVar13 + ((uVar2 - var_20h._1_1_) - uVar15) + 1;\n                    uVar5 = (uVar13 + 6) * var_20h._1_1_ * 2;\n                    if (uVar5 < uVar14 * 6) {\n                        iVar12 = (2 - (uVar5 < uVar14 * 4)) + (uVar14 < uVar5);\n                        uVar13 = *puVar11 + 3;\n                    }\n                    else {\n                        iVar12 = (-(uVar5 < uVar14 * 0xc) - (uVar5 < uVar14 * 0xf)) + (7 - (uVar5 < uVar14 * 9));\n                        uVar13 = *puVar11 + iVar12;\n                    }\n                    *puVar11 = uVar13;\n                    pcVar10 = uVar8 * 6 + *(puVar16 + 2);\n                    *(pcVar10 + 2) = var_14h;\n                    *pcVar10 = var_20h;\n                    pcVar10[1] = iVar12;\n                    *puVar16 = uVar3 + 1;\n                    puVar16 = *(puVar16 + 4);\n                } while (puVar16 != *(param_1 + 0x644));\n            }\n            *(param_1 + 0x644) = CONCAT22(uStack32, var_20h._2_2_);\n            *(param_1 + 0x64c) = CONCAT22(uStack32, var_20h._2_2_);\n            return;\n        }\n    }\ncode_r0x00410238:\n    fcn.0040fcae();\n    *(param_1 + 0xa6c) = 0;\n    return;\n}\n",
        "token_count": 1993
    },
    "004104a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004104a0(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint16_t *in_ECX;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    \n    *(arg_8h + 0x4a84) = in_ECX[1];\n    uVar4 = *(arg_8h + 0x4a78) / *(arg_8h + 0x4a84);\n    puVar8 = *(in_ECX + 2);\n    *(arg_8h + 0x4a78) = uVar4;\n    uVar4 = (*(arg_8h + 0x4a74) - *(arg_8h + 0x4a70)) / uVar4;\n    uVar2 = *(arg_8h + 0x4a84);\n    if (uVar4 < uVar2) {\n        uVar6 = puVar8[1];\n        if (uVar4 < uVar6) {\n            bVar3 = uVar2 < uVar6 * 2;\n            *(arg_8h + 0xa6d) = bVar3;\n            *(arg_8h + 0x4a80) = uVar6;\n            *(arg_8h + 0x664) = *(arg_8h + 0x664) + bVar3;\n            *(arg_8h + 0x650) = puVar8;\n            puVar8[1] = uVar6 + 4;\n            in_ECX[1] = in_ECX[1] + 4;\n            if (0x7c < uVar6 + 4) {\n                fcn.0040fed1(arg_8h);\n            }\n            *(arg_8h + 0x4a7c) = 0;\n        }\n        else {\n            if (*(arg_8h + 0x650) == 0) goto code_r0x004104e2;\n            *(arg_8h + 0xa6d) = 0;\n            iVar7 = *in_ECX - 1;\n            do {\n                puVar9 = puVar8 + 6;\n                uVar6 = uVar6 + puVar8[7];\n                if (uVar4 < uVar6) {\n                    *(arg_8h + 0x4a80) = uVar6;\n                    *(arg_8h + 0x4a7c) = uVar6 - puVar8[7];\n                    fcn.00410458(arg_8h, puVar9);\n                    goto code_r0x00410574;\n                }\n                iVar7 = iVar7 + -1;\n                puVar8 = puVar9;\n            } while (iVar7 != 0);\n            *(arg_8h + 0xa6e) = *(**(arg_8h + 0x650) + 0x96c + arg_8h);\n            *(arg_8h + 0x4a7c) = uVar6;\n            *(*puVar9 + 0x66c + arg_8h) = *(arg_8h + 0xa6c);\n            uVar1 = *in_ECX;\n            *(arg_8h + 0x654) = uVar1;\n            iVar7 = uVar1 - 1;\n            *(arg_8h + 0x650) = 0;\n            do {\n                puVar9 = puVar9 + -6;\n                iVar7 = iVar7 + -1;\n                *(*puVar9 + 0x66c + arg_8h) = *(arg_8h + 0xa6c);\n            } while (iVar7 != 0);\n            *(arg_8h + 0x4a80) = *(arg_8h + 0x4a84);\n        }\ncode_r0x00410574:\n        uVar5 = 1;\n    }\n    else {\ncode_r0x004104e2:\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 945
    },
    "0041080f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041080f(uint arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    uVar1 = fcn.0040f8e9();\n    if ((uVar1 >> 5 & 1) == 0) {\n        var_4h = in_ECX;\n        if (*(in_ECX + 0x4a8c) != 0) goto code_r0x00410839;\ncode_r0x0041088a:\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    else {\n        var_4h = fcn.0040f8e9();\ncode_r0x00410839:\n        if ((uVar1 & 0x40) != 0) {\n            uVar2 = fcn.0040f8e9();\n            *arg_ch = uVar2;\n        }\n        fcn.0040f950(arg_8h);\n        if ((uVar1 >> 5 & 1) != 0) {\n            uVar1 = (uVar1 & 0x1f) + 1;\n            if (0x10 < uVar1) {\n                uVar1 = uVar1 * 3 - 0x20;\n            }\n            if (uVar1 == 1) {\n                uVar1 = fcn.0040f1d9();\n                goto code_r0x0041088a;\n            }\n            fcn.0040f1ed(var_4h + 1);\n            fcn.0040fe26(uVar1);\n        }\n        uVar1 = *(in_ECX + 0x644) != 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 403
    },
    "004108b2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004108b2(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    char cVar5;\n    uint32_t uVar6;\n    \n    piVar2 = *(param_1 + 0x644);\n    if ((*(param_1 + 0x4bdc) < piVar2) && (piVar2 <= *(param_1 + 0x4be4))) {\n        if (*piVar2 == 1) {\n            fcn.0040f3b0(param_1);\n            goto code_r0x004108f7;\n        }\n        if ((*(param_1 + 0x4bdc) < *(piVar2 + 2)) && (*(piVar2 + 2) <= *(param_1 + 0x4be4))) {\n            cVar5 = fcn.004104a0(param_1);\ncode_r0x004108e7:\n            if (cVar5 != '\\0') {\ncode_r0x004108f7:\n                iVar3 = *(param_1 + 0x4a78);\n                *(param_1 + 0x4a70) = *(param_1 + 0x4a70) + iVar3 * *(param_1 + 0x4a7c);\n                *(param_1 + 0x4a78) = (*(param_1 + 0x4a80) - *(param_1 + 0x4a7c)) * iVar3;\n                if (*(param_1 + 0x650) != 0) {\n                    uVar1 = **(param_1 + 0x650);\n                    if ((*(param_1 + 0x65c) == 0) &&\n                       (uVar6 = *(*(param_1 + 0x650) + 2),  *(param_1 + 0x4bdc) <= uVar6 && uVar6 != *(param_1 + 0x4bdc)\n                       )) {\n                        *(param_1 + 0x64c) = uVar6;\n                        *(param_1 + 0x644) = uVar6;\n                    }\n                    else {\n                        fcn.0041017a();\n                        if (*(param_1 + 0xa6c) == '\\0') {\n                            fcn.0040f4df();\n                        }\n                    }\n                    do {\n                        uVar6 = *(param_1 + 0x4a70);\n                        if (0xffffff < (uVar6 + *(param_1 + 0x4a78) ^ uVar6)) {\n                            if (0x7fff < *(param_1 + 0x4a78)) {\n                                return uVar1;\n                            }\n                            *(param_1 + 0x4a78) = -uVar6 & 0x7fff;\n                        }\n                        uVar6 = fcn.0040f8e9();\n                        *(param_1 + 0x4a78) = *(param_1 + 0x4a78) << 8;\n                        *(param_1 + 0x4a70) = *(param_1 + 0x4a70) << 8;\n                        *(param_1 + 0x4a74) = uVar6 | *(param_1 + 0x4a74) << 8;\n                    } while( true );\n                }\n                do {\n                    uVar6 = *(param_1 + 0x4a70);\n                    if (0xffffff < (uVar6 + *(param_1 + 0x4a78) ^ uVar6)) {\n                        if (0x7fff < *(param_1 + 0x4a78)) goto code_r0x004109b5;\n                        *(param_1 + 0x4a78) = -uVar6 & 0x7fff;\n                    }\n                    uVar6 = fcn.0040f8e9();\n                    *(param_1 + 0x4a78) = *(param_1 + 0x4a78) << 8;\n                    *(param_1 + 0x4a70) = *(param_1 + 0x4a70) << 8;\n                    *(param_1 + 0x4a74) = uVar6 | *(param_1 + 0x4a74) << 8;\n                } while( true );\n            }\n        }\n    }\n    return 0xffffffff;\ncode_r0x004109b5:\n    do {\n        *(param_1 + 0x65c) = *(param_1 + 0x65c) + 1;\n        puVar4 = *(*(param_1 + 0x644) + 8);\n        *(param_1 + 0x644) = puVar4;\n        if (puVar4 <= *(param_1 + 0x4bdc)) {\n            return 0xffffffff;\n        }\n        if (*(param_1 + 0x4be4) <= puVar4 && puVar4 != *(param_1 + 0x4be4)) {\n            return 0xffffffff;\n        }\n    } while (*puVar4 == *(param_1 + 0x654));\n    cVar5 = fcn.004106aa(param_1);\n    goto code_r0x004108e7;\n}\n",
        "token_count": 1193
    },
    "00410b51": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410b51(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_2 + 0x18) != 0) {\n        *(param_2 + 0x44) = *(param_1 + 0x98a8);\n        fcn.00407bae(*(param_2 + 0x14) + 0x24, *(param_1 + 0x98a8));\n        uVar1 = fcn.00401000();\n        fcn.00407bae(*(param_2 + 0x14) + 0x28, uVar1);\n        fcn.00408c9d(param_2);\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "00410fa2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __fastcall fcn.00410fa2(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *arg_8h;\n    int32_t iVar5;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_14h = *(param_1 + 0x96ec);\n    uVar4 = *(param_1 + 0x96e8) - var_14h & 0x3fffff;\n    if (*(param_1 + 0x4c50) != 0) {\n        do {\n            iVar5 = var_4h * 4;\n            puVar1 = *(iVar5 + *(param_1 + 0x4c4c));\n            if (puVar1 != NULL) {\n                if (*(puVar1 + 3) == '\\0') {\n                    var_10h = puVar1[1];\n                    uVar2 = *puVar1;\n                    if ((uVar2 - var_14h & 0x3fffff) < uVar4) {\n                        if (var_14h != uVar2) {\n                            fcn.00410bb3();\n                            uVar4 = *(param_1 + 0x96e8) - uVar2 & 0x3fffff;\n                            var_14h = uVar2;\n                        }\n                        if (uVar4 < var_10h) {\n                            for (; var_4h < *(param_1 + 0x4c50); var_4h = var_4h + 1) {\n                                iVar5 = *(*(param_1 + 0x4c4c) + var_4h * 4);\n                                if ((iVar5 != 0) && (*(iVar5 + 0xc) != '\\0')) {\n                                    *(iVar5 + 0xc) = 0;\n                                }\n                            }\n                            *(param_1 + 0x96ec) = var_14h;\n                            return;\n                        }\n                        uVar4 = var_10h + uVar2 & 0x3fffff;\n                        if ((uVar2 < uVar4) || (uVar4 == 0)) {\n                            var_14h = *(param_1 + 0x9890) + uVar2;\n                            var_18h = 0;\n                        }\n                        else {\n                            var_18h = 0x400000 - uVar2;\n                            var_14h = *(param_1 + 0x9890) + uVar2;\n                            fcn.00407c75(0, var_14h, var_18h);\n                            var_10h = var_18h;\n                        }\n                        fcn.00407c75(var_18h, var_14h, var_10h);\n                        iVar3 = *(*(param_1 + 0x4c40) + puVar1[4] * 4);\n                        arg_8h = puVar1 + 5;\n                        if (0x40 < *(iVar3 + 0x2c)) {\n                            fcn.00401709(*(iVar3 + 0x2c));\n                            var_18h = puVar1[10] + 0x40;\n                            fcn.0040a4cd(var_18h, *(iVar3 + 0x28) + 0x40, *(iVar3 + 0x2c) + -0x40);\n                        }\n                        fcn.00410b51(arg_8h);\n                        if (puVar1[0xb] < 0x41) {\n                            fcn.00401310();\n                        }\n                        else {\n                            if (*(iVar3 + 0x2c) < puVar1[0xb]) {\n                                fcn.00401709();\n                            }\n                            arg_8h = *(iVar3 + 0x28) + 0x40;\n                            fcn.0040a4cd(arg_8h, puVar1[10] + 0x40, puVar1[0xb] - 0x40);\n                        }\n                        var_10h = puVar1[0x17];\n                        uVar4 = puVar1[0x18];\n                        if (*(iVar5 + *(param_1 + 0x4c4c)) != 0) {\n                            arg_8h = 0x1;\n                            fcn.00410f83();\n                        }\n                        *(iVar5 + *(param_1 + 0x4c4c)) = 0;\n                        var_ch = var_4h + 1;\n                        if (var_ch < *(param_1 + 0x4c50)) {\n                            do {\n                                puVar1 = *(iVar5 + 4 + *(param_1 + 0x4c4c));\n                                if ((((puVar1 == NULL) || (*puVar1 != var_18h)) || (puVar1[1] != uVar4)) ||\n                                   (*(puVar1 + 3) != '\\0')) break;\n                                var_18h = 0;\n                                fcn.00407c75(0, var_10h, uVar4);\n                                iVar5 = *(*(param_1 + 0x4c40) + puVar1[4] * 4);\n                                arg_8h = puVar1 + 5;\n                                if (0x40 < *(iVar5 + 0x2c)) {\n                                    fcn.00401709(*(iVar5 + 0x2c));\n                                    var_18h = puVar1[10] + 0x40;\n                                    fcn.0040a4cd(var_18h, *(iVar5 + 0x28) + 0x40, *(iVar5 + 0x2c) + -0x40);\n                                }\n                                fcn.00410b51(arg_8h);\n                                if (puVar1[0xb] < 0x41) {\n                                    fcn.00401310();\n                                }\n                                else {\n                                    if (*(iVar5 + 0x2c) < puVar1[0xb]) {\n                                        fcn.00401709();\n                                    }\n                                    arg_8h = *(iVar5 + 0x28) + 0x40;\n                                    fcn.0040a4cd(arg_8h, puVar1[10] + 0x40, puVar1[0xb] - 0x40);\n                                }\n                                var_10h = puVar1[0x17];\n                                var_4h = var_4h + 1;\n                                uVar4 = puVar1[0x18];\n                                var_ch = var_ch + 1;\n                                iVar5 = var_4h * 4;\n                                if (*(iVar5 + *(param_1 + 0x4c4c)) != 0) {\n                                    arg_8h = 0x1;\n                                    fcn.00410f83();\n                                }\n                                *(iVar5 + *(param_1 + 0x4c4c)) = 0;\n                            } while (var_ch < *(param_1 + 0x4c50));\n                        }\n                        fcn.00409244(var_10h, uVar4, arg_8h);\n                        puVar1 = param_1 + 0x98a8;\n                        uVar2 = *puVar1;\n                        *puVar1 = *puVar1 + uVar4;\n                        *(param_1 + 0x98a2) = 1;\n                        *(param_1 + 0x98ac) = *(param_1 + 0x98ac) + CARRY4(uVar2, uVar4);\n                        uVar4 = *(param_1 + 0x96e8) - var_14h & 0x3fffff;\n                    }\n                }\n                else {\n                    *(puVar1 + 3) = 0;\n                }\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(param_1 + 0x4c50));\n    }\n    fcn.00410bb3(var_14h, *(param_1 + 0x96e8));\n    *(param_1 + 0x96ec) = *(param_1 + 0x96e8);\n    return;\n}\n",
        "token_count": 1922
    },
    "00411507": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411507(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uchar uVar4;\n    uchar extraout_AH;\n    uchar extraout_AH_00;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t in_ECX;\n    uint32_t *arg_8h_00;\n    int32_t var_20h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    piVar1 = in_ECX + 0x4c34;\n    *(in_ECX + 0x4c38) = 0;\n    *piVar1 = 0;\n    iVar5 = 0x8000;\n    if (arg_10h < 0x8001) {\n        iVar5 = arg_10h;\n    }\n    fcn.0040a4cd(*(in_ECX + 0x4c3c), arg_ch, iVar5);\n    fcn.00407b95();\n    if ((arg_8h & 0x80) == 0) {\n        var_8h = *(in_ECX + 0x4c64);\n    }\n    else {\n        var_8h = fcn.00407bd7(piVar1);\n        if (var_8h == 0) {\n            fcn.004112ea();\n        }\n        else {\n            var_8h = var_8h - 1;\n        }\n    }\n    uVar10 = *(in_ECX + 0x4c44);\n    if ((uVar10 < var_8h) || (*(in_ECX + 0x4c5c) <= var_8h && var_8h != *(in_ECX + 0x4c5c))) {\ncode_r0x004115ce:\n        uVar7 = 0;\n    }\n    else {\n        *(in_ECX + 0x4c64) = var_8h;\n        puVar6 = fcn.0040ab1c(100);\n        if (puVar6 == NULL) {\n            puVar6 = NULL;\n        }\n        else {\n            fcn.00411366();\n        }\n        if (var_8h != uVar10) {\n            arg_ch = *(*(in_ECX + 0x4c40) + var_8h * 4);\n            puVar6[4] = var_8h;\n            *(arg_ch + 8) = *(arg_ch + 8) + 1;\n        }\n        else {\n            if (0x400 < var_8h) {\n                if (puVar6 != NULL) {\n                    fcn.00410f83(1);\n                }\n                goto code_r0x004115ce;\n            }\n            fcn.0040f907(1);\n            arg_ch = fcn.0040ab1c(100);\n            if (arg_ch == 0) {\n                arg_ch = 0;\n            }\n            else {\n                fcn.00411366();\n            }\n            *(*(in_ECX + 0x4c40) + -4 + *(in_ECX + 0x4c44) * 4) = arg_ch;\n            puVar6[4] = *(in_ECX + 0x4c44) - 1;\n            fcn.00410e9f(0);\n            *(arg_ch + 8) = 0;\n        }\n        var_10h = 0;\n        var_14h = 0;\n        if (*(in_ECX + 0x4c50) == 0) {\ncode_r0x00411699:\n            fcn.0040f907(1);\n            var_10h = 1;\n        }\n        else {\n            piVar2 = in_ECX + 0x4c4c;\n            do {\n                *(*piVar2 + (var_14h - var_10h) * 4) = *(*piVar2 + var_14h * 4);\n                piVar3 = *piVar2 + var_14h * 4;\n                if (*piVar3 == 0) {\n                    var_10h = var_10h + 1;\n                }\n                if (0 < var_10h) {\n                    *piVar3 = 0;\n                }\n                var_14h = var_14h + 1;\n            } while (var_14h < *(in_ECX + 0x4c50));\n            if (var_10h == 0) goto code_r0x00411699;\n        }\n        *(*(in_ECX + 0x4c4c) + (*(in_ECX + 0x4c50) - var_10h) * 4) = puVar6;\n        puVar6[2] = *(arg_ch + 8);\n        var_10h = fcn.00407bd7(piVar1);\n        if ((arg_8h & 0x40) != 0) {\n            var_10h = var_10h + 0x102;\n        }\n        *puVar6 = *(in_ECX + 0x96e8) + var_10h & 0x3fffff;\n        if ((arg_8h & 0x20) == 0) {\n            if (var_8h < *(in_ECX + 0x4c5c)) {\n                uVar8 = *(*(in_ECX + 0x4c58) + var_8h * 4);\n            }\n            else {\n                uVar8 = 0;\n            }\n            puVar6[1] = uVar8;\n        }\n        else {\n            uVar8 = fcn.00407bd7(piVar1);\n            puVar6[1] = uVar8;\n            *(*(in_ECX + 0x4c58) + var_8h * 4) = uVar8;\n        }\n        if ((*(in_ECX + 0x96ec) == *(in_ECX + 0x96e8)) ||\n           (var_10h < (*(in_ECX + 0x96ec) - *(in_ECX + 0x96e8) & 0x3fffffU))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        arg_8h_00 = puVar6 + 0x10;\n        *(puVar6 + 3) = uVar4;\n        fcn.0040a4a0(arg_8h_00, 0, 0x1c);\n        puVar6[0x14] = puVar6[1];\n        puVar6[0x13] = 0x3c000;\n        puVar6[0x15] = puVar6[2];\n        if ((arg_8h & 0x10) != 0) {\n            uVar8 = fcn.00406a25();\n            fcn.00406a0e(7);\n            var_10h = 0;\n            do {\n                if ((uVar8 >> 9 & 1 << (var_10h & 0x1f)) != 0) {\n                    uVar9 = fcn.00407bd7(piVar1);\n                    *arg_8h_00 = uVar9;\n                }\n                var_10h = var_10h + 1;\n                arg_8h_00 = arg_8h_00 + 1;\n            } while (var_10h < 7);\n        }\n        if (var_8h == uVar10) {\n            uVar10 = fcn.00407bd7(piVar1);\n            if ((0xffff < uVar10) || (uVar10 == 0)) goto code_r0x004115ce;\n            fcn.00403d6a(uVar10);\n            uVar8 = 0;\n            if (uVar10 != 0) {\n                do {\n                    if (0x7fff < *piVar1 + 3U) {\n                        if (var_20h != 0) {\n                            fcn.0040a41c(var_20h);\n                        }\n                        goto code_r0x004115ce;\n                    }\n                    fcn.00406a25();\n                    *(var_20h + uVar8) = extraout_AH;\n                    fcn.00406a0e(8);\n                    uVar8 = uVar8 + 1;\n                } while (uVar8 < uVar10);\n            }\n            fcn.00408a0d(0x411825, uVar10, arg_ch + 0x14);\n            if (var_20h != 0) {\n                fcn.0040a41c(var_20h);\n            }\n        }\n        puVar6[8] = *(arg_ch + 0x14);\n        puVar6[9] = *(arg_ch + 0x24);\n        iVar5 = *(arg_ch + 0x38);\n        if (iVar5 - 1U < 0x1fff) {\n            fcn.004012cc(iVar5);\n            fcn.0040a4cd(puVar6[0xd], *(arg_ch + 0x34), iVar5);\n        }\n        if (puVar6[0xb] < 0x40) {\n            fcn.00401310();\n            fcn.004012cc(0x40);\n        }\n        uVar10 = puVar6[10];\n        var_14h = 7;\n        do {\n            fcn.00407bae();\n            var_14h = var_14h + -1;\n        } while (var_14h != 0);\n        fcn.00407bae(uVar10 + 0x1c, puVar6[1]);\n        fcn.00407bae(uVar10 + 0x20, 0);\n        fcn.00407bae(uVar10 + 0x2c, puVar6[2]);\n        fcn.0040a4a0(uVar10 + 0x30, 0, 0x10);\n        if ((arg_8h & 8) != 0) {\n            if ((0x7fff < *piVar1 + 3U) || (uVar10 = fcn.00407bd7(piVar1),  0x1fc0 < uVar10)) goto code_r0x004115ce;\n            if (puVar6[0xb] < uVar10 + 0x40) {\n                fcn.004012cc(uVar10 + (0x40 - puVar6[0xb]));\n            }\n            uVar8 = puVar6[10];\n            uVar9 = 0;\n            if (uVar10 != 0) {\n                do {\n                    if (0x7fff < *piVar1 + 3U) goto code_r0x004115ce;\n                    fcn.00406a25();\n                    *(uVar9 + uVar8 + 0x40) = extraout_AH_00;\n                    fcn.00406a0e();\n                    uVar9 = uVar9 + 1;\n                } while (uVar9 < uVar10);\n            }\n        }\n        uVar7 = 1;\n    }\n    return uVar7;\n}\n",
        "token_count": 2580
    },
    "00411986": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00411986(int32_t *param_1)\n\n{\n    char cVar1;\n    uchar extraout_AH;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t arg_10h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    uVar2 = fcn.004069e0();\n    *param_1 = *param_1 + (param_1[1] + 8U >> 3);\n    uVar4 = param_1[1] + 8U & 7;\n    arg_10h = (uVar2 >> 8 & 7) + 1;\n    param_1[1] = uVar4;\n    if (arg_10h == 7) {\n        uVar3 = fcn.004069e0();\n        arg_10h = (uVar3 >> 8) + 7;\n        uVar4 = uVar4 + 8;\n    }\n    else {\n        if (arg_10h != 8) goto code_r0x004119f0;\n        arg_10h = fcn.004069e0();\n        uVar4 = uVar4 + 0x10;\n    }\n    param_1[1] = uVar4 & 7;\n    *param_1 = (uVar4 >> 3) + *param_1;\ncode_r0x004119f0:\n    fcn.00403d6a(arg_10h);\n    iVar5 = 0;\n    if (0 < arg_10h) {\n        do {\n            if (((param_1[0x25bc] + -1 <= *param_1) && (cVar1 = fcn.0040f636(),  cVar1 == '\\0')) &&\n               (uVar4 = arg_10h - 1,  iVar5 < uVar4)) {\n                if (var_10h != 0) {\n                    uVar4 = fcn.0040a41c(var_10h);\n                }\n                return uVar4 & 0xffffff00;\n            }\n            fcn.004069e0();\n            *(var_10h + iVar5) = extraout_AH;\n            *param_1 = *param_1 + (param_1[1] + 8U >> 3);\n            iVar5 = iVar5 + 1;\n            param_1[1] = param_1[1] + 8U & 7;\n        } while (iVar5 < arg_10h);\n    }\n    uVar2 = fcn.00411507(uVar2 >> 8, var_10h, arg_10h);\n    uVar4 = uVar2;\n    if (var_10h != 0) {\n        uVar4 = fcn.0040a41c(var_10h);\n    }\n    return uVar4 & 0xffffff00 | uVar2 & 0xff;\n}\n",
        "token_count": 670
    },
    "00411b33": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411b33(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *in_ECX;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint unaff_EDI;\n    int32_t iVar8;\n    int32_t *in_stack_ffffffe0;\n    int32_t *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar7 = 0;\n    if (*0x42d634 == 0) {\n        var_8h = 0;\n        iVar8 = 0;\n        do {\n            var_ch = *(uVar7 * 4 + 0x416168);\n            if (0 < var_ch) {\n                in_stack_ffffffe0 = var_ch;\n                fcn.0040ac20(iVar8 + 0x42d5f4, uVar7);\n                do {\n                    *(iVar8 * 4 + 0x42d630) = var_8h;\n                    var_8h = var_8h + (1 << (uVar7 & 0x1f));\n                    iVar8 = iVar8 + 1;\n                    var_ch = var_ch + -1;\n                } while (var_ch != NULL);\n            }\n            uVar7 = uVar7 + 1;\n        } while (uVar7 < 0x13);\n    }\n    *(in_ECX + 0x262c) = 1;\n    if (*(in_ECX + 0x2628) == '\\0') {\n        in_stack_ffffffe0 = arg_8h;\n        fcn.004113ee();\n        cVar3 = fcn.0040f636();\n        if (cVar3 == '\\0') {\n            return;\n        }\n        if (((arg_8h == 0) || (*(in_ECX + 0x131a) == '\\0')) && (cVar3 = fcn.00410c16(),  cVar3 == '\\0')) {\n            return;\n        }\n    }\ncode_r0x00411bdd:\n    in_ECX[0x25ba] = in_ECX[0x25ba] & 0x3fffff;\n    if ((in_ECX[0x25bd] < *in_ECX) && (cVar3 = fcn.0040f636(),  cVar3 == '\\0')) goto code_r0x00411fe6;\n    if (((in_ECX[0x25bb] - in_ECX[0x25ba] & 0x3fffffU) < 0x104) && (in_ECX[0x25bb] != in_ECX[0x25ba])) {\n        fcn.00410fa2();\n        if (in_ECX[0x2627] < in_ECX[0x262b]) {\n            return;\n        }\n        if ((in_ECX[0x2627] <= in_ECX[0x262b]) && (in_ECX[0x2626] <= in_ECX[0x262a] && in_ECX[0x262a] != in_ECX[0x2626])\n           ) {\n            return;\n        }\n        if (*(in_ECX + 0x2628) != '\\0') {\n            *(in_ECX + 0x262c) = 0;\n            return;\n        }\n    }\n    if (in_ECX[0x2623] == 1) {\n        iVar8 = fcn.004108b2();\n        if (iVar8 == -1) {\n            fcn.004107e9();\n            in_ECX[0x2623] = 0;\n            goto code_r0x00411fe6;\n        }\n        if (iVar8 != in_ECX[0x12ff]) {\ncode_r0x00411d3c:\n            *(in_ECX[0x2624] + in_ECX[0x25ba]) = iVar8;\ncode_r0x00411d73:\n            in_ECX[0x25ba] = in_ECX[0x25ba] + 1;\n            goto code_r0x00411bdd;\n        }\n        iVar4 = fcn.00410b0c();\n        if (iVar4 == 0) {\n            cVar3 = fcn.00410c16();\n            goto code_r0x00411c97;\n        }\n        if ((iVar4 == -1) || (iVar4 == 2)) goto code_r0x00411fe6;\n        if (iVar4 == 3) {\n            cVar3 = fcn.00411a7b();\n            goto code_r0x00411c97;\n        }\n        if (iVar4 == 4) {\n            bVar2 = false;\n            iVar8 = 0;\n            do {\n                if (bVar2) goto code_r0x00411fe6;\n                iVar4 = fcn.00410b0c();\n                if (iVar4 == -1) {\n                    bVar2 = true;\n                }\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < 4);\n            if (!bVar2) goto code_r0x00411fc2;\n            goto code_r0x00411fe6;\n        }\n        if (iVar4 != 5) goto code_r0x00411d3c;\n        iVar8 = fcn.00410b0c();\n        if (iVar8 == -1) goto code_r0x00411fe6;\n    }\n    else {\n        in_stack_ffffffe0 = in_ECX + 0x131b;\n        iVar8 = fcn.00410a71();\n        if (iVar8 < 0x100) {\n            *(in_ECX[0x2624] + in_ECX[0x25ba]) = iVar8;\n            goto code_r0x00411d73;\n        }\n        if (iVar8 < 0x10f) {\n            if (iVar8 == 0x100) {\n                cVar3 = fcn.00410f31();\n            }\n            else {\n                if (iVar8 != 0x101) {\n                    if (iVar8 == 0x102) {\n                        if (in_ECX[0x25b8] != 0) goto code_r0x00411fc2;\n                        goto code_r0x00411bdd;\n                    }\n                    if (0x106 < iVar8) {\n                        if (iVar8 < 0x110) {\n                            uVar1 = *(iVar8 + 0x416019);\n                            iVar8 = *(iVar8 + 0x416021) + 1;\n                            if (uVar1 != 0) {\n                                uVar7 = fcn.004069e0();\n                                iVar8 = iVar8 + (uVar7 >> (0x10 - uVar1 & 0x1f));\n                                uVar7 = in_ECX[1] + uVar1;\n                                *in_ECX = *in_ECX + (uVar7 >> 3);\n                                in_ECX[1] = uVar7 & 7;\n                            }\n                            fcn.0040f4fa(iVar8);\n                            arg_8h = 2;\n                            goto code_r0x00411fba;\n                        }\n                        goto code_r0x00411bdd;\n                    }\n                    piVar6 = in_ECX + iVar8 + 0x24b0;\n                    iVar4 = *piVar6;\n                    for (iVar8 = iVar8 + -0x103; 0 < iVar8; iVar8 = iVar8 + -1) {\n                        *piVar6 = piVar6[-1];\n                        piVar6 = piVar6 + -1;\n                    }\n                    in_ECX[0x25b3] = iVar4;\n                    iVar8 = fcn.00410a71(in_ECX + 0x1e43);\n                    uVar1 = *(iVar8 + 0x416130);\n                    iVar8 = *(iVar8 + 0x41614c) + 2;\n                    if (uVar1 != 0) {\n                        uVar7 = fcn.004069e0();\n                        iVar8 = iVar8 + (uVar7 >> (0x10 - uVar1 & 0x1f));\n                        uVar7 = in_ECX[1] + uVar1;\n                        *in_ECX = *in_ECX + (uVar7 >> 3);\n                        in_ECX[1] = uVar7 & 7;\n                    }\n                    in_ECX[0x25b8] = iVar8;\n                    goto code_r0x00411fc2;\n                }\n                cVar3 = fcn.00411986();\n            }\ncode_r0x00411c97:\n            if (cVar3 == '\\0') {\ncode_r0x00411fe6:\n                fcn.00410fa2();\n                return;\n            }\n            goto code_r0x00411bdd;\n        }\n        uVar1 = *(iVar8 + 0x416021);\n        arg_8h = *(iVar8 + 0x41603d) + 3;\n        if (uVar1 != 0) {\n            uVar7 = fcn.004069e0();\n            arg_8h = arg_8h + (uVar7 >> (0x10 - uVar1 & 0x1f));\n            uVar7 = in_ECX[1] + uVar1;\n            *in_ECX = *in_ECX + (uVar7 >> 3);\n            in_ECX[1] = uVar7 & 7;\n        }\n        iVar8 = fcn.00410a71(in_ECX + 0x16d3);\n        uVar1 = *(iVar8 + 0x42d5f4);\n        uVar7 = uVar1;\n        in_stack_ffffffe0 = *(iVar8 * 4 + 0x42d630) + 1;\n        if (uVar7 != 0) {\n            if (iVar8 < 10) {\n                uVar5 = fcn.004069e0();\n                in_stack_ffffffe0 = in_stack_ffffffe0 + (uVar5 >> (0x10 - uVar1 & 0x1f));\n                *in_ECX = *in_ECX + (in_ECX[1] + uVar7 >> 3);\n                in_ECX[1] = in_ECX[1] + uVar7 & 7;\n            }\n            else {\n                if (4 < uVar7) {\n                    uVar5 = fcn.004069e0();\n                    in_stack_ffffffe0 = in_stack_ffffffe0 + (uVar5 >> (0x14 - uVar1 & 0x1f)) * 4;\n                    uVar7 = in_ECX[1] + -4 + uVar7;\n                    *in_ECX = *in_ECX + (uVar7 >> 3);\n                    in_ECX[1] = uVar7 & 7;\n                }\n                if (in_ECX[0x262e] < 1) {\n                    iVar8 = fcn.00410a71(in_ECX + 0x1a8b);\n                    if (iVar8 != 0x10) {\n                        in_stack_ffffffe0 = in_stack_ffffffe0 + iVar8;\n                        in_ECX[0x262d] = iVar8;\n                        goto code_r0x00411e84;\n                    }\n                    in_ECX[0x262e] = 0xf;\n                }\n                else {\n                    in_ECX[0x262e] = in_ECX[0x262e] + -1;\n                }\n                in_stack_ffffffe0 = in_stack_ffffffe0 + in_ECX[0x262d];\n            }\n        }\ncode_r0x00411e84:\n        iVar8 = arg_8h;\n        if ((0x1fff < in_stack_ffffffe0) && (iVar8 = arg_8h + 1,  0x3ffff < in_stack_ffffffe0)) {\n            iVar8 = arg_8h + 2;\n        }\n        arg_8h = iVar8;\n        fcn.0040f4fa();\ncode_r0x00411fba:\n        in_ECX[0x25b8] = arg_8h;\n    }\ncode_r0x00411fc2:\n    fcn.0040f527(in_stack_ffffffe0, unaff_EDI);\n    goto code_r0x00411bdd;\n}\n",
        "token_count": 2781
    },
    "00412023": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00412023(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    uint uVar7;\n    ulong uVar8;\n    uint var_1814h;\n    uint var_1014h;\n    uint var_814h;\n    uint var_414h;\n    uint uStackY164;\n    int32_t iStackY160;\n    int32_t iStackY156;\n    uint uStackY152;\n    int32_t iStackY148;\n    uint uVar9;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00401200();\n    var_14h = *(arg_8h + 0x1398);\n    iVar2 = *(arg_8h + 0x4ab4);\n    if (iVar2 == 0x7a) {\n        var_4h = arg_8h + 0x57f0;\ncode_r0x00412066:\n        bVar5 = true;\n        if ((*(var_4h + 8) & 2) != 0) goto code_r0x00412074;\n    }\n    else {\n        var_4h = arg_8h + 0x4ae0;\n        if (iVar2 == 0x74) goto code_r0x00412066;\n    }\n    bVar5 = false;\ncode_r0x00412074:\n    if ((((arg_ch != 0) && (bVar5)) && (0x13 < *(var_4h + 0x20))) &&\n       ((*(var_4h + 0x18) != 0xffffffff && (*(arg_ch + 0x510) != ~*(var_4h + 0x18))))) {\n        var_14h = fcn.0040e679();\n        uVar9 = 0x72;\n        uVar7 = fcn.00409b0b();\n        fcn.0040b986(arg_8h + 0x41e, uVar7, uVar9);\n    }\n    fcn.00405838();\n    if (arg_ch != 0) {\n        puVar1 = arg_ch + 0x4f8;\n        uVar8 = fcn.00405e4d();\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + uVar8;\n        *(arg_ch + 0x4fc) = *(arg_ch + 0x4fc) + (uVar8 >> 0x20) + CARRY4(uVar3, uVar8);\n    }\n    fcn.00405783();\n    fcn.0040a693(&fcn.00412023::var_414h, arg_8h + 0x1d);\n    fcn.0040a850(&fcn.00412023::var_1014h, arg_8h + 0x41e);\n    fcn.00407738();\n    bVar4 = false;\n    do {\n        cVar6 = fcn.00405920(&fcn.00412023::var_414h, &fcn.00412023::var_1014h, 0);\n        if (cVar6 != '\\0') {\ncode_r0x00412201:\n            fcn.00401780();\n            iStackY148 = 0x412229;\n            fcn.0040bb57((arg_8h + 0x1dU & 0xffffff00 | arg_14h != 'T') * 4 + 0x54, arg_8h + 0x1dU, arg_8h + 0x41e);\n            if (bVar5) {\n                uStackY152 = 0x412239;\n                iStackY148 = iVar2;\n                fcn.004027f8();\n            }\n            else {\n                iStackY148 = 0x4122a8;\n                fcn.00401d3e();\n            }\n            if (*(arg_8h + 0x4ab4) == 0x74) {\n                uStackY152 = 0x4122b8;\n                fcn.00401c59();\n                iStackY160 = *(arg_8h + 0x71b8) - *(arg_8h + 0x57b8);\n                iStackY156 = (*(arg_8h + 0x71bc) - *(arg_8h + 0x57bc)) - (*(arg_8h + 0x71b8) < *(arg_8h + 0x57b8));\n                uStackY152 = 0;\n                uStackY164 = 0x4122db;\n                fcn.00405de9();\n            }\n            if (arg_ch != 0) {\n                if (iVar2 == 0x7b) {\n                    *(arg_ch + 0x4c6) = 0;\n                }\n                else {\n                    *(arg_ch + 0x4c6) = *(var_4h + 8) >> 1 & 1;\n                    *(arg_ch + 0x20) = *(var_4h + 0xcd8);\n                    *(arg_ch + 0x24) = *(var_4h + 0xcdc);\n                }\n                uStackY152 = 0x412318;\n                uVar8 = fcn.00405e4d();\n                *(arg_ch + 0x4e8) = 0;\n                *(arg_ch + 0x4ec) = 0;\n                *(arg_ch + 0x510) = 0xffffffff;\n                *(arg_ch + 0x4d0) = uVar8;\n                *(arg_ch + 0x4d4) = uVar8 >> 0x20;\n            }\n            return 1;\n        }\n        if (arg_ch != 0) {\n            *(arg_ch + 0x500) = 0;\n            *(arg_ch + 0x504) = 0;\n        }\n        if (!bVar4) {\n            fcn.0040a693(&fcn.00412023::var_814h, arg_8h + 0x1d);\n            fcn.0040a850(&fcn.00412023::var_1814h, arg_8h + 0x41e);\n            fcn.00407738();\n            bVar4 = true;\n            cVar6 = fcn.00405920(&fcn.00412023::var_814h, &fcn.00412023::var_1814h, 0);\n            if (cVar6 != '\\0') {\n                fcn.0040a693(&fcn.00412023::var_414h, &fcn.00412023::var_814h);\n                fcn.0040a850(&fcn.00412023::var_1014h, &fcn.00412023::var_1814h);\n                goto code_r0x00412201;\n            }\n        }\n        if ((*(var_14h + 0x2d70) != '\\0') || (cVar6 = fcn.0041200e(),  cVar6 == '\\0')) {\n            uVar9 = 0x77;\n            uVar7 = fcn.00409b0b();\n            fcn.0040b986(&fcn.00412023::var_1014h, uVar7, uVar9);\n            fcn.00405920(arg_8h + 0x1d, arg_8h + 0x41e, 0);\n            fcn.00405de9();\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 1809
    },
    "00412486": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412486(int32_t *lpsz)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint rclsid;\n    int32_t *var_4h;\n    \n    (*_sym.imp.ole32.dll_CLSIDFromString)(lpsz, &rclsid);\n    piVar1 = in_ECX + 0x18;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(&rclsid, 0, 5, 0x414ca0, piVar1);\n    if (*piVar1 != 0) {\n        iVar2 = (****piVar1)(*piVar1, 0x414c60, &lpsz);\n        if (-1 < iVar2) {\n            (**(*lpsz + 0xc))(lpsz);\n            (**(*lpsz + 8))(lpsz);\n            iVar2 = (****piVar1)(*piVar1, 0x414c40, &var_4h);\n            if (-1 < iVar2) {\n                (**(*var_4h + 0x20))(var_4h);\n                (**(*var_4h + 8))(var_4h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "004125fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004125fc(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) != 0) && (arg_8h != NULL)) {\n        iVar1 = (****(in_ECX + 0x18))(*(in_ECX + 0x18), 0x414c60, &arg_8h);\n        if (-1 < iVar1) {\n            (**(*arg_8h + 0x2c))(arg_8h, 0xfffffffc, 0);\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00412648": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00412648(int32_t param_1)\n\n{\n    if (*(param_1 + 0x18) == 0) {\n        return 0;\n    }\n    (**(**(param_1 + 0x18) + 4))(*(param_1 + 0x18));\n    return *(param_1 + 0x18);\n}\n",
        "token_count": 82
    },
    "004127d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.004127d8(int16_t *arg_8h)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *arg_8h_00;\n    int32_t iVar4;\n    int16_t *lpString1;\n    int16_t *piVar5;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    iVar3 = fcn.0040a826(arg_8h);\n    arg_8h_00 = fcn.0040a403(iVar3 * 0xc + 0x200);\n    if (arg_8h_00 != NULL) {\n        fcn.0040a850(arg_8h_00, L\"<style>body{font-family:\\\"Arial\\\";font-size:12;}</style>\");\n        iVar3 = fcn.0040a826(arg_8h_00);\n        iVar2 = *arg_8h;\n        lpString1 = arg_8h;\n        while (iVar2 != 0) {\n            iVar4 = fcn.0040efb8(lpString1, L\"\\r\\n\\r\\n\", 4);\n            if (iVar4 == 0) {\n                if (lpString1[2] == 0xd) {\n                    var_4h = arg_8h_00 + iVar3;\n                    piVar5 = lpString1 + 2;\n                    do {\n                        if (lpString1[3] != 10) break;\n                        fcn.0040a850(var_4h, L\"<br>\");\n                        var_4h = var_4h + 4;\n                        piVar1 = piVar5 + 2;\n                        iVar3 = iVar3 + 4;\n                        lpString1 = piVar5;\n                        piVar5 = piVar1;\n                    } while (*piVar1 == 0xd);\n                }\n                lpString1 = lpString1 + 1;\n            }\n            else if (((arg_8h < lpString1) && (*lpString1 == 0x20)) && (lpString1[-1] == 0x20)) {\n                fcn.0040a850(arg_8h_00 + iVar3, 0x414a0c);\n                iVar3 = iVar3 + 6;\n            }\n            else {\n                arg_8h_00[iVar3] = *lpString1;\n                iVar3 = iVar3 + 1;\n            }\n            lpString1 = lpString1 + 1;\n            iVar2 = *lpString1;\n        }\n        arg_8h_00[iVar3] = 0;\n        fcn.0040a41c(arg_8h);\n        arg_8h = arg_8h_00;\n    }\n    return arg_8h;\n}\n",
        "token_count": 620
    },
    "00412a73": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412a73(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t *ppstm;\n    int16_t *var_4h;\n    \n    if (*(in_ECX + 0xc) != 0) {\n        ppstm = NULL;\n        cVar2 = fcn.004127a2(arg_8h);\n        iVar3 = fcn.0040a826(arg_8h);\n        iVar3 = fcn.0040a403(iVar3 * 2 + 0x200);\n        if (iVar3 != 0) {\n            fcn.0040a850(iVar3, L\"<html>\");\n            fcn.0040a8c2(iVar3, L\"<head><meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=\");\n            fcn.0040a8c2(iVar3, L\"utf-8\\\"></head>\");\n            iVar1 = *arg_8h;\n            var_4h = arg_8h;\n            while (iVar1 == 0x20) {\n                var_4h = var_4h + 1;\n                iVar1 = *var_4h;\n            }\n            iVar4 = fcn.0040efb8(var_4h, L\"<html>\", 6);\n            if (iVar4 == 0) {\n                arg_8h = var_4h + 6;\n            }\n            fcn.0040a8c2(iVar3, arg_8h);\n            if (iVar4 != 0) {\n                fcn.0040a8c2(iVar3, L\"</html>\");\n            }\n            if (cVar2 == '\\0') {\n                iVar3 = fcn.004127d8(iVar3);\n            }\n            iVar4 = fcn.0040a826(iVar3);\n            puVar5 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar4 * 6 + 9);\n            if (puVar5 != NULL) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (0xfde9, 0, iVar3, 0xffffffff, puVar5 + 3, iVar4 * 6 + 6, 0, 0);\n                if (iVar4 == 0) {\n                    *puVar5 = 0;\n                }\n                else {\n                    *puVar5 = 0xef;\n                    puVar5[1] = 0xbb;\n                    puVar5[2] = 0xbf;\n                }\n            }\n            fcn.0040a41c(iVar3);\n            iVar3 = (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(puVar5, 1, &ppstm);\n            if (-1 < iVar3) {\n                fcn.004126cb(*(in_ECX + 0xc), ppstm);\n                (**(*ppstm + 8))(ppstm);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 697
    },
    "00412bb1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00412bb1(int16_t *arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int16_t *piVar8;\n    int16_t *piVar9;\n    uint var_4h;\n    \n    iVar4 = fcn.0040a826(arg_8h);\n    piVar5 = fcn.0040a403(iVar4 * 2 + 2);\n    if (piVar5 != NULL) {\n        cVar2 = fcn.004127a2(arg_8h);\n        iVar3 = *arg_8h;\n        piVar9 = piVar5;\n        if (iVar3 != 0) {\n            do {\n                piVar8 = piVar9;\n                if (iVar3 != 0) goto code_r0x00412bf4;\n                do {\n                    do {\n                        iVar4 = fcn.0040efb8(arg_8h, L\"</p>\", 4);\n                        if ((iVar4 == 0) || (iVar6 = fcn.0040efb8(arg_8h, L\"<br>\", 4),  piVar9 = piVar8,  iVar6 == 0)) {\n                            *piVar8 = 0xd;\n                            piVar8[1] = 10;\n                            piVar9 = piVar8 + 2;\n                            if (iVar4 == 0) {\n                                *piVar9 = 0xd;\n                                piVar8[3] = 10;\n                                piVar9 = piVar8 + 4;\n                            }\n                        }\n                        *piVar9 = 0;\n                        iVar4 = fcn.0040efb8(arg_8h, L\"<style>\", 7);\n                        if (iVar4 == 0) {\n                            piVar8 = arg_8h;\n                            if (*arg_8h == 0) {\n                                return piVar5;\n                            }\n                            do {\n                                iVar4 = fcn.0040efb8(piVar8, L\"</style>\", 8);\n                                arg_8h = piVar8 + 1;\n                                if (iVar4 == 0) {\n                                    arg_8h = piVar8 + 8;\n                                    break;\n                                }\n                                piVar8 = arg_8h;\n                            } while (*arg_8h != 0);\n                        }\n                        else {\n                            for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n                                if (*arg_8h == 0x3e) goto code_r0x00412d19;\n                            }\n                            if (*arg_8h == 0x3e) {\ncode_r0x00412d19:\n                                arg_8h = arg_8h + 1;\n                            }\n                        }\n                        iVar3 = *arg_8h;\n                        if (iVar3 == 0) {\n                            return piVar5;\n                        }\ncode_r0x00412bf4:\n                        piVar8 = piVar9;\n                    } while (iVar3 == 0x3c);\n                    if ((cVar2 != '\\0') && ((iVar3 == 0xd || (iVar3 == 10)))) {\n                        if ((piVar9 != piVar5) && (piVar9[-1] == 0x20)) goto code_r0x00412c6b;\n                        iVar3 = 0x20;\n                        goto code_r0x00412c66;\n                    }\n                    bVar1 = false;\n                    if ((cVar2 != '\\0') && (iVar3 == 0x26)) {\n                        uVar7 = 0;\n                        do {\n                            iVar3 = *(uVar7 + arg_8h);\n                            if (iVar3 == 0) break;\n                            if (iVar3 == 0x3b) {\n                                arg_8h = uVar7 + arg_8h + 1;\n                                bVar1 = true;\n                            }\n                            uVar7 = uVar7 + 2;\n                        } while (uVar7 < 0x28);\n                        if (bVar1) goto code_r0x00412c6d;\n                    }\n                    iVar3 = *arg_8h;\n                } while (iVar3 == 0);\n                if (((iVar3 != 0x20) || (piVar9 == piVar5)) || (piVar9[-1] != 0x20)) {\ncode_r0x00412c66:\n                    *piVar9 = iVar3;\n                    piVar9 = piVar9 + 1;\n                }\ncode_r0x00412c6b:\n                arg_8h = arg_8h + 1;\ncode_r0x00412c6d:\n                iVar3 = *arg_8h;\n            } while( true );\n        }\n    }\n    return piVar5;\n}\n",
        "token_count": 1089
    },
    "00412d31": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412d31(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x14) == 0) && (*(param_1 + 0x20) == '\\0')) {\n        fcn.00412a73(*(param_1 + 0x10));\n    }\n    *(param_1 + 0x20) = 1;\n    if (*(param_1 + 0x21) != '\\0') {\n        fcn.004125fc(1);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00401c40": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401c40(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x4af4) < 3) && ((*(param_1 + 0x4b04) & 8) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 74
    },
    "00401c59": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401c59(int32_t param_1)\n\n{\n    if (2 < *(param_1 + 0x4af4)) {\n        *(param_1 + 0x4b04) = (((*(param_1 + 0x4ae8) & 0xe0) != 0xe0) - 1 & 0xfffffff0) + 0x20;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "004058da": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004058da(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 4) == -1) {\n        return 0xffffff00;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileType)(*(param_1 + 4));\n    if ((iVar1 != 2) && (iVar1 != 3)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 104
    },
    "00405920": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405920(int32_t lpFileName, int16_t *arg_ch, uint32_t dwShareMode)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint dwFlagsAndAttributes;\n    \n    *(in_ECX + 0xc20) = 0;\n    if ((*(in_ECX + 0x1c) == '\\0') && ((dwShareMode & 4) == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    uVar4 = (-((dwShareMode >> 1 & 1) != 0) & 0xc0000000) + 0x80000000;\n    if ((dwShareMode & 1) != 0) {\n        uVar4 = uVar4 | 0x40000000;\n    }\n    dwShareMode = 1;\n    if (bVar1) {\n        dwShareMode = 3;\n    }\n    uVar2 = (*(in_ECX + 0x15) != '\\0') - 1 & 0x8000000;\n    iVar3 = fcn.00406a2a();\n    if (((iVar3 == 0) || (arg_ch == NULL)) || (*arg_ch == 0)) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_CreateFileA)(lpFileName, uVar4, dwShareMode, 0, 3, uVar2, 0);\n    }\n    else {\n        uVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(arg_ch, uVar4, dwShareMode, 0, 3, uVar2, 0);\n    }\n    uVar2 = uVar4;\n    if (uVar4 == 0xffffffff) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (uVar2 == 2) {\n            *(in_ECX + 0xc20) = 1;\n        }\n    }\n    *(in_ECX + 0x12) = 0;\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 0x10) = 0;\n    if (uVar4 != 0xffffffff) {\n        *(in_ECX + 4) = uVar4;\n        if (arg_ch == NULL) {\n            *(in_ECX + 0x41e) = 0;\n        }\n        else {\n            iVar3 = fcn.0040a826(arg_ch);\n            fcn.0040a555(in_ECX + 0x41e, arg_ch, iVar3 * 2 + 2);\n        }\n        if (lpFileName == 0) {\n            fcn.0040eca0(arg_ch, in_ECX + 0x1d, 0x1000000);\n        }\n        else {\n            iVar3 = fcn.0040a5a0(lpFileName);\n            fcn.0040a555(in_ECX + 0x1d, lpFileName, iVar3 + 1);\n        }\n        uVar2 = fcn.0040575c(*(in_ECX + 4));\n    }\n    return uVar2 & 0xffffff00 | uVar4 != 0xffffffff;\n}\n",
        "token_count": 742
    },
    "004061a0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004061a0(int32_t lpPathName, int16_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406a2a();\n    if (((iVar1 == 0) || (arg_ch == NULL)) || (*arg_ch == 0)) {\n        if (lpPathName == 0) {\n            return 2;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(lpPathName, 0);\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(arg_ch, 0);\n    }\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if ((iVar1 != 2) && (iVar1 != 3)) {\n            return 1;\n        }\n        return 2;\n    }\n    if (arg_10h != '\\0') {\n        fcn.0040612a(lpPathName, arg_ch, arg_14h);\n    }\n    return 0;\n}\n",
        "token_count": 251
    },
    "00406a2a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.00406a2a(void)\n\n{\n    uint lpVersionInformation;\n    int32_t var_110h;\n    int32_t var_10ch;\n    int32_t var_104h;\n    \n    if (*0x416008 == -1) {\n        lpVersionInformation = 0x114;\n        (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n        *0x416008 = var_104h;\n        *0x418eb0 = var_110h;\n        *0x418eac = var_10ch;\n    }\n    if (*0x416008 != 2) {\n        return 0x501;\n    }\n    return *0x418eb0 * 0x100 + *0x418eac;\n}\n",
        "token_count": 173
    },
    "00407bbb": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00407bbb(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = param_2[3];\n    if (*param_2 == 2) {\n        piVar1 = (*piVar1 + param_2[2] & 0x3ffffU) + *(param_1 + 0xc);\n    }\n    return piVar1;\n}\n",
        "token_count": 105
    },
    "00407ea7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ea7(uint8_t *arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    char cVar7;\n    int32_t in_ECX;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint8_t *puVar15;\n    uint32_t uVar16;\n    bool bVar17;\n    uint32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    uint8_t *var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    uint8_t *var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (0 < arg_8h) {\n        if (arg_8h < 3) {\n            uVar14 = *(in_ECX + 0x20);\n            if ((uVar14 < 0x3c000) && (3 < uVar14)) {\n                bVar17 = arg_8h == 0x2;\n                arg_8h = NULL;\n                piVar9 = *(in_ECX + 0xc);\n                iVar6 = *(in_ECX + 0x28);\n                if (0 < uVar14 - 4) {\n                    do {\n                        piVar10 = piVar9 + 1;\n                        iVar12 = iVar6 + 1;\n                        if ((*piVar9 == -0x18) || (iVar11 = arg_8h + 1,  *piVar9 == bVar17 + -0x18)) {\n                            iVar11 = *piVar10;\n                            if (iVar11 < 0) {\n                                if (-1 < iVar12 + iVar11) {\n                                    iVar11 = iVar11 + 0x1000000;\ncode_r0x00408385:\n                                    *piVar10 = iVar11;\n                                }\n                            }\n                            else if (iVar11 < 0x1000000) {\n                                iVar11 = iVar11 - iVar12;\n                                goto code_r0x00408385;\n                            }\n                            piVar10 = piVar9 + 5;\n                            iVar12 = iVar6 + 5;\n                            iVar11 = arg_8h + 5;\n                        }\n                        arg_8h = iVar11;\n                        piVar9 = piVar10;\n                        iVar6 = iVar12;\n                    } while (arg_8h < uVar14 - 4);\n                }\n            }\n        }\n        else if (arg_8h == 0x3) {\n            arg_8h = *(in_ECX + 0xc);\n            uVar14 = *(in_ECX + 0x20);\n            if (((uVar14 < 0x3c000) && (0x14 < uVar14)) && (uVar16 = *(in_ECX + 0x28) >> 4,  0 < uVar14 - 0x15)) {\n                var_2ch = (uVar14 - 0x16 >> 4) + 1;\n                do {\n                    if ((-1 < (*arg_8h & 0x1f) - 0x10) && (uVar2 = *((*arg_8h & 0x1f) + 0x41607c),  uVar2 != 0)) {\n                        var_1ch = NULL;\n                        var_34h = uVar2;\n                        iVar6 = 0x12;\n                        do {\n                            if (((var_34h & 1 << (var_1ch & 0x1f)) != 0) &&\n                               (iVar12 = fcn.00407ce7(arg_8h, iVar6 + 0x18, 4),  iVar12 == 5)) {\n                                puVar15 = arg_8h;\n                                iVar12 = iVar6;\n                                iVar11 = fcn.00407ce7(arg_8h, iVar6, 0x14, iVar6, 0x14);\n                                fcn.00407d37(arg_8h, iVar11 - uVar16 & 0xfffff, puVar15, iVar12);\n                            }\n                            var_1ch = var_1ch + 1;\n                            iVar6 = iVar6 + 0x29;\n                        } while (iVar6 < 0x65);\n                    }\n                    arg_8h = arg_8h + 0x10;\n                    uVar16 = uVar16 + 1;\n                    var_2ch = var_2ch + -1;\n                } while (var_2ch != 0);\n            }\n        }\n        else if (arg_8h == 0x4) {\n            uVar14 = *(in_ECX + 0x20);\n            var_30h = *(in_ECX + 0x14);\n            pcVar4 = *(in_ECX + 0xc);\n            var_34h = *(in_ECX + 0x10) + -3;\n            *(pcVar4 + 0x3c020) = uVar14;\n            if ((uVar14 < 0x1e000) && (-1 < var_30h)) {\n                var_8h = 0;\n                var_14h = -var_34h;\n                var_1ch = pcVar4;\n                var_10h = uVar14;\n                do {\n                    arg_8h = NULL;\n                    if (var_8h < var_10h) {\n                        var_18h = var_14h;\n                        puVar15 = pcVar4 + var_14h + uVar14;\n                        var_ch = ((var_10h - var_8h) - 1) / 3 + 1;\n                        do {\n                            if (var_18h < 3) {\ncode_r0x00408223:\n                                cVar7 = arg_8h;\n                            }\n                            else {\n                                var_24h = *puVar15;\n                                var_20h = puVar15[-3];\n                                iVar6 = (var_24h - var_20h) + arg_8h;\n                                var_2ch = fcn.0040ac7c(iVar6 - arg_8h);\n                                var_28h = fcn.0040ac7c(iVar6 - var_24h);\n                                iVar6 = fcn.0040ac7c(iVar6 - var_20h);\n                                if ((var_2ch <= var_28h) && (var_2ch <= iVar6)) goto code_r0x00408223;\n                                if (iVar6 < var_28h) {\n                                    cVar7 = var_20h;\n                                }\n                                else {\n                                    cVar7 = var_24h;\n                                }\n                            }\n                            cVar1 = *var_1ch;\n                            var_1ch = var_1ch + 1;\n                            var_18h = var_18h + 3;\n                            arg_8h = cVar7 - cVar1;\n                            puVar15[var_34h] = cVar7 - cVar1;\n                            puVar15 = puVar15 + 3;\n                            var_ch = var_ch + -1;\n                        } while (var_ch != 0);\n                    }\n                    var_8h = var_8h + 1;\n                    var_14h = var_14h + 1;\n                } while (var_8h < 3);\n                for (; var_30h < var_10h - 2; var_30h = var_30h + 3) {\n                    pcVar4[var_30h + uVar14] = pcVar4[var_30h + uVar14] + pcVar4[var_30h + 1 + uVar14];\n                    pcVar4[var_30h + 2 + uVar14] = pcVar4[var_30h + 2 + uVar14] + pcVar4[var_30h + 1 + uVar14];\n                }\n            }\n        }\n        else if (arg_8h == 0x5) {\n            var_28h = *(in_ECX + 0x20);\n            var_2ch = *(in_ECX + 0x10);\n            var_14h = *(in_ECX + 0xc);\n            var_30h = var_14h + var_28h;\n            *(var_14h + 0x3c020) = var_28h;\n            if ((var_28h < 0x1e000) && (var_10h = 0,  0 < var_2ch)) {\n                do {\n                    uVar14 = var_28h;\n                    var_24h = 0;\n                    var_20h = 0;\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_4h = 0;\n                    arg_8h = NULL;\n                    fcn.0040a4a0(&var_50h, 0, 0x1c);\n                    var_1ch = NULL;\n                    iVar6 = var_10h - uVar14;\n                    bVar17 = SBORROW4(var_10h, uVar14);\n                    var_18h = var_10h;\n                    iVar12 = 0;\n                    while (bVar17 != iVar6 < 0) {\n                        iVar11 = var_20h - var_ch;\n                        uVar2 = *var_14h;\n                        var_34h = uVar2;\n                        var_14h = var_14h + 1;\n                        var_ch = var_20h;\n                        iVar6 = (iVar12 * arg_8h + var_4h * iVar11 + var_8h * var_20h + var_24h * 8 >> 3 & 0xff) -\n                                var_34h;\n                        uVar5 = iVar6;\n                        var_30h[var_18h] = uVar5;\n                        var_20h = uVar5 - var_24h;\n                        iVar13 = uVar2 * 8;\n                        var_24h = iVar6;\n                        iVar6 = fcn.0040ac7c(iVar13);\n                        var_50h = var_50h + iVar6;\n                        iVar6 = fcn.0040ac7c(iVar13 - var_ch);\n                        var_4ch = var_4ch + iVar6;\n                        iVar6 = fcn.0040ac7c(var_ch + iVar13);\n                        var_48h = var_48h + iVar6;\n                        iVar6 = fcn.0040ac7c(iVar13 - iVar11);\n                        var_44h = var_44h + iVar6;\n                        iVar6 = fcn.0040ac7c(iVar13 + iVar11);\n                        var_40h = var_40h + iVar6;\n                        iVar6 = fcn.0040ac7c(iVar13 - iVar12);\n                        var_3ch = var_3ch + iVar6;\n                        iVar6 = fcn.0040ac7c(iVar13 + iVar12);\n                        uVar14 = var_50h;\n                        var_38h = var_38h + iVar6;\n                        if ((var_1ch & 0x1f) == 0) {\n                            uVar16 = 0;\n                            var_50h = 0;\n                            uVar8 = 1;\n                            do {\n                                uVar3 = (&var_50h)[uVar8];\n                                if (uVar3 < uVar14) {\n                                    uVar14 = uVar3;\n                                    uVar16 = uVar8;\n                                }\n                                (&var_50h)[uVar8] = 0;\n                                uVar8 = uVar8 + 1;\n                            } while (uVar8 < 7);\n                            if (uVar16 == 1) {\n                                if (-0x11 < var_8h) {\n                                    var_8h = var_8h + -1;\n                                }\n                            }\n                            else if (uVar16 == 2) {\n                                if (var_8h < 0x10) {\n                                    var_8h = var_8h + 1;\n                                }\n                            }\n                            else if (uVar16 == 3) {\n                                if (-0x11 < var_4h) {\n                                    var_4h = var_4h + -1;\n                                }\n                            }\n                            else if (uVar16 == 4) {\n                                if (var_4h < 0x10) {\n                                    var_4h = var_4h + 1;\n                                }\n                            }\n                            else if (uVar16 == 5) {\n                                if (-0x11 < arg_8h) {\n                                    arg_8h = arg_8h + -1;\n                                }\n                            }\n                            else if ((uVar16 == 6) && (arg_8h < 0x10)) {\n                                arg_8h = arg_8h + 1;\n                            }\n                        }\n                        var_18h = var_18h + var_2ch;\n                        var_1ch = var_1ch + 1;\n                        iVar6 = var_18h - var_28h;\n                        iVar12 = iVar11;\n                        bVar17 = SBORROW4(var_18h, var_28h);\n                    }\n                    var_10h = var_10h + 1;\n                } while (var_10h < var_2ch);\n            }\n        }\n        else if (arg_8h == 0x6) {\n            uVar14 = *(in_ECX + 0x20);\n            iVar6 = *(in_ECX + 0x10);\n            iVar12 = 0;\n            *(*(in_ECX + 0xc) + 0x3c020) = uVar14;\n            if ((uVar14 < 0x1e000) && (arg_8h = NULL,  0 < iVar6)) {\n                do {\n                    cVar7 = '\\0';\n                    for (iVar11 = arg_8h + uVar14; iVar11 < uVar14 * 2; iVar11 = iVar11 + iVar6) {\n                        cVar7 = cVar7 - *(*(in_ECX + 0xc) + iVar12);\n                        iVar12 = iVar12 + 1;\n                        *(*(in_ECX + 0xc) + iVar11) = cVar7;\n                    }\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < iVar6);\n            }\n        }\n        else if (arg_8h == 0x7) {\n            uVar14 = *(in_ECX + 0x20);\n            if (uVar14 < 0x1e000) {\n                iVar6 = 0;\n                uVar16 = uVar14;\n                if (0 < uVar14) {\n                    do {\n                        iVar12 = *(in_ECX + 0xc);\n                        cVar7 = *(iVar12 + iVar6);\n                        iVar11 = iVar6 + 1;\n                        if (cVar7 == '\\x02') {\n                            cVar7 = *(iVar12 + iVar11);\n                            iVar11 = iVar6 + 2;\n                            if (cVar7 != '\\x02') {\n                                cVar7 = cVar7 + -0x20;\n                            }\n                        }\n                        *(iVar12 + uVar16) = cVar7;\n                        uVar16 = uVar16 + 1;\n                        iVar6 = iVar11;\n                    } while (iVar11 < uVar14);\n                }\n                *(*(in_ECX + 0xc) + 0x3c01c) = uVar16 - uVar14;\n                *(*(in_ECX + 0xc) + 0x3c020) = uVar14;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 3624
    },
    "0040eaf8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040eaf8(uint lpFileTime)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t *in_ECX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint lpSystemTime;\n    uint16_t var_1ch;\n    uint16_t var_1ah;\n    uint var_18h;\n    uint16_t var_14h;\n    ushort var_12h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t lpLocalFileTime;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(lpFileTime, &lpLocalFileTime);\n    (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(&lpLocalFileTime, &lpSystemTime);\n    uVar3 = lpSystemTime._2_2_;\n    in_ECX[3] = var_18h;\n    in_ECX[2] = var_1ah;\n    in_ECX[4] = var_18h._2_2_;\n    in_ECX[8] = var_1ah - 1;\n    in_ECX[5] = var_14h;\n    uVar2 = 1;\n    *in_ECX = lpSystemTime;\n    in_ECX[1] = uVar3;\n    in_ECX[7] = var_1ch;\n    if (1 < uVar3) {\n        piVar4 = 0x4160f0;\n        do {\n            in_ECX[8] = in_ECX[8] + *piVar4;\n            uVar2 = uVar2 + 1;\n            piVar4 = piVar4 + 1;\n        } while (uVar2 < uVar3);\n    }\n    if ((2 < uVar3) && (cVar1 = fcn.0040eac3(lpSystemTime),  cVar1 != '\\0')) {\n        in_ECX[8] = in_ECX[8] + 1;\n    }\n    var_12h = 0;\n    (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, &var_10h);\n    in_ECX[6] = lpLocalFileTime - var_10h;\n    return;\n}\n",
        "token_count": 521
    },
    "004034a1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004034a1(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint ARG_1;\n    uint lpBuffer;\n    uint var_800h;\n    uint uStackY48;\n    uint arglist;\n    \n    fcn.00401200();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar2 == 3) {\n        fcn.004071cb(arg_8h, arg_ch, &fcn.004034a1::var_800h, 0x400);\n        uVar3 = fcn.0040a826(&fcn.004034a1::var_800h);\n        cVar1 = fcn.00407aa8(&fcn.004034a1::var_800h);\n        if (cVar1 == '\\0') {\n            uStackY48 = 0x4034ff;\n            (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n            iVar2 = fcn.0040a826(&fcn.004034a1::lpBuffer);\n            uVar3 = uVar3 + 1 + iVar2;\n        }\n        if (0x104 < uVar3) {\n            arglist = 0xaf;\n            ARG_1 = fcn.00409b0b();\n            uStackY48 = 0x403530;\n            fcn.0040b986(0x414310, ARG_1, arglist);\n        }\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "0040fe26": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040fe26(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar3 = 1;\n    *(param_1 + 0xa6c) = 1;\n    *(param_1 + 0x660) = param_2;\n    fcn.0040fcae();\n    *(param_1 + 0x86c) = 0;\n    *(param_1 + 0x86d) = 2;\n    fcn.0040a4a0(param_1 + 0x86e, 4, 9);\n    fcn.0040a4a0(param_1 + 0x877, 6, 0xf5);\n    iVar1 = 0;\n    do {\n        *(param_1 + 0x76c + iVar1) = iVar1;\n        iVar1 = iVar1 + 1;\n        iVar2 = iVar1;\n        iVar5 = iVar3;\n    } while (iVar1 < 3);\n    for (; iVar1 < 0x100; iVar1 = iVar1 + 1) {\n        *(param_1 + 0x76c + iVar1) = iVar2;\n        iVar4 = iVar5 + -1;\n        if (iVar5 + -1 == 0) {\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + 1;\n            iVar4 = iVar3;\n        }\n        iVar5 = iVar4;\n    }\n    fcn.0040a4a0(param_1 + 0x96c, 0, 0x40);\n    fcn.0040a4a0(param_1 + 0x9ac, 8, 0xc0);\n    *(param_1 + 0x642) = 7;\n    return;\n}\n",
        "token_count": 433
    },
    "0040f895": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f895(int16_t *param_1)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    \n    uVar2 = *(param_1 + 1);\n    if (uVar2 < 7) {\n        pcVar1 = param_1 + 3;\n        *pcVar1 = *pcVar1 + -1;\n        if (*pcVar1 == '\\0') {\n            *param_1 = *param_1 << 1;\n            *(param_1 + 1) = uVar2 + 1;\n            *(param_1 + 3) = '\\x03' << (uVar2 & 0x1f);\n        }\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00411a7b": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint32_t fcn.00411a7b(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t arg_10h;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00410b0c();\n    uVar2 = uVar1;\n    if (uVar1 == 0xffffffff) {\ncode_r0x00411a9a:\n        return uVar2 & 0xffffff00;\n    }\n    arg_10h = (uVar1 & 7) + 1;\n    if (arg_10h == 7) {\n        uVar2 = fcn.00410b0c();\n        if (uVar2 == 0xffffffff) goto code_r0x00411a9a;\n        arg_10h = uVar2 + 7;\n    }\n    else if (arg_10h == 8) {\n        uVar3 = fcn.00410b0c();\n        uVar2 = uVar3;\n        if ((uVar3 == 0xffffffff) || (uVar2 = fcn.00410b0c(),  uVar2 == 0xffffffff)) goto code_r0x00411a9a;\n        arg_10h = uVar3 * 0x100 + uVar2;\n    }\n    fcn.00403d6a(arg_10h);\n    iVar4 = 0;\n    if (0 < arg_10h) {\n        do {\n            uVar2 = fcn.00410b0c();\n            if (uVar2 == 0xffffffff) {\n                if (var_14h != 0) {\n                    uVar2 = fcn.0040a41c(var_14h);\n                }\n                goto code_r0x00411a9a;\n            }\n            *(var_14h + iVar4) = uVar2;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < arg_10h);\n    }\n    uVar1 = fcn.00411507(uVar1, var_14h, arg_10h);\n    uVar2 = uVar1;\n    if (var_14h != 0) {\n        uVar2 = fcn.0040a41c(var_14h);\n    }\n    return uVar2 & 0xffffff00 | uVar1 & 0xff;\n}\n",
        "token_count": 553
    },
    "004012b7": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nbool __thiscall fcn.004012b7(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040a705(param_1 + 0x30, param_2);\n    return iVar1 == 0;\n}\n",
        "token_count": 66
    },
    "0040e623": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_6eh\n\nvoid __cdecl fcn.0040e623(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int16_t extraout_CX;\n    ushort *puVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint var_6eh;\n    uint var_4h;\n    \n    uVar3 = 0;\n    do {\n        iVar4 = fcn.00401120();\n        *(&var_6eh + uVar3 * 2 + 2) = extraout_CX + 0x30;\n        uVar3 = uVar3 + 1;\n        uVar1 = iVar4 | iVar4 >> 0x20;\n    } while (iVar4 != 0);\n    if (uVar3 != 0) {\n        puVar2 = &var_6eh + uVar3 * 2;\n        do {\n            *(arg_10h + uVar1 * 2) = *puVar2;\n            uVar1 = uVar1 + 1;\n            puVar2 = puVar2 + -1;\n        } while (uVar1 < uVar3);\n    }\n    *(arg_10h + uVar3 * 2) = 0;\n    return;\n}\n",
        "token_count": 317
    },
    "004012cc": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004012cc(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    param_1[1] = param_1[1] + param_2;\n    uVar1 = param_1[1];\n    uVar3 = param_1[2];\n    if (uVar3 < uVar1) {\n        uVar3 = (uVar3 >> 2) + 0x20 + uVar3;\n        if (uVar3 < uVar1) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.0040a43b(*param_1, uVar3);\n        *param_1 = iVar2;\n        if (iVar2 == 0) {\n            fcn.004035b1();\n        }\n        param_1[2] = uVar3;\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "0040132c": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040132c(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    param_1[1] = param_1[1] + param_2;\n    uVar1 = param_1[1];\n    uVar3 = param_1[2];\n    if (uVar3 < uVar1) {\n        uVar3 = (uVar3 >> 2) + 0x20 + uVar3;\n        if (uVar3 < uVar1) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.0040a43b(*param_1, uVar3 * 2);\n        *param_1 = iVar2;\n        if (iVar2 == 0) {\n            fcn.004035b1();\n        }\n        param_1[2] = uVar3;\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "00407bd7": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint32_t fcn.00407bd7(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar1 = fcn.00406a25();\n    uVar2 = uVar1 & 0xc000;\n    if (uVar2 == 0) {\n        fcn.00406a0e(6);\n        uVar1 = uVar1 >> 10 & 0xf;\n    }\n    else {\n        if (uVar2 == 0x4000) {\n            if ((uVar1 & 0x3c00) == 0) {\n                uVar1 = uVar1 >> 2 | 0xffffff00;\n                uVar4 = 0xe;\n            }\n            else {\n                uVar1 = uVar1 >> 6 & 0xff;\n                uVar4 = 10;\n            }\n        }\n        else {\n            if (uVar2 == 0x8000) {\n                fcn.00406a0e(2);\n                uVar1 = fcn.00406a25();\n            }\n            else {\n                fcn.00406a0e(2);\n                iVar3 = fcn.00406a25();\n                fcn.00406a0e(0x10);\n                uVar1 = fcn.00406a25();\n                uVar1 = iVar3 << 0x10 | uVar1;\n            }\n            uVar4 = 0x10;\n        }\n        fcn.00406a0e(uVar4);\n    }\n    return uVar1;\n}\n",
        "token_count": 358
    },
    "00407d90": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407d90(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    param_1[1] = param_1[1] + param_2;\n    uVar1 = param_1[1];\n    uVar3 = param_1[2];\n    if (uVar3 < uVar1) {\n        uVar3 = (uVar3 >> 2) + 0x20 + uVar3;\n        if (uVar3 < uVar1) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.0040a43b(*param_1, uVar3 * 0x28);\n        *param_1 = iVar2;\n        if (iVar2 == 0) {\n            fcn.004035b1();\n        }\n        param_1[2] = uVar3;\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "0040ac20": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t * fcn.0040ac20(int32_t *param_1, uint8_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    \n    if (param_3 != 0) {\n        piVar2 = param_1;\n        for (uVar1 = param_3 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *piVar2 = param_2 * 0x1010101;\n            piVar2 = piVar2 + 1;\n        }\n        for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n            *piVar2 = param_2 * 0x1010101;\n            piVar2 = piVar2 + 1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 210
    },
    "0040f907": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040f907(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    param_1[1] = param_1[1] + param_2;\n    uVar1 = param_1[1];\n    uVar3 = param_1[2];\n    if (uVar3 < uVar1) {\n        uVar3 = (uVar3 >> 2) + 0x20 + uVar3;\n        if (uVar3 < uVar1) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.0040a43b(*param_1, uVar3 << 2);\n        *param_1 = iVar2;\n        if (iVar2 == 0) {\n            fcn.004035b1();\n        }\n        param_1[2] = uVar3;\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "004025be": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004025be(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint32_t arg_8h_00;\n    int32_t extraout_ECX;\n    uint uVar2;\n    uint var_1h;\n    \n    fcn.00401200();\n    if (*(extraout_ECX + 0x71d2) != *(extraout_ECX + 0x57f0)) {\n        uVar2 = 0x46f;\n        uVar1 = fcn.00409b0b();\n        fcn.0040b986(extraout_ECX + 0x41e, uVar1, uVar2);\n        fcn.00403537(3);\n        return 0;\n    }\n    if (((*(extraout_ECX + 0x5811) < 0x30) || (0x35 < *(extraout_ECX + 0x5811))) || (0x24 < *(extraout_ECX + 0x5810))) {\n        uVar2 = 0x470;\n        uVar1 = fcn.00409b0b();\n        fcn.0040b986(extraout_ECX + 0x41e, uVar1, uVar2);\n        return 0;\n    }\n    if ((*(extraout_ECX + 0x57fc) == 0) && ((*(extraout_ECX + 0x57f8) & 2) == 0)) {\n        return 1;\n    }\n    arg_8h_00 = extraout_ECX + 0xe70;\n    fcn.00408f64();\n    fcn.00410eba(arg_8h_00);\n    fcn.004114c9();\n    if (arg_ch == 0) {\n        fcn.00401709(*(extraout_ECX + 0x5800));\n        fcn.004090ac(*arg_8h, *(extraout_ECX + 0x5800));\n    }\n    if ((*(extraout_ECX + 0x57f8) & 4) != 0) {\n        if (*(*(extraout_ECX + 0x1398) + 0x291c) == '\\0') goto code_r0x004027b9;\n        fcn.004092b2(*(extraout_ECX + 0x5810), *(extraout_ECX + 0x1398) + 0x281c, \n                     -((*(extraout_ECX + 0x57f8) & 0x400) != 0) & extraout_ECX + 0x642cU, 0, \n                     1 - (*(extraout_ECX + 0x5810) < 0x24));\n    }\n    *(extraout_ECX + 0xe90) = *(extraout_ECX + 0x57fc);\n    *(extraout_ECX + 0xe94) = 0;\n    *(extraout_ECX + 0xe98) = 0;\n    fcn.0040908c(extraout_ECX, arg_ch);\n    *(extraout_ECX + 0x1336) = *(extraout_ECX + 0x57f8) >> 1 & 1;\n    *(extraout_ECX + 0xea8) = extraout_ECX + 0x57f0;\n    *(extraout_ECX + 0xeac) = 0;\n    if (*(extraout_ECX + 0x5811) == '0') {\n        fcn.00403e43(arg_8h_00, *(extraout_ECX + 0x5800), 0);\n    }\n    else {\n        arg_8h_00 = *(extraout_ECX + 0x5810);\n        fcn.00411ff4();\n    }\n    if (*(extraout_ECX + 0x5808) == ~*(extraout_ECX + 0x137c)) {\n        fcn.0041138e(arg_8h_00);\n        return 1;\n    }\n    uVar1 = fcn.0040e679(extraout_ECX + 0x5820);\n    uVar2 = 0x471;\n    uVar1 = fcn.00409b0b(0x471, uVar1);\n    fcn.0040b986(extraout_ECX + 0x41e, uVar1, uVar2);\n    fcn.00403537(3);\n    if (arg_8h != NULL) {\n        fcn.00401310();\n    }\ncode_r0x004027b9:\n    fcn.0041138e();\n    return 0;\n}\n",
        "token_count": 1048
    },
    "004032cc": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.004032cc(uint arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint noname_5, uint arg_20h)\n\n{\n    uint32_t in_EAX;\n    \n    if (arg_ch == 0x30) {\n        in_EAX = fcn.00409659(arg_8h);\n    }\n    else if (arg_ch == 0x110) {\n        in_EAX = fcn.004098a8(arg_8h, arg_18h, arg_20h & 1);\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 151
    },
    "00405a95": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00405a95(int32_t lpFileName, int16_t *arg_ch, uint32_t dwShareMode)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    if (((dwShareMode & 8) == 0) && (*(in_ECX + 0x1c) == '\\0')) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(in_ECX + 0x18) = dwShareMode;\n    iVar4 = (((dwShareMode >> 1 & 1) == 0) - 1 & 0x80000000) + 0xc0000000;\n    iVar2 = fcn.00406a2a();\n    if (((iVar2 == 0) || (arg_ch == NULL)) || (*arg_ch == 0)) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)(lpFileName, iVar4, uVar1, 0, 2, 0, 0);\n    }\n    else {\n        uVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(arg_ch, iVar4, uVar1, 0, 2, 0, 0);\n    }\n    *(in_ECX + 4) = uVar3;\n    *(in_ECX + 0x12) = 1;\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 0x10) = 0;\n    if (arg_ch == NULL) {\n        *(in_ECX + 0x41e) = 0;\n    }\n    else {\n        fcn.0040a850(in_ECX + 0x41e, arg_ch);\n    }\n    if (lpFileName == 0) {\n        fcn.0040eca0(arg_ch, in_ECX + 0x1d, 0x1000000);\n    }\n    else {\n        fcn.0040a693(in_ECX + 0x1d, lpFileName);\n    }\n    fcn.0040575c(*(in_ECX + 4));\n    return *(in_ECX + 4) != -1;\n}\n",
        "token_count": 506
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00402e51": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00402e51(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    \n    uVar2 = 0;\n    do {\n        iVar4 = 8;\n        uVar1 = uVar2;\n        do {\n            if ((uVar1 & 1) == 0) {\n                uVar1 = uVar1 >> 1;\n            }\n            else {\n                uVar1 = uVar1 >> 1 ^ 0xedb88320;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        *(uVar2 * 4 + 0x4161c0) = uVar1;\n        *(uVar2 * 4 + 0x4181c0) = uVar1;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x100);\n    puVar3 = 0x4165c0;\n    iVar4 = 0x101;\n    do {\n        uVar2 = puVar3[-0x100];\n        iVar6 = 7;\n        puVar5 = puVar3;\n        do {\n            uVar2 = uVar2 >> 8 ^ *((uVar2 & 0xff) * 4 + 0x4161c0);\n            *puVar5 = uVar2;\n            puVar5 = puVar5 + 0x100;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n        puVar3 = puVar3 + 1;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return;\n}\n",
        "token_count": 403
    },
    "004039de": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004039de(int32_t arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    int16_t *arg_ch_00;\n    uint32_t uVar1;\n    uint arg_8h_00;\n    char cVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint *arg_8h_01;\n    int32_t iVar5;\n    uint32_t arg_10h_00;\n    uchar auStackY16632 [3080];\n    uint32_t uStackY13552;\n    uchar auStackY11384 [8];\n    uchar auStackY11376 [8];\n    uchar auStackY11368 [16];\n    uchar auStackY11352 [1028];\n    uint uStackY10324;\n    uint var_1c2ch;\n    uint var_1004h;\n    uint var_804h;\n    uint var_800h;\n    uint uStackY156;\n    uint uStackY152;\n    uchar *puStackY148;\n    uchar *puStackY144;\n    uchar *puStackY140;\n    uint *arg_ch_01;\n    \n    fcn.00401200();\n    iVar4 = fcn.00406a2a();\n    if (iVar4 != 0) {\n        if ((arg_10h == NULL) || (*arg_10h == 0)) {\n            fcn.0040ecd2();\n        }\n        else {\n            fcn.0040a850(&fcn.004039de::var_1004h, arg_10h);\n        }\n        if ((var_1004h == 0) || (var_1004h._2_2_ != 0)) {\n            arg_ch_01 = &fcn.004039de::var_1004h;\n            arg_8h_01 = &fcn.004039de::var_804h;\n        }\n        else {\n            arg_ch_01 = 0x41436c;\n            fcn.0040a850(&fcn.004039de::var_804h, 0x41436c);\n            arg_8h_01 = &fcn.004039de::var_800h;\n        }\n        fcn.0040a850(arg_8h_01, arg_ch_01);\n        iVar4 = fcn.0040a826(&fcn.004039de::var_804h);\n        arg_ch_00 = &fcn.004039de::var_804h + iVar4 * 2;\n        uVar1 = *(arg_8h + 0x6424);\n        arg_8h_00 = *(arg_8h + 0x6420);\n        arg_10h_00 = uVar1 >> 1;\n        iVar5 = fcn.0040a826(&fcn.004039de::var_804h);\n        if (iVar5 + arg_10h_00 < 0x402) {\n            fcn.0040ed2d(arg_8h_00, arg_ch_00, arg_10h_00);\n            *(arg_ch_00 + (uVar1 & 0xfffffffe)) = 0;\n            if (*arg_ch_00 == 0x3a) {\n                iVar4 = &fcn.004039de::var_804h + iVar4 * 2 + 2;\n                fcn.00407426(iVar4, iVar4);\n                fcn.004039b6();\n                cVar2 = fcn.0040695b(arg_ch, arg_10h, &stack0xffffbf08);\n                if ((uStackY13552 & 1) != 0) {\n                    fcn.0040612a(arg_ch, arg_10h, uStackY13552 & 0xfffffffe);\n                }\n                fcn.0040eca0(&fcn.004039de::var_804h, &stack0xffffd3a8, 0x1000000);\n                fcn.00405711();\n                cVar3 = fcn.00405b7b(&stack0xffffd3a8, &fcn.004039de::var_804h, 9);\n                if ((cVar3 != '\\0') && (cVar3 = fcn.004025be(0, &fcn.004039de::var_1c2ch),  cVar3 != '\\0')) {\n                    fcn.00405783();\n                }\n                fcn.00405711();\n                if (cVar2 != '\\0') {\n                    puStackY140 = 0x403b91;\n                    cVar2 = fcn.00405920(arg_ch, arg_10h, 5);\n                    if (cVar2 != '\\0') {\n                        puStackY140 = &stack0xffffd398;\n                        puStackY144 = &stack0xffffd390;\n                        puStackY148 = &stack0xffffd388;\n                        uStackY152 = uStackY10324;\n                        uStackY156 = 0x403bb6;\n                        (*_sym.imp.KERNEL32.dll_SetFileTime)();\n                    }\n                }\n                puStackY140 = 0x403bc3;\n                fcn.0040612a(arg_ch, arg_10h, uStackY13552);\n                puStackY140 = 0x403bce;\n                fcn.004058fd();\n                puStackY140 = 0x403bd9;\n                fcn.004058fd();\n                return;\n            }\n        }\n        fcn.00403537();\n    }\n    return;\n}\n",
        "token_count": 1222
    },
    "004063b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpLastWriteTime\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004063b0(uint arg_8h, uint arg_ch, int32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint lpFileName;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint32_t var_8h;\n    char lpCreationTime;\n    uint lpLastWriteTime;\n    \n    iVar2 = fcn.00406a2a();\n    if (iVar2 != 0) {\n        if ((arg_10h == NULL) || (lpLastWriteTime._0_1_ = '\\x01',  *arg_10h == 0)) {\n            lpLastWriteTime._0_1_ = '\\0';\n        }\n        if ((arg_14h == NULL) || (lpCreationTime = '\\x01',  *arg_14h == 0)) {\n            lpCreationTime = '\\0';\n        }\n        if ((arg_18h == NULL) || (lpLastWriteTime._1_1_ = '\\x01',  *arg_18h == 0)) {\n            lpLastWriteTime._1_1_ = '\\0';\n        }\n        var_8h = fcn.004060fd(arg_8h, arg_ch);\n        if ((var_8h == 0xffffffff) || ((var_8h & 1) == 0)) {\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n            fcn.0040612a(arg_8h, arg_ch, 0);\n        }\n        fcn.004071cb(arg_8h, arg_ch, &lpFileName, 0x400);\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&lpFileName, 0x40000000, 3, 0, 3, 0x2000000, 0);\n        if (iVar2 != -1) {\n            if (lpLastWriteTime != '\\0') {\n                fcn.0040e9a0(&var_20h);\n            }\n            if (lpCreationTime != '\\0') {\n                fcn.0040e9a0(&var_18h);\n            }\n            if (lpLastWriteTime._1_1_ != '\\0') {\n                fcn.0040e9a0(&var_10h);\n            }\n            (*_sym.imp.KERNEL32.dll_SetFileTime)\n                      (iVar2, -(lpCreationTime != '\\0') & &var_18h, -(lpLastWriteTime._1_1_ != '\\0') & &var_10h, \n                       -(lpLastWriteTime != '\\0') & &var_20h);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n            if (bVar1) {\n                fcn.0040612a(arg_8h, arg_ch, var_8h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 694
    },
    "00410f83": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00410f83(uint param_1, uint8_t param_2)\n\n{\n    fcn.00410b36();\n    if ((param_2 & 1) != 0) {\n        fcn.0040ab0f(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 71
    },
    "00406a0e": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00406a0e(int32_t *param_1, int32_t param_2)\n\n{\n    *param_1 = *param_1 + (param_1[1] + param_2 >> 3);\n    param_1[1] = param_1[1] + param_2 & 7;\n    return;\n}\n",
        "token_count": 81
    },
    "0040e2e9": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e2e9(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = *(arg_8h + 0x14) + arg_10h * 8;\n    uVar1 = *(arg_8h + 0x14) >> 3 & 0x3f;\n    *(arg_8h + 0x14) = uVar2;\n    if (uVar2 < arg_10h * 8) {\n        *(arg_8h + 0x18) = *(arg_8h + 0x18) + 1;\n    }\n    *(arg_8h + 0x18) = *(arg_8h + 0x18) + (arg_10h >> 0x1d);\n    if (uVar1 + arg_10h < 0x40) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = -uVar1 + 0x40;\n        fcn.0040a4cd(uVar1 + 0x1c + arg_8h, arg_ch, uVar2);\n        fcn.0040df5b(arg_8h, arg_8h + 0x5c, arg_8h + 0x1c, arg_14h);\n        for (uVar1 = -uVar1 + 0x7f; uVar1 < arg_10h; uVar1 = uVar1 + 0x40) {\n            fcn.0040df5b(arg_8h, arg_8h + 0x5c, arg_ch + -0x3f + uVar1, arg_14h);\n            uVar2 = uVar2 + 0x40;\n        }\n        uVar1 = 0;\n    }\n    if (uVar2 < arg_10h) {\n        fcn.0040a4cd(uVar1 + 0x1c + arg_8h, uVar2 + arg_ch, arg_10h - uVar2);\n    }\n    return;\n}\n",
        "token_count": 497
    },
    "00410a71": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nushort __thiscall fcn.00410a71(int32_t *param_1, uint32_t *param_2)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    \n    uVar3 = fcn.004069e0();\n    uVar4 = param_2[0x21];\n    uVar3 = uVar3 & 0xfffe;\n    if (uVar3 < param_2[uVar4 + 1]) {\n        uVar3 = uVar3 >> (0x10U - uVar4 & 0x1f);\n        uVar4 = *(uVar3 + 0x88 + param_2) + param_1[1];\n        *param_1 = *param_1 + (uVar4 >> 3);\n        param_1[1] = uVar4 & 7;\n        uVar1 = *(param_2 + uVar3 * 2 + 0x488);\n    }\n    else {\n        uVar5 = uVar4 + 1;\n        uVar7 = 0xf;\n        if (uVar5 < 0xf) {\n            puVar6 = param_2 + uVar4 + 2;\n            do {\n                uVar7 = uVar5;\n                if (uVar3 < *puVar6) break;\n                uVar5 = uVar5 + 1;\n                puVar6 = puVar6 + 1;\n                uVar7 = 0xf;\n            } while (uVar5 < 0xf);\n        }\n        iVar2 = param_1[1];\n        param_1[1] = iVar2 + uVar7 & 7;\n        *param_1 = *param_1 + (iVar2 + uVar7 >> 3);\n        uVar4 = (uVar3 - param_2[uVar7] >> (0x10U - uVar7 & 0x1f)) + param_2[uVar7 + 0x11];\n        if (*param_2 <= uVar4) {\n            uVar4 = 0;\n        }\n        uVar1 = *(param_2 + uVar4 * 2 + 0xc88);\n    }\n    return uVar1;\n}\n",
        "token_count": 526
    },
    "00410f31": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00410f31(int32_t *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    bool bVar7;\n    uint uVar8;\n    uint8_t auStack432 [420];\n    uint uStack12;\n    \n    uStack12 = 0x410f3a;\n    uVar3 = fcn.004069e0();\n    bVar7 = (uVar3 & 0x8000) == 0;\n    if (bVar7) {\n        uVar4 = uVar3 >> 0xe & 1;\n        uVar3 = param_1[1] + 2;\n    }\n    else {\n        uVar4 = 1;\n        uVar3 = param_1[1] + 1;\n    }\n    *param_1 = *param_1 + (uVar3 >> 3);\n    param_1[1] = uVar3 & 7;\n    *(param_1 + 0x131a) = uVar4 == 0;\n    if (bVar7) {\n        return '\\0';\n    }\n    if ((*param_1 == param_1[0x25bc] + -0x19 || *param_1 < param_1[0x25bc] + -0x19) ||\n       (cVar1 = fcn.0040f636(unaff_ESI),  cVar1 != '\\0')) {\n        fcn.00406a0e(-param_1[1] & 7);\n        uVar3 = fcn.00406a25();\n        if ((uVar3 & 0x8000) == 0) {\n            uVar5 = 0;\n            param_1[0x2623] = 0;\n            param_1[0x262d] = 0;\n            param_1[0x262e] = 0;\n            if ((uVar3 & 0x4000) == 0) {\n                fcn.0040a4a0(param_1 + 0x25be, 0, 0x194);\n            }\n            fcn.00406a0e(2);\n            do {\n                uVar3 = fcn.00406a25(unaff_EDI);\n                uVar3 = uVar3 >> 0xc & 0xff;\n                fcn.00406a0e(4);\n                if (uVar3 == 0xf) {\n                    uVar3 = fcn.00406a25();\n                    uVar3 = uVar3 >> 0xc & 0xff;\n                    fcn.00406a0e(4);\n                    if (uVar3 == 0) {\n                        (&stack0xffffffe4)[uVar5] = 0xf;\n                    }\n                    else {\n                        iVar6 = uVar3 + 2;\n                        for (; (0 < iVar6 && (iVar6 = iVar6 + -1,  uVar5 < 0x14)); uVar5 = uVar5 + 1) {\n                            (&stack0xffffffe4)[uVar5] = 0;\n                        }\n                        uVar5 = uVar5 - 1;\n                    }\n                }\n                else {\n                    (&stack0xffffffe4)[uVar5] = uVar3;\n                }\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < 0x14);\n            fcn.0040f710(&stack0xffffffe4, param_1 + 0x21fb, 0x14);\n            iVar6 = 0;\n            do {\n                if ((*param_1 != param_1[0x25bc] + -5 && param_1[0x25bc] + -5 <= *param_1) &&\n                   (cVar1 = fcn.0040f636(),  cVar1 == '\\0')) goto code_r0x00410e23;\n                iVar2 = fcn.00410a71(param_1 + 0x21fb);\n                if (iVar2 < 0x10) {\n                    (&stack0xfffffe50)[iVar6] = *(iVar6 + 0x96f8 + param_1) + iVar2 & 0xf;\n                    iVar6 = iVar6 + 1;\n                }\n                else if (iVar2 < 0x12) {\n                    if (iVar2 == 0x10) {\n                        uVar3 = fcn.00406a25();\n                        iVar2 = (uVar3 >> 0xd) + 3;\n                        uVar8 = 3;\n                    }\n                    else {\n                        uVar3 = fcn.00406a25();\n                        iVar2 = (uVar3 >> 9) + 0xb;\n                        uVar8 = 7;\n                    }\n                    fcn.00406a0e(uVar8);\n                    while (0 < iVar2) {\n                        iVar2 = iVar2 + -1;\n                        if (0x193 < iVar6) goto code_r0x00410e12;\n                        (&stack0xfffffe50)[iVar6] = (&stack0xfffffe4f)[iVar6];\n                        iVar6 = iVar6 + 1;\n                    }\n                }\n                else {\n                    if (iVar2 == 0x12) {\n                        uVar3 = fcn.00406a25();\n                        iVar2 = (uVar3 >> 0xd) + 3;\n                        uVar8 = 3;\n                    }\n                    else {\n                        uVar3 = fcn.00406a25();\n                        iVar2 = (uVar3 >> 9) + 0xb;\n                        uVar8 = 7;\n                    }\n                    fcn.00406a0e(uVar8);\n                    while (0 < iVar2) {\n                        iVar2 = iVar2 + -1;\n                        if (0x193 < iVar6) goto code_r0x00410e12;\n                        (&stack0xfffffe50)[iVar6] = 0;\n                        iVar6 = iVar6 + 1;\n                    }\n                }\n            } while (iVar6 < 0x194);\ncode_r0x00410e12:\n            *(param_1 + 0x131a) = 1;\n            if (param_1[0x25bc] < *param_1) {\ncode_r0x00410e23:\n                cVar1 = '\\0';\n            }\n            else {\n                fcn.0040f710(&stack0xfffffe50, param_1 + 0x131b, 299);\n                fcn.0040f710(&stack0xffffff7b, param_1 + 0x16d3, 0x3c);\n                fcn.0040f710(&stack0xffffffb7, param_1 + 0x1a8b, 0x11);\n                fcn.0040f710(&stack0xffffffc8, param_1 + 0x1e43, 0x1c);\n                fcn.0040a4cd(param_1 + 0x25be, &stack0xfffffe50, 0x194);\n                cVar1 = '\\x01';\n            }\n        }\n        else {\n            param_1[0x2623] = 1;\n            cVar1 = fcn.0041080f(param_1, param_1 + 0x12ff);\n        }\n    }\n    return cVar1;\n}\n",
        "token_count": 1658
    },
    "0040ea50": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040ea50(int32_t *param_1)\n\n{\n    return (((((*param_1 + -0x3c) * 0x10 | param_1[1]) << 5 | param_1[2]) << 5 | param_1[3]) << 6 | param_1[4]) << 5 |\n           param_1[5] >> 1;\n}\n",
        "token_count": 94
    },
    "00405838": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00405838(int32_t param_1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t lpDistanceToMoveHigh;\n    \n    if (*(param_1 + 4) == -1) {\n        if (*(param_1 + 0x14) == '\\0') {\n            return 0xffffffffffffffff;\n        }\n        lpDistanceToMoveHigh = param_1;\n        fcn.004036a4(param_1 + 0x1d, param_1 + 0x41e);\n    }\n    lpDistanceToMoveHigh = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(*(param_1 + 4), 0, &lpDistanceToMoveHigh, 1);\n    if ((iVar1 == -1) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 != 0)) {\n        if (*(param_1 + 0x14) == '\\0') {\n            return 0xffffffffffffffff;\n        }\n        fcn.004036a4(param_1 + 0x1d, param_1 + 0x41e);\n    }\n    uVar2 = fcn.00401030(lpDistanceToMoveHigh, lpDistanceToMoveHigh >> 0x1f, 0, 1);\n    return uVar2;\n}\n",
        "token_count": 303
    },
    "00405f9d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405f9d(uint arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t nNumberOfBytesToRead;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar3 = 0;\n    iVar4 = 0;\n    if (*(in_ECX + 0x11) != '\\0') {\n        iVar4 = fcn.00405838();\n    }\n    do {\n        iVar2 = fcn.00405bb7(arg_8h, arg_ch);\n        if (iVar2 != -1) {\n            return iVar2;\n        }\n        *(in_ECX + 0xc20) = 2;\n        if (*(in_ECX + 0x14) == '\\0') {\n            return -1;\n        }\n        if (*(in_ECX + 0x11) != '\\0') {\n            var_4h = 0;\n            if (arg_ch == 0) {\n                return 0;\n            }\n            do {\n                fcn.00405de9(iVar4 + 0xc, 0);\n                nNumberOfBytesToRead = arg_ch - uVar3;\n                if (0x1ff < nNumberOfBytesToRead) {\n                    nNumberOfBytesToRead = 0x200;\n                }\n                iVar2 = fcn.00405bb7(arg_8h, nNumberOfBytesToRead);\n                if (iVar2 == -1) {\n                    iVar2 = 0x200;\n                }\n                var_4h = var_4h + iVar2;\n                uVar3 = uVar3 + 0x200;\n            } while (uVar3 < arg_ch);\n            return var_4h;\n        }\n    } while ((*(in_ECX + 0xc) == 0) && (cVar1 = fcn.0040348d(),  cVar1 != '\\0'));\n    fcn.0040389c(in_ECX + 0x1d, in_ECX + 0x41e);\n    return -1;\n}\n",
        "token_count": 490
    },
    "004060e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004060e0(uint32_t param_1)\n\n{\n    uint uVar1;\n    \n    if ((param_1 == 0xffffffff) || ((param_1 & 0x10) == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 81
    },
    "00406522": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406522(int32_t param_1)\n\n{\n    if (*(param_1 + 0xc04) != -1) {\n        (*_sym.imp.KERNEL32.dll_FindClose)(*(param_1 + 0xc04));\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "004068c3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004068c3(char *param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    \n    while( true ) {\n        *(param_2 + 0x149c) = 0;\n        if (*param_1 == '\\0') {\n            return 0;\n        }\n        if (param_1[0xc00] == '\\0') {\n            iVar2 = fcn.0040656b(*(param_1 + 0xc04), param_1, param_1 + 0x400, param_2);\n        }\n        else {\n            iVar2 = fcn.0040656b(0xffffffff, param_1, param_1 + 0x400, param_2);\n            *(param_1 + 0xc04) = iVar2;\n        }\n        if (iVar2 == -1) break;\n        *(param_2 + 0x1498) = 0;\n        uVar1 = fcn.004060e0(*(param_2 + 0xc08));\n        *(param_2 + 0xc10) = uVar1;\n        param_1[0xc00] = '\\0';\n        arg_8h = fcn.00407278(param_2);\n        iVar2 = fcn.0040a705(arg_8h, 0x4143cc);\n        if ((iVar2 != 0) && (iVar2 = fcn.0040a705(arg_8h, 0x4143c8),  iVar2 != 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 369
    },
    "0040695b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040695b(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    \n    *(arg_10h + 0x149c) = 0;\n    cVar1 = fcn.00406e5f(arg_8h, arg_ch);\n    if ((cVar1 == '\\0') && (iVar3 = fcn.0040656b(0xffffffff, arg_8h, arg_ch, arg_10h),  iVar3 != -1)) {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n        *(arg_10h + 0x1498) = 0;\n        uVar2 = fcn.004060e0(*(arg_10h + 0xc08));\n        *(arg_10h + 0xc10) = uVar2;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 220
    },
    "0040f636": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040f636(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t arg_10h;\n    \n    uVar2 = param_1[0x25bc];\n    uVar1 = *param_1;\n    arg_10h = uVar2 - uVar1;\n    if (arg_10h < 0) {\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    else {\n        if (0x4000 < uVar1) {\n            if (0 < arg_10h) {\n                fcn.0040a555(param_1[2], uVar1 + param_1[2], arg_10h);\n            }\n            *param_1 = 0;\n            param_1[0x25bc] = arg_10h;\n            uVar2 = arg_10h;\n        }\n        uVar2 = fcn.004090e2(param_1[2] + uVar2, 0x8000 - uVar2 & 0xfffffff0);\n        if (0 < uVar2) {\n            param_1[0x25bc] = param_1[0x25bc] + uVar2;\n        }\n        param_1[0x25bd] = param_1[0x25bc] - 0x1e;\n        uVar1 = uVar2 & 0xffffff00 | uVar2 != 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 343
    },
    "00410b0c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00410b0c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004108b2();\n    if (iVar1 == -1) {\n        fcn.004107e9();\n        *(param_1 + 0x988c) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 85
    },
    "004069e0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454",
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nunkuint3 __fastcall fcn.004069e0(int32_t *param_1)\n\n{\n    uchar *puVar1;\n    \n    puVar1 = *param_1 + param_1[2];\n    return CONCAT21(CONCAT11(*puVar1, puVar1[1]), puVar1[2]) >> (8U - param_1[1] & 0x1f) & 0xffff;\n}\n",
        "token_count": 94
    },
    "00407ce7": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t fcn.00407ce7(int32_t param_1, int32_t param_2, char param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = param_2 + (param_2 >> 0x1f & 7U) >> 3;\n    return CONCAT22(*(iVar1 + 2 + param_1), CONCAT11(*(iVar1 + 1 + param_1), *(iVar1 + param_1))) >> (param_2 & 7) &\n           0xffffffffU >> (0x20U - param_3 & 0x1f);\n}\n",
        "token_count": 135
    },
    "00408e9e": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408e9e(int32_t *param_1, uint *param_2)\n\n{\n    if (param_1[5] + 3U < param_1[4]) {\n        *param_2 = *(param_1[5] + *param_1);\n        param_1[5] = param_1[5] + 4;\n    }\n    else {\n        *param_2 = 0;\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0040f950": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040f950(uint *param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    param_1[1] = 0;\n    *param_1 = 0;\n    param_1[2] = 0xffffffff;\n    param_1[6] = param_2;\n    iVar2 = 4;\n    do {\n        uVar1 = fcn.0040f8e9();\n        iVar2 = iVar2 + -1;\n        param_1[1] = param_1[1] << 8 | uVar1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 155
    },
    "004106aa": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004106aa(uint8_t **arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint8_t **ppuVar6;\n    uint16_t *in_ECX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint8_t *var_408h;\n    uint8_t *apuStack1032 [255];\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    iVar1 = arg_8h;\n    iVar9 = *in_ECX - *(arg_8h + 0x654);\n    var_4h = fcn.00410618(arg_8h, iVar9);\n    var_8h = 0;\n    puVar3 = *(in_ECX + 2) + -6;\n    arg_8h = &var_408h;\n    do {\n        do {\n            puVar2 = puVar3;\n            puVar3 = puVar2 + 6;\n        } while (*(*puVar3 + 0x66c + iVar1) == *(iVar1 + 0xa6c));\n        iVar7 = var_8h + puVar2[7];\n        iVar9 = iVar9 + -1;\n        var_8h = iVar7;\n        *arg_8h = puVar3;\n        arg_8h = arg_8h + 1;\n    } while (iVar9 != 0);\n    *(iVar1 + 0x4a84) = *(iVar1 + 0x4a84) + iVar7;\n    uVar4 = *(iVar1 + 0x4a78) / *(iVar1 + 0x4a84);\n    *(iVar1 + 0x4a78) = uVar4;\n    uVar4 = (*(iVar1 + 0x4a74) - *(iVar1 + 0x4a70)) / uVar4;\n    if (uVar4 < *(iVar1 + 0x4a84)) {\n        ppuVar6 = &var_408h;\n        if (uVar4 < iVar7) {\n            for (uVar8 = var_408h[1]; uVar8 <= uVar4; uVar8 = uVar8 + var_408h[1]) {\n                ppuVar6 = ppuVar6 + 1;\n                var_408h = *ppuVar6;\n            }\n            *(iVar1 + 0x4a80) = uVar8;\n            *(iVar1 + 0x4a7c) = uVar8 - var_408h[1];\n            fcn.0040f895();\n            fcn.004105de(iVar1, var_408h);\n        }\n        else {\n            *(iVar1 + 0x4a7c) = iVar7;\n            *(iVar1 + 0x4a80) = *(iVar1 + 0x4a84);\n            iVar9 = *in_ECX - *(iVar1 + 0x654);\n            ppuVar6 = &stack0xfffffbf0;\n            do {\n                ppuVar6 = ppuVar6 + 1;\n                iVar9 = iVar9 + -1;\n                *(**ppuVar6 + 0x66c + iVar1) = *(iVar1 + 0xa6c);\n            } while (iVar9 != 0);\n            *var_4h = *var_4h + *(iVar1 + 0x4a84);\n            *(iVar1 + 0x654) = *in_ECX;\n        }\n        uVar5 = 1;\n    }\n    else {\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 851
    },
    "0040ea78": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040ea78(int32_t *param_1, uint32_t param_2)\n\n{\n    param_1[5] = (param_2 & 0x1f) * 2;\n    param_1[6] = 0;\n    param_1[4] = param_2 >> 5 & 0x3f;\n    param_1[3] = param_2 >> 0xb & 0x1f;\n    param_1[2] = param_2 >> 0x10 & 0x1f;\n    param_1[1] = param_2 >> 0x15 & 0xf;\n    *param_1 = (param_2 >> 0x19) + 0x7bc;\n    return;\n}\n",
        "token_count": 176
    },
    "0040e679": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nint32_t fcn.0040e679(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    *0x42d0d8 = *0x42d0d8 + 1;\n    if (3 < *0x42d0d8) {\n        *0x42d0d8 = 0;\n    }\n    iVar1 = *0x42d0d8 * 0x800;\n    iVar2 = iVar1 + 0x42b0d8;\n    fcn.0040ecd2(param_1, iVar2, 0x400);\n    *(iVar1 + 0x42b8d6) = 0;\n    return iVar2;\n}\n",
        "token_count": 162
    },
    "0040f028": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040f028(uint32_t lpsz)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint16_t var_20h;\n    uint var_1eh;\n    uint32_t var_ch;\n    \n    iVar2 = fcn.00406a2a();\n    if (iVar2 == 0) {\n        var_1eh._0_2_ = 0;\n        var_20h = lpsz;\n        fcn.0040eca0(&var_20h, &var_ch, 10);\n        if (var_ch != '?') {\n            uVar1 = fcn.0040e509(var_ch);\n            var_ch = var_ch & 0xffffff00 | uVar1;\n            fcn.0040ecd2(&var_ch, &var_20h, 0x1000000);\n            lpsz = var_20h;\n        }\n    }\n    else {\n        lpsz = (*_sym.imp.USER32.dll_CharUpperW)(lpsz);\n    }\n    return lpsz;\n}\n",
        "token_count": 243
    },
    "0040ed6d": {
        "rules": [
            "encrypt data using HC-128/11bb23636d2a4650a9dbaa6512d69580"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0040ed6d(uint8_t *arg_8h, ushort *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    uVar1 = arg_10h - 1;\n    _auStack8 = 0x1000000;\n    arg_10h = uVar1;\ncode_r0x0040ed85:\n    do {\n        if (*arg_8h == 0) {\ncode_r0x0040eee5:\n            if (arg_ch != NULL) {\n                uVar1 = 0;\n                *arg_ch = 0;\n            }\n            return uVar1 & 0xffffff00 | _auStack8 >> 0x18;\n        }\n        uVar2 = *arg_8h;\n        puVar3 = arg_8h + 1;\n        if (0x7f < uVar2) {\n            if ((uVar2 & 0xffffffe0) == 0xc0) {\n                uVar1 = 0;\n                if ((*puVar3 & 0xc0) == 0x80) {\n                    uVar2 = *puVar3 & 0x3fU | (uVar2 & 0x1f) << 6;\n                    puVar3 = arg_8h + 2;\n                    goto code_r0x0040ee7f;\n                }\n                goto code_r0x0040eee5;\n            }\n            if ((uVar2 & 0xfffffff0) == 0xe0) {\n                uVar1 = 0;\n                if (((*puVar3 & 0xc0) == 0x80) && ((arg_8h[2] & 0xc0) == 0x80)) {\n                    uVar1 = arg_8h[2] & 0x3f;\n                    uVar2 = (*puVar3 & 0x3fU | (uVar2 & 0xf) << 6) << 6 | uVar1;\n                    puVar3 = arg_8h + 3;\n                    goto code_r0x0040ee7f;\n                }\n                goto code_r0x0040eee5;\n            }\n            uVar1 = uVar2 & 0xfffffff8;\n            if (uVar1 == 0xf0) {\n                uVar1 = 0;\n                if ((*puVar3 & 0xc0) == 0x80) {\n                    uVar1 = 0;\n                    if (((arg_8h[2] & 0xc0) == 0x80) && ((arg_8h[3] & 0xc0) == 0x80)) {\n                        uVar1 = arg_8h[3] & 0x3f;\n                        uVar2 = ((*puVar3 & 0x3fU | (uVar2 & 7) << 6) << 6 | arg_8h[2] & 0x3fU) << 6 | uVar1;\n                        puVar3 = arg_8h + 4;\n                        goto code_r0x0040ee7f;\n                    }\n                }\n                goto code_r0x0040eee5;\n            }\ncode_r0x0040eedc:\n            _auStack8 = 0;\n            arg_8h = puVar3;\n            goto code_r0x0040ed85;\n        }\ncode_r0x0040ee7f:\n        if ((arg_ch != NULL) && (arg_10h = arg_10h - 1,  arg_10h < 0)) goto code_r0x0040eee5;\n        arg_8h = puVar3;\n        if (uVar2 < 0x10000) break;\n        if ((arg_ch != NULL) && (arg_10h = arg_10h - 1,  arg_10h < 0)) goto code_r0x0040eee5;\n        if (0x10ffff < uVar2) goto code_r0x0040eedc;\n        if (arg_ch != NULL) {\n            uVar1 = (uVar2 - 0x10000 >> 10) - 0x2800;\n            *arg_ch = uVar1;\n            arg_ch = arg_ch + 1;\n            uVar2 = (uVar2 & 0x3ff) - 0x2400;\n            goto code_r0x0040eed2;\n        }\n    } while( true );\n    if (arg_ch != NULL) {\ncode_r0x0040eed2:\n        *arg_ch = uVar2;\n        arg_ch = arg_ch + 1;\n    }\n    goto code_r0x0040ed85;\n}\n",
        "token_count": 1088
    },
    "0040f3b0": {
        "rules": [
            "encrypt data using HC-128/11bb23636d2a4650a9dbaa6512d69580"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040f3b0(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    \n    uVar3 = *(**(param_2 + 0x650) + 0x96c + param_2);\n    *(param_2 + 0xa6e) = uVar3;\n    puVar1 = param_1 + 2;\n    uVar4 = *(*puVar1 + 0x96c + param_2);\n    uVar5 = *(param_1 + 3);\n    uVar6 = *(**(param_1 + 8) + 0x86b + param_2);\n    *(param_2 + 0x4a78) = *(param_2 + 0x4a78) >> 0xe;\n    puVar2 = param_2 + (uVar6 + 0x4f8 + (uVar4 + uVar5 * 0x20) * 2 + (*(param_2 + 0x664) >> 0x1a & 0x20U) +\n                        *(param_2 + 0xa6d) + uVar3) * 2;\n    if ((*(param_2 + 0x4a74) - *(param_2 + 0x4a70)) / *(param_2 + 0x4a78) < *puVar2) {\n        *(param_2 + 0x650) = puVar1;\n        *(param_1 + 3) = (*(param_1 + 3) < 0x80) + *(param_1 + 3);\n        *(param_2 + 0x4a7c) = 0;\n        *(param_2 + 0x4a80) = *puVar2;\n        *puVar2 = (*puVar2 - (*puVar2 + 0x20 >> 7)) + 0x80;\n        *(param_2 + 0x664) = *(param_2 + 0x664) + 1;\n        *(param_2 + 0xa6d) = 1;\n    }\n    else {\n        *(param_2 + 0x4a7c) = *puVar2;\n        *puVar2 = *puVar2 - (*puVar2 + 0x20 >> 7);\n        *(param_2 + 0x4a80) = 0x4000;\n        *(param_2 + 0x658) = *((*puVar2 >> 10) + 0x414934);\n        *(param_2 + 0x654) = 1;\n        *(*puVar1 + 0x66c + param_2) = *(param_2 + 0xa6c);\n        *(param_2 + 0x650) = 0;\n        *(param_2 + 0xa6d) = 0;\n    }\n    return;\n}\n",
        "token_count": 692
    },
    "0040c169": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c169(int32_t hWnd)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint lpClassName;\n    uint lpvObject;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    cVar2 = fcn.0040b2a5();\n    if (cVar2 != '\\0') {\n        iVar4 = (*_sym.imp.USER32.dll_GetWindow)(hWnd, 5);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        hWnd = 0;\n        var_4h = iVar4;\n        if (iVar4 != 0) {\n            while (hWnd < 0x200) {\n                (*_sym.imp.USER32.dll_GetClassNameW)(iVar4, &lpClassName, 0x400);\n                iVar5 = fcn.0040eefb(&lpClassName, L\"STATIC\");\n                if (((iVar5 == 0) &&\n                    (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(iVar4, 0xfffffff0),  (uVar3 & 0x1f) == 0xe)) &&\n                   (iVar5 = (*pcVar1)(iVar4, 0x173, 0, 0),  iVar5 != 0)) {\n                    (*_sym.imp.GDI32.dll_GetObjectW)(iVar5, 0x18, &lpvObject);\n                    uVar6 = fcn.0040b262(var_14h);\n                    uVar7 = var_18h;\n                    uVar6 = fcn.0040b21f(var_18h, uVar6);\n                    uVar7 = fcn.0040b15a(iVar5, uVar6, uVar7);\n                    (*pcVar1)(iVar4, 0x172, 0, uVar7);\n                    if (iVar5 != *0x41e8f8) {\n                        (*_sym.imp.GDI32.dll_DeleteObject)(iVar5);\n                    }\n                }\n                iVar4 = (*_sym.imp.USER32.dll_GetWindow)(iVar4, 2);\n                if (iVar4 == var_4h) {\n                    return;\n                }\n                hWnd = hWnd + 1;\n                if (iVar4 == 0) {\n                    return;\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 554
    },
    "004090c1": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004090c1(uint param_1)\n\n{\n    fcn.0040a2da();\n    fcn.0040a2da();\n    fcn.00408f64();\n    return param_1;\n}\n",
        "token_count": 53
    },
    "00409bb9": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409bb9(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_28h;\n    uchar var_24h [8];\n    uint8_t var_1ch;\n    uint var_1bh;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    fcn.0040a4cd(&var_28h, arg_8h, 0x20);\n    iVar3 = 0;\n    iVar6 = 0;\n    arg_8h = 0;\n    iVar7 = 0;\n    do {\n        if (10 < iVar3) {\n            return;\n        }\n        if (iVar7 < 4) {\n            var_4h = var_24h + iVar7 * 4 + -4;\n            do {\n                if (3 < iVar6) break;\n                iVar1 = iVar6 + iVar3 * 4;\n                iVar7 = iVar7 + 1;\n                iVar6 = iVar6 + 1;\n                *(var_8h + 0x14 + iVar1 * 4) = *var_4h;\n                var_4h = var_4h + 1;\n            } while (iVar7 < 4);\n        }\n        if (iVar6 == 4) {\n            iVar3 = iVar3 + 1;\n            iVar6 = 0;\n            arg_8h = iVar3;\n        }\n        if (3 < iVar7) {\n            if (iVar3 < 0xb) {\n                var_4h = 0x41dec0;\n                do {\n                    var_28h._1_1_ = var_28h._1_1_ ^ *(var_1bh._1_1_ + 0x41dfe0);\n                    var_28h._2_1_ = var_28h._2_1_ ^ *(var_1bh._2_1_ + 0x41dfe0);\n                    uVar2 = *var_4h;\n                    var_28h._3_1_ = var_28h._3_1_ ^ *(var_1ch + 0x41dfe0);\n                    var_4h = var_4h + 1;\n                    var_28h._0_1_ = var_28h ^ *(var_1bh + 0x41dfe0) ^ uVar2;\n                    puVar4 = var_24h;\n                    iVar3 = 3;\n                    do {\n                        iVar7 = 0;\n                        do {\n                            puVar4[iVar7] = puVar4[iVar7] ^ puVar4[iVar7 + -4];\n                            iVar7 = iVar7 + 1;\n                        } while (iVar7 < 4);\n                        puVar4 = puVar4 + 4;\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                    iVar3 = 0;\n                    do {\n                        if (10 < arg_8h) {\n                            return;\n                        }\n                        if (iVar3 < 4) {\n                            puVar5 = var_24h + iVar3 * 4 + -4;\n                            do {\n                                if (3 < iVar6) break;\n                                iVar7 = iVar6 + arg_8h * 4;\n                                iVar3 = iVar3 + 1;\n                                iVar6 = iVar6 + 1;\n                                *(var_8h + 0x14 + iVar7 * 4) = *puVar5;\n                                puVar5 = puVar5 + 1;\n                            } while (iVar3 < 4);\n                        }\n                        if (iVar6 == 4) {\n                            arg_8h = arg_8h + 1;\n                            iVar6 = 0;\n                        }\n                    } while (iVar3 < 4);\n                } while (arg_8h < 0xb);\n            }\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 905
    },
    "004095f6": {
        "rules": [
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688"
        ],
        "decompiled_code": "\nint16_t * __thiscall fcn.004095f6(int16_t **param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    piVar3 = *param_1;\n    iVar1 = *piVar3;\n    while( true ) {\n        if (iVar1 == 0) {\n            return NULL;\n        }\n        if ((((iVar1 == *param_2) && (iVar2 = fcn.0040a98b(piVar3 + 1, param_2 + 1, 7),  iVar2 == 0)) &&\n            (piVar3[8] == 0x3d)) && (piVar3[9] == 0x22)) break;\n        for (; *piVar3 != 0; piVar3 = piVar3 + 1) {\n            if (*piVar3 == 0xc) goto code_r0x00409642;\n        }\n        for (; *piVar3 == 0xc; piVar3 = piVar3 + 1) {\ncode_r0x00409642:\n        }\n        iVar1 = *piVar3;\n    }\n    return piVar3;\n}\n",
        "token_count": 274
    },
    "0040ab29": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.0040ab29(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    while( true ) {\n        uVar1 = *arg_8h;\n        iVar2 = fcn.0040aaeb(uVar1);\n        if (iVar2 == 0) break;\n        arg_8h = arg_8h + 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 128
    },
    "0040f08f": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9"
        ],
        "decompiled_code": "\nint32_t fcn.0040f08f(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    while( true ) {\n        uVar1 = *param_1;\n        if ((uVar1 < 0x30) || (0x39 < uVar1)) break;\n        iVar2 = iVar2 * 10 + -0x30 + uVar1;\n        param_1 = param_1 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 123
    },
    "00412ed1": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412ed1(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint ARG_0;\n    uint var_2ch;\n    code *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    char16_t *var_8h;\n    uint var_4h;\n    \n    ARG_0 = 0x30;\n    var_2ch = 0x828;\n    var_28h = fcn.00412e87;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = arg_8h;\n    var_18h = 0;\n    var_14h = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f00);\n    var_10h = 6;\n    var_ch = 0;\n    var_8h = L\"RarHtmlClassName\";\n    var_4h = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExW)(&ARG_0);\n    *in_ECX = arg_8h;\n    return;\n}\n",
        "token_count": 281
    },
    "0040e55e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint fcn.0040e55e(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if ((param_1 == 0x20) || (param_1 == 9)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 77
    },
    "00410c16": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00410c16(int32_t *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint var_1ach;\n    uint var_81h;\n    uint var_45h;\n    uint var_34h;\n    uint var_18h;\n    uint32_t var_4h;\n    \n    if ((*param_1 == param_1[0x25bc] + -0x19 || *param_1 < param_1[0x25bc] + -0x19) ||\n       (cVar1 = fcn.0040f636(),  cVar1 != '\\0')) {\n        fcn.00406a0e(-param_1[1] & 7);\n        uVar2 = fcn.00406a25();\n        if ((uVar2 & 0x8000) == 0) {\n            uVar4 = 0;\n            param_1[0x2623] = 0;\n            param_1[0x262d] = 0;\n            param_1[0x262e] = 0;\n            if ((uVar2 & 0x4000) == 0) {\n                fcn.0040a4a0(param_1 + 0x25be, 0, 0x194);\n            }\n            fcn.00406a0e(2);\n            do {\n                uVar2 = fcn.00406a25();\n                var_4h = uVar2 >> 0xc & 0xff;\n                fcn.00406a0e(4);\n                if (var_4h == 0xf) {\n                    uVar2 = fcn.00406a25();\n                    uVar2 = uVar2 >> 0xc & 0xff;\n                    fcn.00406a0e(4);\n                    if (uVar2 == 0) {\n                        *(&var_18h + uVar4) = 0xf;\n                    }\n                    else {\n                        iVar5 = uVar2 + 2;\n                        for (; (0 < iVar5 && (iVar5 = iVar5 + -1,  uVar4 < 0x14)); uVar4 = uVar4 + 1) {\n                            *(&var_18h + uVar4) = 0;\n                        }\n                        uVar4 = uVar4 - 1;\n                    }\n                }\n                else {\n                    *(&var_18h + uVar4) = var_4h;\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < 0x14);\n            fcn.0040f710(&var_18h, param_1 + 0x21fb, 0x14);\n            iVar5 = 0;\n            do {\n                if ((*param_1 != param_1[0x25bc] + -5 && param_1[0x25bc] + -5 <= *param_1) &&\n                   (cVar1 = fcn.0040f636(),  cVar1 == '\\0')) goto code_r0x00410e23;\n                iVar3 = fcn.00410a71(param_1 + 0x21fb);\n                if (iVar3 < 0x10) {\n                    *(&var_1ach + iVar5) = *(iVar5 + 0x96f8 + param_1) + iVar3 & 0xf;\n                    iVar5 = iVar5 + 1;\n                }\n                else if (iVar3 < 0x12) {\n                    if (iVar3 == 0x10) {\n                        uVar2 = fcn.00406a25();\n                        iVar3 = (uVar2 >> 0xd) + 3;\n                        uVar6 = 3;\n                    }\n                    else {\n                        uVar2 = fcn.00406a25();\n                        iVar3 = (uVar2 >> 9) + 0xb;\n                        uVar6 = 7;\n                    }\n                    fcn.00406a0e(uVar6);\n                    while (0 < iVar3) {\n                        iVar3 = iVar3 + -1;\n                        if (0x193 < iVar5) goto code_r0x00410e12;\n                        *(&var_1ach + iVar5) = (&stack0xfffffe4f)[iVar5];\n                        iVar5 = iVar5 + 1;\n                    }\n                }\n                else {\n                    if (iVar3 == 0x12) {\n                        uVar2 = fcn.00406a25();\n                        iVar3 = (uVar2 >> 0xd) + 3;\n                        uVar6 = 3;\n                    }\n                    else {\n                        uVar2 = fcn.00406a25();\n                        iVar3 = (uVar2 >> 9) + 0xb;\n                        uVar6 = 7;\n                    }\n                    fcn.00406a0e(uVar6);\n                    while (0 < iVar3) {\n                        iVar3 = iVar3 + -1;\n                        if (0x193 < iVar5) goto code_r0x00410e12;\n                        *(&var_1ach + iVar5) = 0;\n                        iVar5 = iVar5 + 1;\n                    }\n                }\n            } while (iVar5 < 0x194);\ncode_r0x00410e12:\n            *(param_1 + 0x131a) = 1;\n            if (param_1[0x25bc] < *param_1) {\ncode_r0x00410e23:\n                cVar1 = '\\0';\n            }\n            else {\n                fcn.0040f710(&var_1ach, param_1 + 0x131b, 299);\n                fcn.0040f710(&var_81h, param_1 + 0x16d3, 0x3c);\n                fcn.0040f710(&var_45h, param_1 + 0x1a8b, 0x11);\n                fcn.0040f710(&var_34h, param_1 + 0x1e43, 0x1c);\n                fcn.0040a4cd(param_1 + 0x25be, &var_1ach, 0x194);\n                cVar1 = '\\x01';\n            }\n        }\n        else {\n            param_1[0x2623] = 1;\n            cVar1 = fcn.0041080f(param_1, param_1 + 0x12ff);\n        }\n    }\n    return cVar1;\n}\n",
        "token_count": 1463
    },
    "00401780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401780(int32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    uint ARG_1;\n    uint arglist;\n    \n    cVar1 = fcn.00401373(param_2);\n    if (cVar1 == '\\0') {\n        arglist = 0x78;\n        ARG_1 = fcn.00409b0b();\n        fcn.0040b986(param_1 + 0x41e, ARG_1, arglist);\n        fcn.00403897(2);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00401800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401800(uint *param_1, uint *param_2)\n\n{\n    fcn.00401310();\n    fcn.00401723(param_2[1]);\n    if (param_2[1] != 0) {\n        fcn.0040a4cd(*param_1, *param_2, param_2[1] * 2);\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00401bd6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401bd6(int32_t param_1)\n\n{\n    uint ARG_1;\n    int32_t iVar1;\n    ulong uVar2;\n    uint arglist;\n    \n    uVar2 = fcn.00405e4d();\n    iVar1 = uVar2 >> 0x20;\n    if (((iVar1 < *(param_1 + 0x71b4)) || ((iVar1 <= *(param_1 + 0x71b4) && (uVar2 < *(param_1 + 0x71b0))))) ||\n       ((iVar1 <= *(param_1 + 0x71bc) && ((iVar1 < *(param_1 + 0x71bc) || (uVar2 < *(param_1 + 0x71b8))))))) {\n        arglist = 0x67;\n        ARG_1 = fcn.00409b0b();\n        fcn.0040b986(param_1 + 0x41e, ARG_1, arglist);\n        fcn.00403537(1);\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "004036fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004036fa(uint param_1)\n\n{\n    uint arglist;\n    \n    arglist = fcn.0040e679(param_1);\n    fcn.0040b986(0, 0x414314, arglist);\n    return;\n}\n",
        "token_count": 59
    },
    "00403716": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403716(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint ARG_1;\n    uint var_1000h;\n    uint var_800h;\n    uint uStackY60;\n    uint arglist;\n    \n    fcn.00401200();\n    fcn.004071cb(arg_8h, arg_ch, &fcn.00403716::var_1000h, 0x400);\n    fcn.004071cb(arg_10h, arg_14h, &fcn.00403716::var_800h, 0x400);\n    arglist = 0x6d;\n    ARG_1 = fcn.00409b0b();\n    uStackY60 = 0x40376a;\n    fcn.0040b986(&fcn.00403716::var_1000h, ARG_1, arglist);\n    return;\n}\n",
        "token_count": 211
    },
    "00403772": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403772(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint ARG_1;\n    uint var_1000h;\n    uint var_800h;\n    uint uStackY64;\n    uint arglist;\n    \n    fcn.00401200();\n    fcn.004071cb(arg_8h, arg_ch, &fcn.00403772::var_1000h, 0x400);\n    fcn.004071cb(arg_10h, arg_14h, &fcn.00403772::var_800h, 0x400);\n    arglist = 0x6e;\n    ARG_1 = fcn.00409b0b();\n    uStackY64 = 0x4037c9;\n    fcn.0040b986(&fcn.00403772::var_1000h, ARG_1, arglist);\n    fcn.004034a1(arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 230
    },
    "004037df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004037df(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint ARG_1;\n    uint var_1000h;\n    uint var_800h;\n    uint uStackY60;\n    uint arglist;\n    \n    fcn.00401200();\n    fcn.004071cb(arg_8h, arg_ch, &fcn.004037df::var_1000h, 0x400);\n    fcn.004071cb(arg_10h, arg_14h, &fcn.004037df::var_800h, 0x400);\n    arglist = 0x75;\n    ARG_1 = fcn.00409b0b();\n    uStackY60 = 0x403833;\n    fcn.0040b986(&fcn.004037df::var_1000h, ARG_1, arglist);\n    return;\n}\n",
        "token_count": 209
    },
    "0040383b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040383b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint ARG_1;\n    uint var_1000h;\n    uint var_800h;\n    uint uStackY60;\n    uint arglist;\n    \n    fcn.00401200();\n    fcn.004071cb(arg_8h, arg_ch, &fcn.0040383b::var_1000h, 0x400);\n    fcn.004071cb(arg_10h, arg_14h, &fcn.0040383b::var_800h, 0x400);\n    arglist = 0x74;\n    ARG_1 = fcn.00409b0b();\n    uStackY60 = 0x40388f;\n    fcn.0040b986(&fcn.0040383b::var_1000h, ARG_1, arglist);\n    return;\n}\n",
        "token_count": 214
    },
    "00403be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403be0(int32_t arg_8h, uint arg_ch, int32_t lpFileName)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arglist;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00406a2a();\n    if (iVar2 != 0) {\n        var_ch = 0;\n        var_8h = 0;\n        var_4h = 0;\n        cVar1 = fcn.004025be(&var_ch, 0);\n        if (cVar1 != '\\0') {\n            fcn.0040390a();\n            uVar3 = 7;\n            if (*0x418a79 != '\\0') {\n                uVar3 = 0xf;\n            }\n            if (lpFileName == 0) {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_SetFileSecurityA)(arg_ch, uVar3, var_ch);\n            }\n            else {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_SetFileSecurityW)(lpFileName);\n            }\n            if (iVar2 == 0) {\n                uVar3 = fcn.0040e679(arg_ch);\n                arglist = 0x3e4;\n                uVar3 = fcn.00409b0b(0x3e4, uVar3);\n                fcn.0040b986(arg_8h + 0x41e, uVar3, arglist);\n                fcn.0040359c();\n                fcn.00403537();\n            }\n        }\n        if (var_ch != 0) {\n            fcn.0040a41c(var_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "004052ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004052ec(uint arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uchar auStackY12492 [1024];\n    uchar auStackY11468 [2176];\n    int16_t iStackY9292;\n    uint var_1c28h;\n    uint var_1000h;\n    uint var_800h;\n    uint uStackY124;\n    uint *puStackY120;\n    uint *puStackY116;\n    uint *puVar7;\n    char16_t *arg_14h;\n    uchar *lpString2;\n    \n    fcn.00401200();\n    fcn.004039b6();\n    cVar2 = fcn.0040695b(0, arg_8h, &stack0xffffcf34);\n    if ((cVar2 != '\\0') && (iStackY9292 != 0)) {\n        lpString2 = &stack0xffffd334;\n        uVar4 = fcn.004072cf();\n        iVar5 = fcn.0040eefb(uVar4, lpString2);\n        if (iVar5 != 0) {\n            uVar4 = arg_8h;\n            uVar6 = fcn.004072cf();\n            iVar5 = fcn.0040eefb(uVar6, uVar4);\n            if (iVar5 == 0) {\n                var_800h._0_2_ = 0;\n                iVar5 = 0;\n                do {\n                    if (var_800h != 0) goto code_r0x004053e2;\n                    fcn.0040e5a3();\n                    arg_14h = L\"rtmp%d\";\n                    uVar6 = 0x400;\n                    puVar7 = &fcn.004052ec::var_800h;\n                    uVar4 = fcn.004072cf();\n                    fcn.0040aac4(uVar4, puVar7, uVar6, arg_14h);\n                    cVar2 = fcn.00406088();\n                    if (cVar2 != '\\0') {\n                        var_800h._0_2_ = 0;\n                    }\n                    iVar5 = iVar5 + 0x7b;\n                } while (iVar5 < 10000);\n                if (var_800h != 0) {\ncode_r0x004053e2:\n                    fcn.0040e5a3();\n                    fcn.004072cf();\n                    puVar7 = &fcn.004052ec::var_1000h;\n                    uVar4 = fcn.004072cf();\n                    fcn.0040a850(uVar4, puVar7);\n                    pcVar1 = _sym.imp.KERNEL32.dll_MoveFileW;\n                    iVar5 = (*_sym.imp.KERNEL32.dll_MoveFileW)();\n                    if (iVar5 != 0) {\n                        fcn.00405711();\n                        cVar3 = '\\0';\n                        cVar2 = fcn.00406088();\n                        if (cVar2 == '\\0') {\n                            puStackY116 = 0x405456;\n                            cVar3 = fcn.00405a95(0, arg_8h, 9);\n                        }\n                        puStackY116 = &fcn.004052ec::var_1000h;\n                        puStackY120 = &fcn.004052ec::var_800h;\n                        uStackY124 = 0x405468;\n                        (*pcVar1)();\n                        if (cVar3 != '\\0') {\n                            uStackY124 = 0x405477;\n                            fcn.00405783();\n                            uStackY124 = 0x405482;\n                            fcn.00405808();\n                        }\n                        uStackY124 = 0x40548d;\n                        fcn.004058fd();\n                        return 1;\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 890
    },
    "00405de9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00405de9(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00405c36(param_2, param_3, param_4);\n    if ((cVar1 == '\\0') && (*(param_1 + 0x14) != '\\0')) {\n        fcn.004036a4(param_1 + 0x1d, param_1 + 0x41e);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "00407122": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.00407122(ushort *param_1)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0040e531(*param_1);\n    if ((iVar1 - 0x41U < 0x1a) && (param_1[1] == 0x3a)) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 110
    },
    "0040714e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040714e(uint16_t *param_1, ushort *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    *param_2 = 0;\n    cVar1 = fcn.00407122(param_1);\n    if (cVar1 == '\\0') {\n        if (((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (iVar2 = fcn.0040a9ea(param_1 + 2, 0x5c),  iVar2 != 0)) {\n            iVar2 = fcn.0040a9ea(iVar2 + 2, 0x5c);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040a826(param_1);\n            }\n            else {\n                iVar2 = (iVar2 - param_1 >> 1) + 1;\n            }\n            fcn.0040a880(param_2, param_1, iVar2);\n            param_2[iVar2] = 0;\n        }\n    }\n    else {\n        fcn.0040aac4(param_2, 4, L\"%c:\\\\\", *param_1);\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "00407613": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407613(int32_t param_1)\n\n{\n    ushort *puVar1;\n    \n    puVar1 = fcn.004072cf(param_1);\n    if ((param_1 + 4 <= puVar1) && ((*(param_1 + 2) != 0x3a || (param_1 + 8 <= puVar1)))) {\n        puVar1 = puVar1 + -1;\n    }\n    *puVar1 = 0;\n    return;\n}\n",
        "token_count": 110
    },
    "00407c75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c75(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t arg_10h_00;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    \n    if ((arg_8h < 0x40000) && (arg_8h_00 = *(in_ECX + 0xc) + arg_8h,  arg_ch != arg_8h_00)) {\n        arg_10h_00 = 0x40000 - arg_8h;\n        if (arg_10h < 0x40000 - arg_8h) {\n            arg_10h_00 = arg_10h;\n        }\n        fcn.0040a555(arg_8h_00, arg_ch, arg_10h_00);\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00407ca6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00407ca6(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar1 = fcn.00402ebb(0xffffffff, param_1, param_2);\n    iVar3 = 0;\n    uVar2 = 0;\n    while ((*(uVar2 + 0x41603c) != ~uVar1 || (*(uVar2 + 0x416038) != param_2))) {\n        uVar2 = uVar2 + 0xc;\n        iVar3 = iVar3 + 1;\n        if (0x53 < uVar2) {\n            return 0;\n        }\n    }\n    return *(iVar3 * 0xc + 0x416040);\n}\n",
        "token_count": 183
    },
    "00407d37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407d37(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = arg_10h & 7;\n    arg_ch = arg_ch << uVar1;\n    uVar3 = 0;\n    arg_8h = (arg_10h + (arg_10h >> 0x1f & 7U) >> 3) + arg_8h;\n    uVar2 = ~((0xffffffffU >> (0x20U - arg_14h & 0x1f)) << uVar1);\n    do {\n        uVar1 = uVar2;\n        arg_ch = arg_ch >> 8;\n        uVar2 = uVar2 >> 8 | 0xff000000;\n        *(arg_8h + uVar3) = *(arg_8h + uVar3) & uVar1 | arg_ch;\n        uVar3 = uVar3 + 1;\n    } while (uVar3 < 4);\n    return;\n}\n",
        "token_count": 265
    },
    "00408e5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408e5f(int32_t *param_1, int16_t *param_2)\n\n{\n    uint8_t *puVar1;\n    \n    if (param_1[5] + 1U < param_1[4]) {\n        puVar1 = param_1[5] + *param_1;\n        *param_2 = puVar1[1] * 0x100 + *puVar1;\n        param_1[5] = param_1[5] + 2;\n    }\n    else {\n        *param_2 = 0;\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00408ee3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408ee3(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    if (param_1[5] + -1 + param_3 < param_1[4]) {\n        fcn.0040a4cd(param_2, *param_1 + param_1[5], param_3);\n        param_1[5] = param_1[5] + param_3;\n    }\n    else {\n        fcn.0040a4a0(param_2, 0, param_3);\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "004092b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004092b2(uint32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_14h == '\\0') {\n        *(in_ECX + 0x518) = -(*(arg_ch + 0x100) != '\\0') & arg_8h;\n        fcn.00402fa6(arg_ch, arg_10h, 0, arg_8h < 0x1d, arg_18h);\n    }\n    else {\n        *(in_ECX + 0x514) = -(*(arg_ch + 0x100) != '\\0') & arg_8h;\n        fcn.00402fa6(arg_ch, arg_10h, arg_14h, 0, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "004097c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004097c5(uint arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_400h;\n    \n    fcn.00409680(0x41437c, &var_400h, 0x200, 1, arg_8h);\n    iVar1 = fcn.0040a9ea(&var_400h, 0x2a);\n    if (iVar1 == 0) {\n        *arg_10h = 100;\n        *arg_ch = 100;\n    }\n    else {\n        iVar2 = fcn.0040f08f(&var_400h);\n        *arg_ch = iVar2;\n        iVar1 = fcn.0040f08f(iVar1 + 2);\n        *arg_10h = iVar1;\n    }\n    if ((*arg_ch == 100) && (*arg_10h == 100)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 259
    },
    "00409b0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * fcn.00409b0b(uint param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    ushort *arg_8h;\n    int32_t iVar3;\n    \n    *0x41aeb8 = *0x41aeb8 + 1;\n    if (7 < *0x41aeb8) {\n        *0x41aeb8 = 0;\n    }\n    arg_8h = *0x41aeb8 * 0x400 + 0x418eb8;\n    *arg_8h = 0;\n    cVar2 = fcn.004095ee();\n    pcVar1 = _sym.imp.USER32.dll_LoadStringW;\n    if (cVar2 == '\\0') {\n        iVar3 = (*_sym.imp.USER32.dll_LoadStringW)(*0x418e88, param_1, arg_8h, 0x200);\n        if (iVar3 != 0) goto code_r0x00409b70;\n    }\n    (*pcVar1)(*0x418e84, param_1, arg_8h, 0x200);\ncode_r0x00409b70:\n    fcn.00409680(arg_8h, arg_8h, 0x200, 0, 0);\n    return arg_8h;\n}\n",
        "token_count": 295
    },
    "00409cce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409cce(int32_t param_1)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = param_1 + 0x24;\n    var_ch = 9;\n    do {\n        iVar5 = 0;\n        do {\n            puVar7 = &var_1ch + iVar5;\n            puVar6 = var_4h + 2;\n            var_8h = 4;\n            do {\n                puVar1 = puVar6 + 1;\n                puVar2 = puVar6 + -1;\n                puVar3 = puVar6 + -2;\n                uVar4 = *puVar6;\n                puVar6 = puVar6 + 4;\n                *puVar7 = *(iVar5 + 0x41aec0 + *puVar1 * 4) ^ *(iVar5 + 0x41b6c0 + *puVar2 * 4) ^\n                          *(iVar5 + 0x41bac0 + *puVar3 * 4) ^ *(iVar5 + 0x41b2c0 + uVar4 * 4);\n                puVar7 = puVar7 + 4;\n                var_8h = var_8h + -1;\n            } while (var_8h != 0);\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < 4);\n        fcn.0040a4cd(var_4h, &var_1ch, 0x10);\n        var_4h = var_4h + 0x10;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    return;\n}\n",
        "token_count": 455
    },
    "00409d4d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409d4d(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_10h;\n    uint8_t var_ch;\n    uint8_t var_bh;\n    uint8_t var_ah;\n    uint8_t var_9h;\n    uint8_t var_8h;\n    uint8_t var_7h;\n    uint8_t var_6h;\n    uint8_t var_5h;\n    uint8_t var_4h;\n    uint var_3h;\n    \n    fcn.00409b87(&var_10h, arg_8h, in_ECX + 0xb4);\n    *arg_ch = *(var_10h * 4 + 0x41cac0) ^ *(var_3h * 4 + 0x41c6c0) ^ *(var_6h * 4 + 0x41c2c0) ^ *(var_9h * 4 + 0x41bec0)\n    ;\n    arg_ch[1] = *(var_ch * 4 + 0x41cac0) ^ *(var_10h._1_1_ * 4 + 0x41c6c0) ^ *(var_3h._1_1_ * 4 + 0x41c2c0) ^\n                *(var_5h * 4 + 0x41bec0);\n    arg_ch[2] = *(var_8h * 4 + 0x41cac0) ^ *(var_bh * 4 + 0x41c6c0) ^ *(var_10h._2_1_ * 4 + 0x41c2c0) ^\n                *(var_3h._2_1_ * 4 + 0x41bec0);\n    arg_ch[3] = *(var_4h * 4 + 0x41cac0) ^ *(var_7h * 4 + 0x41c6c0) ^ *(var_ah * 4 + 0x41c2c0) ^\n                *(var_10h._3_1_ * 4 + 0x41bec0);\n    arg_8h = 8;\n    do {\n        fcn.00409b87();\n        *arg_ch = *(var_10h * 4 + 0x41cac0) ^ *(var_3h * 4 + 0x41c6c0) ^ *(var_6h * 4 + 0x41c2c0) ^\n                  *(var_9h * 4 + 0x41bec0);\n        arg_ch[1] = *(var_ch * 4 + 0x41cac0) ^ *(var_10h._1_1_ * 4 + 0x41c6c0) ^ *(var_3h._1_1_ * 4 + 0x41c2c0) ^\n                    *(var_5h * 4 + 0x41bec0);\n        arg_ch[2] = *(var_8h * 4 + 0x41cac0) ^ *(var_bh * 4 + 0x41c6c0) ^ *(var_10h._2_1_ * 4 + 0x41c2c0) ^\n                    *(var_3h._2_1_ * 4 + 0x41bec0);\n        arg_8h = arg_8h + -1;\n        arg_ch[3] = *(var_4h * 4 + 0x41cac0) ^ *(var_7h * 4 + 0x41c6c0) ^ *(var_ah * 4 + 0x41c2c0) ^\n                    *(var_10h._3_1_ * 4 + 0x41bec0);\n    } while (arg_8h != 0);\n    fcn.00409b87(&var_10h, arg_ch, in_ECX + 0x24);\n    *arg_ch = *(var_10h + 0x41dee0);\n    *(arg_ch + 1) = *(var_3h + 0x41dee0);\n    *(arg_ch + 2) = *(var_6h + 0x41dee0);\n    *(arg_ch + 3) = *(var_9h + 0x41dee0);\n    *(arg_ch + 1) = *(var_ch + 0x41dee0);\n    *(arg_ch + 5) = *(var_10h._1_1_ + 0x41dee0);\n    *(arg_ch + 6) = *(var_3h._1_1_ + 0x41dee0);\n    *(arg_ch + 7) = *(var_5h + 0x41dee0);\n    *(arg_ch + 2) = *(var_8h + 0x41dee0);\n    *(arg_ch + 9) = *(var_bh + 0x41dee0);\n    *(arg_ch + 10) = *(var_10h._2_1_ + 0x41dee0);\n    *(arg_ch + 0xb) = *(var_3h._2_1_ + 0x41dee0);\n    *(arg_ch + 3) = *(var_4h + 0x41dee0);\n    *(arg_ch + 0xd) = *(var_7h + 0x41dee0);\n    *(arg_ch + 0xe) = *(var_ah + 0x41dee0);\n    *(arg_ch + 0xf) = *(var_10h._3_1_ + 0x41dee0);\n    fcn.00409b87(arg_ch, arg_ch, in_ECX + 0x14);\n    return;\n}\n",
        "token_count": 1322
    },
    "0040a34e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a34e(uint *arg_8h, uint32_t arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_8h == NULL) || (arg_ch == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        fcn.0040a4cd(&var_24h, in_ECX + 4, 0x10);\n        arg_ch = arg_ch >> 4;\n        var_4h = arg_ch;\n        for (; arg_ch != 0; arg_ch = arg_ch - 1) {\n            fcn.00409d4d(arg_8h, &var_14h);\n            fcn.00409b87();\n            var_24h = *arg_8h;\n            var_20h = arg_8h[1];\n            var_1ch = arg_8h[2];\n            var_18h = arg_8h[3];\n            *arg_10h = var_14h;\n            arg_10h[1] = var_10h;\n            arg_10h[2] = var_ch;\n            arg_10h[3] = var_8h;\n            arg_8h = arg_8h + 4;\n            arg_10h = arg_10h + 4;\n        }\n        fcn.0040a4cd(in_ECX + 4, &var_24h, 0x10);\n        iVar1 = var_4h << 4;\n    }\n    return iVar1;\n}\n",
        "token_count": 419
    },
    "0040a4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a4a0(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < arg_10h; var_4h = var_4h + 1) {\n        *(arg_8h + var_4h) = arg_ch;\n    }\n    return arg_8h;\n}\n",
        "token_count": 107
    },
    "0040a4cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a4cd(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < arg_10h; var_4h = var_4h + 1) {\n        *(arg_8h + var_4h) = *(arg_ch + var_4h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 114
    },
    "0040a632": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a632(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    do {\n        if (*(arg_8h + var_4h) == '\\0') {\n            return 0;\n        }\n        for (var_8h = 0; *(arg_ch + var_8h) != '\\0'; var_8h = var_8h + 1) {\n            if (*(arg_8h + var_4h) == *(arg_ch + var_8h)) {\n                return arg_8h + var_4h;\n            }\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 183
    },
    "0040a7b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a7b6(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    \n    arg_ch_00 = arg_8h;\n    iVar1 = fcn.0040a5a0(arg_8h);\n    fcn.0040a693(iVar1 + arg_8h, arg_ch_00);\n    return arg_8h;\n}\n",
        "token_count": 104
    },
    "0040a7d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.0040a7d4(char *arg_8h, char *arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0040a5a0(arg_8h);\n    arg_8h = iVar2 + arg_8h;\n    do {\n        if (arg_10h < 1) break;\n        *arg_8h = *arg_ch;\n        cVar1 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + -1;\n    } while (cVar1 != '\\0');\n    *arg_8h = '\\0';\n    return arg_8h;\n}\n",
        "token_count": 186
    },
    "0040bb57": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bb57(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint ARG_1;\n    uint var_1400h;\n    uint var_800h;\n    uint uStackY48;\n    \n    fcn.00401200();\n    if (arg_8h == 'T') {\n        arg_8h = 0x20b;\n    }\n    else if (arg_8h == 'X') {\n        arg_8h = 0x79;\n    }\n    fcn.004071cb(arg_ch, arg_10h, &fcn.0040bb57::var_800h, 0x400);\n    fcn.004072cf();\n    ARG_1 = fcn.00409b0b();\n    uStackY48 = 0x40bbbe;\n    fcn.0040aac4(&fcn.0040bb57::var_1400h, 0x600, ARG_1, arg_8h);\n    fcn.0040b31f(0, &fcn.0040bb57::var_1400h);\n    return;\n}\n",
        "token_count": 251
    },
    "0040e54c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040e54c(int32_t param_1)\n\n{\n    return param_1 - 0x30U < 10;\n}\n",
        "token_count": 34
    },
    "0040e828": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040e828(int32_t *param_1, uint *param_2, uint *param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *unaff_retaddr;\n    \n    if ((param_1[3] < param_1[1]) && (param_1[7] < param_1[5])) {\n        iVar3 = *param_1 + param_1[3];\n        iVar1 = fcn.0040a5a0(iVar3);\n        param_1[3] = param_1[3] + iVar1 + 1;\n        if (unaff_retaddr != NULL) {\n            *unaff_retaddr = iVar3;\n        }\n        iVar1 = param_1[4] + param_1[7] * 2;\n        iVar3 = fcn.0040a826(iVar1);\n        param_1[7] = param_1[7] + iVar3 + 1;\n        if (unaff_retaddr != NULL) {\n            *unaff_retaddr = iVar1;\n        }\n        uVar2 = 1;\n    }\n    else {\n        if (param_2 != NULL) {\n            *param_2 = 0;\n        }\n        if (param_3 != NULL) {\n            *param_3 = 0;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 324
    },
    "0040e9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e9a0(uint lpFileTime)\n\n{\n    ushort *in_ECX;\n    uint lpSystemTime;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    ushort var_ah;\n    uint32_t lpLocalFileTime;\n    int32_t var_4h;\n    \n    lpSystemTime._0_2_ = *in_ECX;\n    lpSystemTime._2_2_ = in_ECX[2];\n    var_12h._0_2_ = in_ECX[4];\n    var_12h._2_2_ = in_ECX[6];\n    var_eh = in_ECX[8];\n    var_ch = in_ECX[10];\n    var_ah = 0;\n    (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, &lpLocalFileTime);\n    lpLocalFileTime = lpLocalFileTime + *(in_ECX + 0xc);\n    if (lpLocalFileTime < *(in_ECX + 0xc)) {\n        var_4h = var_4h + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&lpLocalFileTime, lpFileTime);\n    return;\n}\n",
        "token_count": 287
    },
    "0040ebaf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t __fastcall fcn.0040ebaf(int32_t *param_1)\n\n{\n    int64_t iVar1;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    if (*param_1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        var_8h = param_1;\n        var_4h = param_1;\n        fcn.0040e9a0(&var_8h);\n        iVar1 = fcn.00401030(var_4h, 0, 0, 1);\n        iVar1 = iVar1 + -0xc;\n    }\n    return iVar1;\n}\n",
        "token_count": 152
    },
    "0040ed2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ed2d(uint8_t *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (arg_10h != 0) {\n        iVar2 = arg_ch - arg_8h;\n        do {\n            iVar1 = arg_8h[1] * 0x100 + *arg_8h;\n            *(arg_8h + iVar2) = iVar1;\n            if (iVar1 == 0) {\n                return arg_ch;\n            }\n            uVar3 = uVar3 + 1;\n            arg_8h = arg_8h + 2;\n        } while (uVar3 < arg_10h);\n    }\n    return arg_ch;\n}\n",
        "token_count": 197
    },
    "0040f179": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040f179(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    uVar3 = *(param_4 + 4 + param_1);\n    uVar2 = *(param_3 + 4 + param_1) - uVar3;\n    puVar4 = uVar3 * 0xc + param_2;\n    uVar3 = *(uVar2 + 0x29 + param_1);\n    if (*(uVar3 + 4 + param_1) != uVar2) {\n        puVar1 = param_1 + 0xb8 + (uVar3 - 1) * 4;\n        *puVar4 = *puVar1;\n        *puVar1 = puVar4;\n        uVar3 = *(uVar3 + 3 + param_1);\n        puVar4 = puVar4 + uVar3 * 3;\n        uVar2 = uVar2 - uVar3;\n    }\n    puVar1 = param_1 + 0xb8 + *(uVar2 + 0x29 + param_1) * 4;\n    *puVar4 = *puVar1;\n    *puVar1 = puVar4;\n    return;\n}\n",
        "token_count": 319
    },
    "0040f248": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f248(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.0040a4a0(param_1 + 0x2e, 0, 0x98);\n    iVar5 = *param_1;\n    uVar1 = (iVar5 + (iVar5 >> 0x1f & 7U) >> 3) / 0xc;\n    iVar4 = param_1[0x2b];\n    param_1[0x54] = iVar4;\n    uVar7 = iVar5 + uVar1 * -0x54;\n    iVar5 = (uVar7 / 0xc + 1) * 0xc + iVar4;\n    param_1[0x57] = iVar4 + uVar7;\n    iVar6 = 4;\n    param_1[0x55] = iVar5;\n    param_1[0x2c] = iVar5;\n    iVar4 = 4;\n    param_1[0x2d] = ((uVar1 * 0x54) / 0xc) * 0xc + iVar5;\n    iVar5 = 1;\n    do {\n        iVar2 = iVar5;\n        *(param_1 + iVar2 + 3) = iVar2;\n        iVar6 = iVar6 + -1;\n        iVar5 = iVar2 + 1;\n    } while (iVar6 != 0);\n    do {\n        iVar2 = iVar2 + 2;\n        *(param_1 + iVar4 + 4) = iVar2;\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 8);\n    for (; iVar4 < 0xc; iVar4 = iVar4 + 1) {\n        *(param_1 + iVar4 + 4) = iVar2 + 3;\n        iVar2 = iVar2 + 3;\n    }\n    for (; iVar2 = iVar2 + 4,  iVar4 < 0x26; iVar4 = iVar4 + 1) {\n        *(param_1 + iVar4 + 4) = iVar2;\n    }\n    iVar5 = 0;\n    *(param_1 + 0xaa) = 0;\n    puVar3 = param_1 + 0x2a;\n    var_8h = 0x80;\n    do {\n        iVar5 = iVar5 + (*(param_1 + iVar5 + 4) < puVar3 + (-0x29 - param_1));\n        *puVar3 = iVar5;\n        puVar3 = puVar3 + 1;\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    return;\n}\n",
        "token_count": 661
    },
    "0040f4df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f4df(int32_t param_1)\n\n{\n    *(param_1 + 0xa6c) = 1;\n    fcn.0040a4a0(param_1 + 0x66c, 0, 0x100);\n    return;\n}\n",
        "token_count": 68
    },
    "0040f6b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040f6b0(int32_t param_1, uint param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t unaff_retaddr;\n    \n    iVar2 = *(param_1 + 0x98ac);\n    iVar3 = *(param_1 + 0x989c);\n    uVar4 = *(param_1 + 0x9898);\n    uVar5 = *(param_1 + 0x98a8);\n    if ((iVar2 <= iVar3) && ((iVar2 < iVar3 || (uVar5 < uVar4)))) {\n        uVar6 = (iVar3 - iVar2) - (uVar4 < uVar5);\n        if ((uVar6 < 1) && ((0x7fffffff < uVar6 || (uVar4 - uVar5 < param_3)))) {\n            param_3 = uVar4 - uVar5;\n        }\n        fcn.00409244(param_2, param_3);\n        puVar1 = param_1 + 0x98a8;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 + unaff_retaddr;\n        *(param_1 + 0x98ac) = *(param_1 + 0x98ac) + CARRY4(uVar4, unaff_retaddr);\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "0040f710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f710(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t *puVar3;\n    uint8_t uVar4;\n    ushort uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint var_80h;\n    int32_t aiStack128 [14];\n    uint var_44h;\n    uint var_40h;\n    int32_t aiStack64 [15];\n    \n    puVar3 = arg_ch;\n    *arg_ch = arg_10h;\n    fcn.0040a4a0(&var_40h, 0, 0x40);\n    uVar9 = 0;\n    if (arg_10h != 0) {\n        do {\n            aiStack64[(*(uVar9 + arg_8h) & 0xf) - 1] = aiStack64[(*(uVar9 + arg_8h) & 0xf) - 1] + 1;\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < arg_10h);\n    }\n    var_40h = 0;\n    fcn.0040a4a0(arg_ch + 0x322, 0, arg_10h * 2);\n    puVar10 = arg_ch + 0x11;\n    *puVar10 = 0;\n    arg_ch[1] = 0;\n    iVar6 = 0;\n    arg_ch = 0x1;\n    puVar11 = puVar10;\n    do {\n        iVar7 = iVar6 + aiStack64[arg_ch - 1];\n        cVar2 = arg_ch;\n        iVar1 = (&var_44h)[arg_ch];\n        iVar6 = iVar7 * 2;\n        arg_ch = arg_ch + 1;\n        puVar11[-0xf] = iVar7 << (0x10U - cVar2 & 0x1f);\n        puVar11[1] = iVar1 + *puVar11;\n        puVar11 = puVar11 + 1;\n    } while (arg_ch < 0x10);\n    fcn.0040a4cd(&var_80h, puVar10, 0x40);\n    uVar9 = 0;\n    if (arg_10h != 0) {\n        do {\n            uVar4 = *(uVar9 + arg_8h) & 0xf;\n            if (uVar4 != 0) {\n                iVar6 = aiStack128[uVar4 - 1];\n                *(puVar3 + iVar6 * 2 + 0xc88) = uVar9;\n                aiStack128[uVar4 - 1] = iVar6 + 1;\n            }\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < arg_10h);\n    }\n    if ((arg_10h < 0x12a) || (299 < arg_10h)) {\n        puVar3[0x21] = 7;\n    }\n    else {\n        puVar3[0x21] = 10;\n    }\n    uVar9 = 1;\n    uVar12 = 1 << (puVar3[0x21] & 0x1f);\n    uVar13 = 0;\n    if (uVar12 != 0) {\n        arg_8h = puVar3 + 0x122;\n        do {\n            uVar8 = uVar13 << (0x10U - puVar3[0x21] & 0x1f);\n            puVar10 = puVar3 + uVar9 + 1;\n            for (; (*puVar10 <= uVar8 && (uVar9 < 0x10)); uVar9 = uVar9 + 1) {\n                puVar10 = puVar10 + 1;\n            }\n            *(puVar3 + uVar13 + 0x88) = uVar9;\n            uVar8 = (uVar8 - puVar3[uVar9] >> (0x10U - uVar9 & 0x1f)) + puVar3[uVar9 + 0x11];\n            if (uVar8 < arg_10h) {\n                uVar5 = *(puVar3 + uVar8 * 2 + 0xc88);\n            }\n            else {\n                uVar5 = 0;\n            }\n            uVar13 = uVar13 + 1;\n            *arg_8h = uVar5;\n            arg_8h = arg_8h + 2;\n        } while (uVar13 < uVar12);\n    }\n    return;\n}\n",
        "token_count": 1098
    },
    "0040f877": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040f877(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    \n    uVar1 = *param_1 >> (*(param_1 + 1) & 0x1f);\n    *param_1 = *param_1 - uVar1;\n    return (uVar1 == 0) + uVar1;\n}\n",
        "token_count": 87
    },
    "0040fb81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040fb81(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *(param_2 + 0x29 + param_1);\n    piVar1 = param_1 + 0xb8 + uVar4 * 4;\n    piVar2 = *piVar1;\n    if (piVar2 == NULL) {\n        uVar3 = *(uVar4 + 4 + param_1) * 0xc + *(param_1 + 0xb0);\n        *(param_1 + 0xb0) = uVar3;\n        if (*(param_1 + 0xb4) <= uVar3 && uVar3 != *(param_1 + 0xb4)) {\n            *(param_1 + 0xb0) = uVar3 + *(uVar4 + 4 + param_1) * -0xc;\n            fcn.0040fae4(uVar4);\n        }\n    }\n    else {\n        *piVar1 = *piVar2;\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "0040fc59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040fc59(uint param_1, uint param_2, int32_t param_3, uint *param_4)\n\n{\n    ushort *puVar1;\n    \n    puVar1 = fcn.0040fbd6();\n    if (puVar1 != NULL) {\n        *puVar1 = 1;\n        *(puVar1 + 1) = *param_4;\n        puVar1[3] = *(param_4 + 1);\n        *(puVar1 + 4) = param_1;\n        *(param_3 + 2) = puVar1;\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "0040fcae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fcae(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char cVar3;\n    uint16_t *puVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    int32_t var_14h;\n    int16_t *var_10h;\n    int16_t *var_ch;\n    int16_t *var_8h;\n    int32_t var_4h;\n    \n    fcn.0040a4a0(param_1 + 0x66c, 0, 0x100);\n    fcn.0040f248();\n    iVar1 = *(param_1 + 0x660);\n    if (0xb < iVar1) {\n        iVar1 = 0xc;\n    }\n    *(param_1 + 0x668) = -1 - iVar1;\n    iVar1 = fcn.0040fbd6();\n    *(param_1 + 0x64c) = iVar1;\n    *(param_1 + 0x644) = iVar1;\n    *(iVar1 + 8) = 0;\n    *(param_1 + 0x65c) = *(param_1 + 0x660);\n    **(param_1 + 0x644) = 0x100;\n    *(*(param_1 + 0x644) + 2) = 0x101;\n    uVar2 = fcn.0040fb81(0x80);\n    *(*(param_1 + 0x644) + 4) = uVar2;\n    *(param_1 + 0x650) = *(*(param_1 + 0x644) + 4);\n    cVar3 = '\\0';\n    *(param_1 + 0x664) = *(param_1 + 0x668);\n    *(param_1 + 0xa6d) = 0;\n    iVar1 = 0;\n    do {\n        *(iVar1 + *(*(param_1 + 0x644) + 4)) = cVar3;\n        *(*(*(param_1 + 0x644) + 4) + 1 + iVar1) = 1;\n        *(*(*(param_1 + 0x644) + 4) + 2 + iVar1) = 0;\n        iVar1 = iVar1 + 6;\n        cVar3 = cVar3 + '\\x01';\n    } while (iVar1 < 0x600);\n    var_4h = 0;\n    var_10h = param_1 + 0xa70;\n    do {\n        puVar4 = 0x414944;\n        var_ch = var_10h;\n        do {\n            var_8h = var_ch;\n            var_14h = 8;\n            do {\n                var_14h = var_14h + -1;\n                *var_8h = 0x4000 - *puVar4 / (var_4h + 2);\n                var_8h = var_8h + 8;\n            } while (var_14h != 0);\n            var_ch = var_ch + 1;\n            puVar4 = puVar4 + 1;\n        } while (puVar4 < 0x414954);\n        var_4h = var_4h + 1;\n        var_10h = var_10h + 0x40;\n    } while (var_4h < 0x80);\n    iVar1 = 0;\n    puVar5 = param_1 + 3;\n    do {\n        iVar6 = 0x10;\n        do {\n            puVar5[-1] = 3;\n            *(puVar5 + -3) = (iVar1 + 2) * 0x28;\n            *puVar5 = 4;\n            puVar5 = puVar5 + 4;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x19);\n    return;\n}\n",
        "token_count": 904
    },
    "00410458": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410458(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    *(param_2 + 0x650) = param_3;\n    *(param_3 + 1) = *(param_3 + 1) + '\\x04';\n    *(param_1 + 2) = *(param_1 + 2) + 4;\n    if (*(param_3 + -5) <= *(param_3 + 1) && *(param_3 + 1) != *(param_3 + -5)) {\n        fcn.0040f8b4(param_3, param_3 + -6);\n        *(param_2 + 0x650) = param_3 + -6;\n        if (0x7c < *(param_3 + -5)) {\n            fcn.0040fed1(param_2);\n        }\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "004105de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004105de(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    *(param_2 + 0x650) = param_3;\n    *(param_3 + 1) = *(param_3 + 1) + '\\x04';\n    *(param_1 + 2) = *(param_1 + 2) + 4;\n    if (0x7c < *(param_3 + 1)) {\n        fcn.0040fed1(param_2);\n    }\n    *(param_2 + 0xa6c) = *(param_2 + 0xa6c) + '\\x01';\n    *(param_2 + 0x664) = *(param_2 + 0x668);\n    return;\n}\n",
        "token_count": 180
    },
    "00410618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410618(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint16_t *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    uVar1 = *in_ECX;\n    if (uVar1 == 0x100) {\n        iVar3 = arg_8h + 0x640;\n        *(arg_8h + 0x4a84) = 1;\n    }\n    else {\n        iVar3 = arg_8h + ((arg_ch < **(in_ECX + 4) - uVar1) +\n                          ((in_ECX[1] < uVar1 * 0xb) +\n                          ((*(arg_8h + 0x654) != arg_ch && arg_ch <= *(arg_8h + 0x654)) + *(arg_8h + 0x76b + arg_ch) * 4\n                          ) * 2) * 2 + *(arg_8h + 0xa6e)) * 4;\n        uVar2 = fcn.0040f877();\n        *(arg_8h + 0x4a84) = uVar2;\n    }\n    return iVar3;\n}\n",
        "token_count": 288
    },
    "00410bb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410bb3(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if ((param_3 == param_2) || (*(param_1 + 0x98a2) = 1,  param_2 <= param_3)) {\n        fcn.0040f6b0(*(param_1 + 0x9890) + param_2, param_3 - param_2);\n    }\n    else {\n        fcn.0040f6b0(*(param_1 + 0x9890) + param_2, -param_2 & 0x3fffff);\n        fcn.0040f6b0(*(param_1 + 0x9890), param_3);\n        *(param_1 + 0x98a1) = 1;\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0041244b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0041244b(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ac50(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 61
    },
    "00402bd3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402bd3(int32_t arg_8h, char *arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_8h + 0x30;\n    uVar2 = fcn.0040a5a0(iVar3);\n    if ((uVar2 < 0x400) && (uVar2 = fcn.0040a826(arg_8h + 0x430),  uVar2 < 0x400)) {\n        iVar4 = 1;\n        var_8h = var_8h & 0xffffff00 | (*(arg_8h + 8) & 0xe0) == 0xe0;\n        cVar1 = fcn.00402b7d(iVar3, var_8h, 0, 1);\n        if (cVar1 == '\\0') {\n            fcn.0040e78d();\n            while (cVar1 = fcn.0040e828(&var_4h, &var_ch),  cVar1 != '\\0') {\n                cVar1 = fcn.00406bef(var_4h, iVar3, arg_10h);\n                if (cVar1 != '\\0') {\n                    if (arg_ch == NULL) {\n                        return iVar4;\n                    }\n                    iVar3 = fcn.0040e576(var_4h, iVar3);\n                    *arg_ch = '\\x01' - (iVar3 != 0);\n                    return iVar4;\n                }\n                iVar4 = iVar4 + 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 403
    },
    "0040390a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "modify access privileges"
        ],
        "decompiled_code": "\nvoid fcn.0040390a(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint hObject;\n    \n    if (*0x418a7a == '\\0') {\n        *0x418a7a = '\\x01';\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x20, &hObject);\n        iVar4 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar3);\n        pcVar1 = _sym.imp.ADVAPI32.dll_LookupPrivilegeValueW;\n        if (iVar4 != 0) {\n            var_14h = 1;\n            var_8h = 2;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, L\"SeSecurityPrivilege\", &var_10h);\n            pcVar2 = _sym.imp.ADVAPI32.dll_AdjustTokenPrivileges;\n            if (iVar4 != 0) {\n                iVar4 = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(hObject, 0, &var_14h, 0, 0, 0);\n                if (iVar4 != 0) {\n                    iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    if (iVar4 == 0) {\n                        *0x418a79 = 1;\n                    }\n                }\n            }\n            iVar4 = (*pcVar1)(0, L\"SeRestorePrivilege\", &var_10h);\n            if (iVar4 != 0) {\n                (*pcVar2)(hObject, 0, &var_14h, 0, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        }\n    }\n    return;\n}\n",
        "token_count": 428
    },
    "004075a1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004075a1(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t unaff_retaddr;\n    \n    param_3 = param_3 + -1;\n    iVar1 = fcn.00407278(param_1);\n    if (iVar1 - param_1 <= param_3) {\n        param_3 = fcn.00407278(param_1);\n        param_3 = param_3 - param_1;\n    }\n    fcn.0040a6c7(unaff_retaddr, param_1, param_3);\n    *(param_3 + unaff_retaddr) = 0;\n    return;\n}\n",
        "token_count": 159
    },
    "004075d7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004075d7(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t unaff_retaddr;\n    \n    param_3 = param_3 + -1;\n    iVar1 = fcn.004072cf(param_1);\n    if (iVar1 - param_1 >> 1 <= param_3) {\n        iVar1 = fcn.004072cf(param_1);\n        param_3 = iVar1 - param_1 >> 1;\n    }\n    fcn.0040a880(unaff_retaddr, param_1, param_3);\n    *(unaff_retaddr + param_3 * 2) = 0;\n    return;\n}\n",
        "token_count": 164
    },
    "0040b15a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b15a(uint hgdiobj, int32_t nWidth, int32_t nHeight)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint lpvObject;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint hDC;\n    uint hdcDest;\n    \n    hDC = (*_sym.imp.USER32.dll_GetDC)(0);\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    uVar2 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(hDC);\n    hdcDest = (*pcVar1)(hDC);\n    (*_sym.imp.GDI32.dll_GetObjectW)(hgdiobj, 0x18, &lpvObject);\n    iVar3 = (var_20h * nWidth) / var_24h;\n    if (iVar3 < nHeight) {\n        nHeight = iVar3;\n    }\n    var_ch = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(hDC, nWidth, nHeight);\n    pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n    uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(uVar2, hgdiobj);\n    var_10h = (*pcVar1)(hdcDest, var_ch);\n    (*_sym.imp.GDI32.dll_StretchBlt)(hdcDest, 0, 0, nWidth, nHeight, uVar2, 0, 0, var_24h, var_20h, 0xcc0020);\n    (*pcVar1)(uVar2, uVar4);\n    (*pcVar1)(hdcDest, var_10h);\n    pcVar1 = _sym.imp.GDI32.dll_DeleteDC;\n    (*_sym.imp.GDI32.dll_DeleteDC)(uVar2);\n    (*pcVar1)(hdcDest);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, hDC);\n    return var_ch;\n}\n",
        "token_count": 462
    },
    "0040c039": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "set registry value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c039(uint lpData)\n\n{\n    int32_t iVar1;\n    uint lpValueName;\n    uint var_8h;\n    uint hKey;\n    \n    if ((*0x424958 != '\\0') && (*0x41e0f8 != 0)) {\n        fcn.0040bffe(0x41e0f8);\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                          (0x80000001, L\"Software\\\\WinRAR SFX\", 0, 0, 0, 0x20006, 0, &hKey, &var_8h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040a826(lpData);\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, &lpValueName, 0, 1, lpData, iVar1 * 2 + 2);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "0040dd36": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "terminate process",
            "accept command line arguments",
            "set environment variable",
            "read file via mapping"
        ],
        "decompiled_code": "\nvoid fcn.0040dd36(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_5ch;\n    uint var_40h;\n    uint var_34h;\n    uint var_18h;\n    uint var_ch;\n    int32_t hObject;\n    int32_t lpBaseAddress;\n    \n    fcn.0040e96c(1);\n    (*_sym.imp.ole32.dll_OleInitialize)(0);\n    fcn.0040f0b5();\n    fcn.0040a4a0(0x41f100, 0, 0x5800);\n    hObject = (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    if (hObject != 0) {\n        fcn.0040bbd3(hObject);\n        if (*0x424959 == '\\0') {\n            (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(L\"sfxcmd\", hObject);\n        }\n        else {\n            hObject = (*_sym.imp.KERNEL32.dll_OpenFileMappingW)(4, 0, L\"winrarsfxmappingfile.tmp\");\n            if (hObject != 0) {\n                lpBaseAddress = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(hObject, 4, 0, 0, 0x5800);\n                if (lpBaseAddress != 0) {\n                    fcn.0040a4cd(0x41f100, lpBaseAddress, 0x5800);\n                    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(L\"sfxcmd\", 0x41f100);\n                }\n                (*_sym.imp.KERNEL32.dll_UnmapViewOfFile)(lpBaseAddress);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x41e900, 0x400);\n    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(L\"sfxname\", 0x41e900);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    *0x418e84 = uVar2;\n    *0x418e88 = uVar2;\n    *0x41e8fc = (*_sym.imp.USER32.dll_LoadIconW)(uVar2, 100);\n    *0x41e8f8 = (*_sym.imp.USER32.dll_LoadBitmapW)(*0x418e88, 0x65);\n    fcn.004131a5();\n    fcn.00409af4(0x41e900);\n    fcn.00412663();\n    fcn.00412663();\n    var_40h = fcn.0040b21f(100);\n    var_18h = fcn.0040b21f(100);\n    *0x41e0f4 = &var_5ch;\n    *0x41e0f0 = &var_34h;\n    (*_sym.imp.USER32.dll_DialogBoxParamW)(uVar2, L\"STARTDLG\", 0, fcn.0040d4de, 0);\n    *0x41e0f0 = NULL;\n    *0x41e0f4 = NULL;\n    fcn.00412685();\n    fcn.00412685();\n    fcn.004131ff();\n    if (*0x424950 != '\\0') {\n        fcn.0040be0d();\n    }\n    fcn.0040aefe();\n    if (*0x424934 != 0) {\n        fcn.0040a41c(*0x424928);\n    }\n    pcVar1 = _sym.imp.GDI32.dll_DeleteObject;\n    (*_sym.imp.GDI32.dll_DeleteObject)(*0x41e8fc);\n    if (*0x41e8f8 != 0) {\n        (*pcVar1)(*0x41e8f8);\n    }\n    if ((*0x418e8c == 0) && (*0x424912 != '\\0')) {\n        fcn.00403537(0xff);\n    }\n    *0x424912 = 1;\n    if (*0x424944 != 0) {\n        fcn.0040bdce(*0x424944);\n    }\n    if (*0x424940 != 0) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(*0x424940);\n    }\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    iVar3 = *0x42493c;\n    if (*0x42493c == 0) {\n        iVar3 = *0x418e8c;\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(iVar3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1071
    },
    "004126cb": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004126cb(int32_t *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    var_4h = NULL;\n    var_8h = NULL;\n    var_ch = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    while( true ) {\n        iVar2 = (**(*arg_8h + 0x48))(arg_8h, &var_4h);\n        if ((-1 < iVar2) && (var_4h != NULL)) break;\n        iVar2 = (*pcVar1)();\n        if (10000 < iVar2 - var_ch) break;\n        iVar2 = (*_sym.imp.USER32.dll_PeekMessageW)(&lpMsg, 0, 0, 0, 0);\n        if (iVar2 != 0) {\n            (*_sym.imp.USER32.dll_GetMessageW)(&lpMsg, 0, 0, 0);\n            (*_sym.imp.USER32.dll_TranslateMessage)(&lpMsg);\n            (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n        }\n    }\n    iVar2 = (**(*arg_8h + 0x48))(arg_8h, &var_4h);\n    if (-1 < iVar2) {\n        iVar2 = (***var_4h)(var_4h, 0x414c40, &var_8h);\n        if (-1 < iVar2) {\n            iVar2 = (**(*var_8h + 0x20))(var_8h);\n            if (-1 < iVar2) {\n                iVar2 = (**(*var_8h + 0x14))(var_8h, arg_ch);\n            }\n            (**(*var_8h + 8))(var_8h);\n        }\n        (**(*var_4h + 8))(var_4h);\n    }\n    return -1 < iVar2;\n}\n",
        "token_count": 473
    },
    "00412f38": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412f38(uint arg_8h, int32_t hWnd, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *(in_ECX + 0x21) = arg_18h;\n    (*_sym.imp.USER32.dll_ShowWindow)(hWnd, 0);\n    fcn.00412ed1(arg_8h);\n    in_ECX[4] = arg_10h;\n    in_ECX[5] = arg_14h;\n    (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(hWnd, &lpRect, 2);\n    (*_sym.imp.USER32.dll_MapWindowPoints)(0, uVar2);\n    if (in_ECX[1] != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(in_ECX[1]);\n    }\n    uVar2 = (*pcVar1)(hWnd, 0, *in_ECX);\n    iVar3 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                      (0, L\"RarHtmlClassName\", 0, 0x40000000, lpRect + 1, var_ch, (var_8h - lpRect) + -2, \n                       var_4h - var_ch, uVar2);\n    in_ECX[1] = iVar3;\n    if (in_ECX[3] == 0) {\n        if (((hWnd != 0) && (in_ECX[5] == 0)) && (in_ECX[4] != 0)) {\n            iVar3 = fcn.00412bb1(in_ECX[4]);\n            if (iVar3 != 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(hWnd, 5);\n                (*_sym.imp.USER32.dll_SetWindowTextW)(hWnd, iVar3);\n                fcn.0040a41c(iVar3);\n            }\n        }\n    }\n    else {\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(iVar3, 5);\n            (*_sym.imp.USER32.dll_UpdateWindow)(in_ECX[1]);\n        }\n        if (100 < in_ECX[7]) {\n            fcn.004128c6();\n        }\n    }\n    return;\n}\n",
        "token_count": 595
    },
    "0040a4ff": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a4ff(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    while( true ) {\n        if (arg_10h == 0) {\n            return 0;\n        }\n        if (*arg_8h < *arg_ch) break;\n        if (*arg_ch < *arg_8h) {\n            return 0xffffffff;\n        }\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + -1;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 144
    },
    "0040a93b": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a93b(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    while( true ) {\n        if (*arg_8h != *arg_ch) {\n            return (*arg_ch <= *arg_8h) * 2 + -1;\n        }\n        if (*arg_8h == 0) break;\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "0040a98b": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a98b(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    while( true ) {\n        if (arg_10h < 1) {\n            return 0;\n        }\n        if (*arg_8h < *arg_ch) {\n            return 0xffffffff;\n        }\n        if (*arg_ch < *arg_8h) {\n            return 0xffffffff;\n        }\n        if (*arg_8h == 0) break;\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + -1;\n    }\n    return 0;\n}\n",
        "token_count": 163
    },
    "0040f343": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.0040f343(int32_t **arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int32_t **arg_8h_00;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = *(arg_ch + 0x29 + in_ECX);\n    uVar2 = *(arg_10h + 0x29 + in_ECX);\n    if (uVar3 != uVar2) {\n        ppiVar1 = in_ECX + 0xb8 + uVar2 * 4;\n        arg_8h_00 = *ppiVar1;\n        if (arg_8h_00 == NULL) {\n            fcn.0040f179(arg_8h, uVar3, uVar2);\n        }\n        else {\n            *ppiVar1 = *arg_8h_00;\n            fcn.0040a4cd(arg_8h_00, arg_8h, arg_10h * 0xc);\n            ppiVar1 = in_ECX + 0xb8 + uVar3 * 4;\n            *arg_8h = *ppiVar1;\n            *ppiVar1 = arg_8h;\n            arg_8h = arg_8h_00;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 322
    },
    "0040fc06": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040fc06(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint *arg_8h_00;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    \n    uVar2 = *(arg_ch + 0x29 + in_ECX);\n    arg_8h_00 = arg_8h;\n    if ((uVar2 != *(arg_ch + 0x2a + in_ECX)) && (arg_8h_00 = fcn.0040fb81(arg_ch + 1),  arg_8h_00 != NULL)) {\n        fcn.0040a4cd(arg_8h_00, arg_8h, arg_ch * 0xc);\n        puVar1 = in_ECX + 0xb8 + uVar2 * 4;\n        *arg_8h = *puVar1;\n        *puVar1 = arg_8h;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 229
    },
    "00405711": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405711(uint *param_1)\n\n{\n    param_1[1] = 0xffffffff;\n    *param_1 = 0x4143c4;\n    *(param_1 + 0x1d) = 0;\n    *(param_1 + 0x41e) = 0;\n    *(param_1 + 0x12) = 0;\n    *(param_1 + 2) = 0;\n    param_1[3] = 0;\n    *(param_1 + 4) = 0;\n    *(param_1 + 0x11) = 0;\n    param_1[0x308] = 0;\n    *(param_1 + 7) = 0;\n    *(param_1 + 0x13) = 1;\n    param_1[0x309] = 0;\n    *(param_1 + 5) = 1;\n    *(param_1 + 0x15) = 0;\n    param_1[6] = 0x100;\n    return;\n}\n",
        "token_count": 241
    },
    "00408f45": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408f45(uint *param_1, uint param_2)\n\n{\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = param_2;\n    param_1[5] = 0;\n    param_1[4] = 0;\n    param_1[6] = 0;\n    return;\n}\n",
        "token_count": 104
    },
    "0040e2b8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid fcn.0040e2b8(uint *param_1)\n\n{\n    param_1[6] = 0;\n    param_1[5] = 0;\n    *param_1 = 0x67452301;\n    param_1[1] = 0xefcdab89;\n    param_1[2] = 0x98badcfe;\n    param_1[3] = 0x10325476;\n    param_1[4] = 0xc3d2e1f0;\n    return;\n}\n",
        "token_count": 122
    },
    "0040e892": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040e892(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    fcn.0040e796();\n    return param_1;\n}\n",
        "token_count": 99
    },
    "00411366": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411366(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    param_1[3] = 0;\n    param_1[0x13] = 0;\n    param_1[4] = 0;\n    return;\n}\n",
        "token_count": 153
    },
    "0041250c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041250c(int32_t *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    puVar1 = param_1[6];\n    if (puVar1 != NULL) {\n        var_8h = param_1;\n        var_4h = param_1;\n        iVar2 = (***puVar1)(puVar1, 0x414c60, &var_4h);\n        if (-1 < iVar2) {\n            (**(*var_4h + 0x18))(var_4h, 1);\n            (**(*var_4h + 0xc))(var_4h, 0);\n            (**(*var_4h + 8))(var_4h);\n        }\n        iVar2 = (***param_1[6])(param_1[6], 0x414c80, &var_8h);\n        if (-1 < iVar2) {\n            (**(*var_8h + 0x18))(var_8h);\n            (**(*var_8h + 0x14))(var_8h);\n            (**(*var_8h + 8))(var_8h);\n        }\n        (**(*param_1[6] + 8))(param_1[6]);\n        param_1[6] = 0;\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "00412663": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412663(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    *(param_1 + 6) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x21) = 0;\n    param_1[9] = 0;\n    return;\n}\n",
        "token_count": 137
    },
    "00412d9a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00412d9a(uint *param_1)\n\n{\n    param_1[5] = 0;\n    param_1[6] = 0;\n    *param_1 = 0x4149e8;\n    param_1[1] = 0x4149ac;\n    param_1[2] = 0x414970;\n    param_1[3] = 0x414954;\n    param_1[4] = 1;\n    fcn.0040a4a0(param_1 + 7, 0, 0x10);\n    return param_1;\n}\n",
        "token_count": 142
    },
    "004090ac": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004090ac(int32_t param_1, uint param_2, uint param_3)\n\n{\n    *(param_1 + 0x14) = param_2;\n    *(param_1 + 0xc) = 1;\n    *(param_1 + 0x10) = param_3;\n    return;\n}\n",
        "token_count": 79
    },
    "0040e4e4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t fcn.0040e4e4(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CompareStringA)(0x400, 0x1001, param_1, param_3, param_2, param_3);\n    return iVar1 + -2;\n}\n",
        "token_count": 89
    },
    "0040bdce": {
        "rules": [
            "delay execution",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bdce(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(arg_8h, 10);\n    while (iVar2 == 0x102) {\n        (*_sym.imp.USER32.dll_PeekMessageW)(&lpMsg, 0, 0, 0, 1);\n        iVar2 = (*pcVar1)(arg_8h, 10);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0040bf66": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040bf66(void)\n\n{\n    uint lpString1;\n    int32_t iVar1;\n    uchar *lpString2;\n    uint arg_10h;\n    uchar auStack2084 [2];\n    ushort auStack2082 [1023];\n    uchar auStack36 [4];\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint32_t uStack20;\n    uint uStack16;\n    uint32_t uStack12;\n    uint uStack8;\n    \n    *0x424911 = 1;\n    if (*0x424920 != 0) {\n        uStack8 = 0x7d;\n        uStack12 = 0x40bf7f;\n        uStack12 = fcn.00409b0b();\n        uStack16 = 2;\n        uStack20 = *0x424920;\n        uStack24 = 0x40bf8e;\n        (*_sym.imp.USER32.dll_SetDlgItemTextW)();\n    }\n    *0x424914 = 0;\n    *0x424910 = 1;\n    if (*0x424920 != 0) {\n        uStack8 = 1;\n        uStack12 = *0x424920;\n        uStack16 = 0x40bfad;\n        (*_sym.imp.USER32.dll_ShowWindow)();\n        if (((*0x424934 == 0) && (*0x424924 == '\\0')) || (*0x424918 == 0)) {\n            uStack8 = 0;\n            uStack12 = 1;\n            uStack16 = 0x111;\n            uStack20 = *0x424920;\n            uStack24 = 0x40bfd9;\n            (*_sym.imp.USER32.dll_SendMessageW)();\n        }\n        while (*0x424920 != 0) {\n            uStack8 = 0;\n            uStack12 = 0x40bfe2;\n            (*_sym.imp.KERNEL32.dll_Sleep)();\n            uStack8 = 0x40bfe7;\n            fcn.0040af16();\n        }\n    }\n    if (*0x424950 != '\\0') {\n        fcn.00413135(&stack0xfffff7dc, 0x400);\n        if (*0x424925 == '\\0') {\n            lpString2 = &stack0xfffff7dc;\n            arg_10h = *0x41609c;\n            lpString1 = fcn.004072cf(lpString2, *0x41609c, 6);\n            iVar1 = fcn.0040efb8(lpString1, lpString2, arg_10h);\n            if (iVar1 == 0) {\n                fcn.00413122(0x4145e8);\n                iVar1 = fcn.0040a826(&stack0xfffff7dc);\n                *(&stack0xfffff7de + iVar1 * 2) = 0;\n                fcn.0040a4a0(&stack0xffffffdc, 0, 0x1e);\n                uStack20 = uStack20 & 0xffff0000 | 0x14;\n                puStack28 = &stack0xfffff7dc;\n                uStack32 = 3;\n                (*_sym.imp.SHELL32.dll_SHFileOperationW)(&stack0xffffffdc);\n            }\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 745
    },
    "0041304a": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0041304a(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, int32_t arg_20h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *var_8h;\n    int32_t *ppv;\n    \n    uVar3 = 0;\n    uVar1 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x414ce0, 0, 1, 0x414c30, &ppv);\n    if (-1 < uVar1) {\n        iVar2 = (***ppv)(ppv, 0x414cd0, &var_8h);\n        if (-1 < iVar2) {\n            if (arg_8h != '\\0') {\n                (**(*var_8h + 0x14))(var_8h, arg_10h, 2);\n            }\n            (**(*ppv + 0x50))(ppv, arg_ch);\n            if (arg_18h != 0) {\n                (**(*ppv + 0x1c))(ppv, arg_18h);\n            }\n            if (arg_1ch == 0) {\n                arg_1ch = 0x41437c;\n            }\n            (**(*ppv + 0x44))(ppv, arg_1ch, 0);\n            if (arg_20h != 0) {\n                (**(*ppv + 0x2c))(ppv, arg_20h);\n            }\n            if (arg_14h != 0) {\n                (**(*ppv + 0x24))(ppv, arg_14h);\n            }\n            iVar2 = (**(*var_8h + 0x18))(var_8h, arg_10h, 1);\n            uVar3 = -1 < iVar2;\n            (**(*var_8h + 8))(var_8h);\n        }\n        uVar1 = (**(*ppv + 8))(ppv);\n    }\n    return uVar1 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 480
    },
    "00401a8a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401a8a(uint *param_1)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint unaff_ESI;\n    \n    fcn.0040f8dc();\n    fcn.0040f8dc();\n    uVar1 = fcn.00406de0();\n    *param_1 = 0x4143c4;\n    if ((param_1[1] == -1) || (*(param_1 + 4) != '\\0')) {\n        return uVar1;\n    }\n    if (*(param_1 + 0x12) != '\\0') {\n        if (param_1[3] == 0) {\n            if (param_1[1] != -1) {\n                uVar1 = fcn.00405783(unaff_ESI);\n            }\n            if (*(param_1 + 0x13) != '\\0') {\n                uVar1 = fcn.0040616e(param_1 + 0x1d, param_1 + 0x41e);\n                return uVar1;\n            }\n        }\n        return uVar1 & 0xffffff00;\n    }\n    uVar2 = 1;\n    if (param_1[3] == 0) {\n        uVar1 = param_1[1];\n        if (uVar1 != 0xffffffff) {\n            if (*(param_1 + 4) == '\\0') {\n                uVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1, unaff_ESI);\n                uVar2 = 1 - (uVar1 != 1);\n                if ((uVar2 != 0) || (*0x418e80 == 0)) {\n                    uVar1 = 0;\n                    do {\n                        if (*(uVar1 * 4 + 0x418a80) == param_1) {\n                            *(uVar1 * 4 + 0x418a80) = 0;\n                            break;\n                        }\n                        uVar1 = uVar1 + 1;\n                    } while (uVar1 < 0x100);\n                }\n            }\n            param_1[1] = 0xffffffff;\n            if ((uVar2 == 0) && (*(param_1 + 5) != '\\0')) {\n                uVar1 = fcn.004035c4(param_1 + 0x1d, param_1 + 0x41e);\n            }\n        }\n    }\n    else {\n        param_1[3] = 0;\n    }\n    param_1[0x309] = param_1[0x309] + 1;\n    return uVar1 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 601
    },
    "004027f8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004027f8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    iVar1 = fcn.00401d3e();\n    while( true ) {\n        if ((iVar1 == 0) || ((param_2 != 0x7b && (*(param_1 + 0x4ab4) == 0x7b)))) {\n            return 0;\n        }\n        uVar2 = uVar2 + 1;\n        if ((uVar2 & 0x7f) == 0) {\n            fcn.0040e915();\n        }\n        if (*(param_1 + 0x4ab4) == param_2) break;\n        fcn.00401271();\n        iVar1 = fcn.00401d3e();\n    }\n    return iVar1;\n}\n",
        "token_count": 211
    },
    "00402851": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00402851(int32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    while( true ) {\n        iVar2 = fcn.00401d3e();\n        if ((iVar2 == 0) || (*(param_1 + 0x4ab4) == 0x7b)) {\n            return 0;\n        }\n        if ((*(param_1 + 0x4ab4) == 0x7a) && (cVar1 = fcn.004012b7(param_2),  cVar1 != '\\0')) break;\n        fcn.00401271();\n    }\n    return iVar2;\n}\n",
        "token_count": 161
    },
    "00402a44": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00402a44(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h)\n\n{\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    uint arg_8h_00;\n    uint *arg_8h_01;\n    uint arg_10h_00;\n    uint var_806h;\n    uint var_404h;\n    \n    uVar2 = fcn.00407327(arg_10h, 0);\n    fcn.0040e78d();\ncode_r0x00402b1c:\n    do {\n        cVar1 = fcn.0040e903(&var_404h, 0x400);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        pcVar3 = fcn.0040730b(&var_404h);\n        cVar1 = fcn.00406e9c(*pcVar3);\n        if (arg_ch == '\\0') {\n            if (cVar1 != '\\0') {\n                fcn.0040a7b6(&var_404h, 0x41430c);\n            }\n        }\n        else if (cVar1 == '\\0') {\n            fcn.00407278(&var_404h, 0);\n            cVar1 = fcn.00406e5f();\n            if (cVar1 != '\\0') goto code_r0x00402b1c;\n        }\n        else {\n            *pcVar3 = '\\0';\n        }\n        if ((var_404h == '*') && (cVar1 = fcn.00406e9c(var_404h._1_1_),  cVar1 != '\\0')) {\n            fcn.0040e57b(&var_806h, uVar2, 0x400);\n        }\n        arg_8h_01 = &var_404h;\n        arg_10h_00 = 0;\n        arg_8h_00 = fcn.00407327(arg_8h_01, 0);\n        cVar1 = fcn.00406bef(arg_8h_00, arg_8h_01, arg_10h_00);\n        if (cVar1 != '\\0') {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 532
    },
    "0040763e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.0040763e(char *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    \n    iVar2 = fcn.0040a5a0(param_1);\n    for (pcVar6 = param_1 + iVar2 + -1; (cVar1 = fcn.0040e54c(),  pcVar5 = pcVar6,  cVar1 == '\\0' && (param_1 < pcVar6))\n        ; pcVar6 = pcVar6 + -1) {\n    }\n    while (cVar1 = fcn.0040e54c(),  cVar1 != '\\0') {\n        if (pcVar5 <= param_1) {\n            return pcVar6;\n        }\n        pcVar5 = pcVar5 + -1;\n    }\n    while( true ) {\n        if (pcVar5 <= param_1) {\n            return pcVar6;\n        }\n        if (*pcVar5 == '.') break;\n        cVar1 = fcn.0040e54c();\n        if (cVar1 != '\\0') {\n            uVar3 = fcn.00407278(param_1, 0x2e);\n            pcVar4 = fcn.00407248(uVar3);\n            if ((pcVar4 != NULL) && (pcVar4 < pcVar5)) {\n                pcVar6 = pcVar5;\n            }\n            return pcVar6;\n        }\n        pcVar5 = pcVar5 + -1;\n    }\n    return pcVar6;\n}\n",
        "token_count": 365
    },
    "004076b8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.004076b8(int16_t *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    \n    iVar2 = fcn.0040a826(param_1);\n    for (piVar5 = param_1 + iVar2 + -1; (cVar1 = fcn.0040e54c(),  piVar4 = piVar5,  cVar1 == '\\0' && (param_1 < piVar5))\n        ; piVar5 = piVar5 + -1) {\n    }\n    while (cVar1 = fcn.0040e54c(),  cVar1 != '\\0') {\n        if (piVar4 <= param_1) {\n            return piVar5;\n        }\n        piVar4 = piVar4 + -1;\n    }\n    while( true ) {\n        if (piVar4 <= param_1) {\n            return piVar5;\n        }\n        if (*piVar4 == 0x2e) break;\n        cVar1 = fcn.0040e54c();\n        if (cVar1 != '\\0') {\n            arg_8h = fcn.004072cf(param_1, 0x2e);\n            piVar3 = fcn.0040a9ea(arg_8h, param_1);\n            if ((piVar3 != NULL) && (piVar3 < piVar4)) {\n                piVar5 = piVar4;\n            }\n            return piVar5;\n        }\n        piVar4 = piVar4 + -1;\n    }\n    return piVar5;\n}\n",
        "token_count": 387
    },
    "00407977": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.00407977(uint8_t *param_1)\n\n{\n    uint8_t uVar1;\n    uint32_t in_EAX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    if (((*param_1 == 0) || (param_1[1] == 0)) || (in_EAX = fcn.0040a5c9(param_1 + 2, 0x3a),  in_EAX == 0)) {\n        in_EAX = in_EAX & 0xffffff00 | *param_1;\n        puVar2 = param_1;\n        while (uVar1 = in_EAX,  uVar1 != 0) {\n            if ((uVar1 < 0x20) || ((uVar1 == 0x20 && (in_EAX = fcn.00406e9c(puVar2[1]),  in_EAX != '\\0'))))\n            goto code_r0x00407997;\n            puVar2 = fcn.00401c80();\n            in_EAX = puVar2 & 0xffffff00 | *puVar2;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 8, param_1, 0xffffffff, 0, 0);\n        if ((iVar3 != 0) || (in_EAX = (*_sym.imp.KERNEL32.dll_GetLastError)(),  in_EAX != 0x459)) {\n            if ((*param_1 != 0) && (iVar3 = fcn.0040a632(param_1, \"?*<>|\\\"\"),  iVar3 == 0)) {\n                return 1;\n            }\n            return 0;\n        }\n    }\ncode_r0x00407997:\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 408
    },
    "0040a5a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a5a0(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    while (cVar1 = *arg_8h,  arg_8h = arg_8h + 1,  cVar1 != '\\0') {\n        var_4h = var_4h + 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 108
    },
    "0040a5c9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.0040a5c9(char *arg_8h, int32_t arg_ch)\n\n{\n    while( true ) {\n        if (*arg_8h == '\\0') {\n            return NULL;\n        }\n        if (*arg_8h == arg_ch) break;\n        arg_8h = arg_8h + 1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 89
    },
    "0040a693": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.0040a693(char *arg_8h, char *arg_ch)\n\n{\n    for (; *arg_ch != '\\0'; arg_ch = arg_ch + 1) {\n        *arg_8h = *arg_ch;\n        arg_8h = arg_8h + 1;\n    }\n    *arg_8h = '\\0';\n    return arg_8h;\n}\n",
        "token_count": 90
    },
    "0040a6c7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.0040a6c7(char *arg_8h, char *arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    \n    do {\n        if (arg_10h < 1) {\n            return arg_8h;\n        }\n        *arg_8h = *arg_ch;\n        cVar1 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + -1;\n    } while (cVar1 != '\\0');\n    return arg_8h;\n}\n",
        "token_count": 145
    },
    "0040a705": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a705(char *arg_8h, char *arg_ch)\n\n{\n    while( true ) {\n        if (*arg_8h < *arg_ch) {\n            return 0xffffffff;\n        }\n        if (*arg_ch < *arg_8h) break;\n        if (*arg_8h == '\\0') {\n            return 0;\n        }\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 117
    },
    "0040a759": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a759(char *arg_8h, char *arg_ch, int32_t arg_10h)\n\n{\n    while( true ) {\n        if (arg_10h == 0) {\n            return 0;\n        }\n        if (*arg_8h < *arg_ch) {\n            return 0xffffffff;\n        }\n        if (*arg_ch < *arg_8h) {\n            return 0xffffffff;\n        }\n        if (*arg_8h == '\\0') break;\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + -1;\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "0040a826": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a826(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    while (iVar1 = *arg_8h,  arg_8h = arg_8h + 1,  iVar1 != 0) {\n        var_4h = var_4h + 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 107
    },
    "0040a850": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0040a850(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    \n    do {\n        *arg_8h = *arg_ch;\n        arg_8h = arg_8h + 1;\n        iVar1 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    } while (iVar1 != 0);\n    return arg_8h;\n}\n",
        "token_count": 103
    },
    "0040a880": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0040a880(int16_t *arg_8h, int16_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    \n    do {\n        if (arg_10h < 1) {\n            return arg_8h;\n        }\n        *arg_8h = *arg_ch;\n        iVar1 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + -1;\n    } while (iVar1 != 0);\n    return arg_8h;\n}\n",
        "token_count": 148
    },
    "0040a8e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0040a8e0(int16_t *arg_8h, int16_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0040a826(arg_8h);\n    arg_8h = arg_8h + iVar2 * 2;\n    do {\n        if (arg_10h < 1) break;\n        *arg_8h = *arg_ch;\n        iVar1 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + -1;\n    } while (iVar1 != 0);\n    *arg_8h = 0;\n    return arg_8h;\n}\n",
        "token_count": 192
    },
    "0040a9ea": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0040a9ea(uint16_t *arg_8h, uint32_t arg_ch)\n\n{\n    while( true ) {\n        if (*arg_8h == 0) {\n            return NULL;\n        }\n        if (*arg_8h == arg_ch) break;\n        arg_8h = arg_8h + 1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 92
    },
    "0040aa58": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0040aa58(uint16_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        if (*arg_8h == 0) {\n            return NULL;\n        }\n        iVar1 = fcn.0040a9ea(arg_ch, *arg_8h);\n        if (iVar1 != 0) break;\n        arg_8h = arg_8h + 1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 116
    },
    "0040ae82": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ae82(uchar *param_1, int32_t param_2)\n\n{\n    if (param_2 != 0) {\n        do {\n            *param_1 = 0;\n            param_1 = param_1 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0040ae98": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ae98(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_200h;\n    uint var_100h;\n    \n    iVar4 = 0x80;\n    fcn.0040ae06(&var_100h, 0x80);\n    fcn.0040ae06(&var_200h, 0x80);\n    iVar1 = fcn.0040a93b(&var_100h, &var_200h);\n    iVar3 = 0x80;\n    puVar2 = &var_100h;\n    do {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    puVar2 = &var_200h;\n    do {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return -iVar1 & 0xffffff00U | 1 - (iVar1 != 0);\n}\n",
        "token_count": 276
    },
    "004112ea": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004112ea(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    uint32_t uVar1;\n    \n    fcn.00401310();\n    *(param_1 + 0x4c64) = 0;\n    uVar1 = 0;\n    if (*(param_1 + 0x4c44) != 0) {\n        do {\n            if (*(*(param_1 + 0x4c40) + uVar1 * 4) != 0) {\n                fcn.00410f83();\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 0x4c44));\n    }\n    fcn.00401310();\n    uVar1 = 0;\n    if (*(param_1 + 0x4c50) != 0) {\n        do {\n            if (*(*(param_1 + 0x4c4c) + uVar1 * 4) != 0) {\n                fcn.00410f83();\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 0x4c50));\n    }\n    arg_8h = *(param_1 + 0x4c4c);\n    if (arg_8h != 0) {\n        fcn.0040a41c(arg_8h);\n        *(param_1 + 0x4c4c) = 0;\n    }\n    *(param_1 + 0x4c50) = 0;\n    *(param_1 + 0x4c54) = 0;\n    return;\n}\n",
        "token_count": 379
    },
    "004127a2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004127a2(int16_t *param_1)\n\n{\n    uint32_t uVar1;\n    \n    do {\n        if (*param_1 == 0) {\n            return 0;\n        }\n        if ((*param_1 == 0x3c) && (param_1[1] == 0x2f)) {\n            uVar1 = 2;\n            do {\n                if (param_1[uVar1] == 0x3e) {\n                    return 1;\n                }\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < 0x14);\n        }\n        param_1 = param_1 + 1;\n    } while( true );\n}\n",
        "token_count": 159
    },
    "004128c6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004128c6(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint lpMsg;\n    uint pvarg;\n    uint var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    var_4h = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    iVar2 = (*pcVar1)();\n    uVar3 = iVar2 - var_4h;\n    while (uVar3 < 0x2711) {\n        (**(**(var_8h + 0xc) + 0xe0))(*(var_8h + 0xc), &var_ch);\n        if (var_ch == 4) break;\n        iVar2 = (*_sym.imp.USER32.dll_PeekMessageW)(&lpMsg, 0, 0, 0, 0);\n        if (iVar2 != 0) {\n            (*_sym.imp.USER32.dll_TranslateMessage)(&lpMsg);\n            (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n            (*_sym.imp.USER32.dll_GetMessageW)(&lpMsg, 0, 0, 0);\n        }\n        iVar2 = (*pcVar1)();\n        uVar3 = iVar2 - var_4h;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvarg);\n    pvarg._0_2_ = 3;\n    var_14h = 0x96;\n    (**(**(var_8h + 0xc) + 0xd8))(*(var_8h + 0xc), 0x3f, 2, &pvarg, 0);\n    return;\n}\n",
        "token_count": 416
    },
    "0040b0d4": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b0d4(uint pszPath, uint arg_ch)\n\n{\n    int32_t *var_8h;\n    uint pidl;\n    \n    (*_sym.imp.SHELL32.dll_SHGetMalloc)(&var_8h);\n    (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)(0, arg_ch, &pidl);\n    (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(pidl, pszPath);\n    (**(*var_8h + 0x14))(var_8h, pidl);\n    return;\n}\n",
        "token_count": 129
    },
    "00413135": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nbool fcn.00413135(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(param_2, param_1);\n    return iVar1 != 0;\n}\n",
        "token_count": 61
    },
    "0040aa8d": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aa8d(uint uExitCode)\n\n{\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(uExitCode);\n    return;\n}\n",
        "token_count": 39
    },
    "0040e96c": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0040e96c(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"kernel32\");\n    if (iVar1 != 0) {\n        cVar3 = '\\f';\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"SetDllDirectoryW\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(-(cVar3 != '\\0') & 0x41437c);\n        }\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00413122": {
        "rules": [
            "set current directory"
        ],
        "decompiled_code": "\nbool fcn.00413122(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(param_1);\n    return iVar1 != 0;\n}\n",
        "token_count": 52
    },
    "0041314c": {
        "rules": [
            "find graphical window"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041314c(int32_t hWnd)\n\n{\n    int32_t iVar1;\n    uint lpClassName;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetClassNameW)(hWnd, &lpClassName, 0x50);\n    if ((iVar1 != 0) && (iVar1 = fcn.0040eefb(&lpClassName, L\"EDIT\"),  iVar1 != 0)) {\n        hWnd = (*_sym.imp.USER32.dll_FindWindowExW)(hWnd, 0, L\"EDIT\", 0);\n    }\n    if (hWnd != 0) {\n        (*_sym.imp.SHLWAPI.dll_SHAutoComplete)(hWnd, 0x10);\n    }\n    return;\n}\n",
        "token_count": 163
    }
}