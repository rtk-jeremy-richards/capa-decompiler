{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_5ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    // [00] -r-x section size 28672 named .text\n    iVar3 = *0x42a270;\n    if (arg_ch == 0xf) {\n        uVar4 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_5ch);\n        var_ch = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_1ch);\n        iVar5 = var_10h;\n        pcVar1 = _sym.imp.GDI32.dll_DeleteObject;\n        var_10h = 0;\n        for (; var_18h < iVar5; var_18h = var_18h + 4) {\n            iVar7 = iVar5 - var_18h;\n            var_8h = CONCAT11((*(iVar3 + 0x52) * iVar7 + *(iVar3 + 0x56) * var_18h) / iVar5, \n                              (*(iVar3 + 0x51) * iVar7 + *(iVar3 + 0x55) * var_18h) / iVar5) << 8 |\n                     (*(iVar3 + 0x50) * iVar7 + *(iVar3 + 0x54) * var_18h) / iVar5 & 0xffU;\n            uVar6 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            var_10h = var_10h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar4, &var_1ch, uVar6);\n            (*pcVar1)(uVar6);\n        }\n        if (*(iVar3 + 0x58) != -1) {\n            iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectW)(*(iVar3 + 0x34));\n            if (iVar5 != 0) {\n                var_1ch = 0x10;\n                var_18h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar4, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar4, *(iVar3 + 0x58));\n                pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n                uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, iVar5);\n                (*_sym.imp.USER32.dll_DrawTextW)(uVar4, 0x429260, 0xffffffff, &var_1ch, 0x820);\n                (*pcVar2)(uVar4, uVar6);\n                (*pcVar1)(iVar5);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_5ch);\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = *0x42a268;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_DefWindowProcW)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar4;\n}\n",
        "token_count": 848
    },
    "00406bb0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00406bb0(uint *param_1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    bool bVar14;\n    uint var_90h;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    int32_t var_78h;\n    uint32_t var_74h;\n    uint8_t *var_70h;\n    int32_t var_6ch;\n    uint8_t *var_68h;\n    int32_t var_64h;\n    uint32_t var_60h;\n    uint var_5ch;\n    uint16_t *var_58h;\n    uint16_t *var_54h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint32_t dwBytes;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t hMem;\n    \n    puVar12 = param_1;\n    puVar13 = &var_88h;\n    for (iVar8 = 0x22; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar13 = *puVar12;\n        puVar12 = puVar12 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    uVar9 = var_44h;\n    puVar11 = var_54h;\n    if (var_30h == -1) {\n        return 1;\n    }\ncode_r0x00406be3:\n    do {\n        uVar5 = var_20h;\n        uVar7 = var_2ch;\n        puVar4 = var_68h;\n        puVar3 = var_70h;\n        if (0x1c < var_88h) {\n            return 0xffffffff;\n        }\n    // switch table (29 cases) at 0x407602\n        switch(*(var_88h * 4 + 0x407602)) {\n        case 0x406bf9:\n            if (var_6ch == 0) goto code_r0x004075e5;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            uVar1 = *puVar3;\n            if (0xe1 < uVar1) {\n                return 0xffffffff;\n            }\n            var_3ch = (uVar1 % 0x2d) % 9;\n            var_1ch = (1 << uVar1 / 0x2d) - 1;\n            var_18h = (1 << (uVar1 % 0x2d) / 9) - 1;\n            iVar10 = (0x300 << var_3ch + uVar1 / 0x2d) + 0x736;\n            iVar8 = iVar10 * 2;\n            if (iVar8 != var_78h) {\n                if (hMem != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(hMem);\n                }\n                hMem = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar8);\n                if (hMem == 0) {\n                    return 0xffffffff;\n                }\n                var_78h = iVar8;\n            }\n            while (iVar10 != 0) {\n                iVar10 = iVar10 + -1;\n                *(hMem + iVar10 * 2) = 0x400;\n            }\n            dwBytes = 0;\n            for (var_48h = 0; var_48h < 4; var_48h = var_48h + 1) {\ncode_r0x00406c9e:\n                if (var_6ch == 0) {\n                    var_88h = 1;\n                    goto code_r0x004075e5;\n                }\n                var_6ch = var_6ch + -1;\n                dwBytes = dwBytes | *var_70h << (var_48h << 3 & 0x1f);\n                var_70h = var_70h + 1;\n            }\n            if (dwBytes != var_74h) {\n                var_74h = dwBytes;\n                if (var_8h != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(var_8h);\n                }\n                var_8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n                if (var_8h == 0) {\n                    return 0xffffffff;\n                }\n            }\n            var_48h = 5;\n            *(var_8h + -1 + var_74h) = 0;\n            while (uVar7 = var_48h,  var_48h = var_48h - 1,  uVar7 != 0) {\ncode_r0x00406d0e:\n                if (var_6ch == 0) {\n                    var_88h = 3;\n                    goto code_r0x004075e5;\n                }\n                var_6ch = var_6ch + -1;\n                uVar1 = *var_70h;\n                var_70h = var_70h + 1;\n                var_ch = var_ch << 8 | uVar1;\n            }\n        case 0x406d39:\n            var_84h = 6;\n            var_4ch = var_60h & var_1ch;\n            puVar11 = hMem + (var_38h * 0x10 + (var_60h & var_1ch)) * 2;\n            break;\n        case 0x406c9e:\n            goto code_r0x00406c9e;\n        case 0x406d0e:\n            goto code_r0x00406d0e;\n        case 0x406d5f:\n            if (dwBytes != 0) {\n                var_34h = 1;\n                var_84h = 7;\n                puVar11 = hMem + 0x180 + var_38h * 2;\n                break;\n            }\n            var_58h = ((var_5ch >> (8 - var_3ch & 0x1f)) + ((var_60h & var_18h) << (var_3ch & 0x1f))) * 0x600 + 0xe6c +\n                      hMem;\n            if (var_38h < 4) {\n                var_38h = 0;\n            }\n            else if (var_38h < 10) {\n                var_38h = var_38h + -3;\n            }\n            else {\n                var_38h = var_38h + -6;\n            }\n            if (var_34h != 0) {\n                uVar7 = var_14h - var_2ch;\n                if (var_74h <= uVar7) {\n                    uVar7 = uVar7 + var_74h;\n                }\n                uVar9 = 1;\n                var_5ch._1_1_ = *(uVar7 + var_8h);\n                do {\n                    uVar1 = var_5ch._1_1_;\n                    var_5ch._1_1_ = var_5ch._1_1_ << 1;\n                    var_48h = uVar1 >> 7;\n                    puVar11 = var_58h + ((uVar1 >> 7) + 1) * 0x100 + uVar9;\n                    uVar2 = *puVar11;\n                    var_54h = puVar11;\n                    uVar7 = (var_10h >> 0xb) * uVar2;\n                    bVar14 = uVar7 <= var_ch;\n                    if (bVar14) {\n                        var_10h = var_10h - uVar7;\n                        var_ch = var_ch - uVar7;\n                        dwBytes = 1;\n                        uVar9 = uVar9 * 2 + 1;\n                        *puVar11 = uVar2 - (uVar2 >> 5);\n                    }\n                    else {\n                        dwBytes = 0;\n                        var_10h = uVar7;\n                        uVar9 = uVar9 * 2;\n                        *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                    }\n                    dwBytes = bVar14;\n                    var_44h = uVar9;\n                    if (var_10h < 0x1000000) {\ncode_r0x00406df8:\n                        if (var_6ch == 0) {\n                            var_88h = 0xd;\n                            goto code_r0x004075e5;\n                        }\n                        var_10h = var_10h << 8;\n                        uVar1 = *var_70h;\n                        var_6ch = var_6ch + -1;\n                        var_70h = var_70h + 1;\n                        var_ch = var_ch << 8 | uVar1;\n                    }\n                    if (var_48h != dwBytes) goto code_r0x00406ed6;\n                } while (uVar9 < 0x100);\n                goto code_r0x00406f3a;\n            }\n            uVar9 = 1;\n            do {\n                puVar11 = var_58h + uVar9;\n                uVar2 = *puVar11;\n                var_54h = puVar11;\n                uVar7 = (var_10h >> 0xb) * uVar2;\n                if (var_ch < uVar7) {\n                    var_10h = uVar7;\n                    uVar9 = uVar9 * 2;\n                    *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_10h = var_10h - uVar7;\n                    var_ch = var_ch - uVar7;\n                    uVar9 = uVar9 * 2 + 1;\n                    *puVar11 = uVar2 - (uVar2 >> 5);\n                }\n                var_44h = uVar9;\n                if (var_10h < 0x1000000) {\ncode_r0x00406f75:\n                    if (var_6ch == 0) {\n                        var_88h = 0xf;\n                        goto code_r0x004075e5;\n                    }\n                    var_10h = var_10h << 8;\n                    uVar1 = *var_70h;\n                    var_6ch = var_6ch + -1;\n                    var_70h = var_70h + 1;\n                    var_ch = var_ch << 8 | uVar1;\n                }\n            } while (uVar9 < 0x100);\n            goto code_r0x00406f3e;\n        case 0x406df8:\n            goto code_r0x00406df8;\n        case 0x406eb1:\n            goto code_r0x00406eb1;\n        case 0x406f44:\n            goto code_r0x00406f44;\n        case 0x406f75:\n            goto code_r0x00406f75;\n        case 0x406ffe:\n            if (dwBytes != 1) {\n                var_80h = 0x16;\n                var_20h = var_24h;\n                var_24h = var_28h;\n                var_28h = var_2ch;\n                var_38h = ((6 < var_38h) - 1 & 0xfffffffd) + 10;\n                var_58h = hMem + 0x664;\n                goto code_r0x00407056;\n            }\n            var_84h = 8;\n            puVar11 = hMem + 0x198 + var_38h * 2;\n            break;\n        case 0x407068:\n            if (dwBytes == 0) {\n                var_84h = 9;\n                puVar11 = hMem + ((var_38h + 0xf) * 0x10 + var_4ch) * 2;\n            }\n            else {\n                var_84h = 10;\n                puVar11 = hMem + 0x1b0 + var_38h * 2;\n            }\n            break;\n        case 0x4070ab:\n            if (dwBytes != 0) goto code_r0x00407166;\n            if (var_60h == 0) {\n                return 0xffffffff;\n            }\n            var_38h = (6 < var_38h) * 2 + 9;\n        case 0x4070cf:\n            if (var_64h == 0) {\n                var_88h = 0x1b;\n                goto code_r0x004075e5;\n            }\n            uVar7 = var_14h - var_2ch;\n            if (var_74h <= uVar7) {\n                uVar7 = uVar7 + var_74h;\n            }\n            var_5ch._0_1_ = *(uVar7 + var_8h);\n            *(var_14h + var_8h) = var_5ch;\n            var_60h = var_60h + 1;\n            var_68h = var_68h + 1;\n            var_64h = var_64h + -1;\n            *puVar4 = var_5ch;\n            goto code_r0x0040710a;\n        case 0x40711c:\n            if (dwBytes == 0) goto code_r0x0040715d;\n            var_84h = 0xb;\n            puVar11 = hMem + 0x1c8 + var_38h * 2;\n            break;\n        case 0x407143:\n            uVar6 = var_24h;\n            if (dwBytes != 0) {\n                var_20h = var_24h;\n                uVar6 = uVar5;\n            }\n            var_24h = var_28h;\n            var_28h = uVar6;\ncode_r0x0040715d:\n            var_2ch = var_28h;\n            var_28h = uVar7;\ncode_r0x00407166:\n            var_80h = 0x15;\n            var_58h = hMem + 0xa68;\n        case 0x407056:\ncode_r0x00407056:\n            var_84h = 0x12;\n            puVar11 = var_58h;\n            break;\n        case 0x40717d:\n            var_38h = ((6 < var_38h) - 1 & 0xfffffffd) + 0xb;\n            goto code_r0x0040732e;\n        case 0x407194:\n            iVar8 = var_30h;\n            if (3 < var_30h) {\n                iVar8 = 3;\n            }\n            dwBytes = 6;\n            var_7ch = 0x19;\n            var_58h = iVar8 * 0x80 + 0x360 + hMem;\n            goto code_r0x00407490;\n        case 0x4071c2:\n            var_2ch = uVar9;\n            if (3 < uVar9) {\n                iVar8 = uVar9 >> 1;\n                dwBytes = iVar8 - 1;\n                uVar7 = (uVar9 & 1 | 2) << (dwBytes & 0x1f);\n                var_2ch = uVar7;\n                if (0xd < uVar9) {\n                    uVar9 = 0;\n                    var_48h = iVar8 - 5;\n                    goto code_r0x0040722e;\n                }\n                var_58h = hMem + 0x55e + (uVar7 - uVar9) * 2;\ncode_r0x00407272:\n                uVar9 = 0;\n                var_50h = 1;\n                var_44h = 0;\n                for (var_48h = 0; var_48h < dwBytes; var_48h = var_48h + 1) {\n                    puVar11 = var_58h + var_50h;\n                    var_54h = puVar11;\n                    uVar2 = *puVar11;\n                    uVar7 = (var_10h >> 0xb) * uVar2;\n                    if (var_ch < uVar7) {\n                        var_10h = uVar7;\n                        var_50h = var_50h << 1;\n                        *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                    }\n                    else {\n                        var_10h = var_10h - uVar7;\n                        var_ch = var_ch - uVar7;\n                        uVar9 = var_44h | 1 << (var_48h & 0x1f);\n                        var_44h = uVar9;\n                        *puVar11 = uVar2 - (uVar2 >> 5);\n                        var_50h = var_50h * 2 + 1;\n                    }\n                    if (var_10h < 0x1000000) {\ncode_r0x00407286:\n                        if (var_6ch == 0) {\n                            var_88h = 0x10;\n                            goto code_r0x004075e5;\n                        }\n                        var_10h = var_10h << 8;\n                        uVar1 = *var_70h;\n                        var_6ch = var_6ch + -1;\n                        var_70h = var_70h + 1;\n                        var_ch = var_ch << 8 | uVar1;\n                    }\n                }\n                var_2ch = var_2ch + uVar9;\n            }\n            var_2ch = var_2ch + 1;\ncode_r0x0040732e:\n            if (var_2ch == 0) {\n                var_30h = 0xffffffff;\n                goto code_r0x004075e5;\n            }\n            if (var_60h < var_2ch) {\n                return 0xffffffff;\n            }\n            var_30h = var_30h + 2;\n            var_60h = var_60h + var_30h;\ncode_r0x0040734c:\n            do {\n                puVar3 = var_68h;\n                if (var_64h == 0) {\n                    var_88h = 0x1c;\n                    goto code_r0x004075e5;\n                }\n                uVar7 = var_14h - var_2ch;\n                if (var_74h <= uVar7) {\n                    uVar7 = uVar7 + var_74h;\n                }\n                var_5ch._0_1_ = *(uVar7 + var_8h);\n                *(var_14h + var_8h) = var_5ch;\n                var_68h = var_68h + 1;\n                var_64h = var_64h + -1;\n                var_30h = var_30h + -1;\n                *puVar3 = var_5ch;\n                var_14h = (var_14h + 1) % var_74h;\n            } while (0 < var_30h);\n            goto code_r0x0040710d;\n        case 0x407203:\n            while (var_6ch != 0) {\n                var_10h = var_10h << 8;\n                uVar1 = *var_70h;\n                var_6ch = var_6ch + -1;\n                var_70h = var_70h + 1;\n                var_ch = var_ch << 8 | uVar1;\n                uVar7 = var_2ch;\n                do {\n                    var_48h = var_48h - 1;\ncode_r0x0040722e:\n                    if (var_48h < 1) {\n                        dwBytes = 4;\n                        var_2ch = uVar7 + uVar9 * 0x10;\n                        var_58h = hMem + 0x644;\n                        goto code_r0x00407272;\n                    }\n                    uVar9 = uVar9 * 2;\n                    var_10h = var_10h >> 1;\n                    var_44h = uVar9;\n                    if (var_10h <= var_ch) {\n                        var_ch = var_ch - var_10h;\n                        uVar9 = uVar9 | 1;\n                        var_44h = uVar9;\n                    }\n                } while (0xffffff < var_10h);\n            }\n            var_88h = 0xc;\n            goto code_r0x004075e5;\n        case 0x407286:\n            goto code_r0x00407286;\n        case 0x40734c:\n            goto code_r0x0040734c;\n        case 0x407395:\n            if (dwBytes == 0) {\n                var_30h = 0;\n                iVar8 = var_4ch * 8 + 2;\ncode_r0x004073ac:\n                var_58h = var_58h + iVar8;\n                dwBytes = 3;\n                goto code_r0x00407489;\n            }\n            var_84h = 0x13;\n            puVar11 = var_58h + 1;\n            break;\n        case 0x4073ce:\n            goto code_r0x004073ce;\n        case 0x40741c:\n            goto code_r0x0040741c;\n        case 0x407452:\n            if (dwBytes == 0) {\n                var_30h = 8;\n                iVar8 = var_4ch * 8 + 0x82;\n                goto code_r0x004073ac;\n            }\n            var_58h = var_58h + 0x102;\n            var_30h = 0x10;\n            dwBytes = 8;\ncode_r0x00407489:\n            var_7ch = 0x14;\n        case 0x407490:\ncode_r0x00407490:\n            var_50h = 1;\n            for (var_48h = dwBytes; 0 < var_48h; var_48h = var_48h - 1) {\n                puVar11 = var_58h + var_50h;\n                var_54h = puVar11;\n                uVar2 = *puVar11;\n                uVar9 = (var_10h >> 0xb) * uVar2;\n                if (var_ch < uVar9) {\n                    var_10h = uVar9;\n                    var_50h = var_50h << 1;\n                    *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_10h = var_10h - uVar9;\n                    var_ch = var_ch - uVar9;\n                    *puVar11 = uVar2 - (uVar2 >> 5);\n                    var_50h = var_50h * 2 + 1;\n                }\n                if (var_10h < 0x1000000) {\ncode_r0x0040749f:\n                    if (var_6ch == 0) {\n                        var_88h = 0x18;\n                        goto code_r0x004075e5;\n                    }\n                    var_10h = var_10h << 8;\n                    uVar1 = *var_70h;\n                    var_6ch = var_6ch + -1;\n                    var_70h = var_70h + 1;\n                    var_ch = var_ch << 8 | uVar1;\n                }\n            }\n            uVar9 = var_50h - (1 << (dwBytes & 0x1f));\n            var_44h = uVar9;\n            var_88h = var_7ch;\n            goto code_r0x00407447;\n        case 0x40749f:\n            goto code_r0x0040749f;\n        case 0x407543:\n            var_30h = var_30h + uVar9;\n            var_88h = var_80h;\n            goto code_r0x00407447;\n        }\n        var_54h = puVar11;\ncode_r0x004073ce:\n        uVar2 = *puVar11;\n        uVar7 = (var_10h >> 0xb) * uVar2;\n        bVar14 = uVar7 <= var_ch;\n        if (bVar14) {\n            var_10h = var_10h - uVar7;\n            var_ch = var_ch - uVar7;\n            dwBytes = 1;\n            *puVar11 = uVar2 - (uVar2 >> 5);\n        }\n        else {\n            var_10h = uVar7;\n            dwBytes = 0;\n            *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n        }\n        dwBytes = bVar14;\n        var_88h = var_84h;\n        if (var_10h < 0x1000000) {\ncode_r0x0040741c:\n            if (var_6ch == 0) {\n                var_88h = 5;\n                goto code_r0x004075e5;\n            }\n            var_10h = var_10h << 8;\n            uVar1 = *var_70h;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            var_ch = var_ch << 8 | uVar1;\n            var_88h = var_84h;\n        }\ncode_r0x00407447:\n    } while( true );\ncode_r0x00406ed6:\n    if (uVar9 < 0x100) {\n        puVar11 = var_58h + uVar9;\n        uVar2 = *puVar11;\n        var_54h = puVar11;\n        uVar7 = (var_10h >> 0xb) * uVar2;\n        if (var_ch < uVar7) {\n            var_10h = uVar7;\n            uVar9 = uVar9 * 2;\n            *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n        }\n        else {\n            var_10h = var_10h - uVar7;\n            var_ch = var_ch - uVar7;\n            uVar9 = uVar9 * 2 + 1;\n            *puVar11 = uVar2 - (uVar2 >> 5);\n        }\n        var_44h = uVar9;\n        if (var_10h < 0x1000000) {\ncode_r0x00406eb1:\n            if (var_6ch == 0) {\n                var_88h = 0xe;\n                goto code_r0x004075e5;\n            }\n            var_10h = var_10h << 8;\n            uVar1 = *var_70h;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            var_ch = var_ch << 8 | uVar1;\n        }\n        goto code_r0x00406ed6;\n    }\ncode_r0x00406f3a:\n    var_34h = 0;\ncode_r0x00406f3e:\n    var_5ch._0_1_ = var_44h;\ncode_r0x00406f44:\n    if (var_64h == 0) {\n        var_88h = 0x1a;\ncode_r0x004075e5:\n        puVar12 = &var_88h;\n        for (iVar8 = 0x22; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *param_1 = *puVar12;\n            puVar12 = puVar12 + 1;\n            param_1 = param_1 + 1;\n        }\n        return 0;\n    }\n    var_60h = var_60h + 1;\n    var_68h = var_68h + 1;\n    var_64h = var_64h + -1;\n    *puVar4 = var_5ch;\n    *(var_14h + var_8h) = var_5ch;\ncode_r0x0040710a:\n    var_14h = (var_14h + 1) % var_74h;\ncode_r0x0040710d:\n    var_88h = 2;\n    goto code_r0x00406be3;\n}\n",
        "token_count": 6611
    },
    "00401434": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00401434(int32_t **hWndChildAfter)\n\n{\n    uint32_t *puVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    code *pcVar11;\n    int32_t iVar12;\n    uint32_t extraout_EDX;\n    uint uVar13;\n    int32_t **ppiVar14;\n    int32_t **ppiVar15;\n    int32_t **ppiVar16;\n    int16_t *piVar17;\n    uint uVar18;\n    bool bVar19;\n    uint64_t uVar20;\n    ulong uVar21;\n    ulong uVar22;\n    uint in_stack_fffffcb8;\n    uint in_stack_fffffcbc;\n    uint uVar23;\n    uint lpFindFileData;\n    uint var_2b0h;\n    uint var_8ch;\n    int32_t *var_88h;\n    int32_t *var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    uint32_t var_78h;\n    uint var_74h;\n    int32_t *lpFileOp;\n    uint var_6ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    uint lpRect;\n    uint var_58h;\n    uint var_54h;\n    uint32_t var_50h;\n    int16_t *lDistanceToMove;\n    uint32_t lpValueName;\n    code *lpNumberOfBytesRead;\n    int32_t var_3ch;\n    int32_t *lpdwResult;\n    int32_t *var_34h;\n    int32_t *var_30h;\n    int32_t *dwFileAttributes;\n    int32_t *nIDDlgItem;\n    int32_t *nNumberOfBytesToRead;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    code *hWndParent;\n    int32_t var_14h;\n    int32_t *lpKeyName;\n    int16_t *lpBuffer;\n    int32_t *lpString2;\n    int32_t *var_4h;\n    \n    ppiVar15 = *0x40ce58;\n    pcVar11 = _sym.imp.USER32.dll_ShowWindow;\n    ppiVar14 = hWndChildAfter;\n    ppiVar16 = &var_34h;\n    for (iVar12 = 7; iVar12 != 0; iVar12 = iVar12 + -1) {\n        *ppiVar16 = *ppiVar14;\n        ppiVar14 = ppiVar14 + 1;\n        ppiVar16 = ppiVar16 + 1;\n    }\n    lpString2 = *0x42a268;\n    uVar13 = 0;\n    lpBuffer = dwFileAttributes * 0x800 + 0x42b000;\n    *0x40ce54 = &var_30h;\n    iVar12 = var_30h * 0x800;\n    piVar17 = iVar12 + 0x42b000;\n    var_4h = NULL;\n    if (0x43 < var_34h - 2U) goto code_r0x00402c2a;\n    // switch table (68 cases) at 0x402c3c\n    switch(*((var_34h - 2U) * 4 + 0x402c3c)) {\n    case 0x401491:\ncode_r0x00401493:\n        fcn.004056ca(in_stack_fffffcb8, in_stack_fffffcbc);\n        return 0x7fffffff;\n    case 0x40149d:\n        *0x42922c = *0x42922c + 1;\n        if (*0x42a268 == NULL) {\n            return 0x7fffffff;\n        }\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        return 0x7fffffff;\n    case 0x4014b8:\n        iVar12 = fcn.0040136d(var_30h);\n        piVar10 = fcn.00401389(iVar12 + -1, 0);\n        return piVar10;\n    case 0x4014cb:\n        fcn.004056ca(var_30h, 0);\n        break;\n    case 0x4014d7:\n        uVar22 = fcn.00402d84(0);\n        lpKeyName = uVar22 >> 0x20;\n        iVar12 = uVar22;\n        if (iVar12 < 2) {\n            iVar12 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar12);\n        break;\n    case 0x4014f5:\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(*0x42a268);\n        break;\n    case 0x401503:\n        iVar12 = var_30h * 4;\n        if (nIDDlgItem == NULL) {\n            *(iVar12 + 0x42a340) = *(iVar12 + 0x42a2e0);\n            uVar13 = fcn.00402d84(1);\n            *(var_30h * 4 + 0x42a2e0) = uVar13;\n        }\n        else {\n            *(iVar12 + 0x42a2e0) = *(iVar12 + 0x42a340);\n        }\n        break;\n    case 0x401542:\n        puVar1 = nIDDlgItem * 4 + 0x42a2e0;\n        uVar8 = *puVar1;\n        piVar10 = (&var_30h)[uVar8 == 0];\n        *puVar1 = uVar8 & nNumberOfBytesToRead;\n        return piVar10;\n    case 0x401563:\n        goto code_r0x00402ba4;\n    case 0x401573:\n        if (*0x429230 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x429230, dwFileAttributes);\n        }\n        if (*0x429244 != 0) {\n            (*pcVar11)(*0x429244, var_30h);\n        }\n        break;\n    case 0x4015a3:\n        uVar13 = fcn.00402da6(0xfffffff0);\n        iVar12 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(uVar13, dwFileAttributes);\n        goto code_r0x004015b4;\n    case 0x4015c1:\n        hWndChildAfter = fcn.00402da6(0xfffffff0);\n        piVar17 = fcn.00405fe2(hWndChildAfter);\n        if (piVar17 != NULL) {\n            do {\n                piVar17 = fcn.00405f64(piVar17, 0x5c);\n                iVar2 = *piVar17;\n                *piVar17 = 0;\n                if (((iVar2 == 0) && (nIDDlgItem != NULL)) && (iVar12 = fcn.00405c33(),  iVar12 != 0)) {\n                    iVar12 = fcn.00405b99(hWndChildAfter);\n                }\n                else {\n                    iVar12 = fcn.00405c16(hWndChildAfter);\n                }\n                if ((iVar12 != 0) &&\n                   ((iVar12 != 0xb7 ||\n                    (uVar8 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(hWndChildAfter),  (uVar8 & 0x10) == 0)))) {\n                    var_4h = var_4h + 1;\n                }\n                *piVar17 = iVar2;\n                piVar17 = piVar17 + 1;\n            } while (iVar2 != 0);\n        }\n        if (dwFileAttributes == NULL) goto code_r0x004022f1;\n        fcn.00401423(0xffffffe6);\n        fcn.00406668(0x436000, hWndChildAfter);\n        iVar12 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(hWndChildAfter);\n        if (iVar12 == 0) {\n            var_4h = var_4h + 1;\n        }\n        break;\n    case 0x40166a:\n        uVar13 = fcn.00402da6(0);\n        iVar12 = fcn.0040699e(uVar13);\n        nNumberOfBytesToRead = dwFileAttributes;\n        goto joined_r0x00401a1e;\n    case 0x40167b:\n        uVar13 = fcn.00402da6(0xffffffd0);\n        uVar23 = fcn.00402da6(0xffffffdf);\n        fcn.00402da6(0x13);\n        iVar12 = (*_sym.imp.KERNEL32.dll_MoveFileW)(uVar13, uVar23);\n        if (iVar12 == 0) {\n            if ((nIDDlgItem == NULL) || (iVar12 = fcn.0040699e(uVar13),  iVar12 == 0)) goto code_r0x0040292e;\n            fcn.00406428(uVar13, uVar23);\n        }\n        goto code_r0x004022f1;\n    case 0x4016cc:\n        ppiVar15 = fcn.00402da6(0);\n        piVar17 = lpBuffer;\n        iVar12 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(ppiVar15, 0x400, lpBuffer, &hWndChildAfter);\n        if (iVar12 == 0) {\ncode_r0x00401710:\n            var_4h = 0x1;\n            *piVar17 = 0;\n        }\n        else if ((ppiVar15 < hWndChildAfter) && (*hWndChildAfter != 0)) {\n            iVar12 = fcn.0040699e(ppiVar15);\n            if (iVar12 == 0) goto code_r0x00401710;\n            fcn.00406668(hWndChildAfter, iVar12 + 0x2c);\n        }\n        if (nIDDlgItem == NULL) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameW)(piVar17, piVar17, 0x400);\n        }\n        break;\n    case 0x401735:\n        uVar13 = fcn.00402da6(0xffffffff);\n        iVar12 = (*_sym.imp.KERNEL32.dll_SearchPathW)(0, uVar13, 0, 0x400, piVar17, &hWndChildAfter);\n        bVar19 = iVar12 == 0;\n        goto code_r0x00401751;\n    case 0x40175c:\n        uVar13 = fcn.00402da6(0xffffffef);\n        iVar12 = fcn.00406187(piVar17, uVar13);\n        goto code_r0x004015b4;\n    case 0x40176f:\n        lpString2 = fcn.00402da6(0x31);\n        hWndChildAfter = var_30h & 7;\n        iVar12 = fcn.00405fae(lpString2);\n        if (iVar12 == 0) {\n            uVar23 = 0x436000;\n            uVar13 = fcn.00406668(0x40a5f8, 0x436000, lpString2);\n            uVar13 = fcn.00405f37(uVar13);\n            sub.KERNEL32.dll_lstrcatW(uVar13);\n        }\n        else {\n            uVar23 = 0x40a5f8;\n            fcn.00406668(0x40a5f8);\n        }\n        fcn.004068ef(0x40a5f8);\n        do {\n            if (2 < hWndChildAfter) {\n                iVar12 = fcn.0040699e(0x40a5f8);\n                uVar8 = 0;\n                if (iVar12 != 0) {\n                    uVar8 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(iVar12 + 0x14, &nNumberOfBytesToRead);\n                }\n                hWndChildAfter = ((hWndChildAfter - 3U | 0x80000000) & uVar8) == 0;\n            }\n            if (hWndChildAfter == NULL) {\n                fcn.00406133(0x40a5f8);\n            }\n            lpdwResult = fcn.00406158(0x40a5f8, 0x40000000, (hWndChildAfter != 0x1) + '\\x01');\n            if (lpdwResult != 0xffffffff) {\n                fcn.004056ca(0xffffffea, lpString2);\n                *0x42a314 = *0x42a314 + 1;\n                iVar12 = fcn.00403371(nIDDlgItem, lpdwResult, 0, 0);\n                *0x42a314 = *0x42a314 + -1;\n                if ((nNumberOfBytesToRead != 0xffffffff) || (var_20h != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)(lpdwResult, &nNumberOfBytesToRead, 0, &nNumberOfBytesToRead);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(lpdwResult);\n                if (-1 < iVar12) goto code_r0x00402c2a;\n                if (iVar12 == -2) {\n                    uVar7 = 0xffffffe9;\n                    fcn.004066a5(0x40a5f8, 0xffffffe9);\n                    uVar18 = 0x40a5f8;\n                    sub.KERNEL32.dll_lstrcatW(uVar23, lpString2, 0x40a5f8);\n                }\n                else {\n                    uVar7 = 0xffffffee;\n                    uVar18 = 0x40a5f8;\n                    fcn.004066a5(0x40a5f8, 0xffffffee);\n                }\n                uVar23 = 0x200010;\n                uVar13 = 0x40a5f8;\n                goto code_r0x00402398;\n            }\n            if (hWndChildAfter != NULL) {\n                fcn.004056ca(0xffffffe2, lpString2);\n                bVar19 = hWndChildAfter == 0x2;\n                goto code_r0x004015b6;\n            }\n            fcn.00406668(0x40b5f8, 0x42b000);\n            fcn.00406668(0x42b000, 0x40a5f8);\n            fcn.004066a5(0x40adf8, var_1ch);\n            fcn.00406668(0x42b000, 0x40b5f8);\n            iVar12 = fcn.00405cc8();\n        } while (iVar12 == 4);\n        if (iVar12 != 5) {\n            in_stack_fffffcbc = 0x40a5f8;\n            in_stack_fffffcb8 = 0xfffffffa;\n            goto code_r0x00401493;\n        }\n        *0x42a2e8 = *0x42a2e8 + 1;\n        goto code_r0x00402c33;\n    case 0x40190c:\n        uVar13 = 0;\n        goto code_r0x00401943;\n    case 0x40190f:\n        uVar13 = fcn.00402da6(0x31);\n        piVar10 = fcn.00405cc8(uVar13, var_30h);\n        if (piVar10 == NULL) goto code_r0x0040292e;\n        if (piVar10 == nIDDlgItem) {\n            return nNumberOfBytesToRead;\n        }\n        if (piVar10 == var_20h) {\n            return var_1ch;\n        }\n        break;\n    case 0x401941:\n        uVar13 = 0xfffffff0;\ncode_r0x00401943:\n        uVar13 = fcn.00402da6(uVar13);\n        fcn.00405d74(uVar13, dwFileAttributes);\n        break;\n    case 0x401956:\n        uVar13 = fcn.00402da6(1);\n        sub.KERNEL32.dll_lstrlenW(uVar13);\n        goto code_r0x00402ba4;\n    case 0x401968:\n        _var_14h = fcn.00402d84(2);\n        _var_3ch = fcn.00402d84(3);\n        iVar12 = _var_3ch;\n        hWndChildAfter = var_14h;\n        lpValueName = fcn.00402da6(1);\n        iVar9 = sub.KERNEL32.dll_lstrlenW(lpValueName);\n        *piVar17 = 0;\n        if (lpKeyName == NULL) {\n            hWndChildAfter = iVar9;\n        }\n        if ((hWndChildAfter != NULL) && ((-1 < var_3ch || (iVar12 = iVar9 + var_3ch,  -1 < iVar12)))) {\n            if (iVar9 < iVar12) {\n                iVar12 = iVar9;\n            }\n            fcn.00406668(piVar17, lpValueName + iVar12 * 2);\n            if (hWndChildAfter < 0) {\n                iVar12 = sub.KERNEL32.dll_lstrlenW(piVar17);\n                hWndChildAfter = hWndChildAfter + iVar12;\n                if (hWndChildAfter < 0) {\n                    hWndChildAfter = NULL;\n                }\n            }\n            if (hWndChildAfter < 0x400) {\n                piVar17[hWndChildAfter] = 0;\n            }\n        }\n        break;\n    case 0x4019ff:\n        uVar13 = fcn.00402da6(0x20);\n        uVar23 = fcn.00402da6(0x31);\n        if (var_20h == NULL) {\n            iVar12 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n        }\n        else {\n            iVar12 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(uVar13, uVar23);\n        }\n        goto joined_r0x00401a1e;\n    case 0x401a30:\n        hWndChildAfter = fcn.00402da6(1);\n        iVar9 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(hWndChildAfter, piVar17, 0x400);\n        if ((iVar9 == 0) ||\n           ((nIDDlgItem != NULL && (iVar9 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(hWndChildAfter, piVar17),  iVar9 == 0))))\n        {\n            var_4h = 0x1;\n            *piVar17 = 0;\n        }\n        *(iVar12 + 0x42b7fe) = 0;\n        break;\n    case 0x401a72:\n        uVar22 = fcn.00402d84(0);\n        lpKeyName = uVar22 >> 0x20;\n        uVar8 = uVar22;\n        uVar3 = fcn.00402d84(1);\n        if (var_1ch != NULL) {\n            if (uVar8 < uVar3) {\n                return nNumberOfBytesToRead;\n            }\n            if (uVar8 <= uVar3) {\n                return nIDDlgItem;\n            }\n            return var_20h;\n        }\n        if (uVar8 < uVar3) {\n            return nNumberOfBytesToRead;\n        }\n        if (uVar8 <= uVar3) {\n            return nIDDlgItem;\n        }\n        return var_20h;\n    case 0x401ab2:\n        uVar22 = fcn.00402d84(1);\n        uVar21 = fcn.00402d84(2);\n        lpKeyName = uVar22 >> 0x20;\n        hWndChildAfter = uVar22;\n        lpKeyName = uVar21 >> 0x20;\n        if (0xd < nNumberOfBytesToRead) goto code_r0x00402ba4;\n    // switch table (14 cases) at 0x402d4c\n        switch(*(nNumberOfBytesToRead * 4 + 0x402d4c)) {\n        case 0x401ae2:\n            break;\n        case 0x401ae9:\n            break;\n        case 0x401af0:\n            break;\n        case 0x401af5:\n            goto joined_r0x00401b3e;\n        case 0x401b05:\n            break;\n        case 0x401b09:\n            break;\n        case 0x401b0d:\n            break;\n        case 0x401b16:\n            break;\n        case 0x401b1f:\n            break;\n        case 0x401b2c:\n            break;\n        case 0x401b3c:\njoined_r0x00401b3e:\n            if (uVar21 == 0) {\n                var_4h = 0x1;\n            }\n            break;\n        case 0x401b5a:\n            break;\n        case 0x401b61:\n            break;\n        case 0x401b68:\n        }\n        goto code_r0x00402ba4;\n    case 0x401b77:\n        uVar13 = fcn.00402da6(1);\n        uVar22 = fcn.00402d84(2);\n        lpKeyName = uVar22 >> 0x20;\n        (*_sym.imp.USER32.dll_wsprintfW)(piVar17, uVar13, uVar22);\n        break;\n    case 0x401b9b:\n        ppiVar14 = *0x40ce58;\n        if (nIDDlgItem == NULL) {\n            if (dwFileAttributes != NULL) {\n                if (*0x40ce58 != NULL) {\n                    fcn.00406668(piVar17, *0x40ce58 + 1);\n                    *0x40ce58 = *ppiVar15;\n                    goto code_r0x00401c0b;\n                }\n                goto code_r0x0040292e;\n            }\n            ppiVar15 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x804);\n            fcn.004066a5(ppiVar15 + 1, var_30h);\n            *ppiVar15 = *0x40ce58;\n            *0x40ce58 = ppiVar15;\n        }\n        else {\n            do {\n                nIDDlgItem = nIDDlgItem - 1;\n                if (ppiVar14 == NULL) goto code_r0x0040238a;\n                ppiVar14 = *ppiVar14;\n            } while (nIDDlgItem != NULL);\n            if (ppiVar14 == NULL) goto code_r0x0040238a;\n            ppiVar14 = ppiVar14 + 1;\n            piVar17 = 0x40a5f8;\n            ppiVar15 = ppiVar14;\n            fcn.00406668(0x40a5f8, ppiVar14);\n            fcn.00406668(ppiVar14, *0x40ce58 + 1);\ncode_r0x00402a94:\n            fcn.00406668(piVar17, ppiVar15);\n        }\n        break;\n    case 0x401c43:\n        uVar22 = fcn.00402d84(3);\n        uVar20 = fcn.00402d84(4);\n        lpKeyName = uVar22 >> 0x20;\n        hWndParent = uVar22;\n        if ((var_1ch & 1) != 0) {\n            hWndParent = fcn.00402da6(0x33);\n            lpKeyName = uVar20 >> 0x20;\n            hWndChildAfter = uVar20;\n        }\n        if ((var_1ch & 2) != 0) {\n            uVar8 = fcn.00402da6(0x44);\n            lpKeyName = uVar20 >> 0x20;\n            hWndChildAfter = uVar20;\n            uVar20 = uVar20 & 0xffffffff00000000 | uVar8;\n        }\n        if (var_34h == 0x21) {\n            uVar22 = fcn.00402d84();\n            lpKeyName = uVar20 >> 0x20;\n            hWndChildAfter = uVar20;\n            lpKeyName = uVar22 >> 0x20;\n            uVar21 = fcn.00402d84(2);\n            lpKeyName = uVar21 >> 0x20;\n            if (var_1ch >> 2 == 0) {\n                lpdwResult = (*_sym.imp.USER32.dll_SendMessageW)(uVar22, uVar21, hWndParent, hWndChildAfter);\n                uVar20 = CONCAT44(lpKeyName, hWndChildAfter);\n                dwFileAttributes = var_30h;\n            }\n            else {\n                iVar12 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)\n                                   (uVar22, uVar21, hWndParent, hWndChildAfter, 0, var_1ch >> 2, &lpdwResult);\n                uVar20 = CONCAT44(lpKeyName, hWndChildAfter);\n                var_4h = iVar12 == 0;\n                dwFileAttributes = var_30h;\n            }\n        }\n        else {\n            piVar5 = fcn.00402da6(1);\n            lpKeyName = uVar20 >> 0x20;\n            hWndChildAfter = uVar20;\n            piVar4 = fcn.00402da6(0x12);\n            lpKeyName = uVar20 >> 0x20;\n            hWndChildAfter = uVar20;\n            lpdwResult = (*_sym.imp.USER32.dll_FindWindowExW)\n                                   (hWndParent, hWndChildAfter, -(*piVar5 != 0) & piVar5, -(*piVar4 != 0) & piVar4);\n            lpKeyName = uVar20 >> 0x20;\n            hWndChildAfter = uVar20;\n            dwFileAttributes = var_30h;\n        }\n        goto joined_r0x004028b8;\n    case 0x401d17:\n        uVar22 = fcn.00402d84(0);\n        lpKeyName = uVar22 >> 0x20;\n        iVar12 = (*_sym.imp.USER32.dll_IsWindow)(uVar22);\n        nNumberOfBytesToRead = dwFileAttributes;\njoined_r0x00401a1e:\n        if (iVar12 == 0) {\n            return nIDDlgItem;\n        }\n        return nNumberOfBytesToRead;\n    case 0x401d38:\n        uVar22 = fcn.00402d84(2);\n        lpKeyName = uVar22 >> 0x20;\n        uVar21 = fcn.00402d84(1);\n        lpKeyName = uVar21 >> 0x20;\n        (*_sym.imp.USER32.dll_GetDlgItem)(uVar21, uVar22);\n        goto code_r0x00402ba4;\n    case 0x401d5d:\n        iVar12 = *0x42a2a8 + dwFileAttributes;\n        uVar22 = fcn.00402d84(0);\n        lpKeyName = uVar22 >> 0x20;\n        (*_sym.imp.USER32.dll_SetWindowLongW)(uVar22, 0xffffffeb, iVar12);\n        break;\n    case 0x401d81:\n        if ((nNumberOfBytesToRead & 0x100) == 0) {\n            uVar13 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x42a268, nIDDlgItem);\n            uVar20 = CONCAT44(lpKeyName, uVar13);\n        }\n        else {\n            uVar20 = fcn.00402d84(2);\n        }\n        lpdwResult = nNumberOfBytesToRead & 3;\n        uVar8 = nNumberOfBytesToRead & 4;\n        hWndParent = nNumberOfBytesToRead >> 0x1f;\n        lpNumberOfBytesRead = nNumberOfBytesToRead >> 0x1e & 1;\n        if ((nNumberOfBytesToRead & 0x10000) == 0) {\n            lpValueName = dwFileAttributes & 0xffff;\n        }\n        else {\n            lpValueName = fcn.00402da6(0x11);\n            lpKeyName = uVar20 >> 0x20;\n            hWndChildAfter = uVar20;\n        }\n        hWndChildAfter = uVar20;\n        (*_sym.imp.USER32.dll_GetClientRect)(hWndChildAfter, &lpRect);\n        lpKeyName = uVar20 >> 0x20;\n        hWndChildAfter = uVar20;\n        uVar13 = (*_sym.imp.USER32.dll_LoadImageW)\n                           (-(uVar8 != 0) & *0x42a260, lpValueName, lpdwResult, \n                            CONCAT22(var_58h._2_2_, var_58h) * hWndParent, \n                            CONCAT22(var_54h._2_2_, var_54h) * lpNumberOfBytesRead, nNumberOfBytesToRead & 0xfef0);\n        lpKeyName = uVar20 >> 0x20;\n        hWndChildAfter = uVar20;\n        iVar12 = (*_sym.imp.USER32.dll_SendMessageW)(hWndChildAfter, 0x172, lpdwResult, uVar13);\n        lpKeyName = uVar20 >> 0x20;\n        hWndChildAfter = uVar20;\n        dwFileAttributes = var_30h;\n        if ((iVar12 != 0) && (lpdwResult == NULL)) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar12);\n            lpKeyName = uVar20 >> 0x20;\n            hWndChildAfter = uVar20;\n            dwFileAttributes = var_30h;\n        }\njoined_r0x004028b8:\n        lpKeyName = uVar20 >> 0x20;\n        hWndChildAfter = uVar20;\n        if (-1 < dwFileAttributes) goto code_r0x00402ba4;\n        break;\n    case 0x401e4e:\n        uVar13 = (*_sym.imp.USER32.dll_GetDC)(*0x42a268);\n        uVar22 = fcn.00402d84(2);\n        lpKeyName = uVar22 >> 0x20;\n        uVar23 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar13, 0x5a, 0x48);\n        *0x40cdf8 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar22, uVar23);\n        *0x40cdf8 = -*0x40cdf8;\n        (*_sym.imp.USER32.dll_ReleaseDC)(lpString2, uVar13);\n        uVar22 = fcn.00402d84(3);\n        *0x40ce0c = var_20h & 1;\n        *0x40ce0f = 1;\n        *0x40ce0d = var_20h & 2;\n        *0x40ce0e = var_20h & 4;\n        fcn.004066a5(0x40ce14, dwFileAttributes);\n        lpKeyName = uVar22 >> 0x20;\n        *0x40ce08 = uVar22;\n        (*_sym.imp.GDI32.dll_CreateFontIndirectW)(0x40cdf8);\n        lpKeyName = uVar22 >> 0x20;\n        *0x40ce08 = uVar22;\n        goto code_r0x00402ba4;\n    case 0x401ede:\n        uVar22 = fcn.00402d84(0);\n        lpKeyName = uVar22 >> 0x20;\n        uVar21 = fcn.00402d84(1);\n        lpKeyName = uVar21 >> 0x20;\n        if (nNumberOfBytesToRead == NULL) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar22, uVar21);\n        }\n        break;\n    case 0x401f12:\n        piVar17 = fcn.00402da6(0);\n        iVar12 = 0x31;\n        var_7ch = fcn.00402da6(0x31);\n        piVar5 = fcn.00402da6(0x22);\n        fcn.00402da6(0x15);\n        fcn.00401423(0xffffffec);\n        var_88h = var_20h;\n        var_84h = lpString2;\n        lpFileOp = nNumberOfBytesToRead;\n        var_80h = -(*piVar17 != 0) & piVar17;\n        var_74h = 0x436000;\n        var_78h = -(*piVar5 != 0) & piVar5;\n        iVar9 = fcn.00405c8e(&var_8ch);\n        if (iVar9 == 0) goto code_r0x0040292e;\n        if ((var_88h & 0x40) != 0) {\n            fcn.00406ae0(CONCAT22(var_54h._2_2_, var_54h));\n            goto code_r0x00401feb;\n        }\n        break;\n    case 0x401fa4:\n        uVar13 = fcn.00402da6(0);\n        fcn.004056ca(0xffffffeb, uVar13);\n        iVar12 = fcn.00405c4b(uVar13);\n        if (iVar12 == 0) goto code_r0x0040292e;\n        if (nIDDlgItem != NULL) {\n            iVar9 = fcn.00406ae0(iVar12);\n            if (dwFileAttributes < 0) {\n                if (iVar9 != 0) {\n                    var_4h = 0x1;\n                }\n            }\n            else {\n                fcn.004065af(lpBuffer, iVar9);\n            }\n        }\ncode_r0x00401feb:\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar12);\n        break;\n    case 0x401ff6:\n        uVar13 = fcn.00402da6(2);\n        iVar12 = fcn.0040699e(uVar13);\n        if (iVar12 != 0) {\n            fcn.004065af(lpBuffer, *(iVar12 + 0x14));\n            goto code_r0x00402ba4;\n        }\n        *piVar17 = 0;\n        *lpBuffer = 0;\n        goto code_r0x0040292e;\n    case 0x40202a:\n        lpdwResult = fcn.00402da6(0xffffffee);\n        pcVar11 = fcn.00406a35(10, lpdwResult, &lpKeyName);\n        iVar12 = (*pcVar11)();\n        *piVar17 = 0;\n        *lpBuffer = 0;\n        var_4h = 0x1;\n        if ((iVar12 != 0) &&\n           (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar12),  hWndChildAfter != NULL)) {\n            lpNumberOfBytesRead = fcn.00406a35(0xb);\n            hWndParent = fcn.00406a35(0xc);\n            iVar12 = (*lpNumberOfBytesRead)(lpdwResult, 0, iVar12, hWndChildAfter);\n            ppiVar15 = hWndChildAfter;\n            if ((iVar12 != 0) &&\n               (ppiVar14 = hWndChildAfter, \n               iVar12 = (*hWndParent)(hWndChildAfter, 0x40a014, &lpValueName, &lDistanceToMove), \n               ppiVar15 = hWndChildAfter,  iVar12 != 0)) {\n                uVar13 = *(lpValueName + 8 + nNumberOfBytesToRead * 4);\n                fcn.004065af(piVar17, uVar13);\n                fcn.004065af(ppiVar14, *(lpValueName + 0xc + nNumberOfBytesToRead * 4), piVar17, uVar13, lpBuffer);\n                var_4h = NULL;\n                ppiVar15 = hWndChildAfter;\n            }\ncode_r0x00401c0b:\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar15);\n        }\n        break;\n    case 0x4020d7:\n        var_4h = 0x1;\n        if (-1 < *0x42a320) {\n            uVar13 = fcn.00402da6(0xfffffff0);\n            lpValueName = fcn.00402da6(1);\n            if (((var_20h != NULL) &&\n                (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(uVar13),  hWndChildAfter != NULL)) ||\n               (hWndChildAfter = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(uVar13, 0, 8),  hWndChildAfter != NULL)) {\n                pcVar11 = fcn.00406aa4(hWndChildAfter, lpValueName);\n                if (pcVar11 == NULL) {\n                    fcn.004056ca(0xfffffff7, lpValueName);\n                }\n                else {\n                    var_4h = NULL;\n                    if (nIDDlgItem == NULL) {\n                        (*pcVar11)(lpString2, 0x400, 0x42b000, 0x40ce58, 0x40a000);\n                    }\n                    else {\n                        fcn.00401423(nIDDlgItem);\n                        iVar12 = (*pcVar11)();\n                        if (iVar12 != 0) {\n                            var_4h = 0x1;\n                        }\n                    }\n                }\n                if ((nNumberOfBytesToRead == NULL) && (iVar12 = fcn.00403cb7(hWndChildAfter),  iVar12 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(hWndChildAfter);\n                }\n                break;\n            }\n        }\n        goto code_r0x004022f1;\n    case 0x4021aa:\n        lpKeyName = fcn.00402da6(0xfffffff0);\n        lpValueName = fcn.00402da6(0xffffffdf);\n        lpString2 = fcn.00402da6(2);\n        lDistanceToMove = fcn.00402da6(0xffffffcd);\n        lpBuffer = fcn.00402da6(0x45);\n        var_50h = var_20h & 0xfff;\n        lpNumberOfBytesRead = var_20h >> 0x10 & 0xffff;\n        uVar8 = var_20h >> 0xc & 7;\n        iVar12 = fcn.00405fae(lpValueName);\n        if (iVar12 == 0) {\n            fcn.00402da6(0x21);\n        }\n        iVar12 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x4084e4, 0, 1, 0x4084d4, &hWndChildAfter);\n        if (-1 < iVar12) {\n            hWndParent = (***hWndChildAfter)(hWndChildAfter, 0x4084f4, &lpdwResult);\n            if (-1 < hWndParent) {\n                hWndParent = (*(*hWndChildAfter)[0x14])(hWndChildAfter, lpValueName);\n                if ((var_20h & 0x8000) == 0) {\n                    (*(*hWndChildAfter)[9])(hWndChildAfter, 0x436000);\n                }\n                if (uVar8 != 0) {\n                    (*(*hWndChildAfter)[0xf])(hWndChildAfter, uVar8);\n                }\n                (*(*hWndChildAfter)[0xd])(hWndChildAfter, lpNumberOfBytesRead);\n                if (*lDistanceToMove != 0) {\n                    (*(*hWndChildAfter)[0x11])(hWndChildAfter, lDistanceToMove, var_50h);\n                }\n                (*(*hWndChildAfter)[0xb])(hWndChildAfter, lpString2);\n                (*(*hWndChildAfter)[7])(hWndChildAfter, lpBuffer);\n                if (-1 < hWndParent) {\n                    hWndParent = (**(*lpdwResult + 0x18))(lpdwResult, lpKeyName, 1);\n                }\n                (**(*lpdwResult + 8))(lpdwResult);\n            }\n            (*(*hWndChildAfter)[2])(hWndChildAfter);\n            if (-1 < hWndParent) goto code_r0x004022f1;\n        }\n        var_4h = 0x1;\n        goto code_r0x004022f1;\n    case 0x4022ff:\n        iVar12 = fcn.00402da6(0);\n        iVar9 = fcn.00402da6(0x11);\n        hWndChildAfter = fcn.00402da6(0x23);\n        iVar6 = fcn.0040699e(iVar12);\n        if (iVar6 != 0) {\n            lpFileOp = lpString2;\n            var_6ch = 2;\n            iVar6 = sub.KERNEL32.dll_lstrlenW(iVar12);\n            *(iVar12 + 2 + iVar6 * 2) = 0;\n            iVar6 = sub.KERNEL32.dll_lstrlenW(iVar9);\n            *(iVar9 + 2 + iVar6 * 2) = 0;\n            var_58h._2_2_ = SUB42(hWndChildAfter, 0);\n            var_54h._0_2_ = hWndChildAfter >> 0x10;\n            lpRect._0_2_ = nIDDlgItem._0_2_;\n            var_68h = iVar12;\n            var_64h = iVar9;\n            fcn.004056ca(0, hWndChildAfter);\n            iVar12 = (*_sym.imp.SHELL32.dll_SHFileOperationW)(&lpFileOp);\n            if (iVar12 == 0) break;\n        }\n        fcn.004056ca(0xfffffff9, 0);\n        goto code_r0x0040292e;\n    case 0x402383:\n        if (var_30h != 0xbadf00d) {\ncode_r0x0040238a:\n            uVar7 = 0x200010;\n            uVar18 = 0xffffffe8;\n            uVar23 = 0;\n            uVar13 = fcn.004066a5(0, 0xffffffe8);\ncode_r0x00402398:\n            fcn.00405cc8(uVar13, uVar23, uVar18, uVar7);\n            return 0x7fffffff;\n        }\n        *0x42a2f4 = *0x42a2f4 + 1;\n        break;\n    case 0x4023b2:\n        uVar23 = 0;\n        uVar18 = 0;\n        if (var_30h != NULL) {\n            uVar23 = fcn.00402da6(0);\n        }\n        if (dwFileAttributes != NULL) {\n            uVar18 = fcn.00402da6(0x11);\n        }\n        if (var_20h != NULL) {\n            uVar13 = fcn.00402da6(0x22);\n        }\n        uVar7 = fcn.00402da6(0xffffffcd);\n        iVar12 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(uVar23, uVar18, uVar13, uVar7);\ncode_r0x004015b4:\n        bVar19 = iVar12 == 0;\ncode_r0x004015b6:\n        if (bVar19) goto code_r0x0040292e;\n        break;\n    case 0x4023f4:\n        hWndChildAfter = *0x40a010;\n        uVar13 = fcn.00402da6(1);\n        lpKeyName = fcn.00402da6(0x12);\n        uVar23 = fcn.00402da6(0xffffffdd);\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)(uVar13, lpKeyName, &hWndChildAfter, piVar17, 0x3ff, uVar23);\n        bVar19 = *piVar17 == 10;\ncode_r0x00401751:\n        if (bVar19) {\ncode_r0x004028fc:\n            var_4h = 0x1;\n            *piVar17 = 0;\n        }\n        break;\n    case 0x402434:\n        if (var_20h == NULL) {\n            iVar9 = fcn.00402de6(2);\n            if (iVar9 == 0) goto code_r0x0040292e;\n            uVar13 = fcn.00402da6(0x33);\n            iVar12 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(iVar9, uVar13);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar9);\n        }\n        else {\n            uVar13 = fcn.00402da6(0x22);\n            iVar12 = fcn.00402e64(dwFileAttributes, uVar13, var_20h >> 1);\n        }\n        if (iVar12 != 0) goto code_r0x0040292e;\n        break;\n    case 0x40248a:\n        lpKeyName = var_1ch;\n        lpValueName = fcn.00402da6(2);\n        uVar13 = fcn.00402da6(0x11);\n        var_4h = 0x1;\n        hWndChildAfter = fcn.00402e36(var_30h, uVar13, 2);\n        if (hWndChildAfter != NULL) {\n            piVar10 = NULL;\n            if (var_20h == 0x1) {\n                fcn.00402da6(0x23);\n                iVar12 = sub.KERNEL32.dll_lstrlenW(0x40b5f8);\n                piVar10 = iVar12 * 2 + 2;\n            }\n            uVar22 = CONCAT44(lpdwResult, *0x40b5f8);\n            if (var_20h == 0x4) {\n                uVar22 = fcn.00402d84(3);\n                piVar10 = var_20h;\n            }\n            if (var_20h == 0x3) {\n                piVar10 = fcn.00403371(nNumberOfBytesToRead, 0, 0x40b5f8, 0x1800);\n                lpdwResult = uVar22 >> 0x20;\n                *0x40b5f8 = uVar22;\n            }\n            iVar12 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                               (hWndChildAfter, lpValueName, 0, lpKeyName, 0x40b5f8, piVar10);\n            lpdwResult = uVar22 >> 0x20;\n            *0x40b5f8 = uVar22;\n            ppiVar15 = hWndChildAfter;\n            if (iVar12 == 0) {\n                var_4h = NULL;\n            }\ncode_r0x004025fd:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(ppiVar15);\n            lpdwResult = uVar22 >> 0x20;\n            *0x40b5f8 = uVar22;\n        }\n        break;\n    case 0x40252a:\n        ppiVar15 = fcn.00402de6(0x20019);\n        uVar13 = fcn.00402da6(0x33);\n        *piVar17 = 0;\n        if (ppiVar15 != NULL) {\n            lpKeyName = 0x800;\n            iVar9 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(ppiVar15, uVar13, 0, &hWndChildAfter, piVar17, &lpKeyName)\n            ;\n            if (iVar9 == 0) {\n                if (hWndChildAfter == 0x4) {\n                    var_4h = var_20h == NULL;\n                    fcn.004065af();\n                    uVar22 = CONCAT44(lpdwResult, *0x40b5f8);\n                    goto code_r0x004025fd;\n                }\n                if ((hWndChildAfter == 0x1) || (hWndChildAfter == 0x2)) {\n                    var_4h = var_20h;\n                    goto code_r0x004025f5;\n                }\n            }\n            *piVar17 = 0;\n            uVar22 = CONCAT44(lpdwResult, *0x40b5f8);\n            var_4h = 0x1;\n            goto code_r0x004025fd;\n        }\n        goto code_r0x0040292e;\n    case 0x40259e:\n        ppiVar15 = fcn.00402de6(0x20019);\n        uVar22 = fcn.00402d84(3);\n        lpKeyName = uVar22 >> 0x20;\n        *piVar17 = 0;\n        if (ppiVar15 != NULL) {\n            hWndChildAfter = 0x3ff;\n            if (var_20h == NULL) {\n                iVar9 = (*_sym.imp.ADVAPI32.dll_RegEnumValueW)(ppiVar15, uVar22, piVar17, &hWndChildAfter, 0, 0, 0, 0);\n                if (iVar9 != 0) {\n                    var_4h = 0x1;\n                }\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyW)(ppiVar15, uVar22, piVar17, 0x3ff);\n            }\ncode_r0x004025f5:\n            *(iVar12 + 0x42b7fe) = 0;\n            uVar22 = CONCAT44(lpdwResult, *0x40b5f8);\n            goto code_r0x004025fd;\n        }\n        goto code_r0x0040292e;\n    case 0x402608:\n        iVar12 = fcn.004065c8(piVar17);\n        if (iVar12 != 0) goto code_r0x00401feb;\n        break;\n    case 0x40261c:\n        uVar13 = fcn.00402da6(0xffffffed);\n        iVar12 = fcn.00406158(uVar13, dwFileAttributes, nIDDlgItem);\n        if (iVar12 == -1) goto code_r0x0040292b;\ncode_r0x00402ba4:\n        fcn.004065af(piVar17);\n        break;\n    case 0x40263e:\n        lpKeyName = nIDDlgItem;\n        if (nIDDlgItem == NULL) {\n            if (var_34h == 0x38) {\n                fcn.00402da6(0x21);\n                fcn.0040668a(0x40b5f8, 0x40adf8, 0x400);\n                hWndChildAfter = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x40adf8);\n            }\n            else {\n                uVar13 = fcn.00402da6(0x11);\n                iVar12 = sub.KERNEL32.dll_lstrlenW(uVar13);\n                hWndChildAfter = iVar12 * 2;\n            }\n        }\n        else {\n            *0x40adf8 = fcn.00402d84(1);\n            hWndChildAfter = ((var_34h == 0x38) == 0) + 1;\n            lpValueName = extraout_EDX;\n        }\n        if ((*piVar17 != 0) &&\n           (((uVar13 = fcn.004065c8(piVar17),  (var_34h == 0x38 | lpKeyName) != 0 || (nNumberOfBytesToRead == NULL)) ||\n            (iVar12 = fcn.00406239(uVar13, uVar13),  -1 < iVar12)))) {\n            iVar12 = fcn.0040620a(uVar13, 0x40adf8, hWndChildAfter);\n            goto code_r0x004015b4;\n        }\n        goto code_r0x0040292e;\n    case 0x4026ec:\n        lpString2 = NULL;\n        lDistanceToMove = 0x2;\n        uVar22 = fcn.00402d84(2);\n        lpKeyName = uVar22 >> 0x20;\n        lpValueName = uVar22;\n        if (lpValueName < 1) break;\n        if (0x3ff < lpValueName) {\n            lpValueName = 0x3ff;\n        }\n        if (*piVar17 != 0) {\n            lpdwResult = NULL;\n            hWndParent = fcn.004065c8(piVar17);\n            pcVar11 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n            if (0 < lpValueName) {\n                do {\n                    if (var_34h == 0x39) {\n                        uVar8 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                          (hWndParent, &hWndChildAfter + 2, 2 - nNumberOfBytesToRead, \n                                           &lpNumberOfBytesRead, 0);\n                        if ((uVar8 != 0) && (lpNumberOfBytesRead != NULL)) {\n                            var_50h = uVar8 & 0xffff0000 | hWndChildAfter >> 0x10 & 0xff;\n                            lDistanceToMove = lpNumberOfBytesRead;\n                            if (nNumberOfBytesToRead == NULL) {\n                                iVar12 = (*pcVar11)(0, 8, &hWndChildAfter + 2, lpNumberOfBytesRead, &var_50h, 1);\n                                if (iVar12 == 0) {\n                                    iVar12 = -lDistanceToMove;\n                                    do {\n                                        lpNumberOfBytesRead = lpNumberOfBytesRead + -1;\n                                        var_50h = 0xfffd;\n                                        if (lpNumberOfBytesRead == NULL) break;\n                                        lDistanceToMove = lDistanceToMove + -1;\n                                        iVar12 = iVar12 + 1;\n                                        (*_sym.imp.KERNEL32.dll_SetFilePointer)(hWndParent, iVar12, 0, 1);\n                                        iVar9 = (*pcVar11)(0, 8, &hWndChildAfter + 2, lpNumberOfBytesRead, &var_50h, 1);\n                                    } while (iVar9 == 0);\n                                }\n                                goto code_r0x00402804;\n                            }\ncode_r0x0040283a:\n                            fcn.004065af(lpBuffer, var_50h & 0xffff);\n                            goto code_r0x00402c33;\n                        }\n                        break;\n                    }\n                    if ((((nNumberOfBytesToRead == NULL) && (lpString2 == NULL)) &&\n                        (iVar12 = fcn.00406239(hWndParent, 0),  iVar12 < 0)) ||\n                       (iVar12 = fcn.004061db(hWndParent, &var_50h, 2),  iVar12 == 0)) break;\ncode_r0x00402804:\n                    if (nNumberOfBytesToRead != NULL) goto code_r0x0040283a;\n                    iVar2 = var_50h;\n                    if ((lpdwResult == 0xd) || (lpdwResult == 10)) {\n                        if ((lpdwResult == iVar2) || ((iVar2 != 0xd && (iVar2 != 10)))) {\n                            (*_sym.imp.KERNEL32.dll_SetFilePointer)(hWndParent, -lDistanceToMove, 0, 1);\n                        }\n                        else {\n                            lpBuffer[lpString2] = iVar2;\n                            lpString2 = lpString2 + 1;\n                        }\n                        break;\n                    }\n                    iVar12 = lpString2 + 1;\n                    lpBuffer[lpString2] = iVar2;\n                    lpString2 = iVar12;\n                    if ((iVar2 == 0) || (lpdwResult = var_50h,  lpValueName <= iVar12)) break;\n                } while( true );\n            }\n        }\n        bVar19 = lpString2 == NULL;\n        lpBuffer[lpString2] = 0;\n        goto code_r0x004015b6;\n    case 0x40288f:\n        if (*piVar17 != 0) {\n            uVar22 = fcn.00402d84(2);\n            uVar23 = 0;\n            uVar13 = fcn.004065c8(piVar17);\n            lpKeyName = uVar22 >> 0x20;\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar13, piVar17, uVar22, uVar23, nNumberOfBytesToRead);\n            uVar20 = CONCAT44(lpKeyName, hWndChildAfter);\n            piVar17 = lpBuffer;\n            goto joined_r0x004028b8;\n        }\n        break;\n    case 0x4028c4:\n        iVar12 = fcn.004065c8(piVar17);\n        if (iVar12 != 0) {\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar12);\n        }\n        break;\n    case 0x4028de:\n        iVar12 = fcn.004065c8(lpBuffer);\n        if ((iVar12 != 0) && (iVar12 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar12, &lpFindFileData),  iVar12 != 0)) {\ncode_r0x00402943:\n            ppiVar15 = &var_2b0h;\n            goto code_r0x00402a94;\n        }\n        goto code_r0x004028fc;\n    case 0x40290b:\n        uVar13 = fcn.00402da6(2);\n        iVar12 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(uVar13, &lpFindFileData);\n        if (iVar12 != -1) {\n            fcn.004065af(lpBuffer, iVar12);\n            goto code_r0x00402943;\n        }\n        *lpBuffer = 0;\ncode_r0x0040292b:\n        *piVar17 = 0;\ncode_r0x0040292e:\n        var_4h = 0x1;\n        break;\n    case 0x402950:\n        iVar9 = -0x29a;\n        pcVar11 = fcn.00402da6(0xfffffff0);\n        lpNumberOfBytesRead = pcVar11;\n        iVar12 = fcn.00405fae(pcVar11);\n        if (iVar12 == 0) {\n            fcn.00402da6(0xffffffed);\n        }\n        fcn.00406133(pcVar11);\n        hWndChildAfter = fcn.00406158(pcVar11, 0x40000000, 2);\n        pcVar11 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        if (hWndChildAfter != 0xffffffff) {\n            lpdwResult = dwFileAttributes;\n            if (nIDDlgItem != NULL) {\n                lpValueName = *0x42a274;\n                iVar12 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x42a274);\n                if (iVar12 != 0) {\n                    fcn.004035f8(0);\n                    fcn.004035e2(iVar12, lpValueName);\n                    piVar10 = (*pcVar11)(0x40, nIDDlgItem);\n                    lpKeyName = piVar10;\n                    if (piVar10 != NULL) {\n                        fcn.00403371(dwFileAttributes, 0, piVar10, nIDDlgItem);\n                        for (; *piVar10 != '\\0'; piVar10 = piVar10 + var_3ch + 8) {\n                            var_3ch = *piVar10;\n                            dwFileAttributes = piVar10[1] + iVar12;\n                            fcn.00406113();\n                        }\n                        (*_sym.imp.KERNEL32.dll_GlobalFree)(lpKeyName, dwFileAttributes);\n                    }\n                    fcn.0040620a(hWndChildAfter, iVar12, lpValueName);\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar12);\n                    lpdwResult = 0xffffffff;\n                }\n            }\n            iVar9 = fcn.00403371(lpdwResult, hWndChildAfter, 0, 0);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hWndChildAfter);\n        }\n        if (iVar9 < 0) {\n            (*_sym.imp.KERNEL32.dll_DeleteFileW)(lpNumberOfBytesRead);\n            var_4h = 0x1;\n        }\ncode_r0x004022f1:\n        fcn.00401423();\n        break;\n    case 0x402a5b:\n        uVar22 = fcn.00402d84(0);\n        lpKeyName = uVar22 >> 0x20;\n        uVar8 = uVar22;\n        if (*0x42a28c <= uVar8) goto code_r0x0040292e;\n        iVar12 = uVar8 * 0x818 + *0x42a288;\n        if (-1 < nIDDlgItem) {\n            piVar17 = lpBuffer;\n            if (nIDDlgItem == NULL) {\n                ppiVar15 = iVar12 + 0x18;\n                goto code_r0x00402a94;\n            }\n            goto code_r0x00402ba4;\n        }\n        nIDDlgItem = -1 - nIDDlgItem;\n        if (nIDDlgItem == NULL) {\n            fcn.004066a5(iVar12 + 0x18, var_20h);\n            uVar22 = CONCAT44(lpKeyName, dwFileAttributes);\n            *(iVar12 + 9) = *(iVar12 + 9) | 1;\n        }\n        else {\n            uVar22 = fcn.00402d84(1);\n        }\n        dwFileAttributes = uVar22;\n        *(iVar12 + nIDDlgItem * 4) = dwFileAttributes;\n        if (nNumberOfBytesToRead != NULL) {\n            fcn.0040117d(uVar8);\n            lpKeyName = uVar22 >> 0x20;\n            dwFileAttributes = uVar22;\n        }\n        break;\n    case 0x402aeb:\n        uVar22 = fcn.00402d84(0);\n        lpKeyName = uVar22 >> 0x20;\n        uVar8 = uVar22;\n        if (0x1f < uVar8) goto code_r0x0040292e;\n        if (nNumberOfBytesToRead == NULL) {\n            if (nIDDlgItem == NULL) {\n                fcn.004066a5(lpBuffer, *(*0x42a270 + 0x94 + uVar8 * 4));\n            }\n            else {\n                *(*0x42a270 + 0x94 + uVar8 * 4) = dwFileAttributes;\n            }\n        }\n        else {\n            if (nIDDlgItem == NULL) {\n                fcn.004012e2(0);\n                piVar17 = lpBuffer;\n                goto code_r0x00402ba4;\n            }\n            fcn.00401299(uVar8);\n            fcn.004011ef(0, 0);\n        }\n        break;\n    case 0x402b59:\n        if (nNumberOfBytesToRead == NULL) {\n            pcVar11 = fcn.00406a35(5);\n            uVar13 = fcn.00402da6(0x22);\n            if (((pcVar11 == NULL) || (iVar12 = (*_sym.imp.ole32.dll_IIDFromString)(uVar13, &lpRect),  iVar12 < 0)) ||\n               (iVar12 = (*pcVar11)(&lpRect, nNumberOfBytesToRead, 0, &hWndChildAfter),  iVar12 < 0)) {\n                var_4h = 0x1;\n                *lpBuffer = 0;\n            }\n            else {\n                fcn.00406668(lpBuffer, hWndChildAfter);\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(hWndChildAfter);\n            }\n        }\n        else if (nNumberOfBytesToRead == 0x1) {\n            uVar22 = fcn.00402d84(2);\n            lpKeyName = uVar22 >> 0x20;\n            iVar12 = uVar22;\n            uVar22 = fcn.00402d84(4);\n            lpKeyName = uVar22 >> 0x20;\n            hWndChildAfter = NULL;\n            if (iVar12 == 0) {\n                iVar12 = 0x42a2e0;\n            }\n            fcn.00406113(&hWndChildAfter, (uVar22 >> 0x18) + iVar12, uVar22 & 0xff);\n            piVar17 = lpBuffer;\n            goto code_r0x00402ba4;\n        }\n        break;\n    case 0x402c05:\n        (*_sym.imp.USER32.dll_SendMessageW)(*0x42a268, 0xb, *0x425748 & var_30h, 0);\n        if (var_30h != NULL) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(lpString2, 0, 0);\n        }\n        break;\n    case 0x402c35:\n        goto code_r0x00402c35;\n    }\ncode_r0x00402c2a:\n    *0x42a2e8 = *0x42a2e8 + var_4h;\ncode_r0x00402c33:\n    var_30h = NULL;\ncode_r0x00402c35:\n    return var_30h;\n}\n",
        "token_count": 14735
    },
    "004030d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar16_t * __cdecl fcn.004030d0(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint lpFileName;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t dwBytes;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_8h = 0;\n    *0x42a26c = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x42a26c = *0x42a26c + 1000;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x438800, 0x400);\n    puVar1 = fcn.00406158(0x438800, 0x80000000, 3);\n    if (puVar1 == 0xffffffff) {\n        *0x40a018 = puVar1;\n        return L\"Error launching installer\";\n    }\n    *0x40a018 = puVar1;\n    fcn.00406668(0x436800, 0x438800);\n    uVar2 = fcn.00405f83(0x436800);\n    fcn.00406668(0x439000, uVar2);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(puVar1, 0);\n    *0x420f00 = uVar3;\n    for (; uVar3 != 0; uVar3 = uVar3 - uVar8) {\n        uVar4 = (-(*0x42a274 != 0) & 0x7e00) + 0x200;\n        uVar8 = uVar3;\n        if (uVar4 <= uVar3) {\n            uVar8 = uVar4;\n        }\n        puVar1 = 0x418ef0;\n        iVar5 = fcn.004035e2();\n        if (iVar5 == 0) {\n            fcn.0040302e(1);\n            goto code_r0x00403322;\n        }\n        if (*0x42a274 == 0) {\n            puVar1 = &var_24h;\n            fcn.00406113();\n            if (((((var_24h & 0xfffffff0) == 0) && (var_20h == -0x21524111)) && (var_14h == 0x74736e49)) &&\n               ((var_18h == 0x74666f73 && (var_1ch == 0x6c6c754e)))) {\n                arg_8h = arg_8h | var_24h;\n                *0x42a300 = *0x42a300 | arg_8h & 2;\n                *0x42a274 = *0x420ef0;\n                if (uVar3 < var_ch) goto code_r0x00403322;\n                if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                var_8h = var_8h + 1;\n                uVar3 = var_ch - 4;\n                if (uVar3 < uVar8) {\n                    uVar8 = uVar3;\n                }\n            }\n        }\n        else if ((arg_8h & 2) == 0) {\n            fcn.0040302e(0);\n        }\n        if (uVar3 < *0x420f00) {\n            puVar6 = fcn.00406b22();\n            puVar1 = var_4h;\n            var_4h = puVar6;\n        }\n        *0x420ef0 = *0x420ef0 + uVar8;\n    }\n    fcn.0040302e(1);\n    if (*0x42a274 != 0) {\n        if (var_8h != 0) {\n            fcn.004035f8(*0x420ef0, puVar1);\n            iVar5 = fcn.004035e2(&arg_8h, 4);\n            if ((iVar5 == 0) || (var_4h != arg_8h)) goto code_r0x00403322;\n        }\n        puVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n        fcn.00406b90();\n        fcn.00406187(&lpFileName, 0x437800);\n        *0x40a01c = (*_sym.imp.KERNEL32.dll_CreateFileW)(&lpFileName, 0xc0000000, 0, 0, 2, 0x4000100, 0);\n        if (*0x40a01c == -1) {\n            return L\"Error writing temporary file. Make sure your temp folder is valid.\";\n        }\n        *0x420f04 = fcn.004035f8(*0x42a274 + 0x1c);\n        *0x420ef8 = (*0x420f04 - (~var_24h & 4)) + -0x1c + var_ch;\n        iVar5 = fcn.00403371(0xffffffff, 0, puVar1, dwBytes);\n        if (iVar5 == dwBytes) {\n            *0x42a278 = *puVar1;\n            if ((var_24h & 1) != 0) {\n                *0x42a27c = *0x42a27c + 1;\n            }\n            piVar7 = puVar1 + 0x11;\n            iVar5 = 8;\n            *0x42a270 = puVar1;\n            do {\n                piVar7 = piVar7 + -2;\n                *piVar7 = *piVar7 + puVar1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            puVar1[0xf] = *0x420ef4;\n            fcn.00406113(0x42a280, puVar1 + 1, 0x40);\n            return NULL;\n        }\n    }\ncode_r0x00403322:\n    return \n    L\"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n    ;\n}\n",
        "token_count": 1508
    },
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    uint32_t *puVar10;\n    char *arg_8h;\n    char16_t *pcVar11;\n    uint psfi;\n    uint var_140h;\n    uint32_t var_13ch;\n    uint var_138h;\n    uint32_t var_134h;\n    uint var_12ch;\n    uint var_112h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint NewState;\n    uint var_20h;\n    uint var_18h;\n    int32_t uExitCode;\n    int32_t *var_10h;\n    uint32_t *TokenHandle;\n    int32_t var_8h;\n    char16_t *var_4h;\n    \n    uExitCode = 0;\n    var_4h = L\"Error writing temporary file. Make sure your temp folder is valid.\";\n    var_10h = NULL;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(0x8001);\n    pcVar3 = _sym.imp.KERNEL32.dll_GetVersionExW;\n    var_12ch = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_140h = 0x11c;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(&var_140h);\n    if (iVar2 == 0) {\n        var_140h = 0x114;\n        (*pcVar3)(&var_140h);\n        var_28h._0_3_ = CONCAT12(4, var_28h);\n        var_28h = var_28h & 0xff000000 | var_28h;\n        var_2ch = var_2ch & 0xffff0000 | ~-(var_12ch != 0x53) & var_112h - 0x30U;\n    }\n    if (var_13ch < 10) {\n        var_134h = var_134h & 0xffff;\n    }\n    *0x42a318 = var_134h;\n    *0x42a31c = CONCAT11(var_13ch, var_138h) << 0x10 | (var_2ch & 0xff) << 8 | var_28h >> 0x10 & 0xff;\n    if ((CONCAT11(var_13ch, var_138h) != 0x600) && (pcVar3 = fcn.00406a35(0),  pcVar3 != NULL)) {\n        (*pcVar3)(0xc00);\n    }\n    arg_8h = \"UXTHEME\";\n    do {\n        fcn.004069c5(arg_8h);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n        arg_8h = arg_8h + iVar2 + 1;\n    } while (*arg_8h != '\\0');\n    fcn.00406a35(0xb);\n    *0x42a264 = fcn.00406a35(9);\n    pcVar3 = fcn.00406a35(7);\n    if ((pcVar3 != NULL) && (iVar2 = (*pcVar3)(0x1e),  iVar2 != 0)) {\n        *0x42a31c = *0x42a31c | 0x80;\n    }\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    *0x42a320 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoW)(0x421708, 0, &psfi, 0x2b4, 0);\n    fcn.00406668(0x429260, L\"NSIS Error\");\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    fcn.00406668(0x435000, uVar4);\n    uVar5 = 0x435000;\n    *0x42a260 = 0x400000;\n    uVar4 = 0x20;\n    if (*0x435000 == 0x22) {\n        uVar5 = 0x435002;\n        uVar4 = 0x22;\n    }\n    puVar6 = fcn.00405f64(uVar5, uVar4);\n    puVar7 = (*_sym.imp.USER32.dll_CharNextW)(puVar6);\n    TokenHandle = puVar7;\n    while( true ) {\n        iVar1 = *puVar7;\n        if (iVar1 == 0) break;\n        while (iVar1 == 0x20) {\n            puVar7 = puVar7 + 2;\n            iVar1 = *puVar7;\n        }\n        var_8h = 0x20;\n        if (*puVar7 == 0x22) {\n            puVar7 = puVar7 + 2;\n            var_8h = 0x22;\n        }\n        puVar10 = puVar7;\n        if (*puVar7 == 0x2f) {\n            puVar10 = puVar7 + 2;\n            if ((*puVar10 == 0x53) && ((*(puVar7 + 1) == 0x20 || (*(puVar7 + 1) == 0)))) {\n                *0x42a300 = 1;\n            }\n            if (((*puVar10 == CONCAT22(str.NCRC[1], str.NCRC[0])) &&\n                (*(puVar7 + 6) == (CONCAT22(str.NCRC[3], str.NCRC[2]) | str.NCRC[1] >> 0xf))) &&\n               ((*(puVar7 + 10) == 0x20 || (*(puVar7 + 10) == 0)))) {\n                var_10h = var_10h | 4;\n            }\n            if ((*(puVar7 + -2) == CONCAT22(str.__D[1], str.__D[0])) &&\n               (*puVar10 == (CONCAT22(str.__D[3], str.__D[2]) | str.__D[1] >> 0xf))) {\n                *(puVar7 + -2) = 0;\n                fcn.00406668(0x435800, puVar7 + 6);\n                break;\n            }\n        }\n        puVar7 = fcn.00405f64();\n        puVar6 = puVar10;\n        if (*puVar7 == 0x22) {\n            puVar7 = puVar7 + 2;\n        }\n    }\n    pcVar3 = _sym.imp.KERNEL32.dll_GetTempPathW;\n    uVar4 = 0x437800;\n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x400, 0x437800, puVar6);\n    iVar2 = fcn.0040360f();\n    if (iVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(0x437800, 0x3fb);\n        pcVar11 = 0x437800;\n        sub.KERNEL32.dll_lstrcatW(0x437800, L\"\\\\Temp\");\n        iVar2 = fcn.0040360f();\n        if (iVar2 == 0) {\n            (*pcVar3)(0x3fc, 0x437800);\n            sub.KERNEL32.dll_lstrcatW(0x437800, 0x40a358);\n            pcVar3 = _sym.imp.KERNEL32.dll_SetEnvironmentVariableW;\n            (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(L\"TEMP\", 0x437800);\n            (*pcVar3)(0x40a344, 0x437800);\n            iVar2 = fcn.0040360f();\n            if (iVar2 == 0) goto code_r0x00403b6c;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteFileW)(0x437000);\n    pcVar11 = var_10h;\n    var_4h = fcn.004030d0(var_10h);\n    if (var_4h != NULL) goto code_r0x00403b6c;\n    if (*0x42a27c != 0) {\n        piVar8 = fcn.00405f64(0x435000, 0);\n        if (0x434fff < piVar8) {\n            do {\n                if ((*piVar8 == CONCAT22(str.___[1], str.___[0])) &&\n                   (piVar8[1] == (CONCAT22(str.___[3], str.___[2]) | str.___[1] >> 0xf))) break;\n                piVar8 = piVar8 + -2;\n            } while (0x434fff < piVar8);\n        }\n        var_4h = L\"Error launching installer\";\n        if (piVar8 < 0x435000) {\n            iVar2 = fcn.00405c33();\n            uVar5 = 0x40a32c;\n            sub.KERNEL32.dll_lstrcatW(0x437800, 0x40a32c);\n            if (iVar2 != 0) {\n                sub.KERNEL32.dll_lstrcatW(0x437800, 0x40a328);\n            }\n            pcVar11 = L\".tmp\";\n            sub.KERNEL32.dll_lstrcatW(0x437800, L\".tmp\");\n            iVar9 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(0x437800, 0x436800);\n            if (iVar9 != 0) {\n                if (iVar2 == 0) {\n                    fcn.00405c16();\n                }\n                else {\n                    fcn.00405b99(0x437800);\n                }\n                (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(0x437800);\n                if (*0x435800 == 0) {\n                    uVar5 = 0x435800;\n                    fcn.00406668();\n                }\n                fcn.00406668(0x42b000, TokenHandle, uVar5);\n                *0x42b800 = CONCAT22(*0x40a316, *0x40a314);\n                var_8h = 0x1a;\n                do {\n                    fcn.004066a5(0x420f08, *(*0x42a270 + 0x120));\n                    (*_sym.imp.KERNEL32.dll_DeleteFileW)(0x420f08);\n                    if ((var_4h != NULL) &&\n                       (iVar2 = (*_sym.imp.KERNEL32.dll_CopyFileW)(0x438800, 0x420f08, 1),  iVar2 != 0)) {\n                        fcn.00406428(0x420f08, 0);\n                        fcn.004066a5(0x420f08, *(*0x42a270 + 0x124));\n                        iVar2 = fcn.00405c4b(0x420f08);\n                        if (iVar2 != 0) {\n                            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n                            var_4h = NULL;\n                        }\n                    }\n                    *0x42b800 = *0x42b800 + 1;\n                    *0x42b800 = *0x42b800 & 0xffff0000 | *0x42b800;\n                    var_8h = var_8h + -1;\n                } while (var_8h != 0);\n                pcVar11 = 0x437800;\n                fcn.00406428(0x437800, 0);\n            }\n            goto code_r0x00403b6c;\n        }\n        *piVar8 = 0;\n        piVar8 = piVar8 + 2;\n        pcVar11 = piVar8;\n        iVar2 = fcn.0040603f();\n        if (iVar2 == 0) goto code_r0x00403b6c;\n        fcn.00406668(0x435800, piVar8);\n        pcVar11 = 0x436000;\n        fcn.00406668(0x436000, piVar8);\n        var_4h = NULL;\n    }\n    *0x42a30c = -1;\n    uExitCode = fcn.00403d17();\ncode_r0x00403b6c:\n    fcn.00403c25(pcVar11);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    if (var_4h != NULL) {\n        fcn.00405cc8(var_4h, 0x200010);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(2);\n    }\n    if (*0x42a2f4 != 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &TokenHandle);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar4);\n        if (iVar2 != 0) {\n            (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, L\"SeShutdownPrivilege\", &var_20h);\n            NewState = 1;\n            var_18h = 2;\n            (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(TokenHandle, 0, &NewState, 0, 0, 0);\n        }\n        pcVar3 = fcn.00406a35(4);\n        uVar4 = 0x80040002;\n        if (((pcVar3 != NULL) && (iVar2 = (*pcVar3)(0, 0, 0, 0x25, 0x80040002),  iVar2 == 0)) ||\n           (iVar2 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0x80040002),  iVar2 == 0)) {\n            fcn.0040140b(9);\n        }\n    }\n    if (*0x42a30c != -1) {\n        uExitCode = *0x42a30c;\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(uExitCode);\n    pcVar3 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (*0x40a018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a018, uVar4);\n        *0x40a018 = -1;\n    }\n    if (*0x40a01c != -1) {\n        (*pcVar3)(*0x40a01c, uVar4);\n        *0x40a01c = -1;\n    }\n    fcn.00403c82();\n    fcn.00405d74(0x438000, 7);\n    return;\n}\n",
        "token_count": 3355
    },
    "00403c25": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00403c25(void)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (*0x40a018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a018);\n        *0x40a018 = -1;\n    }\n    if (*0x40a01c != -1) {\n        (*pcVar1)(*0x40a01c);\n        *0x40a01c = -1;\n    }\n    fcn.00403c82();\n    fcn.00405d74(0x438000, 7);\n    return;\n}\n",
        "token_count": 150
    },
    "00403d17": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00403d17(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    \n    iVar7 = *0x42a270;\n    pcVar2 = fcn.00406a35();\n    if (pcVar2 == NULL) {\n        *0x437000 = 0x30;\n        *0x437002 = 0x78;\n        *0x437004 = 0;\n        fcn.00406536(0x80000001, L\"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x423748, 0);\n        if (*0x423748 == 0) {\n            fcn.00406536(0x80000003, L\".DEFAULT\\\\Control Panel\\\\International\", L\"Locale\", 0x423748, 0);\n        }\n        sub.KERNEL32.dll_lstrcatW();\n    }\n    else {\n        (*pcVar2)();\n        fcn.004065af();\n    }\n    fcn.00403fed();\n    *0x42a2e0 = *0x42a278 & 0x20;\n    *0x42a2fc = 0x10000;\n    iVar3 = fcn.0040603f();\n    if ((iVar3 == 0) && (*(iVar7 + 0x48) != 0)) {\n        uVar6 = 0x428200;\n        fcn.00406536(*(iVar7 + 0x44), *0x42a298 + *(iVar7 + 0x48) * 2, *0x42a298 + *(iVar7 + 0x4c) * 2, 0x428200, 0);\n        if (*0x428200 != 0) {\n            if (*0x428200 == 0x22) {\n                uVar6 = 0x428202;\n                puVar4 = fcn.00405f64();\n                *puVar4 = 0;\n            }\n            iVar3 = sub.KERNEL32.dll_lstrlenW();\n            if (((uVar6 < (uVar6 - 8) + iVar3 * 2) && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(),  iVar3 == 0)) &&\n               ((uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(),  uVar6 == 0xffffffff || ((uVar6 & 0x10) == 0))))\n            {\n                fcn.00405f83();\n            }\n            fcn.00405f37();\n            fcn.00406668();\n        }\n    }\n    iVar3 = fcn.0040603f();\n    if (iVar3 == 0) {\n        uStack148 = 0x403e6e;\n        fcn.004066a5(0x435800, *(iVar7 + 0x118));\n    }\n    uStack148 = 0x8040;\n    uStack152 = 0;\n    uStack156 = 0;\n    iVar9 = 1;\n    iVar8 = 0x67;\n    iVar3 = *0x42a260;\n    *0x429248 = (*_sym.imp.USER32.dll_LoadImageW)(*0x42a260, 0x67, 1);\n    if (*(iVar7 + 0x50) == -1) {\ncode_r0x00403f14:\n        iVar7 = fcn.0040140b(0);\n        if (iVar7 == 0) {\n            fcn.00403fed();\n            if (*0x42a300 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x423728, 5);\n                iVar7 = fcn.004069c5(\"RichEd20\");\n                if (iVar7 == 0) {\n                    fcn.004069c5(\"RichEd32\");\n                }\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoW;\n                iVar7 = (*_sym.imp.USER32.dll_GetClassInfoW)(0, L\"RichEdit20W\", 0x429200);\n                if (iVar7 == 0) {\n                    (*pcVar2)(0, L\"RichEdit\", 0x429200);\n                    *0x429224 = L\"RichEdit20W\";\n                    (*_sym.imp.USER32.dll_RegisterClassW)(0x429200);\n                }\n                uVar5 = (*_sym.imp.USER32.dll_DialogBoxParamW)(*0x42a260, *0x429240 + 0x69U & 0xffff, 0, 0x4040c5, 0);\n                fcn.0040140b(5);\n                fcn.00403c67(1);\n                return uVar5;\n            }\n            iVar7 = fcn.0040579d(0);\n            if (iVar7 == 0) {\n                fcn.0040140b(1);\n                goto code_r0x00403fe3;\n            }\n            if (*0x42922c == 0) {\n                fcn.0040140b(2);\n            }\n        }\n        uVar5 = 2;\n    }\n    else {\n        iVar7 = 0x429200;\n        *0x429204 = fcn.00401000;\n        *0x429210 = *0x42a260;\n        *0x429224 = 0x40a3b4;\n        *0x429214 = *0x429248;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterClassW)(0x429200);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &stack0xffffff64, 0);\n            *0x423728 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                                  (0x80, 0x40a3b4, 0, 0x80000000, iVar7, iVar3, iVar8 - iVar7, iVar9 - iVar3, 0, 0, \n                                   *0x42a260, 0);\n            goto code_r0x00403f14;\n        }\ncode_r0x00403fe3:\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 1441
    },
    "00405031": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405031(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint32_t *var_3ch;\n    uint32_t *var_38h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_20h;\n    uint32_t *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    uVar2 = arg_8h;\n    var_4h = (*pcVar1)(arg_8h, 0x408);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_14h = *0x42a288;\n    var_18h = *0x42a270 + 0x94;\n    if (arg_ch == 0x110) {\n        var_20h = 0;\n        var_10h = 2;\n        *0x42a2c0 = arg_8h;\n        *0x423740 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x42a28c << 2);\n        uVar2 = (*_sym.imp.USER32.dll_LoadImageW)(*0x42a260, 0x6e, 0, 0, 0, 0);\n        *0x423734 = 0xffffffff;\n        *0x42373c = (*_sym.imp.USER32.dll_SetWindowLongW)(var_4h, 0xfffffffc, fcn.0040563e);\n        *0x42372c = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.dll_ImageList_AddMasked)(*0x42372c, uVar2, 0xff00ff);\n        (*pcVar1)(var_4h, 0x1109, 2, *0x42372c);\n        iVar3 = (*pcVar1)(var_4h, 0x111c, 0, 0);\n        if (iVar3 < 0x10) {\n            (*pcVar1)(var_4h, 0x111b, 0x10, 0);\n        }\n        (*_sym.imp.GDI32.dll_DeleteObject)(uVar2);\n        iVar3 = 0;\n        do {\n            iVar6 = *(var_18h + iVar3 * 4);\n            if (iVar6 != 0) {\n                if (iVar3 != 0x20) {\n                    var_10h = 0;\n                }\n                uVar2 = fcn.004066a5(0, iVar6);\n                uVar2 = (*pcVar1)(var_8h, 0x143, 0, uVar2);\n                (*pcVar1)(var_8h, 0x151, uVar2, iVar3);\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x21);\n        fcn.004045c4(arg_8h, 0x15, *(arg_14h + 0x30 + var_10h * 4));\n        fcn.004045c4(arg_8h, 0x16, *(arg_14h + 0x34 + var_10h * 4));\n        iVar3 = 0;\n        var_ch = 0;\n        if (*0x42a28c < 1) {\ncode_r0x0040526a:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(var_4h, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongW)(var_4h, 0xfffffff0, uVar4 & 0xfffffffb);\n        }\n        else {\n            var_1ch = var_14h + 8;\n            do {\n                puVar7 = var_1ch + 4;\n                if (*puVar7 != 0) {\n                    uVar4 = *var_1ch;\n                    var_54h = var_ch;\n                    var_50h = 0xffff0002;\n                    var_44h = uVar4 & 0x20;\n                    var_4ch = 0xd;\n                    var_40h = 0x20;\n                    var_3ch = puVar7;\n                    var_28h = iVar3;\n                    if ((uVar4 & 2) == 0) {\n                        if ((uVar4 & 4) == 0) {\n                            uVar2 = (*pcVar1)(var_4h, 0x1132, 0, &var_54h);\n                            *(*0x423740 + iVar3 * 4) = uVar2;\n                        }\n                        else {\n                            var_ch = (*pcVar1)(var_4h, 0x110a, 3, var_ch);\n                        }\n                    }\n                    else {\n                        var_4ch = 0x4d;\n                        var_2ch = 1;\n                        uVar2 = (*pcVar1)(var_4h, 0x1132, 0, &var_54h);\n                        var_20h = 1;\n                        *(*0x423740 + iVar3 * 4) = uVar2;\n                        var_ch = *(*0x423740 + iVar3 * 4);\n                    }\n                }\n                iVar3 = iVar3 + 1;\n                var_1ch = var_1ch + 0x206;\n            } while (iVar3 < *0x42a28c);\n            if (var_20h == 0) goto code_r0x0040526a;\n        }\n        if (var_10h == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_8h, 5);\n            fcn.004045f9(var_8h);\n            goto code_r0x00405629;\n        }\n        uVar2 = var_4h;\n        fcn.004045f9(var_4h);\n    }\n    if (arg_ch == 0x405) {\n        arg_10h = 0;\n        arg_ch = 0x40f;\n        arg_14h = 1;\n    }\n    if (((arg_ch == 0x4e) || (arg_ch == 0x413)) && ((var_ch = arg_14h,  arg_ch == 0x413 || (*(arg_14h + 4) == 0x408))))\n    {\n        if (((*0x42a278 & 0x200) == 0) &&\n           (((arg_ch == 0x413 || (*(arg_14h + 8) == -2)) && (iVar3 = fcn.00404f7f(var_4h, arg_ch != 0x413),  -1 < iVar3)\n            ))) {\n            puVar7 = iVar3 * 0x818 + 8 + var_14h;\n            uVar4 = *puVar7;\n            if ((uVar4 & 0x10) == 0) {\n                if ((uVar4 & 0x40) == 0) {\n                    uVar4 = uVar4 ^ 1;\n                }\n                else {\n                    uVar5 = uVar4 ^ 0x80;\n                    if (uVar5 < '\\0') {\n                        uVar4 = uVar4 & 0xffffff00 | uVar5 & 0xff | 1;\n                    }\n                    else {\n                        uVar4 = uVar4 & 0xffffff00 | uVar5 & 0xfe;\n                    }\n                }\n                *puVar7 = uVar4;\n                fcn.0040117d(iVar3);\n                arg_10h = iVar3 + 1;\n                arg_14h = ~*0x42a278 >> 8 & 1;\n                arg_ch = 0x40f;\n            }\n        }\n        if (var_ch != 0) {\n            if (*(var_ch + 8) == -0x1c3) {\n                (*pcVar1)(var_4h, 0x419, 0, *(var_ch + 0x5c));\n            }\n            if (*(var_ch + 8) == -0x1c7) {\n                if (*(var_ch + 0xc) == 2) {\n                    puVar7 = *(var_ch + 0x5c) * 0x818 + 8 + var_14h;\n                    *puVar7 = *puVar7 | 0x20;\n                }\n                else {\n                    puVar7 = *(var_ch + 0x5c) * 0x818 + 8 + var_14h;\n                    *puVar7 = *puVar7 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) || (iVar3 = (*pcVar1)(var_8h, 0x147, 0, 0),  iVar3 == -1))\n        goto code_r0x00405629;\n        iVar3 = (*pcVar1)(var_8h, 0x150, iVar3, 0);\n        if ((iVar3 == -1) || (*(var_18h + iVar3 * 4) == 0)) {\n            iVar3 = 0x20;\n        }\n        fcn.00401299(iVar3);\n        (*pcVar1)(arg_8h, 0x420, 0, iVar3);\n        arg_10h = -1;\n        arg_14h = 0;\n        arg_ch = 0x40f;\n    }\n    if (arg_ch == 0x200) {\n        (*pcVar1)(var_4h, 0x200, 0, 0);\n    }\n    if (arg_ch == 0x40b) {\n        if (*0x42372c != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*0x42372c);\n        }\n        if (*0x423740 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x423740);\n        }\n        *0x42372c = 0;\n        *0x423740 = 0;\n        *0x42a2c0 = 0;\n    }\n    if (arg_ch == 0x40f) {\n        uVar2 = 0;\n        fcn.004011ef(0, 0);\n        if (arg_10h != 0) {\n            uVar2 = 8;\n            fcn.00404fff();\n        }\n        if (arg_14h != 0) {\n            iVar3 = *0x423740;\n            arg_14h = fcn.004012e2(*0x423740);\n            fcn.00401299(arg_14h, iVar3, uVar2);\n            iVar3 = 0;\n            iVar6 = 0;\n            if (0 < arg_14h) {\n                do {\n                    if (*(var_18h + iVar3 * 4) != 0) {\n                        iVar6 = iVar6 + 1;\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < arg_14h);\n            }\n            (*pcVar1)(var_8h, 0x14e, iVar6, 0);\n            arg_ch = 0x420;\n        }\n        uVar2 = 0;\n        fcn.004011ef(0, 0);\n        var_20h = *0x423740;\n        var_3ch = 0xf030;\n        var_14h = 0;\n        if (0 < *0x42a28c) {\n            puVar7 = *0x42a288 + 8;\n            do {\n                uVar4 = *(var_20h + var_14h * 4);\n                if (uVar4 != 0) {\n                    uVar5 = *puVar7;\n                    var_48h = 8;\n                    if ((uVar5 & 0x100) != 0) {\n                        var_38h = puVar7 + 4;\n                        var_48h = 9;\n                        *(puVar7 + 1) = *(puVar7 + 1) & 0xfe;\n                    }\n                    if ((uVar5 & 0x40) == 0) {\n                        iVar3 = (uVar5 & 1) + 1;\n                        if ((uVar5 & 0x10) != 0) {\n                            iVar3 = (uVar5 & 1) + 4;\n                        }\n                    }\n                    else {\n                        iVar3 = 3;\n                    }\n                    var_40h = (iVar3 << 0xb | uVar5 & 8) * 2 | uVar5 & 0x20;\n                    var_44h = uVar4;\n                    (*pcVar1)(var_4h, 0x1102, (uVar5 >> 5 & 1U) + 1, uVar4);\n                    (*pcVar1)(var_4h, 0x113f, 0, &var_48h);\n                }\n                var_14h = var_14h + 1;\n                puVar7 = puVar7 + 0x206;\n            } while (var_14h < *0x42a28c);\n        }\n        if (*0x42a31e == 0x400) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(var_4h, 0, 1);\n        }\n        if (*(*0x42923c + 0x10) != 0) {\n            fcn.00404f52(5);\n            uVar2 = 0x3ff;\n            fcn.00404f3a();\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x42a278 & 0x100) != 0)) {\n        iVar3 = (arg_14h == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(var_4h, iVar3, uVar2);\n        uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe, iVar3);\n        (*pcVar1)(uVar2);\n    }\ncode_r0x00405629:\n    fcn.0040462b(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 3422
    },
    "00405809": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405809(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    ushort *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint uStack32;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar10 = *0x429244;\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar9 = 0;\n    var_4h = *0x429244;\n    if (arg_ch == 0x110) {\n        var_30h = 0xffffffff;\n        var_24h = 0xffffffff;\n        var_38h = 2;\n        var_34h = 0;\n        var_2ch = NULL;\n        var_28h = 0;\n        var_20h = 0;\n        uStack32 = 0;\n        iVar10 = *(*0x42a270 + 0x5c);\n        iVar9 = *(*0x42a270 + 0x60);\n        *0x429230 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x429228 = (*pcVar1)(arg_8h, 0x3ee);\n        *0x429244 = (*pcVar1)(arg_8h, 0x3f8);\n        var_4h = *0x429244;\n        fcn.004045f9(*0x429230);\n        *0x429234 = fcn.00404f52(4);\n        *0x42924c = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(var_4h, &var_18h);\n        var_30h = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n        var_30h = var_10h - var_30h;\n        (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1061, 0, &var_38h);\n        (*pcVar2)(var_4h, 0x1036, 0x4000, 0x4000);\n        if (-1 < iVar10) {\n            (*pcVar2)(var_4h, 0x1001, 0, iVar10);\n            (*pcVar2)(var_4h, 0x1026, 0, iVar10);\n        }\n        if (-1 < iVar9) {\n            (*pcVar2)(var_4h, 0x1024, 0, iVar9);\n        }\n        fcn.004045c4(arg_8h, 0x1b, *(arg_14h + 0x30));\n        if ((*0x42a278 & 3) != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x429230, 0);\n            if ((*0x42a278 & 2) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(var_4h, 8);\n            }\n            else {\n                *0x429230 = 0;\n            }\n            fcn.004045f9(*0x429228);\n        }\n        uVar3 = (*pcVar1)(arg_8h, 0x3ec);\n        (*pcVar2)(uVar3, 0x401, 0, 0x75300000);\n        if ((*0x42a278 & 4) != 0) {\n            (*pcVar2)(uVar3, 0x409, 0, iVar9);\n            (*pcVar2)(uVar3, 0x2001, 0, iVar10);\n        }\ncode_r0x00405b92:\n        uVar3 = 0;\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec, 0, &var_8h);\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040579d, uVar3);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        }\n        pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n        if (arg_ch == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x429230, 0);\n                (*pcVar1)(iVar10, 8);\n                fcn.004045f9(iVar10);\n                goto code_r0x00405a0f;\n            }\n        }\n        else {\ncode_r0x00405a0f:\n            iVar10 = 1;\n            if (arg_ch == 0x404) {\n                if (*0x42922c != 0) {\n                    *0x421f18 = 2;\n                    fcn.0040459d();\n                    goto code_r0x00405a34;\n                }\n                (*pcVar1)(*0x42a268, 8);\n                if (*0x42a2ec == 0) {\n                    fcn.004056ca(*(*0x422720 + 0x34), 0);\n                }\n                fcn.0040459d(1);\n            }\n            if ((arg_ch == 0x7b) && (arg_10h == var_4h)) {\n                iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1004, 0, 0);\n                if (0 < iVar4) {\n                    uVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    uVar5 = fcn.004066a5(0, 0xffffffe1);\n                    (*_sym.imp.USER32.dll_AppendMenuW)(uVar3, 0, 1, uVar5);\n                    iVar6 = arg_14h;\n                    iVar8 = arg_14h >> 0x10;\n                    if (arg_14h == -1) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(var_4h, &var_18h);\n                        iVar6 = var_18h;\n                        iVar8 = var_14h;\n                    }\n                    iVar6 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar3, 0x180, iVar6, iVar8, 0, arg_8h, 0);\n                    if (iVar6 == 1) {\n                        var_38h = 0;\n                        var_2ch = 0x423748;\n                        var_28h = 0x1000;\n                        arg_8h = iVar4;\n                        do {\n                            arg_8h = arg_8h + -1;\n                            iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1073, arg_8h, &var_40h);\n                            iVar10 = iVar10 + 2 + iVar6;\n                        } while (arg_8h != 0);\n                        (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                        (*_sym.imp.USER32.dll_EmptyClipboard)();\n                        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar10 * 2);\n                        puVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                        do {\n                            var_2ch = puVar7;\n                            iVar10 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1073, iVar9, &var_40h);\n                            puVar7 = puVar7 + iVar10;\n                            *puVar7 = 0xd;\n                            puVar7[1] = 10;\n                            puVar7 = puVar7 + 2;\n                            iVar9 = iVar9 + 1;\n                        } while (iVar9 < iVar4);\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n                        (*_sym.imp.USER32.dll_SetClipboardData)(0xd, uVar3);\n                        (*_sym.imp.USER32.dll_CloseClipboard)();\n                    }\n                }\n                goto code_r0x00405b92;\n            }\n        }\ncode_r0x00405a34:\n        uVar3 = fcn.0040462b(arg_ch, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 2007
    },
    "00405d2c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405d2c(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t unaff_retaddr;\n    \n    iVar1 = fcn.00406133(param_1);\n    if (iVar1 != -1) {\n        if ((param_1 & 1) == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(param_1);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)();\n        }\n        if (iVar2 != 0) {\n            return 1;\n        }\n        if ((unaff_retaddr & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(param_1, iVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 188
    },
    "00405d74": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405d74(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint lpFindFileData;\n    uint var_22ch;\n    int16_t var_228h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch & 4;\n    var_8h = fcn.0040603f(arg_8h);\n    if ((arg_ch & 8) == 0) {\n        uVar1 = arg_ch & 1;\n        if ((uVar1 == 0) || ((var_8h != 0 && ((arg_ch & 2) != 0)))) {\n            fcn.00406668(0x425750, arg_8h);\n            if (uVar1 == 0) {\n                fcn.00405f83(arg_8h);\n            }\n            else {\n                sub.KERNEL32.dll_lstrcatW(0x425750, L\"\\\\*.*\");\n            }\n            if ((*arg_8h != 0) || (*0x425750 == 0x5c)) {\n                sub.KERNEL32.dll_lstrcatW(arg_8h, 0x40a014);\n            }\n            iVar2 = sub.KERNEL32.dll_lstrlenW(arg_8h);\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(0x425750, &lpFindFileData);\n            if (iVar3 != -1) {\n                do {\n                    if ((var_22ch != 0x2e) || ((var_22ch._2_2_ != 0 && ((var_22ch._2_2_ != 0x2e || (var_228h != 0))))))\n                    {\n                        fcn.00406668(arg_8h + iVar2, &var_22ch);\n                        if ((lpFindFileData & 0x10) == 0) {\n                            iVar4 = fcn.00405d2c(arg_8h, var_4h);\n                            if (iVar4 == 0) {\n                                if (var_4h == 0) {\n                                    *0x42a2e8 = *0x42a2e8 + 1;\n                                }\n                                else {\n                                    fcn.004056ca(0xfffffff1, arg_8h);\n                                    fcn.00406428(arg_8h, 0);\n                                }\n                            }\n                            else {\n                                fcn.004056ca(0xfffffff2, arg_8h);\n                            }\n                        }\n                        else if ((arg_ch & 3) == 3) {\n                            fcn.00405d74(arg_8h, arg_ch);\n                        }\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3, &lpFindFileData);\n                } while (iVar4 != 0);\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n            }\n            if (uVar1 != 0) {\n                (arg_8h + iVar2)[-1] = 0;\n            }\n        }\n        if (uVar1 != 0) {\n            if (var_8h != 0) {\n                iVar2 = fcn.0040699e(arg_8h);\n                if (iVar2 == 0) {\n                    return;\n                }\n                fcn.00405f37(arg_8h);\n                iVar2 = fcn.00405d2c(arg_8h, var_4h | 1);\n                if (iVar2 != 0) {\n                    fcn.004056ca(0xffffffe5, arg_8h);\n                    return;\n                }\n                if (var_4h != 0) {\n                    fcn.004056ca(0xfffffff1, arg_8h);\n                    fcn.00406428(arg_8h, 0);\n                    return;\n                }\n            }\n            *0x42a2e8 = *0x42a2e8 + 1;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(arg_8h);\n        *0x42a2e8 = *0x42a2e8 + (iVar2 == 0);\n    }\n    return;\n}\n",
        "token_count": 981
    },
    "0040603f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.0040603f(uint param_1)\n\n{\n    int16_t *piVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int16_t *piVar5;\n    \n    fcn.00406668(0x425f50, param_1);\n    piVar1 = fcn.00405fe2(0x425f50);\n    if ((piVar1 != NULL) &&\n       ((piVar5 = piVar1,  fcn.004068ef(piVar1),  (*0x42a278 & 0x80) == 0 || ((*piVar1 != 0 && (*piVar1 != 0x5c)))))) {\n        while( true ) {\n            uVar4 = 0x425f50;\n            iVar3 = sub.KERNEL32.dll_lstrlenW(0x425f50);\n            if (iVar3 <= piVar1 + -0x212fa8 >> 1) {\n                fcn.00405f37(0x425f50, uVar4, piVar5);\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(0x425f50);\n                return iVar3 != -1;\n            }\n            puVar2 = fcn.0040699e(0x425f50);\n            if ((puVar2 != NULL) && ((*puVar2 & 0x10) == 0)) break;\n            piVar5 = 0x425f50;\n            fcn.00405f83();\n        }\n    }\n    return false;\n}\n",
        "token_count": 351
    },
    "00406133": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00406133(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(unaff_retaddr, uVar1 & 0xfffffffe);\n    }\n    return uVar1;\n}\n",
        "token_count": 103
    },
    "004062ae": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004062ae(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *hFile;\n    uchar *arg_10h;\n    int32_t lpBuffer;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetShortPathNameW;\n    *0x426de8 = 0x55004e;\n    *0x426dec = 0x4c;\n    if (param_2 != 0) {\n        uVar2 = fcn.00406158(param_2, 0, 1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n        iVar3 = (*pcVar1)(param_2, 0x426de8, 0x400);\n        if (iVar3 == 0) {\n            return;\n        }\n        if (0x400 < iVar3) {\n            return;\n        }\n    }\n    iVar3 = (*pcVar1)(param_1, 0x4275e8, 0x400);\n    if ((iVar3 != 0) && (iVar3 < 0x401)) {\n        iVar3 = (*_sym.imp.USER32.dll_wsprintfA)(0x4269e8, \"%ls=%ls\\r\\n\", 0x426de8, 0x4275e8);\n        fcn.004066a5(0x4275e8, *(*0x42a270 + 0x128));\n        hFile = fcn.00406158(0x4275e8, 0xc0000000, 4);\n        if (hFile != 0xffffffff) {\n            arg_10h = (*_sym.imp.KERNEL32.dll_GetFileSize)(hFile, 0);\n            lpBuffer = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, arg_10h + iVar3 + 10);\n            if ((lpBuffer != 0) && (puVar7 = arg_10h,  iVar4 = fcn.004061db(hFile, lpBuffer, arg_10h),  iVar4 != 0)) {\n                iVar4 = fcn.004060bd(lpBuffer, \"[Rename]\\r\\n\");\n                if (iVar4 == 0) {\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(arg_10h + lpBuffer, \"[Rename]\\r\\n\");\n                    arg_10h = arg_10h + 10;\n                    puVar7 = arg_10h;\n                }\n                else {\n                    hFile = puVar7;\n                    puVar5 = fcn.004060bd(iVar4 + 10, 0x40a5b0);\n                    puVar7 = arg_10h;\n                    if (puVar5 != NULL) {\n                        puVar7 = arg_10h + lpBuffer;\n                        puVar6 = puVar7 + iVar3;\n                        for (; puVar5 < puVar7; puVar7 = puVar7 + -1) {\n                            *puVar6 = *puVar7;\n                            puVar6 = puVar6 + -1;\n                        }\n                        puVar7 = puVar5 + (1 - lpBuffer);\n                    }\n                }\n                fcn.00406113(puVar7 + lpBuffer, 0x4269e8, iVar3);\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 0);\n                fcn.0040620a(hFile, lpBuffer, arg_10h + iVar3);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(lpBuffer);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hFile);\n        }\n    }\n    return;\n}\n",
        "token_count": 847
    },
    "0040699e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040699e(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(param_1, 0x426798);\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        uVar2 = 0x426798;\n    }\n    return uVar2;\n}\n",
        "token_count": 114
    },
    "0040117d": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040117d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar1 = *(param_1 * 0x818 + 8 + *0x42a288);\n    if ((uVar1 & 2) != 0) {\n        uVar4 = param_1 + 1;\n        if (uVar4 < *0x42a28c) {\n            puVar3 = uVar4 * 0x818 + 8 + *0x42a288;\n            iVar5 = 0;\n            do {\n                uVar2 = *puVar3;\n                if ((uVar2 & 2) == 0) {\n                    if ((uVar2 & 4) == 0) {\n                        iVar6 = iVar5;\n                        if ((uVar2 & 0x10) == 0) {\n                            *puVar3 = (uVar2 ^ uVar1) & 1 ^ uVar2;\n                        }\n                    }\n                    else {\n                        iVar6 = iVar5 + -1;\n                        if (iVar5 == 0) {\n                            return;\n                        }\n                    }\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x206;\n                iVar5 = iVar6;\n            } while (uVar4 < *0x42a28c);\n        }\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "004012e2": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012e2(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    bool bVar3;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *0x42a270 + 0x94;\n    do {\n        uVar1 = 0;\n        if (*var_8h != 0) {\n            bVar3 = *0x42a28c == 0;\n            if (*0x42a28c != 0) {\n                puVar2 = *0x42a288 + 8;\n                do {\n                    if (((*puVar2 & 6) == 0) &&\n                       (((arg_8h == 0 || (*(arg_8h + uVar1 * 4) != 0)) &&\n                        ((puVar2[-1] & 1 << (var_4h & 0x1f)) != (*puVar2 & 1) << (var_4h & 0x1f))))) break;\n                    uVar1 = uVar1 + 1;\n                    puVar2 = puVar2 + 0x206;\n                } while (uVar1 < *0x42a28c);\n                bVar3 = uVar1 == *0x42a28c;\n            }\n            if (bVar3) {\n                return var_4h;\n            }\n        }\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        if (0x1f < var_4h) {\n            return var_4h;\n        }\n    } while( true );\n}\n",
        "token_count": 394
    },
    "00402ea9": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402ea9(uint arg_8h, uint lpSubKey, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint lpValueName;\n    uint var_8h;\n    uint hKey;\n    \n    iVar1 = fcn.004064d5(arg_8h, lpSubKey, CONCAT31((arg_10h & 0x300) >> 8, 9), &hKey);\n    if (iVar1 == 0) {\n        if ((arg_10h & 2) != 0) {\n            var_8h = 0;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumValueW)(hKey, 0, &lpValueName, &var_8h, 0, 0, 0, 0);\n            if (iVar1 != 0x103) {\ncode_r0x00402f71:\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n                return 0x3eb;\n            }\n        }\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegEnumKeyW;\n        uVar3 = 0;\n        do {\n            iVar1 = (*pcVar2)(hKey, uVar3, &lpValueName, 0x105);\n            if (iVar1 != 0) break;\n            if ((arg_10h & 1) != 0) goto code_r0x00402f71;\n            iVar1 = fcn.00402ea9(hKey, &lpValueName, arg_10h);\n            uVar3 = arg_10h & 1;\n        } while (iVar1 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        pcVar2 = fcn.00406a35(3);\n        if (pcVar2 == NULL) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(arg_8h, lpSubKey);\n        }\n        else {\n            iVar1 = (*pcVar2)(arg_8h, lpSubKey, arg_10h & 0x300, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 503
    },
    "00404783": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404783(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int16_t *piVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int16_t *var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n    if (arg_ch == 0x110) {\n        iVar7 = *(arg_14h + 0x30);\n        if (iVar7 < 0) {\n            iVar7 = *(*0x42923c - (iVar7 * 4 + 4));\n        }\n        piVar5 = *0x42a298 + iVar7 * 2;\n        iVar2 = *piVar5;\n        piVar5 = piVar5 + 1;\n        var_8h = 0;\n        var_4h = fcn.00404734;\n        if (iVar2 != 2) {\n            var_4h = fcn.004046fa;\n        }\n        uVar9 = ~*(arg_14h + 0x14) >> 5 & 1 | *(arg_14h + 0x14) & 1;\n        var_ch = piVar5;\n        fcn.004045c4(arg_8h, 0x22, *(arg_14h + 0x34));\n        fcn.004045c4(arg_8h, 0x23, *(arg_14h + 0x38));\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, (uVar9 == 0) + 0x40a, 1);\n        fcn.004045e6(uVar9);\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.004045f9(uVar6);\n        pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x45b, 1, 0);\n        iVar7 = *(*0x42a270 + 0x68);\n        if (iVar7 < 0) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar7);\n        }\n        (*pcVar4)(uVar6, 0x443, 0, iVar7);\n        (*pcVar4)(uVar6, 0x445, 0, 0x4010000);\n        uVar8 = sub.KERNEL32.dll_lstrlenW(piVar5);\n        (*pcVar4)(uVar6, 0x435, 0, uVar8);\n        *0x421714 = 0;\n        (*pcVar4)(uVar6, 0x449, iVar2, &var_ch);\n        *0x421714 = 0;\n        return 0;\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h >> 0x10 != 0) || (*0x421714 != 0)) || (puVar1 = *0x422720 + 0x14,  (*puVar1 & 0x20) == 0))\n        goto code_r0x004049fb;\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a, 0xf0, 0, 0);\n        uVar9 = (*pcVar4)(uVar6);\n        *puVar1 = *puVar1 & 0xfffffffe | uVar9 & 1;\n        fcn.004045e6(uVar9 & 1);\n        fcn.00404a0e();\n    }\n    if (arg_ch == 0x4e) {\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n            var_8h = *(arg_14h + 0x1c);\n            var_ch = *(arg_14h + 0x18);\n            var_4h = 0x428200;\n            if (var_8h - var_ch < 0x800) {\n                (*pcVar4)(uVar6, 1099, 0, &var_ch);\n                pcVar3 = _sym.imp.USER32.dll_LoadCursorW;\n                uVar6 = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f02);\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n                uVar8 = 1;\n                uVar6 = var_4h;\n                fcn.00404a32(arg_8h, var_4h);\n                uVar6 = (*pcVar3)(0, 0x7f00, arg_8h, uVar6, uVar8);\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n            }\n        }\n        if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n            if (*(arg_14h + 0x10) == 0xd) {\n                (*pcVar4)(*0x42a268, 0x111, 1, 0);\n            }\n            if (*(arg_14h + 0x10) == 0x1b) {\n                (*pcVar4)(*0x42a268, 0x10, 0, 0);\n            }\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x40b) {\n        *0x421714 = *0x421714 + 1;\n    }\ncode_r0x004049fb:\n    uVar6 = fcn.0040462b(arg_ch, arg_10h, arg_14h);\n    return uVar6;\n}\n",
        "token_count": 1389
    },
    "004056ca": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004056ca(uint arg_8h, int32_t lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *0x429244;\n    if (*0x429244 != 0) {\n        var_8h = *0x42a314;\n        uVar4 = *0x42a314 & 1;\n        if (uVar4 == 0) {\n            fcn.004066a5(0x422728, arg_8h);\n        }\n        iVar2 = sub.KERNEL32.dll_lstrlenW(0x422728);\n        if (lpString2 != 0) {\n            iVar3 = sub.KERNEL32.dll_lstrlenW(lpString2);\n            if (0xfff < iVar3 + iVar2) {\n                return;\n            }\n            sub.KERNEL32.dll_lstrcatW(0x422728, lpString2);\n        }\n        if ((var_8h & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextW)(*0x429228, 0x422728);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        if ((var_8h & 2) == 0) {\n            var_1ch = 0x422728;\n            var_30h = 1;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1004, 0, 0);\n            var_2ch = var_2ch - uVar4;\n            var_28h = 0;\n            (*pcVar1)(var_4h, 0x104d - uVar4, 0, &var_30h);\n            (*pcVar1)(var_4h, 0x1013, var_2ch, 0);\n        }\n        if (uVar4 != 0) {\n            *(iVar2 * 2 + 0x422728) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 516
    },
    "00406b22": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00406b22(uint32_t param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x427dec == 0) {\n        uVar2 = 0;\n        do {\n            iVar3 = 8;\n            uVar1 = uVar2;\n            do {\n                uVar1 = uVar1 >> 1 ^ -((uVar1 & 1) != 0) & 0xedb88320;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(uVar2 * 4 + 0x427de8) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            param_1 = param_1 >> 8 ^ *((param_1 & 0xff ^ *param_2) * 4 + 0x427de8);\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return ~param_1;\n}\n",
        "token_count": 307
    },
    "004011ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011ef(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *0x42a288;\n    iVar5 = arg_8h * 0x818 + *0x42a288;\n    var_4h = 0;\n    var_8h = 0;\n    if (((*(iVar5 + 8) & 2) != 0) && (arg_ch != 0)) {\n        arg_8h = arg_8h + 1;\n        *(iVar5 + 8) = *(iVar5 + 8) & 0xffffffbe;\n    }\n    if (arg_8h < *0x42a28c) {\n        do {\n            puVar1 = arg_8h * 0x818 + 8 + iVar2;\n            uVar3 = arg_8h + 1;\n            uVar4 = *puVar1;\n            if ((uVar4 & 2) != 0) {\n                uVar3 = fcn.004011ef(arg_8h, 1);\n                uVar4 = *puVar1;\n            }\n            if ((uVar4 & 4) != 0) {\n                if (var_4h == 0) {\n                    return uVar3;\n                }\n                if (var_8h != 0) {\n                    *(iVar5 + 8) = *(iVar5 + 8) | 0x40;\n                    return uVar3;\n                }\n                *(iVar5 + 8) = *(iVar5 + 8) & 0xffffff7f | 1;\n                return uVar3;\n            }\n            if ((uVar4 & 0x40) != 0) {\n                var_4h = var_4h + 1;\n            }\n            if ((uVar4 & 1) == 0) {\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_4h = var_4h + 1;\n            }\n            arg_8h = uVar3;\n        } while (uVar3 < *0x42a28c);\n    }\n    return 0;\n}\n",
        "token_count": 538
    },
    "0040302e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040302e(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_80h;\n    \n    if (arg_8h == 0) {\n        if (*0x420efc == 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            if (*0x42a26c < uVar1) {\n                if (*0x42a268 == 0) {\n                    *0x420efc = (*_sym.imp.USER32.dll_CreateDialogParamW)(*0x42a260, 0x6f, 0, fcn.00402f93, 0);\n                    (*_sym.imp.USER32.dll_ShowWindow)(*0x420efc, 5);\n                }\n                else if ((*0x42a314 & 1) != 0) {\n                    uVar2 = fcn.00403012();\n                    (*_sym.imp.USER32.dll_wsprintfW)(&var_80h, L\"... %d%%\", uVar2);\n                    fcn.004056ca(0, &var_80h);\n                }\n            }\n        }\n        else {\n            fcn.00406a71(0);\n        }\n    }\n    else {\n        if (*0x420efc != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(*0x420efc);\n        }\n        *0x420efc = 0;\n    }\n    return;\n}\n",
        "token_count": 329
    },
    "0040462b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040462b(int32_t arg_8h, uint hdc, uint hWnd)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((((arg_8h - 0x133U < 6) &&\n         (puVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xffffffeb),  pcVar1 = _sym.imp.USER32.dll_GetSysColor, \n         puVar2 != NULL)) && (puVar2[2] < 2)) && ((puVar2[4] < 3 && ((puVar2[5] & 0xffffffe0) == 0)))) {\n        uVar3 = *puVar2;\n        if ((puVar2[5] & 2) != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetSysColor)(uVar3);\n        }\n        if ((*(puVar2 + 5) & 1) != 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar3);\n        }\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, puVar2[4]);\n        var_8h = puVar2[1];\n        if ((*(puVar2 + 5) & 8) != 0) {\n            var_8h = (*pcVar1)(var_8h);\n        }\n        if ((*(puVar2 + 5) & 4) != 0) {\n            (*_sym.imp.GDI32.dll_SetBkColor)(hdc, var_8h);\n        }\n        if ((*(puVar2 + 5) & 0x10) != 0) {\n            var_ch = puVar2[2];\n            if (puVar2[3] != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(puVar2[3]);\n            }\n            uVar3 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            puVar2[3] = uVar3;\n        }\n        return puVar2[3];\n    }\n    return 0;\n}\n",
        "token_count": 495
    },
    "00404f52": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00404f52(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x42a288;\n    iVar3 = *0x42a28c;\n    if (*0x42a28c != 0) {\n        do {\n            if ((*(iVar2 + 8) & 1) != 0) {\n                iVar1 = iVar1 + *(iVar2 + param_1 * 4);\n            }\n            iVar3 = iVar3 + -1;\n            iVar2 = iVar2 + 0x818;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 167
    },
    "0040579d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.0040579d(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar4 = *0x42a28c;\n    iVar2 = *0x42a288;\n    uVar1 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x42a320 = *0x42a320 | uVar1;\n    uVar5 = 0;\n    fcn.00404610(0);\n    if (iVar4 != 0) {\n        puVar3 = iVar2 + 0xc;\n        do {\n            iVar4 = iVar4 + -1;\n            if ((*(puVar3 + -1) & 1) != 0) {\n                uVar5 = *puVar3;\n                iVar2 = fcn.00401389();\n                if (iVar2 != 0) {\n                    *0x42a2ec = *0x42a2ec + 1;\n                    break;\n                }\n            }\n            puVar3 = puVar3 + 0x206;\n        } while (iVar4 != 0);\n    }\n    fcn.00404610(0x404, uVar5);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    return *0x42a2ec;\n}\n",
        "token_count": 309
    },
    "00401389": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint fcn.00401389(int32_t param_1)\n\n{\n    int32_t *hWndChildAfter;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_retaddr;\n    \n    while ((-1 < param_1 && (hWndChildAfter = param_1 * 0x1c + *0x42a290,  *hWndChildAfter != 1))) {\n        iVar1 = fcn.00401434(hWndChildAfter);\n        if (iVar1 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        iVar1 = fcn.0040136d();\n        if (iVar1 == 0) {\n            iVar2 = 1;\n            iVar1 = param_1 + 1;\n        }\n        else {\n            iVar1 = iVar1 + -1;\n            iVar2 = iVar1 - param_1;\n        }\n        param_1 = iVar1;\n        if (unaff_retaddr != 0) {\n            *0x42924c = *0x42924c + iVar2;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*0x42924c, 30000, *0x429234, 0);\n            (*_sym.imp.USER32.dll_SendMessageW)(0x4013a8, 0x402, uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 317
    },
    "00402e64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402e64(uint arg_8h, int16_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t arg_8h_00;\n    \n    if (*arg_ch == 0) {\n        uVar1 = 0x3eb;\n    }\n    else {\n        arg_10h = arg_10h | 0x100020;\n        uVar1 = fcn.00402e1e(arg_8h, &arg_10h);\n        arg_8h_00 = fcn.00406454(uVar1);\n        if (arg_8h_00 == 0) {\n            uVar1 = 6;\n        }\n        else {\n            uVar1 = fcn.00402ea9(arg_8h_00, arg_ch, arg_10h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 201
    },
    "00402f93": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402f93(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    char16_t *pcVar2;\n    uint var_80h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n        arg_ch = 0x113;\n    }\n    if (arg_ch == 0x113) {\n        uVar1 = fcn.00403012();\n        pcVar2 = L\"unpacking data: %d%%\";\n        if (*0x42a270 == 0) {\n            pcVar2 = L\"verifying installer: %d%%\";\n        }\n        (*_sym.imp.USER32.dll_wsprintfW)(&var_80h, pcVar2, uVar1);\n        (*_sym.imp.USER32.dll_SetWindowTextW)(arg_8h, &var_80h);\n        sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x406, &var_80h);\n    }\n    return 0;\n}\n",
        "token_count": 247
    },
    "00403371": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403371(int32_t arg_8h, uint arg_ch, int32_t lpBuffer, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t lpNumberOfBytesRead;\n    \n    if (-1 < arg_8h) {\n        *0x420ef4 = arg_8h + *0x42a2b8;\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40a01c, *0x420ef4, 0, 0);\n    }\n    iVar1 = fcn.00403479(4);\n    if (iVar1 < 0) {\n        return iVar1;\n    }\n    iVar1 = fcn.004061db(*0x40a01c, &arg_8h, 4);\n    if (iVar1 != 0) {\n        *0x420ef4 = *0x420ef4 + 4;\n        iVar1 = fcn.00403479(arg_8h);\n        if (iVar1 < 0) {\n            return iVar1;\n        }\n        if (lpBuffer == 0) {\n            while( true ) {\n                if (arg_8h < 1) {\n                    return iVar1;\n                }\n                lpNumberOfBytesRead = arg_8h;\n                if (0x3fff < arg_8h) {\n                    lpNumberOfBytesRead = 0x4000;\n                }\n                iVar2 = fcn.004061db(*0x40a01c, 0x414ef0, lpNumberOfBytesRead);\n                if (iVar2 == 0) break;\n                iVar2 = fcn.0040620a(arg_ch, 0x414ef0, lpNumberOfBytesRead);\n                if (iVar2 == 0) {\n                    return -2;\n                }\n                arg_8h = arg_8h - lpNumberOfBytesRead;\n                *0x420ef4 = *0x420ef4 + lpNumberOfBytesRead;\n                iVar1 = iVar1 + lpNumberOfBytesRead;\n            }\n        }\n        else {\n            iVar1 = arg_8h;\n            if (arg_14h <= arg_8h) {\n                iVar1 = arg_14h;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(*0x40a01c, lpBuffer, iVar1, &lpNumberOfBytesRead, 0);\n            if (iVar1 != 0) {\n                *0x420ef4 = *0x420ef4 + lpNumberOfBytesRead;\n                return lpNumberOfBytesRead;\n            }\n        }\n    }\n    return -3;\n}\n",
        "token_count": 581
    },
    "00404a0e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00404a0e(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x421710;\n    if (*0x42a2ec == 0) {\n        uVar1 = *0x423744;\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 89
    },
    "00404e0b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404e0b(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (arg_ch == 1) {\n        fcn.00405cac(0x3fb, arg_14h);\n        (*pcVar1)(arg_8h, 0x467, 1, arg_14h);\n    }\n    if (arg_ch == 2) {\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(arg_10h, arg_14h);\n        if ((iVar2 == 0) || (iVar2 = fcn.0040140b(7),  iVar2 != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        (*pcVar1)(arg_8h, 0x465, 0, uVar3);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "00404f7f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404f7f(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_34h = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n        lpPoint = uVar2;\n        var_ch = uVar2 >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        (*pcVar1)(arg_8h, 0x1111, 0, &lpPoint);\n        var_34h = var_4h;\n        if ((var_8h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_38h = 4;\n    (*pcVar1)(arg_8h, 0x113e, 0, &var_38h);\n    return var_14h;\n}\n",
        "token_count": 322
    },
    "00405cc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00405cc8(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 & 0x1fffff;\n    if ((*0x42a300 == 0) || (param_2 >> 0x15 == 0)) {\n        if (*0x42a308 != 0) {\n            uVar1 = uVar1 ^ 0x180000;\n        }\n        *0x40a3ec = *0x42a268;\n        *0x40a3f0 = *0x42a260;\n        *0x40a3f4 = param_1;\n        *0x40a3f8 = 0x429260;\n        *0x40a3fc = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectW)(0x40a3e8);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00405fe2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint16_t * fcn.00405fe2(int16_t *param_1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextW;\n    piVar2 = (*_sym.imp.USER32.dll_CharNextW)(param_1);\n    uVar3 = (*pcVar1)(piVar2);\n    if (((*param_1 == 0) || (*piVar2 != 0x3a)) || (piVar2[1] != 0x5c)) {\n        if ((*param_1 == 0x5c) && (param_1[1] == 0x5c)) {\n            iVar4 = 2;\n            do {\n                iVar4 = iVar4 + -1;\n                piVar2 = fcn.00405f64();\n                if (*piVar2 == 0) goto code_r0x00406037;\n                piVar2 = piVar2 + 1;\n            } while (iVar4 != 0);\n        }\n        else {\ncode_r0x00406037:\n            piVar2 = NULL;\n        }\n    }\n    else {\n        piVar2 = (*pcVar1)(uVar3);\n    }\n    return piVar2;\n}\n",
        "token_count": 292
    },
    "00406536": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406536(uint arg_8h, int32_t arg_ch, uint lpValueName, ushort *arg_14h, int32_t hKey)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    var_4h = 0x800;\n    iVar2 = fcn.004064d5(arg_8h, arg_ch, -(hKey != 0) & 0x100 | 0x20019, &hKey);\n    puVar1 = arg_14h;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, lpValueName, 0, &arg_ch, arg_14h, &var_4h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        puVar1[0x3ff] = 0;\n        if (iVar2 == 0) {\n            if (arg_ch == 1) {\n                return;\n            }\n            if (arg_ch == 2) {\n                return;\n            }\n        }\n    }\n    *puVar1 = 0;\n    return;\n}\n",
        "token_count": 268
    },
    "004066a5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004066a5(uint16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint16_t *arg_8h_00;\n    uint16_t *puVar8;\n    uint32_t hKey;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t ppidl;\n    \n    puVar8 = arg_8h;\n    if (arg_ch < 0) {\n        arg_ch = *(*0x42923c - (arg_ch * 4 + 4));\n    }\n    puVar1 = *0x42a298 + arg_ch * 2;\n    arg_8h_00 = 0x428200;\n    if ((0x4281ff < arg_8h) && (arg_8h + -0x214100 >> 1 < 0x800)) {\n        arg_8h = NULL;\n        arg_8h_00 = puVar8;\n    }\n    uVar4 = *puVar1;\n    do {\n        if ((uVar4 == 0) || (0x7ff < (arg_8h_00 + -0x214100 & 0xfffffffe))) {\n            *arg_8h_00 = 0;\n            if (arg_8h != NULL) {\n                fcn.00406668(arg_8h, 0x428200);\n            }\n            return;\n        }\n        puVar8 = puVar1 + 1;\n        if (uVar4 < 4) {\n            uVar2 = *(puVar1 + 3);\n            uVar3 = *puVar8;\n            var_14h = uVar3;\n            uVar6 = (uVar2 & 0x7f) << 7 | uVar3 & 0x7f;\n            hKey = 2;\n            var_18h = var_14h | 0x8000;\n            iVar7 = 2;\n            var_ch = uVar2;\n            puVar8 = puVar1 + 2;\n            var_10h = uVar2 | 0x8000;\n            var_8h = uVar6;\n            if (uVar4 == 2) {\n                if (*0x42a2e4 != 0) {\n                    hKey = 4;\n                    iVar7 = 4;\n                }\n                if (uVar3 < '\\0') {\n                    hKey = var_14h & 0x40;\n                    fcn.00406536(0x80000002, L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", \n                                 *0x42a298 + (var_14h & 0x3f) * 2, arg_8h_00, hKey);\n                    if (*arg_8h_00 == 0) {\n                        fcn.004066a5(arg_8h_00, var_ch);\n                        goto code_r0x00406838;\n                    }\ncode_r0x0040683e:\n                    if (var_ch == 0x1a) {\n                        sub.KERNEL32.dll_lstrcatW(hKey, L\"\\\\Microsoft\\\\Internet Explorer\\\\Quick Launch\", arg_8h_00);\n                    }\n                }\n                else {\n                    if (var_14h == 0x25) {\n                        hKey = 0x400;\n                        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(arg_8h_00, 0x400);\n                    }\n                    else {\n                        if (var_14h == 0x24) {\n                            hKey = 0x400;\n                            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(arg_8h_00, 0x400);\n                            iVar7 = 0;\n                        }\n                        while (iVar7 != 0) {\n                            iVar7 = iVar7 + -1;\n                            if (*0x42a264 != NULL) {\n                                hKey = 0;\n                                iVar5 = (**0x42a264)(*0x42a268, (&var_18h)[iVar7], 0, 0, arg_8h_00);\n                                if (iVar5 == 0) break;\n                            }\n                            hKey = (&var_18h)[iVar7];\n                            iVar5 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)(*0x42a268, hKey, &ppidl);\n                            if (iVar5 == 0) {\n                                hKey = ppidl;\n                                iVar5 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(ppidl, arg_8h_00);\n                                (*_sym.imp.ole32.dll_CoTaskMemFree)(ppidl);\n                                if (iVar5 != 0) break;\n                            }\n                            *arg_8h_00 = 0;\n                        }\n                    }\ncode_r0x00406838:\n                    if (*arg_8h_00 != 0) goto code_r0x0040683e;\n                }\ncode_r0x0040684f:\n                fcn.004068ef();\n            }\n            else if (uVar4 == 3) {\n                if (uVar6 == 0x1d) {\n                    fcn.004065af(arg_8h_00, *0x42a268);\n                }\n                else {\n                    fcn.00406668(arg_8h_00, uVar6 * 0x800 + 0x42b000);\n                }\n                if (uVar6 - 0x15 < 7) goto code_r0x0040684f;\n            }\n            else if (uVar4 == 1) {\n                fcn.004066a5(arg_8h_00, -1 - uVar6);\n            }\n            iVar7 = sub.KERNEL32.dll_lstrlenW(arg_8h_00);\n            arg_8h_00 = arg_8h_00 + iVar7;\n        }\n        else if (uVar4 == 4) {\n            *arg_8h_00 = *puVar8;\n            arg_8h_00 = arg_8h_00 + 1;\n            puVar8 = puVar1 + 2;\n        }\n        else {\n            *arg_8h_00 = uVar4;\n            arg_8h_00 = arg_8h_00 + 1;\n        }\n        uVar4 = *puVar8;\n        puVar1 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1535
    },
    "004068ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004068ef(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    \n    if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n        param_1 = param_1 + 4;\n    }\n    if ((*param_1 != 0) && (in_EAX = fcn.00405fae(param_1),  in_EAX != 0)) {\n        param_1 = param_1 + 2;\n    }\n    pcVar2 = _sym.imp.USER32.dll_CharNextW;\n    uVar1 = *param_1;\n    uVar3 = in_EAX & 0xffff0000 | uVar1;\n    puVar7 = param_1;\n    puVar6 = param_1;\n    while (uVar1 != 0) {\n        if ((0x1f < uVar3) && (piVar4 = fcn.00405f64(L\"*?|<>/\\\":\", uVar3),  *piVar4 == 0)) {\n            iVar5 = (*pcVar2)(puVar7);\n            fcn.00406113(puVar6, puVar7, iVar5 - puVar7 >> 1);\n            puVar6 = (*pcVar2)(puVar6);\n        }\n        puVar7 = (*pcVar2)(puVar7);\n        uVar1 = *puVar7;\n        uVar3 = puVar7 & 0xffff0000 | uVar1;\n    }\n    *puVar6 = 0;\n    while( true ) {\n        puVar6 = (*_sym.imp.USER32.dll_CharPrevW)(param_1, puVar6);\n        if ((*puVar6 != 0x20) && (*puVar6 != 0x5c)) break;\n        *puVar6 = 0;\n        if (puVar6 <= param_1) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 524
    },
    "0040136d": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid fcn.0040136d(int32_t param_1)\n\n{\n    if (param_1 < 0) {\n        fcn.004065c8((param_1 + 1) * -0x800 + 0x42b000);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00402da6": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint fcn.00402da6(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = param_1;\n    if (param_1 < 0) {\n        uVar1 = -param_1;\n    }\n    uVar2 = fcn.004066a5((uVar1 >> 4) * 0x800 + 0x40a5f8, *(*0x40ce54 + (uVar1 & 0xf) * 4));\n    if (param_1 < 0) {\n        fcn.004068ef(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 150
    },
    "00404a6e": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a6e(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.004045c4(arg_8h, 0x1d, *(arg_14h + 0x30));\n        sub.USER32.dll_SetDlgItemTextW(arg_8h, 1000, *(arg_14h + 0x3c) * 0x800 + 0x42b000);\n    }\n    fcn.0040462b(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 151
    },
    "00404ab5": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ab5(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    ushort *puVar8;\n    uint32_t uVar9;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    code *var_38h;\n    int32_t var_34h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = *0x422720;\n    var_8h = *(*0x422720 + 0x38);\n    iVar6 = *(*0x422720 + 0x3c) * 0x800 + 0x42b000;\n    if (arg_ch == 0x40b) {\n        fcn.00405cac(0x3fb, iVar6);\n        fcn.004068ef(iVar6);\n    }\n    if (arg_ch == 0x110) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fb);\n        iVar2 = fcn.00405fae(iVar6);\n        if ((iVar2 != 0) && (iVar2 = fcn.00405fe2(iVar6),  iVar2 == 0)) {\n            fcn.00405f37(iVar6);\n        }\n        *0x429238 = arg_8h;\n        (*_sym.imp.USER32.dll_SetWindowTextW)(uVar1, iVar6);\n        var_48h = *(arg_14h + 0x34);\n        var_4ch = 0x1;\n        fcn.004045c4(arg_8h);\n        fcn.004045c4(arg_8h, 0x14, *(arg_14h + 0x30));\n        fcn.004045f9(uVar1);\n        pcVar3 = fcn.00406a35(8);\n        if (pcVar3 == NULL) goto code_r0x00404df6;\n        (*pcVar3)(uVar1, 1);\n    }\n    iVar2 = var_8h;\n    if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            if (arg_10h >> 0x10 != 0x300) goto code_r0x00404df6;\n            arg_ch = 0x40f;\n        }\n        if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar7 = &fcn.00404ab5::var_48h;\n            for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            var_4ch = arg_8h;\n            var_44h = 0x423748;\n            var_38h = fcn.00404e0b;\n            var_34h = iVar6;\n            var_40h = fcn.004066a5(0x421f20, iVar2);\n            var_3ch = 0x41;\n            iVar2 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderW)(&fcn.00404ab5::var_4ch);\n            if (iVar2 == 0) {\n                arg_ch = 0x40f;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n                fcn.00405f37(iVar6);\n                if ((*(*0x42a270 + 0x11c) != 0) && (iVar6 == 0x435800)) {\n                    uVar1 = 0;\n                    fcn.004066a5(0, *(*0x42a270 + 0x11c));\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(0x428200, 0x423748);\n                    if (iVar2 != 0) {\n                        sub.KERNEL32.dll_lstrcatW(uVar1, 0x428200, 0x435800);\n                    }\n                }\n                *0x423738 = *0x423738 + 1;\n                sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x3fb, iVar6);\n            }\n        }\n    }\n    if ((arg_ch == 0x40f) || (arg_ch == 0x405)) {\n        var_4h = 0;\n        var_8h = 0;\n        fcn.00405cac(0x3fb, iVar6);\n        iVar2 = fcn.0040603f(iVar6);\n        if (iVar2 == 0) {\n            var_4h = 1;\n        }\n        fcn.00406668(0x421718, iVar6);\n        var_48h = 1;\n        var_ch = fcn.00406a35();\n        if (var_ch != NULL) {\n            puVar8 = NULL;\n            do {\n                var_4ch = &fcn.00404ab5::var_24h;\n                iVar2 = (*var_ch)(0x421718, &fcn.00404ab5::var_2ch, &fcn.00404ab5::var_18h);\n                if (iVar2 != 0) {\n                    var_2ch = var_2ch >> 10 | var_28h << 0x16;\n                    var_28h = var_28h >> 10;\n                    var_8h = 1;\n                    goto code_r0x00404d4f;\n                }\n                if (puVar8 != NULL) {\n                    *puVar8 = 0;\n                }\n                var_48h = 0x421718;\n                var_4ch = 0x404cc5;\n                puVar8 = fcn.00405f83();\n                *puVar8 = 0;\n                puVar8 = puVar8 + -1;\n                *puVar8 = 0x5c;\n            } while (puVar8 != 0x421718);\n        }\n        var_4ch = iVar6;\n        fcn.00406668(0x421718);\n        puVar8 = fcn.00405fe2(0x421718);\n        if (puVar8 != NULL) {\n            *puVar8 = 0;\n        }\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceW)\n                          (0x421718, &fcn.00404ab5::var_10h, &fcn.00404ab5::var_14h, &fcn.00404ab5::var_ch, \n                           &fcn.00404ab5::var_20h);\n        if (iVar6 != 0) {\n            var_48h = 0x400;\n            var_4ch = var_ch;\n            var_2ch = (*_sym.imp.KERNEL32.dll_MulDiv)(var_10h * var_14h);\n            var_28h = var_2ch >> 0x1f;\n            var_8h = 1;\n        }\ncode_r0x00404d4f:\n        uVar9 = 5;\n        var_4ch = 0x404d56;\n        uVar4 = fcn.00404f52();\n        if (((var_8h != 0) && (var_28h == 0)) && (var_2ch < uVar4)) {\n            var_4h = 2;\n        }\n        if (*(*0x42923c + 0x10) != 0) {\n            var_4ch = uVar4;\n            fcn.00404f3a(0x3ff, 0xfffffffb);\n            if (var_8h == 0) {\n                sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x400, 0x421708);\n                uVar9 = arg_8h;\n            }\n            else {\n                uVar9 = 0x400;\n                fcn.00404e71(0x400, 0x400, var_2ch, var_28h);\n            }\n        }\n        *0x42a304 = var_4h;\n        if (var_4h == 0) {\n            uVar9 = 7;\n            var_4h = fcn.0040140b();\n        }\n        if ((*(var_1ch + 0x14) & 0x400) != 0) {\n            var_4h = 0;\n        }\n        fcn.004045e6(var_4h == 0, uVar9);\n        if ((var_4h == 0) && (*0x423738 == 0)) {\n            fcn.00404a0e();\n        }\n        *0x423738 = 0;\n    }\ncode_r0x00404df6:\n    fcn.0040462b(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 2151
    },
    "004046fa": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004046fa(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpynW)(arg_ch, *0x421714 + arg_8h, arg_10h >> 1);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_ch);\n    *arg_14h = iVar1 * 2;\n    *0x421714 = *0x421714 + iVar1 * 2;\n    return 0;\n}\n",
        "token_count": 142
    },
    "00404734": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404734(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_8h + *0x421714 * 2);\n    if (arg_10h >> 1 <= uVar1) {\n        uVar1 = arg_10h >> 1;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, arg_8h + *0x421714 * 2, uVar1, arg_ch, arg_10h, 0, 0);\n    *arg_14h = iVar2;\n    *0x421714 = *0x421714 + iVar2;\n    return 0;\n}\n",
        "token_count": 206
    },
    "004065c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004065c8(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar2 = 10;\n    var_8h = 1;\n    uVar6 = 0x39;\n    if (*arg_8h == 0x2d) {\n        arg_8h = arg_8h + 1;\n        var_8h = -1;\n    }\n    puVar3 = arg_8h;\n    if (*arg_8h == 0x30) {\n        puVar3 = arg_8h + 1;\n        uVar1 = *puVar3;\n        if ((0x2f < uVar1) && (uVar1 < 0x38)) {\n            uVar2 = 8;\n            uVar6 = 0x37;\n        }\n        if ((uVar1 & 0xffdf) == 0x58) {\n            uVar2 = 0x10;\n            puVar3 = arg_8h + 2;\n        }\n    }\n    do {\n        uVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if ((uVar4 < 0x30) || (uVar6 < uVar4)) {\n            if ((uVar2 != 0x10) || (((uVar4 & 0xffffffdf) < 0x41 || (0x46 < (uVar4 & 0xffffffdf))))) {\n                return var_8h * var_4h;\n            }\n            iVar5 = (uVar4 & 7) + 9;\n        }\n        else {\n            iVar5 = uVar4 - 0x30;\n        }\n        var_4h = uVar2 * var_4h + iVar5;\n    } while( true );\n}\n",
        "token_count": 472
    },
    "00403479": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00403479(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    param_1 = (*0x420ef4 - *0x40ce60) + param_1;\n    *0x42a26c = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x42a26c = *0x42a26c + 500;\n    if (0 < param_1) {\n        fcn.004035f8(*0x420f04);\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40a01c, *0x40ce60, 0);\n        *0x420ef0 = 0;\n        *0x420f00 = param_1;\n        do {\n            iVar3 = 0x4000;\n            if (*0x420ef8 - *0x420f04 < 0x4001) {\n                iVar3 = *0x420ef8 - *0x420f04;\n            }\n            iVar1 = fcn.004035e2(0x414ef0, iVar3);\n            if (iVar1 == 0) {\n                return -1;\n            }\n            *0x420f04 = *0x420f04 + iVar3;\n            *0x40ce80 = 0x414ef0;\n            *0x40ce84 = iVar3;\n            do {\n                if ((*0x42a270 != 0) && (*0x42a300 == 0)) {\n                    *0x420ef0 = (*0x420f00 - *0x420ef4) + *0x40ce60;\n                    fcn.0040302e(0);\n                }\n                *0x40ce88 = 0x40cef0;\n                *0x40ce8c = 0x8000;\n                iVar1 = fcn.00406bb0();\n                if (iVar1 < 0) {\n                    return -3;\n                }\n                iVar1 = *0x40ce88 + -0x40cef0;\n                if (iVar1 == 0) {\n                    if (*0x40ce84 != 0) {\n                        return -3;\n                    }\n                    if (iVar3 == 0) {\n                        return -3;\n                    }\n                    break;\n                }\n                iVar4 = iVar1;\n                iVar2 = fcn.0040620a(*0x40a01c, 0x40cef0, iVar1);\n                if (iVar2 == 0) {\n                    return iVar4;\n                }\n                *0x40ce60 = *0x40ce60 + iVar1;\n            } while (*0x40ce84 != 0);\n        } while (0 < (*0x420ef4 - *0x40ce60) + unaff_EDI);\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40a01c, *0x420ef4, 0, 0);\n    }\n    fcn.0040302e(1);\n    return 0;\n}\n",
        "token_count": 697
    },
    "004069c5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004069c5(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint lpBuffer;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&lpBuffer, 0x104);\n    if (0x104 < uVar1) {\n        uVar1 = 0;\n    }\n    if ((uVar1 == 0) || (*(&stack0xfffffdbe + uVar1 * 2) == 0x5c)) {\n        iVar2 = 1;\n    }\n    else {\n        iVar2 = 0;\n    }\n    (*_sym.imp.USER32.dll_wsprintfW)(&lpBuffer + uVar1 * 2, L\"%s%S.dll\", iVar2 * 2 + 0x40a014, arg_8h);\n    (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(&lpBuffer, 0, 8);\n    return;\n}\n",
        "token_count": 218
    },
    "00401299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401299(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if ((param_1 < 0x20) && (*0x42a28c != 0)) {\n        puVar2 = *0x42a288 + 8;\n        do {\n            uVar1 = *puVar2;\n            if ((uVar1 & 6) == 0) {\n                if ((puVar2[-1] & 1 << (param_1 & 0x1f)) == 0) {\n                    uVar1 = uVar1 & 0xfffffffe;\n                }\n                else {\n                    uVar1 = uVar1 | 1;\n                }\n                *puVar2 = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 0x206;\n        } while (uVar3 < *0x42a28c);\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00403fed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403fed(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    \n    uVar3 = 0xffff;\n    uVar1 = fcn.004065c8(0x437000);\n    do {\n        if (*0x42a2a4 != 0) {\n            puVar2 = *(*0x42a270 + 100) * *0x42a2a4 + *0x42a2a0;\n            iVar4 = *0x42a2a4;\n            do {\n                puVar2 = puVar2 - *(*0x42a270 + 100);\n                iVar4 = iVar4 + -1;\n                if (((*puVar2 ^ uVar1) & uVar3) == 0) {\n                    *0x429240 = *(puVar2 + 1);\n                    *0x42a308 = *(puVar2 + 3);\n                    *0x42923c = puVar2 + 5;\n                    if (*0x42923c != NULL) {\n                        fcn.004065af(0x437000, *puVar2);\n                        fcn.004040a6();\n                        piVar5 = *0x42a288;\n                        for (iVar4 = *0x42a28c; iVar4 != 0; iVar4 = iVar4 + -1) {\n                            if (*piVar5 != 0) {\n                                fcn.004066a5(piVar5 + 6, *piVar5);\n                            }\n                            piVar5 = piVar5 + 0x206;\n                        }\n                        return;\n                    }\n                    break;\n                }\n            } while (iVar4 != 0);\n        }\n        if (uVar3 == 0xffff) {\n            uVar3 = 0x3ff;\n        }\n        else {\n            uVar3 = 0;\n        }\n    } while( true );\n}\n",
        "token_count": 442
    },
    "004045c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004045c4(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.004066a5(0, param_3);\n    sub.USER32.dll_SetDlgItemTextW(param_3, unaff_retaddr + 1000, uVar1);\n    return;\n}\n",
        "token_count": 90
    },
    "00404e71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404e71(uint nIDDlgItem, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int8_t iVar5;\n    uint arg_ch_00;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    char16_t *pcVar9;\n    uint *arg_8h;\n    uint var_80h;\n    uint var_40h;\n    \n    arg_ch_00 = 0xffffffdc;\n    if (arg_14h == 0) {\n        iVar5 = 0x14;\n        if (arg_10h < 0x100000) {\n            iVar5 = 10;\n            arg_ch_00 = 0xffffffdd;\n        }\n        if (arg_10h < 0x400) {\n            iVar5 = 0;\n            arg_ch_00 = 0xffffffde;\n        }\n        if (arg_10h < 0xffff3333) {\n            arg_10h = (1 << iVar5) / 0x14 + arg_10h;\n        }\n        uVar6 = arg_10h >> iVar5;\n        uVar7 = ((arg_10h & 0xffffff) * 10 >> iVar5) % 10;\n    }\n    else {\n        uVar6 = arg_10h >> 0x14 | arg_14h << 0xc;\n        uVar7 = 0;\n    }\n    uVar1 = fcn.004066a5(&var_40h, 0xffffffdf);\n    arg_8h = &var_80h;\n    uVar2 = fcn.004066a5(arg_8h, arg_ch_00);\n    pcVar9 = L\"%u.%u%s%s\";\n    uVar8 = 0x423748;\n    iVar3 = fcn.004066a5(0x423748, arg_ch);\n    iVar4 = sub.KERNEL32.dll_lstrlenW(0x423748, uVar8, arg_ch, pcVar9, uVar6, uVar7, uVar2, arg_8h, arg_ch_00, uVar1);\n    (*_sym.imp.USER32.dll_wsprintfW)(iVar3 + iVar4 * 2);\n    sub.USER32.dll_SetDlgItemTextW(*0x429238, nIDDlgItem, 0x423748);\n    return;\n}\n",
        "token_count": 558
    },
    "00405f83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.00405f83(int16_t *param_1)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenW(param_1);\n    piVar2 = param_1 + iVar1;\n    do {\n        if (*piVar2 == 0x5c) break;\n        piVar2 = (*_sym.imp.USER32.dll_CharPrevW)(param_1, piVar2);\n    } while (param_1 < piVar2);\n    *piVar2 = 0;\n    return piVar2 + 1;\n}\n",
        "token_count": 139
    },
    "00406187": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nushort * __cdecl fcn.00406187(ushort *arg_8h, uint lpPathName)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = 100;\n    do {\n        iVar3 = iVar3 + -1;\n        var_8h = *0x40a5a8;\n        var_4h = *0x40a5ac;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        var_4h = var_4h & 0xffff0000 | var_4h + uVar1 % 0x1a;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(lpPathName, &var_8h, 0, arg_8h);\n        if (iVar2 != 0) {\n            return arg_8h;\n        }\n    } while (iVar3 != 0);\n    *arg_8h = 0;\n    return NULL;\n}\n",
        "token_count": 250
    },
    "00406239": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406239(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint hFile;\n    int32_t iVar2;\n    \n    hFile = arg_8h;\n    pcVar1 = _sym.imp.KERNEL32.dll_SetFilePointer;\n    iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(arg_8h, 0, 0, 1);\n    if (iVar2 == 0) {\n        iVar2 = fcn.004061db(hFile, &arg_8h + 2, 2);\n        if ((iVar2 != 0) && (arg_8h._2_2_ == -0x101)) {\n            return 0;\n        }\n        if ((arg_ch != 0) && (iVar2 = (*pcVar1)(hFile, 0, 0, 1),  iVar2 == 0)) {\n            iVar2 = fcn.0040620a(hFile, 0x40841c, 2);\n            return (-(iVar2 != 0) & 0x7fffbffb) + 0x80004005;\n        }\n        (*pcVar1)(hFile, 0, 0, 0);\n    }\n    return 1;\n}\n",
        "token_count": 287
    },
    "00406454": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00406454(uint32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *param_2;\n    uVar3 = (-(*0x42a31c < '\\0') & 0xffffff00) + 0x100;\n    if (((uVar1 & 0x20) == 0) || ((param_1 & 0x60000000) == 0)) {\n        if ((uVar1 & 0x100000) != 0) {\n            uVar1 = uVar1 | *0x42a310;\n        }\n    }\n    else {\n        uVar2 = param_1 >> 0x15 & 0x300;\n        if (uVar2 == 0x300) {\n            uVar2 = ~uVar3 & *0x42a310;\n        }\n        uVar1 = (uVar1 & 0xfffffeff | uVar2) & 0xfffffdff;\n        param_1 = param_1 & 0x9fffffff;\n    }\n    *param_2 = uVar1 & 0xffefffdf;\n    return ~-((uVar1 & uVar3) != 0) & param_1;\n}\n",
        "token_count": 299
    },
    "004065af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004065af(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfW)(param_1, 0x408420, param_2);\n    return;\n}\n",
        "token_count": 49
    },
    "00406aa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406aa4(uint hModule, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpProcName;\n    \n    iVar1 = fcn.0040668a(arg_ch, &lpProcName, 0x100);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(hModule, &lpProcName);\n    }\n    return uVar2;\n}\n",
        "token_count": 120
    },
    "00406ae0": {
        "rules": [
            "delay execution",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406ae0(uint hProcess)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpExitCode;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 100);\n    while (iVar2 == 0x102) {\n        fcn.00406a71(0xf);\n        iVar2 = (*pcVar1)(hProcess, 100);\n    }\n    (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hProcess, &lpExitCode);\n    return lpExitCode;\n}\n",
        "token_count": 149
    },
    "00406158": {
        "rules": [
            "get file attributes",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00406158(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    (*_sym.imp.KERNEL32.dll_CreateFileW)(unaff_retaddr, param_1, 1, 0, param_2, -(uVar1 != 0xffffffff) & uVar1, 0);\n    return;\n}\n",
        "token_count": 110
    },
    "0040668a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0040668a(uint param_1, uint param_2, uint param_3)\n\n{\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, 0xffffffff, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 72
    },
    "00405c4b": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405c4b(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    int32_t lpProcessAttributes;\n    uint hObject;\n    \n    *0x426750 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                      (0, lpCommandLine, 0, 0, 0, 0x4000000, 0, 0, 0x426750, &lpProcessAttributes);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        iVar1 = lpProcessAttributes;\n    }\n    return iVar1;\n}\n",
        "token_count": 148
    },
    "00405c8e": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00405c8e(uint *param_1)\n\n{\n    param_1[9] = 0;\n    *param_1 = 0x3c;\n    (*_sym.imp.SHELL32.dll_ShellExecuteExW)(param_1);\n    return;\n}\n",
        "token_count": 63
    },
    "004064d5": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004064d5(uint arg_8h, uint lpSubKey, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00406454(arg_8h, &arg_10h);\n    if (iVar1 == 0) {\n        uVar2 = 6;\n    }\n    else {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(iVar1, lpSubKey, 0, arg_10h, arg_14h);\n    }\n    return uVar2;\n}\n",
        "token_count": 142
    },
    "00406503": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406503(uint arg_8h, uint lpSubKey, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00406454(arg_8h, &arg_10h);\n    if (iVar1 == 0) {\n        uVar2 = 6;\n    }\n    else {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(iVar1, lpSubKey, 0, 0, 0, arg_10h, 0, arg_14h, 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 153
    },
    "00403c67": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403c67(uint param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x42170c; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_1);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00403c82": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403c82(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x42170c;\n    fcn.00403c67(0);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(piVar2[2]);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    *0x42170c = NULL;\n    return;\n}\n",
        "token_count": 146
    },
    "00403cb7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00403cb7(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x42170c;\n    while( true ) {\n        if (puVar1 == NULL) {\n            return 1;\n        }\n        if (puVar1[2] == param_1) break;\n        puVar1 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 94
    },
    "00405f64": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405f64(int16_t *param_1, int16_t param_2)\n\n{\n    for (; (*param_1 != 0 && (*param_1 != param_2)); param_1 = (*_sym.imp.USER32.dll_CharNextW)(param_1)) {\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004060bd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004060bd(int32_t arg_8h, uint lpString2)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    while( true ) {\n        iVar4 = (*pcVar2)(arg_8h);\n        if (iVar4 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(iVar3 + arg_8h);\n        *(iVar3 + arg_8h) = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(arg_8h, lpString2);\n        *(iVar3 + arg_8h) = uVar1;\n        if (iVar4 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 246
    },
    "00406113": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406113(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00406a71": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a71(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageW;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00406b90": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406b90(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x80;\n    do {\n        iVar1 = iVar1 + -1;\n        *(iVar1 + param_1) = 0;\n    } while (iVar1 != 0);\n    *(param_1 + 0x78) = 0xffffffff;\n    *(param_1 + 0x68) = 1;\n    *(param_1 + 100) = 1;\n    *(param_1 + 0x60) = 1;\n    *(param_1 + 0x5c) = 1;\n    return;\n}\n",
        "token_count": 151
    },
    "004061db": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004061db(uint hFile, uint lpBuffer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_10h;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, lpBuffer, arg_10h, &arg_10h, 0);\n    if ((iVar2 == 0) || (iVar1 != arg_10h)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 142
    },
    "00406428": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nvoid fcn.00406428(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 5;\n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileExW)(param_1, param_2, 5);\n    if (iVar1 == 0) {\n        fcn.004062ae(param_2, uVar2);\n    }\n    *0x42a2f0 = *0x42a2f0 + 1;\n    return;\n}\n",
        "token_count": 122
    },
    "00405b99": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00405b99(uint lpFileName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar pSecurityDescriptor;\n    uint var_1fh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpSecurityAttributes;\n    uchar *var_8h;\n    uint var_4h;\n    \n    var_1fh._0_1_ = 0;\n    stack0xffffffe0 = 0x4083f8;\n    var_18h = 0x4083f8;\n    var_8h = &pSecurityDescriptor;\n    var_14h = 0;\n    var_4h = 0;\n    pSecurityDescriptor = 1;\n    var_1fh._1_2_ = 4;\n    var_10h = 0x4083e8;\n    lpSecurityAttributes = 0xc;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(lpFileName, &lpSecurityAttributes);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 != 0xb7) {\n            return iVar2;\n        }\n        iVar2 = (*_sym.imp.ADVAPI32.dll_SetFileSecurityW)(lpFileName, 0x80000007, &pSecurityDescriptor);\n        if (iVar2 == 0) {\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 365
    },
    "00405c16": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nuint fcn.00405c16(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(param_1, 0);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 100
    },
    "0040620a": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040620a(uint hFile, uint lpBuffer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_10h;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, lpBuffer, arg_10h, &arg_10h, 0);\n    if ((iVar2 == 0) || (iVar1 != arg_10h)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 143
    },
    "00406a35": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint fcn.00406a35(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = *(param_1 * 8 + 0x40a410);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2);\n    if ((iVar1 == 0) && (iVar1 = fcn.004069c5(uVar2),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, *(param_1 * 8 + 0x40a414));\n    return uVar2;\n}\n",
        "token_count": 153
    }
}