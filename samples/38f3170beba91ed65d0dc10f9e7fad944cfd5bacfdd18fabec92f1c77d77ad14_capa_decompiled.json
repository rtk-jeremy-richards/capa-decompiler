{
    "0040797f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040797f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t var_14h;\n    \n    uVar2 = 0;\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)(0, &var_14h);\n    *(param_1 + 0x100) = 1 < var_14h;\n    do {\n        iVar1 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByte)(uVar2);\n        *(uVar2 + param_1) = iVar1 != 0;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x100);\n    return;\n}\n",
        "token_count": 164
    },
    "00401302": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401302(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.0041a299(*param_1);\n    }\n    return;\n}\n",
        "token_count": 49
    },
    "00401325": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar fcn.00401325(void)\n\n{\n    char cVar1;\n    ushort *puVar2;\n    int16_t *piVar3;\n    char in_stack_00001ff0;\n    \n    fcn.004154b0();\n    fcn.004032be();\n    fcn.00406af8();\n    do {\n        cVar1 = fcn.00406aa0(&stack0xfffffff4, 0x800);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        puVar2 = fcn.004038fd();\n        cVar1 = fcn.004037cf();\n        if (in_stack_00001ff0 == '\\0') {\n            if (cVar1 != '\\0') {\n                fcn.00406924();\n            }\n        }\n        else if (cVar1 != '\\0') {\n            *puVar2 = 0;\n        }\n        piVar3 = fcn.004032be();\n        if ((*piVar3 == 0x2a) && (cVar1 = fcn.004037cf(),  cVar1 != '\\0')) {\n            fcn.0040694c();\n        }\n        cVar1 = fcn.00402dfc();\n    } while (cVar1 == '\\0');\n    return 1;\n}\n",
        "token_count": 288
    },
    "00401428": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401428(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    cVar1 = fcn.00401325(in_ECX + 0xb260, arg_ch, arg_8h, arg_10h, 6);\n    if (cVar1 == '\\0') {\n        if ((arg_14h != '\\0') && (*(in_ECX + 0xb2d0) != 0)) {\n            cVar1 = fcn.00401325(in_ECX + 0xb2bc, arg_ch, arg_8h, arg_10h, 6);\n            if (cVar1 == '\\0') goto code_r0x00401449;\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x00401449:\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 226
    },
    "00401501": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00401501(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    char *unaff_ESI;\n    ushort *in_stack_00000014;\n    int32_t in_stack_00000018;\n    uint uVar5;\n    \n    if ((in_stack_00000014 != NULL) && (in_stack_00000018 != 0)) {\n        *in_stack_00000014 = 0;\n    }\n    iVar4 = 1;\n    uVar5 = 0;\n    cVar1 = fcn.00401428(param_1 + 0x28, *(param_1 + 0x10e9), 0, 1);\n    if (cVar1 == '\\0') {\n        fcn.00406af8();\n        while (iVar2 = fcn.00406a52(),  iVar2 != 0) {\n            cVar1 = fcn.00402dfc();\n            if (cVar1 != '\\0') {\n                if (unaff_ESI != NULL) {\n                    iVar3 = fcn.0040691f(iVar2, uVar5);\n                    *unaff_ESI = '\\x01' - (iVar3 != 0);\n                }\n                if (in_stack_00000014 == NULL) {\n                    return iVar4;\n                }\n                fcn.0040694c(in_stack_00000014, iVar2, unaff_EBX);\n                return iVar4;\n            }\n            iVar4 = iVar4 + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 367
    },
    "004015da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015da(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.0040123b(*param_1, param_1[2] - *param_1 & 0xfffffff8);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "004017d2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar __thiscall fcn.004017d2(int32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    \n    if (*(param_1 + 9) == '\\0') {\n        fcn.004019e9();\n        cVar1 = fcn.00407701(param_2);\n        if (cVar1 == '\\0') {\n            *(param_1 + 10) = 1;\n        }\n    }\n    else {\n        cVar1 = '\\0';\n    }\n    return cVar1;\n}\n",
        "token_count": 119
    },
    "004017fd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004017fd(int32_t param_1)\n\n{\n    if (*(param_1 + 0xc) == '\\0') {\n        fcn.00401684(10, &stack0x00000004);\n        fcn.004019e9();\n    }\n    fcn.004019a1(2);\n    return;\n}\n",
        "token_count": 78
    },
    "00401a76": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401a76(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if ((arg_8h == 0xff) && (*(in_ECX + 8) == '\\0')) {\n        return;\n    }\n    fcn.004019a1(arg_8h);\n    var_4h = arg_8h;\n    fcn.00416a40(&var_4h, 0x4316a4);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 142
    },
    "00401978": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401978(int32_t param_1)\n\n{\n    if (*(param_1 + 0xc) == '\\0') {\n        fcn.00401684(0xb, &stack0x00000004);\n        fcn.004019e9();\n    }\n    fcn.00401a76(2);\n    return;\n}\n",
        "token_count": 79
    },
    "004019a1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004019a1(int32_t *param_1, int32_t param_2)\n\n{\n    if (param_2 == 1) {\ncode_r0x004019bd:\n        if (*param_1 != 0) goto code_r0x004019c4;\n    }\n    else {\n        if (param_2 == 2) {\n            if ((*param_1 == 0) || (*param_1 == 1)) {\n                *param_1 = 2;\n            }\n            goto code_r0x004019c4;\n        }\n        if (param_2 == 3) {\n            if (*param_1 != 0xb) {\n                *param_1 = 3;\n            }\n            goto code_r0x004019c4;\n        }\n        if (param_2 == 0xff) goto code_r0x004019bd;\n    }\n    *param_1 = param_2;\ncode_r0x004019c4:\n    param_1[1] = param_1[1] + 1;\n    return;\n}\n",
        "token_count": 237
    },
    "00401bae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401bae(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    var_ch = *in_FS_OFFSET;\n    uStack8 = 0xffffffff;\n    uStack12 = 0x4288c3;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = 0x429588;\n    if ((param_1[2] != -1) && (*(param_1 + 0x15) == '\\0')) {\n        if (*(param_1 + 7) == '\\0') {\n            fcn.00401c30();\n        }\n        else {\n            fcn.00401d5e();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 181
    },
    "00401c30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401c30(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint8_t uVar1;\n    \n    uVar1 = 1;\n    if (*(param_1 + 8) != -1) {\n        if ((*(param_1 + 0x15) == '\\0') && (*(param_1 + 0x10) == 0)) {\n            in_EAX = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 8));\n            uVar1 = 1 - (in_EAX != 1);\n        }\n        *(param_1 + 8) = 0xffffffff;\n    }\n    *(param_1 + 0x10) = 0;\n    if ((uVar1 == 0) && (*(param_1 + 0x1e) != '\\0')) {\n        in_EAX = fcn.004017fd(param_1 + 0x32);\n    }\n    return in_EAX & 0xffffff00 | uVar1;\n}\n",
        "token_count": 232
    },
    "00401c7e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00401c7e(void)\n\n{\n    char cVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    uint uVar5;\n    int32_t iVar6;\n    uint in_stack_00001000;\n    uint in_stack_00001004;\n    uint32_t in_stack_00001008;\n    \n    fcn.004154b0();\n    if (((in_stack_00001008 & 0x10) == 0) && (*(extraout_ECX + 0x30) == '\\0')) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = 1;\n    }\n    *(extraout_ECX + 0x20) = in_stack_00001008;\n    iVar6 = (in_stack_00001008 >> 1 ^ 1) * -0x80000000 + 0x40000000;\n    piVar2 = fcn.004038fd(in_stack_00001004);\n    if (((*piVar2 == 0x2e) || (*piVar2 == 0x20)) && ((in_stack_00001008 & 0x20) == 0)) {\n        iVar3 = -1;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(in_stack_00001000, iVar6, uVar5, 0, 2, 0, 0);\n    }\n    *(extraout_ECX + 8) = iVar3;\n    if (iVar3 == -1) {\n        cVar1 = fcn.004035e5(in_stack_00001000, &stack0xfffffffc, 0x800);\n        if (cVar1 != '\\0') {\n            uVar5 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&stack0xfffffff0, iVar6, uVar5, 0, 2, 0, 0);\n            *(extraout_ECX + 8) = uVar5;\n        }\n    }\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x1c) = 1;\n    *(extraout_ECX + 0x15) = 0;\n    uVar4 = fcn.0040694c(extraout_ECX + 0x32, in_stack_00001000, 0x800);\n    return uVar4 & 0xffffff00 | *(extraout_ECX + 8) != -1;\n}\n",
        "token_count": 571
    },
    "00401d5e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401d5e(int32_t *param_1)\n\n{\n    code *pcVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    \n    if (param_1[4] == 0) {\n        if (param_1[2] != -1) {\n            pcVar1 = *(*param_1 + 8);\n            (**0x42922c)();\n            in_EAX = (*pcVar1)();\n        }\n        if (*(param_1 + 0x1d) != '\\0') {\n            uVar2 = fcn.0040272f(param_1 + 0x32);\n            return uVar2;\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 169
    },
    "00401d95": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401d95(uint lpBuffer, uint32_t nNumberOfBytesToRead)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t lpNumberOfBytesRead;\n    \n    lpNumberOfBytesRead = in_ECX;\n    if (*(in_ECX + 0x10) == 1) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n        *(in_ECX + 8) = uVar2;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(in_ECX + 8), lpBuffer, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n    if (iVar3 == 0) {\n        cVar1 = fcn.00401ea2();\n        if ((cVar1 == '\\0') || (nNumberOfBytesToRead < 0x4e21)) {\n            if ((*(in_ECX + 0x10) == 1) && (iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 == 0x6d)) {\n                return 0;\n            }\n            if (((*(in_ECX + 0x10) != 0) || (nNumberOfBytesToRead < 0x8001)) ||\n               (iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 != 0x21)) {\n                return -1;\n            }\n            uVar2 = 0x8000;\n        }\n        else {\n            uVar2 = 20000;\n        }\n        iVar3 = fcn.00401d95(lpBuffer, uVar2);\n        return iVar3;\n    }\n    return lpNumberOfBytesRead;\n}\n",
        "token_count": 397
    },
    "00401ee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00401ee0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint in_stack_00001038;\n    uint in_stack_00001044;\n    uint in_stack_00001054;\n    uint32_t in_stack_00001058;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    fcn.004154b0();\n    *(extraout_ECX + 0x1034) = 0;\n    if ((*(extraout_ECX + 0x30) == '\\0') && ((in_stack_00001058 & 4) == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    uVar6 = ((~(in_stack_00001058 >> 1) & 1) + 1) * 0x40000000;\n    if ((in_stack_00001058 & 1) != 0) {\n        uVar6 = uVar6 | 0x40000000;\n    }\n    uVar5 = ~(in_stack_00001058 >> 3) & 1;\n    if (bVar1) {\n        uVar5 = uVar5 | 2;\n    }\n    uStack20 = 0x401f3f;\n    fcn.00401b85();\n    if (*(extraout_ECX + 0x24) != '\\0') {\n        uVar6 = uVar6 | 0x100;\n    }\n    uStack20 = 0;\n    uStack24 = 0x8000000;\n    iStack28 = 3;\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(in_stack_00001054, uVar6, uVar5, 0);\n    if (iVar3 == -1) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        cVar2 = fcn.004035e5(in_stack_00001044, &stack0xfffffff8, 0x800);\n        if (cVar2 != '\\0') {\n            iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&stack0xffffffec, uVar6, uVar5, 0, 3, 0x8000000, 0);\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar4 == 2) {\n                iStack28 = iVar4;\n            }\n            goto code_r0x00401fc3;\n        }\n    }\n    else {\ncode_r0x00401fc3:\n        if (iVar3 != -1) goto code_r0x00401fd9;\n    }\n    if (iStack28 == 2) {\n        *(extraout_ECX + 0x1034) = 1;\n    }\ncode_r0x00401fd9:\n    if ((*(extraout_ECX + 0x24) != '\\0') && (iVar3 != -1)) {\n        iStack28 = -1;\n        uStack24 = 0xffffffff;\n        (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar3, 0, &stack0xffffffe4, 0);\n    }\n    uVar6 = 0;\n    *(extraout_ECX + 0x1c) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x15) = 0;\n    if (iVar3 != -1) {\n        *(extraout_ECX + 8) = iVar3;\n        uVar6 = fcn.0040694c(extraout_ECX + 0x32, in_stack_00001038, 0x800);\n        *(extraout_ECX + 0x25) = 0;\n    }\n    return uVar6 & 0xffffff00 | iVar3 != -1;\n}\n",
        "token_count": 894
    },
    "0040203c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar fcn.0040203c(void)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    uint32_t uVar5;\n    bool bVar6;\n    uint32_t in_stack_00001010;\n    int32_t in_stack_00001014;\n    int32_t in_stack_00001018;\n    \n    fcn.004154b0();\n    if (extraout_ECX[2] != -1) {\n        if (extraout_ECX[4] == 1) {\n            if (in_stack_00001018 != 1) {\n                if ((in_stack_00001018 != 0) ||\n                   ((in_stack_00001014 <= extraout_ECX[0xb] &&\n                    ((in_stack_00001014 < extraout_ECX[0xb] || (in_stack_00001010 < extraout_ECX[10])))))) {\n                    if (in_stack_00001018 == 2) {\n                        while( true ) {\n                            pcVar2 = *(*extraout_ECX + 0xc);\n                            (**0x42922c)(&stack0x0000000c, 0x1000);\n                            uVar3 = (*pcVar2)();\n                            if (uVar3 < 1) break;\n                            puVar1 = extraout_ECX + 10;\n                            uVar5 = *puVar1;\n                            *puVar1 = *puVar1 + uVar3;\n                            extraout_ECX[0xb] = extraout_ECX[0xb] + CARRY4(uVar5, uVar3);\n                        }\n                        return '\\x01';\n                    }\n                    return '\\0';\n                }\n                bVar6 = in_stack_00001010 < extraout_ECX[10];\n                in_stack_00001010 = in_stack_00001010 - extraout_ECX[10];\n                in_stack_00001014 = (in_stack_00001014 - extraout_ECX[0xb]) - bVar6;\n            }\n            bVar6 = in_stack_00001014 == 0;\n            uVar3 = in_stack_00001010;\n            if (!bVar6) goto code_r0x004020eb;\n            while (in_stack_00001010 != 0) {\n                bVar6 = in_stack_00001014 == 0;\n                uVar3 = in_stack_00001010;\ncode_r0x004020eb:\n                in_stack_00001010 = uVar3;\n                if (!bVar6) goto code_r0x004020ff;\n                uVar5 = uVar3;\n                if (0xfff < uVar3) goto code_r0x004020ff;\n                while( true ) {\n                    pcVar2 = *(*extraout_ECX + 0xc);\n                    (**0x42922c)(&stack0x0000000c, uVar3);\n                    uVar3 = (*pcVar2)();\n                    if (uVar3 < 1) {\n                        return '\\0';\n                    }\n                    in_stack_00001010 = uVar5 - uVar3;\n                    in_stack_00001014 = (in_stack_00001014 - (uVar3 >> 0x1f)) - (uVar5 < uVar3);\n                    puVar1 = extraout_ECX + 10;\n                    uVar5 = *puVar1;\n                    *puVar1 = *puVar1 + uVar3;\n                    extraout_ECX[0xb] = extraout_ECX[0xb] + (uVar3 >> 0x1f) + CARRY4(uVar5, uVar3);\n                    if (in_stack_00001014 == 0) break;\ncode_r0x004020ff:\n                    uVar3 = 0x1000;\n                    uVar5 = in_stack_00001010;\n                }\n            }\n        }\n        else {\n            if (((in_stack_00001014 < 1) && (in_stack_00001014 < 0)) && (in_stack_00001018 != 0)) {\n                if (in_stack_00001018 == 1) {\n                    pcVar2 = *(*extraout_ECX + 0x14);\n                    (**0x42922c)();\n                    iVar4 = (*pcVar2)();\n                }\n                else {\n                    iVar4 = fcn.00401e2a();\n                }\n                in_stack_00001010 = in_stack_00001010 + iVar4;\n                in_stack_00001018 = 0;\n            }\n            iVar4 = (*_sym.imp.KERNEL32.dll_SetFilePointer)\n                              (extraout_ECX[2], in_stack_00001010, *0x10, in_stack_00001018);\n            if (iVar4 == -1) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                return '\\x01' - (iVar4 != 0);\n            }\n        }\n    }\n    return '\\x01';\n}\n",
        "token_count": 1096
    },
    "004021d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004021d0(int32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t nNumberOfBytesToRead;\n    uint32_t unaff_EDI;\n    ushort uVar7;\n    uint32_t uStack16;\n    int32_t iStack12;\n    \n    if (*(param_1 + 0x25) != '\\0') {\n        return 0;\n    }\n    if (param_1[6] == 2) {\n        pcVar2 = *(*param_1 + 0x14);\n        (**0x42922c)();\n        (*pcVar2)();\n    }\n    uVar6 = 0;\n    uVar4 = param_2;\n    nNumberOfBytesToRead = param_3;\ncode_r0x00402219:\n    uVar3 = fcn.00401d95(uVar4, nNumberOfBytesToRead);\n    uVar7 = uVar4 >> 8;\n    if ((uVar3 == 0xffffffff) && (param_1[0x40d] = 2,  *(param_1 + 0x1e) != '\\0')) {\n        if (param_1[6] == 2) {\n            uVar3 = 0;\n            unaff_EDI = 0;\n            if (nNumberOfBytesToRead != 0) {\n                do {\n                    iVar5 = *param_1;\n                    (**0x42922c)(unaff_EDI + uStack16, iStack12 + CARRY4(unaff_EDI, uStack16), 0);\n                    (**(iVar5 + 0x10))();\n                    uVar4 = param_3 - iStack12;\n                    if (0x1ff < uVar4) {\n                        uVar4 = 0x200;\n                    }\n                    iVar5 = fcn.00401d95(param_2, uVar4);\n                    if (iVar5 == -1) {\n                        iVar5 = 0x200;\n                    }\n                    uVar3 = uVar3 + iVar5;\n                    if (uVar3 != 0xffffffff) {\n                        uVar6 = uVar6 + uVar3;\n                    }\n                    unaff_EDI = unaff_EDI + 0x200;\n                    nNumberOfBytesToRead = param_3;\n                } while (unaff_EDI < param_3);\n            }\n            goto code_r0x0040231b;\n        }\n        if ((param_1[6] == 0) && (param_1[4] == 0)) goto code_r0x004022d4;\n        goto code_r0x00402307;\n    }\n    goto code_r0x0040231b;\ncode_r0x004022d4:\n    uVar4 = unaff_EDI;\n    fcn.004017c1();\n    unaff_EDI = uVar4;\n    if (uVar7 == '\\0') {\n        if (uVar7 >> 8 == '\\0') {\ncode_r0x00402307:\n            if (param_1[6] != 1) {\n                fcn.00401927(param_1 + 0x32);\ncode_r0x0040231b:\n                uVar6 = uVar6 + uVar3;\n                if ((((param_1[4] != 1) || (*(param_1 + 5) != '\\0')) || (uVar3 < 1)) || (nNumberOfBytesToRead <= uVar3))\n                {\n                    if (uVar6 < 1) {\n                        return uVar6;\n                    }\n                    puVar1 = param_1 + 10;\n                    uVar4 = *puVar1;\n                    *puVar1 = *puVar1 + uVar6;\n                    param_1[0xb] = param_1[0xb] + (uVar6 >> 0x1f) + CARRY4(uVar4, uVar6);\n                    return uVar6;\n                }\n                uVar4 = param_2 + uVar3;\n                nNumberOfBytesToRead = nNumberOfBytesToRead - uVar3;\n                param_2 = uVar4;\n                param_3 = nNumberOfBytesToRead;\n                goto code_r0x00402219;\n            }\n        }\n        *(param_1 + 0x25) = 1;\n        return 0;\n    }\n    goto code_r0x00402219;\n}\n",
        "token_count": 1015
    },
    "004023a2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004023a2(int32_t param_1, uint32_t *param_2, uint param_3, uint32_t *param_4)\n\n{\n    bool bVar1;\n    bool bVar2;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint var_4h;\n    ushort uVar3;\n    char cVar4;\n    uchar auStack24 [4];\n    uchar auStack20 [4];\n    uchar auStack16 [4];\n    uchar auStack12 [12];\n    \n    uVar3 = unaff_EBP >> 0x10;\n    cVar4 = unaff_EBX >> 0x10;\n    if ((*(param_1 + 0x20) != 0x100) && ((*(param_1 + 0x20) & 2) == 0)) {\n        (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(*(param_1 + 8));\n    }\n    bVar2 = true;\n    if ((param_2 == NULL) || ((*param_2 | param_2[1]) == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if ((param_4 == NULL) || ((*param_4 | param_4[1]) == 0)) {\n        bVar2 = false;\n    }\n    if (bVar1) {\n        fcn.004071b7(auStack24);\n    }\n    if (cVar4 != '\\0') {\n        fcn.004071b7(auStack12);\n    }\n    if (bVar2) {\n        fcn.004071b7(auStack20);\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)\n              (*(param_1 + 8), -(uVar3 != '\\0') & auStack16, -bVar2 & auStack24, \n               -(uVar3 >> 8 != '\\0') & &stack0xffffffe0);\n    return;\n}\n",
        "token_count": 443
    },
    "00402480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00402480(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    if (*(param_1 + 8) == -1) {\n        if (*(param_1 + 0x1e) != '\\0') {\n            var_4h = param_1;\n            fcn.00401978(param_1 + 0x32);\n            goto code_r0x004024aa;\n        }\n    }\n    else {\ncode_r0x004024aa:\n        if (*(param_1 + 0x10) == 1) {\n            iVar1 = *(param_1 + 0x28);\n            var_4h = *(param_1 + 0x2c);\n            goto code_r0x004024fd;\n        }\n        var_4h = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(*(param_1 + 8), 0, &var_4h, 1);\n        if ((iVar1 != -1) || (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 == 0)) goto code_r0x004024fd;\n        if (*(param_1 + 0x1e) != '\\0') {\n            fcn.00401978(param_1 + 0x32);\n            goto code_r0x004024fd;\n        }\n    }\n    iVar1 = -1;\n    var_4h = 0xffffffff;\ncode_r0x004024fd:\n    return CONCAT44(var_4h, iVar1);\n}\n",
        "token_count": 359
    },
    "0040251a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __thiscall fcn.0040251a(int32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int32_t *unaff_EBP;\n    uint32_t unaff_ESI;\n    uint32_t uVar6;\n    char cVar7;\n    ulong uVar8;\n    int32_t *piStack8;\n    int32_t *piStack4;\n    \n    if (param_3 == 0) {\n        cVar7 = '\\x01';\n    }\n    else {\n        piStack4 = param_1 + 2;\n        if (param_1[4] == 1) {\n            piStack8 = param_1;\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff5);\n            param_1[2] = iVar3;\n        }\n        piVar5 = param_1 + 2;\ncode_r0x00402551:\n        piStack8 = NULL;\n        cVar7 = '\\0';\n        if (param_1[4] == 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)(*piVar5, param_2, param_3, &piStack8, 0);\n            cVar7 = '\\x01' - (iVar3 != 1);\ncode_r0x004025c0:\n            if (cVar7 != '\\0') goto code_r0x00402642;\n        }\n        else {\n            uVar6 = 0;\n            if (param_3 != 0) {\n                do {\n                    uVar4 = param_3 - uVar6;\n                    if (0x3fff < uVar4) {\n                        uVar4 = 0x4000;\n                    }\n                    iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)(*piVar5, param_2 + uVar6, uVar4, &piStack8, 0);\n                    cVar7 = iVar3 == 1;\n                } while ((cVar7) && (uVar6 = uVar6 + 0x4000,  piVar5 = piStack4,  uVar6 < param_3));\n                goto code_r0x004025c0;\n            }\n        }\n        if ((*(param_1 + 0x1e) == '\\0') || (param_1[4] != 0)) goto code_r0x00402642;\n        cVar2 = fcn.004017d2();\n        if (cVar2 != '\\0') {\n            piVar5 = unaff_EBP;\n            if ((unaff_ESI < param_3) && (unaff_ESI != 0)) {\n                iVar3 = *param_1;\n                pcVar1 = *(iVar3 + 0x14);\n                (**0x42922c)(0);\n                uVar8 = (*pcVar1)();\n                (**0x42922c)(uVar8 - unaff_ESI, (uVar8 >> 0x20) - (uVar8 < unaff_ESI));\n                (**(iVar3 + 0x10))();\n                piVar5 = piStack4;\n            }\n            goto code_r0x00402551;\n        }\n        fcn.00401ac9(0, param_1 + 0x32);\ncode_r0x00402642:\n        *(param_1 + 3) = 1;\n    }\n    return cVar7;\n}\n",
        "token_count": 788
    },
    "00402651": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00402651(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint8_t uVar5;\n    uint32_t arg_10h;\n    int16_t *piVar6;\n    int16_t *in_stack_00001008;\n    char in_stack_0000100c;\n    \n    uVar2 = fcn.004154b0();\n    if ((in_stack_00001008 == NULL) || (uVar2 = 0,  *in_stack_00001008 == 0)) {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    else {\n        uVar5 = 1;\n        uVar2 = 0;\n        piVar6 = in_stack_00001008;\n        do {\n            arg_10h = uVar2 >> 1;\n            if (0x7ff < arg_10h) break;\n            cVar1 = fcn.004037cf(*piVar6);\n            if (((cVar1 != '\\0') && (in_stack_00001008 < piVar6)) &&\n               ((piVar6 != in_stack_00001008 + 2 || (in_stack_00001008[1] != 0x3a)))) {\n                fcn.0041c3bb(*0x10, in_stack_00001008, arg_10h);\n                *(&stack0x00000000 + arg_10h * 2) = 0;\n                iVar3 = fcn.00402810(*0x10, 1, 0);\n                uVar5 = 1 - (iVar3 != 0);\n            }\n            piVar6 = piVar6 + 1;\n            uVar2 = uVar2 + 2;\n        } while (*piVar6 != 0);\n        if (in_stack_0000100c == '\\0') {\n            puVar4 = fcn.004038fd(in_stack_00001008);\n            uVar2 = fcn.004037cf(*puVar4);\n            if (uVar2 == '\\0') {\n                iVar3 = fcn.00402810(in_stack_00001008, 1, 0);\n                uVar2 = -iVar3 & 0xffffff00;\n                uVar5 = 1 - (iVar3 != 0);\n            }\n        }\n        uVar2 = uVar2 & 0xffffff00 | uVar5;\n    }\n    return uVar2;\n}\n",
        "token_count": 553
    },
    "00402810": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar __cdecl fcn.00402810(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint lpPathName;\n    uint uStackY40;\n    \n    fcn.004154b0();\n    piVar2 = fcn.004038fd();\n    if ((*piVar2 == 0x2e) || (*piVar2 == 0x20)) {\ncode_r0x00402841:\n        cVar1 = fcn.00402780();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.004035e5(arg_8h, &fcn.00402810::lpPathName, 0x800);\n            if (cVar1 != '\\0') {\n                uStackY40 = 0x402870;\n                iVar3 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n                if (iVar3 != 0) goto code_r0x00402874;\n            }\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        cVar1 = '\\x02';\n        if (iVar3 != 2) {\n            cVar1 = (iVar3 == 3) + '\\x01';\n        }\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n        if (iVar3 == 0) goto code_r0x00402841;\ncode_r0x00402874:\n        if (arg_ch != '\\0') {\n            uStackY40 = 0x402883;\n            fcn.00402a4b(arg_8h, arg_10h);\n        }\n        cVar1 = '\\0';\n    }\n    return cVar1;\n}\n",
        "token_count": 394
    },
    "004028b2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004028b2(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint in_stack_00000fec;\n    uint in_stack_00001000;\n    uint in_stack_0000101c;\n    uint in_stack_00001024;\n    uint in_stack_00001028;\n    uint dwFileAttributes;\n    uint uVar5;\n    \n    fcn.004154b0();\n    bVar1 = true;\n    uVar3 = fcn.00402792(in_stack_00001028);\n    if ((uVar3 == 0xffffffff) || ((uVar3 & 1) == 0)) {\n        bVar1 = false;\n    }\n    else {\n        fcn.00402a4b(in_stack_00001024, 0);\n    }\n    uVar5 = 0;\n    dwFileAttributes = 0x40000000;\n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(in_stack_0000101c, 0x40000000, 3, 0, 3, 0x2000000, 0);\n    if ((iVar4 != -1) ||\n       ((cVar2 = fcn.004035e5(in_stack_00001000, &stack0xfffffffc, 0x800),  cVar2 != '\\0' &&\n        (iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&stack0xfffffff0, 0x40000000, 3, 0, 3, 0x2000000, 0),  iVar4 != -1\n        )))) {\n        if (uVar5 >> 8 != '\\0') {\n            fcn.004071b7(&stack0xffffffe4);\n        }\n        if (uVar5 >> 0x18 != '\\0') {\n            fcn.004071b7(&stack0xfffffff4);\n        }\n        if (uVar5 >> 0x10 != '\\0') {\n            fcn.004071b7(&stack0xffffffec);\n        }\n        (*_sym.imp.KERNEL32.dll_SetFileTime)\n                  (iVar4, -(uVar5 >> 0x18 != '\\0') & &stack0xfffffff4, -(uVar5 >> 0x10 != '\\0') & &stack0xffffffec, \n                   -(uVar5 >> 8 != '\\0') & &stack0xffffffe4);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n        if (bVar1) {\n            fcn.00402a4b(in_stack_00000fec, dwFileAttributes);\n        }\n    }\n    return;\n}\n",
        "token_count": 598
    },
    "00402b4b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00402b4b(int16_t *param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    \n    while( true ) {\n        *(param_2 + 0x1044) = 0;\n        if (*param_1 == 0) {\n            return 0;\n        }\n        if (*(param_1 + 0x800) == '\\0') {\n            iVar2 = fcn.00402c15(*(param_1 + 0x802), param_1, param_2);\n        }\n        else {\n            iVar2 = fcn.00402c15(0xffffffff, param_1, param_2);\n            *(param_1 + 0x802) = iVar2;\n        }\n        if (iVar2 == -1) break;\n        *(param_2 + 0x1040) = 0;\n        uVar1 = fcn.004027ed(*(param_2 + 0x1008));\n        *(param_2 + 0x100c) = uVar1;\n        uVar1 = fcn.00402804(*(param_2 + 0x1008));\n        *(param_2 + 0x100d) = uVar1;\n        *(param_1 + 0x800) = 0;\n        arg_8h = fcn.00403919();\n        iVar2 = fcn.0041c37b(arg_8h, 0x4295a4);\n        if ((iVar2 != 0) && (iVar2 = fcn.0041c37b(arg_8h, 0x4295a8),  iVar2 != 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 397
    },
    "00402dfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00402dfc(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint arg_ch;\n    uint32_t uVar6;\n    uint32_t unaff_retaddr;\n    uint32_t arg_10h;\n    uint in_stack_0000200c;\n    int32_t in_stack_00002010;\n    uint32_t in_stack_00002014;\n    uchar *puStack36;\n    uint uStack32;\n    int16_t iVar7;\n    \n    fcn.004154b0();\n    uVar6 = in_stack_00002014 & 0xffff;\n    arg_10h = unaff_retaddr & 0xffffff00 | in_stack_00002014 >> 0x1f;\n    if (uVar6 != 0) {\n        iVar3 = fcn.0041a023(in_stack_0000200c);\n        if (((uVar6 != 2) && (uVar6 != 4)) && (uVar6 != 3)) {\n            if (in_stack_00002014 < 0) {\n                uStack32 = 0x402e64;\n                uVar4 = fcn.0041c3fe(in_stack_0000200c, in_stack_00002010, iVar3);\n            }\n            else {\n                uStack32 = 0x402e6e;\n                uVar4 = fcn.00407d8f(in_stack_0000200c, in_stack_00002010, iVar3);\n            }\n            if (uVar4 == 0) {\n                uVar1 = *(in_stack_00002010 + iVar3 * 2);\n                uVar4 = uVar1;\n                if (((uVar4 == 0x5c) || (uVar4 == 0x2f)) || (uVar1 == 0)) {\n                    return CONCAT31(uVar1 >> 8, 1);\n                }\n            }\n            if (uVar6 == 1) goto code_r0x00402f93;\n        }\n        uStack32 = 0x402ea7;\n        fcn.004034bf();\n        iVar7 = in_stack_0000200c;\n        uStack32 = 0x800;\n        puStack36 = &stack0x00000ffc;\n        fcn.004034bf();\n        if (((uVar6 == 2) || (uVar6 == 4)) &&\n           (uVar4 = fcn.004030eb(&stack0xfffffff0, &stack0x00000ff0, arg_10h),  uVar4 != 0)) goto code_r0x00402f93;\n        if (uVar6 == 3) goto code_r0x00402ee6;\n        if ((uVar6 == 5) || (uVar6 == 6)) {\n            cVar2 = fcn.004037e6();\n            if (cVar2 != '\\0') goto code_r0x00402ee6;\n            if ((uVar6 == 5) || (cVar2 = fcn.004037e6(),  cVar2 != '\\0')) {\n                if (iVar7 == 0) goto code_r0x00402f37;\n                uVar5 = fcn.0041a023(&stack0xffffffe4);\n                if (uStack32 == '\\0') {\n                    uVar4 = fcn.00407d8f(&stack0xffffffe4, &stack0x00000fe4, uVar5);\n                }\n                else {\n                    uVar4 = fcn.0041c3fe(&stack0xffffffe4, &stack0x00000fe4, uVar5);\n                }\n            }\n            else {\n                uVar4 = fcn.004030eb(&stack0xffffffdc, &stack0x00000fdc, arg_10h);\n            }\n            if (uVar4 != 0) {\ncode_r0x00402f93:\n                return uVar4 & 0xffffff00;\n            }\n        }\n    }\ncode_r0x00402f37:\n    uVar5 = fcn.00403919();\n    arg_ch = fcn.00403919();\n    if (uVar6 == 2) {\n        iVar3 = fcn.004030eb(uVar5, arg_ch, arg_10h);\n        return -iVar3 & 0xffffff00U | 1 - (iVar3 != 0);\n    }\ncode_r0x00402ee6:\n    uVar6 = fcn.00402f9a();\n    return uVar6;\n}\n",
        "token_count": 1033
    },
    "004030eb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004030eb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    if (arg_10h == '\\0') {\n        fcn.0040691f();\n    }\n    else {\n        fcn.0041c37b(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "0040310c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040310c(uint param_1, char param_2)\n\n{\n    if (param_2 == '\\0') {\n        param_1 = fcn.00407d5e(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 57
    },
    "00403216": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFilePart\n\nvoid __cdecl fcn.00403216(int16_t *arg_8h, int16_t *arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar auStackY8200 [4096];\n    uint lpBuffer;\n    uint uStackY64;\n    uchar *puStackY60;\n    uint uStackY56;\n    uint *puStackY52;\n    uint *puStackY48;\n    uint lpFilePart;\n    \n    lpFilePart = 0x403223;\n    fcn.004154b0();\n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        if (arg_10h == 0) {\n            return;\n        }\n        *arg_ch = 0;\n        return;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)();\n    if ((uVar2 == 0) || (0x800 < uVar2)) {\n        puStackY48 = 0x403263;\n        cVar1 = fcn.004035e5(arg_8h, &stack0xffffdff8, 0x800);\n        if (cVar1 != '\\0') {\n            puStackY48 = &fcn.00403216::lpFilePart;\n            puStackY52 = &fcn.00403216::lpBuffer;\n            uStackY56 = 0x800;\n            puStackY60 = &stack0xffffdff8;\n            uStackY64 = 0x403280;\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)();\n        }\n        if (uVar2 != 0) goto code_r0x00403288;\n    }\n    else {\ncode_r0x00403288:\n        if (uVar2 < 0x800) goto code_r0x0040329f;\n    }\n    if (arg_8h == arg_ch) {\n        return;\n    }\ncode_r0x0040329f:\n    puStackY48 = 0x4032a7;\n    fcn.0040694c();\n    return;\n}\n",
        "token_count": 485
    },
    "004032be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * fcn.004032be(void)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint in_stack_00000ffc;\n    uint in_stack_00001000;\n    int16_t *in_stack_00001004;\n    int16_t *piVar7;\n    int32_t in_stack_00001008;\n    uint uVar8;\n    \n    fcn.004154b0();\n    uVar8 = 0x2e;\n    iVar3 = *in_stack_00001004;\n    if (iVar3 != 0) {\n        piVar5 = in_stack_00001004 + 2;\n        do {\n            cVar2 = fcn.004037cf(uVar8, iVar3);\n            if ((((cVar2 != '\\0') && (piVar5[-1] == 0x2e)) && (*piVar5 == 0x2e)) &&\n               (cVar2 = fcn.004037cf(),  cVar2 != '\\0')) {\n                in_stack_00001004 = piVar5 + 2;\n            }\n            iVar3 = piVar5[-1];\n            piVar5 = piVar5 + 1;\n        } while (iVar3 != 0);\n        iVar3 = *in_stack_00001004;\n    }\n    piVar5 = in_stack_00001004;\n    if (iVar3 != 0) {\n        iVar3 = *in_stack_00001004;\n        do {\n            iVar4 = 0;\n            piVar6 = in_stack_00001004;\n            if ((iVar3 != 0) && (in_stack_00001004[1] == 0x3a)) {\n                piVar6 = in_stack_00001004 + 2;\n                iVar3 = *piVar6;\n            }\n            piVar7 = in_stack_00001004;\n            cVar2 = fcn.004037cf(uVar8, iVar3);\n            if ((cVar2 != '\\0') && (cVar2 = fcn.004037cf(),  cVar2 != '\\0')) {\n                piVar5 = piVar6 + 2;\n                iVar3 = *piVar5;\n                while (iVar3 != 0) {\n                    cVar2 = fcn.004037cf(iVar3);\n                    if ((cVar2 != '\\0') && (iVar4 = iVar4 + 1,  iVar4 == 2)) {\n                        piVar6 = piVar5 + 1;\n                        break;\n                    }\n                    piVar5 = piVar5 + 1;\n                    iVar3 = *piVar5;\n                }\n            }\n            iVar3 = *piVar6;\n            piVar1 = piVar6;\n            piVar5 = in_stack_00001004;\n            while (in_stack_00001004 = piVar1,  iVar3 != 0) {\n                piVar5 = piVar7;\n                cVar2 = fcn.004037cf(iVar3);\n                if (cVar2 == '\\0') {\n                    if (iVar3 != 0x2e) break;\n                }\n                else {\n                    in_stack_00001004 = piVar6 + 1;\n                }\n                piVar6 = piVar6 + 1;\n                piVar1 = in_stack_00001004;\n                piVar7 = piVar5;\n                iVar3 = *piVar6;\n            }\n            if (in_stack_00001004 == piVar5) break;\n            iVar3 = *in_stack_00001004;\n            uVar8 = 0;\n            piVar5 = in_stack_00001004;\n        } while (iVar3 != 0);\n    }\n    if (((*piVar5 == 0x2e) && (piVar5[1] == 0x2e)) && (piVar5[2] == 0)) {\n        piVar5 = piVar5 + 2;\n    }\n    if (in_stack_00001008 != 0) {\n        fcn.0040694c(*0x10, piVar5, 0x800);\n        fcn.0040694c(in_stack_00000ffc, &stack0xfffffff4, in_stack_00001000);\n    }\n    return piVar5;\n}\n",
        "token_count": 965
    },
    "0040349e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040349e(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (param_1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00403919(param_1);\n        uVar1 = fcn.00417024(uVar1, 0x2e);\n    }\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "0040358f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0040358f(int32_t arg_8h, int16_t *arg_ch, int16_t *arg_10h, int32_t arg_14h)\n\n{\n    if ((arg_ch == NULL) || (*arg_ch == 0)) {\n        if (arg_8h == 0) {\n            *arg_10h = 0;\n        }\n        else {\n            fcn.00407946(arg_8h, arg_10h, arg_14h);\n        }\n    }\n    else if (arg_10h != arg_ch) {\n        fcn.0041c3bb(arg_10h, arg_ch, arg_14h);\n    }\n    if (arg_14h != 0) {\n        arg_10h[arg_14h + -1] = 0;\n    }\n    return arg_10h;\n}\n",
        "token_count": 193
    },
    "004035e5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004035e5(int16_t *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint lpBuffer;\n    uint var_ffch;\n    uint uStackY68;\n    uint *puStackY64;\n    int16_t *piStackY60;\n    uint *puStackY56;\n    uint *puStackY52;\n    uint uStackY48;\n    uint *puStackY44;\n    uint *puStackY40;\n    uint *puStackY36;\n    uint *puStackY32;\n    \n    fcn.004154b0();\n    if (*arg_8h != 0) {\n        fcn.0040376f();\n        iVar2 = fcn.0041a023(arg_8h);\n        cVar1 = fcn.0040379a();\n        piStackY60 = arg_8h;\n        if (cVar1 == '\\0') {\n            puStackY32 = 0x7ff;\n            puStackY36 = 0x4036ad;\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n            if ((uVar3 != 0) && (uVar3 < 0x800)) {\n                cVar1 = fcn.004037cf();\n                puStackY56 = arg_10h;\n                if (cVar1 == '\\0') {\n                    fcn.004031e2();\n                    puStackY32 = 0x403722;\n                    iVar4 = fcn.0041a023(&fcn.004035e5::lpBuffer);\n                    if (iVar4 + iVar2 + 4 < arg_10h) {\n                        puStackY32 = 0x4295e8;\n                        puStackY36 = arg_ch;\n                        puStackY40 = 0x40373d;\n                        fcn.0040694c();\n                        puStackY40 = arg_10h;\n                        puStackY44 = &fcn.004035e5::lpBuffer;\n                        puStackY52 = 0x40374d;\n                        fcn.00406924();\n                        if (*arg_8h == 0x2e) {\n                            puStackY52 = arg_8h[1];\n                            puStackY56 = 0x40375d;\n                            cVar1 = fcn.004037cf();\n                            puStackY56 = arg_10h;\n                            if (cVar1 != '\\0') {\n                                piStackY60 = arg_8h + 2;\n                            }\n                        }\n                        goto code_r0x00403645;\n                    }\n                }\n                else if (iVar2 + 6U < arg_10h) {\n                    puStackY32 = 0x4036e6;\n                    fcn.0040694c();\n                    var_ffch._0_2_ = 0;\n                    puStackY36 = &fcn.004035e5::lpBuffer;\n                    puStackY32 = arg_10h;\n                    puStackY52 = arg_ch;\n                    puStackY44 = 0x4036ff;\n                    fcn.00406924();\n                    goto code_r0x00403645;\n                }\n            }\n        }\n        else {\n            puStackY32 = 0x403621;\n            cVar1 = fcn.0040376f();\n            if (cVar1 == '\\0') {\n                if (((*arg_8h == 0x5c) && (piStackY60 = arg_8h + 1,  *piStackY60 == 0x5c)) && (iVar2 + 6U < arg_10h)) {\n                    puStackY32 = arg_10h;\n                    puStackY36 = 0x4295e8;\n                    puStackY40 = arg_ch;\n                    puStackY44 = 0x403688;\n                    fcn.0040694c();\n                    puStackY44 = arg_10h;\n                    uStackY48 = 0x4295f4;\n                    puStackY52 = arg_ch;\n                    puStackY56 = 0x403696;\n                    fcn.00406924();\n                    puStackY56 = arg_10h;\n                    goto code_r0x00403645;\n                }\n            }\n            else if (iVar2 + 4U < arg_10h) {\n                puStackY32 = arg_10h;\n                puStackY36 = 0x4295e8;\n                puStackY40 = arg_ch;\n                puStackY44 = 0x403641;\n                fcn.0040694c();\n                puStackY44 = arg_10h;\ncode_r0x00403645:\n                puStackY64 = arg_ch;\n                uStackY68 = 0x40364d;\n                fcn.00406924();\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1101
    },
    "00403825": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403825(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint var_1000h;\n    uint uStack64;\n    uint uStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uint *puStack36;\n    uint uStack32;\n    int32_t iStack28;\n    uint *puStack24;\n    int32_t iStack20;\n    uint uStack16;\n    \n    fcn.004154b0();\n    puStack24 = &fcn.00403825::var_1000h;\n    uStack16 = 0x800;\n    iStack20 = arg_8h;\n    iStack28 = 0x40384a;\n    fcn.0040694c();\n    iStack28 = arg_8h;\n    uStack32 = 0x403850;\n    cVar1 = fcn.0040376f();\n    if ((cVar1 == '\\0') || (*(arg_8h + 4) != 0)) {\n        uStack32 = 0x800;\n        puStack36 = &fcn.00403825::var_1000h;\n        uStack40 = 0x403868;\n        fcn.004031e2();\n    }\n    uStack40 = 0x800;\n    uStack44 = arg_ch;\n    puStack48 = &fcn.00403825::var_1000h;\n    uStack52 = 0x403878;\n    fcn.00406924();\n    uStack52 = arg_14h;\n    puStack56 = &fcn.00403825::var_1000h;\n    uStack60 = arg_10h;\n    uStack64 = 0x40388a;\n    fcn.0040694c();\n    return;\n}\n",
        "token_count": 431
    },
    "00403919": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * fcn.00403919(int16_t *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    \n    piVar4 = param_1;\n    iVar2 = fcn.0041a023(param_1);\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        piVar3 = param_1 + iVar2;\n        do {\n            cVar1 = fcn.004037cf(piVar4, *piVar3);\n            if (cVar1 != '\\0') {\n                return piVar3 + 1;\n            }\n            piVar3 = piVar3 + -1;\n            iVar2 = iVar2 + -1;\n        } while (-1 < iVar2);\n    }\n    if ((*param_1 != 0) && (param_1[1] == 0x3a)) {\n        param_1 = param_1 + 2;\n    }\n    return param_1;\n}\n",
        "token_count": 232
    },
    "0040398f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040398f(int16_t *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    ushort *puVar1;\n    \n    if ((arg_8h != NULL) && (*arg_8h != 0)) {\n        puVar1 = fcn.0040349e(arg_8h);\n        if (puVar1 != NULL) {\n            *puVar1 = 0;\n        }\n        if (arg_ch != 0) {\n            fcn.00406924(arg_8h, 0x4295a4, arg_10h);\n            fcn.00406924(arg_8h, arg_ch, arg_10h);\n        }\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00403dac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403dac(uint arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_400h;\n    \n    cVar1 = fcn.00403e2c(arg_8h, L\"SIZE\", &var_400h, 0x200);\n    if ((cVar1 == '\\0') || (iVar2 = fcn.00416990(&var_400h, 0x2a),  iVar2 == 0)) {\n        uVar4 = 0;\n    }\n    else {\n        iVar3 = fcn.00407d59(&var_400h);\n        *arg_ch = iVar3;\n        iVar2 = fcn.00407d59(iVar2 + 2);\n        *arg_10h = iVar2;\n        if (((*arg_ch == 100) && (iVar2 == 100)) || ((*arg_ch < 1 || (iVar2 < 1)))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 273
    },
    "00403e7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.00403e7c(int32_t param_1, uint param_2, int32_t param_3, int32_t param_4, uint param_5, uint param_6)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uchar auStack176 [80];\n    uchar auStack96 [80];\n    uchar auStack16 [4];\n    uint uStack12;\n    uchar *puStack8;\n    \n    if (*(param_1 + 0x24) == 0) {\n        return 0;\n    }\n    uStack12 = param_2;\n    puStack8 = auStack96;\n    auStack96[0] = 0;\n    if (param_4 != 0) {\n        fcn.00407b8f(param_4, auStack176, 0x50);\n    }\n    if (param_3 == 0) {\n        fcn.004068f1(auStack96, 0x429698, 0x50);\n    }\n    else {\n        if (param_3 == 1) {\n            uVar2 = 0x42969c;\n        }\n        else {\n            if (param_3 != 2) goto code_r0x00403efe;\n            uVar2 = 0x4296a0;\n        }\n        fcn.00404b41(auStack96, 0x50, uVar2, auStack176);\n    }\ncode_r0x00403efe:\n    piVar1 = fcn.0041c493(auStack16, *(param_1 + 0x10), *(param_1 + 0x14), 4, fcn.00403ca0);\n    if (piVar1 == NULL) {\n        return 0;\n    }\n    fcn.0041cb90(param_5, *(*piVar1 * 0xc + 0x434158), param_6);\n    return 1;\n}\n",
        "token_count": 431
    },
    "00403f80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f80(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_4h;\n    \n    if ((*(in_ECX + 0x24) != 0) &&\n       (piVar1 = fcn.0041c493(arg_8h, *(in_ECX + 0x40), *(in_ECX + 0x44), 4, 0x403d90),  piVar1 != NULL)) {\n        fcn.0040694c(arg_ch, *(*piVar1 * 0xc + *(in_ECX + 0x20) + 8), arg_10h);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 184
    },
    "00403fd2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403fd2(int32_t param_1, uint param_2)\n\n{\n    fcn.00403ff7(param_2);\n    fcn.0040482e();\n    if (*(param_1 + 0x50) != '\\0') {\n        (*_sym.imp.USER32.dll_SetProcessDefaultLayout)(1);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00403ff7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403ff7(void)\n\n{\n    char16_t cVar1;\n    char cVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    char16_t *pcVar5;\n    int32_t iVar6;\n    char16_t *pcVar7;\n    char16_t *pcVar8;\n    uint uVar9;\n    int32_t *piVar10;\n    uint *extraout_ECX;\n    char16_t *pcVar11;\n    char16_t *pcVar12;\n    char16_t **unaff_EBP;\n    int32_t iVar13;\n    char16_t *pcVar14;\n    uint32_t uVar15;\n    char16_t **in_FS_OFFSET;\n    char16_t **arg_ch;\n    char16_t cVar16;\n    char16_t *arg_8h;\n    char16_t **ppcVar17;\n    \n    fcn.00415488();\n    fcn.004154b0();\n    unaff_EBP[4] = 0x5c;\n    unaff_EBP[0xe] = extraout_ECX;\n    iVar3 = fcn.00416990(unaff_EBP[0x18], 0x5c);\n    ppcVar17 = unaff_EBP + -0xc74;\n    if (iVar3 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, ppcVar17, 0x800);\n        puVar4 = fcn.00403919(unaff_EBP + -0xc74);\n        pcVar7 = unaff_EBP[0x18];\n        *puVar4 = 0;\n        ppcVar17 = unaff_EBP + -0xc74;\n        fcn.00406924(ppcVar17, pcVar7, 0x800);\n    }\n    else {\n        pcVar7 = unaff_EBP[0x18];\n        fcn.0040694c(ppcVar17, pcVar7, 0x800);\n    }\n    fcn.00401b41();\n    unaff_EBP[-1] = NULL;\n    cVar2 = fcn.00401ee0(unaff_EBP + -0xc74, 4);\n    if (cVar2 != '\\0') {\n        uVar15 = 0;\n        if (*0x434600 != 0) {\n            do {\n                fcn.004047f1(uVar15);\n                fcn.004047f1();\n                uVar15 = uVar15 + 1;\n            } while (uVar15 < *0x434600);\n        }\n        arg_ch = extraout_ECX[1];\n        fcn.0041c650(*extraout_ECX, arg_ch, 4, 0x403c70);\n        fcn.0041c650(extraout_ECX[4], extraout_ECX[5], 4, 0x403bd0);\n        *(unaff_EBP + 0x53) = 0;\n        iVar3 = -1;\n        unaff_EBP[0xf] = NULL;\n        do {\n            if (iVar3 != -1) goto code_r0x0040421e;\n            pcVar5 = fcn.00402480();\n            unaff_EBP[0x12] = pcVar5;\n            pcVar5 = fcn.004021d0(pcVar7, 0x2000);\n            unaff_EBP[0x11] = pcVar5;\n            iVar13 = 0;\n            unaff_EBP[10] = pcVar5 + -8;\n            if (-1 < pcVar5 + -8) {\n                do {\n                    if ((*(unaff_EBP + iVar13 + -0x21d0) == '*') && (*(unaff_EBP + iVar13 + -0x21cf) == '*')) {\n                        iVar6 = fcn.0041cb10(unaff_EBP + iVar13 + -0x21ce, 0x429600, 0xb);\n                        if (iVar6 != 0) {\n                            pcVar5 = unaff_EBP[0x11];\n                            goto code_r0x00404166;\n                        }\ncode_r0x004041e2:\n                        pcVar5 = unaff_EBP[0x12];\n                        iVar3 = iVar13 + pcVar5;\n                        goto code_r0x004041ed;\n                    }\ncode_r0x00404166:\n                    if ((((*(unaff_EBP + iVar13 + -0x21d0) == 0x2a) &&\n                         (iVar6 = unaff_EBP + iVar13 + -0x21cc,  *(iVar6 + -2) == 0x2a)) && (iVar13 <= pcVar5 + -0x10))\n                       && (iVar6 = fcn.0041c3fe(iVar6, L\"*messages***\", 0xb),  iVar6 == 0)) {\n                        *(unaff_EBP + 0x53) = 1;\n                        goto code_r0x004041e2;\n                    }\n                    if (((*(unaff_EBP + iVar13 + -0x21d0) == 'R') && (*(unaff_EBP + iVar13 + -0x21cf) == 'a')) &&\n                       (iVar6 = fcn.0041cb10(unaff_EBP + iVar13 + -0x21ce, 0x42962c, 4),  iVar6 == 0))\n                    goto code_r0x004047d2;\n                    iVar13 = iVar13 + 1;\n                    if (unaff_EBP[10] < iVar13) break;\n                    pcVar5 = unaff_EBP[0x11];\n                } while( true );\n            }\n            pcVar5 = unaff_EBP[0x12];\ncode_r0x004041ed:\n            ppcVar17 = NULL;\n            fcn.00402370(pcVar5 + unaff_EBP[0x11] + -8, 0, 0);\n            pcVar5 = unaff_EBP[0xf];\n            unaff_EBP[0xf] = pcVar5 + 1;\n        } while (pcVar5 + 1 < 0x100);\n        if (iVar3 != -1) {\ncode_r0x0040421e:\n            fcn.00402370(ppcVar17, iVar3 >> 0x1f, 0);\n            pcVar7 = fcn.0041c47d(0x200002);\n            unaff_EBP[0x13] = pcVar7;\n            if (pcVar7 != NULL) {\n                pcVar5 = fcn.004021d0(pcVar7, 0x200000);\n                unaff_EBP[0x12] = pcVar5;\n                if (*(unaff_EBP + 0x53) == '\\0') {\n                    pcVar11 = fcn.0041c47d(pcVar5 * 2 + 2);\n                    if (pcVar11 == NULL) goto code_r0x004047d2;\n                    pcVar5 = unaff_EBP[0x12];\n                    *(pcVar5 + pcVar7) = 0;\n                    fcn.00407946(arg_ch, pcVar11, pcVar5 + 1, pcVar7);\n                    fcn.0041a299(pcVar7);\n                    pcVar5 = unaff_EBP[0x12];\n                    unaff_EBP[0x13] = pcVar11;\n                }\n                else {\n                    pcVar5 = pcVar5 >> 1;\n                    unaff_EBP[0x12] = pcVar5;\n                    pcVar11 = pcVar7;\n                }\n                pcVar7 = 0x100000;\n                if (pcVar5 < 0x100001) {\n                    pcVar7 = pcVar5;\n                }\n                pcVar11[pcVar7] = L'\\0';\n                fcn.004068f1(arg_ch, 0x429634, 100, unaff_EBP + -0x42);\n                pcVar7 = fcn.0041c47d(0x20002);\n                unaff_EBP[0x11] = pcVar7;\n                if (pcVar7 == NULL) {\n                    fcn.0041a299(pcVar11);\n                }\n                else {\n                    pcVar5 = NULL;\n                    pcVar11 = NULL;\n                    unaff_EBP[0xc] = NULL;\n                    *(unaff_EBP + -0x10) = 0;\n                    unaff_EBP[0xb] = NULL;\n                    unaff_EBP[0x15] = NULL;\n                    unaff_EBP[10] = 0x20;\n                    unaff_EBP[0xf] = 0x9;\n                    if (unaff_EBP[0x12] != NULL) {\n                        unaff_EBP[6] = 0xd;\n                        unaff_EBP[5] = 0xa;\n                        pcVar11 = NULL;\n                        do {\n                            pcVar14 = NULL;\n                            pcVar12 = unaff_EBP[0x13];\n                            if ((pcVar11 == NULL) ||\n                               ((pcVar12[pcVar11 + -1] != *(unaff_EBP + 6) &&\n                                (pcVar12[pcVar11 + -1] != *(unaff_EBP + 5))))) {\ncode_r0x004045ba:\n                                cVar16 = pcVar12[pcVar11];\n                                pcVar14 = pcVar11 + 1;\n                                unaff_EBP[0x15] = pcVar14;\n                                if (cVar16 == L'\\0') break;\n                                if (cVar16 == *(unaff_EBP + 4)) {\n                                    if (0xffff < pcVar5) goto code_r0x004046e0;\n                                    cVar1 = pcVar12[pcVar14];\n                                    if (cVar1 == L'\\\"') {\n                                        cVar16 = L'\\\"';\n                                    }\n                                    else if (cVar1 == L'\\\\') {\n                                        cVar16 = L'\\\\';\n                                    }\n                                    else if (cVar1 == L'n') {\n                                        cVar16 = L'\\n';\n                                    }\n                                    else if (cVar1 == L'r') {\n                                        cVar16 = L'\\r';\n                                    }\n                                    else {\n                                        if (cVar1 != L't') goto code_r0x0040463c;\n                                        cVar16 = L'\\t';\n                                    }\n                                    pcVar7[pcVar5] = cVar16;\n                                    pcVar14 = pcVar11 + 1;\n                                    unaff_EBP[0x15] = pcVar14;\n                                    pcVar5 = pcVar5 + 1;\n                                }\n                                else if ((cVar16 == L'\\r') || (cVar16 == L'\\n')) {\n                                    if (*(unaff_EBP + -0x10) != '\\0') {\n                                        unaff_EBP[7] = unaff_EBP[0xb];\n                                        pcVar11 = fcn.0041f10a(unaff_EBP + -0x10);\n                                        unaff_EBP[8] = pcVar11;\n                                        if (pcVar5 != NULL) {\n                                            pcVar11 = pcVar7 + pcVar5 + -1;\n                                            do {\n                                                if ((*pcVar11 != L' ') && (*pcVar11 != *(unaff_EBP + 0xf))) break;\n                                                *pcVar11 = L'\\0';\n                                                pcVar11 = pcVar11 + -1;\n                                                pcVar5 = pcVar5 + -1;\n                                            } while (pcVar5 != NULL);\n                                            if ((pcVar5 != NULL) && (pcVar7[pcVar5 + -1] == L'\\\"')) {\n                                                pcVar7[pcVar5 + -1] = L'\\0';\n                                            }\n                                        }\n                                        pcVar7[pcVar5] = L'\\0';\n                                        if (*pcVar7 == L'\\\"') {\n                                            pcVar7 = pcVar7 + 1;\n                                        }\n                                        pcVar7 = fcn.0041da86(pcVar7);\n                                        unaff_EBP[9] = pcVar7;\n                                        arg_ch = unaff_EBP[7];\n                                        fcn.0040480c(arg_ch, unaff_EBP[8], unaff_EBP[9]);\n                                        pcVar7 = unaff_EBP[0x11];\n                                        pcVar14 = unaff_EBP[0x15];\n                                    }\n                                    *(unaff_EBP + -0x10) = 0;\n                                    pcVar5 = NULL;\n                                    unaff_EBP[0xb] = NULL;\n                                }\n                                else {\n                                    if (0xffff < pcVar5) goto code_r0x004046e0;\ncode_r0x0040463c:\n                                    pcVar7[pcVar5] = cVar16;\n                                    pcVar5 = pcVar5 + 1;\n                                }\n                                unaff_EBP[0xc] = pcVar5;\n                            }\n                            else {\n                                arg_8h = 0x3a;\n                                if (pcVar12[pcVar11] != L':') {\ncode_r0x004044b9:\n                                    unaff_EBP[0x10] = pcVar12 + pcVar11;\n                                    cVar2 = fcn.00406763(arg_8h, pcVar12[pcVar11]);\n                                    if (cVar2 != '\\0') {\n                                        arg_ch = unaff_EBP[0x10];\n                                        fcn.0040694c();\n                                        pcVar11 = fcn.0041c438(unaff_EBP + -0xa6, 0x429690);\n                                        unaff_EBP[0x10] = pcVar11;\n                                        if (pcVar11 != NULL) {\n                                            *pcVar11 = L'\\0';\n                                            fcn.00407b8f(unaff_EBP + -0xa6, unaff_EBP + -0x5b, 100);\n                                            fcn.004068f1(unaff_EBP + -0x29, unaff_EBP + -0x42, 100);\n                                            fcn.004068ca(unaff_EBP + -0x29, unaff_EBP + -0x5b, 100);\n                                            fcn.004068f1(unaff_EBP + -0x10, unaff_EBP + -0x29, 0x32);\n                                            piVar10 = fcn.0041c493(unaff_EBP + -0x29, *unaff_EBP[0xe], \n                                                                   *(unaff_EBP[0xe] + 4), 4, 0x403d10);\n                                            if (piVar10 != NULL) {\n                                                unaff_EBP[0xb] = *(*piVar10 * 0xc + 0x434150);\n                                            }\n                                            for (pcVar14 = unaff_EBP[0x15] +\n                                                           (unaff_EBP[0x10] - (unaff_EBP + -0xa6) >> 1) + 1;\n                                                (unaff_EBP[0x13][pcVar14] == *(unaff_EBP + 10) ||\n                                                (unaff_EBP[0x13][pcVar14] == *(unaff_EBP + 0xf))); pcVar14 = pcVar14 + 1\n                                                ) {\n                                            }\n                                            unaff_EBP[0x15] = pcVar14;\n                                            goto code_r0x004046e0;\n                                        }\n                                    }\n                                    pcVar12 = unaff_EBP[0x13];\n                                    pcVar11 = unaff_EBP[0x15];\n                                    goto code_r0x004045ba;\n                                }\n                                pcVar7 = unaff_EBP[0x15];\n                                unaff_EBP[0xd] = 0xffffffff;\n                                pcVar5 = unaff_EBP[0x13];\n                                *unaff_EBP = L\"STRINGS\";\n                                unaff_EBP[1] = L\"DIALOG\";\n                                unaff_EBP[2] = L\"MENU\";\n                                unaff_EBP[3] = L\"DIRECTION\";\n                                do {\n                                    arg_8h = unaff_EBP[pcVar14];\n                                    pcVar11 = fcn.0041a023(arg_8h);\n                                    arg_ch = unaff_EBP[pcVar14];\n                                    unaff_EBP[0x10] = pcVar11;\n                                    iVar3 = fcn.0041c3fe(pcVar5 + pcVar7 + 1, arg_ch, pcVar11);\n                                    if (iVar3 == 0) {\n                                        arg_8h = 0x20;\n                                        if (0x20 < pcVar5[unaff_EBP[0x10] + pcVar7 + 1]) goto code_r0x004043b2;\n                                        pcVar7 = unaff_EBP[0x10] + pcVar7 + 1;\n                                        unaff_EBP[0xd] = pcVar14;\n                                        pcVar8 = pcVar14;\n                                    }\n                                    else {\ncode_r0x004043b2:\n                                        pcVar8 = unaff_EBP[0xd];\n                                    }\n                                    pcVar14 = pcVar14 + 1;\n                                } while (pcVar14 < 0x4);\n                                pcVar5 = unaff_EBP[0xc];\n                                unaff_EBP[0x15] = pcVar7;\n                                pcVar7 = unaff_EBP[0x11];\n                                if (pcVar8 == NULL) {\n                                    arg_ch = unaff_EBP + -0x42;\n                                    fcn.004068f1(arg_ch, 0x429634, 100);\n                                }\n                                else {\n                                    pcVar11 = unaff_EBP[0x15];\n                                    pcVar12 = unaff_EBP[0x13];\n                                    if (pcVar8 < 1) goto code_r0x004044b9;\n                                    while( true ) {\n                                        pcVar14 = pcVar12 + pcVar11;\n                                        if ((*pcVar14 != *(unaff_EBP + 10)) && (*pcVar14 != *(unaff_EBP + 0xf))) break;\n                                        pcVar11 = pcVar11 + 1;\n                                    }\n                                    unaff_EBP[0x15] = pcVar11;\n                                    pcVar11 = NULL;\n                                    cVar16 = *pcVar14;\n                                    unaff_EBP[0x10] = NULL;\n                                    pcVar7 = unaff_EBP[0x11];\n                                    if (0x20 < cVar16) {\n                                        do {\n                                            if (0x62 < pcVar11) break;\n                                            cVar16 = *pcVar14;\n                                            pcVar14 = pcVar14 + 1;\n                                            *(unaff_EBP + pcVar11 * 2 + -0x1d0) = cVar16;\n                                            pcVar11 = pcVar11 + 1;\n                                        } while (0x20 < *pcVar14);\n                                        unaff_EBP[0x10] = pcVar11;\n                                    }\n                                    *(unaff_EBP + pcVar11 * 2 + -0x1d0) = 0;\n                                    arg_ch = unaff_EBP + -0x74;\n                                    fcn.00407b8f(arg_ch, unaff_EBP + -0x29, 100);\n                                    unaff_EBP[0x15] = unaff_EBP[0x15] + unaff_EBP[0x10];\n                                    if (unaff_EBP[0xd] == 0x3) {\n                                        iVar3 = fcn.0041c37b(unaff_EBP + -0x74, 0x429678);\n                                        *(unaff_EBP[0xe] + 0x28) = '\\x01' - (iVar3 != 0);\n                                    }\n                                    else {\n                                        uVar9 = 0x429680;\n                                        if (unaff_EBP[0xd] != 0x1) {\n                                            uVar9 = 0x429688;\n                                        }\n                                        fcn.00404b41(unaff_EBP + -0x42, 100, uVar9, unaff_EBP + -0x29);\n                                    }\n                                }\n                                pcVar14 = unaff_EBP[0x15];\n                            }\ncode_r0x004046e0:\n                            pcVar11 = pcVar14;\n                        } while (pcVar14 < unaff_EBP[0x12]);\n                        pcVar11 = unaff_EBP[0xb];\n                    }\n                    uVar15 = 0;\n                    if (*(unaff_EBP + -0x10) == '\\0') {\n                        pcVar7 = unaff_EBP[0xe];\n                    }\n                    else {\n                        unaff_EBP[7] = pcVar11;\n                        pcVar11 = fcn.0041f10a(unaff_EBP + -0x10);\n                        unaff_EBP[8] = pcVar11;\n                        if (pcVar5 != NULL) {\n                            pcVar11 = pcVar7 + pcVar5 + -1;\n                            do {\n                                if ((*pcVar11 != L' ') && (*pcVar11 != *(unaff_EBP + 0xf))) break;\n                                *pcVar11 = L'\\0';\n                                pcVar11 = pcVar11 + -1;\n                                pcVar5 = pcVar5 + -1;\n                            } while (pcVar5 != NULL);\n                            if ((pcVar5 != NULL) && (pcVar7[pcVar5 + -1] == L'\\\"')) {\n                                pcVar7[pcVar5 + -1] = L'\\0';\n                            }\n                        }\n                        pcVar7[pcVar5] = L'\\0';\n                        if (*pcVar7 == L'\\\"') {\n                            pcVar7 = pcVar7 + 1;\n                        }\n                        pcVar7 = fcn.0041da86(pcVar7);\n                        unaff_EBP[9] = pcVar7;\n                        pcVar7 = unaff_EBP[0xe];\n                        fcn.0040480c(arg_ch, unaff_EBP[8], unaff_EBP[9], unaff_EBP[7]);\n                    }\n                    fcn.0041a299(unaff_EBP[0x13]);\n                    fcn.0041a299(unaff_EBP[0x11]);\n                    if (*(pcVar7 + 0x12) != 0) {\n                        do {\n                            fcn.004047f1(uVar15);\n                            fcn.004047f1(uVar15);\n                            uVar15 = uVar15 + 1;\n                        } while (uVar15 < *(pcVar7 + 0x12));\n                    }\n                    *0x436f1c = *(pcVar7 + 0x10);\n                    fcn.0041c650(*(pcVar7 + 0x18), *(pcVar7 + 0x1a), 4, 0x403d30);\n                    fcn.0041c650(*(pcVar7 + 0x20), *(pcVar7 + 0x22), 4, 0x403d60);\n                }\n            }\n        }\n    }\ncode_r0x004047d2:\n    fcn.00401bae();\n    *in_FS_OFFSET = unaff_EBP[-3];\n    return;\n}\n",
        "token_count": 5076
    },
    "00404851": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00404851(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x50) != '\\0') {\n        uVar2 = 0xffffffec;\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(param_2, 0xffffffec);\n        (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xffffffec, uVar1 | 0x400000);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00404878": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404878(void)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBX;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t unaff_ESI;\n    int32_t *piVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uchar *arg_ch;\n    uchar *arg_10h;\n    uchar *arg_8h;\n    int32_t iStack2368;\n    int32_t iStack2336;\n    int32_t iStack2332;\n    uchar auStack2208 [104];\n    uchar auStack2104 [16];\n    uchar auStack2088 [28];\n    uchar auStack2060 [2028];\n    int32_t iStack32;\n    char cStack28;\n    int32_t iStack8;\n    uint uStack4;\n    \n    fcn.00402aa2();\n    arg_8h = auStack2208;\n    fcn.00407b8f();\n    iVar3 = fcn.0041ca80();\n    uVar6 = 0;\n    if (*0x434600 != 0) {\n        piVar9 = 0x434154;\n        do {\n            if ((*piVar9 != 0) && (iVar4 = fcn.0041cb10(),  iVar4 == 0)) {\n                arg_8h = piVar9[1];\n                cVar1 = fcn.00403f80(arg_8h, auStack2060, 0x400);\n                if (cVar1 != '\\0') {\n                    (*_sym.imp.USER32.dll_SetDlgItemTextW)(iStack8);\n                }\n            }\n            uVar6 = uVar6 + 1;\n            piVar9 = piVar9 + 3;\n        } while (uVar6 < *0x434600);\n    }\n    arg_10h = &stack0xfffff6b8;\n    arg_ch = &stack0xfffff6bc;\n    cVar1 = fcn.00403dac(uStack4, arg_ch, arg_10h);\n    cVar2 = uStack4 >> 0x18;\n    (*_sym.imp.USER32.dll_GetWindowRect)();\n    piVar9 = &iStack2336;\n    iVar4 = iStack8;\n    (*_sym.imp.USER32.dll_GetClientRect)(iStack8, piVar9);\n    iVar10 = (iStack2368 - iVar3) + 1;\n    iVar8 = iVar10 - iStack2332;\n    if (cStack28 == '\\0') {\n        if (cVar1 != '\\0') {\n            iVar10 = (iVar10 - ((iStack2332 * arg_ch) / 100 + iVar8)) / 2 + iVar3;\n            iVar4 = (iStack2336 - (iStack2336 * arg_10h) / 100) / 2 + unaff_ESI;\n            if (iVar4 < 0) {\n                iVar4 = 0;\n            }\n            if (iVar10 < 0) {\n                iVar10 = 0;\n            }\n            cVar1 = cVar2;\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowLongW)(iStack8, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowPos)\n                      (iStack8, 0, iVar4, iVar10, unaff_EBX, arg_10h, ~(uVar6 >> 10) & 2 | 0x204);\n            (*_sym.imp.USER32.dll_GetWindowRect)(iStack8, &stack0xfffff690);\n        }\n        cVar2 = fcn.00403e2c(iStack32, L\"CAPTION\", auStack2088, 0x400);\n        iVar4 = iStack32;\n        if (cVar2 != '\\0') {\n            (*_sym.imp.USER32.dll_SetWindowTextW)(iStack8, auStack2104);\n            iVar4 = iStack32;\n        }\n    }\n    iVar10 = (*_sym.imp.USER32.dll_GetSystemMetrics)(8);\n    iVar5 = (*_sym.imp.USER32.dll_GetWindow)(iStack8, 5);\n    if (cVar1 != '\\0') {\n        iVar11 = iVar5;\n        for (iVar7 = 0; (iVar5 != 0 && (iVar7 < 0x200)); iVar7 = iVar7 + 1) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar5, &stack0xfffff6bc);\n            (*_sym.imp.USER32.dll_SetWindowPos)\n                      (iVar5, 0, (((unaff_ESI - arg_ch / 2) - arg_10h) * piVar9) / 100, \n                       (((iVar3 - (iVar8 - iVar10)) - arg_8h) * iVar4) / 100, \n                       (((unaff_EBX - unaff_ESI) + 1) * piVar9) / iVar11, (((iStack2368 - iVar3) + 1) * iVar4) / 100, \n                       0x204);\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(iVar5, 2);\n            if (iVar5 == iVar11) {\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1192
    },
    "00404c2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404c2c(int32_t param_1)\n\n{\n    if (*0x43af28 == '\\0') {\n        fcn.00404c45();\n    }\n    *(param_1 + 1) = 1;\n    return param_1;\n}\n",
        "token_count": 66
    },
    "00404e20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404e4a)\n// WARNING: Removing unreachable block (ram,0x00404e2b)\n\nvoid __thiscall fcn.00404e20(uint8_t *param_1, uint param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char unaff_retaddr;\n    uint32_t uVar6;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    piVar1 = cpuid_basic_info(0);\n    iStack32 = *piVar1;\n    iStack28 = piVar1[1];\n    iStack20 = piVar1[2];\n    iStack24 = piVar1[3];\n    if (iStack32 < 1) {\n        uVar2 = 0;\n    }\n    else {\n        piVar1 = cpuid_Version_info(1);\n        iStack32 = *piVar1;\n        iStack28 = piVar1[1];\n        iStack20 = piVar1[2];\n        iStack24 = piVar1[3];\n        uVar2 = iStack24 >> 0x19 & 1;\n    }\n    *param_1 = uVar2;\n    if (param_4 == 0x80) {\n        uVar6 = 0x10;\n        *(param_1 + 4) = 10;\n    }\n    else if (param_4 == 0xc0) {\n        uVar6 = 0x18;\n        *(param_1 + 4) = 0xc;\n    }\n    else {\n        if (param_4 != 0x100) goto code_r0x00404ec1;\n        uVar6 = 0x20;\n        *(param_1 + 4) = 0xe;\n    }\n    uVar4 = 0;\n    do {\n        uVar5 = uVar4 + 1;\n        *(&iStack32 + (uVar4 & 0xfffffffc) + (uVar4 & 3)) = *(uVar4 + param_3);\n        uVar4 = uVar5;\n    } while (uVar5 < uVar6);\ncode_r0x00404ec1:\n    iVar3 = 0;\n    if (param_5 == 0) {\n        fcn.00416480(param_1 + 8, 0, 0x10);\n    }\n    else {\n        do {\n            (param_1 + 8)[iVar3] = *(iVar3 + param_5);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x10);\n    }\n    fcn.004054dd(&iStack32);\n    if (unaff_retaddr == '\\0') {\n        fcn.00405429();\n    }\n    return;\n}\n",
        "token_count": 681
    },
    "00404f3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00404f3c(char *param_1, int32_t param_2, uint32_t param_3, uint32_t *param_4)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    uint32_t *unaff_EDI;\n    uint8_t uStack38;\n    uint8_t uStack37;\n    uint8_t uStack34;\n    uint8_t uStack33;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    uint32_t uStack4;\n    \n    if (param_3 != 0) {\n        param_3 = param_3 >> 4;\n        if (*param_1 == '\\0') {\n            puVar1 = param_1 + 8;\n            puVar6 = puVar1;\n            puVar8 = puVar1;\n            if (param_3 != 0) {\n                puVar2 = param_4 + 1;\n                puVar3 = param_2 + 8;\n                puVar4 = puVar3;\n                puVar6 = unaff_EDI;\n                do {\n                    if (param_1[1] == '\\0') {\n                        uStack28 = puVar4[-2];\n                        uStack24 = puVar4[-1];\n                        uStack20 = *puVar4;\n                        uVar5 = puVar4[1];\n                        uStack16 = uStack28;\n                        uStack12 = uStack24;\n                        uStack8 = uStack20;\n                        uStack4 = uVar5;\n                    }\n                    else {\n                        fcn.00404f0a(&uStack16, puVar8, puVar4 + -2);\n                        uVar5 = uStack16;\n                    }\n                    uStack32 = *(param_1 + 0x18) ^ uStack28;\n                    uStack28 = *(param_1 + 0x1c) ^ uStack24;\n                    uStack24 = *(param_1 + 0x20) ^ uStack20;\n                    uStack20 = *(param_1 + 0x24) ^ uVar5;\n                    *param_4 = *((uStack24 >> 0x10 & 0xff) * 4 + 0x43b828) ^ *((uStack28 >> 8 & 0xff) * 4 + 0x43b428) ^\n                               *((uStack20 >> 0x18) * 4 + 0x43bc28) ^ *((uStack32 & 0xff) * 4 + 0x43b028);\n                    *puVar2 = *((uStack20 >> 0x10 & 0xff) * 4 + 0x43b828) ^ *((uStack24 >> 8 & 0xff) * 4 + 0x43b428) ^\n                              *((uStack32 >> 0x18) * 4 + 0x43bc28) ^ *((uStack28 & 0xff) * 4 + 0x43b028);\n                    param_4[2] = *((uStack32 >> 0x10 & 0xff) * 4 + 0x43b828) ^ *((uStack20 >> 8 & 0xff) * 4 + 0x43b428)\n                                 ^ *((uStack28 >> 0x18) * 4 + 0x43bc28) ^ *((uStack24 & 0xff) * 4 + 0x43b028);\n                    param_4[3] = *((uStack32 >> 8 & 0xff) * 4 + 0x43b428) ^ *((uStack28 >> 0x10 & 0xff) * 4 + 0x43b828)\n                                 ^ *((uStack24 >> 0x18) * 4 + 0x43bc28) ^ *((uStack20 & 0xff) * 4 + 0x43b028);\n                    iVar7 = *(param_1 + 4);\n                    uStack34 = puVar1 >> 0x10;\n                    uStack33 = puVar1 >> 0x18;\n                    uStack38 = puVar3 >> 0x10;\n                    uStack37 = puVar3 >> 0x18;\n                    puVar8 = puVar2;\n                    if (1 < iVar7 + -1) {\n                        do {\n                            puVar8 = unaff_ESI;\n                            fcn.00404f0a();\n                            *param_4 = *0x43b02c ^ *((puVar3 >> 8 & 0xff) * 4 + 0x43b428) ^ *(uStack34 * 4 + 0x43b828) ^\n                                       *((uStack32 >> 0x18) * 4 + 0x43bc28);\n                            *puVar2 = *0x43bc28 ^ *((puVar3 & 0xff) * 4 + 0x43b028) ^\n                                      *((puVar1 >> 8 & 0xff) * 4 + 0x43b428) ^\n                                      *((uStack32 >> 0x10 & 0xff) * 4 + 0x43b828);\n                            param_4[2] = *0x43b828 ^ *(uStack37 * 4 + 0x43bc28) ^ *((puVar1 & 0xff) * 4 + 0x43b028) ^\n                                         *((uStack32 >> 8 & 0xff) * 4 + 0x43b428);\n                            puVar6 = puVar6 + 4;\n                            unaff_EBP = unaff_EBP + 1;\n                            param_4[3] = *0x43b428 ^ *(uStack38 * 4 + 0x43b828) ^ *(uStack33 * 4 + 0x43bc28) ^\n                                         *((uStack32 & 0xff) * 4 + 0x43b028);\n                            iVar7 = *(param_1 + 4);\n                            param_3 = uStack4;\n                            unaff_ESI = puVar8;\n                        } while (unaff_EBP < iVar7 + -1);\n                    }\n                    fcn.00404f0a(&uStack32, param_4, param_1 + iVar7 * 0x10 + 8);\n                    *param_4 = *0x43b02d;\n                    *(puVar8 + -3) = *((puVar3 >> 8 & 0xff) * 4 + 0x43b029);\n                    *(puVar8 + -2) = *(uStack34 * 4 + 0x43b029);\n                    *(puVar8 + -1) = *((uStack32 >> 0x18) * 4 + 0x43b029);\n                    *puVar8 = *((puVar3 & 0xff) * 4 + 0x43b029);\n                    *(puVar8 + 1) = *((puVar1 >> 8 & 0xff) * 4 + 0x43b029);\n                    *(puVar8 + 2) = *((uStack32 >> 0x10 & 0xff) * 4 + 0x43b029);\n                    *(puVar8 + 3) = *0x43b029;\n                    *(puVar8 + 1) = *((puVar1 & 0xff) * 4 + 0x43b029);\n                    *(puVar8 + 5) = *((uStack32 >> 8 & 0xff) * 4 + 0x43b029);\n                    *(puVar8 + 6) = *0x43b029;\n                    *(puVar8 + 7) = *(uStack37 * 4 + 0x43b029);\n                    *(puVar8 + 2) = *((uStack32 & 0xff) * 4 + 0x43b029);\n                    *(puVar8 + 9) = *0x43b029;\n                    *(puVar8 + 10) = *(uStack38 * 4 + 0x43b029);\n                    *(puVar8 + 0xb) = *(uStack33 * 4 + 0x43b029);\n                    fcn.00404f0a();\n                    puVar4 = unaff_ESI + 4;\n                    param_3 = param_3 - 1;\n                    puVar8 = param_4;\n                    unaff_ESI = puVar4;\n                    uStack16 = param_3;\n                } while (param_3 != 0);\n            }\n            *puVar6 = *puVar8;\n            puVar6[1] = puVar8[1];\n            puVar6[2] = puVar8[2];\n            puVar6[3] = puVar8[3];\n        }\n        else {\n            fcn.0040537a(param_2, param_3, param_4);\n        }\n    }\n    return;\n}\n",
        "token_count": 2076
    },
    "0040537a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040537a(int32_t param_1, uchar (*param_2) [16], int32_t param_3, uchar (*param_4) [16])\n\n{\n    int32_t iVar1;\n    uchar (*pauVar2) [16];\n    uchar auVar3 [16];\n    uchar auVar4 [16];\n    int32_t iStack4;\n    \n    auVar4 = *(param_1 + 8);\n    if (param_3 != 0) {\n        do {\n            auVar3 = *param_2;\n            if (*(param_1 + 1) != '\\0') {\n                auVar3 = auVar3 ^ auVar4;\n            }\n            iVar1 = *(param_1 + 4);\n            auVar3 = *(param_1 + 0x18) ^ auVar3;\n            if (1 < iVar1) {\n                pauVar2 = param_1 + 0x28;\n                iStack4 = iVar1 + -1;\n                do {\n                    iStack4 = iStack4 + -1;\n                    auVar4 = *pauVar2;\n                    pauVar2 = pauVar2[1];\n                    auVar3 = aesenc(auVar3, auVar4);\n                } while (iStack4 != 0);\n            }\n            param_3 = param_3 + -1;\n            auVar4 = aesenclast(auVar3, *(param_1 + 0x18 + iVar1 * 0x10));\n            *param_4 = auVar4;\n            param_2 = param_2[1];\n            param_4 = param_4[1];\n        } while (param_3 != 0);\n    }\n    *(param_1 + 8) = auVar4;\n    return;\n}\n",
        "token_count": 394
    },
    "004054dd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.004054dd(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    bool bVar11;\n    bool bVar12;\n    int32_t iStack44;\n    uint uStack36;\n    uint uStack32;\n    uint8_t auStack28 [8];\n    uint8_t uStack20;\n    uint8_t uStack19;\n    uint8_t uStack18;\n    uint8_t uStack17;\n    uint8_t auStack16 [4];\n    uint8_t auStack12 [12];\n    \n    iVar2 = *(param_1 + 4);\n    iVar9 = iVar2 + -6;\n    fcn.00416ab0(&uStack32, param_2, 0x20);\n    iVar7 = 0;\n    uVar6 = 0;\n    iVar10 = 0;\n    if (0 < iVar9) {\n        do {\n            if (*(param_1 + 4) < iVar7) {\n                return;\n            }\n            if (iVar10 < iVar9) {\n                puVar8 = &uStack32 + iVar10;\n                do {\n                    if (3 < uVar6) break;\n                    iVar1 = uVar6 + iVar7 * 4;\n                    uVar3 = *puVar8;\n                    iVar10 = iVar10 + 1;\n                    puVar8 = puVar8 + 1;\n                    uVar6 = uVar6 + 1;\n                    *(param_1 + 0x18 + iVar1 * 4) = uVar3;\n                } while (iVar10 < iVar9);\n            }\n            if (uVar6 == 4) {\n                iVar7 = iVar7 + 1;\n            }\n            uVar6 = uVar6 & -(uVar6 != 4);\n        } while (iVar10 < iVar9);\n    }\n    if (iVar7 <= *(param_1 + 4)) {\n        uStack36 = 0x434108;\n        do {\n            uStack32._0_1_ = uStack32 ^ str.cw[*(&uStack32 + iVar9 * 4 + -3)];\n            uStack32._1_1_ = uStack32._1_1_ ^ str.cw[*(&uStack32 + iVar9 * 4 + -2)];\n            uStack32._2_1_ = uStack32._2_1_ ^ str.cw[*(&uStack32 + iVar9 * 4 + -1)];\n            uStack32._3_1_ = uStack32._3_1_ ^ str.cw[*(&uStack32 + iVar2 + -7)];\n            uStack32._0_1_ = *uStack36 ^ uStack32;\n            uStack36 = uStack36 + 1;\n            if (iVar9 == 8) {\n                puVar5 = auStack28;\n                iStack44 = 3;\n                do {\n                    iVar10 = 4;\n                    do {\n                        *puVar5 = *puVar5 ^ puVar5[-4];\n                        puVar5 = puVar5 + 1;\n                        iVar10 = iVar10 + -1;\n                    } while (iVar10 != 0);\n                    iStack44 = iStack44 + -1;\n                } while (iStack44 != 0);\n                puVar5 = auStack12;\n                iStack44 = 3;\n                auStack16[0] = auStack16[0] ^ str.cw[uStack20];\n                auStack16[1] = auStack16[1] ^ str.cw[uStack19];\n                auStack16[2] = auStack16[2] ^ str.cw[uStack18];\n                auStack16[3] = auStack16[3] ^ str.cw[uStack17];\n                do {\n                    iVar10 = 4;\n                    do {\n                        *puVar5 = *puVar5 ^ puVar5[-4];\n                        puVar5 = puVar5 + 1;\n                        iVar10 = iVar10 + -1;\n                    } while (iVar10 != 0);\n                    iStack44 = iStack44 + -1;\n                } while (iStack44 != 0);\ncode_r0x0040566c:\n                do {\n                    bVar12 = SBORROW4(iVar7, *(param_1 + 4));\n                    iVar1 = *(param_1 + 4);\n                    iVar4 = iVar7 - iVar1;\n                    bVar11 = iVar7 == iVar1;\n                    if (!bVar11 && iVar1 <= iVar7) goto code_r0x004056b7;\n                    if (iVar10 < iVar9) {\n                        puVar8 = &uStack32 + iVar10;\n                        do {\n                            if (3 < uVar6) break;\n                            iVar1 = uVar6 + iVar7 * 4;\n                            uVar3 = *puVar8;\n                            iVar10 = iVar10 + 1;\n                            puVar8 = puVar8 + 1;\n                            uVar6 = uVar6 + 1;\n                            *(param_1 + 0x18 + iVar1 * 4) = uVar3;\n                        } while (iVar10 < iVar9);\n                    }\n                    if (uVar6 == 4) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    uVar6 = uVar6 & -(uVar6 != 4);\n                } while (iVar10 < iVar9);\n            }\n            else {\n                if (1 < iVar9) {\n                    iStack44 = iVar2 + -7;\n                    puVar5 = auStack28;\n                    do {\n                        iVar10 = 4;\n                        do {\n                            *puVar5 = *puVar5 ^ puVar5[-4];\n                            puVar5 = puVar5 + 1;\n                            iVar10 = iVar10 + -1;\n                        } while (iVar10 != 0);\n                        iStack44 = iStack44 + -1;\n                    } while (iStack44 != 0);\n                }\n                iVar10 = 0;\n                if (0 < iVar9) goto code_r0x0040566c;\n            }\n            bVar12 = SBORROW4(iVar7, *(param_1 + 4));\n            iVar10 = *(param_1 + 4);\n            iVar4 = iVar7 - iVar10;\n            bVar11 = iVar7 == iVar10;\ncode_r0x004056b7:\n        } while (bVar11 || bVar12 != iVar4 < 0);\n    }\n    return;\n}\n",
        "token_count": 1485
    },
    "0040584a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040584a(int32_t *param_1)\n\n{\n    fcn.004058aa();\n    if (*param_1 != 0) {\n        fcn.0040123b(*param_1, param_1[2] - *param_1 & 0xfffffffe);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004058c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004058c0(int32_t *param_1, ushort *param_2, int32_t param_3)\n\n{\n    if (*(param_1 + 3) == '\\0') {\n        *param_2 = 0;\n    }\n    else {\n        fcn.00405938(*param_1, param_1[1] - *param_1 >> 1, param_2, param_3, 0);\n        param_2[param_3 + -1] = 0;\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "004058fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004058fa(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 1) == '\\0') {\n        iVar1 = fcn.00406b8c(L\"Crypt32.dll\");\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"CryptProtectMemory\");\n            param_1[2] = iVar1;\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*param_1, \"CryptUnprotectMemory\");\n            param_1[3] = iVar1;\n        }\n        *(param_1 + 1) = 1;\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "0040596f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040596f(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char16_t *arg_ch_00;\n    \n    if (*0x43e030 == NULL) {\n        fcn.004058fa();\n    }\n    pcVar2 = *0x43e034;\n    pcVar1 = *0x43e030;\n    if (arg_10h == '\\0') {\n        if (*0x43e034 == NULL) goto code_r0x004059fc;\n        (**0x42922c)(arg_8h, arg_ch & 0xfffffff0, arg_14h);\n        iVar4 = (*pcVar2)();\n        if (iVar4 != 0) {\n            return;\n        }\n        arg_ch_00 = L\"CryptUnprotectMemory failed\";\n    }\n    else {\n        if (*0x43e030 == NULL) {\ncode_r0x004059fc:\n            cVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n            uVar5 = 0;\n            if (arg_ch == 0) {\n                return;\n            }\n            do {\n                *(uVar5 + arg_8h) = *(uVar5 + arg_8h) ^ cVar3 + 'K' + uVar5;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < arg_ch);\n            return;\n        }\n        (**0x42922c)(arg_8h, arg_ch & 0xfffffff0, arg_14h);\n        iVar4 = (*pcVar1)();\n        if (iVar4 != 0) {\n            return;\n        }\n        arg_ch_00 = L\"CryptProtectMemory failed\";\n    }\n    fcn.00401853(0x45ad9c, arg_ch_00, arg_8h);\n    fcn.004019e9();\n    fcn.0040184e(2);\n    return;\n}\n",
        "token_count": 474
    },
    "00405a25": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00405a25(int32_t *param_1, int16_t *param_2)\n\n{\n    int32_t arg_14h;\n    int32_t iVar1;\n    int32_t arg_10h;\n    uint arg_18h;\n    \n    fcn.004058aa();\n    if (*param_2 != 0) {\n        *(param_1 + 3) = 1;\n        arg_18h = 1;\n        arg_14h = param_1[1] - *param_1 >> 1;\n        arg_10h = *param_1;\n        iVar1 = fcn.0041a023(param_2);\n        fcn.00405938(param_2, iVar1 + 1, arg_10h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00405aed": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405aed(uint32_t *param_1, uint32_t *param_2, uint32_t *param_3, char param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t *puStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t *puStack20;\n    uint32_t *puStack16;\n    \n    if (param_4 == '\\0') {\n        puStack20 = param_2;\n        fcn.00416ab0(param_2, param_3, 0x40);\n    }\n    else {\n        puStack20 = param_3;\n    }\n    uStack28 = param_1[2];\n    uVar6 = param_1[1];\n    uVar2 = *param_1;\n    uStack24 = param_1[3];\n    uVar3 = param_1[4];\n    uStack36 = 0;\n    uVar1 = fcn.0041ccb4(*puStack20);\n    *puStack20 = uVar1;\n    uVar3 = (uVar6 & (uStack24 ^ uStack28) ^ uStack24) + (uVar2 << 5 | uVar2 >> 0x1b) + uVar1 + uVar3 + 0x5a827999;\n    uVar6 = uVar6 >> 2 | uVar6 << 0x1e;\n    puStack32 = puStack20 + 3;\n    puStack16 = puStack20;\n    do {\n        uVar1 = fcn.0041ccb4(puStack16[1]);\n        puStack16[1] = uVar1;\n        uVar5 = uVar2 >> 2 | uVar2 << 0x1e;\n        uVar2 = uStack24 + 0x5a827999 + ((uStack28 ^ uVar6) & uVar2 ^ uStack28) + (uVar3 << 5 | uVar3 >> 0x1b) + uVar1;\n        uVar1 = fcn.0041ccb4(puStack32[-1]);\n        puStack32[-1] = uVar1;\n        uVar4 = uVar3 >> 2 | uVar3 << 0x1e;\n        uVar3 = uStack28 + 0x5a827999 + ((uVar6 ^ uVar5) & uVar3 ^ uVar6) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar1;\n        uVar1 = fcn.0041ccb4(*puStack32);\n        *puStack32 = uVar1;\n        uStack24 = uVar2 >> 2 | uVar2 * 0x40000000;\n        uVar1 = uVar6 + ((uVar4 ^ uVar5) & uVar2 ^ uVar5) + (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x5a827999 + uVar1;\n        uVar6 = fcn.0041ccb4(puStack32[1]);\n        puStack32[1] = uVar6;\n        uStack36 = uStack36 + 5;\n        uStack28 = uVar3 >> 2 | uVar3 * 0x40000000;\n        puStack16 = puStack20 + uStack36;\n        uVar2 = uVar5 + ((uVar4 ^ uStack24) & uVar3 ^ uVar4) + (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar6 + 0x5a827999;\n        uVar3 = fcn.0041ccb4(*puStack16);\n        *puStack16 = uVar3;\n        uVar6 = uVar1 >> 2 | uVar1 * 0x40000000;\n        uVar3 = uVar4 + 0x5a827999 + ((uStack24 ^ uStack28) & uVar1 ^ uStack24) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar3\n        ;\n        puStack32 = puStack32 + 5;\n    } while (uStack36 != 0xf);\n    uVar1 = puStack20[0xe] ^ puStack20[9] ^ puStack20[1] ^ puStack20[3];\n    uVar4 = puStack20[0xd] ^ puStack20[8] ^ *puStack20 ^ puStack20[2];\n    uVar7 = uVar4 << 1 | uVar4 < 0;\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    uVar5 = uVar2 >> 2 | uVar2 * 0x40000000;\n    puStack20[1] = uVar1;\n    uVar2 = ((uStack28 ^ uVar6) & uVar2 ^ uStack28) + (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar7 + uStack24 + 0x5a827999;\n    *puStack20 = uVar7;\n    uVar4 = puStack20[0xf] ^ puStack20[10] ^ puStack20[4] ^ puStack20[2];\n    uVar1 = ((uVar6 ^ uVar5) & uVar3 ^ uVar6) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar1 + uStack28 + 0x5a827999;\n    uStack24 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar3 = uVar4 << 1 | uVar4 < 0;\n    uStack40 = uVar2 >> 2 | uVar2 * 0x40000000;\n    puStack20[2] = uVar3;\n    puStack32 = ((uStack24 ^ uVar5) & uVar2 ^ uVar5) + (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar3 + uVar6 + 0x5a827999;\n    uVar6 = puStack20[0xb] ^ puStack20[5] ^ uVar7 ^ puStack20[3];\n    uVar6 = uVar6 << 1 | uVar6 < 0;\n    puStack20[3] = uVar6;\n    uStack28 = ((uStack24 ^ uStack40) & uVar1 ^ uStack24) + (puStack32 * 0x20 | puStack32 >> 0x1b) + 0x5a827999 + uVar6\n               + uVar5;\n    uStack36 = uVar1 >> 2 | uVar1 * 0x40000000;\n    puStack16 = 0x11;\n    do {\n        uVar4 = puStack16 + 3U & 0xf;\n        uVar1 = puStack16 + 5U & 0xf;\n        uVar6 = puStack20[puStack16 - 5U & 0xf] ^ puStack20[puStack16 & 0xf] ^ puStack20[uVar4] ^ puStack20[uVar1];\n        uVar6 = uVar6 << 1 | uVar6 < 0;\n        puStack20[uVar4] = uVar6;\n        uVar5 = puStack32 >> 2 | puStack32 << 0x1e;\n        uVar6 = uStack24 + 0x6ed9eba1 + (uStack40 ^ uStack36 ^ puStack32) + (uStack28 << 5 | uStack28 >> 0x1b) + uVar6;\n        uVar7 = puStack16 + 4U & 0xf;\n        uVar10 = puStack16 + 6U & 0xf;\n        uVar2 = puStack20[puStack16 - 4U & 0xf] ^ puStack20[puStack16 + 1U & 0xf] ^ puStack20[uVar7] ^ puStack20[uVar10]\n        ;\n        uVar2 = uVar2 << 1 | uVar2 < 0;\n        puStack20[uVar7] = uVar2;\n        uVar8 = uStack28 >> 2 | uStack28 << 0x1e;\n        uVar2 = uStack40 + 0x6ed9eba1 + (uStack36 ^ uVar5 ^ uStack28) + (uVar6 * 0x20 | uVar6 >> 0x1b) + uVar2;\n        uVar9 = puStack16 + 7U & 0xf;\n        uVar3 = puStack20[puStack16 - 3U & 0xf] ^ puStack20[puStack16 + 2U & 0xf] ^ puStack20[uVar9] ^ puStack20[uVar1];\n        uVar3 = uVar3 << 1 | uVar3 < 0;\n        puStack20[uVar1] = uVar3;\n        uStack24 = uVar6 >> 2 | uVar6 * 0x40000000;\n        uVar6 = uStack36 + 0x6ed9eba1 + (uVar6 ^ uVar5 ^ uVar8) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar3;\n        uVar3 = puStack20[puStack16 - 8U & 0xf] ^ puStack20[puStack16 - 2U & 0xf] ^ puStack20[uVar10] ^ puStack20[uVar4]\n        ;\n        uVar3 = uVar3 << 1 | uVar3 < 0;\n        puStack20[uVar10] = uVar3;\n        uStack40 = uVar2 >> 2 | uVar2 * 0x40000000;\n        puStack32 = uVar5 + 0x6ed9eba1 + (uStack24 ^ uVar2 ^ uVar8) + (uVar6 * 0x20 | uVar6 >> 0x1b) + uVar3;\n        uVar2 = puStack20[puStack16 - 7U & 0xf] ^ puStack20[puStack16 - 1U & 0xf] ^ puStack20[uVar9] ^ puStack20[uVar7];\n        uVar2 = uVar2 << 1 | uVar2 < 0;\n        puStack20[uVar9] = uVar2;\n        uStack36 = uVar6 >> 2 | uVar6 * 0x40000000;\n        uStack28 = uVar8 + 0x6ed9eba1 + (uStack24 ^ uStack40 ^ uVar6) + (puStack32 * 0x20 | puStack32 >> 0x1b) + uVar2;\n        uVar6 = puStack16 + 8;\n        puStack16 = puStack16 + 5U;\n    } while (uVar6 < 0x24);\n    puStack16 = 0x25;\n    do {\n        uVar1 = puStack16 + 3U & 0xf;\n        uVar7 = puStack16 + 5U & 0xf;\n        uVar6 = puStack20[puStack16 - 5U & 0xf] ^ puStack20[puStack16 & 0xf] ^ puStack20[uVar7] ^ puStack20[uVar1];\n        uVar2 = uVar6 << 1 | uVar6 < 0;\n        puStack20[uVar1] = uVar2;\n        uVar6 = puStack32 >> 2 | puStack32 << 0x1e;\n        uVar2 = (uStack28 << 5 | uStack28 >> 0x1b) + 0x8f1bbcdc +\n                ((uStack36 | puStack32) & uStack40 | uStack36 & puStack32) + uVar2 + uStack24;\n        uVar5 = puStack16 + 6U & 0xf;\n        uVar4 = puStack16 + 4U & 0xf;\n        uVar3 = puStack20[puStack16 - 4U & 0xf] ^ puStack20[puStack16 + 1U & 0xf] ^ puStack20[uVar4] ^ puStack20[uVar5];\n        uVar3 = uVar3 << 1 | uVar3 < 0;\n        puStack20[uVar4] = uVar3;\n        uVar9 = uStack28 >> 2 | uStack28 << 0x1e;\n        uVar3 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x8f1bbcdc +\n                ((uVar6 | uStack28) & uStack36 | uVar6 & uStack28) + uVar3 + uStack40;\n        uVar10 = puStack16 + 7U & 0xf;\n        uVar8 = puStack20[puStack16 - 3U & 0xf] ^ puStack20[puStack16 + 2U & 0xf] ^ puStack20[uVar10] ^ puStack20[uVar7]\n        ;\n        uVar8 = uVar8 << 1 | uVar8 < 0;\n        puStack20[uVar7] = uVar8;\n        uStack24 = uVar2 >> 2 | uVar2 * 0x40000000;\n        uVar2 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x8f1bbcdc +\n                ((uVar2 | uVar9) & uVar6 | uVar2 & uVar9) + uVar8 + uStack36;\n        uVar1 = puStack20[puStack16 - 8U & 0xf] ^ puStack20[puStack16 - 2U & 0xf] ^ puStack20[uVar1] ^ puStack20[uVar5];\n        uVar1 = uVar1 << 1 | uVar1 < 0;\n        puStack20[uVar5] = uVar1;\n        uStack40 = uVar3 >> 2 | uVar3 * 0x40000000;\n        puStack32 = (uVar2 * 0x20 | uVar2 >> 0x1b) +\n                    ((uStack24 | uVar3) & uVar9 | uStack24 & uVar3) + 0x8f1bbcdc + uVar1 + uVar6;\n        uVar6 = puStack20[puStack16 - 7U & 0xf] ^ puStack20[puStack16 - 1U & 0xf] ^ puStack20[uVar4] ^ puStack20[uVar10]\n        ;\n        uVar6 = uVar6 << 1 | uVar6 < 0;\n        puStack20[uVar10] = uVar6;\n        uStack36 = uVar2 >> 2 | uVar2 * 0x40000000;\n        uStack28 = (puStack32 * 0x20 | puStack32 >> 0x1b) + 0x8f1bbcdc +\n                   ((uStack40 | uVar2) & uStack24 | uStack40 & uVar2) + uVar6 + uVar9;\n        uVar6 = puStack16 + 8;\n        puStack16 = puStack16 + 5U;\n    } while (uVar6 < 0x38);\n    puStack16 = 0x39;\n    do {\n        uVar4 = puStack16 + 3U & 0xf;\n        uVar1 = puStack16 + 5U & 0xf;\n        uVar6 = puStack20[puStack16 - 5U & 0xf] ^ puStack20[puStack16 & 0xf] ^ puStack20[uVar4] ^ puStack20[uVar1];\n        uVar6 = uVar6 << 1 | uVar6 < 0;\n        puStack20[uVar4] = uVar6;\n        uVar5 = puStack32 >> 2 | puStack32 << 0x1e;\n        uVar6 = (uStack40 ^ uStack36 ^ puStack32) + uVar6 + uStack24 + (uStack28 << 5 | uStack28 >> 0x1b) + 0xca62c1d6;\n        uVar10 = puStack16 + 6U & 0xf;\n        uVar7 = puStack16 + 4U & 0xf;\n        uVar2 = puStack20[puStack16 - 4U & 0xf] ^ puStack20[puStack16 + 1U & 0xf] ^ puStack20[uVar7] ^ puStack20[uVar10]\n        ;\n        uVar2 = uVar2 << 1 | uVar2 < 0;\n        puStack20[uVar7] = uVar2;\n        uVar2 = (uStack36 ^ uVar5 ^ uStack28) + uVar2 + uStack40 + (uVar6 * 0x20 | uVar6 >> 0x1b) + 0xca62c1d6;\n        uVar8 = uStack28 >> 2 | uStack28 << 0x1e;\n        uVar9 = puStack16 + 7U & 0xf;\n        uVar3 = puStack20[puStack16 - 3U & 0xf] ^ puStack20[puStack16 + 2U & 0xf] ^ puStack20[uVar9] ^ puStack20[uVar1];\n        uVar3 = uVar3 << 1 | uVar3 < 0;\n        puStack20[uVar1] = uVar3;\n        uStack24 = uVar6 >> 2 | uVar6 * 0x40000000;\n        uVar6 = (uVar6 ^ uVar5 ^ uVar8) + uVar3 + uStack36 + (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6;\n        uVar3 = puStack20[puStack16 - 8U & 0xf] ^ puStack20[puStack16 - 2U & 0xf] ^ puStack20[uVar4] ^ puStack20[uVar10]\n        ;\n        uVar3 = uVar3 << 1 | uVar3 < 0;\n        puStack20[uVar10] = uVar3;\n        uStack40 = uVar2 >> 2 | uVar2 * 0x40000000;\n        puStack32 = (uStack24 ^ uVar2 ^ uVar8) + uVar3 + uVar5 + (uVar6 * 0x20 | uVar6 >> 0x1b) + 0xca62c1d6;\n        uVar2 = puStack20[puStack16 - 7U & 0xf] ^ puStack20[puStack16 - 1U & 0xf] ^ puStack20[uVar9] ^ puStack20[uVar7];\n        uVar2 = uVar2 << 1 | uVar2 < 0;\n        puStack20[uVar9] = uVar2;\n        uStack36 = uVar6 >> 2 | uVar6 * 0x40000000;\n        uStack28 = (puStack32 * 0x20 | puStack32 >> 0x1b) + 0xca62c1d6 + (uStack24 ^ uStack40 ^ uVar6) + uVar2 + uVar8;\n        uVar6 = puStack16 + 8;\n        puStack16 = puStack16 + 5U;\n    } while (uVar6 < 0x4c);\n    param_1[1] = param_1[1] + puStack32;\n    param_1[2] = param_1[2] + uStack36;\n    param_1[3] = param_1[3] + uStack40;\n    *param_1 = *param_1 + uStack28;\n    param_1[4] = param_1[4] + uStack24;\n    return;\n}\n",
        "token_count": 4663
    },
    "004065db": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.004065db(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00415488();\n    if (*(unaff_EBP + 0x14) == 2) {\n        iVar4 = *(unaff_EBP + 0x10);\n        iVar2 = *(unaff_EBP + 0xc);\n        fcn.00407a23(*(unaff_EBP + 8), iVar2, iVar4);\n    }\n    else {\n        uVar3 = 0;\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x14) = 0;\n        iVar4 = *(unaff_EBP + 0x10);\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 0;\n        if (*(unaff_EBP + 0x14) == 1) {\n            fcn.004065c1(iVar4 + 1);\n            uVar1 = *(unaff_EBP + -0x20);\n            fcn.00406732(*(unaff_EBP + 8), uVar1, *(unaff_EBP + -0x1c));\n            *(unaff_EBP + -0x10) = uVar1;\n            uVar3 = uVar1;\n        }\n        else {\n            uVar1 = *(unaff_EBP + 8);\n        }\n        iVar2 = *(unaff_EBP + 0xc);\n        fcn.00407946(uVar1, iVar2, iVar4);\n        if (*(unaff_EBP + -0x10) != 0) {\n            fcn.0041a299(uVar3);\n        }\n    }\n    if (iVar4 != 0) {\n        *(iVar2 + -2 + iVar4 * 2) = 0;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 631
    },
    "00406ac5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406ac5(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.0041a299(*param_1);\n        *param_1 = 0;\n    }\n    param_1[1] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 81
    },
    "00406afd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406b49)\n// WARNING: Removing unreachable block (ram,0x00406b08)\n// WARNING: Removing unreachable block (ram,0x00406b23)\n\nuint32_t fcn.00406afd(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = cpuid_basic_info(0);\n    if (*puVar1 < 7) {\n        if (*puVar1 == 0) {\n            return 0;\n        }\n    }\n    else {\n        iVar2 = cpuid_Extended_Feature_Enumeration_info(7);\n        if ((*(iVar2 + 4) & 0x20) != 0) {\n            return 5;\n        }\n    }\n    iVar2 = cpuid_Version_info(1);\n    if ((*(iVar2 + 0xc) & 0x80000) == 0) {\n        if ((*(iVar2 + 0xc) & 0x200) == 0) {\n            if ((*(iVar2 + 8) & 0x4000000) == 0) {\n                uStack32 = *(iVar2 + 8) >> 0x19 & 1;\n            }\n            else {\n                uStack32 = 2;\n            }\n        }\n        else {\n            uStack32 = 3;\n        }\n    }\n    else {\n        uStack32 = 4;\n    }\n    return uStack32;\n}\n",
        "token_count": 356
    },
    "00406bd4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406bd4(uint param_1, char16_t *param_2, char16_t *param_3, char16_t *param_4, char16_t *param_5, \n                 char16_t *param_6, char16_t *param_7, char16_t *param_8, char16_t *param_9, char16_t *param_10, \n                 char16_t *param_11, char16_t *param_12, char16_t *param_13, char16_t *param_14, char16_t *param_15, \n                 char16_t *param_16, char16_t *param_17, char16_t *param_18, char16_t *param_19, char16_t *param_20, \n                 char16_t *param_21, char16_t *param_22, char16_t *param_23, char16_t *param_24, char16_t *param_25, \n                 char16_t *param_26, char16_t *param_27, char16_t *param_28, char16_t *param_29, char16_t *param_30, \n                 char16_t *param_31, char16_t *param_32, char16_t *param_33, char16_t *param_34, char16_t *param_35, \n                 char16_t *param_36, char16_t *param_37, char16_t *param_38, char16_t *param_39, char16_t *param_40, \n                 char16_t *param_41, char16_t *param_42, char16_t *param_43, char16_t *param_44, char16_t *param_45, \n                 char16_t *param_46, char16_t *param_47, char16_t *param_48, char16_t *param_49, char16_t *param_50, \n                 char16_t *param_51, char16_t *param_52, char16_t *param_53, char16_t *param_54, char16_t *param_55, \n                 char16_t *param_56, char16_t *param_57, char16_t *param_58, char16_t *param_59, char16_t *param_60, \n                 char16_t *param_61)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint lpCaption;\n    uint32_t uVar6;\n    uint arg_14h;\n    \n    fcn.004154b0();\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n        if (pcVar2 != NULL) {\n            (**0x42922c)();\n            (*pcVar2)();\n        }\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n        if (pcVar2 != NULL) {\n            (**0x42922c)();\n            (*pcVar2)();\n        }\n    }\n    uVar6 = 0;\n    param_2 = L\"DXGIDebug.dll\";\n    param_3 = L\"sfc_os.dll\";\n    param_4 = L\"SSPICLI.DLL\";\n    param_5 = L\"rsaenh.dll\";\n    param_6 = L\"UXTheme.dll\";\n    param_7 = L\"dwmapi.dll\";\n    param_8 = L\"cryptbase.dll\";\n    param_9 = L\"lpk.dll\";\n    param_10 = L\"usp10.dll\";\n    param_11 = L\"clbcatq.dll\";\n    param_12 = L\"comres.dll\";\n    param_13 = L\"ws2_32.dll\";\n    param_14 = L\"ws2help.dll\";\n    param_15 = L\"psapi.dll\";\n    param_16 = L\"ieframe.dll\";\n    param_17 = L\"ntshrui.dll\";\n    param_18 = L\"atl.dll\";\n    param_19 = L\"setupapi.dll\";\n    param_20 = L\"apphelp.dll\";\n    param_21 = L\"userenv.dll\";\n    param_22 = L\"netapi32.dll\";\n    param_23 = L\"shdocvw.dll\";\n    param_24 = L\"crypt32.dll\";\n    param_25 = L\"msasn1.dll\";\n    param_26 = L\"cryptui.dll\";\n    param_27 = L\"wintrust.dll\";\n    param_28 = L\"shell32.dll\";\n    param_29 = L\"secur32.dll\";\n    param_30 = L\"cabinet.dll\";\n    param_31 = L\"oleaccrc.dll\";\n    param_32 = L\"ntmarta.dll\";\n    param_33 = L\"profapi.dll\";\n    param_34 = L\"WindowsCodecs.dll\";\n    param_35 = L\"srvcli.dll\";\n    param_36 = L\"cscapi.dll\";\n    param_37 = L\"slc.dll\";\n    param_38 = L\"imageres.dll\";\n    param_39 = L\"dnsapi.DLL\";\n    param_40 = L\"iphlpapi.DLL\";\n    param_41 = L\"WINNSI.DLL\";\n    param_42 = L\"netutils.dll\";\n    param_43 = L\"mpr.dll\";\n    param_44 = L\"devrtl.dll\";\n    param_45 = L\"propsys.dll\";\n    param_46 = L\"mlang.dll\";\n    param_47 = L\"samcli.dll\";\n    param_48 = L\"samlib.dll\";\n    param_49 = L\"wkscli.dll\";\n    param_50 = L\"dfscli.dll\";\n    param_51 = L\"browcli.dll\";\n    param_52 = L\"rasadhlp.dll\";\n    param_53 = L\"dhcpcsvc6.dll\";\n    param_54 = L\"dhcpcsvc.dll\";\n    param_55 = L\"XmlLite.dll\";\n    param_56 = L\"linkinfo.dll\";\n    param_57 = L\"cryptsp.dll\";\n    param_58 = L\"RpcRtRemote.dll\";\n    param_59 = L\"aclui.dll\";\n    param_60 = L\"dsrole.dll\";\n    param_61 = L\"peerdist.dll\";\n    if ((**0x434114 != 'x') && (iVar1 = fcn.0041d9ed(*0x434114),  iVar1 != 0)) {\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)();\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n        if ((iVar3 != -1) &&\n           ((iVar3 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(),  iVar3 == iVar1 &&\n            (iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(),  iVar1 != 0)))) {\n            while (iVar1 = fcn.00406679(),  iVar1 != 0) {\n                fcn.00406b8c(&param_52);\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)();\n    fcn.00403919();\n    fcn.0040694c();\n    do {\n        uVar4 = fcn.00402d8e();\n        if (((uVar4 < 0x600) || (iVar1 = fcn.00406b8c(*(&stack0xffffffe8 + uVar6 * 4)),  iVar1 == 0)) ||\n           (iVar1 = (*_sym.imp.KERNEL32.dll_CompareStringW)(),  iVar1 == 2)) {\n            iVar1 = *(&stack0xffffffe8 + uVar6 * 4);\n            fcn.004039d4();\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n            if (iVar3 != -1) break;\n        }\n        uVar6 = uVar6 + 1;\n        iVar1 = 0;\n    } while (uVar6 < 8);\n    uVar6 = 0;\n    do {\n        iVar3 = (&param_2)[uVar6];\n        fcn.004039d4();\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n        if (iVar5 != -1) break;\n        uVar6 = uVar6 + 1;\n        iVar3 = iVar1;\n    } while (uVar6 < 0x35);\n    if (iVar3 != 0) {\n        fcn.00403963();\n        uVar6 = fcn.00402d8e();\n        if (uVar6 < 0x600) {\n            fcn.00402aa2();\n            iVar1 = (*_sym.imp.KERNEL32.dll_AllocConsole)();\n            if (iVar1 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n                (*_sym.imp.KERNEL32.dll_AttachConsole)();\n                fcn.0041a023(&stack0x000012bc);\n                (*_sym.imp.KERNEL32.dll_GetStdHandle)();\n                (*_sym.imp.KERNEL32.dll_WriteConsoleW)();\n                (*_sym.imp.KERNEL32.dll_Sleep)();\n                (*_sym.imp.KERNEL32.dll_FreeConsole)();\n            }\n        }\n        else {\n            fcn.00406b8c(L\"dwmapi.dll\");\n            fcn.00406b8c(L\"uxtheme.dll\");\n            fcn.00404ba7();\n            fcn.00402aa2();\n            arg_14h = 0xf0;\n            lpCaption = fcn.00404ba7();\n            fcn.004112b4(0, &stack0x000012d0, lpCaption, arg_14h);\n        }\n        (*_sym.imp.KERNEL32.dll_ExitProcess)();\n    }\n    return;\n}\n",
        "token_count": 2179
    },
    "00407179": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00407179(void)\n\n{\n    char cVar1;\n    \n    fcn.0040791a();\n    cVar1 = fcn.0040791f();\n    if (cVar1 != '\\0') {\n        fcn.0040184e(0xff);\n    }\n    if (*0x45ada8 != '\\0') {\n        fcn.0040184e(0xff);\n    }\n    (*_sym.imp.KERNEL32.dll_SetThreadExecutionState)(1);\n    return;\n}\n",
        "token_count": 112
    },
    "004073c1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004073c1(void)\n\n{\n    int32_t iVar1;\n    uint lpCaption;\n    int32_t extraout_ECX;\n    uint unaff_ESI;\n    uint var_1400h;\n    uint var_200h;\n    uint uStackY48;\n    uint arg_14h;\n    \n    fcn.004154b0();\n    iVar1 = *(extraout_ECX + 0x48);\n    if (0x74 < iVar1) {\n        if (iVar1 != 0x84) {\n            return;\n        }\n        fcn.00413fb4();\n        if (*(extraout_ECX + 4) == 0) {\n            fcn.00404ba7();\n            fcn.0040694c();\n        }\n        else {\n            fcn.00404ba7();\n            fcn.00402aa2();\n        }\n        arg_14h = 0x96;\n        lpCaption = fcn.00404ba7();\n        uStackY48 = 0x407673;\n        fcn.004112b4(*0x44f950, &fcn.004073c1::var_1400h, lpCaption, arg_14h);\n        return;\n    }\n    if (iVar1 == 0x74) goto code_r0x00407521;\n    if (0x16 < iVar1) {\n        if (0x38 < iVar1) {\n            if ((iVar1 != 0x39) && (iVar1 != 0x3a)) {\n                if (iVar1 == 0x3b) goto code_r0x00407438;\n                if ((iVar1 != 0x44) && (iVar1 != 0x45)) {\n                    return;\n                }\n            }\n            goto code_r0x00407521;\n        }\n        if (iVar1 == 0x38) goto code_r0x00407521;\n    // switch table (12 cases) at 0x4076d1\n        switch(iVar1) {\n        case 0x17:\n            goto code_r0x0040745c;\n        case 0x18:\ncode_r0x0040745c:\n            fcn.00404ba7();\n            goto code_r0x00407464;\n        case 0x19:\n            break;\n        case 0x1a:\n            break;\n        case 0x1b:\n            break;\n        case 0x1c:\n            goto code_r0x00407438;\n        case 0x1d:\n            break;\n        case 0x1e:\n            break;\n        case 0x1f:\n            goto code_r0x00407438;\n        default:\n            return;\n        case 0x21:\n            goto code_r0x00407438;\n        case 0x22:\n            fcn.00404ba7();\n            fcn.00402aa2();\n            uStackY48 = 0x40759a;\n            fcn.00412166();\n            return;\n        }\ncode_r0x00407521:\n        fcn.00404ba7();\ncode_r0x00407464:\n        fcn.00412166();\n        return;\n    }\n    // switch table (22 cases) at 0x407679\n    switch(iVar1) {\n    case 0:\n        goto code_r0x0040740b;\n    case 1:\n        goto code_r0x0040740b;\n    case 2:\n        fcn.004119df(0, unaff_ESI);\n        return;\n    case 3:\n        break;\n    case 4:\n        break;\n    case 5:\n        break;\n    case 6:\n        break;\n    case 7:\n        goto code_r0x0040745c;\n    case 8:\n        break;\n    case 9:\n        break;\n    case 10:\n    default:\ncode_r0x00407481:\n        fcn.00404ba7();\n        goto code_r0x0040740b;\n    case 0xb:\n        goto code_r0x00407481;\n    case 0xc:\n        break;\n    case 0xd:\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x13:\n        goto code_r0x00407673;\n    case 0x12:\n        fcn.00404ba7();\n        fcn.00412166();\n        return;\n    case 0x14:\n        break;\n    case 0x15:\n    }\ncode_r0x00407438:\n    fcn.00404ba7();\ncode_r0x0040740b:\n    fcn.00412166();\ncode_r0x00407673:\n    return;\n}\n",
        "token_count": 1039
    },
    "004077af": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004077af(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint in_stack_00000fd4;\n    uint in_stack_00000fd8;\n    uint in_stack_00000fdc;\n    uint in_stack_00000fe0;\n    uint uVar4;\n    int32_t in_stack_00001004;\n    uint in_stack_00001008;\n    uint in_stack_0000100c;\n    \n    fcn.004154b0();\n    if (*(in_stack_00001004 + 0x7030) == 2) {\ncode_r0x004077d1:\n        iVar2 = 1;\n    }\n    else {\n        if ((*(in_stack_00001004 + 0x7074) == '\\0') && (*(in_stack_00001004 + 0x7030) != 1)) {\n            iVar2 = in_stack_00001004;\n            uVar4 = in_stack_00001008;\n            fcn.0040694c();\n            iVar2 = fcn.00414599(&stack0xfffffff4, 0x800, iVar2, uVar4, in_stack_0000100c);\n            if (((iVar2 == 0) || (iVar2 == 2)) && (fcn.004028a4(in_stack_00001008),  iVar2 == 2)) {\n                *(in_stack_00001004 + 0x7030) = 1;\n            }\n            else {\n                if (iVar2 == 3) {\n                    *(in_stack_00001004 + 0x7030) = 2;\n                    goto code_r0x004077d1;\n                }\n                if (iVar2 != 4) {\n                    return iVar2;\n                }\n                puVar3 = fcn.00403919(&stack0xffffffd8);\n                uVar4 = in_stack_00000fe0;\n                if (puVar3 == &stack0xffffffd4) {\n                    fcn.004039d4();\n                }\n                else {\n                    fcn.0040694c(in_stack_00001008, &stack0xffffffd4, in_stack_00000fe0);\n                }\n                cVar1 = fcn.00402780(in_stack_00001008);\n                if (cVar1 != '\\0') {\n                    iVar2 = fcn.004077af(in_stack_00001004, in_stack_00001008, in_stack_00000fe0, in_stack_00000fd4, \n                                         in_stack_00000fd8, in_stack_00000fdc, uVar4);\n                    return iVar2;\n                }\n            }\n        }\n        else {\n            fcn.004028a4();\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 615
    },
    "00407941": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00407941(uint arg_8h, uint noname_1, uint noname_2, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint lpString;\n    uint uStack28;\n    uint *puStack24;\n    uint uStack20;\n    uint uStack16;\n    uint *puStack12;\n    int32_t iStack8;\n    \n    iStack8 = 0x41477b;\n    fcn.004154b0();\n    iStack8 = (arg_14h & 0xff) + 0x65;\n    puStack12 = 0x414788;\n    uStack16 = fcn.00404ba7();\n    puStack12 = arg_8h;\n    puStack24 = &fcn.00407941::lpString;\n    uStack20 = 0xa00;\n    uStack28 = 0x41479d;\n    fcn.00402aa2();\n    puStack12 = &fcn.00407941::lpString;\n    uStack16 = 0x65;\n    uStack20 = *0x44f958;\n    puStack24 = 0x4147b5;\n    (*_sym.imp.USER32.dll_SetDlgItemTextW)();\n    puStack24 = 0x4147ba;\n    uVar1 = fcn.00411f58();\n    return uVar1 & 0xffffff00 | *0x44f954 == '\\0';\n}\n",
        "token_count": 325
    },
    "004079d6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004079d6(uint8_t *param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (param_2 != 0) {\n        do {\n            uVar1 = 0x80;\n            iVar2 = 0;\n            do {\n                if ((*param_1 & uVar1) == 0) break;\n                iVar2 = iVar2 + 1;\n                uVar1 = uVar1 >> 1;\n            } while (uVar1 != 0);\n            if ((iVar2 == 1) || (6 < iVar2)) {\n                return 0;\n            }\n            while( true ) {\n                param_2 = param_2 + -1;\n                param_1 = param_1 + 1;\n                iVar2 = iVar2 + -1;\n                if (iVar2 < 1) break;\n                if (param_2 == 0) {\n                    return 0;\n                }\n                if ((*param_1 & 0xc0) != 0x80) {\n                    return 0;\n                }\n            }\n        } while (param_2 != 0);\n    }\n    return 1;\n}\n",
        "token_count": 265
    },
    "00408092": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00408092(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t unaff_ESI;\n    uint *unaff_retaddr;\n    uint *puVar9;\n    uint *puVar10;\n    \n    iVar1 = *param_1;\n    iVar3 = param_1[1] - *param_1 >> 4;\n    if (iVar3 != 0xfffffff) {\n        uVar7 = param_1[2] - *param_1 >> 4;\n        uVar8 = 0xfffffff;\n        if ((uVar7 <= 0xfffffff - (uVar7 >> 1)) && (uVar8 = (uVar7 >> 1) + uVar7,  uVar8 < iVar3 + 1U)) {\n            uVar8 = iVar3 + 1U;\n        }\n        uVar4 = fcn.00408355(uVar8);\n        puVar5 = fcn.004056cb(uVar4);\n        puVar9 = (param_2 - iVar1 & 0xfffffff0U) + puVar5;\n        *puVar9 = *unaff_retaddr;\n        puVar9[1] = unaff_retaddr[1];\n        puVar9[2] = unaff_retaddr[2];\n        puVar9[3] = unaff_retaddr[3];\n        iVar1 = *param_1;\n        if (iVar3 == param_1[1]) {\n            iVar6 = param_1[1] - iVar1;\n            iVar3 = iVar1;\n        }\n        else {\n            fcn.00416ab0(puVar5, iVar1, iVar3 - iVar1);\n            iVar6 = param_1[1] - iVar3;\n            puVar5 = puVar9 + 4;\n        }\n        puVar10 = puVar9;\n        fcn.00416ab0(puVar5, iVar3, iVar6);\n        if (*param_1 != 0) {\n            fcn.0040123b(*param_1, param_1[2] - *param_1 & 0xfffffff0);\n        }\n        *param_1 = unaff_ESI;\n        param_1[1] = (puVar10 + 1) * 0x10 + unaff_ESI;\n        param_1[2] = uVar8 * 0x10 + unaff_ESI;\n        return puVar9;\n    }\n    fcn.00408ea3();\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 639
    },
    "004082ba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004082ba(uint param_1, uint *param_2)\n\n{\n    while (*(param_2 + 0xd) == '\\0') {\n        fcn.004082ba(param_1, param_2[2]);\n        param_2 = *param_2;\n        fcn.00408338();\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "004082e9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004082e9(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    \n    iVar1 = *param_1;\n    puVar3 = *(iVar1 + 4);\n    param_2[1] = 0;\n    cVar2 = *(puVar3 + 0xd);\n    *param_2 = puVar3;\n    param_2[2] = iVar1;\n    while (cVar2 == '\\0') {\n        *param_2 = puVar3;\n        cVar2 = fcn.00407e5e();\n        if (cVar2 == '\\0') {\n            param_2[2] = puVar3;\n            puVar3 = *puVar3;\n        }\n        else {\n            puVar3 = puVar3[2];\n        }\n        param_2[1] = cVar2 == '\\0';\n        cVar2 = *(puVar3 + 0xd);\n    }\n    return param_2;\n}\n",
        "token_count": 244
    },
    "0040839a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.0040839a(uint32_t param_1, uint param_2)\n\n{\n    if ((*(param_1 + 0xd) == '\\0') && (param_1 = fcn.00407e5e(param_2, param_1 + 0x10),  param_1 == '\\0')) {\n        return param_1 & 0xffffff00 | 1;\n    }\n    return param_1 & 0xffffff00;\n}\n",
        "token_count": 104
    },
    "0040895c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040895c(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.00408a1f(0);\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.00415479(*(param_1 + 4));\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "004089a3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004089a3(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.0040123b(*param_1, param_1[2] - *param_1 & 0xfffffff0);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00408bf6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408bf6(int32_t *param_1)\n\n{\n    int32_t iStack16;\n    int32_t iStack12;\n    int32_t *piStack8;\n    \n    if (*param_1 != 0) {\n        iStack12 = param_1[1];\n        iStack16 = *param_1;\n        fcn.00407fed();\n        fcn.0040123b(*param_1, ((param_1[2] - *param_1) / 0x78) * 0x78);\n        piStack8 = param_1;\n    }\n    *param_1 = iStack16;\n    param_1[1] = iStack12 * 0x78 + iStack16;\n    param_1[2] = piStack8 * 0x78 + iStack16;\n    return;\n}\n",
        "token_count": 191
    },
    "00408c3d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00408c3d(int32_t **param_1, int32_t **param_2, int32_t param_3, int32_t *param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    \n    param_1[1] = param_1[1] + 1;\n    param_1 = *param_1;\n    param_4[1] = param_2;\n    if (param_2 == param_1) {\n        *param_1 = param_4;\n        param_1[1] = param_4;\n        param_1[2] = param_4;\n        *(param_4 + 3) = 1;\n    }\n    else {\n        if (param_3 == 0) {\n            param_2[2] = param_4;\n            if (param_2 == param_1[2]) {\n                param_1[2] = param_4;\n            }\n        }\n        else {\n            *param_2 = param_4;\n            if (param_2 == *param_1) {\n                *param_1 = param_4;\n            }\n        }\n        iVar2 = param_4[1];\n        piVar4 = param_4;\n        while (*(iVar2 + 0xc) == '\\0') {\n            piVar1 = piVar4[1];\n            piVar3 = *piVar1[1];\n            if (piVar1 == piVar3) {\n                piVar3 = piVar1[1][2];\n                if (*(piVar3 + 3) == '\\0') {\ncode_r0x00408cd9:\n                    *(piVar1 + 3) = 1;\n                    *(piVar3 + 3) = 1;\n                    *(*(piVar4[1] + 4) + 0xc) = 0;\n                    piVar4 = *(piVar4[1] + 4);\n                }\n                else {\n                    if (piVar4 == piVar1[2]) {\n                        fcn.00408d3c(piVar1);\n                        piVar4 = piVar1;\n                    }\n                    *(piVar4[1] + 0xc) = 1;\n                    *(*(piVar4[1] + 4) + 0xc) = 0;\n                    fcn.00408d7d(*(piVar4[1] + 4));\n                }\n            }\n            else {\n                if (*(piVar3 + 3) == '\\0') goto code_r0x00408cd9;\n                if (piVar4 == *piVar1) {\n                    fcn.00408d7d(piVar1);\n                    piVar4 = piVar1;\n                }\n                *(piVar4[1] + 0xc) = 1;\n                *(*(piVar4[1] + 4) + 0xc) = 0;\n                fcn.00408d3c(*(piVar4[1] + 4));\n            }\n            iVar2 = piVar4[1];\n        }\n        *(param_1[1] + 3) = 1;\n    }\n    return param_4;\n}\n",
        "token_count": 718
    },
    "00408d3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408d3c(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    \n    ppiVar1 = param_2[2];\n    param_2[2] = *ppiVar1;\n    if (*(*ppiVar1 + 0xd) == '\\0') {\n        *(*ppiVar1 + 4) = param_2;\n    }\n    ppiVar1[1] = param_2[1];\n    if (param_2 == *(*param_1 + 4)) {\n        *(*param_1 + 4) = ppiVar1;\n    }\n    else {\n        ppiVar2 = param_2[1];\n        if (param_2 == *ppiVar2) {\n            *ppiVar2 = ppiVar1;\n        }\n        else {\n            ppiVar2[2] = ppiVar1;\n        }\n    }\n    *ppiVar1 = param_2;\n    param_2[1] = ppiVar1;\n    return;\n}\n",
        "token_count": 244
    },
    "00408d7d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408d7d(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = *param_2;\n    *param_2 = *(iVar1 + 8);\n    if (*(*(iVar1 + 8) + 0xd) == '\\0') {\n        *(*(iVar1 + 8) + 4) = param_2;\n    }\n    *(iVar1 + 4) = param_2[1];\n    if (param_2 == *(*param_1 + 4)) {\n        *(*param_1 + 4) = iVar1;\n    }\n    else {\n        piVar2 = param_2[1];\n        if (param_2 == piVar2[2]) {\n            piVar2[2] = iVar1;\n        }\n        else {\n            *piVar2 = iVar1;\n        }\n    }\n    *(iVar1 + 8) = param_2;\n    param_2[1] = iVar1;\n    return;\n}\n",
        "token_count": 240
    },
    "00408e13": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408e13(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.00407fed(*param_1, param_1[1], param_1);\n        fcn.0040123b(*param_1, ((param_1[2] - *param_1) / 0x78) * 0x78);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00408fb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00408fb4(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    bool bVar3;\n    uint *puVar4;\n    uint uVar5;\n    char cVar6;\n    uchar uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint uVar10;\n    uint32_t uVar11;\n    uint *puVar12;\n    uint32_t uVar13;\n    char16_t *pcVar14;\n    uint arg_ch;\n    int32_t iVar15;\n    int16_t *piVar16;\n    uint *puVar17;\n    uint32_t uVar18;\n    uint32_t *puVar19;\n    uint *unaff_EBP;\n    uint32_t uVar20;\n    int32_t iVar21;\n    uint32_t *puVar22;\n    uint *in_FS_OFFSET;\n    bool bVar23;\n    ulong uVar24;\n    int64_t iVar25;\n    uint noname_2;\n    uint in_stack_ffffff30;\n    uint32_t in_stack_ffffff34;\n    uint32_t in_stack_ffffff38;\n    uint in_stack_ffffff3c;\n    uint32_t in_stack_ffffff40;\n    uint32_t in_stack_ffffff44;\n    uint in_stack_ffffff48;\n    \n    fcn.00415488();\n    fcn.004154b0();\n    unaff_EBP[0x11] = 0xffffffff;\n    unaff_EBP[-0xc] = 0xffffffff;\n    unaff_EBP[7] = 0xffffffff;\n    bVar3 = false;\n    iVar21 = 0;\n    unaff_EBP[6] = 0;\n    unaff_EBP[0x1c] = 0;\n    unaff_EBP[0x10] = 0;\n    unaff_EBP[4] = 0;\n    unaff_EBP[0xb] = 0;\n    unaff_EBP[10] = 0;\n    unaff_EBP[0xd] = 0;\n    unaff_EBP[0xe] = 0;\n    unaff_EBP[0xf] = 0;\n    bVar23 = *0x461ef1 == '\\0';\n    unaff_EBP[-1] = 0;\n    uVar8 = bVar23;\n    unaff_EBP[0x14] = 0;\n    unaff_EBP[0x13] = 0;\n    unaff_EBP[9] = 0;\n    unaff_EBP[8] = 0;\n    fcn.00407928(uVar8, 0x46500a);\n    unaff_EBP[0xc] = 0;\n    unaff_EBP[-0xb] = 0;\n    unaff_EBP[5] = 0;\n    unaff_EBP[0x18] = 0;\n    iVar9 = fcn.004056f0(0x1e00);\n    unaff_EBP[-9] = iVar9;\n    unaff_EBP[-8] = iVar9;\n    unaff_EBP[-7] = iVar9 + 0x1e00;\n    uVar10 = fcn.00408644(iVar9, 0x40, unaff_EBP + -9);\n    unaff_EBP[-8] = uVar10;\n    unaff_EBP[-6] = 0;\n    unaff_EBP[-5] = 0;\n    unaff_EBP[-4] = 0;\n    *(unaff_EBP + -1) = 2;\n    *unaff_EBP = 0;\n    unaff_EBP[1] = 0;\n    uVar10 = fcn.00407e73();\n    *unaff_EBP = uVar10;\n    *0x43e560 = *0x4661e4;\n    *(unaff_EBP + -1) = 3;\n    *0x43e55c = 1;\n    *0x43e598 = 0;\n    unaff_EBP[-0x1d] = 0x78;\ncode_r0x0040909e:\n    cVar6 = fcn.0040791f();\n    if (cVar6 == '\\0') {\n        iVar15 = 0;\n        iVar9 = 0;\n        unaff_EBP[0x12] = 0;\n        unaff_EBP[0x19] = 0;\n        do {\n            if ((0x3f < iVar15) && (*0x44f754 == '\\0')) goto code_r0x00409541;\n            if ((unaff_EBP[-8] - unaff_EBP[-9]) / unaff_EBP[-0x1d] <= iVar15) {\n                uVar8 = iVar15 + 1;\n                fcn.0040849f();\n            }\n            *0x43e5a8 = unaff_EBP[-9] + iVar9;\n            iVar9 = fcn.0040b19c(0x43e5a0, 4, uVar8);\n            if (iVar9 == 0) {\n                iVar9 = 0x33;\ncode_r0x004096ab:\n                unaff_EBP[0x1c] = iVar9;\ncode_r0x004096db:\n                unaff_EBP[0x18] = 1;\n                goto code_r0x00409544;\n            }\n            iVar9 = 0x43e5a0;\n            cVar6 = fcn.0040a9ef();\n            if (cVar6 == '\\0') {\n                if ((((unaff_EBP[0xc] ^ *0x44e680) & 0xffff) != 0) && ((*0x44e680 != 0xffff || (*0x44e684 != 0)))) {\n                    fcn.004017a5(0x46500a);\n                    goto code_r0x004096ab;\n                }\n                cVar6 = fcn.0040aa37();\n                if (cVar6 == '\\0') {\n                    if (*0x44f75c != '\\0') {\n                        cVar6 = fcn.0040aa13(0x43e5a0);\n                        if (cVar6 != '\\0') goto code_r0x004096d5;\n                    }\n                    unaff_EBP[5] = 1;\n                }\n                else {\ncode_r0x004096d5:\n                    unaff_EBP[5] = 0;\n                }\n                iVar9 = unaff_EBP[0x1c];\n                goto code_r0x004096db;\n            }\n            iVar9 = fcn.0040dacc();\n            if (iVar9 != 0) goto code_r0x004096ab;\n            *0x44e6c4 = 0;\n            iVar9 = fcn.0040ad91(*0x44e658, 2, 0x44e63c, *0x44e639);\n            if (iVar9 != 0) {\n                if (iVar21 < iVar9) {\n                    unaff_EBP[0x1c] = iVar9;\n                    iVar21 = iVar9;\n                }\n                if (1 < iVar9) goto code_r0x00409529;\n            }\n            in_stack_ffffff48 = 0x409168;\n            iVar9 = fcn.0040ad91(*0x44e65a, 3, 0, 0);\n            if (iVar9 != 0) {\n                if (iVar21 < iVar9) {\n                    unaff_EBP[0x1c] = iVar9;\n                    iVar21 = iVar9;\n                }\n                if (1 < iVar9) goto code_r0x00409529;\n            }\n            in_stack_ffffff44 = *0x44e65a;\n            in_stack_ffffff48 = 0;\n            in_stack_ffffff40 = *0x44e608;\n            fcn.0040d6aa();\n            in_stack_ffffff38 = *0x44e65a;\n            in_stack_ffffff3c = 0x44e63e;\n            in_stack_ffffff34 = *0x44e608;\n            fcn.0040a908();\n            in_stack_ffffff30 = 0;\n            iVar9 = fcn.0040ad91(*0x44e65c, 0, 0);\n            if (iVar9 != 0) {\n                if (iVar21 < iVar9) {\n                    unaff_EBP[0x1c] = iVar9;\n                    iVar21 = iVar9;\n                }\n                if (1 < iVar9) goto code_r0x00409529;\n            }\n            cVar6 = fcn.0040a872(*0x44e608, *0x44e65a, *0x44f6c4, unaff_EBP + -0x14ed, 0x3000);\n            if (cVar6 != '\\0') {\n                fcn.0040fa88(unaff_EBP + -0x14ed, 0x44e6c4, 0x800);\n                fcn.004039f9(0x44e6c4, 0x44e6c4, 0x800);\n            }\n            fcn.004071d1(CONCAT22(*0x44e642, *0x44e640));\n            puVar12 = *0x43e5a8;\n            (*0x43e5a8)[0x18] = 0;\n            puVar12[0x19] = 0;\n            puVar12 = *0x43e5a8;\n            (*0x43e5a8)[0x1a] = 0;\n            puVar12[0x1b] = 0;\n            fcn.0040a704(*0x44e608, *0x44e65a, *0x43e5a8 + 0x16, *0x43e5a8 + 0x18, *0x43e5a8 + 0x1a);\n            uVar11 = *0x44e608;\n            uVar20 = *0x44e65a;\n            unaff_EBP[0x1a] = *0x44e608;\n            if ((uVar20 != 0) && (uVar11 != 0)) {\n                for (; 3 < uVar20; uVar20 = uVar20 + (-4 - uVar13)) {\n                    uVar11 = fcn.0040b049(uVar11);\n                    unaff_EBP[0x15] = uVar11 & 0xffff;\n                    uVar13 = fcn.0040b049();\n                    uVar13 = uVar13 & 0xffff;\n                    if (uVar20 - 4 < uVar13) break;\n                    if (unaff_EBP[0x15] == 0x17) {\n                        *(unaff_EBP + 0x6f) = 1;\n                        fcn.00408719(0x22, 0x46500a, 0x44e6c4, L\"AES-0017\");\n                        goto code_r0x00409298;\n                    }\n                    uVar11 = unaff_EBP[0x1a] + 4 + uVar13;\n                    unaff_EBP[0x1a] = uVar11;\n                }\n            }\n            *(unaff_EBP + 0x6f) = 0;\ncode_r0x00409298:\n            fcn.00408845();\n            *(unaff_EBP + -1) = 4;\n            fcn.00416480(unaff_EBP + -0x8ed, 0, 0x2308);\n            fcn.0040694c(unaff_EBP + -0x8e3, 0x44e6c4, 0x800);\n            unaff_EBP[-0x8e4] = *0x44e664;\n            puVar12 = unaff_EBP + -0x8e3;\n            uVar7 = fcn.0040fac4(puVar12, (*0x43e5a8)[0xd], *0x44e650, *0x44e654, unaff_EBP + -0x8e4);\n            puVar4 = *0x43e5a8;\n            *(unaff_EBP + -0x12cb) = uVar7;\n            uVar10 = puVar4[0x17];\n            puVar17 = puVar4 + 0x10;\n            unaff_EBP[-0x4df] = puVar4[0x16];\n            uVar5 = *0x44e650;\n            unaff_EBP[-0x4de] = uVar10;\n            uVar10 = *0x44e654;\n            unaff_EBP[-0x4d7] = uVar5;\n            unaff_EBP[-0x4d6] = uVar10;\n            puVar4[0x14] = 0;\n            if (0xf < puVar4[0x15]) {\n                puVar17 = *puVar17;\n            }\n            *puVar17 = 0;\n            uVar11 = *0x44e608;\n            uVar20 = *0x44e65a;\n            unaff_EBP[0x1a] = *0x44e608;\n            if ((uVar20 != 0) && (uVar11 != 0)) {\n                for (; 3 < uVar20; uVar20 = uVar20 + (-4 - uVar13)) {\n                    uVar11 = fcn.0040b049(uVar11);\n                    unaff_EBP[0x15] = uVar11 & 0xffff;\n                    puVar12 = unaff_EBP[0x1a] + 2;\n                    uVar13 = fcn.0040b049();\n                    uVar13 = uVar13 & 0xffff;\n                    if (uVar20 - 4 < uVar13) break;\n                    if ((unaff_EBP[0x15] == 0x9903) && (0x13 < uVar13)) {\n                        fcn.00416ab0(unaff_EBP + -0x2b, unaff_EBP[0x1a] + 8, 0x10);\n                        puVar12 = unaff_EBP + -0x2b;\n                        fcn.00408eae(puVar12, 0x10);\n                        if (*0x44e63e != 0x5c) {\n                            fcn.00408792(*0x43e5a8 + 0x10);\n                            *(unaff_EBP + -1) = 5;\n                            fcn.004087ea(0x44e6c4);\n                            *(unaff_EBP + -1) = 6;\n                            puVar12 = unaff_EBP + -0x27;\n                            fcn.0040800a(puVar12, unaff_EBP + -0x19);\n                            *(unaff_EBP + -1) = 4;\n                            fcn.00408e6c();\n                            fcn.00408e48();\n                        }\n                        break;\n                    }\n                    uVar11 = unaff_EBP[0x1a] + 4 + uVar13;\n                    unaff_EBP[0x1a] = uVar11;\n                }\n            }\n            if (*(unaff_EBP + 0x6f) == '\\0') {\n                iVar9 = fcn.00401501(unaff_EBP + -0x8ed, 0, 6, 0, 0, 0, puVar12);\n                if (iVar9 == 0) goto code_r0x00409508;\n                iVar9 = fcn.0040aabc();\n                if (iVar9 == 0) {\n                    unaff_EBP[0x10] = unaff_EBP[0x10] + 1;\n                    goto code_r0x00409508;\n                }\n                uVar10 = fcn.0041a023(0x44e6c4);\n                fcn.00408ef5(0x44e6c4, uVar10);\n                unaff_EBP[0x12] = unaff_EBP[0x12] + 1;\n                iVar9 = unaff_EBP[0x19] + 0x78;\n                unaff_EBP[0x19] = iVar9;\n            }\n            else {\ncode_r0x00409508:\n                iVar9 = unaff_EBP[0x19];\n            }\n            puVar22 = unaff_EBP + 0xc;\n            uVar11 = *puVar22;\n            *puVar22 = *puVar22 + 1;\n            *(unaff_EBP + -1) = 3;\n            unaff_EBP[-0xb] = unaff_EBP[-0xb] + (0xfffffffe < uVar11);\n            fcn.00401302();\n            iVar15 = unaff_EBP[0x12];\n        } while( true );\n    }\ncode_r0x0040a0e9:\n    if (unaff_EBP[-6] != unaff_EBP[-5]) {\n        iVar9 = unaff_EBP[-6] + 0x28;\n        do {\n            fcn.004028b2();\n            iVar15 = iVar9 + 8;\n            iVar9 = iVar9 + 0x30;\n        } while (iVar15 != unaff_EBP[-5]);\n    }\n    cVar6 = fcn.0040791f();\n    if (((cVar6 == '\\0') && (unaff_EBP[5] != 0)) && (*0x44f754 == '\\0')) {\n        fcn.004017a5(0x46500a);\n        if (iVar21 == 0) {\n            iVar21 = 1;\n        }\n    }\n    iVar9 = unaff_EBP[0x11];\n    if ((*0x43e598 == 0) && (uVar10 = 0x49,  *0x463fea != 0x49)) {\n        if (!bVar3) {\n            uVar10 = 0x46500a;\n            fcn.004016d9(0x44, 0x46500a);\n        }\n        fcn.004019a1(uVar10, 10);\n    }\n    if ((iVar9 == -1) && (iVar21 < 2)) {\n        iVar21 = (-(unaff_EBP[0x10] != 0) & 0x46) + 0xb;\n    }\n    else if ((iVar9 + 1U == (unaff_EBP[4] & 0xffff)) && (iVar21 < 2)) {\n        iVar21 = 0x52;\n    }\n    else if ((*(unaff_EBP + 0x10) == 0) || (1 < iVar21)) {\n        if ((unaff_EBP[4] != 0) && (iVar21 == 0)) {\n            iVar21 = 1;\n        }\n    }\n    else {\n        iVar21 = 0x51;\n    }\n    fcn.0040829a();\n    fcn.004089c7();\n    fcn.00408e13();\n    fcn.004089a3();\n    *in_FS_OFFSET = unaff_EBP[-3];\n    return iVar21;\ncode_r0x00409529:\n    fcn.004086ed(0x1c, 0x46500a, 0x44e6c4);\n    unaff_EBP[0x18] = 1;\ncode_r0x00409541:\n    iVar9 = unaff_EBP[0x1c];\ncode_r0x00409544:\n    bVar23 = *0x44f754 != '\\0';\n    unaff_EBP[-0x1a] = *0x44e5f8;\n    unaff_EBP[-0x20] = *0x44e5fc;\n    unaff_EBP[-0x1b] = *0x44e5b8;\n    unaff_EBP[-0x1c] = *0x44e5c0;\n    unaff_EBP[-0x21] = *0x44e5c4;\n    if (bVar23) {\n        *0x44f758 = 0;\n        cVar6 = fcn.00408a71(0x46500a);\n        pcVar14 = L\"zx01\";\n        if (cVar6 == '\\0') {\n            pcVar14 = 0x429f68;\n        }\n        fcn.0040398f(0x46500a, pcVar14, 0x800);\n        if (*0x44e5d8 != NULL) {\n            pcVar2 = ***0x44e5d8;\n            (**0x42922c)(1);\n            (*pcVar2)();\n        }\n        *0x44e5d8 = NULL;\n        fcn.0040b05e();\n        fcn.00407928(*0x461ef1 == '\\0', 0x46500a);\n    }\n    iVar21 = 0;\n    unaff_EBP[0x15] = 0;\n    if (0 < unaff_EBP[0x12]) {\n        iVar15 = unaff_EBP[6] << 6;\n        unaff_EBP[-0x1f] = iVar15;\n        do {\n            unaff_EBP[0x11] = iVar15 + iVar21;\n            puVar12 = iVar21 * 0x78 + unaff_EBP[-9];\n            *0x43e5a8 = puVar12;\n            unaff_EBP[0x16] = puVar12;\n            if (7 < puVar12[5]) {\n                unaff_EBP[0x16] = *puVar12;\n            }\n            if ((*0x44f754 != '\\0') && (uVar11 = puVar12[0xe],  uVar11 != *0x44f758)) {\n                if (uVar11 == *0x44e670) {\n                    cVar6 = fcn.00408a71(0x46500a);\n                    pcVar14 = L\"zipx\";\n                    if (cVar6 == '\\0') {\n                        pcVar14 = 0x429f7c;\n                    }\n                    fcn.0040398f(0x46500a, pcVar14, 0x800);\n                }\n                else {\n                    fcn.00408aab(0x46500a, 0x800, uVar11);\n                }\n                *0x44f758 = (*0x43e5a8)[0xe];\n                if (*0x44e5d8 != NULL) {\n                    pcVar2 = ***0x44e5d8;\n                    (**0x42922c)();\n                    (*pcVar2)();\n                }\n                *0x44e5d8 = NULL;\n                fcn.0040b05e();\n                puVar12 = *0x43e5a8;\n            }\n            iVar15 = puVar12[7] + *0x44e604 + CARRY4(puVar12[6], *0x44e600);\n            unaff_EBP[3] = puVar12[6] + *0x44e600;\n            uVar24 = fcn.004158f0();\n            unaff_EBP[0x19] = uVar24;\n            iVar21 = unaff_EBP[3] - unaff_EBP[0x19];\n            unaff_EBP[0x1a] = iVar15;\n            unaff_EBP[0x1a] = (unaff_EBP[0x1a] - (uVar24 >> 0x20)) - (unaff_EBP[3] < unaff_EBP[0x19]);\n            unaff_EBP[0x17] = iVar21;\n            if ((iVar15 < 1) && (iVar15 < 0)) {\n                fcn.004017a5();\n                iVar9 = 2;\n                unaff_EBP[0x1c] = 2;\n                uVar20 = *0x44e604;\n                uVar11 = *0x44e600;\n                puVar12 = *0x43e5a8;\n                if ((unaff_EBP[0x11] == 0) && ((*0x44e600 | *0x44e604) != 0)) {\n                    *0x44e600 = 0;\n                    *0x44e604 = 0;\n                    iVar21 = (*0x43e5a8)[7];\n                    unaff_EBP[0xb] = uVar11;\n                    uVar10 = puVar12[6];\n                    unaff_EBP[10] = uVar20;\n                    unaff_EBP[3] = uVar10;\n                    uVar24 = fcn.004158f0();\n                    unaff_EBP[0x19] = uVar24;\n                    unaff_EBP[0x17] = unaff_EBP[3] - unaff_EBP[0x19];\n                    iVar15 = (iVar21 - (uVar24 >> 0x20)) - (unaff_EBP[3] < unaff_EBP[0x19]);\n                    if ((0 < iVar21) || (-1 < iVar21)) {\n                        iVar21 = unaff_EBP[0x17];\n                        goto code_r0x00409818;\n                    }\n                    goto code_r0x004097f6;\n                }\ncode_r0x00409805:\n                iVar21 = 3;\ncode_r0x00409808:\n                unaff_EBP[0x1c] = iVar21;\n                iVar9 = iVar21;\n            }\n            else {\n                iVar15 = unaff_EBP[0x1a];\ncode_r0x00409818:\n                if ((*0x44e5f8 == CONCAT44(iVar15, iVar21)) && (*0x44f754 == '\\0')) {\n                    uVar11 = (*0x44e5b8 - unaff_EBP[0x19]) - *0x44e5b4;\n                    bVar23 = CARRY4(*0x44e5c0, uVar11);\n                    *0x44e5c0 = *0x44e5c0 + uVar11;\n                    *0x44e5c4 = *0x44e5c4 + (uVar11 >> 0x1f) + bVar23;\n                    *0x44e5b8 = unaff_EBP[0x19] + *0x44e5b4;\n                }\n                else {\n                    pcVar2 = *(**0x44e5d8 + 0x10);\n                    (**0x42922c)();\n                    (*pcVar2)();\n                    pcVar2 = *(**0x44e5d8 + 0x14);\n                    (**0x42922c)();\n                    iVar25 = (*pcVar2)();\n                    *0x44e5f8 = iVar25;\n                    *0x44e5c0 = fcn.0040b5b3();\n                    *0x44e5c4 = *0x44e5c0 >> 0x1f;\n                    if ((-1 < *0x44e5c0 || *0x44e5c4 < 0) && ((*0x44e5c4 < 0 || (*0x44e5c0 == 0))))\n                    goto code_r0x004097f6;\n                    *0x44e5b8 = *0x44e5b4 + unaff_EBP[0x19];\n                    iVar9 = unaff_EBP[0x1c];\n                    uVar11 = unaff_EBP[0x19];\n                    bVar23 = *0x44e5c0 < uVar11;\n                    *0x44e5c0 = *0x44e5c0 - uVar11;\n                    *0x44e5c4 = (*0x44e5c4 - (uVar11 >> 0x1f)) - bVar23;\n                }\n                iVar21 = fcn.0040b19c();\n                if (iVar21 == 0) {\ncode_r0x004097f6:\n                    fcn.004017a5();\n                    goto code_r0x00409805;\n                }\n                cVar6 = fcn.0040aa5b();\n                if (cVar6 == '\\0') {\n                    if ((unaff_EBP[0x11] == 0) && ((*0x44e600 | *0x44e604) != 0)) {\n                        unaff_EBP[0xb] = *0x44e600;\n                        unaff_EBP[10] = *0x44e604;\n                        *0x44e600 = 0;\n                        *0x44e604 = 0;\n                        uVar11 = *0x44e600;\n                        uVar20 = *0x44e604;\ncode_r0x00409966:\n                        *0x44e604 = uVar20;\n                        *0x44e600 = uVar11;\n                        iVar21 = fcn.0040b3dc();\n                        if (iVar21 == 0) {\n                            iVar21 = fcn.0040b19c();\n                            if (iVar21 != 0) {\n                                cVar6 = fcn.0040aa5b();\n                                if (cVar6 != '\\0') goto code_r0x004099a1;\n                            }\n                        }\n                    }\n                    else if ((*0x44e600 | *0x44e604) == 0) {\n                        uVar11 = unaff_EBP[0xb];\n                        uVar20 = unaff_EBP[10];\n                        if ((unaff_EBP[0xb] | unaff_EBP[10]) != 0) goto code_r0x00409966;\n                    }\n                    goto code_r0x004097f6;\n                }\ncode_r0x004099a1:\n                iVar21 = fcn.0040dc3e();\n                if (iVar21 != 0) {\n                    fcn.004017a5();\n                    goto code_r0x00409808;\n                }\n                *0x44e6c4 = 0;\n                iVar21 = fcn.0040ad91();\n                if (iVar21 == 0) {\ncode_r0x00409a07:\n                    if (*0x44e608 != 0) {\n                        fcn.0041a299();\n                        *0x44e608 = 0;\n                    }\n                    iVar21 = fcn.0040ad91(*0x44e632, 3, 0);\n                    if (iVar21 != 0) {\n                        if (iVar9 < iVar21) {\n                            unaff_EBP[0x1c] = iVar21;\n                            iVar9 = iVar21;\n                        }\n                        if (1 < iVar21) goto code_r0x004099f1;\n                    }\n                    fcn.0040d6aa(*0x44e608, *0x44e632, 1);\n                    uVar8 = *0x44e608;\n                    cVar6 = fcn.0040a872();\n                    if (cVar6 != '\\0') {\n                        fcn.0040fa88(unaff_EBP + -0x14ed, 0x44e6c4, 0x800);\n                        uVar8 = 0x44e6c4;\n                        fcn.004039f9(0x44e6c4, 0x44e6c4, 0x800);\n                    }\n                    *0x44f6c8 = (*0x43e5a8)[0x16];\n                    *0x44f6cc = (*0x43e5a8)[0x17];\n                    *0x44f6d0 = (*0x43e5a8)[0x18];\n                    *0x44f6d4 = (*0x43e5a8)[0x19];\n                    *0x44f6d8 = (*0x43e5a8)[0x1a];\n                    *0x44f6dc = (*0x43e5a8)[0x1b];\n                    fcn.0040a704(*0x44e608, *0x44e632, 0x44f6c8, 0x44f6d0, 0x44f6d8, uVar8);\n                    fcn.0040a908(*0x44e608, *0x44e632, 0x44e614);\n                    fcn.0040694c(0x44e6c4, unaff_EBP[0x16], 0x800);\n                    uVar7 = fcn.0040fac4(0x44e6c4, (*0x43e5a8)[0xd], (*0x43e5a8)[10], (*0x43e5a8)[0xb], *0x43e5a8 + 0xf)\n                    ;\n                    bVar23 = *0x44e6c4 != 0;\n                    *(unaff_EBP + 0x6f) = uVar7;\n                    if ((bVar23) && (*0x44e6c6 != 0)) {\n                        piVar16 = 0x44e6c8;\n                        iVar1 = *0x44e6c8;\n                        while (iVar1 != 0) {\n                            if (iVar1 == 0x3a) {\n                                *piVar16 = 0x5f;\n                            }\n                            piVar16 = piVar16 + 1;\n                            iVar1 = *piVar16;\n                        }\n                    }\n                    uVar8 = 0x800;\n                    fcn.004032be(0x44e6c4, 0x44e6c4);\n                    uVar11 = *0x43e578;\n                    iVar21 = *0x43e57c;\n                    if (*(unaff_EBP + 0x6f) != '\\0') {\n                        uVar11 = 0;\n                        iVar21 = 0;\n                    }\n                    uVar13 = *0x44e630 + *0x44e632 + 0x1e;\n                    uVar20 = unaff_EBP[-0xc];\n                    unaff_EBP[0x16] = uVar13 + uVar11;\n                    unaff_EBP[0x19] = iVar21 + CARRY4(uVar13, uVar11);\n                    puVar12 = *0x43e5a8;\n                    if (((uVar20 & unaff_EBP[7]) != 0xffffffff) && (unaff_EBP[-0x1e] == (*0x43e5a8)[0xe])) {\n                        iVar21 = (*0x43e5a8)[7];\n                        iVar9 = unaff_EBP[7];\n                        uVar11 = (*0x43e5a8)[6];\n                        unaff_EBP[-0xd] = uVar11;\n                        unaff_EBP[0x1a] = iVar21;\n                        if ((iVar9 < iVar21) || ((iVar9 <= iVar21 && (uVar20 <= uVar11)))) goto code_r0x00409de6;\n                        iVar15 = (iVar9 - iVar21) - (uVar20 < uVar11);\n                        unaff_EBP[3] = iVar15;\n                        if ((iVar15 < 0) ||\n                           ((iVar15 == 0 ||\n                             (SBORROW4(iVar9, iVar21) != SBORROW4(iVar9 - iVar21, uVar20 < uVar11)) != iVar15 < 0 &&\n                            (uVar20 - uVar11 < 0x201)))) goto code_r0x00409de6;\n                        uVar20 = unaff_EBP[0x16];\n                        unaff_EBP[-0x22] = unaff_EBP[0x19];\n                        uVar13 = unaff_EBP[0x14];\n                        unaff_EBP[-0x25] = uVar11;\n                        unaff_EBP[-0x24] = iVar21;\n                        unaff_EBP[-0x23] = uVar20;\n                        iVar9 = unaff_EBP[0x13];\n                        if ((unaff_EBP[0x13] == iVar21 || iVar9 < iVar21) && ((iVar9 < iVar21 || (uVar13 <= uVar11)))) {\n                            uVar18 = uVar13 + unaff_EBP[9];\n                            iVar9 = unaff_EBP[0x13] + unaff_EBP[8] + CARRY4(uVar13, unaff_EBP[9]);\n                            if ((iVar9 <= iVar21) && ((iVar9 < iVar21 || (uVar18 <= uVar11)))) goto code_r0x00409d0d;\n                        }\n                        else {\n                            uVar18 = unaff_EBP[9] + uVar13;\n                            iVar9 = unaff_EBP[8] + unaff_EBP[0x13] + CARRY4(unaff_EBP[9], uVar13);\ncode_r0x00409d0d:\n                            unaff_EBP[3] = uVar20 + uVar11;\n                            unaff_EBP[0x17] = unaff_EBP[0x19] + unaff_EBP[0x1a] + CARRY4(uVar20, uVar11);\n                            iVar15 = unaff_EBP[0x1a] + unaff_EBP[0x19] + CARRY4(uVar11, unaff_EBP[0x16]);\n                            iVar21 = unaff_EBP[0x13];\n                            if ((unaff_EBP[0x13] != iVar15 && iVar15 <= iVar21) ||\n                               (((iVar15 <= iVar21 && (uVar11 + unaff_EBP[0x16] <= unaff_EBP[0x14])) ||\n                                ((iVar9 <= unaff_EBP[0x17] && ((iVar9 < unaff_EBP[0x17] || (uVar18 < uVar20 + uVar11))))\n                                )))) {\n                                puVar19 = unaff_EBP[0xe];\n                                for (puVar22 = unaff_EBP[0xd]; puVar22 != puVar19; puVar22 = puVar22 + 4) {\n                                    uVar11 = puVar22[1];\n                                    uVar20 = *puVar22;\n                                    unaff_EBP[-10] = uVar11;\n                                    if ((uVar11 <= unaff_EBP[0x1a]) &&\n                                       ((uVar11 < unaff_EBP[0x1a] ||\n                                        (uVar20 < unaff_EBP[-0xd] || uVar20 == unaff_EBP[-0xd])))) {\n                                        uVar11 = uVar20 + puVar22[2];\n                                        iVar21 = puVar22[3] + unaff_EBP[-10] + CARRY4(uVar20, puVar22[2]);\n                                        if ((unaff_EBP[0x1a] < iVar21) ||\n                                           ((unaff_EBP[0x1a] <= iVar21 &&\n                                            (unaff_EBP[-0xd] <= uVar11 && uVar11 != unaff_EBP[-0xd]))))\n                                        goto code_r0x00409c64;\n                                        uVar11 = unaff_EBP[-10];\n                                        puVar19 = unaff_EBP[0xe];\n                                    }\n                                    if (uVar11 <= unaff_EBP[0x17]) {\n                                        if ((uVar11 < unaff_EBP[0x17]) || (uVar20 < unaff_EBP[3])) {\n                                            iVar21 = uVar11 + puVar22[3] + CARRY4(uVar20, puVar22[2]);\n                                            if ((unaff_EBP[0x17] < iVar21) ||\n                                               ((unaff_EBP[0x17] <= iVar21 && (unaff_EBP[3] <= uVar20 + puVar22[2]))))\n                                            goto code_r0x00409c64;\n                                        }\n                                        puVar19 = unaff_EBP[0xe];\n                                    }\n                                }\n                                if (puVar19 == unaff_EBP[0xf]) {\n                                    fcn.00408092(puVar19, unaff_EBP + -0x25);\n                                    puVar12 = *0x43e5a8;\n                                }\n                                else {\n                                    unaff_EBP[0xe] = puVar19 + 4;\n                                    *puVar19 = unaff_EBP[-0x25];\n                                    puVar19[1] = unaff_EBP[-0x24];\n                                    puVar19[2] = unaff_EBP[-0x23];\n                                    puVar19[3] = unaff_EBP[-0x22];\n                                    puVar12 = *0x43e5a8;\n                                }\n                                goto code_r0x00409de6;\n                            }\n                        }\ncode_r0x00409c64:\n                        fcn.004086ed(0x1c, 0x46500a, 0x44e6c4);\n                        unaff_EBP[0x1c] = 3;\ncode_r0x00409c7b:\n                        unaff_EBP[0x18] = 1;\n                        break;\n                    }\ncode_r0x00409de6:\n                    uVar11 = puVar12[6];\n                    uVar20 = unaff_EBP[0x16];\n                    iVar21 = puVar12[7];\n                    unaff_EBP[0x14] = uVar11;\n                    unaff_EBP[9] = uVar20;\n                    cVar6 = *0x461ef1;\n                    uVar13 = puVar12[0xe];\n                    unaff_EBP[0x13] = iVar21;\n                    unaff_EBP[8] = unaff_EBP[0x19];\n                    unaff_EBP[-0xc] = uVar11 + uVar20;\n                    unaff_EBP[7] = iVar21 + unaff_EBP[0x19] + CARRY4(uVar11, uVar20);\n                    unaff_EBP[-0x1e] = uVar13;\n                    if ((cVar6 == '\\0') || (uVar13 = 1,  *0x463fea == 0x49)) {\n                        uVar13 = uVar13 & 0xffffff00;\n                    }\n                    uVar10 = 0x44e6c4;\n                    cVar6 = fcn.00407941(0x44e6c4, cVar6 == '\\0', uVar13, 0);\n                    if (cVar6 == '\\0') break;\n                    if (*0x461ef1 == '\\0') {\n                        uVar11 = 0;\n                        if (*(unaff_EBP + 0x6f) == '\\0') {\n                            uVar10 = 0x44e6c4;\n                            iVar21 = fcn.0040abcc(0x44e6c4);\n                            if (iVar21 == -1) {\n                                if (*0x461e63 != '\\0') goto code_r0x00409e65;\ncode_r0x0040a03f:\n                                if (uVar11 != 0) {\ncode_r0x0040a043:\n                                    in_stack_ffffff40 = 0x800;\n                                    in_stack_ffffff3c = 0x44e6c4;\n                                    uVar10 = 0x45ae08;\n                                    in_stack_ffffff34 = 0x40a065;\n                                    in_stack_ffffff44 = *0x43e580;\n                                    in_stack_ffffff48 = *0x43e584;\n                                    iVar21 = fcn.004077af();\n                                    if (iVar21 == 6) goto code_r0x00409c7b;\n                                    if (iVar21 == 1) goto code_r0x00409e65;\n                                }\n                            }\n                            else if (iVar21 == 0) {\n                                if (*0x461e38 == 2) goto code_r0x00409e65;\n                                if ((*0x461e38 == 0) || (*0x461e38 == 3)) {\n                                    uVar11 = 1;\n                                    goto code_r0x0040a03f;\n                                }\n                            }\n                            else if (iVar21 == 1) {\n                                if (((*0x461e38 == 2) || (*0x461e64 != '\\0')) || (*0x461e63 != '\\0'))\n                                goto code_r0x00409e65;\n                                if ((*0x461e38 == 0) || (*0x461e38 == 3)) goto code_r0x0040a043;\n                            }\ncode_r0x0040a077:\n                            if ((*(*0x43e5a8 + 0x1c) & 1) != 0) {\n                                iVar21 = fcn.0040e426(uVar10);\n                                if (iVar21 != 0) {\n                                    if (iVar21 != 9) {\n                                        if (iVar21 == 0xc) {\n                                            unaff_EBP[4] = unaff_EBP[4] + 1;\n                                            uVar10 = 6;\n                                        }\n                                        else {\n                                            if (unaff_EBP[0x1c] < iVar21) {\n                                                unaff_EBP[0x1c] = iVar21;\n                                            }\n                                            uVar10 = 0x1c;\n                                        }\n                                        fcn.004086ed(uVar10, 0x46500a, 0x44e6c4);\n                                        goto code_r0x00409e65;\n                                    }\n                                    fcn.00401667(2);\n                                    iVar21 = unaff_EBP[0x1c];\n                                    bVar3 = true;\n                                    goto code_r0x0040a0e9;\n                                }\n                            }\n                            iVar21 = fcn.0040a21d();\n                            iVar9 = unaff_EBP[0x1c];\n                            if ((iVar21 != 0) && (iVar9 < iVar21)) goto code_r0x00409808;\n                            goto code_r0x00409e68;\n                        }\n                        if (((*0x461e63 == '\\0') && (*0x44e6c4 != 0)) && (*0x461e68 != 1)) {\n                            if (((*0x43e5a8)[0xd] == 0) || ((*0x43e5a8)[0xd] == 0xb)) {\n                                uVar11 = (*0x43e5a8)[0xf];\n                            }\n                            cVar6 = fcn.00402780(0x44e6c4);\n                            if (cVar6 == '\\0') {\n                                in_stack_ffffff48 = 0x44e6c4;\n                                in_stack_ffffff44 = 0x409ed8;\n                                iVar21 = fcn.00402810(0x44e6c4, *0x461e9c == '\\0', uVar11);\n                                if (iVar21 != 0) {\n                                    in_stack_ffffff44 = *0x461e53;\n                                    in_stack_ffffff40 = 1;\n                                    in_stack_ffffff3c = 0x44e6c4;\n                                    fcn.00402651();\n                                    in_stack_ffffff34 = *0x461e9c == '\\0';\n                                    in_stack_ffffff30 = 0x44e6c4;\n                                    iVar21 = fcn.00402810(0x44e6c4, in_stack_ffffff34, uVar11);\n                                    in_stack_ffffff38 = uVar11;\n                                    if (iVar21 != 0) {\n                                        fcn.004086ed(0x14, 0x46500a, 0x44e6c4);\n                                        fcn.004019e9();\n                                        in_stack_ffffff38 = uVar11;\n                                        goto code_r0x00409e65;\n                                    }\n                                }\n                                *0x43e598 = *0x43e598 + 1;\n                            }\n                            unaff_EBP[-0x19] = 0;\n                            unaff_EBP[-0x15] = 0;\n                            unaff_EBP[-0x14] = 7;\n                            *(unaff_EBP + -0x19) = 0;\n                            unaff_EBP[-0x13] = 0;\n                            unaff_EBP[-0x12] = 0;\n                            unaff_EBP[-0x11] = 0;\n                            unaff_EBP[-0x10] = 0;\n                            unaff_EBP[-0xf] = 0;\n                            unaff_EBP[-0xe] = 0;\n                            *(unaff_EBP + -1) = 7;\n                            arg_ch = fcn.0041a023(0x44e6c4);\n                            noname_2 = 0x44e6c4;\n                            fcn.00408ef5(0x44e6c4, arg_ch);\n                            uVar10 = *0x44f6cc;\n                            iVar21 = unaff_EBP[-5];\n                            unaff_EBP[-0x13] = *0x44f6c8;\n                            unaff_EBP[-0x11] = *0x44f6d8;\n                            uVar5 = *0x44f6d0;\n                            unaff_EBP[-0x12] = uVar10;\n                            uVar10 = *0x44f6dc;\n                            unaff_EBP[-0xf] = uVar5;\n                            unaff_EBP[-0x10] = uVar10;\n                            unaff_EBP[-0xe] = *0x44f6d4;\n                            if (iVar21 == unaff_EBP[-4]) {\n                                fcn.00408189(iVar21, unaff_EBP + -0x19, noname_2, arg_ch, in_stack_ffffff30, \n                                             in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40\n                                             , in_stack_ffffff44, in_stack_ffffff48);\n                            }\n                            else {\n                                fcn.00408676(unaff_EBP + -6);\n                                unaff_EBP[-5] = iVar21 + 0x30;\n                            }\n                            *(unaff_EBP + -1) = 3;\n                            fcn.00408e6c();\n                        }\n                    }\n                    else if ((*(unaff_EBP + 0x6f) == '\\0') && (*0x44e614 != 0x5c)) goto code_r0x0040a077;\ncode_r0x00409e65:\n                    iVar9 = unaff_EBP[0x1c];\n                }\n                else {\n                    if (iVar9 < iVar21) {\n                        unaff_EBP[0x1c] = iVar21;\n                        iVar9 = iVar21;\n                    }\n                    if (iVar21 < 2) goto code_r0x00409a07;\ncode_r0x004099f1:\n                    fcn.004086ed(0x1c, 0x46500a, 0x44e6c4);\n                }\n            }\ncode_r0x00409e68:\n            iVar21 = unaff_EBP[0x15] + 1;\n            unaff_EBP[0x15] = iVar21;\n            if (unaff_EBP[0x12] <= iVar21) break;\n            iVar15 = unaff_EBP[-0x1f];\n        } while( true );\n    }\n    pcVar2 = *(**0x44e5d8 + 0x10);\n    (**0x42922c)(unaff_EBP[-0x1a], unaff_EBP[-0x20], 0);\n    (*pcVar2)();\n    pcVar2 = *(**0x44e5d8 + 0x14);\n    (**0x42922c)();\n    iVar25 = (*pcVar2)();\n    *0x44e5f8 = iVar25;\n    fcn.0040b5b3(*0x44e5b4, 0x2000);\n    *0x44e5b8 = unaff_EBP[-0x1b];\n    unaff_EBP[6] = unaff_EBP[6] + 1;\n    iVar21 = unaff_EBP[0x1c];\n    *0x44e5c0 = unaff_EBP[-0x1c];\n    *0x44e5c4 = unaff_EBP[-0x21];\n    if (unaff_EBP[0x18] != 0) goto code_r0x0040a0e9;\n    goto code_r0x0040909e;\n}\n",
        "token_count": 11654
    },
    "0040a21d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040a2ea)\n// WARNING: Removing unreachable block (ram,0x0040a31d)\n\nuint32_t fcn.0040a21d(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t unaff_EDI;\n    bool bVar8;\n    int64_t iVar9;\n    uint uVar10;\n    uint32_t in_stack_ffffffb8;\n    uint in_stack_ffffffcc;\n    int32_t iStack24;\n    \n    *0x44e5b0 = 0xffffffff;\n    *0x44e5cc = 0;\n    *0x44e5c8 = 0;\n    *0x44e5d0 = 0;\n    *0x44e6ac = 1;\n    uVar5 = 0;\n    if ((*0x461ef1 == '\\0') && (iVar4 = fcn.0040b0e1(),  iVar4 != 0)) {\n        in_stack_ffffffcc = 1;\n        fcn.00402651();\n        iVar4 = fcn.0040b0e1();\n        if (iVar4 != 0) {\n            fcn.00401826();\n            return 0x34;\n        }\n    }\n    iVar4 = *0x43e584;\n    if (((*0x461ef1 == '\\0') && (-1 < *0x43e584)) && ((0 < *0x43e584 || (1000000 < *0x43e580)))) {\n        in_stack_ffffffb8 = 0x400;\n        iVar9 = fcn.00415800(*0x43e580, *0x43e584, 0x400, 0);\n        if ((iVar9 < CONCAT44(*0x43e57c, *0x43e578)) &&\n           ((iVar4 < 0 ||\n            (((iVar4 < 1 && (*0x43e580 < 0x5f5e101)) ||\n             (iVar9 = fcn.00401e2a(),  iVar4 = *0x43e584,  CONCAT44(*0x43e57c, *0x43e578) < iVar9)))))) {\n            pcVar1 = *(**0x44e6b0 + 0x10);\n            (**0x42922c)(*0x43e580, iVar4, 0);\n            (*pcVar1)();\n            fcn.00402509();\n            pcVar1 = *(**0x44e6b0 + 0x10);\n            (**0x42922c)(0, 0, 0);\n            (*pcVar1)();\n            iVar4 = *0x43e584;\n        }\n    }\n    *0x43e598 = *0x43e598 + 1;\n    *0x43e590 = *0x43e580;\n    *0x43e594 = iVar4;\n    fcn.0040ad04();\n    if (*0x44e614 == 0) {\n        uVar7 = 0;\n        iVar4 = 0;\n        while( true ) {\n            *0x44e6c0 = 0;\n            *0x44e6bc = 0x43e5ac;\n            do {\n                bVar8 = *0x44e5c0 != 0;\n                *0x44e5c0 = *0x44e5c0 + -1;\n                *0x44e5c4 = *0x44e5c4 + -1 + bVar8;\n                if (*0x44e5c4 < 0) {\n                    uVar6 = fcn.0040b284();\n                }\n                else {\n                    uVar6 = **0x44e5b8;\n                    *0x44e5b8 = *0x44e5b8 + 1;\n                }\n                if (uVar6 == 0xffffffff) goto code_r0x0040a51e;\n                **0x44e6bc = uVar6;\n                *0x44e6bc = *0x44e6bc + 1;\n                *0x44e6c0 = *0x44e6c0 + 1;\n            } while (*0x44e6c0 != 0x10000);\n            bVar8 = 0xfffeffff < uVar7;\n            uVar7 = uVar7 + 0x10000;\n            iVar4 = iVar4 + bVar8;\n            pcVar1 = *(**0x44e5d8 + 0x14);\n            uVar10 = *0x44e5e8;\n            (**0x42922c)(*0x44e5e8, *0x44e5ec);\n            iVar9 = (*pcVar1)();\n            iVar9 = iVar9 + CONCAT44(*0x44e5f4, *0x44e5f0);\n            unaff_EDI = iVar9;\n            in_stack_ffffffb8 = *0x43e580;\n            fcn.004078dc(uVar7, iStack24, *0x43e580, *0x43e584, unaff_EDI, iVar9 >> 0x20, iVar4, in_stack_ffffffcc);\n            fcn.0040791a();\n            cVar2 = fcn.0040791f();\n            if (cVar2 != '\\0') break;\n            fcn.0040af3e(uVar10, *0x44e6c0, 0x43e5ac);\n            iVar4 = iStack24;\n        }\ncode_r0x0040a51e:\n        if (*0x44e6c0 != 0) {\n            fcn.0040af3e(0x43e5ac, *0x44e6c0);\n        }\n    }\n    else {\n        if ((*0x44e614 != 8) && (*0x44e614 != 9)) {\n            fcn.00401aa9(0x46500a, 0x44e6c4);\n            fcn.0040b4fb();\n            if (*0x461ef1 == '\\0') {\n                fcn.0040ac2d();\n                fcn.0040272f(0x44e6c4);\n            }\n            return 1;\n        }\n        iVar4 = fcn.0040bc14(*0x44e614 == 9);\n        if (iVar4 != 0) {\n            uVar5 = (iVar4 == 3) * 4 + 2;\n            unaff_EDI = uVar5;\n        }\n    }\n    unaff_EDI = unaff_EDI & 0xffff00ff;\n    cVar2 = fcn.0040791f();\n    if ((cVar2 != '\\0') && (*0x461ef1 == '\\0')) {\n        unaff_EDI = unaff_EDI & 0xffff0000 | 0x100;\n    }\n    if (uVar5 == 6) {\n        fcn.004018d7();\n    }\n    if (*0x44f75d == '\\0') {\ncode_r0x0040a64f:\n        if (~*0x44e5b0 == *0x44e61c) goto code_r0x0040a65e;\ncode_r0x0040a669:\n        if ((uVar5 < 2) || (uVar5 == 2)) {\n            if ((*(*0x43e5a8 + 0x70) & 1) == 0) {\n                uVar10 = 3;\n            }\n            else {\n                uVar10 = 4;\n            }\n            fcn.004086ed(uVar10, 0x46500a, 0x44e6c4);\n        }\n        if ((*0x461e94 == '\\0') && (*0x461ef1 == '\\0')) {\n            unaff_EDI = unaff_EDI & 0xffff0000 | 0x100;\n        }\n        uVar5 = 2;\ncode_r0x0040a6a9:\n        if (*0x461ef1 != '\\0') goto code_r0x0040a6e6;\n    }\n    else {\n        fcn.0040eb1e(0x44f768, &stack0xffffffcc, 10);\n        if ((*0x43e57c < 1) && (*0x43e57c < 0)) {\n            *0x43e578 = 0;\n            *0x43e57c = 0;\n        }\n        fcn.0040b4fb();\n        bVar8 = 0xfffffff5 < *0x43e578;\n        *0x43e578 = *0x43e578 + 10;\n        *0x43e57c = *0x43e57c + bVar8;\n        fcn.0040ad04();\n        *(*0x43e5a8 + 0x70) = *(*0x43e5a8 + 0x70) & 0xfffffffe;\n        uVar7 = 0;\n        uVar5 = in_stack_ffffffb8;\n        do {\n            bVar8 = *0x44e5c0 != 0;\n            *0x44e5c0 = *0x44e5c0 + -1;\n            *0x44e5c4 = *0x44e5c4 + -1 + bVar8;\n            if (*0x44e5c4 < 0) {\n                uVar3 = fcn.0040b284();\n            }\n            else {\n                uVar3 = **0x44e5b8;\n                *0x44e5b8 = *0x44e5b8 + 1;\n            }\n            (&stack0xffffffcc)[uVar7] = uVar3;\n            uVar7 = uVar7 + 1;\n        } while (uVar7 < 10);\n        *(*0x43e5a8 + 0x70) = *(*0x43e5a8 + 0x70) | 1;\n        iVar4 = fcn.00417282(&stack0xffffffcc, &stack0xffffffc0, 10);\n        if (iVar4 != 0) goto code_r0x0040a669;\n        if ((*0x44f75d == '\\0') || (*0x44f75e != '\\0')) goto code_r0x0040a64f;\ncode_r0x0040a65e:\n        if (*0x461ef1 != '\\0') goto code_r0x0040a6a9;\n    }\n    if ((unaff_EDI >> 0x10 != '\\0') && (((uVar5 != 0 || (*0x43e594 != 0)) || (*0x43e590 != 0)))) {\n        fcn.00402509();\n    }\n    if (*0x461ef1 == '\\0') {\n        fcn.0040ac2d();\n    }\ncode_r0x0040a6e6:\n    if (unaff_EDI >> 8 != '\\0') {\n        fcn.0040272f(0x44e6c4);\n    }\n    fcn.0040b4fb();\n    return uVar5;\n}\n",
        "token_count": 2547
    },
    "0040a704": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040a704(int32_t param_1, uint32_t param_2)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t unaff_ESI;\n    uint *puVar8;\n    \n    if ((param_2 != 0) && (param_1 != 0)) {\n        for (; 3 < param_2; param_2 = param_2 + (-4 - uVar4)) {\n            uVar3 = fcn.0040b049(param_1);\n            uVar3 = uVar3 & 0xffff;\n            uVar4 = fcn.0040b049();\n            uVar4 = uVar4 & 0xffff;\n            if (param_2 - 4 < uVar4) {\n                return 0;\n            }\n            if (uVar3 == 10) {\n                if (0x1f < uVar4) {\n                    iVar1 = fcn.0040b049(param_1 + 8);\n                    uVar3 = unaff_ESI;\n                    iVar2 = fcn.0040b049(param_1 + 10);\n                    unaff_ESI = uVar3;\n                    if (iVar1 == 1) {\n                        if (iVar2 == 0x18) {\n                            uVar5 = fcn.0040b024(param_1 + 0xc);\n                            uVar6 = fcn.0040b024(param_1 + 0x10);\n                            fcn.0040737e(uVar5, uVar6);\n                            uVar5 = fcn.0040b024(param_1 + 0x14);\n                            uVar6 = fcn.0040b024(param_1 + 0x18);\n                            fcn.0040737e(uVar5, uVar6);\n                            uVar5 = fcn.0040b024(param_1 + 0x1c);\n                            uVar6 = fcn.0040b024(param_1 + 0x20);\n                            fcn.0040737e(uVar5, uVar6);\n                            return 1;\n                        }\n                        goto code_r0x0040a775;\n                    }\n                }\n            }\n            else {\ncode_r0x0040a775:\n                if ((uVar3 == 0x5455) && (uVar4 != 0)) {\n                    uVar7 = *(param_1 + 4);\n                    uVar3 = uVar4 - 1;\n                    puVar8 = param_1 + 5;\n                    if (((*(param_1 + 4) & 1) != 0) && (3 < uVar3)) {\n                        fcn.00407352(*puVar8, 0);\n                        uVar7 = param_1 + 2U >> 0x18;\n                        uVar3 = uVar4 - 5;\n                        puVar8 = param_1 + 9;\n                    }\n                    if (((uVar7 & 2) != 0) && (3 < uVar3)) {\n                        fcn.00407352(*puVar8, 0);\n                        uVar7 = param_1 + 2U >> 0x18;\n                        uVar3 = uVar3 - 4;\n                        puVar8 = puVar8 + 1;\n                    }\n                    if (((uVar7 & 4) != 0) && (3 < uVar3)) {\n                        fcn.00407352(*puVar8, 0);\n                    }\n                    return 1;\n                }\n            }\n            param_1 = param_1 + 4 + uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 830
    },
    "0040a872": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040a872(int32_t param_1, uint32_t param_2)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t unaff_retaddr;\n    \n    if ((param_2 != 0) && (iVar4 = param_1,  uVar5 = param_2,  param_1 != 0)) {\n        for (; 3 < uVar5; uVar5 = uVar5 + (-4 - uVar2)) {\n            iVar1 = fcn.0040b049(iVar4);\n            uVar2 = fcn.0040b049(iVar4 + 2);\n            uVar2 = uVar2 & 0xffff;\n            if (uVar5 - 4 < uVar2) {\n                return 0;\n            }\n            if ((((iVar1 == 0x7075) && (5 < uVar2)) && (*(iVar4 + 4) == '\\x01')) &&\n               (iVar3 = fcn.0040b024(iVar4 + 5),  unaff_retaddr == iVar3)) {\n                uVar5 = uVar2 - 5;\n                if (param_2 - 1 <= uVar2 - 5) {\n                    uVar5 = param_2 - 1;\n                }\n                fcn.0041cb90(param_1, iVar4 + 9, uVar5);\n                *(uVar5 + param_1) = 0;\n                return 1;\n            }\n            iVar4 = iVar4 + 4 + uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 377
    },
    "0040a9ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040a9ef(char *param_1)\n\n{\n    uint uVar1;\n    \n    if ((((*param_1 == 'P') && (param_1[1] == 'K')) && (param_1[2] == '\\x01')) && (param_1[3] == '\\x02')) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "0040ac2d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ac2d(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    \n    if (*0x44e6b0 != NULL) {\n        fcn.004023a2(-(*0x462fc0 != 0) & 0x44f6c8, -(*0x462fc4 != 0) & 0x44f6d8, -(*0x462fc8 != 0) & 0x44f6d0);\n        pcVar1 = *(**0x44e6b0 + 8);\n        (**0x42922c)();\n        (*pcVar1)();\n        fcn.0040239f(-(*0x462fc0 != 0) & 0x44f6c8, -(*0x462fc8 != 0) & 0x44f6d0);\n        if (*0x44e6b0 != NULL) {\n            pcVar1 = ***0x44e6b0;\n            (**0x42922c)(1);\n            (*pcVar1)();\n        }\n    }\n    *0x44e6b0 = NULL;\n    uVar2 = *(*0x43e5a8 + 0x3c);\n    if (*0x461e60 != '\\0') {\n        uVar2 = uVar2 & 0xffffffdf;\n    }\n    if (*0x461e9c == '\\0') {\n        fcn.00402a4b(0x44e6c4, uVar2 & 0x7f);\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "0040ad91": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.0040ad91(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    bool bVar6;\n    uint uStack2084;\n    uchar *puStack2080;\n    uint32_t uStack2076;\n    uchar *puStack2072;\n    uint32_t uStack2068;\n    uchar auStack2048 [2040];\n    uchar auStack8 [3];\n    int32_t var_1h;\n    \n    bVar6 = false;\n    if (param_1 == 0) {\n        return false;\n    }\n    if (param_2 != 0) {\n        if (param_2 != 2) {\n            if (param_2 != 3) {\n                return false;\n            }\n            if (*0x44e608 != 0) {\n                uStack2068 = *0x44e608;\n                puStack2072 = 0x40addd;\n                fcn.0041a299();\n            }\n            uStack2068 = param_1;\n            puStack2072 = 0x40ade4;\n            *0x44e608 = fcn.0041c47d();\n            if (*0x44e608 != 0) {\n                uStack2068 = param_1;\n                uStack2076 = 0x40ae16;\n                puStack2072 = *0x44e608;\n                uVar2 = fcn.0040b19c();\n                if (uVar2 == 0) {\n                    return 0x33;\n                }\n                if (uVar2 != param_1) {\n                    return 2;\n                }\n                return false;\n            }\n            uVar2 = *0x44e5b8 - *0x44e5b4;\n            uVar3 = (uVar2 - *0x44e600) + param_1;\n            iVar4 = (((uVar2 >> 0x1f) - *0x44e604) - (uVar2 < *0x44e600)) + CARRY4(uVar2 - *0x44e600, param_1);\n            goto code_r0x0040af1c;\n        }\n        uVar5 = 0;\n        uVar2 = param_1;\n        if (0x7ff < param_1) {\n            uVar5 = param_1 - 0x7ff;\n            uVar2 = 0x7ff;\n        }\n        bVar6 = 0x7ff < param_1;\n        puStack2072 = &stack0xfffff800;\n        *0x44f6c4 = 0;\n        uStack2076 = 0x40ae56;\n        uStack2068 = uVar2;\n        iVar4 = fcn.0040b19c();\n        if (iVar4 == 0) {\n            return 0x33;\n        }\n        puStack2080 = &stack0xfffff7f8;\n        uStack2084 = 0xffffffff;\n        uStack2076 = uVar2;\n        *0x44f6c4 = fcn.004015fe();\n        (&stack0xfffff7ec)[uVar2] = 0;\n        *0x44f6c4 = ~*0x44f6c4;\n        if ((*_auStack8 & 0x800) == 0) {\n            if ((stack0xfffffffc != 0) && (cVar1 = fcn.0040fa3a(&stack0xfffff7ec, stack0xfffffffc),  cVar1 != '\\0')) {\n                *_auStack8 = *_auStack8 | 0x800;\n            }\n            if ((*_auStack8 & 0x800) != 0) goto code_r0x0040aeae;\n            cVar1 = fcn.0040fa5e(*(*0x43e5a8 + 0x34), *0x44e638);\n            fcn.004065db(&stack0xfffff7dc, 0x44e6c4, 0x800, cVar1 != '\\0');\n        }\n        else {\ncode_r0x0040aeae:\n            fcn.0040fa88(&stack0xfffff7e4, 0x44e6c4, 0x800);\n        }\n        fcn.004039f9(0x44e6c4, 0x44e6c4, 0x800);\n        if (uVar5 == 0) {\n            return bVar6;\n        }\n        param_1 = uVar5;\n    }\n    uVar2 = *0x44e5b8 - *0x44e5b4;\n    uVar3 = (uVar2 - *0x44e600) + param_1;\n    iVar4 = (((uVar2 >> 0x1f) - *0x44e604) - (uVar2 < *0x44e600)) + CARRY4(uVar2 - *0x44e600, param_1);\ncode_r0x0040af1c:\n    fcn.0040b3dc(uVar3 + *0x44e5f8, iVar4 + *0x44e5fc + CARRY4(uVar3, *0x44e5f8));\n    return bVar6;\n}\n",
        "token_count": 1209
    },
    "0040af3e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040af3e(uint param_1, uint32_t param_2)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    \n    if ((*0x43e594 == 0) && (*0x43e590 <= param_2)) {\n        param_2 = *0x43e590;\n    }\n    bVar1 = *0x43e590 < param_2;\n    *0x43e590 = *0x43e590 - param_2;\n    *0x43e594 = *0x43e594 - bVar1;\n    uVar2 = param_2;\n    *0x44e5b0 = fcn.004015fe(*0x44e5b0, param_1, param_2);\n    if ((*0x461ef1 == '\\0') && (param_2 != 0)) {\n        fcn.0040251a(uVar2, param_2);\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0040b284": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0040b284(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    if (*0x44e6a0 != 0) {\n        return 0xffffffff;\n    }\n    if ((*0x43e57c < 1) && ((*0x43e57c < 0 || (*0x43e578 == 0)))) {\n        bVar6 = *0x43e578 != 0;\n        *0x43e578 = *0x43e578 + -1;\n        *0x43e57c = *0x43e57c + -1 + bVar6;\n        *0x44e5c0 = 0;\n        *0x44e5c4 = 0;\n        return 0xffffffff;\n    }\n    if ((*0x44e5c4 < 1) && ((*0x44e5c4 < 0 || (*0x44e5c0 == 0)))) {\n        *0x44e5c0 = fcn.0040b5b3(*0x44e5b4, 0x2000);\n        *0x44e5c4 = *0x44e5c0 >> 0x1f;\n        if ((*0x44e5c0 | *0x44e5c4) != 0) {\n            if ((*0x44e5c0 & *0x44e5c4) != 0xffffffff) {\n                bVar6 = 0xffffdfff < *0x44e5f8;\n                *0x44e5f8 = *0x44e5f8 + 0x2000;\n                *0x44e5fc = *0x44e5fc + bVar6;\n                *0x44e5b8 = *0x44e5b4;\n                fcn.0040ad04();\n                goto code_r0x0040b33a;\n            }\n            fcn.0040196a(0x46500a);\n        }\n        *0x44e5c0 = 0;\n        uVar3 = 0xffffffff;\n        *0x44e5c4 = 0;\n    }\n    else {\ncode_r0x0040b33a:\n        if ((*(*0x43e5a8 + 0x70) & 1) != 0) {\n            if (*0x44f75d == '\\0') {\n                uVar2 = *0x44e5c0 | *0x44e5c4;\n                puVar4 = *0x44e5b8;\n                uVar3 = *0x44e5c0;\n                uVar5 = *0x44e5c4;\n                while (uVar2 != 0) {\n                    bVar6 = uVar3 != 0;\n                    uVar3 = uVar3 - 1;\n                    uVar5 = (uVar5 - 1) + bVar6;\n                    uVar1 = fcn.0040e8cf();\n                    *puVar4 = *puVar4 ^ uVar1;\n                    fcn.0040e9e0();\n                    puVar4 = puVar4 + 1;\n                    uVar2 = uVar3 | uVar5;\n                }\n            }\n            else if ((*0x44e5c0 | *0x44e5c4) != 0) {\n                fcn.0040eaee(0x44f768, *0x44e5b8, *0x44e5c0);\n            }\n        }\n        bVar6 = *0x44e5c0 != 0;\n        *0x44e5c0 = *0x44e5c0 - 1;\n        *0x44e5c4 = (*0x44e5c4 - 1) + bVar6;\n        uVar3 = **0x44e5b8;\n        *0x44e5b8 = *0x44e5b8 + 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 938
    },
    "0040b5b3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040b5b3(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    char16_t *arg_ch;\n    int32_t iVar4;\n    bool bVar5;\n    uint32_t in_stack_00000fec;\n    int32_t in_stack_00000ff0;\n    int32_t in_stack_00001024;\n    uint in_stack_0000104c;\n    int32_t in_stack_00001050;\n    \n    fcn.004154b0();\n    pcVar1 = *(**0x44e5d8 + 0xc);\n    (**0x42922c)(in_stack_0000104c, in_stack_00001050);\n    iVar3 = (*pcVar1)();\n    if ((((*0x44f754 != '\\0') && (iVar3 != in_stack_00001050)) && (iVar3 != -1)) &&\n       ((*0x44f758 != 0xffffffff && (*0x44f758 < *0x44e670)))) {\n        fcn.00401b85();\n        cVar2 = fcn.00402ae7(0x46500a, &stack0xfffffff8, 0);\n        if (cVar2 != '\\0') {\n            bVar5 = CARRY4(*0x44e5f0, in_stack_00000fec);\n            *0x44e5f0 = *0x44e5f0 + in_stack_00000fec;\n            *0x44e5f4 = *0x44e5f4 + in_stack_00000ff0 + bVar5;\n        }\n        *0x44f758 = *0x44f758 + 1;\n        if (*0x44f758 == *0x44e670) {\n            if (*0x46500a != 0) {\n                cVar2 = fcn.00408a71(0x46500a);\n                arg_ch = L\"zipx\";\n                if (cVar2 == '\\0') {\n                    arg_ch = 0x429f7c;\n                }\n                fcn.0040398f(0x46500a, arg_ch, 0x800);\n            }\n        }\n        else if (*0x46500a != 0) {\n            fcn.00408aab(0x46500a, 0x800, *0x44f758);\n        }\n        if (*0x44e5d8 != NULL) {\n            pcVar1 = ***0x44e5d8;\n            (**0x42922c)(1);\n            (*pcVar1)();\n        }\n        *0x44e5d8 = NULL;\n        iVar4 = fcn.0040b05e();\n        if (iVar4 == 0) {\n            fcn.00407928(*0x461ef1 == '\\0', 0x46500a);\n            iVar4 = **0x44e5d8;\n            (**0x42922c)(in_stack_00001024 + iVar3, in_stack_00001050 - iVar3);\n            iVar4 = (**(iVar4 + 0xc))();\n            if (iVar4 < 0) {\n                iVar3 = -1;\n            }\n            else {\n                iVar3 = iVar3 + iVar4;\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 740
    },
    "0040b739": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040b739(uint param_1)\n\n{\n    uint uVar1;\n    \n    if (*0x44e6a0 == 0) {\n        fcn.0040af3e(0x43e5ac, param_1);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.0040aa7f();\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "0040bc14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040bc14(int32_t param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    bool bVar6;\n    int64_t iVar7;\n    uint unaff_retaddr;\n    uint in_stack_00000014;\n    int32_t in_stack_00000018;\n    int32_t in_stack_fffffffc;\n    \n    *0x44f73c = 0;\n    *0x44f744 = 0;\n    *0x44f740 = 0;\n    uVar4 = *0x43e578;\n    iVar5 = *0x43e57c;\n    if (param_1 == 0) {\n        *0x44f700 = *0x44f720;\n        *0x44f708 = *0x44f728;\n        *0x44f704 = *0x44f724;\n        *0x44f730 = 0x429ffc;\n        *0x44f734 = 0x42a05c;\n        *0x44f738 = 0x42a0e0;\n        *0x44f70c = *0x44f72c;\n    }\n    else {\n        *0x44f700 = *0x44f710;\n        *0x44f708 = *0x44f718;\n        *0x44f704 = *0x44f714;\n        *0x44f730 = 0x429fbc;\n        *0x44f734 = 0x42a03c;\n        *0x44f738 = 0x42a0c0;\n        *0x44f70c = *0x44f71c;\n    }\n    while( true ) {\n        iVar3 = fcn.0040bdb8(&stack0xfffffffc);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        cVar2 = fcn.0040791f();\n        if (cVar2 != '\\0') break;\n        bVar6 = uVar4 < *0x43e578;\n        iVar3 = uVar4 - *0x43e578;\n        iVar5 = iVar5 - *0x43e57c;\n        pcVar1 = *(**0x44e5d8 + 0x14);\n        (**0x42922c)(*0x44e5e8, *0x44e5ec);\n        iVar7 = (*pcVar1)();\n        iVar7 = iVar7 + CONCAT44(*0x44e5f4, *0x44e5f0);\n        uVar4 = iVar7;\n        fcn.004078dc(iVar3, iVar5 - bVar6, in_stack_00000014, in_stack_00000018, uVar4, iVar7 >> 0x20, in_stack_fffffffc\n                     , unaff_retaddr);\n        iVar5 = in_stack_00000018;\n        if (in_stack_fffffffc != 0) {\n            if (param_1 == 0) {\n                *0x44f720 = *0x44f700;\n                *0x44f728 = *0x44f708;\n                *0x44f724 = *0x44f704;\n                *0x44f72c = *0x44f70c;\n            }\n            else {\n                *0x44f710 = *0x44f700;\n                *0x44f718 = *0x44f708;\n                *0x44f714 = *0x44f704;\n                *0x44f71c = *0x44f70c;\n            }\n            iVar5 = fcn.0040b739(*0x44f73c);\n            return iVar5;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 856
    },
    "0040bee8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040bee8(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int16_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint8_t *puVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint32_t uStack24;\n    \n    uStack36 = *0x44f740;\n    iVar4 = 0;\n    uStack32 = *0x44f73c;\n    uVar5 = *0x44f740;\n    uVar6 = *0x44f73c;\n    iVar10 = *0x44f744;\n    uVar8 = uStack32;\ncode_r0x0040bf2b:\n    do {\n        uStack32 = uVar8;\n        iVar4 = iVar4 + 1;\n        if (iVar4 == 0) {\n            fcn.0040791a();\n            cVar3 = fcn.0040791f();\n            if (cVar3 != '\\0') {\n                *0x44f73c = uVar6;\n                *0x44f740 = uVar5;\n                *0x44f744 = iVar10;\n                return 0;\n            }\n        }\n        for (; iVar10 < param_3; iVar10 = iVar10 + 8) {\n            bVar13 = *0x44e5c0 != 0;\n            *0x44e5c0 = *0x44e5c0 + -1;\n            *0x44e5c4 = *0x44e5c4 + -1 + bVar13;\n            if (*0x44e5c4 < 0) {\n                uVar5 = fcn.0040b284();\n            }\n            else {\n                uVar5 = **0x44e5b8;\n                *0x44e5b8 = *0x44e5b8 + 1;\n            }\n            if (uVar5 == 0xffffffff) {\n                if (iVar10 < 0) {\n                    return 1;\n                }\n                break;\n            }\n            uStack36 = uStack36 | uVar5 << (iVar10 & 0x1f);\n        }\n        puVar1 = param_1 + ((1 << (param_3 & 0x1f)) - 1U & uStack36) * 8;\n        uVar5 = uStack36 >> (puVar1[1] & 0x1f);\n        iVar10 = iVar10 - puVar1[1];\n        uVar2 = *puVar1;\n        puVar11 = *0x44e5b8;\n        iVar7 = *0x44e5c0;\n        iVar9 = *0x44e5c4;\n        while (uVar8 = uVar2,  uStack36 = uVar5,  uVar8 != 0x20) {\n            if (uVar8 < 0x1f) goto code_r0x0040c156;\n            if (uVar8 == 0x1f) {\n                *0x44f73c = uStack32;\n                *0x44f740 = uVar5;\n                *0x44f744 = iVar10;\n                return 0;\n            }\n            if (uVar8 == 99) {\n                return 1;\n            }\n            for (; iVar10 < (uVar8 & 0x1f); iVar10 = iVar10 + 8) {\n                *0x44e5c0 = iVar7 + -1;\n                *0x44e5c4 = iVar9 + -1 + (iVar7 != 0);\n                if (*0x44e5c4 < 0) {\n                    uVar6 = fcn.0040b284();\n                }\n                else {\n                    uVar6 = *puVar11;\n                    *0x44e5b8 = puVar11 + 1;\n                }\n                iVar7 = *0x44e5c0;\n                iVar9 = *0x44e5c4;\n                puVar11 = *0x44e5b8;\n                if (uVar6 == 0xffffffff) {\n                    if (iVar10 < 0) {\n                        return 1;\n                    }\n                    break;\n                }\n                uVar5 = uVar5 | uVar6 << (iVar10 & 0x1f);\n            }\n            puVar1 = *(puVar1 + 4) + ((1 << (uVar8 & 0x1f)) - 1U & uVar5) * 8;\n            iVar10 = iVar10 - puVar1[1];\n            uVar5 = uVar5 >> (puVar1[1] & 0x1f);\n            uVar2 = *puVar1;\n        }\n        *(uStack32 + 0x43e5ac) = puVar1[4];\n        uVar8 = uStack32 + 1;\n        uVar6 = uVar8;\n        if ((uVar8 == 0x10000) && (uVar6 = fcn.0040b739(0x10000),  uStack36 = uVar6,  uVar6 != 0)) {\n            return 0;\n        }\n    } while( true );\ncode_r0x0040c156:\n    if (uVar8 <= iVar10) goto code_r0x0040c164;\n    *0x44e5c0 = iVar7 + -1;\n    *0x44e5c4 = iVar9 + -1 + (iVar7 != 0);\n    if (*0x44e5c4 < 0) {\n        uVar5 = fcn.0040b284();\n    }\n    else {\n        uVar5 = *puVar11;\n        *0x44e5b8 = puVar11 + 1;\n    }\n    iVar7 = *0x44e5c0;\n    iVar9 = *0x44e5c4;\n    puVar11 = *0x44e5b8;\n    if (uVar5 == 0xffffffff) {\n        if (iVar10 < 0) {\n            return 1;\n        }\n        goto code_r0x0040c164;\n    }\n    uStack36 = uStack36 | uVar5 << (iVar10 & 0x1f);\n    iVar10 = iVar10 + 8;\n    goto code_r0x0040c156;\ncode_r0x0040c164:\n    uVar5 = uStack36 >> (uVar2 & 0x1f);\n    uStack24 = ((1 << (uVar2 & 0x1f)) - 1U & uStack36) + *(puVar1 + 4);\n    for (iVar10 = iVar10 - uVar8; iVar10 < param_4; iVar10 = iVar10 + 8) {\n        *0x44e5c0 = iVar7 + -1;\n        *0x44e5c4 = iVar9 + -1 + (iVar7 != 0);\n        if (*0x44e5c4 < 0) {\n            uVar8 = fcn.0040b284();\n        }\n        else {\n            uVar8 = *puVar11;\n            *0x44e5b8 = puVar11 + 1;\n        }\n        iVar7 = *0x44e5c0;\n        iVar9 = *0x44e5c4;\n        puVar11 = *0x44e5b8;\n        if (uVar8 == 0xffffffff) {\n            if (iVar10 < 0) {\n                return 1;\n            }\n            break;\n        }\n        uVar5 = uVar5 | uVar8 << (iVar10 & 0x1f);\n    }\n    puVar1 = param_2 + ((1 << (param_4 & 0x1f)) - 1U & uVar5) * 8;\n    uStack36 = uVar5 >> (puVar1[1] & 0x1f);\n    iVar10 = iVar10 - puVar1[1];\n    uVar2 = *puVar1;\n    while (uVar8 = uVar2,  0x1f < uVar8) {\n        if (uVar8 == 99) {\n            return 1;\n        }\n        for (; iVar10 < (uVar8 & 0x1f); iVar10 = iVar10 + 8) {\n            *0x44e5c0 = iVar7 + -1;\n            *0x44e5c4 = iVar9 + -1 + (iVar7 != 0);\n            if (*0x44e5c4 < 0) {\n                uVar5 = fcn.0040b284();\n            }\n            else {\n                uVar5 = *puVar11;\n                *0x44e5b8 = puVar11 + 1;\n            }\n            iVar7 = *0x44e5c0;\n            iVar9 = *0x44e5c4;\n            puVar11 = *0x44e5b8;\n            if (uVar5 == 0xffffffff) {\n                if (iVar10 < 0) {\n                    return 1;\n                }\n                break;\n            }\n            uStack36 = uStack36 | uVar5 << (iVar10 & 0x1f);\n        }\n        puVar1 = *(puVar1 + 4) + ((1 << (uVar8 & 0x1f)) - 1U & uStack36) * 8;\n        iVar10 = iVar10 - puVar1[1];\n        uStack36 = uStack36 >> (puVar1[1] & 0x1f);\n        uVar2 = *puVar1;\n    }\n    for (; iVar10 < uVar8; iVar10 = iVar10 + 8) {\n        *0x44e5c0 = iVar7 + -1;\n        *0x44e5c4 = iVar9 + -1 + (iVar7 != 0);\n        if (*0x44e5c4 < 0) {\n            uVar5 = fcn.0040b284();\n        }\n        else {\n            uVar5 = *puVar11;\n            *0x44e5b8 = puVar11 + 1;\n        }\n        if (uVar5 == 0xffffffff) {\n            if (iVar10 < 0) {\n                return 1;\n            }\n            break;\n        }\n        uStack36 = uStack36 | uVar5 << (iVar10 & 0x1f);\n        iVar7 = *0x44e5c0;\n        iVar9 = *0x44e5c4;\n        puVar11 = *0x44e5b8;\n    }\n    uVar5 = uStack36 >> (uVar2 & 0x1f);\n    uVar12 = (uStack32 - ((1 << (uVar2 & 0x1f)) - 1U & uStack36)) - *(puVar1 + 4);\n    iVar10 = iVar10 - uVar8;\n    uStack36 = uVar5;\n    do {\n        uVar12 = uVar12 & 0xffff;\n        uVar8 = uVar12;\n        if (uVar12 <= uStack32) {\n            uVar8 = uStack32;\n        }\n        uVar6 = 0x10000 - uVar8;\n        if (uStack24 < 0x10000 - uVar8) {\n            uVar6 = uStack24;\n        }\n        uStack24 = uStack24 - uVar6;\n        uVar8 = uStack32;\n        do {\n            *(uVar8 + 0x43e5ac) = *(uVar12 + 0x43e5ac);\n            uVar8 = uVar8 + 1;\n            uVar12 = uVar12 + 1;\n            uVar6 = uVar6 - 1;\n        } while (uVar6 != 0);\n        uStack32 = uVar8;\n        if ((uVar8 == 0x10000) &&\n           (uStack32 = fcn.0040b739(),  uStack36 = uStack32,  uStack24 = uStack32,  uStack32 != 0)) {\n            return 0;\n        }\n        uVar6 = uStack32;\n    } while (uStack24 != 0);\n    goto code_r0x0040bf2b;\n}\n",
        "token_count": 2834
    },
    "0040c3ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040c3ea(void)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBP;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t unaff_ESI;\n    uint32_t uVar10;\n    uchar *puVar11;\n    uint32_t *puVar12;\n    uint *puVar13;\n    bool bVar14;\n    uint32_t in_stack_fffffa74;\n    uint uVar15;\n    uint uStack1364;\n    int32_t iStack1360;\n    uint uStack1356;\n    uchar *puStack1352;\n    uchar *puStack1348;\n    uchar *puStack1344;\n    uint32_t uStack1324;\n    uint32_t uStack1320;\n    uint32_t uStack1316;\n    uint32_t uStack1312;\n    uint32_t uStack1308;\n    uint uStack1304;\n    uint32_t uStack1300;\n    uint uStack1296;\n    uint32_t uStack1292;\n    uint uStack1288;\n    uint32_t auStack1280 [320];\n    \n    puStack1352 = &stack0xfffffb00;\n    puStack1344 = 0x500;\n    puStack1348 = NULL;\n    uStack1296 = 0;\n    uStack1288 = 0;\n    uStack1356 = 0x40c40e;\n    fcn.00416480();\n    uVar7 = *0x44f740;\n    for (iVar8 = *0x44f744; iVar8 < 5; iVar8 = iVar8 + 8) {\n        bVar14 = *0x44e5c0 != 0;\n        *0x44e5c0 = *0x44e5c0 + -1;\n        *0x44e5c4 = *0x44e5c4 + -1 + bVar14;\n        if (*0x44e5c4 < 0) {\n            puStack1344 = 0x40c45c;\n            uStack1320 = fcn.0040b284();\n        }\n        else {\n            uStack1320 = **0x44e5b8;\n            *0x44e5b8 = *0x44e5b8 + 1;\n        }\n        if (uStack1320 == 0xffffffff) {\n            if (iVar8 < 0) {\n                return 1;\n            }\n            break;\n        }\n        uStack1320 = uStack1320 << (iVar8 & 0x1f);\n        uVar7 = uVar7 | uStack1320;\n    }\n    uVar6 = uVar7 >> 5;\n    uStack1308 = (uVar7 & 0x1f) + 0x101;\n    for (iVar8 = iVar8 + -5; iVar8 < 5; iVar8 = iVar8 + 8) {\n        bVar14 = *0x44e5c0 != 0;\n        *0x44e5c0 = *0x44e5c0 + -1;\n        *0x44e5c4 = *0x44e5c4 + -1 + bVar14;\n        if (*0x44e5c4 < 0) {\n            puStack1344 = 0x40c4d7;\n            uStack1320 = fcn.0040b284();\n        }\n        else {\n            uStack1320 = **0x44e5b8;\n            *0x44e5b8 = *0x44e5b8 + 1;\n        }\n        if (uStack1320 == 0xffffffff) {\n            if (iVar8 < 0) {\n                return 1;\n            }\n            break;\n        }\n        uStack1320 = uStack1320 << (iVar8 & 0x1f);\n        uVar6 = uVar6 | uStack1320;\n    }\n    uVar7 = uVar6 >> 5;\n    uStack1292 = (uVar6 & 0x1f) + 1;\n    for (iVar8 = iVar8 + -5; iVar8 < 4; iVar8 = iVar8 + 8) {\n        bVar14 = *0x44e5c0 != 0;\n        *0x44e5c0 = *0x44e5c0 + -1;\n        *0x44e5c4 = *0x44e5c4 + -1 + bVar14;\n        if (*0x44e5c4 < 0) {\n            puStack1344 = 0x40c550;\n            uStack1320 = fcn.0040b284();\n        }\n        else {\n            uStack1320 = **0x44e5b8;\n            *0x44e5b8 = *0x44e5b8 + 1;\n        }\n        if (uStack1320 == 0xffffffff) {\n            if (iVar8 < 0) {\n                return 1;\n            }\n            break;\n        }\n        uStack1320 = uStack1320 << (iVar8 & 0x1f);\n        uVar7 = uVar7 | uStack1320;\n    }\n    iVar8 = iVar8 + -4;\n    uStack1324 = uVar7 >> 4;\n    uStack1316 = (uVar7 & 0xf) + 4;\n    uStack1320 = 1;\n    if (0x120 < uStack1308) {\n        return 1;\n    }\n    if (0x20 < uStack1292) {\n        return 1;\n    }\n    uVar6 = 0;\n    uStack1300 = 0;\n    puVar5 = *0x44e5b8;\n    iVar9 = *0x44e5c0;\n    uVar7 = uStack1324;\n    if (uStack1316 == 0) goto code_r0x0040c671;\njoined_r0x0040c5d3:\n    do {\n        if (iVar8 < 3) {\n            *0x44e5c0 = iVar9 + -1;\n            *0x44e5c4 = *0x44e5c4 + -1 + (iVar9 != 0);\n            if (*0x44e5c4 < 0) {\n                puStack1344 = 0x40c606;\n                uStack1324 = fcn.0040b284();\n            }\n            else {\n                uStack1324 = *puVar5;\n                *0x44e5b8 = puVar5 + 1;\n            }\n            puVar5 = *0x44e5b8;\n            iVar9 = *0x44e5c0;\n            if (uStack1324 != 0xffffffff) {\n                uStack1324 = uStack1324 << (iVar8 & 0x1f);\n                iVar8 = iVar8 + 8;\n                uVar7 = uVar7 | uStack1324;\n                goto joined_r0x0040c5d3;\n            }\n            if (iVar8 < 0) {\n                return 1;\n            }\n        }\n        uStack1324 = uVar7 >> 3;\n        iVar8 = iVar8 + -3;\n        *(&stack0xfffffb00 + *(uStack1300 * 4 + 0x42a100) * 4) = uVar7 & 7;\n        uVar6 = uStack1300 + 1;\n        uStack1300 = uVar6;\n        uVar7 = uStack1324;\n    } while (uVar6 < uStack1316);\n    for (; uVar6 < 0x13; uVar6 = uVar6 + 1) {\ncode_r0x0040c671:\n        *(&stack0xfffffb00 + *(uVar6 * 4 + 0x42a100) * 4) = 0;\n    }\n    puStack1344 = &stack0xfffffae8;\n    uStack1304 = 7;\n    puStack1348 = &stack0xfffffaf0;\n    puStack1352 = NULL;\n    uStack1356 = 0;\n    iStack1360 = 0x13;\n    uStack1364 = 0x13;\n    uVar6 = fcn.0040b75c(&stack0xfffffb00);\n    uVar7 = uStack1324;\n    if (unaff_EBP == 0) {\n        uVar6 = 1;\njoined_r0x0040c6c0:\n        while (uVar7 != 0) {\n            uVar3 = *(uVar7 - 4);\n            fcn.0041a299(uVar7 - 8);\n            uVar7 = uVar3;\n        }\n        return uVar6;\n    }\n    if (uVar6 != 0) {\n        if (uVar6 != 1) {\n            return uVar6;\n        }\n        goto joined_r0x0040c6c0;\n    }\n    uVar3 = unaff_ESI + uStack1320;\n    uStack1312 = (1 << (unaff_EBP & 0x1f)) - 1;\n    puStack1344 = NULL;\n    puVar5 = *0x44e5b8;\n    uVar6 = 0;\n    do {\n        puVar11 = NULL;\n        iVar9 = iVar8;\n        uVar10 = puStack1352;\n        if (iVar8 < unaff_EBP) {\n            do {\n                bVar14 = *0x44e5c0 != 0;\n                *0x44e5c0 = *0x44e5c0 + -1;\n                *0x44e5c4 = *0x44e5c4 + -1 + bVar14;\n                if (*0x44e5c4 < 0) {\n                    puStack1352 = fcn.0040b284();\n                }\n                else {\n                    puStack1352 = *puVar5;\n                    *0x44e5b8 = puVar5 + 1;\n                }\n                puVar5 = *0x44e5b8;\n                if (puStack1352 == 0xffffffff) {\n                    iVar9 = iVar8;\n                    if (iVar8 < 0) goto joined_r0x0040cb2b;\n                    break;\n                }\n                iVar9 = iVar8 + 8;\n                puStack1352 = puStack1352 << (iVar8 & 0x1f);\n                uVar10 = uVar10 | puStack1352;\n                iVar8 = iVar9;\n            } while (iVar9 < unaff_EBP);\n        }\n        uVar1 = *(uVar7 + 1 + (uStack1312 & uVar10) * 8);\n        uVar4 = *(uVar7 + 4 + (uStack1312 & uVar10) * 8);\n        iVar8 = iVar9 - uVar1;\n        uVar10 = uVar10 >> (uVar1 & 0x1f);\n        puStack1352 = uVar10;\n        if (uVar4 < 0x10) {\n            *(&stack0xfffffae4 + uVar6 * 4) = uVar4;\n            uVar10 = uVar6 + 1;\n            puStack1344 = uVar4;\n        }\n        else if (uVar4 == 0x10) {\n            for (; iVar8 < 2; iVar8 = iVar8 + 8) {\n                bVar14 = *0x44e5c0 != 0;\n                *0x44e5c0 = *0x44e5c0 + -1;\n                *0x44e5c4 = *0x44e5c4 + -1 + bVar14;\n                if (*0x44e5c4 < 0) {\n                    puStack1352 = fcn.0040b284();\n                }\n                else {\n                    puStack1352 = *puVar5;\n                    *0x44e5b8 = puVar5 + 1;\n                }\n                puVar5 = *0x44e5b8;\n                if (puStack1352 == 0xffffffff) {\n                    if (iVar8 < 0) goto code_r0x0040ca0a;\n                    break;\n                }\n                puStack1352 = puStack1352 << (iVar8 & 0x1f);\n                uVar10 = uVar10 | puStack1352;\n            }\n            puStack1352 = uVar10 >> 2;\n            iVar9 = (uVar10 & 3) + 3;\n            iVar8 = iVar8 + -2;\n            uVar10 = uVar6 + iVar9;\n            if (uVar3 < uVar10) {\n                while (uVar7 != 0) {\n                    uVar6 = *(uVar7 - 4);\n                    fcn.0041a299(uVar7 - 8);\n                    uVar7 = uVar6;\n                }\n                return 1;\n            }\n            puVar12 = &stack0xfffffae4 + uVar6 * 4;\n            for (; iVar9 != 0; iVar9 = iVar9 + -1) {\n                *puVar12 = puStack1344;\n                puVar12 = puVar12 + 1;\n            }\n        }\n        else {\n            if (uVar4 == 0x11) {\n                for (; iVar8 < 3; iVar8 = iVar8 + 8) {\n                    bVar14 = *0x44e5c0 != 0;\n                    *0x44e5c0 = *0x44e5c0 + -1;\n                    *0x44e5c4 = *0x44e5c4 + -1 + bVar14;\n                    if (*0x44e5c4 < 0) {\n                        uVar4 = fcn.0040b284();\n                    }\n                    else {\n                        uVar4 = *puVar5;\n                        *0x44e5b8 = puVar5 + 1;\n                    }\n                    puVar5 = *0x44e5b8;\n                    if (uVar4 == 0xffffffff) {\n                        if (iVar8 < 0) goto code_r0x0040ca0a;\n                        break;\n                    }\n                    uVar10 = uVar10 | uVar4 << (iVar8 & 0x1f);\n                }\n                puStack1352 = uVar10 >> 3;\n                iVar9 = (uVar10 & 7) + 3;\n                iVar8 = iVar8 + -3;\n                uVar10 = uVar6 + iVar9;\n                puStack1344 = uVar10;\n                if (uVar3 < uVar10) {\n                    while (uVar7 != 0) {\n                        uVar6 = *(uVar7 - 4);\n                        fcn.0041a299(uVar7 - 8);\n                        uVar7 = uVar6;\n                    }\n                    return 1;\n                }\n                puVar13 = &stack0xfffffae4 + uVar6 * 4;\n                for (; iVar9 != 0; iVar9 = iVar9 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            else {\n                for (; iVar8 < 7; iVar8 = iVar8 + 8) {\n                    bVar14 = *0x44e5c0 != 0;\n                    *0x44e5c0 = *0x44e5c0 + -1;\n                    *0x44e5c4 = *0x44e5c4 + -1 + bVar14;\n                    if (*0x44e5c4 < 0) {\n                        uVar4 = fcn.0040b284();\n                    }\n                    else {\n                        uVar4 = *puVar5;\n                        *0x44e5b8 = puVar5 + 1;\n                    }\n                    puVar5 = *0x44e5b8;\n                    if (uVar4 == 0xffffffff) {\n                        if (iVar8 < 0) goto code_r0x0040ca0a;\n                        break;\n                    }\n                    uVar10 = uVar10 | uVar4 << (iVar8 & 0x1f);\n                }\n                puStack1352 = uVar10 >> 7;\n                iVar9 = (uVar10 & 0x7f) + 0xb;\n                iVar8 = iVar8 + -7;\n                uVar10 = uVar6 + iVar9;\n                puStack1344 = uVar10;\n                if (uVar3 < uVar10) {\n                    while (uVar7 != 0) {\n                        uVar6 = *(uVar7 - 4);\n                        fcn.0041a299(uVar7 - 8);\n                        uVar7 = uVar6;\n                    }\n                    return 1;\n                }\n                puVar13 = &stack0xfffffae4 + uVar6 * 4;\n                for (; iVar9 != 0; iVar9 = iVar9 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            puStack1344 = NULL;\n        }\n        uVar6 = uVar10;\n    } while (uVar10 < uVar3);\n    while (uVar7 != 0) {\n        uVar6 = *(uVar7 - 4);\n        fcn.0041a299(uVar7 - 8);\n        uVar7 = uVar6;\n    }\n    puVar11 = &stack0xfffffacc;\n    uVar15 = 0x101;\n    *0x44f740 = puStack1352;\n    *0x44f744 = iVar8;\n    uVar3 = unaff_ESI;\n    uVar7 = *0x44f734;\n    uVar10 = fcn.0040b75c(&stack0xfffffae4, unaff_ESI, 0x101, *0x44f730, *0x44f734, &stack0xfffffad4);\n    uVar6 = puStack1352;\n    if (iStack1360 == 0) {\n        uVar10 = 1;\njoined_r0x0040ca65:\n        while (uVar6 != 0) {\n            uVar7 = *(uVar6 - 4);\n            fcn.0041a299(uVar6 - 8);\n            uVar6 = uVar7;\n        }\n        return uVar10;\n    }\n    if (uVar10 != 0) {\n        if (uVar10 != 1) {\n            return uVar10;\n        }\n        goto joined_r0x0040ca65;\n    }\n    uStack1364 = 6;\n    uVar6 = fcn.0040b75c(&stack0xfffffac8 + unaff_ESI * 4, puStack1348, 0, 0x42a080, *0x44f738, &stack0xfffffac0, \n                         &stack0xfffffaac);\n    uVar6 = -(uVar6 != 1) & uVar6;\n    if ((uVar3 == 0) && (0x101 < unaff_ESI)) {\n        uVar6 = 1;\n    }\n    else {\n        if (uVar6 == 0) {\n            in_stack_fffffa74 = fcn.0040bee8(uVar7, puVar11, uVar15, uVar3);\n            goto joined_r0x0040cb2b;\n        }\n        if (uVar6 != 1) goto joined_r0x0040caf5;\n    }\n    while (puVar11 != NULL) {\n        puVar2 = *(puVar11 + -4);\n        fcn.0041a299(puVar11 + -8);\n        puVar11 = puVar2;\n    }\njoined_r0x0040caf5:\n    while (uVar7 != 0) {\n        uVar3 = *(uVar7 - 4);\n        fcn.0041a299(uVar7 - 8);\n        uVar7 = uVar3;\n    }\n    return uVar6;\ncode_r0x0040ca0a:\n    in_stack_fffffa74 = 1;\njoined_r0x0040cb2b:\n    while (uVar7 != 0) {\n        uVar6 = *(uVar7 - 4);\n        fcn.0041a299(uVar7 - 8);\n        uVar7 = uVar6;\n    }\n    while (puVar11 != NULL) {\n        puVar2 = *(puVar11 + -4);\n        fcn.0041a299(puVar11 + -8);\n        puVar11 = puVar2;\n    }\n    return in_stack_fffffa74;\n}\n",
        "token_count": 4667
    },
    "0040cb82": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040cb82(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_480h;\n    uint var_240h;\n    uint var_80h;\n    uint var_20h;\n    \n    if (*0x44f700 == 0) {\n        puVar4 = &var_480h;\n        for (iVar3 = 0x90; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = 8;\n            puVar4 = puVar4 + 1;\n        }\n        puVar4 = &var_240h;\n        for (iVar3 = 0x70; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = 9;\n            puVar4 = puVar4 + 1;\n        }\n        *0x44f708 = 7;\n        puVar4 = &var_80h;\n        for (iVar3 = 0x18; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = 7;\n            puVar4 = puVar4 + 1;\n        }\n        puVar4 = &var_20h;\n        for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = 8;\n            puVar4 = puVar4 + 1;\n        }\n        iVar3 = fcn.0040b75c(&var_480h, 0x120, 0x101, *0x44f730, *0x44f734, 0x44f700, 0x44f708);\n        if (iVar3 != 0) {\n            *0x44f700 = 0;\n            return iVar3;\n        }\n        *0x44f70c = 5;\n        puVar4 = &var_480h;\n        for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = 5;\n            puVar4 = puVar4 + 1;\n        }\n        iVar2 = fcn.0040b75c(&var_480h, 0x20, 0, 0x42a080, *0x44f738, 0x44f704, 0x44f70c);\n        iVar3 = *0x44f700;\n        if (1 < iVar2) {\n            while (iVar3 != 0) {\n                iVar1 = *(iVar3 + -4);\n                fcn.0041a299(iVar3 + -8);\n                iVar3 = iVar1;\n            }\n            *0x44f700 = 0;\n            *0x44f704 = 0;\n            return iVar2;\n        }\n    }\n    iVar3 = fcn.0040bee8(*0x44f700, *0x44f704, *0x44f708, *0x44f70c);\n    return iVar3;\n}\n",
        "token_count": 691
    },
    "0040cca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040cca0(void)\n\n{\n    if (*0x44f700 != 0) {\n        fcn.0040bbf2(*0x44f704);\n        fcn.0040bbf2(*0x44f700);\n        *0x44f700 = 0;\n        *0x44f704 = 0;\n    }\n    return 0;\n}\n",
        "token_count": 87
    },
    "0040d021": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040d021(uint param_1, uint param_2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int16_t unaff_BP;\n    int32_t iVar9;\n    int16_t unaff_DI;\n    bool bVar10;\n    int64_t iVar11;\n    uint uStack104;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    uchar auStack76 [8];\n    uchar auStack68 [4];\n    uchar auStack64 [4];\n    uchar auStack60 [4];\n    uchar auStack56 [56];\n    \n    uStack104 = 0x6064b50;\n    iVar3 = fcn.0040dd79(param_1, param_2, &uStack104, 0x38);\n    iVar1 = CONCAT44(*0x44e694, *0x44e690);\n    if (iVar3 != 2) {\n        uVar4 = *0x44e5b8 - *0x44e5b4;\n        bVar10 = CARRY4(uVar4, *0x44e5f8);\n        iVar9 = uVar4 + *0x44e5f8;\n        iVar3 = (uVar4 >> 0x1f) + *0x44e5fc;\n        iVar5 = fcn.0040b19c();\n        if (iVar5 == 0) {\n            return 0x33;\n        }\n        uVar4 = fcn.0040b024();\n        uStack100 = uVar4 & 0xffff;\n        uVar6 = fcn.0040b024(auStack68);\n        uStack96 = uVar6 & 0xffff;\n        iVar5 = fcn.0040afa1(auStack68);\n        iVar7 = fcn.0040afa1(auStack64);\n        iVar8 = fcn.0040afa1(auStack60);\n        iVar11 = fcn.0040afa1(auStack56);\n        iVar2 = CONCAT44(*0x44e694, *0x44e690);\n        iVar1 = iVar2;\n        if (((((((*0x44e670 == -1) || (*0x44e670 == (uVar4 & 0xffff))) &&\n               ((*0x44e672 == -1 || (*0x44e672 == (uVar6 & 0xffff))))) &&\n              (((*0x44e678 == 0xffff && (*0x44e67c == NULL)) || ((*0x44e678 == auStack68 && (*0x44e67c == auStack76)))))\n              ) && (((*0x44e680 == 0xffff && (*0x44e684 == 0)) || ((*0x44e680 == 0x3c && (*0x44e684 == iVar5)))))) &&\n            (((*0x44e688 == -1 && (*0x44e68c == 0)) || ((*0x44e688 == iVar7 && (*0x44e68c == iVar8)))))) &&\n           (((*0x44e690 == -1 && (*0x44e694 == 0)) || (iVar11 == iVar2)))) {\n            if (*0x44e670 == -1) {\n                *0x44e670 = unaff_DI;\n            }\n            if (*0x44e672 == -1) {\n                *0x44e672 = unaff_BP;\n            }\n            if ((*0x44e678 == 0xffff) && (*0x44e67c == NULL)) {\n                *0x44e678 = auStack68;\n                *0x44e67c = auStack76;\n            }\n            if ((*0x44e680 == 0xffff) && (*0x44e684 == 0)) {\n                *0x44e680 = 0x3c;\n                *0x44e684 = iVar5;\n            }\n            if ((*0x44e688 == -1) && (*0x44e68c == 0)) {\n                *0x44e688 = iVar7;\n                *0x44e68c = iVar8;\n            }\n            iVar1 = CONCAT44(*0x44e694, *0x44e690);\n            if ((*0x44e690 == -1) && (iVar1 = iVar2,  *0x44e694 == 0)) {\n                iVar1 = iVar11;\n            }\n            *0x44f75c = 1;\n            *0x43e568 = iVar9;\n            *0x43e56c = iVar3 + bVar10;\n        }\n    }\n    *0x44e694 = iVar1 >> 0x20;\n    *0x44e690 = iVar1;\n    return 0;\n}\n",
        "token_count": 1095
    },
    "0040d6aa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040d6aa(int32_t param_1, int32_t param_2, uint32_t param_3, char param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    int32_t iVar12;\n    \n    iVar4 = CONCAT44(*0x44e654, *0x44e650);\n    iVar3 = CONCAT44(*0x44e64c, *0x44e648);\n    iVar2 = CONCAT44(*0x44e62c, *0x44e628);\n    iVar1 = CONCAT44(*0x44e624, *0x44e620);\n    iVar11 = CONCAT44(*0x43e584, *0x43e580);\n    iVar10 = CONCAT44(*0x44e66c, *0x44e668);\n    iVar9 = CONCAT44(*0x43e57c, *0x43e578);\n    *0x43e578 = CONCAT44(*0x43e57c, *0x43e578);\n    *0x44e668 = CONCAT44(*0x44e66c, *0x44e668);\n    *0x43e580 = CONCAT44(*0x43e584, *0x43e580);\n    *0x44e620 = CONCAT44(*0x44e624, *0x44e620);\n    *0x44e628 = CONCAT44(*0x44e62c, *0x44e628);\n    *0x44e648 = CONCAT44(*0x44e64c, *0x44e648);\n    *0x44e650 = CONCAT44(*0x44e654, *0x44e650);\n    if (((param_3 != 0) &&\n        (*0x43e578 = CONCAT44(*0x43e57c, *0x43e578),  *0x44e668 = CONCAT44(*0x44e66c, *0x44e668), \n        *0x43e580 = CONCAT44(*0x43e584, *0x43e580),  *0x44e620 = CONCAT44(*0x44e624, *0x44e620), \n        *0x44e628 = CONCAT44(*0x44e62c, *0x44e628),  *0x44e648 = CONCAT44(*0x44e64c, *0x44e648), \n        *0x44e650 = CONCAT44(*0x44e654, *0x44e650),  param_2 != 0)) &&\n       (*0x43e578 = iVar9,  *0x44e668 = iVar10,  *0x43e580 = iVar11,  *0x44e620 = iVar1,  *0x44e628 = iVar2, \n       *0x44e648 = iVar3,  *0x44e650 = iVar4,  3 < param_3)) {\n        do {\n            *0x43e578 = iVar9;\n            *0x44e668 = iVar10;\n            *0x43e580 = iVar11;\n            *0x44e620 = iVar1;\n            *0x44e628 = iVar2;\n            *0x44e648 = iVar3;\n            *0x44e650 = iVar4;\n            iVar5 = fcn.0040b049(param_2);\n            uVar6 = fcn.0040b049(param_2 + 2);\n            if (param_3 - 4 < (uVar6 & 0xffff)) break;\n            if (iVar5 == 1) {\n                *0x44f75c = 1;\n                iVar12 = 4;\n                uVar6 = 4;\n                iVar9 = *0x43e580;\n                iVar10 = *0x43e578;\n                if (param_4 == '\\0') {\n                    if (*0x44e650 == 0xffffffff) goto code_r0x0040d738;\ncode_r0x0040d773:\n                    uVar8 = uVar6;\n                    if (*0x44e648 == 0xffffffff) {\ncode_r0x0040d79b:\n                        uVar6 = uVar8 + 8;\n                        *0x43e580 = iVar9;\n                        *0x43e578 = iVar10;\n                        if (uVar6 <= param_3) {\n                            iVar12 = uVar8 + param_2;\n                            iVar10 = fcn.0040afa1();\n                            *0x44e620 = iVar10;\n                            *0x44e648 = iVar10;\n                            goto code_r0x0040d7d2;\n                        }\ncode_r0x0040d851:\n                        uVar7 = 2;\n                        goto code_r0x0040d848;\n                    }\n                    *0x43e580 = iVar9;\n                    iVar11 = *0x44e668;\n                    if (param_4 != '\\0') goto code_r0x0040d789;\ncode_r0x0040d7d6:\n                    uVar8 = uVar6;\n                    *0x43e578 = iVar10;\n                    if (iVar11 == 0xffffffff) {\n                        uVar8 = uVar6 + 8;\n                        *0x44e668 = iVar11;\n                        if (param_3 < uVar8) goto code_r0x0040d851;\n                        iVar11 = fcn.0040afa1(uVar6 + param_2, iVar12);\n                    }\n                    *0x44e668 = iVar11;\n                    if ((param_4 == '\\0') && (*0x44e65e == -1)) {\n                        if (param_3 < uVar8 + 4) goto code_r0x0040d851;\n                        *0x44e65e = fcn.0040b024(uVar8 + param_2);\n                    }\n                }\n                else {\n                    if (*0x44e628 == 0xffffffff) {\ncode_r0x0040d738:\n                        uVar6 = 0xc;\n                        if (0xb < param_3) {\n                            iVar12 = param_2 + 4;\n                            iVar9 = fcn.0040afa1(iVar12);\n                            *0x44e628 = iVar9;\n                            iVar10 = *0x43e578;\n                            *0x44e650 = iVar9;\n                            if (param_4 == '\\0') goto code_r0x0040d773;\n                            goto code_r0x0040d789;\n                        }\n                        goto code_r0x0040d851;\n                    }\ncode_r0x0040d789:\n                    uVar8 = uVar6;\n                    *0x43e580 = iVar9;\n                    if (*0x44e620 == 0xffffffff) goto code_r0x0040d79b;\ncode_r0x0040d7d2:\n                    *0x43e578 = iVar10;\n                    iVar11 = *0x44e668;\n                    if (param_4 == '\\0') goto code_r0x0040d7d6;\n                }\n            }\n            param_2 = param_2 + 4 + param_1;\n            param_3 = param_3 + (-4 - param_1);\n            iVar9 = *0x43e578;\n            iVar10 = *0x44e668;\n            iVar11 = *0x43e580;\n            iVar1 = *0x44e620;\n            iVar2 = *0x44e628;\n            iVar3 = *0x44e648;\n            iVar4 = *0x44e650;\n        } while (3 < param_3);\n    }\n    uVar7 = 0;\ncode_r0x0040d848:\n    *0x44e654 = *0x44e650 >> 0x20;\n    *0x44e64c = *0x44e648 >> 0x20;\n    *0x44e62c = *0x44e628 >> 0x20;\n    *0x44e624 = *0x44e620 >> 0x20;\n    *0x43e584 = *0x43e580 >> 0x20;\n    *0x44e66c = *0x44e668 >> 0x20;\n    *0x43e57c = *0x43e578 >> 0x20;\n    return uVar7;\n}\n",
        "token_count": 1921
    },
    "0040d856": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d8fd)\n\nint32_t fcn.0040d856(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    char in_stack_00001004;\n    uint uVar9;\n    int32_t iStack44;\n    \n    fcn.004154b0();\n    fcn.00401b85();\n    cVar2 = fcn.00402ae7(0x46500a, &stack0x00000004, 0);\n    if ((cVar2 == '\\0') || (in_stack_00001004 != '\\0')) {\n        iStack44 = ((cVar2 != '\\0') - 1 & 0xffffffbd) + 0x4c;\n        goto code_r0x0040dac1;\n    }\n    iVar3 = fcn.0040b05e();\n    if (iVar3 != 0) goto code_r0x0040dac1;\n    fcn.0040f727(*0x44e5d8);\n    *0x44e5e0 = fcn.00401e2a();\n    *0x44e5b8 = *0x44e5b4;\n    *0x44e5f8 = 0;\n    *0x44e5fc = 0;\n    iVar1 = *0x44e5e0;\n    if (65999 < *0x44e5e0) {\n        iVar1 = 66000;\n    }\n    *0x44e5e8 = *0x44e5e0;\n    iVar3 = fcn.0040d2a7(iVar1);\n    if (iVar3 == 0) {\n        iVar3 = fcn.0040e04d();\n        if (iVar3 < 2) {\n            iStack44 = iVar3;\n            if (0 < *0x43e550) goto code_r0x0040dac1;\n            *0x44f754 = *0x44e670 != 0;\n            *0x44f758 = 0xffffffff;\n            uVar6 = *0x43e568 - *0x43e570;\n            uVar7 = (*0x43e56c - *0x43e574) - (*0x43e568 < *0x43e570);\n            *0x44e600 = uVar6;\n            *0x44e604 = uVar7;\n            if ((uVar7 < 1) && (uVar7 < 0)) {\n                iVar3 = 2;\n            }\n            else if ((-1 < uVar7) &&\n                    ((((0 < uVar7 || (uVar6 != 0)) && ((*0x44e690 | *0x44e694) == 0)) && ((*0x44e688 | *0x44e68c) != 0))\n                    )) {\n                iStack44 = 2;\n                *0x44e600 = 0;\n                *0x44e604 = 0;\n                iVar3 = iStack44;\n                *0x44e690 = uVar6;\n                *0x44e694 = uVar7;\n            }\n            uVar6 = *0x44e694;\n            if (((*0x43e570 | *0x43e574) == 0) && ((*0x44e688 | *0x44e68c) == 0)) {\n                iStack44 = iVar3;\n                if (iVar3 < 1) {\n                    iStack44 = 0;\n                }\n                goto code_r0x0040dac1;\n            }\n            iVar4 = fcn.0040b3dc(*0x44e690);\n            iVar8 = 3;\n            iStack44 = iVar8;\n            if (iVar4 == 3) goto code_r0x0040dac1;\n            iVar5 = fcn.0040b19c(0x43e5a0, 4);\n            if (iVar5 == 0) {\ncode_r0x0040da13:\n                *0x44e600 = 0;\n                *0x44e604 = 0;\n                iVar4 = fcn.0040b3dc(*0x44e690, *0x44e694);\n                iStack44 = iVar4;\n                if (iVar4 != 0) goto code_r0x0040dac1;\n                iVar5 = fcn.0040b19c(0x43e5a0, 4);\n                iStack44 = iVar8;\n                if (iVar5 == 0) goto code_r0x0040dac1;\n                uVar9 = 0x43e5a0;\n                cVar2 = fcn.0040a9ef();\n                if (cVar2 == '\\0') goto code_r0x0040dac1;\n            }\n            else {\n                uVar9 = 0x43e5a0;\n                cVar2 = fcn.0040a9ef(0x43e5a0);\n                if (cVar2 == '\\0') goto code_r0x0040da13;\n            }\n            if ((iVar4 == 0) && (uVar6 != 0)) {\n                uVar7 = *0x44e694 + *0x44e604 + CARRY4(*0x44e690, *0x44e600);\n                if ((uVar7 < 0x80000000) && ((0 < uVar7 || (uVar6 <= *0x44e690 + *0x44e600)))) {\n                    fcn.004017a5(0x46500a, uVar9);\n                    iStack44 = iVar8;\n                    goto code_r0x0040dac1;\n                }\n            }\n            iStack44 = iVar4;\n            if (iVar4 <= iVar3) {\n                iStack44 = iVar3;\n            }\n            goto code_r0x0040dac1;\n        }\n    }\n    iStack44 = 2;\ncode_r0x0040dac1:\n    *0x44e5ec = *0x44e5e8 >> 0x20;\n    *0x44e5e4 = *0x44e5e0 >> 0x20;\n    return iStack44;\n}\n",
        "token_count": 1427
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040e31a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e31a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00415488();\n    cVar1 = *(unaff_EBP + 8);\n    *(extraout_ECX + 8) = cVar1;\n    if (cVar1 == '\\0') {\n        uVar3 = *(unaff_EBP + 0x18);\n        uVar4 = 0xc;\n        iVar2 = 0x22;\n    }\n    else {\n        if (*(extraout_ECX + 4) == 0) {\n            iVar2 = fcn.00415578(0x1d8, unaff_EDI);\n            *(unaff_EBP + -0x10) = iVar2;\n            *(unaff_EBP + -4) = 0;\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                fcn.00404c2c();\n            }\n            *(extraout_ECX + 4) = iVar2;\n        }\n        iVar2 = *(unaff_EBP + 0xc);\n        *(extraout_ECX + 0xc) = iVar2;\n        fcn.00416ab0(extraout_ECX + 0x10, *(unaff_EBP + 0x10), iVar2 * 4 + 4);\n        uVar3 = *(unaff_EBP + 0x14);\n        uVar4 = 2;\n        iVar2 = 0x20;\n    }\n    fcn.00416ab0(iVar2 + extraout_ECX, uVar3, uVar4);\n    uVar3 = *(unaff_EBP + -0xc);\n    *(extraout_ECX + 0x2e) = 1;\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 542
    },
    "0040e3db": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040e3db(int32_t *param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    if (param_2 < 0x80000000) {\n        uVar2 = fcn.0040e3b1(param_2);\n        if (*param_1 != 0) {\n            fcn.0040123b(*param_1, param_1[2] - *param_1 & 0xfffffffe);\n            *param_1 = 0;\n            param_1[1] = 0;\n            param_1[2] = 0;\n        }\n        fcn.00405a5e(uVar2);\n        return;\n    }\n    fcn.00408ea3();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 197
    },
    "0040e426": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_674h\n\nuint fcn.0040e426(void)\n\n{\n    uchar uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    char cVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar11;\n    uint uVar12;\n    uint *in_FS_OFFSET;\n    bool bVar13;\n    int32_t noname_5;\n    uint noname_7;\n    int32_t noname_2;\n    int32_t noname_3;\n    int32_t noname_4;\n    int32_t noname_5_00;\n    int32_t noname_6;\n    uint noname_7_00;\n    uint noname_9;\n    int32_t noname_11;\n    int32_t arg_10h;\n    int32_t arg_14h;\n    uint var_674h;\n    uint in_stack_fffff998;\n    uint in_stack_fffff99c;\n    uint in_stack_fffff9a0;\n    uint in_stack_fffff9a4;\n    uint in_stack_fffff9a8;\n    uint in_stack_fffff9ac;\n    uint in_stack_fffff9b0;\n    uint in_stack_fffff9b4;\n    uint in_stack_fffff9b8;\n    uint in_stack_fffff9bc;\n    uint in_stack_fffff9c0;\n    uint in_stack_fffff9c4;\n    uint in_stack_fffff9c8;\n    uint in_stack_fffff9cc;\n    uint in_stack_fffff9d0;\n    uint in_stack_fffff9d4;\n    uint in_stack_fffff9d8;\n    uint in_stack_fffff9dc;\n    uint in_stack_fffff9e0;\n    uint in_stack_fffff9e4;\n    uint in_stack_fffff9e8;\n    uint in_stack_fffff9ec;\n    uint in_stack_fffff9f0;\n    uint in_stack_fffff9f4;\n    uint in_stack_fffff9f8;\n    uint in_stack_fffff9fc;\n    uint in_stack_fffffa00;\n    uint in_stack_fffffa04;\n    uint in_stack_fffffa08;\n    uint in_stack_fffffa0c;\n    uint in_stack_fffffa10;\n    uint in_stack_fffffa14;\n    uint in_stack_fffffa18;\n    uint in_stack_fffffa1c;\n    uint in_stack_fffffa20;\n    uint in_stack_fffffa24;\n    uint in_stack_fffffa28;\n    uint in_stack_fffffa2c;\n    uint in_stack_fffffa30;\n    uint in_stack_fffffa34;\n    uint in_stack_fffffa38;\n    uint in_stack_fffffa3c;\n    uint in_stack_fffffa40;\n    uint in_stack_fffffa44;\n    uint in_stack_fffffa48;\n    uint in_stack_fffffa4c;\n    uint in_stack_fffffa50;\n    uint in_stack_fffffa54;\n    uint in_stack_fffffa58;\n    uint in_stack_fffffa5c;\n    uint in_stack_fffffa60;\n    uint in_stack_fffffa64;\n    uint in_stack_fffffa68;\n    uint in_stack_fffffa6c;\n    uint in_stack_fffffa70;\n    uint in_stack_fffffa74;\n    uint var_274h;\n    uint var_74h;\n    uint var_70h;\n    uint var_46h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    fcn.00415488();\n    *(*0x43e5a8 + 0x70) = *(*0x43e5a8 + 0x70) & 0xfffffffe;\n    fcn.0040ad04();\n    uVar11 = 0;\n    *(unaff_EBP + -0x24) = 0xc;\n    puVar5 = *0x44e5b8;\n    uVar6 = *0x44e5c0;\n    iVar10 = *0x44e5c4;\n    if (*0x44f75d == 0) {\n        do {\n            uVar9 = uVar6 - 1;\n            iVar10 = iVar10 + -1 + (uVar6 != 0);\n            *0x44e5c0 = uVar9;\n            *0x44e5c4 = iVar10;\n            if (iVar10 < 0) {\n                uVar12 = fcn.0040b284();\n                iVar10 = *0x44e5c4;\n                uVar9 = *0x44e5c0;\n                *(unaff_EBP + -0x20) = uVar12;\n            }\n            else {\n                *0x44e5b8 = puVar5 + 1;\n                *(unaff_EBP + -0x20) = *puVar5;\n            }\n            puVar5 = *0x44e5b8;\n            *(unaff_EBP + -0x34 + uVar11) = *(unaff_EBP + -0x20);\n            uVar11 = uVar11 + 1;\n            uVar6 = uVar9;\n        } while (uVar11 < 0xc);\n    }\n    else {\n        iVar10 = *0x44f760 * 4 + 4;\n        *(unaff_EBP + -0x28) = iVar10;\n        puVar5 = *0x44e5b8;\n        if (iVar10 != 0) {\n            do {\n                bVar13 = *0x44e5c0 != 0;\n                *0x44e5c0 = *0x44e5c0 - 1;\n                *0x44e5c4 = *0x44e5c4 + -1 + bVar13;\n                if (*0x44e5c4 < 0) {\n                    uVar12 = fcn.0040b284();\n                    *(unaff_EBP + -0x20) = uVar12;\n                }\n                else {\n                    *0x44e5b8 = puVar5 + 1;\n                    *(unaff_EBP + -0x20) = *puVar5;\n                }\n                puVar5 = *0x44e5b8;\n                *(unaff_EBP + -0x44 + uVar11) = *(unaff_EBP + -0x20);\n                uVar11 = uVar11 + 1;\n            } while (uVar11 < *(unaff_EBP + -0x28));\n        }\n        bVar13 = *0x44e5c0 != 0;\n        *0x44e5c0 = *0x44e5c0 - 1;\n        *0x44e5c4 = *0x44e5c4 + -1 + bVar13;\n        if (*0x44e5c4 < 0) {\n            uVar1 = fcn.0040b284();\n            *(unaff_EBP + -0xd) = uVar1;\n        }\n        else {\n            *0x44e5b8 = puVar5 + 1;\n            *(unaff_EBP + -0xd) = *puVar5;\n        }\n        puVar5 = *0x44e5b8;\n        bVar13 = *0x44e5c0 != 0;\n        *0x44e5c0 = *0x44e5c0 - 1;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0xd);\n        *0x44e5c4 = *0x44e5c4 + -1 + bVar13;\n        if (*0x44e5c4 < 0) {\n            uVar2 = fcn.0040b284();\n        }\n        else {\n            uVar2 = *puVar5;\n            *0x44e5b8 = puVar5 + 1;\n        }\n        *(unaff_EBP + -0x13) = uVar2;\n    }\n    *(*0x43e5a8 + 0x70) = *(*0x43e5a8 + 0x70) | 1;\n    var_674h = 0x40e5b8;\n    fcn.0040b4fb();\n    if (*0x43e55c == 0) goto code_r0x0040e61b;\n    *0x43e55c = 0;\n    if (*0x4661e4 == '\\0') {\n        if (*0x44f6f8 != '\\0') {\n            var_674h = 0x40e5fc;\n            fcn.004058aa();\n            goto code_r0x0040e5fc;\n        }\ncode_r0x0040e605:\n        cVar3 = fcn.00407925();\n        *0x43e560 = '\\0';\n        if (cVar3 == '\\0') goto code_r0x0040e61b;\n    }\n    else if (*0x44f6f8 == '\\0') {\n        var_674h = 0x4661d8;\n        fcn.0040e159(0x4661d8);\ncode_r0x0040e5fc:\n        if (*0x44f6f8 == '\\0') goto code_r0x0040e605;\n    }\n    *0x43e560 = '\\x01';\ncode_r0x0040e61b:\n    *(unaff_EBP + -0x74) = 0x42a14c;\n    *(unaff_EBP + -0x70) = 0;\n    *(unaff_EBP + -0x46) = 0;\n    iVar10 = unaff_EBP + -0x34;\n    *(unaff_EBP + -4) = 0;\n    arg_14h = unaff_EBP + -0x14;\n    arg_10h = unaff_EBP + -0x44;\n    uVar6 = *0x44f75d;\n    noname_11 = *0x44f760;\n    fcn.0040e31a(uVar6, *0x44f760, arg_10h, arg_14h, iVar10);\n    uVar12 = 2;\n    do {\n        if ((*0x44f6f8 == '\\0') &&\n           (cVar3 = fcn.00407900(1, 0x44e6c4, 0x44f6ec, -(*(unaff_EBP + -0x46) != '\\0') & unaff_EBP - 0x74U), \n           cVar3 == '\\0')) {\n            uVar12 = 9;\n            goto code_r0x0040e8a8;\n        }\n        noname_9 = 0x200;\n        iVar8 = unaff_EBP + -0x674;\n        fcn.004058c0();\n        noname_6 = unaff_EBP + -0x274;\n        noname_7_00 = 0x200;\n        noname_5_00 = unaff_EBP + -0x674;\n        if (*0x44f75d == 0) {\n            fcn.00407b8f();\n            iVar8 = fcn.0040e930(unaff_EBP + -0x34, unaff_EBP + -0x274, 1);\n            cVar3 = iVar8 != 0;\n            *(unaff_EBP + -0xd) = cVar3;\n            if (iVar8 == 0) {\n                cVar4 = *(unaff_EBP + -0x16);\n            }\n            else {\n                cVar4 = fcn.004067c6(unaff_EBP + -0x674);\n                cVar3 = *(unaff_EBP + -0xd);\n                cVar4 = '\\x01' - (cVar4 != '\\0');\n                *(unaff_EBP + -0x16) = cVar4;\n            }\n            if ((cVar3 != '\\0') && (cVar4 != '\\0')) {\n                fcn.00407bc7(unaff_EBP + -0x674, unaff_EBP + -0x274, 0x200);\n                iVar8 = fcn.0040e930(unaff_EBP + -0x34, unaff_EBP + -0x274, 1);\n                goto code_r0x0040e7e0;\n            }\n        }\n        else {\n            fcn.00407b8f();\n            noname_4 = unaff_EBP + -0x1c;\n            noname_3 = unaff_EBP + -0x44;\n            noname_2 = unaff_EBP + -0x274;\n            fcn.0040eb3c(0x44f768, *0x44f760, noname_2, noname_3, noname_4, noname_5_00, noname_6, noname_7_00, iVar8, \n                         noname_9, uVar6, noname_11, arg_10h, arg_14h, iVar10, var_674h, unaff_EDI, unaff_ESI, unaff_EBX\n                         , in_stack_fffff998, in_stack_fffff99c, in_stack_fffff9a0, in_stack_fffff9a4, in_stack_fffff9a8\n                         , in_stack_fffff9ac, in_stack_fffff9b0, in_stack_fffff9b4, in_stack_fffff9b8, in_stack_fffff9bc\n                         , in_stack_fffff9c0, in_stack_fffff9c4, in_stack_fffff9c8, in_stack_fffff9cc, in_stack_fffff9d0\n                         , in_stack_fffff9d4, in_stack_fffff9d8, in_stack_fffff9dc, in_stack_fffff9e0, in_stack_fffff9e4\n                         , in_stack_fffff9e8, in_stack_fffff9ec, in_stack_fffff9f0, in_stack_fffff9f4, in_stack_fffff9f8\n                         , in_stack_fffff9fc, in_stack_fffffa00, in_stack_fffffa04, in_stack_fffffa08, in_stack_fffffa0c\n                         , in_stack_fffffa10, in_stack_fffffa14, in_stack_fffffa18, in_stack_fffffa1c, in_stack_fffffa20\n                         , in_stack_fffffa24, in_stack_fffffa28, in_stack_fffffa2c, in_stack_fffffa30, in_stack_fffffa34\n                         , in_stack_fffffa38, in_stack_fffffa3c, in_stack_fffffa40, in_stack_fffffa44, in_stack_fffffa48\n                         , in_stack_fffffa4c, in_stack_fffffa50, in_stack_fffffa54, in_stack_fffffa58, in_stack_fffffa5c\n                         , in_stack_fffffa60, in_stack_fffffa64, in_stack_fffffa68, in_stack_fffffa6c, in_stack_fffffa70\n                         , in_stack_fffffa74);\n            iVar7 = fcn.00417282(unaff_EBP + -0x14, unaff_EBP + -0x1c, 2);\n            cVar3 = iVar7 != 0;\n            *(unaff_EBP + -0xd) = cVar3;\n            if (iVar7 == 0) {\n                cVar4 = *(unaff_EBP + -0x15);\n            }\n            else {\n                cVar4 = fcn.004067c6(unaff_EBP + -0x674);\n                cVar3 = *(unaff_EBP + -0xd);\n                cVar4 = '\\x01' - (cVar4 != '\\0');\n                *(unaff_EBP + -0x15) = cVar4;\n            }\n            if ((cVar3 != '\\0') && (cVar4 != '\\0')) {\n                noname_7 = 0x200;\n                iVar7 = unaff_EBP + -0x274;\n                noname_5 = unaff_EBP + -0x674;\n                fcn.00407bc7();\n                fcn.0040eb3c(0x44f768, *0x44f760, unaff_EBP + -0x274, unaff_EBP + -0x44, unaff_EBP + -0x1c, noname_5, \n                             iVar7, noname_7, 0x44f768, noname_2, noname_3, noname_4, noname_5_00, noname_6, noname_7_00\n                             , iVar8, noname_9, uVar6, noname_11, arg_10h, arg_14h, iVar10, var_674h, unaff_EDI, \n                             unaff_ESI, unaff_EBX, in_stack_fffff998, in_stack_fffff99c, in_stack_fffff9a0, \n                             in_stack_fffff9a4, in_stack_fffff9a8, in_stack_fffff9ac, in_stack_fffff9b0, \n                             in_stack_fffff9b4, in_stack_fffff9b8, in_stack_fffff9bc, in_stack_fffff9c0, \n                             in_stack_fffff9c4, in_stack_fffff9c8, in_stack_fffff9cc, in_stack_fffff9d0, \n                             in_stack_fffff9d4, in_stack_fffff9d8, in_stack_fffff9dc, in_stack_fffff9e0, \n                             in_stack_fffff9e4, in_stack_fffff9e8, in_stack_fffff9ec, in_stack_fffff9f0, \n                             in_stack_fffff9f4, in_stack_fffff9f8, in_stack_fffff9fc, in_stack_fffffa00, \n                             in_stack_fffffa04, in_stack_fffffa08, in_stack_fffffa0c, in_stack_fffffa10, \n                             in_stack_fffffa14, in_stack_fffffa18, in_stack_fffffa1c, in_stack_fffffa20, \n                             in_stack_fffffa24, in_stack_fffffa28, in_stack_fffffa2c, in_stack_fffffa30, \n                             in_stack_fffffa34, in_stack_fffffa38, in_stack_fffffa3c, in_stack_fffffa40, \n                             in_stack_fffffa44, in_stack_fffffa48, in_stack_fffffa4c, in_stack_fffffa50, \n                             in_stack_fffffa54, in_stack_fffffa58);\n                iVar8 = fcn.00417282(unaff_EBP + -0x14, unaff_EBP + -0x1c, 2);\ncode_r0x0040e7e0:\n                *(unaff_EBP + -0xd) = iVar8 != 0;\n            }\n        }\n        fcn.00405ac3(unaff_EBP + -0x674, 0x400);\n        fcn.00405ac3(unaff_EBP + -0x274, 0x200);\n        if (*(unaff_EBP + -0xd) == '\\0') {\n            *(unaff_EBP + -0x24) = 0;\n            goto code_r0x0040e84b;\n        }\n        fcn.004058aa();\n        if (*0x43e560 != '\\0') break;\n        uVar6 = 0x84;\n        fcn.004086ed(0x84, 0x46500a, 0x44e6c4);\n    } while( true );\n    fcn.004086ed(6, 0x46500a, 0x44e6c4);\ncode_r0x0040e84b:\n    if (*0x44f75d != 0) {\n        if ((*0x43e57c < 1) && ((*0x43e57c < 0 || (*0x43e578 < 10)))) goto code_r0x0040e8a8;\n        bVar13 = 9 < *0x43e578;\n        *0x43e578 = *0x43e578 - 10;\n        *0x43e57c = *0x43e57c + -1 + bVar13;\n        if ((*0x43e57c < *0x44e5c4) || ((uVar6 = *0x44e5c0,  *0x43e57c <= *0x44e5c4 && (*0x43e578 <= *0x44e5c0)))) {\n            uVar6 = *0x43e578;\n        }\n        if (uVar6 != 0) {\n            fcn.0040eaee(0x44f768, *0x44e5b8, uVar6);\n        }\n    }\n    uVar12 = *(unaff_EBP + -0x24);\ncode_r0x0040e8a8:\n    *(unaff_EBP + -0x74) = 0x42a14c;\n    fcn.00415479(*(unaff_EBP + -0x70));\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar12;\n}\n",
        "token_count": 4942
    },
    "0040e930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040e930(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint var_ch;\n    uint var_1h;\n    \n    fcn.0040e8ed(arg_ch);\n    fcn.00416ab0(&var_ch, arg_8h, 0xc);\n    iVar6 = 0;\n    do {\n        uVar3 = fcn.0040e8cf();\n        *(&var_ch + iVar6) = *(&var_ch + iVar6) ^ uVar3;\n        fcn.0040e9e0();\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0xc);\n    cVar5 = *0x44e617;\n    if ((*(*0x43e5a8 + 0x70) & 2) == 0) {\n        cVar5 = *0x44e61f;\n    }\n    if (var_1h == cVar5) {\n        if (arg_10h != '\\0') {\n            puVar2 = *0x44e5b8;\n            if ((*0x44e5c0 >> 0x1f < *0x43e57c) ||\n               ((uVar1 = *0x43e578,  *0x44e5c0 >> 0x1f <= *0x43e57c && (*0x44e5c0 <= *0x43e578)))) {\n                uVar1 = *0x44e5c0;\n            }\n            for (; uVar1 != 0; uVar1 = uVar1 - 1) {\n                uVar3 = fcn.0040e8cf();\n                *puVar2 = *puVar2 ^ uVar3;\n                fcn.0040e9e0();\n                puVar2 = puVar2 + 1;\n            }\n        }\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = 0xffffffff;\n    }\n    return uVar4;\n}\n",
        "token_count": 520
    },
    "0040eaee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eaee(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        fcn.00406459(arg_8h + 0x130, arg_ch, arg_10h);\n    }\n    fcn.0040ea3a(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 97
    },
    "0040ec02": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ec02(uint *param_1, uint *param_2, char *param_3)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar3;\n    uint uStack64;\n    uint *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint *puStack44;\n    uchar *puStack40;\n    uchar auStack20 [16];\n    char *pcStack4;\n    \n    puStack40 = &stack0xffffffec;\n    puStack44 = param_1;\n    puStack48 = 0x40ec17;\n    fcn.0040ef23();\n    if ((param_2 == NULL) || (*param_3 == '\\0')) {\n        puStack56 = param_1 + 0x18;\n        iVar2 = 0x40;\n        puVar1 = puStack56;\n        do {\n            *puVar1 = *puVar1 ^ 0x6a;\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        puStack48 = param_1;\n        uStack52 = 0x40ec4a;\n        fcn.00406428();\n        uStack52 = 0x40;\n        puStack60 = param_1;\n        uStack64 = 0x40ec53;\n        fcn.00406459();\n        if (param_2 == NULL) goto code_r0x0040ec6c;\n    }\n    else {\n        puStack48 = 0x18;\n        puVar1 = param_2;\n        puVar3 = param_1;\n        for (iVar2 = 0x18; pcStack4 = param_3,  iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *puVar1;\n            puVar1 = puVar1 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    if (*pcStack4 == '\\0') {\n        puVar1 = param_1;\n        for (iVar2 = 0x18; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *param_2 = *puVar1;\n            puVar1 = puVar1 + 1;\n            param_2 = param_2 + 1;\n        }\n        *pcStack4 = '\\x01';\n    }\ncode_r0x0040ec6c:\n    uStack64 = 0x14;\n    fcn.00406459(param_1, &stack0xffffffd4);\n    fcn.0040ef23(param_1, &stack0xffffffc8);\n    if (unaff_ESI != 0) {\n        fcn.00416ab0(unaff_EDI, &stack0xffffffc0, unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 665
    },
    "0040f727": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040f727(int32_t *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_108h;\n    uint var_f0h;\n    uint var_cch;\n    uint32_t var_94h;\n    uint32_t var_84h;\n    uint var_70h;\n    uint var_60h;\n    \n    pcVar1 = *(*arg_8h + 0x10);\n    (**0x42922c)(0, 0, 0);\n    (*pcVar1)();\n    pcVar1 = *(*arg_8h + 0xc);\n    (**0x42922c)(&var_108h, 0x40);\n    iVar2 = (*pcVar1)();\n    if (((iVar2 == 0x40) && (var_108h == 'M')) && (var_108h._1_1_ == 'Z')) {\n        pcVar1 = *(*arg_8h + 0x10);\n        (**0x42922c)(var_cch, 0, 0);\n        (*pcVar1)();\n        pcVar1 = *(*arg_8h + 0xc);\n        (**0x42922c)(&var_108h, 0x108);\n        iVar2 = (*pcVar1)();\n        if ((((iVar2 == 0x108) && (var_108h == 'P')) &&\n            ((var_108h._1_1_ == 'E' && ((var_108h._2_1_ == '\\0' && (var_108h._3_1_ == '\\0')))))) && (var_f0h == '\\v')) {\n            if ((var_f0h._1_1_ == '\\x01') && (4 < var_94h)) {\n                return var_70h;\n            }\n            if ((var_f0h._1_1_ == '\\x02') && (4 < var_84h)) {\n                return var_60h;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 460
    },
    "0040f831": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040f86c)\n\nvoid fcn.0040f831(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t unaff_EBX;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t *unaff_EDI;\n    int64_t iVar11;\n    int32_t *piVar12;\n    \n    iVar2 = fcn.004158e4(0x10000);\n    if (iVar2 != 0) {\n        piVar12 = param_1;\n        fcn.0040f727(param_1);\n        iVar11 = fcn.00401e2a();\n        if (iVar11 < 0x10000) {\n            uVar9 = 0;\n            puVar5 = NULL;\n        }\n        else {\n            uVar9 = iVar11 - 0x10000;\n            puVar5 = (iVar11 >> 0x20) - (iVar11 < 0x10000);\n        }\n        pcVar1 = *(*param_1 + 0x10);\n        (**0x42922c)(uVar9, puVar5);\n        (*pcVar1)();\n        pcVar1 = *(*param_1 + 0xc);\n        (**0x42922c)(iVar2, 0x10000);\n        iVar3 = (*pcVar1)();\n        for (uVar10 = iVar3 - 4; -1 < uVar10; uVar10 = uVar10 - 1) {\n            if ((*(uVar10 + iVar2) == 0x6054b50) && (uVar10 < iVar3 + -0x15)) {\n                uVar4 = CONCAT11(*(uVar10 + 0x15 + iVar2), *(uVar10 + 0x14 + iVar2));\n                if (uVar4 == 0) break;\n                uVar6 = (iVar3 - uVar10) - 0x16;\n                if (uVar6 <= uVar4) {\n                    uVar4 = uVar6;\n                }\n                *puVar5 = uVar4;\n                iVar3 = fcn.004158e4(uVar4 + 1);\n                *unaff_EDI = iVar3;\n                if (piVar12 != NULL) {\n                    iVar7 = uVar10 >> 0x1f;\n                    iVar8 = iVar7 + CARRY4(uVar10, uVar9);\n                    if ((iVar8 >= 0) &&\n                       ((iVar8 != 0 && (SCARRY4(iVar7, 0) != SCARRY4(iVar7, CARRY4(uVar10, uVar9))) == iVar8 < 0 ||\n                        (piVar12 <= uVar10 + uVar9)))) {\n                        fcn.004016d9(0x3a, unaff_EBX + 0x32);\n                        *puVar5 = 0;\n                        break;\n                    }\n                }\n                fcn.00416ab0(iVar3, iVar2 + 0x16 + uVar10, *puVar5);\n                *(*unaff_EDI + *puVar5) = 0;\n                break;\n            }\n        }\n        fcn.004155a8(iVar2);\n    }\n    return;\n}\n",
        "token_count": 773
    },
    "0040f9c7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f9c7(uint arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    fcn.0040f965(arg_8h, &var_4h, &var_8h);\n    iVar3 = var_8h;\n    if ((var_4h != 0) && (var_8h != 0)) {\n        uVar1 = var_8h + 1;\n        iVar2 = uVar1 * 2;\n        iVar4 = fcn.004158e4(-(iVar2 >> 0x20 != 0) | iVar2);\n        fcn.00407946(var_4h, iVar4, uVar1);\n        *(iVar4 + iVar3 * 2) = 0;\n        fcn.004155a8(var_4h);\n        *arg_ch = iVar4;\n        *arg_10h = iVar3;\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "0040fac4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040fac4(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h)\n\n{\n    uint8_t uVar1;\n    ushort *puVar2;\n    uint32_t uVar3;\n    \n    puVar2 = fcn.004038fd(arg_8h);\n    uVar1 = fcn.004037cf(*puVar2);\n    if (uVar1 != 0) {\n        *puVar2 = 0;\n    }\n    if ((((arg_ch == 0) || (arg_ch == 6)) || (arg_ch == 10)) || ((arg_ch == 0xb || (arg_ch == 0xe)))) {\n        if ((uVar1 == 0) && ((*arg_18h & 0x10) != 0)) {\n            if ((arg_14h == 0) && (arg_10h == 0)) {\n                uVar1 = 1;\n            }\n            else {\n                *arg_18h = *arg_18h & 0xffffffef;\n            }\n        }\n        *arg_18h = *arg_18h & 0xff;\n        uVar3 = *arg_18h;\n    }\n    else {\n        uVar3 = ((uVar1 ^ 1) + 1) * 0x10;\n        *arg_18h = uVar3;\n    }\n    if (uVar1 != 0) {\n        uVar3 = uVar3 | 0x10;\n        *arg_18h = uVar3;\n    }\n    return uVar3 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 379
    },
    "0040fd05": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fd05(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "0040fd1d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fd1d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    \n    if ((((*(param_1 + 0xc) != 0) && (*(param_1 + 0x18) != 0)) && (piVar3 = fcn.00410c7e(),  piVar3 != NULL)) &&\n       (piVar4 = fcn.0040fe1d(0x42b21c),  piVar4 != NULL)) {\n        iVar1 = *piVar4;\n        (**0x42922c)(piVar4, *(param_1 + 0x18), param_1 + 0x14);\n        (**(iVar1 + 0x14))();\n        pcVar2 = *(*piVar4 + 8);\n        (**0x42922c)(piVar4);\n        (*pcVar2)();\n        pcVar2 = *(*piVar3 + 8);\n        (**0x42922c)(piVar3);\n        (*pcVar2)();\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00410191": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410191(int32_t param_1, char16_t *param_2)\n\n{\n    char16_t cVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    char16_t *arg_8h;\n    int32_t iVar4;\n    ushort *puVar5;\n    char16_t *lpString1;\n    int32_t *piVar6;\n    \n    if (*(param_1 + 0x10) != 0) {\n        fcn.0041002a();\n        fcn.0041a023(param_2);\n        arg_8h = fcn.0041c47d();\n        if (arg_8h != NULL) {\n            fcn.0041cfbf(arg_8h, L\"<html>\");\n            fcn.0041dae7(arg_8h, L\"<head><meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=\");\n            fcn.0041dae7(arg_8h, L\"utf-8\\\"></head>\");\n            cVar1 = *param_2;\n            lpString1 = param_2;\n            while (cVar1 == L' ') {\n                lpString1 = lpString1 + 1;\n                cVar1 = *lpString1;\n            }\n            iVar4 = fcn.00407d8f(lpString1, L\"<html>\", 6);\n            uVar3 = param_2 >> 0x18;\n            if (iVar4 == 0) {\n                param_2 = lpString1 + 6;\n            }\n            fcn.0041dae7(arg_8h, param_2);\n            if (iVar4 != 0) {\n                param_2 = L\"</html>\";\n                fcn.0041dae7(arg_8h, L\"</html>\");\n            }\n            if (uVar3 == '\\0') {\n                param_2 = arg_8h;\n                arg_8h = fcn.00410435(arg_8h);\n            }\n            iVar4 = fcn.0041a023(arg_8h);\n            piVar6 = 0x40;\n            puVar5 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar4 * 6 + 9);\n            if (puVar5 != NULL) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (0xfde9, 0, arg_8h, 0xffffffff, puVar5 + 3, iVar4 * 6 + 6, 0, 0);\n                if (iVar4 == 0) {\n                    *puVar5 = 0;\n                }\n                else {\n                    *puVar5 = 0xbbef;\n                    *(puVar5 + 1) = 0xbf;\n                }\n            }\n            fcn.0041a299(arg_8h);\n            iVar4 = (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(puVar5, 1, &stack0xffffffe0);\n            if (-1 < iVar4) {\n                fcn.0041006b(*(param_1 + 0x10), param_2);\n                pcVar2 = *(*piVar6 + 8);\n                (**0x42922c)(piVar6);\n                (*pcVar2)();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 731
    },
    "004102e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004102e2(int32_t param_1, uint param_2)\n\n{\n    int32_t **ppiVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint unaff_ESI;\n    char16_t *pcVar5;\n    int32_t *piVar6;\n    \n    *(param_1 + 4) = param_2;\n    *(param_1 + 0x1c) = 0;\n    iVar3 = fcn.00415578(0x30, unaff_ESI);\n    if (iVar3 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = fcn.0040fb4c();\n    }\n    *(param_1 + 0xc) = iVar3;\n    if (iVar3 != 0) {\n        *(iVar3 + 0x18) = param_2;\n        fcn.00410b8e(L\"Shell.Explorer\");\n        fcn.00410de7(1);\n        piVar6 = 0x1;\n        fcn.00410d7f(1);\n        puVar4 = fcn.00410c7e();\n        ppiVar1 = param_1 + 0x10;\n        if (puVar4 != NULL) {\n            pcVar2 = **puVar4;\n            (**0x42922c)(puVar4, 0x42b20c, ppiVar1);\n            iVar3 = (*pcVar2)();\n            pcVar2 = *(*piVar6 + 8);\n            (**0x42922c)(piVar6);\n            (*pcVar2)();\n            if (iVar3 < 0) {\n                *ppiVar1 = NULL;\n                return;\n            }\n        }\n        if (*ppiVar1 != NULL) {\n            fcn.0040fd1d();\n            *(param_1 + 0x29) = 0;\n            iVar3 = **ppiVar1;\n            if (*(param_1 + 0x24) == 0) {\n                pcVar5 = L\"about:blank\";\n            }\n            else {\n                pcVar5 = *(param_1 + 0x24);\n            }\n            (**0x42922c)(*ppiVar1, pcVar5, 0, 0, 0, 0);\n            (**(iVar3 + 0x2c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 537
    },
    "004109b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004109b5(uint *param_1, int32_t param_2, int32_t param_3, uint param_4, uint param_5, uchar param_6)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_retaddr;\n    int32_t *piVar5;\n    int32_t iStack36;\n    uint uStack32;\n    uint uStack4;\n    \n    uStack32 = 0;\n    iStack36 = param_3;\n    param_1[2] = param_3;\n    *(param_1 + 0x2a) = param_6;\n    (*_sym.imp.USER32.dll_ShowWindow)();\n    fcn.004106e4(uStack4);\n    if (param_1[8] != 0) {\n        fcn.0041a299(param_1[8]);\n    }\n    if (unaff_retaddr == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0041da86(unaff_retaddr);\n    }\n    param_1[8] = uVar2;\n    if (param_2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0041da86(param_2);\n    }\n    param_1[9] = uVar2;\n    iVar3 = param_3;\n    (*_sym.imp.USER32.dll_GetWindowRect)(param_3, &stack0xffffffe4);\n    piVar5 = &iStack36;\n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(param_3, piVar5, 2);\n    (*_sym.imp.USER32.dll_MapWindowPoints)(0, uVar2);\n    if (param_1[1] != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(param_1[1]);\n    }\n    iVar4 = iVar3 - piVar5;\n    iVar1 = piVar5 + 1;\n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(param_3, 0, *param_1, param_1);\n    iVar3 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                      (0, 0x42a2a0, 0, 0x40000000, iVar1, piVar5, iVar4 + -2, iVar3 - piVar5, uVar2);\n    param_1[1] = iVar3;\n    if ((*(param_1 + 7) == '\\0') && (param_1[4] == 0)) {\n        if (((param_3 != 0) && (param_1[9] == 0)) && (param_1[8] != 0)) {\n            iVar3 = fcn.004107de(param_1[8]);\n            if (iVar3 != 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(param_3, 5);\n                (*_sym.imp.USER32.dll_SetWindowTextW)(param_3, iVar3);\n                fcn.0041a299(iVar3);\n            }\n        }\n    }\n    else if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(iVar3, 5);\n        (*_sym.imp.USER32.dll_UpdateWindow)(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 763
    },
    "00410c51": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410c51(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x24) == 0) && (*(param_1 + 0x29) == '\\0')) {\n        fcn.00410191(*(param_1 + 0x20));\n    }\n    *(param_1 + 0x29) = 1;\n    if (*(param_1 + 0x2a) != '\\0') {\n        fcn.00410d7f(1);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00410d7f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410d7f(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    code **ppcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    puVar1 = in_ECX[7];\n    if ((puVar1 != NULL) && (arg_8h != 0)) {\n        ppcVar2 = *puVar1;\n        var_4h = in_ECX;\n        (**0x42922c)(puVar1, 0x42b1ac, &var_4h);\n        iVar4 = (**ppcVar2)();\n        if (-1 < iVar4) {\n            iVar4 = *var_4h;\n            (**0x42922c)(var_4h, 0xfffffffc, 0);\n            (**(iVar4 + 0x2c))();\n            pcVar3 = *(*var_4h + 8);\n            (**0x42922c)(var_4h);\n            (*pcVar3)();\n        }\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "00410e88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410e88(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    var_4h = 0;\n    *in_ECX = 0x42a488;\n    if (arg_ch == 0) {\n        uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromStream(arg_8h, &var_4h);\n    }\n    else {\n        uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromStreamICM();\n    }\n    in_ECX[2] = uVar1;\n    in_ECX[1] = var_4h;\n    return;\n}\n",
        "token_count": 161
    },
    "004112b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004112b4(uint hWnd, uint lpText, uint lpCaption, uint32_t arg_14h)\n\n{\n    if (*0x45ae00 != '\\0') {\n        arg_14h = arg_14h | 0x180000;\n    }\n    (*_sym.imp.USER32.dll_MessageBoxW)(hWnd, lpText, lpCaption, arg_14h);\n    return;\n}\n",
        "token_count": 93
    },
    "00411941": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00411941(void)\n\n{\n    uint lpString1;\n    int32_t iVar1;\n    uint var_1024h;\n    uint uStackY60;\n    uint *puStackY56;\n    uint uStackY52;\n    uint uStackY48;\n    uint lpFileOp;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_10h;\n    uint arg_10h;\n    \n    fcn.004154b0();\n    if (*0x457d82 != 0) {\n        arg_10h = *0x434604;\n        lpString1 = fcn.00403919();\n        var_18h = 0x411976;\n        iVar1 = fcn.00407d8f(lpString1, 0x457d82, arg_10h);\n        if (iVar1 == 0) {\n            var_18h = 0x456d80;\n            var_1ch = 0x411984;\n            fcn.004116d9();\n            var_1ch = 0x800;\n            lpFileOp = 0x457d82;\n            fcn.0040694c();\n            uStackY48 = 0x4119a2;\n            iVar1 = fcn.0041a023(&fcn.00411941::var_1024h);\n            uStackY48 = 0x1e;\n            uStackY52 = 0;\n            *(&fcn.00411941::var_1024h + iVar1 * 2 + 2) = 0;\n            puStackY56 = &fcn.00411941::lpFileOp;\n            uStackY60 = 0x4119b8;\n            fcn.00416480();\n            var_1ch = 3;\n            var_18h = &fcn.00411941::var_1024h;\n            uStackY48 = 0x4119dc;\n            (*_sym.imp.SHELL32.dll_SHFileOperationW)();\n        }\n    }\n    return;\n}\n",
        "token_count": 464
    },
    "004119df": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004119df(int16_t *arg_8h, uint arglist)\n\n{\n    uchar auStack10244 [10216];\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uchar *puStack16;\n    int16_t *piStack12;\n    uint *puStack8;\n    \n    puStack8 = 0x4119ec;\n    fcn.004154b0();\n    if (arg_8h != NULL) {\n        if (*arg_8h == 0) {\n            return;\n        }\n        puStack8 = &fcn.004119df::arglist;\n        piStack12 = arg_8h;\n        puStack16 = &stack0xffffd7fc;\n        puStack20 = 0x411a0b;\n        (*_sym.imp.USER32.dll_wvsprintfW)();\n        puStack20 = &stack0xffffd7fc;\n        uStack24 = 1;\n        uStack28 = 0x411a19;\n        fcn.00413de6();\n    }\n    *0x44f95c = *0x44f95c + 1;\n    return;\n}\n",
        "token_count": 258
    },
    "00411a21": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00411a21(uint arg_8h, uint arg_ch, ushort *arg_10h, int32_t arg_14h)\n\n{\n    uint lpLCData;\n    uint var_64h;\n    \n    if (*0x43461c == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(0x400, 0xf, &lpLCData, 100);\n        *0x46723c = lpLCData;\n        *0x46723e = 0;\n        *0x43461c = 0x46723c;\n    }\n    fcn.00406807(arg_8h, arg_ch, &var_64h, 0x32);\n    *arg_10h = 0;\n    (*_sym.imp.KERNEL32.dll_GetNumberFormatW)(0x400, 0, &var_64h, 0x43460c, arg_10h, arg_14h);\n    arg_10h[arg_14h + -1] = 0;\n    return;\n}\n",
        "token_count": 245
    },
    "00411ba5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411ba5(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar auStack8208 [4096];\n    uint var_100ch;\n    uint uStack76;\n    uint uStack72;\n    uint *puStack68;\n    uchar *puStack64;\n    uchar *puStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint *puStack44;\n    uint *puStack40;\n    uint uStack36;\n    char16_t *pcStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uchar *hKey;\n    uint32_t var_4h;\n    \n    var_4h = 0x411bb2;\n    fcn.004154b0();\n    if (*0x458d88 != '\\0') {\n        var_4h = 0x800;\n        hKey = &stack0xffffdff0;\n        var_ch = arg_8h;\n        puStack20 = 0x411bd3;\n        fcn.00413004();\n        puStack20 = &fcn.00411ba5::hKey;\n        uStack24 = 1;\n        uStack28 = 0;\n        pcStack32 = L\"Software\\\\WinRAR SFX\";\n        uStack36 = 0x80000001;\n        puStack40 = 0x411beb;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n        if (iVar1 == 0) {\n            puStack40 = &fcn.00411ba5::var_4h;\n            var_4h = 0x1000;\n            puStack44 = &fcn.00411ba5::var_100ch;\n            puStack48 = &fcn.00411ba5::var_ch;\n            uStack52 = 0;\n            puStack56 = &stack0xffffdff0;\n            puStack60 = hKey;\n            puStack64 = 0x411c17;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)();\n            if (iVar1 == 0) {\n                var_4h = var_4h >> 1;\n                uVar2 = var_4h;\n                if (0x7fe < var_4h) {\n                    uVar2 = 0x7ff;\n                }\n                puStack64 = arg_ch;\n                *(&fcn.00411ba5::var_100ch + uVar2 * 2) = 0;\n                puStack68 = &fcn.00411ba5::var_100ch;\n                uStack72 = arg_8h;\n                uStack76 = 0x411c4a;\n                fcn.0040694c();\n            }\n            puStack64 = hKey;\n            puStack68 = 0x411c53;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        }\n    }\n    return;\n}\n",
        "token_count": 672
    },
    "00411e7e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t * fcn.00411e7e(void)\n\n{\n    int16_t *arg_8h;\n    int16_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_stack_00002008;\n    char cStack21;\n    uint uStack20;\n    \n    fcn.004154b0();\n    uStack20 = 0x80000;\n    arg_8h = fcn.0041c47d();\n    if (arg_8h == NULL) {\n        uStack20 = 0x411ea7;\n        fcn.004018c4();\n    }\n    *arg_8h = 0;\n    iVar3 = 0;\n    do {\n        do {\n            uStack20 = 0x1000;\n            iVar2 = fcn.00411d04();\n            *in_stack_00002008 = iVar2;\n            if (iVar2 == 0) {\n                return arg_8h;\n            }\n        } while ((*arg_8h == 0) && (uStack20 == 0x7b));\n        if (uStack20 == 0x7d) {\n            return arg_8h;\n        }\n        iVar2 = fcn.0041a023(&stack0xffffffec);\n        if (0x3fffb < iVar2 + iVar3) {\n            return arg_8h;\n        }\n        fcn.0041dae7(arg_8h, &stack0xffffffec);\n        iVar3 = fcn.0041a023(arg_8h);\n        if (iVar3 != 0) {\n            piVar1 = arg_8h + iVar3 + -1;\n            do {\n                if (*piVar1 != 0x20) break;\n                piVar1 = piVar1 + -1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        cStack21 = &stack0x00000003 >> 0x18;\n        if (cStack21 == '\\0') {\n            fcn.0041cfbf(arg_8h + iVar3, 0x429f1c);\n        }\n    } while( true );\n}\n",
        "token_count": 493
    },
    "00412166": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412166(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x44f954 == '\\0') && (*param_2 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00401b14(0x467248, 0x1000, param_2, 0, &stack0x0000000c);\n        fcn.004119df(0x42ada0, 0x467248);\n        if ((iVar1 != 0) && (((*_sym.imp.KERNEL32.dll_SetLastError)(iVar1),  iVar1 == 0x20 || (iVar1 == 0x21)))) {\n            *0x45ae04 = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00412ed8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412ed8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_stack_00002004;\n    uchar *puVar3;\n    uint32_t uStack12;\n    \n    fcn.004154b0();\n    uStack12 = 0x1000;\n    iVar2 = 0;\n    puVar3 = *0x10;\n    iVar1 = fcn.00406679(in_stack_00002004);\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        iVar2 = iVar2 + 1;\n        if ((iVar2 != 1) && ((uStack12 == 0x2f || (uStack12 == 0x2d)))) {\n            iVar1 = fcn.00407d5e(uStack12 >> 0x10);\n            if (iVar1 == 0x44) {\ncode_r0x00412fd9:\n                fcn.0040694c();\n            }\n            else if (iVar1 == 0x45) {\n                iVar1 = fcn.00407d5e(uStack12 & 0xffff);\n                if ((iVar1 == 0x4c) && (puVar3 >> 0x10 == 0)) {\n                    *0x458d89 = 1;\n                }\n            }\n            else if (iVar1 == 0x50) {\n                fcn.00405a25(&uStack12);\n            }\n            else if (iVar1 == 0x53) {\n                iVar1 = fcn.00407d5e(uStack12 & 0xffff);\n                if ((iVar1 == 0) || (iVar1 == 0x31)) {\n                    *0x458d84 = 1;\n                }\n                else {\n                    if (iVar1 != 0x32) {\n                        if (iVar1 == 0x50) goto code_r0x00412fd9;\n                        goto code_r0x00412fde;\n                    }\n                    *0x458d84 = 2;\n                }\n                *0x45ae05 = 1;\n            }\n        }\ncode_r0x00412fde:\n        iVar1 = fcn.00406679();\n    } while( true );\n}\n",
        "token_count": 502
    },
    "00413051": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_15h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: lpFileOp\n// WARNING: Variable defined which should be unmapped: hKey\n\nvoid __cdecl fcn.00413051(uint hDlg, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    ushort *puVar6;\n    int32_t unaff_EBP;\n    int32_t iVar7;\n    int16_t *piVar8;\n    int16_t *piVar9;\n    int16_t iVar10;\n    int16_t *piVar11;\n    uint *in_FS_OFFSET;\n    bool bVar12;\n    uint var_1844h;\n    uint lpExistingFileName;\n    uint var_444h;\n    uint var_10ch;\n    uint lpFileOp;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_34h;\n    int32_t iVar13;\n    uint var_24h;\n    uint var_20h;\n    uint hKey;\n    uint var_15h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00415488();\n    fcn.004154b0();\n    if (*(unaff_EBP + 0xc) != 0) {\n        iVar2 = fcn.00411d04(*(unaff_EBP + 0xc), unaff_EBP + -0xf894, unaff_EBP + -0x588c, unaff_EBP + -0xd, \n                             unaff_EBP + -0x15, 0x1000);\n        *(unaff_EBP + 0xc) = iVar2;\n        if (iVar2 != 0) {\n            iVar2 = *(unaff_EBP + 0x10);\ncode_r0x004130a5:\n            iVar7 = unaff_EBP + -0x1b894;\n            piVar11 = 0x6;\n            do {\n                iVar13 = iVar7;\n                fcn.00411aaa();\n                iVar7 = iVar7 + 0x2000;\n                piVar11 = piVar11 + -1;\n                piVar8 = piVar11;\n            } while (piVar11 != NULL);\ncode_r0x004130cd:\n            iVar7 = fcn.00407d6d(iVar13, *(piVar8 * 4 + 0x434624), unaff_EBP + -0xf894);\n            if (iVar7 != 0) goto code_r0x004130e4;\n    // switch table (14 cases) at 0x413d2d\n            switch(piVar8) {\n            case NULL:\n                if (iVar2 == 2) {\n                    fcn.0041111d(unaff_EBP + -0x788c, 0x800);\n                    fcn.00403825(unaff_EBP + -0x788c, unaff_EBP + -0x588c, unaff_EBP + -0xd894, 0x800);\n                    fcn.00402abe();\n                    *(unaff_EBP + -4) = 0;\n                    fcn.00402bf8(unaff_EBP + -0xd894);\n                    fcn.00401b85();\n                    goto code_r0x004132a1;\n                }\n                goto code_r0x00413ceb;\n            case 0x1:\n                if (iVar2 == 0) {\n                    bVar12 = *0x46721c == NULL;\n                    if (*0x46721c != NULL) {\n                        fcn.0041dae7(*0x46721c, L\"<br>\");\n                    }\n                    cVar1 = *(unaff_EBP + -0xd);\n                    if (cVar1 == '\\0') {\n                        iVar2 = fcn.00411e7e(unaff_EBP + 0xc);\n                    }\n                    else {\n                        iVar2 = unaff_EBP + -0x588c;\n                    }\n                    if (!bVar12) {\n                        piVar11 = fcn.0041a023(*0x46721c);\n                    }\n                    iVar7 = fcn.0041a023(iVar2);\n                    puVar6 = fcn.0041c488(*0x46721c, (iVar7 + piVar11) * 2 + 10);\n                    if (puVar6 != NULL) {\n                        *0x46721c = puVar6;\n                        if (bVar12) {\n                            *puVar6 = 0;\n                        }\n                        fcn.0041dae7(puVar6, iVar2);\n                    }\n                    if (cVar1 == '\\0') {\n                        fcn.0041a299(iVar2);\n                    }\n                }\n                goto code_r0x00413ceb;\n            case 0x2:\n                if (iVar2 == 0) {\n                    (*_sym.imp.USER32.dll_SetWindowTextW)(*(unaff_EBP + 8), unaff_EBP + -0x588c);\n                }\n                goto code_r0x00413ceb;\n            case 0x3:\n                if ((iVar2 != 0) || (*0x458d8a != 0)) goto code_r0x00413ceb;\n                piVar11 = unaff_EBP + -0x588c;\n                *(unaff_EBP + -0x1044) = 0;\n                if (*(unaff_EBP + -0x588c) == 0x22) {\n                    piVar11 = unaff_EBP + -0x588a;\n                }\n                uVar4 = fcn.0041a023(piVar11);\n                if (0x7ff < uVar4) goto code_r0x00413ceb;\n                iVar10 = *piVar11;\n                if (iVar10 == 0x2e) {\n                    if (piVar11[1] == 0x5c) {\n                        if (piVar11[2] == 0) goto code_r0x00413ceb;\n                        var_34h = unaff_EBP + -0x1044;\n                        fcn.0040694c(var_34h, piVar11 + 2, 0x800);\n                    }\n                    else {\ncode_r0x00413413:\n                        if ((iVar10 != 0) && (piVar11[1] == 0x3a)) goto code_r0x004134f2;\n                        var_34h = 0;\n                        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)\n                                          (0x80000002, L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", 0, 1, \n                                           unaff_EBP + -0x1c);\n                        if (iVar2 == 0) {\n                            *(unaff_EBP + -0x14) = 0x1000;\n                            (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                                      (*(unaff_EBP + -0x1c), L\"ProgramFilesDir\", 0, unaff_EBP + -0x24, \n                                       unaff_EBP + -0x1044, unaff_EBP + -0x14);\n                            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x1c));\n                            uVar4 = *(unaff_EBP + -0x14) >> 1;\n                            if (0x7fe < uVar4) {\n                                uVar4 = 0x7ff;\n                            }\n                            *(unaff_EBP + -0x1044 + uVar4 * 2) = 0;\n                        }\n                        if ((*(unaff_EBP + -0x1044) != 0) &&\n                           (iVar2 = fcn.0041a023(unaff_EBP + -0x1044),  *(unaff_EBP + -0x1046 + iVar2 * 2) != 0x5c)) {\n                            var_34h = unaff_EBP + -0x1044;\n                            fcn.00406924();\n                        }\n                        iVar2 = fcn.0041a023(piVar11);\n                        iVar7 = fcn.0041a023(unaff_EBP + -0x1044);\n                        if (iVar2 + iVar7 < 0x7ff) {\n                            var_34h = unaff_EBP + -0x1044;\n                            fcn.00406924();\n                        }\n                    }\n                }\n                else {\n                    if (iVar10 != 0x5c) goto code_r0x00413413;\ncode_r0x004134f2:\n                    var_34h = unaff_EBP + -0x1044;\n                    fcn.0040694c(var_34h, piVar11, 0x800);\n                }\n                puVar6 = fcn.00417024(unaff_EBP + -0x1044, 0x22);\n                if ((puVar6 != NULL) && (puVar6[1] == 0)) {\n                    *puVar6 = 0;\n                }\n                fcn.0040694c(0x458d8a, unaff_EBP + -0x1044, 0x800, var_34h);\n                fcn.00411ba5(unaff_EBP + -0x1044, 0x800);\n                uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(*(unaff_EBP + 8), 0x66);\n                (*_sym.imp.USER32.dll_SetWindowTextW)(uVar5, unaff_EBP + -0x1044);\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar5, 0x143, 0, 0x458d8a);\n                iVar2 = fcn.0041c37b(0x458d8a, unaff_EBP + -0x1044);\n                if (iVar2 != 0) {\n                    (*_sym.imp.USER32.dll_SendMessageW)(uVar5, 0x143, 0, unaff_EBP + -0x1044);\n                }\n                goto code_r0x00413ceb;\n            case 0x4:\n                if (*0x458d84 != 1) {\n                    cVar1 = fcn.00406782(*(unaff_EBP + -0x588c));\n                    if (cVar1 == '\\0') {\n                        *0x458d84 = 2;\n                    }\n                    else {\n                        *0x458d84 = *(unaff_EBP + -0x588c) - 0x30;\n                    }\n                }\n                goto code_r0x00413ceb;\n            case 0x5:\n                iVar10 = *(unaff_EBP + -0x588c);\n                if (iVar10 == 0) {\ncode_r0x00413617:\n                    *0x44f957 = 0;\n                    *0x44f960 = 1;\n                }\n                else {\n                    if (iVar10 == 0x30) {\n                        *0x44f957 = 0;\n                    }\n                    else {\n                        if (iVar10 == 0x31) goto code_r0x00413617;\n                        if (iVar10 != 0x32) goto code_r0x00413ceb;\n                        *0x44f957 = 1;\n                    }\n                    *0x44f960 = 0;\n                }\n                goto code_r0x00413ceb;\n            case 0x6:\n            case 0x9:\n                *0x45ae07 = 1;\n                *(unaff_EBP + -0x14) = unaff_EBP + -0x588c;\n                if ((*(unaff_EBP + -0x588c) == 0x3c) &&\n                   (puVar6 = fcn.00416990(unaff_EBP + -0x588a, 0x3e),  puVar6 != NULL)) {\n                    *(unaff_EBP + -0x14) = puVar6 + 1;\n                    *puVar6 = 0;\n                    iVar2 = fcn.00411aaa(unaff_EBP + -0x588a, unaff_EBP + -0x10c, 100);\n                    *(unaff_EBP + -0x20) = iVar2;\n                    while ((iVar2 != 0 && (*(unaff_EBP + -0x10c) != 0))) {\n                        fcn.00407d6d(unaff_EBP + -0x10c, 0x42b0a0);\n                        fcn.00407d6d(unaff_EBP + -0x10c, 0x42b0ac);\n                        fcn.00407d6d(unaff_EBP + -0x10c, 0x42b0b4);\n                        iVar2 = fcn.00411aaa();\n                    }\n                }\n                if (*(unaff_EBP + 0x10) == 5) {\n                    if (piVar8 == 0x9) {\ncode_r0x00413760:\n                        fcn.004140af();\n                    }\n                }\n                else if ((*(unaff_EBP + 0x10) == 4) && (piVar8 == 0x6)) goto code_r0x00413760;\n                goto code_r0x00413ceb;\n            case 0x7:\n                goto code_r0x00413799;\n            case 0x8:\n                if (iVar2 == 3) {\n                    if (*(unaff_EBP + -0x588c) != 0) {\n                        *0x467224 = fcn.0041da86(unaff_EBP + -0x588c);\n                    }\n                    *0x467220 = fcn.00411e7e(unaff_EBP + 0xc);\n                }\n                *0x45ae06 = 1;\n                goto code_r0x00413ceb;\n            case 0xa:\n                if (iVar2 == 6) {\n                    *(unaff_EBP + -0x2844) = 0;\n                    iVar2 = fcn.0041de4a(*(unaff_EBP + -0x1b894));\n                    if (iVar2 == 0x50) {\n                        *(unaff_EBP + -0x14) = 2;\n                        uVar5 = 0x45496a;\n                    }\n                    else if (iVar2 == 0x54) {\n                        *(unaff_EBP + -0x14) = 7;\n                        uVar5 = 0x45396a;\n                    }\n                    else {\n                        *(unaff_EBP + -0x14) = 0x10;\n                        uVar5 = 0x45596a;\n                    }\n                    fcn.0040694c(unaff_EBP + -0x2844, uVar5, 0x800);\n                    *(unaff_EBP + -0x9894) = 0;\n                    *(unaff_EBP + -0x1844) = 0;\n                    fcn.0040694c(unaff_EBP + -0x688c, unaff_EBP + -0x19894, 0x800);\n                    if (*(unaff_EBP + -0x688c) == 0x22) {\n                        fcn.0040694c(unaff_EBP + -0x688c, unaff_EBP + -0x19892, 0x800);\n                        puVar6 = fcn.00416990(unaff_EBP + -0x688a, 0x22);\n                        if (puVar6 != NULL) {\n                            *puVar6 = 0;\n                            fcn.0040694c(unaff_EBP + -0x1844, puVar6 + 1, 0x400);\n                        }\n                        goto code_r0x00413b38;\n                    }\n                    cVar1 = fcn.00402780(unaff_EBP + -0x688c);\n                    if (cVar1 != '\\0') goto code_r0x00413b38;\n                    iVar10 = *(unaff_EBP + -0x688c);\n                    piVar8 = unaff_EBP + -0x688c;\n                    if (iVar10 == 0) goto code_r0x00413b38;\n                    goto code_r0x00413a8a;\n                }\n                goto code_r0x00413ceb;\n            case 0xb:\n                if (iVar2 == 7) {\n                    *0x458d88 = 1;\n                }\n                goto code_r0x00413ceb;\n            case 0xc:\n                iVar2 = fcn.0041de4a(*(unaff_EBP + -0x588c));\n                if (iVar2 == 0x46) {\n                    *0x44f961 = 1;\n                }\n                else if (iVar2 == 0x55) {\n                    *0x44f962 = 1;\n                }\n                else {\n                    *0x44f961 = 0;\n                    *0x44f962 = 0;\n                }\n                goto code_r0x00413ceb;\n            case 0xd:\n                *0x46722c = 1;\n                if (*(unaff_EBP + -0x588c) != 0) {\n                    *0x434608 = fcn.00407d59(unaff_EBP + -0x588c);\n                }\n            default:\n                goto code_r0x00413ceb;\n            }\n        }\n    }\ncode_r0x00413d1f:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\ncode_r0x004130e4:\n    piVar8 = piVar8 + 1;\n    if (0xd < piVar8) goto code_r0x00413ceb;\n    goto code_r0x004130cd;\ncode_r0x00413a8a:\n    do {\n        uVar5 = 0x20;\n        if ((iVar10 == 0x20) || (uVar5 = 0x2f,  iVar10 == 0x2f)) {\n            *piVar8 = 0;\n            cVar1 = fcn.00402780(uVar5, unaff_EBP + -0x688c);\n            if (cVar1 != '\\0') {\n                fcn.00402792(unaff_EBP + -0x688c);\n                cVar1 = fcn.004027ed();\n                if (cVar1 == '\\0') {\n                    piVar9 = piVar8;\n                    if (iVar10 == 0x2f) {\n                        *(unaff_EBP + -0x1844) = 0x2f;\n                    }\n                    else {\n                        do {\n                            piVar9 = piVar9 + 1;\n                        } while (*piVar9 == 0x20);\n                    }\n                    fcn.0040694c();\n                    *piVar8 = iVar10;\n                    piVar11 = piVar8;\n                    piVar8 = piVar9;\n                    goto code_r0x00413b12;\n                }\n            }\n            *piVar8 = iVar10;\n        }\ncode_r0x00413b12:\n        piVar8 = piVar8 + 1;\n        iVar10 = *piVar8;\n    } while (iVar10 != 0);\n    if (piVar11 != NULL) {\n        *piVar11 = 0;\n    }\ncode_r0x00413b38:\n    if (*(unaff_EBP + -0x11894) != 0) {\n        fcn.00403216(unaff_EBP + -0x11894, unaff_EBP + -0x9894, 0x800);\n    }\n    fcn.00403216(unaff_EBP + -0x688c, unaff_EBP + -0xb894, 0x800);\n    if (*(unaff_EBP + -0x2844) == 0) {\n        fcn.00411e15(unaff_EBP + -0x2844, *(unaff_EBP + -0x14));\n    }\n    fcn.004031e2(unaff_EBP + -0x2844, 0x800);\n    if (*(unaff_EBP + -0x17894) != 0) {\n        fcn.00406924(unaff_EBP + -0x2844, unaff_EBP + -0x17894, 0x800);\n        fcn.004031e2(unaff_EBP + -0x2844, 0x800);\n    }\n    fcn.0040694c(unaff_EBP + -0xc894, unaff_EBP + -0x2844, 0x800);\n    iVar2 = unaff_EBP + -0x13894;\n    if (*(unaff_EBP + -0x13894) == 0) {\n        iVar2 = unaff_EBP + -0x19894;\n    }\n    uVar5 = fcn.00403919(iVar2, 0x800);\n    fcn.00406924(unaff_EBP + -0x2844, uVar5);\n    iVar2 = fcn.0040349e(unaff_EBP + -0x2844);\n    if ((iVar2 == 0) || (iVar7 = fcn.00407d6d(iVar2, L\".lnk\"),  iVar7 != 0)) {\n        iVar2 = unaff_EBP + -0x2844;\n        fcn.00406924();\n    }\n    fcn.00402651(unaff_EBP + -0x2844, 1, 0, iVar2);\n    fcn.0040694c(unaff_EBP + -0xa894, unaff_EBP + -0xb894, 0x800);\n    fcn.00403963(unaff_EBP + -0xa894);\n    fcn.00410f5a(0, unaff_EBP + -0xb894, unaff_EBP + -0x2844, -(*(unaff_EBP + -0xa894) != 0) & unaff_EBP - 0xa894U, \n                 -(*(unaff_EBP + -0x15894) != 0) & unaff_EBP - 0x15894U, \n                 -(*(unaff_EBP + -0x9894) != 0) & unaff_EBP - 0x9894U, \n                 -(*(unaff_EBP + -0x1844) != 0) & unaff_EBP - 0x1844U);\n    if (*(unaff_EBP + -0xc894) != 0) {\n        (*_sym.imp.SHELL32.dll_SHChangeNotify)(0x1000, 5, unaff_EBP + -0xc894, 0);\n    }\n    goto code_r0x00413ceb;\ncode_r0x00413799:\n    if (iVar2 != 1) {\n        if (iVar2 == 7) {\n            if (*0x458d84 == 0) {\n                *0x458d84 = 2;\n            }\n            *0x457d80 = 1;\n        }\n        goto code_r0x00413ceb;\n    }\n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x800, unaff_EBP + -0x788c);\n    fcn.004031e2(unaff_EBP + -0x788c, 0x800);\n    var_3ch = 0;\n    while( true ) {\n        fcn.00402aa2(0x457d82, 0x800, L\"%s%s%u\", unaff_EBP + -0x788c, *0x434604, var_3ch);\n        cVar1 = fcn.00402780(0x457d82);\n        if (cVar1 == '\\0') break;\n        var_3ch = var_3ch + 1;\n    }\n    (*_sym.imp.USER32.dll_SetDlgItemTextW)(*(unaff_EBP + 8), 0x66, 0x457d82);\n    if ((*(unaff_EBP + -0x588c) == 0) || (*0x45ae05 != '\\0')) goto code_r0x00413ceb;\n    *(unaff_EBP + -0x444) = 0;\n    uVar5 = 0x2c;\n    iVar2 = fcn.00416990(unaff_EBP + -0x588c, 0x2c);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n        iVar10 = *(unaff_EBP + -0x588c);\n        while (iVar10 != 0) {\n            if (iVar10 == 0x40) {\n                uVar5 = 0x200;\n                fcn.0040694c();\n                *(unaff_EBP + -0x588c + iVar2 * 2) = 0;\n                break;\n            }\n            iVar7 = iVar2 * 2;\n            iVar2 = iVar2 + 1;\n            iVar10 = *(unaff_EBP + -0x588a + iVar7);\n        }\n    }\n    if (*(unaff_EBP + -0x444) == 0) {\n        fcn.0040694c(unaff_EBP + -0x588c, unaff_EBP + -0x1b894, 0x1000);\n        fcn.0040694c(uVar5, unaff_EBP + -0x19894, 0x200);\n    }\n    fcn.004118e4(unaff_EBP + -0x588c);\n    *(unaff_EBP + -0x488c) = 0;\n    iVar2 = fcn.004112b4(*(unaff_EBP + 8), unaff_EBP + -0x588c, unaff_EBP + -0x444, 0x24);\n    if (iVar2 != 6) {\n        *0x44f954 = 1;\n        *0x457d82 = 0;\n        (*_sym.imp.USER32.dll_EndDialog)(*(unaff_EBP + 8), 1);\n    }\n    goto code_r0x00413ceb;\ncode_r0x004132a1:\n    uVar5 = 0;\n    cVar1 = fcn.00402b4b(unaff_EBP + -0x388c, 0);\n    if (cVar1 != '\\0') {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(unaff_EBP + -0x388c, 0);\n        if (*(unaff_EBP + -0x2880) != '\\0') {\n            fcn.00403502(unaff_EBP + -0x788c, unaff_EBP + -0x1044, 0x800);\n            fcn.004031e2(uVar5, 0x800);\n            uVar4 = fcn.0041a023(unaff_EBP + -0x788c);\n            if (((uVar4 < 4) || (uVar3 = fcn.0041a023(unaff_EBP + -0x1044),  uVar4 <= uVar3)) &&\n               (cVar1 = fcn.004037e6(unaff_EBP + -0x588c),  cVar1 != '\\0')) goto code_r0x004132bc;\n            iVar2 = fcn.0041a023(unaff_EBP + -0x388c);\n            *(unaff_EBP + -0x388a + iVar2 * 2) = 0;\n            fcn.00416480(unaff_EBP + -0x44, 0, 0x1e);\n            *(unaff_EBP + -0x40) = 3;\n            *(unaff_EBP + -0x34) = 0x14;\n            *(unaff_EBP + -0x3c) = unaff_EBP + -0x388c;\n            (*_sym.imp.SHELL32.dll_SHFileOperationW)(unaff_EBP + -0x44);\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(unaff_EBP + -0x388c);\n        if ((iVar2 != -1) && (iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(unaff_EBP + -0x388c),  iVar2 == 0)) {\n            iVar2 = 0;\n            while( true ) {\n                fcn.00402aa2(unaff_EBP + -0x1044, 0x800, L\"%s.%d.tmp\", unaff_EBP + -0x388c, iVar2);\n                iVar7 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(unaff_EBP + -0x1044);\n                if (iVar7 == -1) break;\n                iVar2 = iVar2 + 1;\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_MoveFileW)(unaff_EBP + -0x388c, unaff_EBP + -0x1044);\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_MoveFileExW)(unaff_EBP + -0x1044, 0, 4);\n            }\n        }\n        goto code_r0x004132a1;\n    }\ncode_r0x004132bc:\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00402ad4();\ncode_r0x00413ceb:\n    iVar7 = fcn.00411d04();\n    iVar2 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + 0xc) = iVar7;\n    if (iVar7 == 0) goto code_r0x00413d1f;\n    goto code_r0x004130a5;\n}\n",
        "token_count": 6717
    },
    "004140af": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004140af(char16_t *param_1, uint param_2, uint param_3, uint param_4, char16_t *param_5, char16_t *param_6, \n                 uint param_7, uint param_8)\n\n{\n    bool bVar1;\n    char16_t *pcVar2;\n    uint uVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    char16_t cVar9;\n    int32_t in_stack_00001024;\n    char in_stack_0000102c;\n    char in_stack_00001030;\n    char16_t *in_stack_00001048;\n    uint in_stack_0000104c;\n    char in_stack_00001050;\n    uchar *puStack24;\n    char16_t *pcStack20;\n    \n    fcn.004154b0();\n    bVar1 = false;\n    if ((*in_stack_00001048 != L'\\0') && (uVar5 = fcn.0041a023(in_stack_00001048),  uVar5 < 0x7f6)) {\n        puStack24 = &stack0x00000004;\n        pcStack20 = NULL;\n        uVar3 = in_stack_0000104c;\n        fcn.00416480();\n        param_8 = uVar3;\n        param_1 = 0x3c;\n        param_2 = 0x1c0;\n        if (in_stack_00001050 != '\\0') {\n            param_2 = 0x5c0;\n        }\n        cVar9 = *in_stack_00001048;\n        iVar8 = 0;\n        pcStack20 = in_stack_00001048;\n        param_5 = in_stack_00001048;\n        if (cVar9 != L'\\\"') goto code_r0x0041417b;\n        pcStack20 = in_stack_00001048 + 1;\n        param_5 = pcStack20;\n        do {\n            if (cVar9 == L'\\\"') {\n                do {\n                    iVar8 = iVar8 + 1;\n                    if (in_stack_00001048[iVar8] == L'\\0') goto code_r0x00414157;\n                } while (in_stack_00001048[iVar8] != L'\\\"');\n                in_stack_00001048[iVar8] = L' ';\n            }\ncode_r0x00414157:\n            pcVar2 = in_stack_00001048 + iVar8 + 1;\n            if (in_stack_00001048[iVar8] == L' ') {\n                in_stack_00001048[iVar8] = L'\\0';\n                break;\n            }\n            if (*pcVar2 == L'/') break;\n            iVar8 = iVar8 + 1;\n            cVar9 = in_stack_00001048[iVar8];\ncode_r0x0041417b:\n            pcVar2 = param_6;\n        } while (cVar9 != L'\\0');\n        param_6 = pcVar2;\n        if ((((param_6 == NULL) || (*param_6 == L'\\0')) && (in_stack_00001050 == '\\0')) && (*0x459d8a != 0)) {\n            param_6 = 0x459d8a;\n        }\n        puStack24 = 0x4141b3;\n        iVar8 = fcn.0040349e();\n        if (iVar8 != 0) {\n            pcStack20 = L\".inf\";\n            puStack24 = iVar8;\n            iVar6 = fcn.00407d6d();\n            if (iVar6 == 0) {\n                param_1 = L\"Install\";\n            }\n        }\n        uVar5 = 0x4141da;\n        cVar4 = fcn.00402780();\n        if (cVar4 != '\\0') {\n            uVar5 = 0x800;\n            fcn.00403216(param_1, &stack0x00000030, 0x800);\n        }\n        iVar6 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&stack0xffffffe8);\n        if (iVar6 != 0) {\n            iVar6 = in_stack_00001024;\n            if (((*0x457d80 != '\\0') || (in_stack_00001030 != '\\0')) || (*0x46722c != '\\0')) {\n                if ((in_stack_00001024 != 0) &&\n                   (iVar7 = (*_sym.imp.USER32.dll_IsWindowVisible)(in_stack_00001024),  iVar7 != 0)) {\n                    (*_sym.imp.USER32.dll_ShowWindow)(in_stack_00001024, 0);\n                    bVar1 = true;\n                }\n                (*_sym.imp.USER32.dll_WaitForInputIdle)(param_7, 2000);\n                fcn.00414533(param_8);\n                if (((*0x46722c != '\\0') && (in_stack_00001030 == '\\0')) &&\n                   (iVar7 = (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(param_7, &stack0xffffffe0),  iVar7 != 0)) {\n                    if (*0x467230 < uVar5) {\n                        *0x467230 = uVar5;\n                    }\n                    *0x46722d = 1;\n                }\n            }\n            cVar4 = iVar6;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(param_7);\n            if (((iVar8 == 0) || (iVar8 = fcn.00407d6d(iVar8, L\".exe\"),  iVar8 != 0)) &&\n               ((cVar4 = in_stack_0000102c,  *0x457d80 != '\\0' && ((cVar4 == '\\0' && (*0x46722c == '\\0')))))) {\n                *0x467234 = 7000;\n            }\n            if ((bVar1) && (cVar4 != '\\0')) {\n                (*_sym.imp.USER32.dll_ShowWindow)(in_stack_00001024, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1364
    },
    "00414313": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00414313(uint param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    *0x456d7c = 0;\n    uVar2 = 1;\n    *0x44f955 = 1;\n    *0x44f956 = 1;\n    (*_sym.imp.USER32.dll_ShowWindow)(param_1, 1);\n    uVar1 = 2;\n    fcn.00401183(uVar2, 2, 0);\n    if (((*0x467228 == 0) && (*0x44f963 == '\\0')) || (*0x44f95c == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x111, 1, 0);\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "00414443": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hKey\n\nvoid __cdecl fcn.00414443(uint lpData)\n\n{\n    int32_t iVar1;\n    uint lpValueName;\n    uint uStackY88;\n    uint uStackY84;\n    uint *puStackY76;\n    uint uStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint var_8h;\n    uint hKey;\n    \n    fcn.004154b0();\n    if ((*0x458d88 != '\\0') && (*0x458d8a != 0)) {\n        fcn.00413004();\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)();\n        if (iVar1 == 0) {\n            uStackY64 = 0x4144a9;\n            fcn.0041a023(lpData);\n            uStackY64 = lpData;\n            puStackY76 = &fcn.00414443::lpValueName;\n            uStackY68 = 1;\n            uStackY72 = 0;\n            uStackY84 = 0x4144c8;\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExW)();\n            uStackY88 = 0x4144d1;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        }\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "00414599": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00414599(uint dwInitParam, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    *0x466208 = arg_10h;\n    *0x46620c = arg_14h;\n    *0x45adac = arg_18h;\n    if (*0x44f960 == '\\0') {\n        if (*0x44f957 == '\\0') {\n            do {\n                iVar1 = (*_sym.imp.USER32.dll_DialogBoxParamW)\n                                  (*0x456d78, L\"REPLACEFILEDLG\", *0x44f958, 0x412bf0, dwInitParam);\n                if (iVar1 != 4) {\n                    return iVar1;\n                }\n                iVar2 = (*_sym.imp.USER32.dll_DialogBoxParamW)(*0x456d74, L\"RENAMEDLG\", *0x44f950, 0x413f20);\n            } while (iVar2 == 0);\n        }\n        else {\n            iVar1 = 1;\n        }\n    }\n    else {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 279
    },
    "0041465c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041465c(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint var_1000h;\n    uint uStackY60;\n    \n    fcn.004154b0();\n    bVar3 = true;\n    if (*0x45ad98 == '\\0') {\n        if (arg_8h == 2) {\n            (*_sym.imp.USER32.dll_IsWindowVisible)();\n        }\n        fcn.0040358f(arg_ch, arg_10h, &fcn.0041465c::var_1000h, 0x800);\n        iVar2 = (*_sym.imp.USER32.dll_DialogBoxParamW)();\n        if (iVar2 == 0) {\n            uVar1 = fcn.00405a25();\n            *0x44f954 = 1;\n        }\n        else {\n            uVar1 = fcn.0040e159(0x4661f8);\n        }\n        bVar3 = iVar2 != 0;\n        if (*(arg_14h + 0xc) != '\\0') {\n            uStackY60 = 0x41470f;\n            uVar1 = fcn.0040e159(arg_14h);\n        }\n    }\n    else {\n        uVar1 = fcn.0040e159(0x45ad8c);\n    }\n    return uVar1 & 0xffffff00 | bVar3;\n}\n",
        "token_count": 348
    },
    "0041f6da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f6da(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x469c64, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0041f7f2();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0041f779(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "00415f73": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00415f73(void)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar1 != NULL) && (*piVar1 == 0x5a4d)) && (piVar2 = *(piVar1 + 0x1e) + piVar1,  *piVar2 == 0x4550)) &&\n       ((piVar1 = 0x10b,  *(piVar2 + 6) == 0x10b && (0xe < piVar2[0x1d])))) {\n        return CONCAT31(1, piVar2[0x3a] != 0);\n    }\n    return piVar1 & 0xffffff00;\n}\n",
        "token_count": 188
    },
    "00416990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.00416990(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    \n    if (0 < *0x4692a8) {\n        auVar1 = pshuflw(ZEXT216(arg_ch), ZEXT216(arg_ch), 0);\n        do {\n            if ((arg_8h & 0xfff) < 0xff1) {\n                uVar3 = SUB162(auVar1, 0);\n                uVar4 = SUB162(auVar1 >> 0x10, 0);\n                auVar2 = CONCAT214(-(*0x42b5fe == arg_8h[7]), \n                                   CONCAT212(-(*0x42b5fc == arg_8h[6]), \n                                             CONCAT210(-(*0x42b5fa == arg_8h[5]), \n                                                       CONCAT28(-(*0x42b5f8 == arg_8h[4]), \n                                                                CONCAT26(-(*0x42b5f6 == arg_8h[3]), \n                                                                         CONCAT24(-(*0x42b5f4 == arg_8h[2]), \n                                                                                  CONCAT22(-(*0x42b5f2 == arg_8h[1]), \n                                                                                           -(*0x42b5f0 == *arg_8h)))))))\n                                  ) |\n                         CONCAT214(-(arg_8h[7] == uVar4), \n                                   CONCAT212(-(arg_8h[6] == uVar3), \n                                             CONCAT210(-(arg_8h[5] == uVar4), \n                                                       CONCAT28(-(arg_8h[4] == uVar3), \n                                                                CONCAT26(-(arg_8h[3] == uVar4), \n                                                                         CONCAT24(-(arg_8h[2] == uVar3), \n                                                                                  CONCAT22(-(arg_8h[1] == uVar4), \n                                                                                           -(*arg_8h == uVar3))))))));\n                uVar3 = SUB161(auVar2 >> 7, 0) & 1 | (SUB161(auVar2 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar2 >> 0x17, 0) & 1) << 2 | (SUB161(auVar2 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar2 >> 0x27, 0) & 1) << 4 | (SUB161(auVar2 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar2 >> 0x37, 0) & 1) << 6 | (SUB161(auVar2 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar2 >> 0x47, 0) & 1) << 8 | (SUB161(auVar2 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar2 >> 0x57, 0) & 1) << 10 | (SUB161(auVar2 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar2 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar2 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar2 >> 0x77, 0) & 1) << 0xe | SUB161(auVar2 >> 0x7f, 0) << 0xf;\n                if (uVar3 != 0) goto code_r0x00416a2c;\n                iVar5 = 0x10;\n            }\n            else {\n                if (*arg_8h == arg_ch) {\n                    return arg_8h;\n                }\n                if (*arg_8h == 0) {\n                    return NULL;\n                }\n                iVar5 = 2;\n            }\n            arg_8h = arg_8h + iVar5;\n        } while( true );\n    }\n    uVar3 = *arg_8h;\n    while ((uVar3 != 0 && (uVar3 != arg_ch))) {\n        arg_8h = arg_8h + 1;\n        uVar3 = *arg_8h;\n    }\ncode_r0x004169cb:\n    return (uVar3 != arg_ch) - 1 & arg_8h;\ncode_r0x00416a2c:\n    iVar5 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n        }\n    }\n    arg_8h = arg_8h + iVar5;\n    uVar3 = *arg_8h;\n    goto code_r0x004169cb;\n}\n",
        "token_count": 1146
    },
    "00419041": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00419041(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    code *pcVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    int32_t var_64h;\n    int32_t var_60h;\n    int32_t var_58h;\n    uint *var_54h;\n    uint var_50h;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    int32_t *var_40h;\n    uint32_t *var_3ch;\n    uint32_t *var_34h;\n    uint32_t *var_30h;\n    uint var_2ch;\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    uint32_t *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_18h = var_18h & 0xffffff00;\n    var_8h = fcn.00419fc5(arg_ch, arg_14h, arg_18h);\n    if ((var_8h < -1) || (arg_18h[1] <= var_8h)) goto code_r0x004193e0;\n    if (((*arg_8h != -0x1f928c9d) || (arg_8h[4] != 3)) ||\n       ((((arg_8h[5] != 0x19930520 && (arg_8h[5] != 0x19930521)) && (arg_8h[5] != 0x19930522)) || (arg_8h[7] != 0)))) {\n        var_4h = arg_10h;\n        goto code_r0x0041918f;\n    }\n    iVar4 = fcn.00418cfc();\n    if (*(iVar4 + 0x10) == 0) {\n        return;\n    }\n    iVar4 = fcn.00418cfc();\n    arg_8h = *(iVar4 + 0x10);\n    iVar4 = fcn.00418cfc();\n    var_18h = CONCAT31(var_18h._1_3_, 1);\n    var_4h = *(iVar4 + 0x14);\n    if ((arg_8h == NULL) ||\n       ((((*arg_8h == -0x1f928c9d && (arg_8h[4] == 3)) &&\n         ((arg_8h[5] == 0x19930520 || ((arg_8h[5] == 0x19930521 || (arg_8h[5] == 0x19930522)))))) && (arg_8h[7] == 0))))\n    goto code_r0x004193e0;\n    iVar4 = fcn.00418cfc();\n    if (*(iVar4 + 0x1c) == 0) {\ncode_r0x0041918f:\n        var_30h = arg_18h;\n        var_2ch = 0;\n        if (((*arg_8h == -0x1f928c9d) && (arg_8h[4] == 3)) &&\n           ((arg_8h[5] == 0x19930520 || ((arg_8h[5] == 0x19930521 || (arg_8h[5] == 0x19930522)))))) {\n            if (arg_18h[3] != 0) {\n                fcn.004165da(&var_40h, &var_30h, var_8h, arg_14h, arg_18h, arg_20h);\n                var_28h = var_40h;\n                var_ch = var_3ch;\n                if (var_3ch < var_34h) {\n                    var_1ch = var_3ch * 0x14;\n                    do {\n                        iVar4 = var_8h;\n                        puVar6 = *(*var_28h + 0x10) + var_1ch;\n                        puVar7 = &var_64h;\n                        var_ch = var_3ch;\n                        for (iVar5 = 5; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            *puVar7 = *puVar6;\n                            puVar6 = puVar6 + 1;\n                            puVar7 = puVar7 + 1;\n                        }\n                        if (((var_64h <= iVar4) && (iVar4 <= var_60h)) && (var_10h = 0,  var_58h != 0)) {\n                            iVar4 = arg_8h[7];\n                            var_24h = **(iVar4 + 0xc);\n                            var_20h = *(iVar4 + 0xc) + 1;\n                            var_14h = var_54h;\n                            do {\n                                var_50h = *var_14h;\n                                uStack80 = var_14h[1];\n                                uStack76 = var_14h[2];\n                                uStack72 = var_14h[3];\n                                piVar8 = var_20h;\n                                var_3ch = var_ch;\n                                for (iVar5 = var_24h; var_ch = var_3ch,  0 < iVar5; iVar5 = iVar5 + -1) {\n                                    iVar4 = fcn.0041951c(&var_50h, *piVar8, iVar4);\n                                    if (iVar4 != 0) {\n                                        fcn.00418fc1(arg_8h, arg_ch, var_4h, arg_14h, arg_18h, &var_50h, *piVar8, \n                                                     &var_64h, arg_20h, arg_24h);\n                                        var_3ch = var_ch;\n                                        goto code_r0x004192ca;\n                                    }\n                                    iVar4 = arg_8h[7];\n                                    piVar8 = piVar8 + 1;\n                                    var_3ch = var_ch;\n                                }\n                                var_10h = var_10h + 1;\n                                var_14h = var_14h + 4;\n                            } while (var_10h != var_58h);\n                        }\ncode_r0x004192ca:\n                        var_3ch = var_3ch + 1;\n                        var_1ch = var_1ch + 0x14;\n                        var_ch = var_3ch;\n                    } while (var_3ch < var_34h);\n                }\n            }\n            if (arg_1ch != '\\0') {\n                fcn.00418ae0(arg_8h);\n            }\n            if (0x19930520 < (*arg_18h & 0x1fffffff)) {\n                if (arg_18h[7] != 0) {\n                    if ((arg_18h[8] >> 2 & 1) != 0) goto code_r0x00419323;\n                    cVar3 = fcn.00419a5a(arg_8h, arg_18h[7]);\n                    if (cVar3 != '\\0') goto code_r0x0041936f;\n                    goto code_r0x004193a4;\n                }\n                if (((arg_18h[8] >> 2 & 1) != 0) && (arg_20h == 0)) {\ncode_r0x00419323:\n                    iVar4 = fcn.00418cfc();\n                    *(iVar4 + 0x10) = arg_8h;\n                    iVar4 = fcn.00418cfc();\n                    *(iVar4 + 0x14) = var_4h;\n                    goto code_r0x0041937f;\n                }\n            }\n        }\n        else if (arg_18h[3] != 0) {\n            if (arg_1ch != '\\0') goto code_r0x004193e0;\n            fcn.004193e6(arg_8h, arg_ch, var_4h, arg_14h, arg_18h, var_8h, arg_20h, arg_24h);\n        }\ncode_r0x0041936f:\n        iVar4 = fcn.00418cfc();\n        if (*(iVar4 + 0x1c) == 0) {\n            return;\n        }\n    }\n    else {\n        iVar4 = fcn.00418cfc();\n        var_ch = *(iVar4 + 0x1c);\n        iVar4 = fcn.00418cfc();\n        *(iVar4 + 0x1c) = 0;\n        cVar3 = fcn.00419a5a(arg_8h, var_ch);\n        puVar2 = var_ch;\n        if (cVar3 != '\\0') goto code_r0x0041918f;\n        arg_24h = 0;\n        arg_18h = puVar2;\n        if (0 < *var_ch) {\n            do {\n                cVar3 = fcn.004196e3(0x434ec4);\n                if (cVar3 != '\\0') goto code_r0x00419384;\n                arg_24h = arg_24h + 0x10;\n                var_10h = var_10h + 1;\n            } while (var_10h < *puVar2);\n        }\ncode_r0x0041937f:\n        fcn.0041f06f();\ncode_r0x00419384:\n        fcn.00418ae0(arg_8h);\n        fcn.004196cb();\n        fcn.00416a40(&var_3ch, 0x431cf4);\ncode_r0x004193a4:\n        iVar4 = fcn.00418cfc();\n        *(iVar4 + 0x10) = arg_8h;\n        iVar4 = fcn.00418cfc();\n        *(iVar4 + 0x14) = var_4h;\n        if (arg_24h == 0) {\n            arg_24h = arg_ch;\n        }\n        fcn.004167cd(arg_24h, arg_8h);\n        fcn.0041995a(arg_ch, arg_14h, arg_18h);\n        arg_8h_00 = fcn.00419b17(arg_18h);\n        fcn.004198d1(arg_8h_00);\n    }\ncode_r0x004193e0:\n    fcn.0041f160();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 2485
    },
    "00419855": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419855(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x30);\n    fcn.00416875(*(unaff_EBP + -0x34));\n    iVar1 = fcn.00418cfc();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x38);\n    iVar1 = fcn.00418cfc();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x3c);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x40) == 0 && (unaff_EBX != 0)))) {\n        iVar1 = fcn.00418be6(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00418ae0(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 374
    },
    "00419972": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00419972(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    code *pcVar2;\n    int32_t arg_10h_01;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00416030(0x431c10, 0x10);\n    arg_10h_01 = fcn.00419fc5(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = arg_10h_01;\n    iVar3 = fcn.00418cfc();\n    *(iVar3 + 0x18) = *(iVar3 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (arg_10h_01 != *(unaff_EBP + 0x14)) {\n        if ((arg_10h_01 < 0) || (iVar3 = *(unaff_EBP + 0x10),  *(iVar3 + 4) <= arg_10h_01)) goto code_r0x00419a54;\n        iVar1 = *(iVar3 + 8);\n        arg_10h_00 = *(iVar1 + arg_10h_01 * 8);\n        *(unaff_EBP + -0x20) = arg_10h_00;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + arg_10h_01 * 8) != 0) {\n            fcn.00419fe2(*(unaff_EBP + 8), iVar3, arg_10h_00);\n            fcn.00419b30(*(*(iVar3 + 8) + 4 + arg_10h_01 * 8), *(unaff_EBP + 8), 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        arg_10h_01 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = arg_10h_01;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00419a40();\n    if (arg_10h_01 == *(unaff_EBP + 0x14)) {\n        fcn.00419fe2(*(unaff_EBP + 8), *(unaff_EBP + 0x10), arg_10h_01);\n        *in_FS_OFFSET = *(unaff_EBP + -0x10);\n        return;\n    }\ncode_r0x00419a54:\n    fcn.0041f160();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 725
    },
    "00419a40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419a40(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00418cfc();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.00418cfc();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0041a29e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041a29e(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x434684 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.0041f7f2();\n        *puVar1 = 0x16;\n        fcn.0041a239();\n        goto code_r0x0041a3ef;\n    }\n    fcn.0041a9b9(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.0041a94f(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    iVar2 = fcn.0041ac4d();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x0041a3c7;\ncode_r0x0041a414:\n                    *(puVar1 + arg_14h + -1) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x0041a414;\n                    goto code_r0x0041a3c7;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x0041a3c7:\n            *(puVar1 + var_468h) = 0;\n        }\n    }\n    fcn.0041aa3c();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x0041a3ef:\n    fcn.004161fc(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 815
    },
    "0041a41a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041a41a(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x434684 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.0041f7f2();\n        *puVar1 = 0x16;\n        fcn.0041a239();\n        goto code_r0x0041a571;\n    }\n    fcn.0041a9b9(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.0041a984(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    iVar2 = fcn.0041ad69();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x0041a546;\ncode_r0x0041a596:\n                    *(puVar1 + arg_14h * 2 + -2) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x0041a596;\n                    goto code_r0x0041a546;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x0041a546:\n            *(puVar1 + var_468h * 2) = 0;\n        }\n    }\n    fcn.0041aa3c();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x0041a571:\n    fcn.004161fc(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 811
    },
    "0041b038": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0041b038(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h;\n    uint arg_ch;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) == 0) {\n                param_1[7] = 8;\ncode_r0x0041b070:\n                puVar5 = fcn.0041f7f2();\n                *puVar5 = 0x16;\n                fcn.0041a239();\n                return 0;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x0041b070;\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                }\n                else if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if (((((cVar4 == 'd') || (cVar4 == 'i')) || (cVar4 == 'o')) ||\n                             ((cVar4 == 'u' || (cVar4 == 'x')))) || (cVar4 == 'X')) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                }\n                else if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                }\n                else if (cVar4 == 'h') {\n                    if (*param_1[4] == 'h') {\n                        param_1[0xb] = 1;\n                        param_1[4] = param_1[4] + 1;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (cVar4 == 'l') {\n                if (*param_1[4] == 'l') {\n                    param_1[0xb] = 4;\n                    param_1[4] = param_1[4] + 1;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (cVar4 == 't') {\n                param_1[0xb] = 7;\n            }\n            else if (cVar4 == 'w') {\n                param_1[0xb] = 0xc;\n            }\n            else if (cVar4 == 'z') {\n                param_1[0xb] = 6;\n            }\n        }\n        return 1;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    iVar6 = 1;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0041b3ce:\n            param_1[8] = param_1[8] | 0x10;\n            goto code_r0x0041b3d2;\n        }\n        if ('X' < cVar4) {\n            if (cVar4 == 'Z') {\n                cVar4 = fcn.0041b85c();\n                goto code_r0x0041b36a;\n            }\n            if (cVar4 != 'a') {\n                if (cVar4 != 'c') {\n                    return 0;\n                }\ncode_r0x0041b38e:\n                cVar4 = fcn.0041bbee(0);\n                goto code_r0x0041b36a;\n            }\ncode_r0x0041b3de:\n            cVar4 = fcn.0041b922();\n            goto code_r0x0041b36a;\n        }\n        if (cVar4 != 'X') {\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0041b38e;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0041b363;\n                }\n            }\n            goto code_r0x0041b3de;\n        }\n        arg_ch = 1;\ncode_r0x0041b37a:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar4 < 'q') {\n            if (cVar4 == 'p') {\n                cVar4 = fcn.0041bef3();\n                goto code_r0x0041b36a;\n            }\n            if (cVar4 < 'h') goto code_r0x0041b3de;\n            if (cVar4 != 'i') {\n                if (cVar4 == 'n') {\n                    cVar4 = fcn.0041be60();\n                }\n                else {\n                    if (cVar4 != 'o') {\n                        return 0;\n                    }\n                    cVar4 = fcn.0041bed4();\n                }\n                goto code_r0x0041b36a;\n            }\n            goto code_r0x0041b3ce;\n        }\n        if (cVar4 == 's') {\ncode_r0x0041b363:\n            cVar4 = fcn.0041bf0b();\n            goto code_r0x0041b36a;\n        }\n        if (cVar4 != 'u') {\n            if (cVar4 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x0041b37a;\n        }\ncode_r0x0041b3d2:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar4 = fcn.0041bd16(arg_8h, arg_ch);\ncode_r0x0041b36a:\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    uVar2 = param_1[8];\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    iVar7 = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        iVar7 = iVar6;\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                iVar7 = 0;\n                if ((uVar2 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    iVar7 = iVar6;\n                }\n            }\n            else {\n                uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n            }\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n    }\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 != 'x') && (cVar4 != 'X')) || ((uVar2 >> 5 & 1) == 0)) {\n        iVar6 = 0;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar6 != '\\0') || (bVar3)) {\n        *(&uStack8 + iVar7) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack8 + iVar7 + 1) = (!bVar3 - 1U & 0xe0) + 0x78;\n        iVar7 = iVar7 + 2;\n    }\n    iVar6 = (param_1[9] - param_1[0xe]) - iVar7;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.0041a7e7(param_1 + 0x112, 0x20, iVar6, param_1 + 6);\n    }\n    fcn.0041c206(&uStack8, iVar7, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.0041a7e7(param_1 + 0x112, 0x30, iVar6, arg_14h);\n    }\n    fcn.0041c0d4(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.0041a7e7(param_1 + 0x112, 0x20, iVar6, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2332
    },
    "0041b31d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041b31d(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h;\n    uint arg_ch;\n    int32_t var_4h;\n    \n    iVar4 = 1;\n    cVar3 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar3 < 'e') {\n        if (cVar3 == 'd') {\ncode_r0x0041b3ce:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\n            goto code_r0x0041b3d2;\n        }\n        if ('X' < cVar3) {\n            if (cVar3 == 'Z') {\n                cVar3 = fcn.0041b85c();\n                goto code_r0x0041b36a;\n            }\n            if (cVar3 != 'a') {\n                if (cVar3 != 'c') {\n                    return 0;\n                }\ncode_r0x0041b38e:\n                cVar3 = fcn.0041bbee(0);\n                goto code_r0x0041b36a;\n            }\ncode_r0x0041b3de:\n            cVar3 = fcn.0041b922();\n            goto code_r0x0041b36a;\n        }\n        if (cVar3 != 'X') {\n            if (cVar3 != 'A') {\n                if (cVar3 == 'C') goto code_r0x0041b38e;\n                if (cVar3 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar3) {\n                    if (cVar3 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0041b363;\n                }\n            }\n            goto code_r0x0041b3de;\n        }\n        arg_ch = 1;\ncode_r0x0041b37a:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar3 < 'q') {\n            if (cVar3 == 'p') {\n                cVar3 = fcn.0041bef3();\n                goto code_r0x0041b36a;\n            }\n            if (cVar3 < 'h') goto code_r0x0041b3de;\n            if (cVar3 != 'i') {\n                if (cVar3 == 'n') {\n                    cVar3 = fcn.0041be60();\n                }\n                else {\n                    if (cVar3 != 'o') {\n                        return 0;\n                    }\n                    cVar3 = fcn.0041bed4();\n                }\n                goto code_r0x0041b36a;\n            }\n            goto code_r0x0041b3ce;\n        }\n        if (cVar3 == 's') {\ncode_r0x0041b363:\n            cVar3 = fcn.0041bf0b();\n            goto code_r0x0041b36a;\n        }\n        if (cVar3 != 'u') {\n            if (cVar3 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x0041b37a;\n        }\ncode_r0x0041b3d2:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar3 = fcn.0041bd16(arg_8h, arg_ch);\ncode_r0x0041b36a:\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    uVar1 = *(in_ECX + 0x20);\n    var_4h = var_4h._3_1_ << 0x18;\n    iVar5 = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        iVar5 = iVar4;\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                iVar5 = 0;\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    iVar5 = iVar4;\n                }\n            }\n            else {\n                var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n            }\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n    }\n    cVar3 = *(in_ECX + 0x31);\n    if (((cVar3 != 'x') && (cVar3 != 'X')) || ((uVar1 >> 5 & 1) == 0)) {\n        iVar4 = 0;\n    }\n    if ((cVar3 == 'a') || (cVar3 == 'A')) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((iVar4 != '\\0') || (bVar2)) {\n        *(&var_4h + iVar5) = 0x30;\n        if ((cVar3 == 'X') || (cVar3 == 'A')) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        *(&var_4h + iVar5 + 1) = (!bVar2 - 1U & 0xe0) + 0x78;\n        iVar5 = iVar5 + 2;\n    }\n    iVar4 = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - iVar5;\n    if ((uVar1 & 0xc) == 0) {\n        fcn.0041a7e7(in_ECX + 0x448, 0x20, iVar4, in_ECX + 0x18);\n    }\n    fcn.0041c206(&var_4h, iVar5, in_ECX + 0x18, *(in_ECX + 0xc));\n    arg_14h = in_ECX + 0x18;\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.0041a7e7(in_ECX + 0x448, 0x30, iVar4, arg_14h);\n    }\n    fcn.0041c0d4(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.0041a7e7(in_ECX + 0x448, 0x20, iVar4, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1684
    },
    "0041b1a1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041b1a1(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar9;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    puVar6 = *(param_1 + 0x32);\n    if (puVar6 != 0x46) {\n        if (puVar6 == 0x4e) {\n            puVar6 = *param_1 & 8;\n            if (puVar6 == NULL) {\n                param_1[7] = 8;\ncode_r0x0041b1dc:\n                puVar7 = fcn.0041f7f2();\n                *puVar7 = 0x16;\n                uVar8 = fcn.0041a239();\n                return uVar8 & 0xffffff00;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x0041b1dc;\n            if (puVar6 < 0x6b) {\n                if (puVar6 == 0x6a) {\n                    param_1[0xb] = 5;\n                }\n                else if (puVar6 == 0x49) {\n                    puVar2 = param_1[4];\n                    puVar6 = *puVar2;\n                    if ((puVar6 == 0x33) && (puVar2[1] == 0x32)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 10;\n                        param_1[4] = puVar6;\n                    }\n                    else if ((puVar6 == 0x36) && (puVar2[1] == 0x34)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 0xb;\n                        param_1[4] = puVar6;\n                    }\n                    else if (((((puVar6 == 0x64) || (puVar6 == 0x69)) || (puVar6 == 0x6f)) ||\n                             ((puVar6 == 0x75 || (puVar6 == 0x78)))) || (puVar6 == 0x58)) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (puVar6 == 0x4c) {\n                    param_1[0xb] = 8;\n                }\n                else if (puVar6 == 0x54) {\n                    param_1[0xb] = 0xd;\n                }\n                else if (puVar6 == 0x68) {\n                    puVar6 = param_1[4];\n                    if (*puVar6 == 0x68) {\n                        puVar6 = puVar6 + 1;\n                        param_1[0xb] = 1;\n                        param_1[4] = puVar6;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (puVar6 == 0x6c) {\n                puVar6 = param_1[4];\n                if (*puVar6 == 0x6c) {\n                    puVar6 = puVar6 + 1;\n                    param_1[0xb] = 4;\n                    param_1[4] = puVar6;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (puVar6 == 0x74) {\n                param_1[0xb] = 7;\n            }\n            else if (puVar6 == 0x77) {\n                param_1[0xb] = 0xc;\n            }\n            else if (puVar6 == 0x7a) {\n                param_1[0xb] = 6;\n            }\n        }\ncode_r0x0041b31a:\n        return CONCAT31(puVar6 >> 8, 1);\n    }\n    puVar6 = *param_1 & 8;\n    if (puVar6 != NULL) goto code_r0x0041b31a;\n    param_1[7] = 7;\n    uStack8 = *0x434684 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x0041b60b:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0041b60f:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0041b612:\n            cVar5 = fcn.0041bd16(arg_8h, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0041b5b7:\n                arg_8h = 0x10;\n                goto code_r0x0041b612;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x0041b5cb;\n                if (uVar9 < 0x45) goto code_r0x0041b799;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x0041b799;\n                    goto code_r0x0041b59f;\n                }\n            }\ncode_r0x0041b61b:\n            cVar5 = fcn.0041ba7c();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.0041b8bf();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x0041b61b;\n            if (uVar9 != 99) goto code_r0x0041b799;\ncode_r0x0041b5cb:\n            cVar5 = fcn.0041bc7e(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.0041bef3();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x0041b61b;\n            if (uVar9 == 0x69) goto code_r0x0041b60b;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.0041be60();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x0041b799;\n                cVar5 = fcn.0041bed4();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x0041b799;\n                arg_ch_00 = 0;\n                goto code_r0x0041b5b7;\n            }\n            goto code_r0x0041b60f;\n        }\ncode_r0x0041b59f:\n        cVar5 = fcn.0041bf7e();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x0041b799;\n    uVar8 = param_1[8];\n    uStack16 = 0;\n    uStack12 = 0;\n    arg_ch = 0;\n    if ((uVar8 >> 4 & 1) != 0) {\n        if ((uVar8 >> 6 & 1) == 0) {\n            if ((uVar8 & 1) == 0) {\n                if ((uVar8 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x0041b699;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        arg_ch = 1;\n    }\ncode_r0x0041b699:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar8 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&uStack16 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack16 + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((uVar8 & 0xc) == 0) {\n        fcn.0041a813(param_1 + 0x112, 0x20, arg_10h, param_1 + 6);\n    }\n    fcn.0041c299(&uStack16, arg_ch, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.0041a813(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0041c17b(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.0041a813(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x0041b799:\n    uVar8 = fcn.004161fc(unaff_ESI);\n    return uVar8;\n}\n",
        "token_count": 2541
    },
    "0041b54c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041b54c(int32_t param_1)\n\n{\n    int32_t *arg_14h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar6;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x434684 ^ &stack0xfffffffc;\n    uVar6 = *(param_1 + 0x32);\n    if (uVar6 < 0x65) {\n        if (uVar6 == 100) {\ncode_r0x0041b60b:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x0041b60f:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0041b612:\n            cVar5 = fcn.0041bd16(arg_8h, arg_ch_00);\n        }\n        else if (uVar6 < 0x59) {\n            if (uVar6 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0041b5b7:\n                arg_8h = 0x10;\n                goto code_r0x0041b612;\n            }\n            if (uVar6 != 0x41) {\n                if (uVar6 == 0x43) goto code_r0x0041b5cb;\n                if (uVar6 < 0x45) goto code_r0x0041b799;\n                if (0x47 < uVar6) {\n                    if (uVar6 != 0x53) goto code_r0x0041b799;\n                    goto code_r0x0041b59f;\n                }\n            }\ncode_r0x0041b61b:\n            cVar5 = fcn.0041ba7c();\n        }\n        else if (uVar6 == 0x5a) {\n            cVar5 = fcn.0041b8bf();\n        }\n        else {\n            if (uVar6 == 0x61) goto code_r0x0041b61b;\n            if (uVar6 != 99) goto code_r0x0041b799;\ncode_r0x0041b5cb:\n            cVar5 = fcn.0041bc7e(0);\n        }\n    }\n    else if (uVar6 < 0x71) {\n        if (uVar6 == 0x70) {\n            cVar5 = fcn.0041bef3();\n        }\n        else {\n            if (uVar6 < 0x68) goto code_r0x0041b61b;\n            if (uVar6 == 0x69) goto code_r0x0041b60b;\n            if (uVar6 == 0x6e) {\n                cVar5 = fcn.0041be60();\n            }\n            else {\n                if (uVar6 != 0x6f) goto code_r0x0041b799;\n                cVar5 = fcn.0041bed4();\n            }\n        }\n    }\n    else {\n        if (uVar6 != 0x73) {\n            if (uVar6 != 0x75) {\n                if (uVar6 != 0x78) goto code_r0x0041b799;\n                arg_ch_00 = 0;\n                goto code_r0x0041b5b7;\n            }\n            goto code_r0x0041b60f;\n        }\ncode_r0x0041b59f:\n        cVar5 = fcn.0041bf7e();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x0041b799;\n    uVar2 = *(param_1 + 0x20);\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    arg_ch = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x0041b699;\n            }\n            uVar6 = 0x2b;\n        }\n        else {\n            uVar6 = 0x2d;\n        }\n        var_ch = uVar6;\n        arg_ch = 1;\n    }\ncode_r0x0041b699:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.0041a813(param_1 + 0x448, 0x20, arg_10h, param_1 + 0x18);\n    }\n    fcn.0041c299(&var_ch, arg_ch, param_1 + 0x18, *(param_1 + 0xc));\n    arg_14h = param_1 + 0x18;\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.0041a813(param_1 + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0041c17b(0);\n    if ((-1 < *arg_14h) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.0041a813(param_1 + 0x448, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x0041b799:\n    fcn.004161fc(unaff_ESI);\n    return;\n}\n",
        "token_count": 1684
    },
    "0041bd16": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041bd16(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t arg_ch_00;\n    bool bVar5;\n    \n    iVar1 = fcn.0041b800(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.0041f7f2();\n                *puVar2 = 0x16;\n                uVar3 = fcn.0041a239();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x0041bdc7;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x0041bdc7;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x0041bdc7:\n    if ((((*(in_ECX + 0x20) >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar5 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar5);\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x40;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xfffffff7;\n        if (0x200 < *(in_ECX + 0x28)) {\n            *(in_ECX + 0x28) = 0x200;\n        }\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    if (iVar1 == 8) {\n        fcn.0041a75f(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.0041a6ea(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1109
    },
    "00422661": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422661(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1dh;\n    \n    if (*(unaff_EBP + -0x1d) != '\\0') {\n        fcn.00420eb1(3);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00426afe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 fcn.00426afe(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x430230 | *0x4302a0;\n        dVar7 = SUB168(in_XMM0, 0) & *0x430238 | *0x4302a8;\n        uVar1 = SUB82(*0x430250 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x430268 & dVar7;\n        dVar9 = (*0x430260 & dVar6) * *(uVar1 + 0x430860) - *0x430240;\n        dVar6 = (dVar6 - (*0x430260 & dVar6)) * *(uVar1 + 0x430860);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x430868);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x430868) - *0x430248);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x4302f8 * dVar11 + *0x430308) * dVar11 + *0x430318) * dVar11 * dVar11 +\n                   ((*0x4302f0 * dVar7 + *0x430300) * dVar7 + *0x430310) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x430320 * dVar7 + *(uVar1 + 0x430458) + dVar10 * *0x430278 + (dVar8 & *(iVar5 + 0x430288)) +\n                   *(uVar1 + 0x430450) + dVar9 + dVar10 * *0x430270 + (dVar6 & *(iVar5 + 0x430280));\n        }\n        dStack12 = -(*0x4302b0 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x4302a0 == (param_1 & *0x430230 | *0x4302a0)) {\n                    return *0x4302d8;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x430230;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x00426d0a;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x4302c0);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x4302d0;\ncode_r0x00426d0a:\n    fcn.00427353(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 998
    },
    "00401ea2": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401ea2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 8) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileType)(*(param_1 + 8));\n        if ((iVar1 == 2) || (iVar1 == 3)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 98
    },
    "00402c15": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402c15(int32_t arg_8h, uint lpFileName, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint var_1250h;\n    uint lpFindFileData;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_224h;\n    uint uStackY64;\n    uint *puStackY60;\n    uint *puStackY56;\n    uint *puStackY52;\n    int32_t iStackY48;\n    uint *puStackY44;\n    uint *puStackY40;\n    \n    fcn.004154b0();\n    iVar3 = -1;\n    if (arg_8h == -1) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n        if (arg_8h != -1) {\ncode_r0x00402cbc:\n            puStackY40 = 0x402cc9;\n            fcn.0040694c();\n            puStackY40 = 0x800;\n            puStackY44 = &fcn.00402c15::var_224h;\n            iStackY48 = arg_10h;\n            puStackY52 = 0x402cd7;\n            fcn.004039d4();\n            *(arg_10h + 0x1000) = var_230h;\n            *(arg_10h + 0x1008) = lpFindFileData;\n            *(arg_10h + 0x1004) = var_234h;\n            *(arg_10h + 0x1028) = var_24ch;\n            *(arg_10h + 0x102c) = var_248h;\n            *(arg_10h + 0x1030) = var_244h;\n            *(arg_10h + 0x1034) = var_240h;\n            *(arg_10h + 0x1038) = var_23ch;\n            puStackY52 = &fcn.00402c15::var_23ch;\n            *(arg_10h + 0x103c) = var_238h;\n            puStackY56 = 0x402d5a;\n            fcn.0040739d();\n            puStackY56 = &fcn.00402c15::var_24ch;\n            puStackY60 = 0x402d6c;\n            fcn.0040739d();\n            puStackY60 = &fcn.00402c15::var_244h;\n            uStackY64 = 0x402d7e;\n            fcn.0040739d();\n            goto code_r0x00402d7e;\n        }\n        puStackY40 = 0x402c5a;\n        cVar1 = fcn.004035e5(lpFileName, &fcn.00402c15::var_1250h, 0x800);\n        if (cVar1 != '\\0') {\n            puStackY40 = &fcn.00402c15::lpFindFileData;\n            puStackY44 = &fcn.00402c15::var_1250h;\n            iStackY48 = 0x402c72;\n            arg_8h = (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n            if (arg_8h != -1) goto code_r0x00402cbc;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        iVar3 = arg_8h;\n        if (((iVar2 == 2) || (iVar2 == 3)) || (iVar2 == 0x12)) {\n            bVar4 = false;\n        }\n        else {\n            bVar4 = true;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileW)();\n        if (iVar2 != 0) goto code_r0x00402cbc;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        bVar4 = iVar2 != 0x12;\n    }\n    *(arg_10h + 0x1044) = bVar4;\n    arg_8h = iVar3;\ncode_r0x00402d7e:\n    *(arg_10h + 0x1040) = 0;\n    return arg_8h;\n}\n",
        "token_count": 1015
    },
    "00402d8e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.00402d8e(void)\n\n{\n    uint lpVersionInformation;\n    int32_t var_110h;\n    int32_t var_10ch;\n    int32_t var_104h;\n    \n    if (*0x434000 == -1) {\n        lpVersionInformation = 0x114;\n        (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n        *0x434000 = var_104h;\n        *0x436f10 = var_110h;\n        *0x436f14 = var_10ch;\n    }\n    if (*0x434000 != 2) {\n        return 0x501;\n    }\n    return *0x436f10 * 0x100 + *0x436f14;\n}\n",
        "token_count": 173
    },
    "00403890": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00403890(uint16_t *param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    \n    if (*param_1 != 0) {\n        iVar2 = 0;\n        do {\n            arg_8h = 0x4295c4;\n            if (param_2 == '\\0') {\n                arg_8h = 0x4295d4;\n            }\n            iVar1 = fcn.00416990(arg_8h, *param_1);\n            if ((iVar1 != 0) || ((param_2 != '\\0' && (*param_1 < 0x20)))) {\n                *param_1 = 0x5f;\n            }\n            if ((2 < iVar2) && (*param_1 == 0x3a)) {\n                *param_1 = 0x5f;\n            }\n            param_1 = param_1 + 1;\n            iVar2 = iVar2 + 2;\n        } while (*param_1 != 0);\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "0040a908": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.0040a908(int32_t param_1, uint32_t param_2, int16_t *param_3)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t unaff_ESI;\n    \n    *0x44f75d = 0;\n    if ((((param_2 == 0) || (param_1 == 0)) || (param_3 == NULL)) || (*param_3 != 99)) {\n        uVar2 = in_EAX & 0xffffff00;\n    }\n    else {\n        if (3 < param_2) {\n            do {\n                fcn.0040b049(param_1);\n                uVar2 = fcn.0040b049(param_1 + 2);\n                uVar2 = uVar2 & 0xffff;\n                in_EAX = param_2 - 4;\n                if (in_EAX < uVar2) break;\n                if (((unaff_ESI == 0x9901) && (6 < uVar2)) && (iVar1 = fcn.0040b049(param_1 + 6),  iVar1 == 0x4541)) {\n                    iVar1 = fcn.0040b049(param_1 + 4);\n                    *0x44f75e = '\\x01' - (iVar1 != 1);\n                    *0x44f760 = *(param_1 + 8);\n                    if (*(param_1 + 8) - 1 < 3) {\n                        iVar1 = fcn.0040b049(param_1 + 9);\n                        *param_3 = iVar1;\n                        *0x44f75d = 1;\n                    }\n                }\n                in_EAX = -uVar2 - 4;\n                param_2 = param_2 + in_EAX;\n                param_1 = param_1 + 4 + uVar2;\n            } while (3 < param_2);\n        }\n        uVar2 = in_EAX & 0xffffff00 | *0x44f75d;\n    }\n    return uVar2;\n}\n",
        "token_count": 470
    },
    "0040aabc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0040aabc(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    *(*0x43e5a8 + 0x70) = *(*0x43e5a8 + 0x70) ^ (*0x44e63c ^ *(*0x43e5a8 + 0x70)) & 1;\n    *(*0x43e5a8 + 0x70) = *(*0x43e5a8 + 0x70) ^ (*0x44e63c >> 2 ^ *(*0x43e5a8 + 0x70)) & 2;\n    *(*0x43e5a8 + 0x70) = *(*0x43e5a8 + 0x70) ^ (*0x44e660 << 2 ^ *(*0x43e5a8 + 0x70)) & 4;\n    *(*0x43e5a8 + 0x30) = *0x44e644;\n    uVar3 = *0x44e64c;\n    iVar2 = *0x43e5a8;\n    *(*0x43e5a8 + 0x20) = *0x44e648;\n    *(iVar2 + 0x24) = uVar3;\n    uVar3 = *0x44e654;\n    iVar2 = *0x43e5a8;\n    *(*0x43e5a8 + 0x28) = *0x44e650;\n    *(iVar2 + 0x2c) = uVar3;\n    *(*0x43e5a8 + 0x3c) = *0x44e664;\n    uVar3 = *0x44e66c;\n    iVar2 = *0x43e5a8;\n    if (((*0x44e63b != '\\x02') || (*0x44e63a < 0x2b)) &&\n       ((uVar1 = *0x44e63c >> 0x10,  uVar1 == 0 || ((uVar1 == 8 || (uVar1 == 9)))))) {\n        *(*0x43e5a8 + 0x18) = *0x44e668;\n        *(iVar2 + 0x1c) = uVar3;\n        return 1;\n    }\n    fcn.00401aa9(0x46500a, 0x44e6c4);\n    return 0;\n}\n",
        "token_count": 563
    },
    "0040bdb8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0040bdb8(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    bool bVar6;\n    \n    uVar3 = *0x44f740;\n    iVar4 = *0x44f744;\n    iVar5 = *0x44f744;\n    if (*0x44f744 < 1) {\n        do {\n            bVar6 = *0x44e5c0 != 0;\n            *0x44e5c0 = *0x44e5c0 + -1;\n            *0x44e5c4 = *0x44e5c4 + -1 + bVar6;\n            if (*0x44e5c4 < 0) {\n                uVar1 = fcn.0040b284();\n            }\n            else {\n                uVar1 = **0x44e5b8;\n                *0x44e5b8 = *0x44e5b8 + 1;\n            }\n            if (uVar1 == 0xffffffff) {\n                iVar5 = iVar4;\n                if (iVar4 < 0) {\n                    return 1;\n                }\n                break;\n            }\n            iVar5 = iVar4 + 8;\n            uVar3 = uVar3 | uVar1 << (iVar4 & 0x1f);\n            iVar4 = iVar5;\n        } while (iVar5 < 1);\n    }\n    uVar1 = uVar3 >> 1;\n    *param_1 = uVar3 & 1;\n    iVar4 = iVar5 + -1;\n    do {\n        if (1 < iVar4) {\ncode_r0x0040bea4:\n            *0x44f744 = iVar4 + -2;\n            uVar3 = uVar1 & 3;\n            *0x44f740 = uVar1 >> 2;\n            if (uVar3 == 2) {\n                uVar2 = fcn.0040c3ea();\n            }\n            else if (uVar3 == 0) {\n                uVar2 = fcn.0040ccd0();\n            }\n            else if (uVar3 == 1) {\n                uVar2 = fcn.0040cb82();\n            }\n            else {\n                uVar2 = 2;\n            }\n            return uVar2;\n        }\n        bVar6 = *0x44e5c0 != 0;\n        *0x44e5c0 = *0x44e5c0 + -1;\n        *0x44e5c4 = *0x44e5c4 + -1 + bVar6;\n        if (*0x44e5c4 < 0) {\n            uVar3 = fcn.0040b284();\n        }\n        else {\n            uVar3 = **0x44e5b8;\n            *0x44e5b8 = *0x44e5b8 + 1;\n        }\n        if (uVar3 == 0xffffffff) {\n            if (iVar4 < 0) {\n                return 1;\n            }\n            goto code_r0x0040bea4;\n        }\n        uVar1 = uVar1 | uVar3 << (iVar4 & 0x1f);\n        iVar4 = iVar4 + 8;\n    } while( true );\n}\n",
        "token_count": 759
    },
    "0040cec7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.0040cec7(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint32_t in_stack_00001fd8;\n    int32_t in_stack_00001fdc;\n    uint uStack16;\n    \n    fcn.004154b0();\n    uStack16 = 0x40ced9;\n    iVar3 = fcn.0040d856();\n    if (iVar3 == 9) {\n        uStack16 = 0x46500a;\n        fcn.004018ec();\n    }\n    else {\n        if ((iVar3 == 2) || (iVar3 == 3)) {\n            uStack16 = 0x46500a;\n            fcn.004017a5();\n        }\n        if (iVar3 == 0) {\n            fcn.0040694c();\n            iVar3 = 0;\n            while( true ) {\n                fcn.00408aab(&stack0xfffffff0, 0x800, iVar3);\n                fcn.00401b85();\n                cVar2 = fcn.00402ae7();\n                if (cVar2 == '\\0') break;\n                bVar4 = CARRY4(*0x44e5e8, in_stack_00001fd8);\n                *0x44e5e8 = *0x44e5e8 + in_stack_00001fd8;\n                *0x44e5ec = *0x44e5ec + in_stack_00001fdc + bVar4;\n                iVar3 = iVar3 + 1;\n                fcn.0040694c();\n            }\n            *0x44e5f0 = 0;\n            *0x44e5f4 = 0;\n            fcn.0040b3dc();\n            iVar3 = fcn.00408fb4();\n            if (iVar3 == 2) {\n                fcn.004017a5();\n            }\n            else if ((iVar3 == 9) || (iVar3 == 0x4c)) {\n                fcn.004018ec();\n            }\n            if (*0x44e5d8 == NULL) {\n                *0x44e5d8 = NULL;\n                return iVar3;\n            }\n            pcVar1 = ***0x44e5d8;\n            (**0x42922c)();\n            (*pcVar1)();\n            *0x44e5d8 = NULL;\n            return iVar3;\n        }\n    }\n    if (*0x44e5d8 != NULL) {\n        pcVar1 = ***0x44e5d8;\n        (**0x42922c)();\n        (*pcVar1)();\n    }\n    *0x44e5d8 = NULL;\n    return iVar3;\n}\n",
        "token_count": 613
    },
    "00417024": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuchar (*) [16] __cdecl fcn.00417024(uchar (*arg_8h) [16], uint arg_ch)\n\n{\n    uchar *puVar1;\n    uchar (*pauVar2) [16];\n    int32_t iVar3;\n    uchar (*pauVar4) [16];\n    bool bVar5;\n    bool bVar6;\n    \n    pauVar4 = NULL;\n    pauVar2 = arg_8h;\n    if (*0x4692a8 < 2) {\n        do {\n            puVar1 = *pauVar2;\n            pauVar4 = *pauVar2 + 2;\n            pauVar2 = pauVar4;\n        } while (*puVar1 != 0);\n        do {\n            pauVar4 = pauVar4[-1] + 0xe;\n            if (pauVar4 == arg_8h) break;\n        } while (**pauVar4 != arg_ch);\n        if (**pauVar4 != arg_ch) {\n            pauVar4 = NULL;\n        }\n    }\n    else {\n        for (; (*arg_8h + 1 & 0xe) != 0; arg_8h = *arg_8h + 2) {\n            if (**arg_8h == arg_ch) {\n                pauVar4 = arg_8h;\n            }\n            if (**arg_8h == 0) {\n                return pauVar4;\n            }\n        }\n        bVar5 = arg_ch != 0;\n        bVar6 = arg_ch == 0;\n        if (bVar6) {\n            while (iVar3 = pcmpistri(ZEXT416(0xffff0001), *arg_8h, 0x15),  !bVar6) {\n                arg_8h = arg_8h[1];\n                bVar6 = arg_8h == NULL;\n            }\n            pauVar4 = *arg_8h + iVar3 * 2;\n        }\n        else {\n            while( true ) {\n                iVar3 = pcmpistri(ZEXT216(arg_ch), *arg_8h, 0x41);\n                if (bVar5) {\n                    pauVar4 = *arg_8h + iVar3 * 2;\n                }\n                if (bVar6) break;\n                bVar5 = 0xffffffef < arg_8h;\n                arg_8h = arg_8h[1];\n                bVar6 = arg_8h == NULL;\n            }\n        }\n    }\n    return pauVar4;\n}\n",
        "token_count": 547
    },
    "0041ac4d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.0041ac4d(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint32_t arg_8h;\n    uint uVar4;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.0041c032();\n    if (cVar1 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x0041ac72:\n        puVar2 = fcn.0041f7f2();\n        *puVar2 = 0x16;\n        fcn.0041a239();\ncode_r0x0041ac82:\n        uVar3 = 0xffffffff;\n    }\n    else {\ncode_r0x0041ad2d:\n        *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n        if (*(param_1 + 0x450) != 2) {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x0041ad1a:\n            cVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x31) = cVar1;\n            if (cVar1 != '\\0') {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                if (*(param_1 + 0x18) < 0) goto code_r0x0041ad2d;\n                uVar3 = *(param_1 + 0x1c);\n                arg_8h = *(param_1 + 0x31);\n                uVar4 = fcn.0041aad1(arg_8h, uVar3);\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x41ad49\n                switch(uVar4) {\n                case 0:\n                    cVar1 = fcn.0041af03();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x0041ad1a;\n                case 2:\n                    cVar1 = fcn.0041ae89();\n                    break;\n                case 3:\n                    cVar1 = fcn.0041b7a9();\n                    break;\n                case 4:\n                    goto code_r0x0041acf4;\n                case 5:\n                    cVar1 = fcn.0041afe7();\n                    break;\n                case 6:\n                    cVar1 = fcn.0041b038();\n                    break;\n                case 7:\n                    cVar1 = fcn.0041b31d(arg_8h, uVar3, arg_8h, unaff_ESI, unaff_retaddr, param_2, param_3, param_4, \n                                         param_5, param_6, param_7);\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x0041ac82;\n                default:\n                    goto code_r0x0041ac72;\n                }\n                if (cVar1 == '\\0') goto code_r0x0041ac82;\n                goto code_r0x0041ad1a;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n            goto code_r0x0041ad2d;\n        }\n        uVar3 = *(param_1 + 0x18);\n    }\n    return uVar3;\ncode_r0x0041acf4:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0041ad1a;\n}\n",
        "token_count": 974
    },
    "0041ad69": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041ad69(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.0041c032();\n    if (cVar2 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x0041ad8e:\n        puVar3 = fcn.0041f7f2();\n        *puVar3 = 0x16;\n        fcn.0041a239();\ncode_r0x0041ad9e:\n        uVar4 = 0xffffffff;\n    }\n    else {\ncode_r0x0041ae4e:\n        *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n        if (*(param_1 + 0x450) != 2) {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x0041ae37:\n            iVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x32) = iVar1;\n            if (iVar1 != 0) {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                if (*(param_1 + 0x18) < 0) goto code_r0x0041ae4e;\n                uVar4 = fcn.0041ab03(*(param_1 + 0x32), *(param_1 + 0x1c));\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x41ae69\n                switch(uVar4) {\n                case 0:\n                    cVar2 = fcn.0041af22();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x0041ae37;\n                case 2:\n                    cVar2 = fcn.0041aec6();\n                    break;\n                case 3:\n                    cVar2 = fcn.0041b7d4();\n                    break;\n                case 4:\n                    goto code_r0x0041ae11;\n                case 5:\n                    cVar2 = fcn.0041b00f();\n                    break;\n                case 6:\n                    cVar2 = fcn.0041b1a1();\n                    break;\n                case 7:\n                    cVar2 = fcn.0041b54c();\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x0041ad9e;\n                default:\n                    goto code_r0x0041ad8e;\n                }\n                if (cVar2 == '\\0') goto code_r0x0041ad9e;\n                goto code_r0x0041ae37;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n            goto code_r0x0041ae4e;\n        }\n        uVar4 = *(param_1 + 0x18);\n    }\n    return uVar4;\ncode_r0x0041ae11:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0041ae37;\n}\n",
        "token_count": 852
    },
    "00428610": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.00428610(void)\n\n{\n    uint32_t uVar1;\n    float10 in_ST0;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    if (1 < *0x4692a8) {\n        return in_ST0;\n    }\n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    uVar1 = in_ST0 < 0;\n    if (uStack24 < 0x3fff) {\n        return 0;\n    }\n    if (uStack28 < 0) {\n        if (uStack24 < 0x401e) {\n            return (uStack28 >> (0x3eU - uStack24 & 0x1f) ^ -uVar1) + uVar1;\n        }\n        if (((uStack24 < 0x401f) && (uVar1 != 0)) && (uStack28 == 0x80000000)) {\n            return uStack28;\n        }\n    }\n    return 0x80000000;\n}\n",
        "token_count": 261
    },
    "0040aa5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.0040aa5b(char *param_1)\n\n{\n    uint uVar1;\n    \n    if ((((*param_1 == 'P') && (param_1[1] == 'K')) && (param_1[2] == '\\x03')) && (param_1[3] == '\\x04')) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "0040fa3a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuchar fcn.0040fa3a(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint unaff_retaddr;\n    \n    if ((param_2 == 3) && (cVar1 = fcn.004067ac(param_1),  cVar1 == '\\0')) {\n        uVar2 = fcn.004079bf(unaff_retaddr);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 108
    },
    "0040fa5e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t fcn.0040fa5e(char param_1, uint8_t param_2)\n\n{\n    unkuint3 Var2;\n    int32_t iVar1;\n    \n    Var2 = param_2 - 0x15 >> 8;\n    if ((param_2 - 0x15 < 7) && (((param_1 == '\\n' || (param_1 == '\\v')) || (param_1 == '\\x03')))) {\n        iVar1 = Var2 << 8;\n    }\n    else {\n        iVar1 = CONCAT31(Var2, 1);\n    }\n    return iVar1;\n}\n",
        "token_count": 137
    },
    "004011c6": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.004011c6(uint hWnd, int32_t arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint noname_5, uint arg_20h)\n\n{\n    uint32_t in_EAX;\n    \n    if (arg_ch == 0x30) {\n        in_EAX = fcn.00404851(hWnd);\n    }\n    else if (arg_ch == 0x110) {\n        in_EAX = fcn.00404878(hWnd, arg_18h, arg_20h & 1);\n        if ((arg_20h & 1) != 0) {\n            in_EAX = (*_sym.imp.USER32.dll_GetParent)(hWnd);\n            if (in_EAX != 0) {\n                in_EAX = (*_sym.imp.USER32.dll_GetDlgItem)(in_EAX, 0x3021);\n                if ((in_EAX != 0) && ((arg_20h & 8) != 0)) {\n                    in_EAX = (*_sym.imp.USER32.dll_SetWindowTextW)(in_EAX, 0x429584);\n                }\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 269
    },
    "00402804": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00402804(uint32_t param_1)\n\n{\n    return param_1 >> 10 & 0xffffff01;\n}\n",
        "token_count": 33
    },
    "0040888b": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040888b(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    *param_1 = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    fcn.00408de3(param_2);\n    uVar1 = *(param_2 + 0x1c);\n    param_1[6] = *(param_2 + 0x18);\n    param_1[7] = uVar1;\n    uVar1 = *(param_2 + 0x24);\n    param_1[8] = *(param_2 + 0x20);\n    param_1[9] = uVar1;\n    uVar1 = *(param_2 + 0x2c);\n    param_1[10] = *(param_2 + 0x28);\n    param_1[0xb] = uVar1;\n    param_1[0xc] = *(param_2 + 0x30);\n    param_1[0xd] = *(param_2 + 0x34);\n    param_1[0xe] = *(param_2 + 0x38);\n    param_1[0xf] = *(param_2 + 0x3c);\n    param_1[0x10] = 0;\n    param_1[0x14] = 0;\n    param_1[0x15] = 0;\n    fcn.00408dc0(param_2 + 0x40);\n    uVar1 = *(param_2 + 0x5c);\n    param_1[0x16] = *(param_2 + 0x58);\n    param_1[0x17] = uVar1;\n    uVar1 = *(param_2 + 100);\n    param_1[0x18] = *(param_2 + 0x60);\n    param_1[0x19] = uVar1;\n    uVar1 = *(param_2 + 0x6c);\n    param_1[0x1a] = *(param_2 + 0x68);\n    param_1[0x1b] = uVar1;\n    uVar2 = (param_1[0x1c] ^ *(param_2 + 0x70)) & 1 ^ param_1[0x1c];\n    param_1[0x1c] = uVar2;\n    uVar2 = (*(param_2 + 0x70) ^ uVar2) & 2 ^ uVar2;\n    param_1[0x1c] = uVar2;\n    param_1[0x1c] = (*(param_2 + 0x70) ^ uVar2) & 4 ^ uVar2;\n    return param_1;\n}\n",
        "token_count": 643
    },
    "00425e4d": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00425e4d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00416030(0x431fc0, 0x14);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.0041f7df();\n        *puVar1 = 0;\n        puVar1 = fcn.0041f7f2();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x469a10)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x30;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x469810) + 0x28 + iVar3) & 1) != 0) {\n                fcn.004227f0(lpCriticalSection);\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x469810) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.0041f7f2();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0041f7df();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.00425f38(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00425f0f();\n                goto code_r0x00425f32;\n            }\n        }\n        puVar1 = fcn.0041f7df();\n        *puVar1 = 0;\n        puVar1 = fcn.0041f7f2();\n        *puVar1 = 9;\n        fcn.0041a239();\n    }\ncode_r0x00425f32:\n    fcn.00416080();\n    return;\n}\n",
        "token_count": 614
    },
    "0040162f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040162f(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar1 = 0;\n    if (*(param_1 + 4) == 0) {\n        do {\n            iVar4 = 8;\n            uVar2 = uVar1;\n            do {\n                uVar3 = uVar2 >> 1;\n                if ((uVar2 & 1) != 0) {\n                    uVar3 = uVar3 ^ 0xedb88320;\n                }\n                iVar4 = iVar4 + -1;\n                uVar2 = uVar3;\n            } while (iVar4 != 0);\n            *(param_1 + uVar1 * 4) = uVar3;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < 0x100);\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "004053ff": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint8_t fcn.004053ff(uint8_t param_1, uint8_t param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = 0;\n    if (param_2 != 0) {\n        do {\n            if ((param_2 & 1) != 0) {\n                uVar2 = uVar2 ^ param_1;\n            }\n            uVar1 = param_1 * '\\x02';\n            if (param_1 < '\\0') {\n                uVar1 = uVar1 ^ 0x1b;\n            }\n            param_2 = param_2 >> 1;\n            param_1 = uVar1;\n        } while (param_2 != 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 176
    },
    "00408a1f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00408a1f(uint param_1, uint8_t param_2)\n\n{\n    fcn.00408e6c();\n    fcn.00408e48();\n    if ((param_2 & 1) != 0) {\n        fcn.00415479(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 80
    },
    "00408a48": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00408a48(uint param_1, uint8_t param_2)\n\n{\n    fcn.00408e48();\n    fcn.00408e6c();\n    if ((param_2 & 1) != 0) {\n        fcn.00415479(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 79
    },
    "0041bed4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bed4(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.0041bd16(8, 0);\n    return;\n}\n",
        "token_count": 92
    },
    "004262d3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004262d3(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    uint uVar4;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00416030();\n    uVar4 = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.004227f0(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x469810) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) != 0) {\n        uVar1 = fcn.004228c7(arg_8h_00);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar1);\n        if (iVar2 != 0) goto code_r0x00426343;\n        puVar3 = fcn.0041f7df();\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *puVar3 = uVar4;\n    }\n    puVar3 = fcn.0041f7f2();\n    *puVar3 = 9;\n    uVar4 = 0xffffffff;\ncode_r0x00426343:\n    *(unaff_EBP + -0x1c) = uVar4;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0042635f(0x432000, noname_1, unaff_retaddr);\n    fcn.00416080();\n    return;\n}\n",
        "token_count": 478
    },
    "00426471": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00426471(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00416030();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.004227f0(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x469810) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) == 0) {\n        puVar2 = fcn.0041f7f2();\n        *puVar2 = 9;\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = fcn.0042659a(arg_8h_00);\n    }\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004264e7(0x432020, noname_1, unaff_retaddr);\n    fcn.00416080();\n    return;\n}\n",
        "token_count": 374
    },
    "0042651b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042651b(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_4h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.0041f7df();\n        *puVar1 = 0;\n        puVar1 = fcn.0041f7f2();\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x469a10)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x469810) + 0x28 + (arg_8h & 0x3f) * 0x30) & 1) != 0)) {\n            var_4h = &arg_8h;\n            uVar2 = fcn.004264f3(arg_8h, &var_4h);\n            return uVar2;\n        }\n        puVar1 = fcn.0041f7df();\n        *puVar1 = 0;\n        puVar1 = fcn.0041f7f2();\n        *puVar1 = 9;\n        fcn.0041a239();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 297
    },
    "004015b5": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.004015b5(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    \n    *param_2 = *param_2 + 0x23;\n    iVar1 = *(*param_1 + -4);\n    if ((*param_1 - iVar1) - 4U < 0x20) {\n        *param_1 = iVar1;\n        return;\n    }\n    fcn.0041a249();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 133
    },
    "0040dd79": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ddb5)\n// WARNING: Removing unreachable block (ram,0x0040df1d)\n\nint32_t __fastcall fcn.0040dd79(int32_t param_1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    uint32_t unaff_EBX;\n    bool bVar8;\n    int64_t iVar9;\n    int32_t unaff_retaddr;\n    int32_t iVar10;\n    uint32_t uVar11;\n    \n    iVar4 = *0x44e5e4;\n    uVar3 = *0x44e5e0;\n    bVar8 = false;\n    uVar11 = 0x2000;\n    iVar9 = fcn.004158f0(*0x44e5e0, *0x44e5e4, 0x2000, 0);\n    iVar10 = iVar9 >> 0x20;\n    uVar6 = iVar9;\n    if (unaff_retaddr < iVar9) {\n        iVar5 = **0x44e5d8;\n        (**0x42922c)(*0x44e5e0 - uVar6, (iVar4 - iVar10) - (*0x44e5e0 < uVar6), 0);\n        (**(iVar5 + 0x10))();\n        pcVar1 = *(**0x44e5d8 + 0x14);\n        (**0x42922c)();\n        *0x44e5f8 = (*pcVar1)();\n        pcVar1 = *(**0x44e5d8 + 0xc);\n        (**0x42922c)(*0x44e5b4, uVar11);\n        *0x44e5c0 = (*pcVar1)();\n        *0x44e5c4 = *0x44e5c0 >> 0x1f;\n        if ((*0x44e5c0 != uVar11) || (*0x44e5c4 != uVar11 >> 0x1f)) goto code_r0x0040e01a;\n        pcVar7 = *0x44e5b4;\n        for (*0x44e5b8 = *0x44e5b4 + (uVar11 - unaff_retaddr) + -4; pcVar7 <= *0x44e5b8; *0x44e5b8 = *0x44e5b8 + -1) {\n            if (**0x44e5b8 == 'P') {\n                iVar4 = fcn.00417282(*0x44e5b8, param_1, 4);\n                pcVar7 = *0x44e5b4;\n                if (iVar4 == 0) {\n                    uVar3 = *0x44e5b8 - *0x44e5b4;\n                    bVar8 = *0x44e5c0 < uVar3;\n                    *0x44e5c0 = *0x44e5c0 - uVar3;\n                    *0x44e5c4 = (*0x44e5c4 - (uVar3 >> 0x1f)) - bVar8;\n                    bVar8 = true;\n                    break;\n                }\n            }\n        }\n        fcn.00416ab0(*0x44e60c, pcVar7, 3);\n        iVar2 = *0x44e5f8;\n    }\n    else {\n        iVar2 = CONCAT44((iVar4 - iVar10) - (uVar3 < uVar6), uVar3 - uVar6);\n    }\n    uVar3 = iVar9;\n    *0x44e5f8 = iVar2;\n    iVar4 = fcn.00415800((unaff_EBX - uVar3) + 0x1fff, \n                         ((param_1 - (iVar9 >> 0x20)) - (unaff_EBX < uVar3)) + (0xffffe000 < unaff_EBX - uVar3), 0x2000\n                         , 0);\n    iVar10 = 1;\n    while (((!bVar8 && (iVar10 <= iVar4)) && (0x1fff < iVar2))) {\n        *0x44e5f8 = iVar2 + -0x2000;\n        pcVar1 = *(**0x44e5d8 + 0x10);\n        (**0x42922c)(*0x44e5f8, 0);\n        (*pcVar1)();\n        pcVar1 = *(**0x44e5d8 + 0xc);\n        (**0x42922c)(*0x44e5b4, 0x2000);\n        *0x44e5c0 = (*pcVar1)();\n        *0x44e5c4 = *0x44e5c0 >> 0x1f;\n        if (*0x44e5c0 != 0x2000) break;\n        pcVar7 = *0x44e5b4;\n        for (*0x44e5b8 = *0x44e5b4 + 0x1fff; pcVar7 <= *0x44e5b8; *0x44e5b8 = *0x44e5b8 + -1) {\n            if (**0x44e5b8 == 'P') {\n                iVar5 = fcn.00417282(*0x44e5b8, uVar3, 4);\n                pcVar7 = *0x44e5b4;\n                if (iVar5 == 0) {\n                    uVar6 = *0x44e5b8 - *0x44e5b4;\n                    bVar8 = *0x44e5c0 < uVar6;\n                    *0x44e5c0 = *0x44e5c0 - uVar6;\n                    *0x44e5c4 = (*0x44e5c4 - (uVar6 >> 0x1f)) - bVar8;\n                    bVar8 = true;\n                    break;\n                }\n            }\n        }\n        fcn.00416ab0(*0x44e60c, pcVar7, 3);\n        iVar10 = iVar10 + 1;\n        iVar2 = *0x44e5f8;\n    }\ncode_r0x0040e01a:\n    if (*0x44e5b8 < *0x44e5b4) {\n        *0x44e5f8 = -1;\n        *0x44e5b8 = *0x44e5b4;\n    }\n    *0x44e5fc = *0x44e5f8 >> 0x20;\n    return (-bVar8 & 0xfffffffe) + 2;\n}\n",
        "token_count": 1548
    },
    "00408189": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n\nuint __cdecl\nfcn.00408189(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_8h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *extraout_ECX;\n    int32_t iVar8;\n    int32_t unaff_EBP;\n    uint32_t uVar9;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x408193;\n    fcn.00415488();\n    *(unaff_EBP + -0x10) = &fcn.00408189::var_24h;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    *(unaff_EBP + -0x14) = (*(unaff_EBP + 8) - *extraout_ECX) / 0x30;\n    iVar3 = (extraout_ECX[1] - *extraout_ECX) / 0x30;\n    *(unaff_EBP + -0x20) = iVar3;\n    if (iVar3 == 0x5555555) {\n        fcn.00408ea3();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    uVar9 = iVar3 + 1;\n    uVar4 = (extraout_ECX[2] - *extraout_ECX) / 0x30;\n    uVar1 = 0x5555555;\n    if ((0x5555555 - (uVar4 >> 1) < uVar4) || (uVar1 = (uVar4 >> 1) + uVar4,  uVar9 <= uVar1)) {\n        uVar9 = uVar1;\n        *(unaff_EBP + -0x18) = uVar9;\n    }\n    else {\n        *(unaff_EBP + -0x18) = uVar9;\n    }\n    uVar5 = fcn.0040836c(uVar9);\n    iVar6 = fcn.004056cb(uVar5);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x28) = iVar6;\n    iVar3 = *(unaff_EBP + -0x14) * 0x30 + iVar6;\n    *(unaff_EBP + -0x24) = iVar3;\n    *(unaff_EBP + -0x14) = iVar3 + 0x30;\n    fcn.00408676(extraout_ECX, iVar3, *(unaff_EBP + 0xc));\n    iVar7 = extraout_ECX[1];\n    iVar3 = *extraout_ECX;\n    iVar8 = iVar6;\n    if (*(unaff_EBP + 8) != iVar7) {\n        fcn.004085a9(iVar3, *(unaff_EBP + 8), iVar6, extraout_ECX);\n        iVar3 = *(unaff_EBP + 8);\n        iVar7 = extraout_ECX[1];\n        iVar8 = *(unaff_EBP + -0x14);\n    }\n    fcn.004085a9(iVar3, iVar7, iVar8, extraout_ECX);\n    fcn.00408ba1(iVar6, *(unaff_EBP + -0x20) + 1, uVar9);\n    uVar5 = *(unaff_EBP + -0x24);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 1009
    },
    "00408b0d": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00408b0d(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    arg_8h = arg_8h | 0xf;\n    if (((arg_8h <= arg_10h) && (arg_ch <= arg_10h - (arg_ch >> 1))) &&\n       (arg_10h = (arg_ch >> 1) + arg_ch,  arg_10h <= arg_8h)) {\n        arg_10h = arg_8h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 134
    },
    "00408b3f": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00408b3f(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    arg_8h = arg_8h | 7;\n    if (((arg_8h <= arg_10h) && (arg_ch <= arg_10h - (arg_ch >> 1))) &&\n       (arg_10h = (arg_ch >> 1) + arg_ch,  arg_10h <= arg_8h)) {\n        arg_10h = arg_8h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 133
    },
    "00408b71": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00408b71(int32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (param_1[2] - *param_1) / 0x78;\n    if (0x2222222 - (uVar1 >> 1) < uVar1) {\n        uVar1 = 0x2222222;\n    }\n    else {\n        uVar1 = uVar1 + (uVar1 >> 1);\n        if (uVar1 < param_2) {\n            uVar1 = param_2;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 152
    },
    "0040b75c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040b75c(int32_t *param_1, uint32_t param_2, uint32_t param_3, int32_t param_4, int32_t param_5, \n                 uint32_t *param_6, uint32_t *param_7)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t *puVar11;\n    uint8_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    int32_t iVar19;\n    uint32_t uVar20;\n    uint32_t uStack1488;\n    uint32_t *puStack1484;\n    uint32_t uStack1480;\n    uint32_t uStack1472;\n    uint32_t uStack1468;\n    uint uStack1464;\n    uint32_t uStack1460;\n    int32_t iStack1456;\n    uint32_t uStack1444;\n    uint32_t uStack1436;\n    uint32_t *puStack1432;\n    uint32_t auStack1420 [17];\n    uint32_t auStack1352 [17];\n    uint32_t auStack1284 [16];\n    uint32_t auStack1220 [17];\n    uint32_t auStack1152 [288];\n    \n    uVar18 = 0x10;\n    if (param_2 < 0x101) {\n        uStack1436 = 0x10;\n    }\n    else {\n        uStack1436 = param_1[0x100];\n    }\n    fcn.00416480(auStack1420, 0, 0x44);\n    piVar7 = param_1;\n    uVar13 = param_2;\n    do {\n        iVar9 = *piVar7;\n        piVar7 = piVar7 + 1;\n        auStack1420[iVar9] = auStack1420[iVar9] + 1;\n        uVar13 = uVar13 - 1;\n    } while (uVar13 != 0);\n    if (auStack1420[0] == param_2) {\n        *param_6 = 0;\n        *param_7 = 0;\n        uVar3 = 0;\n    }\n    else {\n        uStack1468 = 1;\n        do {\n            if (auStack1420[uStack1468] != 0) break;\n            uStack1468 = uStack1468 + 1;\n        } while (uStack1468 < 0x11);\n        if (*param_7 < uStack1468) {\n            *param_7 = uStack1468;\n        }\n        do {\n            if (auStack1420[uVar18] != 0) break;\n            uVar18 = uVar18 - 1;\n        } while (uVar18 != 0);\n        if (uVar18 <= *param_7 && *param_7 != uVar18) {\n            *param_7 = uVar18;\n        }\n        uVar13 = 1 << (uStack1468 & 0x1f);\n        for (uVar8 = uStack1468; uVar8 < uVar18; uVar8 = uVar8 + 1) {\n            if (uVar13 - auStack1420[uVar8] < 0) goto code_r0x0040b830;\n            uVar13 = (uVar13 - auStack1420[uVar8]) * 2;\n        }\n        uVar8 = auStack1420[uVar18];\n        if (uVar13 - uVar8 < 0) {\ncode_r0x0040b830:\n            uVar3 = 2;\n        }\n        else {\n            auStack1420[uVar18] = uVar13;\n            iVar9 = 0;\n            auStack1352[1] = 0;\n            iVar19 = uVar18 - 1;\n            if (iVar19 != 0) {\n                iVar6 = 0;\n                do {\n                    iVar9 = iVar9 + *(auStack1420 + iVar6 + 4);\n                    *(auStack1352 + iVar6 + 8) = iVar9;\n                    iVar19 = iVar19 + -1;\n                    iVar6 = iVar6 + 4;\n                } while (iVar19 != 0);\n            }\n            fcn.00416480(auStack1152, 0, 0x480);\n            uVar10 = 0;\n            do {\n                iVar9 = *param_1;\n                param_1 = param_1 + 1;\n                if (iVar9 != 0) {\n                    uVar14 = auStack1352[iVar9];\n                    auStack1152[uVar14] = uVar10;\n                    auStack1352[iVar9] = uVar14 + 1;\n                }\n                uVar10 = uVar10 + 1;\n            } while (uVar10 < param_2);\n            puVar11 = auStack1152;\n            iVar9 = -1;\n            iStack1456 = -1;\n            uVar10 = auStack1352[uVar18];\n            uVar14 = 0;\n            uStack1488 = 0;\n            auStack1352[0] = 0;\n            auStack1284[0] = 0;\n            uStack1472 = 0;\n            auStack1220[1] = 0;\n            uStack1444 = 0;\n            uStack1480 = 0;\n            if (uStack1468 <= uVar18) {\n                puVar4 = auStack1420 + uStack1468;\n                puStack1432 = param_6;\n                puStack1484 = puVar11;\n                do {\n                    uVar17 = *puVar4;\n                    while (uVar17 != 0) {\n                        uVar5 = uVar17 - 1;\n                        iVar19 = auStack1284[iVar9 + 1] + uVar14;\n                        while (iVar19 < uStack1468) {\n                            uVar14 = uVar14 + auStack1284[iVar9 + 1];\n                            iStack1456 = iVar9 + 1;\n                            uStack1480 = uVar18 - uVar14;\n                            if (*param_7 < uVar18 - uVar14) {\n                                uStack1480 = *param_7;\n                            }\n                            uVar16 = uStack1468 - uVar14;\n                            uVar20 = 1 << (uVar16 & 0x1f);\n                            if (uVar17 < uVar20) {\n                                iVar19 = uVar20 + (-1 - uVar5);\n                                puVar11 = puVar4;\n                                while (uVar16 = uVar16 + 1,  uVar16 < uStack1480) {\n                                    uVar20 = iVar19 * 2;\n                                    puVar11 = puVar11 + 1;\n                                    if (uVar20 < *puVar11 || uVar20 == *puVar11) break;\n                                    iVar19 = uVar20 - *puVar11;\n                                }\n                            }\n                            if ((uStack1436 < uVar14 + uVar16) && (uVar14 < uStack1436)) {\n                                uVar16 = uStack1436 - uVar14;\n                            }\n                            uStack1480 = 1 << (uVar16 & 0x1f);\n                            auStack1284[iVar9 + 2] = uVar16;\n                            iVar6 = fcn.0041c47d(uStack1480 * 8 + 8);\n                            if (iVar6 == 0) {\n                                iVar9 = auStack1220[1];\n                                if (iStack1456 != 0) {\n                                    while (iVar9 != 0) {\n                                        iVar19 = *(iVar9 + -4);\n                                        fcn.0041a299(iVar9 + -8);\n                                        iVar9 = iVar19;\n                                    }\n                                }\n                                return 3;\n                            }\n                            uStack1444 = iVar6 + 8;\n                            auStack1220[iVar9 + 2] = uStack1444;\n                            *puStack1432 = uStack1444;\n                            *(iVar6 + 4) = 0;\n                            if (iStack1456 != 0) {\n                                auStack1352[iStack1456] = uStack1488;\n                                uStack1464._2_2_ = uStack1464 >> 0x10;\n                                uVar15 = ((1 << (uVar14 & 0x1f)) - 1U & uStack1488) >>\n                                         (uVar14 - auStack1284[iStack1456] & 0x1f);\n                                uStack1464 = CONCAT31(CONCAT21(uStack1464._2_2_, *(auStack1284 + iStack1456)), \n                                                      uVar16 + 0x20);\n                                uVar20 = auStack1220[iStack1456];\n                                *(uVar20 + uVar15 * 8) = uStack1464;\n                                *(uVar20 + 4 + uVar15 * 8) = uStack1444;\n                                uStack1460 = uStack1444;\n                            }\n                            puVar11 = puStack1484;\n                            iVar9 = iStack1456;\n                            uStack1472 = uVar14;\n                            puStack1432 = iVar6 + 4;\n                            iVar19 = uVar14 + uVar16;\n                        }\n                        cVar1 = uStack1468;\n                        uVar12 = uVar14;\n                        if (puVar11 < auStack1152 + uVar10) {\n                            uVar17 = *puVar11;\n                            if (uVar17 < param_3) {\n                                uStack1464._0_1_ = (uVar17 < 0x100) + '\\x1f';\n                                uVar2 = *puStack1484;\n                            }\n                            else {\n                                uStack1464._0_1_ = *((uVar17 - param_3) + param_5);\n                                uVar2 = *(param_4 + (uVar17 - param_3) * 2);\n                            }\n                            uStack1460 = uStack1460 & 0xffff0000 | uVar2;\n                            puStack1484 = puStack1484 + 1;\n                        }\n                        else {\n                            uStack1464._0_1_ = 'c';\n                        }\n                        uStack1464 = CONCAT31(CONCAT21(uStack1464._2_2_, cVar1 - uVar12), uStack1464);\n                        for (uVar17 = uStack1488 >> (uVar12 & 0x1f); uVar17 < uStack1480;\n                            uVar17 = uVar17 + (1 << (cVar1 - uVar12 & 0x1f))) {\n                            *(uStack1444 + uVar17 * 8) = uStack1464;\n                            *(uStack1444 + 4 + uVar17 * 8) = uStack1460;\n                            uVar14 = uStack1472;\n                            iVar9 = iStack1456;\n                        }\n                        uVar17 = 1 << (cVar1 - 1U & 0x1f);\n                        while ((uStack1488 & uVar17) != 0) {\n                            uStack1488 = uStack1488 ^ uVar17;\n                            uVar17 = uVar17 >> 1;\n                        }\n                        uStack1488 = uStack1488 ^ uVar17;\n                        uVar17 = uVar5;\n                        puVar11 = puStack1484;\n                        if (((1 << (uVar14 & 0x1f)) - 1U & uStack1488) != auStack1352[iVar9]) {\n                            do {\n                                uVar14 = uVar14 - auStack1284[iVar9];\n                                iVar9 = iVar9 + -1;\n                                uStack1472 = uVar14;\n                                iStack1456 = iVar9;\n                            } while (((1 << (uVar14 & 0x1f)) - 1U & uStack1488) != auStack1352[iVar9]);\n                        }\n                    }\n                    uStack1468 = uStack1468 + 1;\n                    puVar4 = puVar4 + 1;\n                } while (uStack1468 <= uVar18);\n            }\n            uVar3 = 1;\n            *param_7 = auStack1284[1];\n            if ((uVar13 == uVar8) || (uVar18 == 1)) {\n                uVar3 = 0;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 2841
    },
    "0040e3b1": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040e3b1(int32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = param_1[2] - *param_1 >> 1;\n    uVar1 = 0x7fffffff;\n    if ((uVar2 <= 0x7fffffff - (uVar2 >> 1)) && (uVar1 = (uVar2 >> 1) + uVar2,  uVar1 < param_2)) {\n        uVar1 = param_2;\n    }\n    return uVar1;\n}\n",
        "token_count": 148
    },
    "00402780": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00402780(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00402792(param_1);\n    return uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n}\n",
        "token_count": 60
    },
    "00402792": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402792(uint lpFileName)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_1000h;\n    uint uStackY32;\n    uint *puStackY28;\n    \n    fcn.004154b0();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n    if (iVar2 == -1) {\n        puStackY28 = 0x4027c4;\n        cVar1 = fcn.004035e5(lpFileName, &fcn.00402792::var_1000h, 0x800);\n        if (cVar1 != '\\0') {\n            puStackY28 = &fcn.00402792::var_1000h;\n            uStackY32 = 0x4027d5;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 208
    },
    "004027ed": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar fcn.004027ed(uint32_t param_1)\n\n{\n    uchar uVar1;\n    \n    if ((param_1 == 0xffffffff) || ((param_1 & 0x10) == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 80
    },
    "00402ad4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402ad4(int32_t param_1)\n\n{\n    if (*(param_1 + 0x1004) != -1) {\n        (*_sym.imp.KERNEL32.dll_FindClose)(*(param_1 + 0x1004));\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00402ae7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00402ae7(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint unaff_retaddr;\n    \n    *(param_2 + 0x1044) = 0;\n    cVar1 = fcn.004037e6(param_1);\n    if ((cVar1 == '\\0') && (iVar3 = fcn.00402c15(0xffffffff, unaff_retaddr, param_2),  iVar3 != -1)) {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n        *(param_2 + 0x1040) = 0;\n        uVar2 = fcn.004027ed(*(param_2 + 0x1008));\n        *(param_2 + 0x100c) = uVar2;\n        uVar2 = fcn.00402804(*(param_2 + 0x1008));\n        *(param_2 + 0x100d) = uVar2;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 246
    },
    "0040ccd0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0040ccd0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    int32_t iStack8;\n    \n    iStack8 = *0x44f73c;\n    uVar3 = *0x44f740 >> (*0x44f744 & 7);\n    for (iVar5 = *0x44f744 - (*0x44f744 & 7); iVar5 < 0x10; iVar5 = iVar5 + 8) {\n        bVar7 = *0x44e5c0 != 0;\n        *0x44e5c0 = *0x44e5c0 + -1;\n        *0x44e5c4 = *0x44e5c4 + -1 + bVar7;\n        if (*0x44e5c4 < 0) {\n            uVar2 = fcn.0040b284();\n        }\n        else {\n            uVar2 = **0x44e5b8;\n            *0x44e5b8 = *0x44e5b8 + 1;\n        }\n        if (uVar2 == 0xffffffff) {\n            if (iVar5 < 0) goto code_r0x0040cd9a;\n            break;\n        }\n        uVar3 = uVar3 | uVar2 << (iVar5 & 0x1f);\n    }\n    uVar2 = uVar3 & 0xffff;\n    uVar3 = uVar3 >> 0x10;\n    iVar5 = iVar5 + -0x10;\n    do {\n        if (0xf < iVar5) {\ncode_r0x0040cdd6:\n            if (uVar2 == (~uVar3 & 0xffff)) {\n                uVar4 = uVar3 >> 0x10;\n                uVar6 = iVar5 - 0x10;\n                uVar3 = *0x44f740;\n                uVar1 = *0x44f744;\n                while (*0x44f744 = uVar6,  *0x44f740 = uVar4,  uVar2 != 0) {\n                    uVar2 = uVar2 - 1;\n                    uVar4 = *0x44f740;\n                    uVar6 = *0x44f744;\n                    *0x44f740 = uVar3;\n                    *0x44f744 = uVar1;\n                    for (; uVar6 < 8; uVar6 = uVar6 + 8) {\n                        bVar7 = *0x44e5c0 != 0;\n                        *0x44e5c0 = *0x44e5c0 + -1;\n                        *0x44e5c4 = *0x44e5c4 + -1 + bVar7;\n                        if (*0x44e5c4 < 0) {\n                            uVar3 = fcn.0040b284();\n                        }\n                        else {\n                            uVar3 = **0x44e5b8;\n                            *0x44e5b8 = *0x44e5b8 + 1;\n                        }\n                        if (uVar3 == 0xffffffff) {\n                            if (uVar6 < 0) goto code_r0x0040cd9a;\n                            break;\n                        }\n                        uVar4 = uVar4 | uVar3 << (uVar6 & 0x1f);\n                    }\n                    *(iStack8 + 0x43e5ac) = uVar4;\n                    iStack8 = iStack8 + 1;\n                    if ((iStack8 == 0x10000) &&\n                       (uVar2 = unaff_EBX,  iStack8 = fcn.0040b739(),  unaff_EBX = uVar2,  iStack8 != 0)) {\n                        return iStack8;\n                    }\n                    uVar4 = uVar4 >> 8;\n                    uVar6 = uVar6 - 8;\n                    uVar3 = *0x44f740;\n                    uVar1 = *0x44f744;\n                }\n                iVar5 = 0;\n                *0x44f73c = iStack8;\n            }\n            else {\ncode_r0x0040cd9a:\n                iVar5 = 1;\n            }\n            return iVar5;\n        }\n        bVar7 = *0x44e5c0 != 0;\n        *0x44e5c0 = *0x44e5c0 + -1;\n        *0x44e5c4 = *0x44e5c4 + -1 + bVar7;\n        if (*0x44e5c4 < 0) {\n            uVar1 = fcn.0040b284();\n        }\n        else {\n            uVar1 = **0x44e5b8;\n            *0x44e5b8 = *0x44e5b8 + 1;\n        }\n        if (uVar1 == 0xffffffff) {\n            if (iVar5 < 0) goto code_r0x0040cd9a;\n            goto code_r0x0040cdd6;\n        }\n        uVar3 = uVar3 | uVar1 << (iVar5 & 0x1f);\n        iVar5 = iVar5 + 8;\n    } while( true );\n}\n",
        "token_count": 1224
    },
    "0040dacc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040dacc(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_2ch;\n    uchar var_28h [2];\n    uchar var_26h [2];\n    uchar var_24h [2];\n    uchar var_22h [2];\n    uchar var_20h [4];\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar var_10h [2];\n    uchar var_eh [2];\n    uchar var_ch [2];\n    uchar var_ah [4];\n    uint var_6h;\n    \n    iVar1 = fcn.0040b19c(&var_2ch, 0x2a);\n    if (iVar1 == 0) {\n        return 0x33;\n    }\n    *0x44e638 = var_2ch;\n    *0x44e639 = var_2ch._1_1_;\n    *0x44e63a = var_2ch._2_1_;\n    *0x44e63b = var_2ch._3_1_;\n    *0x44e63c = fcn.0040b049(var_28h);\n    *0x44e63e = fcn.0040b049(var_26h);\n    *0x44e640 = fcn.0040b049(var_24h);\n    *0x44e642 = fcn.0040b049(var_22h);\n    *0x44e644 = fcn.0040b024(var_20h);\n    *0x44e648 = fcn.0040b024(&var_1ch);\n    *0x44e64c = 0;\n    *0x44e650 = fcn.0040b024(&var_18h);\n    *0x44e654 = 0;\n    *0x44e658 = fcn.0040b049(&var_14h);\n    *0x44e65a = fcn.0040b049(&var_14h + 2);\n    *0x44e65c = fcn.0040b049(var_10h);\n    *0x44e65e = fcn.0040b049(var_eh);\n    *0x44e660 = fcn.0040b049(var_ch);\n    *0x44e664 = fcn.0040b024(var_ah);\n    *0x44e668 = fcn.0040b024(&var_6h);\n    *0x44e66c = 0;\n    if (((*0x44e648 == -1) && (*0x44e64c == 0)) || ((*0x44e650 == -1 && (*0x44e654 == 0)))) {\n        *0x44f75c = 1;\n    }\n    if (*0x44e639 < 0x12) {\n        uVar2 = *0x44e639;\n    }\n    else {\n        uVar2 = 0x12;\n    }\n    *(*0x43e5a8 + 0x34) = uVar2;\n    *(*0x43e5a8 + 0x38) = *0x44e65e;\n    return 0;\n}\n",
        "token_count": 738
    },
    "0041bf7e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041bf7e(uint *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_8h = param_1[10];\n    iVar1 = *(param_1[5] + -4);\n    param_1[0xd] = iVar1;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar2 = fcn.0041a67d(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar2 == '\\0') {\n        if (iVar1 == 0) {\n            param_1[0xd] = 0x42c134;\n        }\n        uVar3 = fcn.0041bff2(arg_8h);\n    }\n    else {\n        if (iVar1 == 0) {\n            param_1[0xd] = L\"(null)\";\n        }\n        *(param_1 + 0xf) = 1;\n        uVar3 = fcn.0041ce08(param_1[0xd], arg_8h);\n    }\n    param_1[0xe] = uVar3;\n    return 1;\n}\n",
        "token_count": 317
    },
    "00425331": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425331(char *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x004252a2:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = '\\0';\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    iVar4 = arg_ch;\n                    pcVar5 = arg_8h;\n                    if (arg_14h == -1) {\n                        do {\n                            cVar1 = pcVar5[arg_10h - arg_8h];\n                            *pcVar5 = cVar1;\n                            pcVar5 = pcVar5 + 1;\n                            if (cVar1 == '\\0') break;\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            cVar1 = pcVar5[arg_10h - arg_8h];\n                            *pcVar5 = cVar1;\n                            pcVar5 = pcVar5 + 1;\n                            if ((cVar1 == '\\0') || (iVar4 = iVar4 + -1,  iVar4 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *pcVar5 = '\\0';\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg_8h = '\\0';\n                    puVar2 = fcn.0041f7f2();\n                    uVar6 = 0x22;\n                    goto code_r0x004252c2;\n                }\n                *arg_8h = '\\0';\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x004252a2;\n    puVar2 = fcn.0041f7f2();\n    uVar6 = 0x16;\ncode_r0x004252c2:\n    *puVar2 = uVar6;\n    fcn.0041a239();\n    return uVar6;\n}\n",
        "token_count": 618
    },
    "00407a23": {
        "rules": [
            "encrypt data using HC-128/11bb23636d2a4650a9dbaa6512d69580"
        ],
        "decompiled_code": "\nuint32_t fcn.00407a23(uint8_t *param_1, uint16_t *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint8_t uVar4;\n    uint32_t uVar3;\n    uint8_t *puVar5;\n    \n    uVar3 = 1;\n    do {\n        if (*param_1 == 0) {\ncode_r0x00407b81:\n            *param_2 = 0;\n            return uVar3 & 0xff;\n        }\n        uVar2 = *param_1;\n        puVar5 = param_1 + 1;\n        if (0x7f < uVar2) {\n            if ((uVar2 & 0xe0) == 0xc0) {\n                if ((*puVar5 & 0xc0) == 0x80) {\n                    uVar2 = (uVar2 & 0x1f) << 6 | *puVar5 & 0x3fU;\n                    puVar5 = param_1 + 2;\n                    goto code_r0x00407b23;\n                }\n            }\n            else if ((uVar2 & 0xf0) == 0xe0) {\n                if (((*puVar5 & 0xc0) == 0x80) && ((param_1[2] & 0xc0) == 0x80)) {\n                    uVar2 = ((uVar2 & 0xf) << 6 | *puVar5 & 0x3fU) << 6 | param_1[2] & 0x3fU;\n                    puVar5 = param_1 + 3;\n                    goto code_r0x00407b23;\n                }\n            }\n            else if ((((uVar2 & 0xf8) == 0xf0) && ((*puVar5 & 0xc0) == 0x80)) && ((param_1[2] & 0xc0) == 0x80)) {\n                uVar3 = CONCAT11(param_1[3], uVar3);\n                uVar4 = uVar3 >> 8;\n                if ((uVar4 & 0xc0) == 0x80) {\n                    uVar2 = (((uVar2 & 7) << 6 | *puVar5 & 0x3fU) << 6 | param_1[2] & 0x3fU) << 6 | uVar4 & 0x3fU;\n                    puVar5 = param_1 + 4;\n                    goto code_r0x00407b23;\n                }\n            }\n            uVar3 = 0;\n            goto code_r0x00407b81;\n        }\ncode_r0x00407b23:\n        iVar1 = param_3 + -2;\n        if (iVar1 < 0) goto code_r0x00407b81;\n        param_1 = puVar5;\n        if (uVar2 < 0x10000) {\n            *param_2 = uVar2;\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        }\n        else {\n            if (iVar1 < 1) goto code_r0x00407b81;\n            param_3 = iVar1;\n            if (uVar2 < 0x110000) {\n                *param_2 = (uVar2 - 0x10000 >> 10) + 0xd800;\n                param_2[1] = (uVar2 & 0x3ff) + 0xdc00;\n                param_2 = param_2 + 2;\n            }\n            else {\n                uVar3 = 0;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 839
    },
    "0040afa1": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nulong fcn.0040afa1(uint8_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    \n    uVar1 = *(param_1 + 6) * 0x100;\n    uVar2 = uVar1 + param_1[5];\n    uVar3 = uVar2 * 0x100;\n    uVar4 = uVar3 + param_1[4];\n    uVar5 = uVar4 * 0x100;\n    uVar6 = uVar5 + param_1[3];\n    uVar7 = uVar6 * 0x100;\n    uVar8 = uVar7 + param_1[2];\n    uVar9 = uVar8 * 0x100;\n    uVar10 = uVar9 + param_1[1];\n    uVar11 = uVar10 * 0x100;\n    return CONCAT44(((((((((((CARRY4(param_1[7] << 8, param_1[6]) * 0x100 + CARRY4(uVar1, param_1[5])) * 0x100 |\n                            uVar2 >> 0x18) + CARRY4(uVar3, param_1[4])) * 0x100 | uVar4 >> 0x18) +\n                         CARRY4(uVar5, param_1[3])) * 0x100 | uVar6 >> 0x18) + CARRY4(uVar7, param_1[2])) * 0x100 |\n                      uVar8 >> 0x18) + CARRY4(uVar9, param_1[1])) * 0x100 | uVar10 >> 0x18) + CARRY4(*param_1, uVar11), \n                    *param_1 + uVar11);\n}\n",
        "token_count": 475
    },
    "0040b024": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint fcn.0040b024(uint *param_1)\n\n{\n    return *param_1;\n}\n",
        "token_count": 24
    },
    "0040b049": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nushort fcn.0040b049(ushort *param_1)\n\n{\n    return *param_1;\n}\n",
        "token_count": 25
    },
    "0040aa37": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.0040aa37(char *param_1)\n\n{\n    uint uVar1;\n    \n    if ((((*param_1 == 'P') && (param_1[1] == 'K')) && (param_1[2] == '\\x05')) && (param_1[3] == '\\x06')) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 103
    },
    "0040aa13": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.0040aa13(char *param_1)\n\n{\n    uint uVar1;\n    \n    if ((((*param_1 == 'P') && (param_1[1] == 'K')) && (param_1[2] == '\\x06')) && (param_1[3] == '\\x06')) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 103
    },
    "00402f9a": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nbool fcn.00402f9a(uint16_t *param_1, int16_t *param_2, uint param_3)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    uint16_t *arg_8h;\n    uint unaff_ESI;\n    uint16_t *puVar7;\n    \n    arg_8h = param_1;\n    do {\n        while( true ) {\n            iVar2 = fcn.0040310c(*param_2, param_3);\n            uVar4 = *arg_8h;\n            puVar7 = param_1;\n            iVar3 = fcn.0040310c();\n            arg_8h = arg_8h + 1;\n            if (iVar3 == 0) {\n                return iVar2 == 0;\n            }\n            if (iVar3 == unaff_ESI) {\n                if (*arg_8h == 0) {\n                    return true;\n                }\n                if (*arg_8h == 0x2e) {\n                    if ((*(uVar4 + 4) == 0x2a) && (*(uVar4 + 6) == 0)) {\n                        return true;\n                    }\n                    piVar5 = fcn.00416990(param_2, 0x2e);\n                    if (*(uVar4 + 4) == 0) {\n                        if ((piVar5 != NULL) && (piVar5[1] != 0)) {\n                            return false;\n                        }\n                        return true;\n                    }\n                    if ((piVar5 != NULL) && (iVar6 = fcn.0041c438(arg_8h, 0x4295b0),  param_2 = piVar5,  iVar6 == 0)) {\n                        iVar6 = fcn.00416990(piVar5 + 1, 0x2e);\n                        if (iVar6 == 0) {\n                            iVar6 = fcn.004030eb(uVar4 + 4, piVar5 + 1, 0x2a);\n                            return '\\x01' - (iVar6 != 0);\n                        }\n                    }\n                }\n                do {\n                    if (*param_2 == 0) {\n                        return false;\n                    }\n                    cVar1 = fcn.00402f9a(puVar7, param_2, param_3, arg_8h);\n                    param_2 = param_2 + 1;\n                } while (cVar1 == '\\0');\n                return true;\n            }\n            if (iVar3 == 0x3f) break;\n            if (iVar3 == iVar2) goto code_r0x0040301f;\n            if (iVar3 != 0x2e) {\n                return false;\n            }\n            if (((iVar2 != 0) && (iVar2 != 0x5c)) && (iVar2 != 0x2e)) {\n                return false;\n            }\n        }\n        if (iVar2 == 0) {\n            return false;\n        }\ncode_r0x0040301f:\n        param_2 = param_2 + 1;\n    } while( true );\n}\n",
        "token_count": 711
    },
    "004037e6": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint32_t fcn.004037e6(int16_t *param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 == NULL) {\n        uVar1 = 0;\n    }\n    else {\n        if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n            param_1 = param_1 + 4;\n        }\n        uVar1 = fcn.0041c438(param_1, 0x4295b0);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 180
    },
    "00406459": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid fcn.00406459(int32_t param_1, uint param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar auStack64 [56];\n    int32_t iStack8;\n    \n    uVar2 = *(param_1 + 0x18) & 0x3f;\n    puVar1 = param_1 + 0x18;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + param_3;\n    *(param_1 + 0x1c) = *(param_1 + 0x1c) + CARRY4(uVar3, param_3);\n    if (uVar2 + param_3 < 0x40) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = -uVar2 + 0x40;\n        fcn.00416ab0(param_1 + 0x20 + uVar2, param_2, uVar3);\n        fcn.00405aed(param_1, auStack64, param_1 + 0x20, 1);\n        for (uVar2 = -uVar2 + 0x7f; uVar2 < param_3; uVar2 = uVar2 + 0x40) {\n            fcn.00405aed();\n            uVar3 = uVar3 + 0x40;\n        }\n        uVar2 = 0;\n    }\n    if (uVar3 < param_3) {\n        fcn.00416ab0(param_1 + 0x20 + uVar2, iStack8 + uVar3, param_3 - uVar3);\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "00403ae2": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403ae2(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = param_2 + param_1[1];\n    param_1[1] = uVar3;\n    if (param_1[2] <= uVar3 && uVar3 != param_1[2]) {\n        uVar1 = param_1[3];\n        if ((uVar1 != 0) && (uVar1 < uVar3)) {\n            fcn.00401853(0x45ad9c, L\"Maximum allowed array size (%u) is exceeded\", uVar1);\n            fcn.004018c4();\n        }\n        uVar1 = (param_1[2] >> 2) + 0x20 + param_1[2];\n        uVar3 = param_1[1];\n        if (param_1[1] <= uVar1) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.0041c488(*param_1, uVar3 << 2);\n        if (iVar2 == 0) {\n            fcn.004018c4();\n        }\n        param_1[2] = uVar3;\n        *param_1 = iVar2;\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "00403b5a": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403b5a(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = param_2 + param_1[1];\n    param_1[1] = uVar3;\n    if (param_1[2] <= uVar3 && uVar3 != param_1[2]) {\n        uVar1 = param_1[3];\n        if ((uVar1 != 0) && (uVar1 < uVar3)) {\n            fcn.00401853(0x45ad9c, L\"Maximum allowed array size (%u) is exceeded\", uVar1);\n            fcn.004018c4();\n        }\n        uVar1 = (param_1[2] >> 2) + 0x20 + param_1[2];\n        uVar3 = param_1[1];\n        if (param_1[1] <= uVar1) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.0041c488(*param_1, uVar3 * 0xc);\n        if (iVar2 == 0) {\n            fcn.004018c4();\n        }\n        param_1[2] = uVar3;\n        *param_1 = iVar2;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "0040654e": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040654e(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = param_2 + param_1[1];\n    param_1[1] = uVar3;\n    if (param_1[2] <= uVar3 && uVar3 != param_1[2]) {\n        uVar1 = param_1[3];\n        if ((uVar1 != 0) && (uVar1 < uVar3)) {\n            fcn.00401853(0x45ad9c, L\"Maximum allowed array size (%u) is exceeded\", uVar1);\n            fcn.004018c4();\n        }\n        uVar1 = (param_1[2] >> 2) + 0x20 + param_1[2];\n        uVar3 = param_1[1];\n        if (param_1[1] <= uVar1) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.0041c488(*param_1, uVar3);\n        if (iVar2 == 0) {\n            fcn.004018c4();\n        }\n        param_1[2] = uVar3;\n        *param_1 = iVar2;\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "004069a0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004069a0(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = param_2 + param_1[1];\n    param_1[1] = uVar3;\n    if (param_1[2] <= uVar3 && uVar3 != param_1[2]) {\n        uVar1 = param_1[3];\n        if ((uVar1 != 0) && (uVar1 < uVar3)) {\n            fcn.00401853(0x45ad9c, L\"Maximum allowed array size (%u) is exceeded\", uVar1);\n            fcn.004018c4();\n        }\n        uVar1 = (param_1[2] >> 2) + 0x20 + param_1[2];\n        uVar3 = param_1[1];\n        if (param_1[1] <= uVar1) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.0041c488(*param_1, uVar3 * 2);\n        if (iVar2 == 0) {\n            fcn.004018c4();\n        }\n        param_1[2] = uVar3;\n        *param_1 = iVar2;\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "00421873": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.00421873(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    char **ppcVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char **ppcVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    char **ppcVar11;\n    char **var_20h;\n    char **var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    if (arg_ch == NULL) {\n        puVar5 = fcn.0041f7f2();\n        iVar9 = 0x16;\n        *puVar5 = 0x16;\n        fcn.0041a239();\n    }\n    else {\n        *arg_ch = 0;\n        var_20h = NULL;\n        var_1ch = NULL;\n        var_18h = 0;\n        iVar9 = *arg_8h;\n        ppcVar11 = var_20h;\n        ppcVar4 = var_1ch;\n        while (var_20h = ppcVar11,  var_1ch = ppcVar4,  iVar9 != 0) {\n            var_4h = CONCAT13(var_4h >> 0x18, 0x3f2a);\n            iVar9 = fcn.00425340(*arg_8h, &var_4h);\n            if (iVar9 == 0) {\n                iVar9 = fcn.00421578(*arg_8h, 0, 0, &var_20h);\n            }\n            else {\n                iVar9 = fcn.0042160e(*arg_8h, iVar9, &var_20h);\n            }\n            if (iVar9 != 0) goto code_r0x0042155a;\n            arg_8h = arg_8h + 1;\n            ppcVar11 = var_20h;\n            ppcVar4 = var_1ch;\n            iVar9 = *arg_8h;\n        }\n        var_8h = NULL;\n        var_4h = NULL;\n        var_ch = (ppcVar4 - ppcVar11 >> 2) + 1;\n        pcVar10 = ~-(ppcVar4 < ppcVar11) & (ppcVar4 - ppcVar11) + 3U >> 2;\n        if (pcVar10 != NULL) {\n            var_4h = NULL;\n            ppcVar8 = ppcVar11;\n            do {\n                pcVar7 = *ppcVar8;\n                pcVar1 = pcVar7 + 1;\n                do {\n                    cVar2 = *pcVar7;\n                    pcVar7 = pcVar7 + 1;\n                } while (cVar2 != '\\0');\n                var_4h = pcVar7 + var_4h + (1 - pcVar1);\n                ppcVar8 = ppcVar8 + 1;\n                var_8h = var_8h + 1;\n            } while (var_8h != pcVar10);\n        }\n        iVar6 = fcn.0041e5fb(var_ch, var_4h, 1);\n        if (iVar6 == 0) {\n            iVar9 = -1;\n        }\n        else {\n            var_ch = iVar6 + var_ch * 4;\n            var_10h = var_ch;\n            if (ppcVar11 != ppcVar4) {\n                var_14h = iVar6 - ppcVar11;\n                do {\n                    var_8h = *ppcVar11;\n                    pcVar10 = var_8h + 1;\n                    do {\n                        cVar2 = *var_8h;\n                        var_8h = var_8h + 1;\n                    } while (cVar2 != '\\0');\n                    var_8h = var_8h + (1 - pcVar10);\n                    iVar9 = fcn.00425331(var_ch, var_4h + (var_10h - var_ch), *ppcVar11, var_8h);\n                    if (iVar9 != 0) {\n                        fcn.0041a266(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        iVar9 = (*pcVar3)();\n                        return iVar9;\n                    }\n                    *(var_14h + ppcVar11) = var_ch;\n                    ppcVar11 = ppcVar11 + 1;\n                    var_ch = var_ch + var_8h;\n                } while (ppcVar11 != ppcVar4);\n            }\n            iVar9 = 0;\n            *arg_ch = iVar6;\n        }\n        fcn.0041f6da(0);\ncode_r0x0042155a:\n        fcn.00421792();\n    }\n    return iVar9;\n}\n",
        "token_count": 1143
    },
    "0040f64d": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0040f64d(uint32_t param_1)\n\n{\n    uint uStack4;\n    \n    if ((param_1 < 0) || (0xc < param_1)) {\n        if (param_1 == 0x32) {\n            uStack4 = 5;\n        }\n        else {\n            if (param_1 != 0x33) {\n                if (param_1 == 0x34) {\n                    return 9;\n                }\n                if (param_1 == 0x4c) {\n                    return 6;\n                }\n                if (param_1 == 0x50) {\n                    return 0xff;\n                }\n            }\n            uStack4 = 1;\n        }\n    }\n    else {\n        uStack4 = *(param_1 * 4 + 0x434118);\n    }\n    return uStack4;\n}\n",
        "token_count": 191
    },
    "00416a40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416a40(int32_t *arg_8h, uint8_t *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_10h;\n    uint lpArguments;\n    int32_t *var_8h;\n    uint8_t *var_4h;\n    \n    lpArguments = 0x19930520;\n    if (arg_ch != NULL) {\n        if ((*arg_ch & 0x10) != 0) {\n            iVar1 = *(*arg_8h + -4);\n            pcVar2 = *(iVar1 + 0x20);\n            arg_ch = *(iVar1 + 0x18);\n            (**0x42922c)(*arg_8h + -4);\n            (*pcVar2)();\n            if (arg_ch == NULL) goto code_r0x00416a87;\n        }\n        if ((*arg_ch & 8) != 0) {\n            lpArguments = 0x1994000;\n        }\n    }\ncode_r0x00416a87:\n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0xe06d7363, 1, 3, &lpArguments);\n    return;\n}\n",
        "token_count": 285
    },
    "0040ed35": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0040ed35(uint param_1, int32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uchar *puStack604;\n    uchar *puStack600;\n    uchar *puStack596;\n    uchar *puStack592;\n    uint32_t uStack572;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uStack560;\n    uint32_t uStack556;\n    uchar auStack552 [12];\n    uchar auStack540 [8];\n    uchar auStack532 [20];\n    uchar auStack512 [48];\n    uint auStack464 [5];\n    uint auStack444 [37];\n    uint auStack296 [5];\n    uint auStack276 [3];\n    uchar auStack264 [216];\n    uint32_t uStack48;\n    \n    uStack572 = 0x40;\n    if (param_4 < 0x40) {\n        uStack572 = param_4;\n    }\n    fcn.00416ab0();\n    puStack592 = &stack0xfffffef8;\n    puStack596 = 0x40ed73;\n    fcn.00416480();\n    uStack572 = param_2;\n    fcn.0040ecaa();\n    uStack556 = (param_3 - 1U) / 0x14 + 1;\n    if (uStack556 != 0) {\n        iVar3 = 0;\n        uVar6 = 1;\n        do {\n            (&stack0xfffffe00)[param_4] = uVar6 >> 0x18;\n            (&stack0xfffffe03)[param_4] = uVar6;\n            (&stack0xfffffe01)[param_4] = uVar6 >> 0x10;\n            puStack592 = 0x2a;\n            (&stack0xfffffe02)[param_4] = uVar6 >> 8;\n            puStack592 = param_4 + 4;\n            puVar4 = &stack0xfffffeec;\n            puVar5 = &stack0xfffffe44;\n            for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar5 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            uVar7 = uVar6;\n            if (puStack592 != NULL) {\n                puStack596 = &stack0xfffffe00;\n                puStack600 = &stack0xfffffe44;\n                puStack604 = 0x40ee14;\n                fcn.00406459();\n            }\n            puStack592 = NULL;\n            puStack596 = NULL;\n            puStack600 = 0x14;\n            puStack604 = &stack0xfffffdd8;\n            fcn.0040ec02(&stack0xfffffe44);\n            fcn.00416ab0(&stack0xfffffdd8, &stack0xfffffdc4, 0x14);\n            puStack592 = puStack592 & 0xffffff;\n            uStack560 = uVar6;\n            for (iVar1 = unaff_EBP; iVar1 != 0; iVar1 = iVar1 + -1) {\n                puVar4 = &stack0xfffffed8;\n                puVar5 = &stack0xfffffe30;\n                for (iVar2 = 0x2a; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar5 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                    puVar5 = puVar5 + 1;\n                }\n                fcn.00406459(&stack0xfffffe30, &stack0xfffffdc4, 0x14);\n                fcn.0040ec02();\n                uVar6 = 0;\n                do {\n                    (&stack0xfffffdb8)[uVar6] = (&stack0xfffffdb8)[uVar6] ^ (&stack0xfffffda4)[uVar6];\n                    uVar6 = uVar6 + 1;\n                } while (uVar6 < 0x14);\n                param_4 = uStack48;\n            }\n            puStack592 = param_3 - iVar3;\n            if (0x14 < param_3 - iVar3) {\n                puStack592 = 0x14;\n            }\n            puStack596 = &stack0xfffffdec;\n            puStack600 = param_2 + iVar3;\n            puStack604 = 0x40eed8;\n            fcn.00416ab0();\n            uVar6 = uVar7 + 1;\n            iVar3 = iVar3 + 0x14;\n        } while (uStack560 < uStack556);\n    }\n    puStack592 = 0x40ef02;\n    fcn.00405ac3();\n    puStack592 = 0x14;\n    puStack596 = &stack0xfffffde4;\n    puStack600 = 0x40ef0d;\n    fcn.00405ac3();\n    puStack600 = 0x14;\n    puStack604 = &stack0xfffffdc8;\n    fcn.00405ac3();\n    return;\n}\n",
        "token_count": 1192
    },
    "00404ba7": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404ba7(uint param_1)\n\n{\n    *0x43af20 = *0x43af20 + 1;\n    if (7 < *0x43af20) {\n        *0x43af20 = 0;\n    }\n    fcn.00404bd8(param_1, *0x43af20 * 0x800 + 0x436f20, 0x400);\n    return;\n}\n",
        "token_count": 99
    },
    "004071d1": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004071d1(uint32_t arg_8h)\n\n{\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    \n    var_ch = 0;\n    var_10h = (arg_8h & 0x1f) * 2;\n    var_14h = arg_8h >> 5 & 0x3f;\n    var_18h = arg_8h >> 0xb & 0x1f;\n    var_1ch = arg_8h >> 0x10 & 0x1f;\n    var_20h = arg_8h >> 0x15 & 0xf;\n    var_24h = (arg_8h >> 0x19) + 0x7bc;\n    fcn.0040722d(&var_24h);\n    return;\n}\n",
        "token_count": 234
    },
    "004106e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004106e4(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint ARG_0;\n    uint var_2ch;\n    code *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    ARG_0 = 0x30;\n    var_2ch = 0x828;\n    var_28h = fcn.00410b50;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = arg_8h;\n    var_18h = 0;\n    var_14h = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f00);\n    var_10h = 6;\n    var_ch = 0;\n    var_8h = 0x42a2a0;\n    var_4h = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExW)(&ARG_0);\n    *in_ECX = arg_8h;\n    return;\n}\n",
        "token_count": 280
    },
    "00406366": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.00406366(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EDI;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uchar auStack64 [40];\n    uint *puStack24;\n    \n    uVar1 = *(param_1 + 0x18);\n    uVar4 = *(param_1 + 0x18) & 0x3f;\n    arg_8h = *(param_1 + 0x1c) << 3 | uVar1 >> 0x1d;\n    *(uVar4 + 0x20 + param_1) = 0x80;\n    uVar4 = uVar4 + 1;\n    if (uVar4 != 0x38) {\n        arg_8h = unaff_EDI;\n        if (0x38 < uVar4) {\n            if (uVar4 < 0x40) {\n                fcn.00416480(param_1 + 0x20 + uVar4, 0, 0x40 - uVar4);\n                arg_8h = unaff_EDI;\n            }\n            uVar4 = 0;\n            fcn.00405aed(param_1, auStack64, param_1 + 0x20, 1);\n        }\n        fcn.00416480(param_1 + 0x20 + uVar4, 0, 0x38 - uVar4);\n    }\n    uVar2 = fcn.0041ccb4(arg_8h);\n    *(param_1 + 0x58) = uVar2;\n    uVar2 = fcn.0041ccb4(uVar1 << 3);\n    *(param_1 + 0x5c) = uVar2;\n    fcn.00405aed(param_1, &stack0xffffffb0, param_1 + 0x20, 1);\n    iVar5 = param_1 - puStack24;\n    iVar3 = 5;\n    do {\n        *puStack24 = *(iVar5 + puStack24);\n        puStack24 = puStack24 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.00406428(param_1);\n    return;\n}\n",
        "token_count": 534
    },
    "00407bc7": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.00407bc7(uint16_t *param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    \n    uVar1 = *param_1;\n    iVar2 = param_3 + -1;\n    do {\n        if ((uVar1 == 0) || (iVar4 = iVar2 + -1,  iVar4 < 0)) {\n            *param_2 = 0;\n            return;\n        }\n        uVar1 = *param_1;\n        uVar3 = uVar1;\n        puVar5 = param_1 + 1;\n        if (uVar3 < 0x80) {\n            *param_2 = uVar1;\n            param_2 = param_2 + 1;\n        }\n        else if ((uVar3 < 0x800) && (iVar4 = iVar2 + -2,  -1 < iVar4)) {\n            *param_2 = uVar1 >> 6 | 0xc0;\n            param_2[1] = uVar1 & 0x3f | 0x80;\n            param_2 = param_2 + 2;\n        }\n        else {\n            if ((uVar3 - 0xd800 < 0x400) && (*puVar5 + 0x2400 < 0x400)) {\n                uVar3 = uVar3 * 0x400 + -0x35fdc00 + *puVar5;\n                puVar5 = param_1 + 2;\n            }\n            if (uVar3 < 0x10000) {\n                iVar4 = iVar4 + -2;\n                if (iVar4 < 0) {\ncode_r0x00407c91:\n                    iVar4 = iVar4 + -3;\n                    if (-1 < iVar4) {\n                        *param_2 = uVar3 >> 0x12 | 0xf0;\n                        param_2[1] = uVar3 >> 0xc & 0x3f | 0x80;\n                        param_2[3] = uVar3 & 0x3f | 0x80;\n                        param_2[2] = uVar3 >> 6 & 0x3f | 0x80;\n                        param_2 = param_2 + 4;\n                    }\n                }\n                else {\n                    *param_2 = uVar3 >> 0xc | 0xe0;\n                    param_2[2] = uVar3 & 0x3f | 0x80;\n                    param_2[1] = uVar3 >> 6 & 0x3f | 0x80;\n                    param_2 = param_2 + 3;\n                }\n            }\n            else if (uVar3 < 0x200000) goto code_r0x00407c91;\n        }\n        uVar1 = *puVar5;\n        iVar2 = iVar4;\n        param_1 = puVar5;\n    } while( true );\n}\n",
        "token_count": 693
    },
    "004227f0": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004227f0(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x469810));\n    return;\n}\n",
        "token_count": 68
    },
    "00422813": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422813(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x469810));\n    return;\n}\n",
        "token_count": 68
    },
    "00406795": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuchar fcn.00406795(int32_t param_1)\n\n{\n    uchar uVar1;\n    \n    if ((param_1 == 0x20) || (param_1 == 9)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 75
    },
    "004067ac": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuchar fcn.004067ac(uint8_t *param_1)\n\n{\n    while( true ) {\n        if (*param_1 == 0) {\n            return 1;\n        }\n        if (0x7f < *param_1) break;\n        param_1 = param_1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 76
    },
    "004067c6": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t fcn.004067c6(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    unkuint3 Var2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    uVar1 = *param_1;\n    while( true ) {\n        Var2 = uVar1 >> 8;\n        if (uVar1 == 0) {\n            return CONCAT31(Var2, 1);\n        }\n        if (0x7f < uVar1) break;\n        iVar3 = iVar3 + 1;\n        uVar1 = param_1[iVar3];\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 147
    },
    "00406807": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00406807(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    int64_t iVar9;\n    int32_t iStack104;\n    int16_t aiStack100 [42];\n    uint32_t uStack16;\n    \n    uVar3 = 1;\n    uVar6 = 0;\n    uVar7 = 0;\n    if ((param_2 < 1) && (param_2 < 0)) {\n        bVar8 = param_1 != 0;\n        param_1 = -param_1;\n        iStack104 = 1;\n        param_2 = -(param_2 + bVar8);\n        uVar2 = uVar3;\n    }\n    else {\n        uVar2 = 0;\n        iStack104 = 0;\n    }\n    iVar9 = CONCAT44(param_2, param_1);\n    uVar2 = param_4 - uVar2;\n    do {\n        uVar5 = iVar9;\n        if (uVar2 <= uVar3) break;\n        iVar1 = fcn.004158f0(iVar9, 10, 0);\n        aiStack100[uVar7 - 8] = iVar1 + 0x30;\n        uVar7 = uVar7 + 1;\n        uVar3 = uVar5;\n        iVar9 = fcn.00415800();\n        uVar2 = uStack16;\n    } while (iVar9 != 0);\n    if (iStack104 != 0) {\n        aiStack100[uVar7] = 0x2d;\n        uVar7 = uVar7 + 1;\n    }\n    if (uVar7 != 0) {\n        piVar4 = aiStack100 + (uVar7 - 1);\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + -1;\n            *(param_3 + uVar6 * 2) = iVar1;\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < uVar7);\n    }\n    *(uVar7 * 2 + param_3) = 0;\n    return;\n}\n",
        "token_count": 552
    },
    "004085a9": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint * fcn.004085a9(uint *param_1, uint *param_2, uint *param_3)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (param_1 != param_2) {\n        iVar3 = param_3 - param_1;\n        puVar4 = param_1 + 8;\n        do {\n            *param_3 = 0;\n            param_3[4] = 0;\n            param_3[5] = 0;\n            fcn.00408de3();\n            uVar2 = puVar4[-2];\n            param_3[7] = puVar4[-1];\n            param_3[6] = uVar2;\n            uVar2 = *puVar4;\n            *(iVar3 + 4 + puVar4) = puVar4[1];\n            *(iVar3 + puVar4) = uVar2;\n            uVar2 = puVar4[2];\n            param_3[0xb] = puVar4[3];\n            puVar1 = puVar4 + 4;\n            param_3[10] = uVar2;\n            param_3 = param_3 + 0xc;\n            puVar4 = puVar4 + 0xc;\n        } while (puVar1 != param_1);\n    }\n    return param_3;\n}\n",
        "token_count": 313
    },
    "00413fbe": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00413fbe(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    char16_t *pcVar8;\n    uchar *puVar9;\n    uint uStack28;\n    \n    fcn.004154b0();\n    cVar1 = fcn.00411096();\n    if (cVar1 != '\\0') {\n        iVar3 = (*_sym.imp.USER32.dll_GetWindow)();\n        iVar7 = 0;\n        iVar6 = iVar3;\n        if (iVar3 != 0) {\n            while (iVar7 < 0x200) {\n                uStack28 = 0x800;\n                puVar9 = &stack0x00000010;\n                (*_sym.imp.USER32.dll_GetClassNameW)(iVar6, puVar9);\n                pcVar8 = L\"STATIC\";\n                iVar4 = fcn.00407d6d(&stack0x00000004, L\"STATIC\");\n                if (((iVar4 == 0) &&\n                    (uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(iVar6, 0xfffffff0),  (uVar2 & 0x1f) == 0xe)) &&\n                   (iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(iVar6, 0x173, 0, 0),  iVar4 != 0)) {\n                    (*_sym.imp.GDI32.dll_GetObjectW)(iVar4, 0x18, &uStack28);\n                    uVar5 = fcn.004110d5(puVar9);\n                    uVar5 = fcn.004110b4(pcVar8, uVar5);\n                    uVar5 = fcn.004112dc(iVar4, uVar5);\n                    (*_sym.imp.USER32.dll_SendMessageW)(iVar6, 0x172, 0, uVar5);\n                    (*_sym.imp.GDI32.dll_DeleteObject)(iVar4);\n                }\n                iVar6 = (*_sym.imp.USER32.dll_GetWindow)(iVar6, 2);\n                if (iVar6 == iVar3) {\n                    return;\n                }\n                iVar7 = iVar7 + 1;\n                if (iVar6 == 0) {\n                    return;\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 528
    },
    "0042235a": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042235a(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00416030();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00420e61(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = *0x434684 & 0x1f;\n    *(unaff_EBP + -0x1c) = (*0x434684 ^ *0x469c70) >> uVar1 | (*0x434684 ^ *0x469c70) << 0x20 - uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004223a8(0x431ef8, noname_1, unaff_retaddr);\n    fcn.00416080();\n    return;\n}\n",
        "token_count": 272
    },
    "0040b3dc": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nuint fcn.0040b3dc(uint32_t param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    ulong uVar7;\n    uint uVar8;\n    \n    uVar5 = param_1 + *0x44e600;\n    iVar4 = *0x44e604 + param_2 + CARRY4(param_1, *0x44e600);\n    uVar7 = fcn.004158f0(uVar5, iVar4, 0x2000, 0);\n    uVar2 = uVar7;\n    iVar3 = (iVar4 - (uVar7 >> 0x20)) - (uVar5 < uVar2);\n    if ((iVar4 < 1) && (iVar4 < 0)) {\n        uVar8 = 3;\n    }\n    else {\n        if ((uVar5 - uVar2 == *0x44e5f8) && (iVar3 == *0x44e5fc)) {\n            uVar5 = (*0x44e5b8 - uVar2) - *0x44e5b4;\n            bVar6 = CARRY4(*0x44e5c0, uVar5);\n            *0x44e5c0 = *0x44e5c0 + uVar5;\n            *0x44e5c4 = *0x44e5c4 + (uVar5 >> 0x1f) + bVar6;\n        }\n        else {\n            pcVar1 = *(**0x44e5d8 + 0x10);\n            (**0x42922c)(uVar5 - uVar2, iVar3, 0);\n            (*pcVar1)();\n            pcVar1 = *(**0x44e5d8 + 0x14);\n            (**0x42922c)();\n            *0x44e5f8 = (*pcVar1)();\n            pcVar1 = *(**0x44e5d8 + 0xc);\n            (**0x42922c)(*0x44e5b4, 0x2000);\n            *0x44e5c0 = (*pcVar1)();\n            *0x44e5c4 = *0x44e5c0 >> 0x1f;\n            if ((-1 < *0x44e5c0 || *0x44e5c4 < 0) && ((*0x44e5c4 < 0 || (*0x44e5c0 == 0)))) {\n                uVar8 = 0x33;\n                goto code_r0x0040b4f4;\n            }\n            bVar6 = *0x44e5c0 < uVar2;\n            *0x44e5c0 = *0x44e5c0 - uVar2;\n            *0x44e5c4 = (*0x44e5c4 - (uVar2 >> 0x1f)) - bVar6;\n        }\n        *0x44e5b8 = uVar2 + *0x44e5b4;\n        uVar8 = 0;\n    }\ncode_r0x0040b4f4:\n    *0x44e5fc = *0x44e5f8 >> 0x20;\n    return uVar8;\n}\n",
        "token_count": 770
    },
    "0040d2a7": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nint32_t fcn.0040d2a7(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint uStack68;\n    uint uStack64;\n    uint32_t uStack60;\n    uint32_t uStack12;\n    int32_t iStack8;\n    \n    uVar3 = *0x44e5e4;\n    uVar8 = *0x44e5e0;\n    if ((*0x44e5e4 < 1) && ((*0x44e5e4 < 0 || (*0x44e5e0 < 0x2001)))) {\n        uStack60 = 0;\n        uStack64 = 0;\n        uStack68 = 0;\n        pcVar1 = *(**0x44e5d8 + 0x10);\n        (**0x42922c)();\n        (*pcVar1)();\n        uVar3 = fcn.0040b5b3(*0x44e5b4, *0x44e5e0);\n        uVar8 = *0x44e5b4;\n        iVar5 = uVar3 >> 0x1f;\n        *0x44e5c0 = uVar3;\n        *0x44e5c4 = iVar5;\n        *0x44e5f8 = CONCAT44(*0x44e5fc, *0x44e5f8);\n        if ((uVar3 == *0x44e5e0) && (*0x44e5f8 = CONCAT44(*0x44e5fc, *0x44e5f8),  iVar5 == *0x44e5e0 >> 0x1f)) {\n            for (uVar6 = (*0x44e5b4 - 0x16) + *0x44e5e0; *0x44e5b8 = uVar6,  uVar8 <= uVar6; uVar6 = uVar6 - 1) {\n                uVar7 = uVar6;\n                cVar2 = fcn.0040aa37();\n                if (cVar2 != '\\0') {\n                    uVar4 = uVar6 - uVar8;\n                    *0x44e5c0 = uVar3 - uVar4;\n                    *0x44e5c4 = (iVar5 - (uVar4 >> 0x1f)) - (uVar3 < uVar4);\n                    goto code_r0x0040d5a5;\n                }\n            }\n        }\ncode_r0x0040d591:\n        iVar5 = 2;\n    }\n    else {\n        uStack60 = 0;\n        uStack64 = 0x2000;\n        uStack68 = *0x44e5e4;\n        uVar6 = fcn.004158f0();\n        iVar5 = uVar6 >> 0x1f;\n        if (uVar6 < 0x13) {\n            *0x44e5f8 = CONCAT44((uVar3 - iVar5) - (uVar8 < uVar6), uVar8 - uVar6);\n        }\n        else {\n            iVar9 = 0;\n            uVar4 = (uVar3 - iVar5) - (uVar8 < uVar6);\n            iVar5 = **0x44e5d8;\n            (**0x42922c)(uVar8 - uVar6);\n            (**(iVar5 + 0x10))();\n            pcVar1 = *(**0x44e5d8 + 0x14);\n            (**0x42922c)();\n            *0x44e5f8 = (*pcVar1)();\n            uVar7 = uStack60;\n            iVar5 = iVar9;\n            *0x44e5c0 = fcn.0040b5b3(*0x44e5b4, uStack60);\n            uVar3 = *0x44e5b4;\n            iVar9 = *0x44e5c0 >> 0x1f;\n            *0x44e5c4 = iVar9;\n            if ((*0x44e5c0 != uVar4) || (iVar9 != iVar5)) goto code_r0x0040d591;\n            uStack68 = *0x44e5c0;\n            for (uVar7 = (uVar7 - 0x16) + *0x44e5b4; *0x44e5b8 = uVar7,  uVar3 <= uVar7; uVar7 = uVar7 - 1) {\n                cVar2 = fcn.0040aa37();\n                if (cVar2 != '\\0') {\n                    uVar7 = uVar7 - uVar3;\n                    *0x44e5c0 = uVar8 - uVar7;\n                    *0x44e5c4 = (iVar9 - (uVar7 >> 0x1f)) - (uVar8 < uVar7);\n                    break;\n                }\n            }\n            fcn.0041cb90(*0x44e60c, uVar3, 3);\n        }\n        uVar7 = (uStack12 - uVar6) + 0x1fff;\n        iVar5 = fcn.00415800(uVar7, ((iStack8 - iVar5) - (uStack12 < uVar6)) + (0xffffe000 < uStack12 - uVar6), 0x2000, \n                             0);\n        uStack68 = 1;\n        uVar3 = uStack64;\n        uVar6 = *0x44e5b8;\n        uVar8 = *0x44e5b4;\n        if (uStack64 == 0) {\n            do {\n                if (iVar5 < uStack68) goto code_r0x0040d591;\n                *0x44e5f8 = *0x44e5f8 + -0x2000;\n                pcVar1 = *(**0x44e5d8 + 0x10);\n                (**0x42922c)(*0x44e5f8, 0);\n                (*pcVar1)();\n                uVar7 = *0x44e5b4;\n                *0x44e5c0 = fcn.0040b5b3(*0x44e5b4, 0x2000);\n                uVar8 = *0x44e5b4;\n                iVar9 = *0x44e5c0 >> 0x1f;\n                *0x44e5c4 = iVar9;\n                uStack60 = *0x44e5c0;\n                if (*0x44e5c0 != 0x2000) break;\n                for (uVar6 = *0x44e5b4 + 0x1fff; *0x44e5b8 = uVar6,  uVar8 <= uVar6; uVar6 = uVar6 - 1) {\n                    uVar7 = uVar6;\n                    cVar2 = fcn.0040aa37();\n                    if (cVar2 != '\\0') {\n                        uVar6 = uVar6 - uVar8;\n                        *0x44e5c0 = uStack64 - uVar6;\n                        *0x44e5c4 = (iVar9 - (uVar6 >> 0x1f)) - (uStack64 < uVar6);\n                        uVar3 = 1;\n                        break;\n                    }\n                }\n                fcn.0041cb90(*0x44e60c, uVar8, 3, uVar7);\n                uStack68 = uStack68 + 1;\n            } while (uVar3 == 0);\n            uVar6 = *0x44e5b8;\n            uVar8 = *0x44e5b4;\n            if (uVar3 == 0) goto code_r0x0040d591;\n        }\ncode_r0x0040d5a5:\n        *0x43e568 = *0x44e5f8 + (uVar6 - uVar8);\n        iVar5 = fcn.0040b19c(&stack0xffffffc8, 0x16, uVar7);\n        if (iVar5 == 0) {\n            iVar5 = 0x33;\n        }\n        else {\n            *0x44e670 = fcn.0040b049(&uStack60);\n            *0x44e672 = fcn.0040b049(&uStack64 + 2);\n            *0x44e678 = fcn.0040b049(&uStack64);\n            *0x44e678 = *0x44e678 & 0xffff;\n            *0x44e67c = 0;\n            *0x44e680 = fcn.0040b049(&uStack68 + 2);\n            *0x44e680 = *0x44e680 & 0xffff;\n            *0x44e684 = 0;\n            *0x44e688 = fcn.0040b024(&uStack68);\n            *0x44e68c = 0;\n            *0x44e690 = fcn.0040b024(&uStack68);\n            *0x44e694 = 0;\n            *0x44e698 = fcn.0040b049(&uStack68);\n            iVar5 = fcn.0040d021(uStack64 + 0x4c, uStack60 + (0xffffffb3 < uStack64));\n            if (iVar5 == 0) {\n                *0x43e570 = *0x44e690 + *0x44e688;\n                *0x43e574 = *0x44e694 + *0x44e68c + CARRY4(*0x44e690, *0x44e688);\n                iVar5 = 0;\n            }\n        }\n    }\n    *0x43e56c = *0x43e568 >> 0x20;\n    *0x44e5fc = *0x44e5f8 >> 0x20;\n    return iVar5;\n}\n",
        "token_count": 2302
    },
    "0040dc3e": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040dc3e(void)\n\n{\n    int32_t iVar1;\n    uint var_1ch;\n    uchar var_18h [2];\n    uchar var_16h [2];\n    uchar var_14h [2];\n    uchar var_12h [4];\n    uint var_eh;\n    uint var_ah;\n    uint var_6h;\n    \n    iVar1 = fcn.0040b19c(&var_1ch, 0x1a);\n    if (iVar1 == 0) {\n        return 0x33;\n    }\n    *0x44e610 = var_1ch;\n    *0x44e611 = var_1ch._1_1_;\n    *0x44e612 = fcn.0040b049(&var_1ch + 2);\n    *0x44e614 = fcn.0040b049(var_18h);\n    *0x44e616 = fcn.0040b049(var_16h);\n    *0x44e618 = fcn.0040b049(var_14h);\n    *0x44e61c = fcn.0040b024(var_12h);\n    *0x44e620 = fcn.0040b024(&var_eh);\n    *0x44e624 = 0;\n    *0x44e628 = fcn.0040b024(&var_ah);\n    *0x44e62c = 0;\n    *0x44e630 = fcn.0040b049(&var_6h);\n    *0x44e632 = fcn.0040b049(&var_6h + 2);\n    if ((*0x44e612 & 8) != 0) {\n        *0x44e61c = *(*0x43e5a8 + 0x30);\n        *0x44e620 = *(*0x43e5a8 + 0x20);\n        *0x44e624 = *(*0x43e5a8 + 0x24);\n        *0x44e628 = *(*0x43e5a8 + 0x28);\n        *0x44e62c = *(*0x43e5a8 + 0x2c);\n    }\n    *0x43e578 = *0x44e620;\n    *0x43e57c = *0x44e624;\n    *0x43e580 = *0x44e628;\n    *0x43e584 = *0x44e62c;\n    return 0;\n}\n",
        "token_count": 579
    },
    "00411d04": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint16_t * fcn.00411d04(void)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int16_t *in_stack_00002008;\n    int16_t *in_stack_0000200c;\n    int16_t *piVar5;\n    ushort *in_stack_00002010;\n    uchar *in_stack_00002014;\n    uchar *in_stack_00002018;\n    int32_t in_stack_0000201c;\n    \n    fcn.004154b0();\n    if (in_stack_00002014 != NULL) {\n        *in_stack_00002014 = 0;\n    }\n    if (in_stack_00002018 != NULL) {\n        *in_stack_00002018 = 0;\n    }\n    if ((in_stack_00002008 == NULL) || (iVar1 = *in_stack_00002008,  iVar1 == 0)) {\n        piVar2 = NULL;\n    }\n    else {\n        iVar4 = 0;\n        piVar3 = NULL;\n        do {\n            piVar2 = in_stack_00002008 + 1;\n            piVar5 = in_stack_0000200c;\n            if (iVar1 == 0x3d) {\n                if ((in_stack_00002010 == NULL) || (piVar3 != NULL)) goto code_r0x00411d83;\n                if (in_stack_00002014 != NULL) {\n                    *in_stack_00002014 = 1;\n                }\n            }\n            else {\n                if (iVar1 == 0xd) {\n                    piVar2 = in_stack_00002008 + 2;\n                    break;\n                }\n                if (iVar1 == 10) break;\ncode_r0x00411d83:\n                *in_stack_0000200c = iVar1;\n                piVar5 = in_stack_0000200c + 1;\n                in_stack_0000200c = piVar3;\n                if (in_stack_0000201c + -2 <= iVar4) {\n                    *in_stack_00002018 = 1;\n                    break;\n                }\n            }\n            iVar1 = *piVar2;\n            iVar4 = iVar4 + 1;\n            piVar3 = in_stack_0000200c;\n            in_stack_00002008 = piVar2;\n            in_stack_0000200c = piVar5;\n        } while (iVar1 != 0);\n        *piVar5 = 0;\n        if ((in_stack_00002010 != NULL) && (*in_stack_00002010 = 0,  piVar3 != NULL)) {\n            (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(piVar3, &stack0x00000004, 0x1000);\n            fcn.0040694c(in_stack_00002010, &stack0xfffffff8, in_stack_0000201c);\n            *piVar3 = 0;\n        }\n    }\n    return piVar2;\n}\n",
        "token_count": 673
    },
    "0040e9e0": {
        "rules": [
            "generate random numbers using the Delphi LCG/d1e3669b265a4cefae2dee380548f202"
        ],
        "decompiled_code": "\nuint32_t fcn.0040e9e0(uint32_t param_1)\n\n{\n    *0x44f6e0 = *0x44f6e0 >> 8 ^ *(((param_1 ^ *0x44f6e0) & 0xff) * 4 + 0x43e150);\n    *0x44f6e4 = ((*0x44f6e0 & 0xff) + *0x44f6e4) * 0x8088405 + 1;\n    *0x44f6e8 = *0x44f6e8 >> 8 ^ *(((*0x44f6e4 >> 0x18 ^ *0x44f6e8) & 0xff) * 4 + 0x43e150);\n    return param_1;\n}\n",
        "token_count": 187
    },
    "004107de": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nint16_t * fcn.004107de(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int16_t *piVar8;\n    int16_t *piVar9;\n    char16_t *in_stack_ffffffd0;\n    int16_t *piVar10;\n    \n    iVar4 = fcn.0041a023(param_1);\n    piVar5 = fcn.0041c47d(iVar4 * 2 + 2);\n    if (piVar5 != NULL) {\n        cVar3 = fcn.0041002a(param_1);\n        iVar1 = *param_1;\n        piVar8 = piVar5;\njoined_r0x0041081f:\n        if (iVar1 != 0) {\n            do {\n                if (iVar1 == 0x3c) break;\n                if ((cVar3 == '\\0') || ((iVar1 != 0xd && (iVar1 != 10)))) {\n                    bVar2 = false;\n                    if ((cVar3 == '\\0') || (iVar1 != 0x26)) {\ncode_r0x00410892:\n                        iVar1 = *param_1;\n                        if (iVar1 != 0) {\n                            if (((iVar1 != 0x20) || (piVar8 == piVar5)) || (piVar8[-1] != 0x20)) {\n                                *piVar8 = iVar1;\n                                goto code_r0x004108ac;\n                            }\n                            goto code_r0x004108af;\n                        }\n                    }\n                    else {\n                        uVar6 = 0;\n                        do {\n                            iVar1 = *(uVar6 + param_1);\n                            if (iVar1 == 0) break;\n                            if (iVar1 == 0x3b) {\n                                param_1 = uVar6 + param_1 + 1;\n                                bVar2 = true;\n                            }\n                            uVar6 = uVar6 + 2;\n                        } while (uVar6 < 0x28);\n                        if (!bVar2) goto code_r0x00410892;\n                    }\n                }\n                else {\n                    if ((piVar8 == piVar5) || (piVar8[-1] != 0x20)) {\n                        *piVar8 = 0x20;\ncode_r0x004108ac:\n                        piVar8 = piVar8 + 1;\n                    }\ncode_r0x004108af:\n                    param_1 = param_1 + 1;\n                }\n                iVar1 = *param_1;\n            } while (iVar1 != 0);\n            piVar10 = 0x4108d3;\n            iVar4 = fcn.00407d8f(param_1, 0x42a3c8, 4);\n            if (iVar4 == 0) {\ncode_r0x004108ed:\n                *piVar8 = 0xd;\n                piVar8[1] = 10;\n                piVar9 = piVar8 + 2;\n                if (iVar4 == 0) {\n                    *piVar9 = 0xd;\n                    piVar8[3] = 10;\n                    piVar9 = piVar8 + 4;\n                }\n            }\n            else {\n                piVar10 = 0x4;\n                in_stack_ffffffd0 = L\"<br>\";\n                iVar7 = fcn.00407d8f(param_1, L\"<br>\", 4);\n                piVar9 = piVar8;\n                if (iVar7 == 0) goto code_r0x004108ed;\n            }\n            *piVar9 = 0;\n            iVar4 = fcn.00407d8f(param_1, L\"<style>\", 7);\n            iVar1 = *param_1;\n            piVar8 = piVar9;\n            if (iVar4 == 0) {\n                while (iVar1 != 0) {\n                    iVar4 = fcn.00407d8f(param_1, L\"</style>\", 8);\n                    if (iVar4 == 0) {\n                        param_1 = param_1 + 8;\n                        iVar1 = *param_1;\n                        break;\n                    }\n                    iVar1 = param_1[1];\n                    param_1 = param_1 + 1;\n                }\n            }\n            else {\n                while ((iVar1 != 0 && (piVar5 = piVar10,  iVar1 != in_stack_ffffffd0))) {\n                    param_1 = param_1 + 1;\n                    iVar1 = *param_1;\n                }\n                if (iVar1 == in_stack_ffffffd0) {\n                    param_1 = param_1 + 1;\n                    iVar1 = *param_1;\n                }\n            }\n            goto joined_r0x0041081f;\n        }\n    }\n    return piVar5;\n}\n",
        "token_count": 1093
    },
    "004116eb": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\nvoid fcn.004116eb(uint param_1, uint8_t param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    ushort auStack260 [50];\n    ushort auStack160 [50];\n    uchar auStack60 [16];\n    uchar auStack44 [16];\n    uchar auStack28 [16];\n    uchar auStack12 [8];\n    \n    (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(param_1, auStack44);\n    (*_sym.imp.KERNEL32.dll_SystemTimeToTzSpecificLocalTime)(0, auStack44, auStack60);\n    (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(auStack60, auStack12);\n    (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(auStack12, auStack28);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetDateFormatW)(0x400, 0, auStack28, 0, auStack260, 0x32);\n    if (iVar1 == 0) {\n        auStack260[0] = 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetTimeFormatW)(0x400, (param_2 ^ 1) * 2, auStack28, 0, auStack160, 0x32);\n    if (iVar1 == 0) {\n        auStack160[0] = 0;\n    }\n    fcn.00402aa2(param_3, param_4, L\"%s %s\", auStack260, auStack160);\n    return;\n}\n",
        "token_count": 351
    },
    "004118e4": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nvoid fcn.004118e4(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    iVar1 = *param_1;\n    piVar2 = param_1;\n    do {\n        if (iVar1 == 0) {\n            *param_1 = 0;\n            return;\n        }\n        if (iVar1 == 0x5c) {\n            if (piVar2[1] == 0x5c) {\n                piVar2 = piVar2 + 2;\n                iVar1 = 0x5c;\n            }\n            else {\n                if (piVar2[1] != 0x6e) goto code_r0x0041191e;\n                piVar2 = piVar2 + 2;\n                iVar1 = 10;\n            }\n        }\n        else {\ncode_r0x0041191e:\n            piVar2 = piVar2 + 1;\n        }\n        *param_1 = iVar1;\n        param_1 = param_1 + 1;\n        iVar1 = *piVar2;\n    } while( true );\n}\n",
        "token_count": 249
    },
    "00415c2c": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415c9b)\n// WARNING: Removing unreachable block (ram,0x00415c5f)\n// WARNING: Removing unreachable block (ram,0x00415d13)\n\nuint fcn.00415c2c(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t in_XCR0;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x4692a8 = 0;\n    *0x434674 = *0x434674 | 1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(10);\n    uVar4 = *0x434674;\n    if (iVar3 != 0) {\n        piVar1 = cpuid_basic_info(0);\n        puVar2 = cpuid_Version_info(1);\n        uVar5 = puVar2[3];\n        if (((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) &&\n           (((((uVar4 = *puVar2 & 0xfff3ff0,  uVar4 == 0x106c0 || (uVar4 == 0x20660)) || (uVar4 == 0x20670)) ||\n             ((uVar4 == 0x30650 || (uVar4 == 0x30660)))) || (uVar4 == 0x30670)))) {\n            *0x4692ac = *0x4692ac | 1;\n        }\n        if (*piVar1 < 7) {\n            uVar6 = 0;\n        }\n        else {\n            iVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n            uVar6 = *(iVar3 + 4);\n            if ((uVar6 & 0x200) != 0) {\n                *0x4692ac = *0x4692ac | 2;\n            }\n        }\n        *0x4692a8 = 1;\n        uVar4 = *0x434674 | 2;\n        if ((uVar5 & 0x100000) != 0) {\n            uVar4 = *0x434674 | 6;\n            *0x4692a8 = 2;\n            if ((((uVar5 & 0x8000000) != 0) && ((uVar5 & 0x10000000) != 0)) && ((in_XCR0 & 6) == 6)) {\n                *0x4692a8 = 3;\n                uVar4 = *0x434674 | 0xe;\n                if ((uVar6 & 0x20) != 0) {\n                    *0x4692a8 = 5;\n                    uVar4 = *0x434674 | 0x2e;\n                    if (((uVar6 & 0xd0030000) == 0xd0030000) && ((in_XCR0 & 0xe0) == 0xe0)) {\n                        *0x434674 = *0x434674 | 0x6e;\n                        *0x4692a8 = 6;\n                        uVar4 = *0x434674;\n                    }\n                }\n            }\n        }\n    }\n    *0x434674 = uVar4;\n    return 0;\n}\n",
        "token_count": 848
    },
    "004034bf": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004034bf(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t arg_10h;\n    int32_t unaff_retaddr;\n    \n    if (param_3 != 0) {\n        arg_10h = param_3 - 1;\n        iVar1 = fcn.00403919(param_1);\n        if (iVar1 - param_1 >> 1 <= arg_10h) {\n            iVar1 = fcn.00403919(param_1);\n            arg_10h = iVar1 - param_1 >> 1;\n        }\n        fcn.0041c3bb(unaff_retaddr, param_1, arg_10h);\n        *(unaff_retaddr + arg_10h * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00405429": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405429(int32_t param_1)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    int32_t iStack32;\n    uint8_t auStack16 [16];\n    \n    iStack32 = 1;\n    if (1 < *(param_1 + 4)) {\n        iVar6 = param_1 + 0x28;\n        do {\n            iVar8 = 0;\n            do {\n                puVar9 = auStack16 + iVar8;\n                iVar5 = 4;\n                puVar7 = iVar6 + 2;\n                do {\n                    puVar1 = puVar7 + 1;\n                    puVar2 = puVar7 + -1;\n                    puVar3 = puVar7 + -2;\n                    uVar4 = *puVar7;\n                    puVar7 = puVar7 + 4;\n                    *puVar9 = *(iVar8 + 0x43dc28 + *puVar1 * 4) ^ *(iVar8 + 0x43d428 + *puVar2 * 4) ^\n                              *(iVar8 + 0x43d028 + *puVar3 * 4) ^ *(iVar8 + 0x43d828 + uVar4 * 4);\n                    puVar9 = puVar9 + 4;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < 4);\n            fcn.00416ab0(iVar6, auStack16, 0x10);\n            iStack32 = iStack32 + 1;\n            iVar6 = iVar6 + 0x10;\n        } while (iStack32 < *(param_1 + 4));\n    }\n    return;\n}\n",
        "token_count": 454
    },
    "0040849f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040849f(int32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = (param_1[1] - *param_1) / 0x78;\n    if (param_2 < uVar1) {\n        iVar2 = param_2 * 0x78 + *param_1;\n        fcn.00407fed(iVar2, param_1[1], param_1);\n        param_1[1] = iVar2;\n    }\n    else if (uVar1 < param_2) {\n        if ((param_1[2] - *param_1) / 0x78 < param_2) {\n            fcn.004084fe(param_2);\n        }\n        else {\n            iVar2 = fcn.00408644(param_1[1], param_2 - uVar1, param_1);\n            param_1[1] = iVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00408aab": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408aab(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    char16_t *pcVar3;\n    uint var_28h;\n    \n    cVar1 = fcn.00408a71(arg_8h);\n    uVar2 = 0x429f98;\n    if (arg_10h < 99) {\n        if (cVar1 == '\\0') {\n            uVar2 = 0x429584;\n        }\n        pcVar3 = L\"z%s%02d\";\n    }\n    else {\n        if (cVar1 == '\\0') {\n            uVar2 = 0x429584;\n        }\n        pcVar3 = 0x429f9c;\n    }\n    fcn.00402aa2(&var_28h, 0x14, pcVar3, uVar2, arg_10h + 1);\n    fcn.0040398f(arg_8h, &var_28h, arg_ch);\n    return;\n}\n",
        "token_count": 241
    },
    "0040e08a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040e08a(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = param_3 - param_2 >> 1;\n    iVar2 = *param_1;\n    if (param_1[2] - iVar2 >> 1 < uVar3) {\n        fcn.0040e3db(uVar3);\n    }\n    else {\n        uVar1 = param_1[1] - iVar2 >> 1;\n        if (uVar3 <= uVar1) {\n            fcn.0040e0fc(param_2, param_3, iVar2);\n            iVar2 = iVar2 + uVar3 * 2;\n            goto code_r0x0040e0f2;\n        }\n        fcn.0040e0fc(param_2, uVar1 * 2 + param_2, iVar2);\n    }\n    iVar2 = fcn.0040e120();\ncode_r0x0040e0f2:\n    param_1[1] = iVar2;\n    return;\n}\n",
        "token_count": 270
    },
    "0040ef23": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ef23(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uchar *unaff_retaddr;\n    uchar auStack20 [20];\n    \n    fcn.00406366(param_1, auStack20);\n    iVar2 = -unaff_retaddr;\n    iVar4 = 5;\n    do {\n        uVar1 = *(unaff_retaddr + &stack0xffffffe4 + iVar2);\n        uVar5 = 0;\n        do {\n            cVar3 = uVar5;\n            uVar5 = uVar5 + 8;\n            *unaff_retaddr = uVar1 >> (0x18U - cVar3 & 0x1f);\n            unaff_retaddr = unaff_retaddr + 1;\n        } while (uVar5 < 0x20);\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return;\n}\n",
        "token_count": 234
    },
    "0041159e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.0041159e(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    uint uVar7;\n    uint uVar8;\n    uchar *puVar9;\n    uchar auStack36 [4];\n    uint uStack32;\n    int32_t iStack16;\n    int32_t iStack12;\n    uint uStack8;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetDC)(0);\n    uStack32 = uVar1;\n    iVar2 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(uVar1);\n    iVar3 = iVar2;\n    (*_sym.imp.GDI32.dll_CreateCompatibleDC)(uVar1);\n    puVar9 = auStack36;\n    uVar8 = 0x18;\n    (*_sym.imp.GDI32.dll_GetObjectW)(uStack8, 0x18, puVar9);\n    iVar3 = (iVar3 * iStack16) / unaff_EBP;\n    if (iVar3 < iStack12) {\n        iStack12 = iVar3;\n    }\n    iVar3 = iStack12;\n    uVar4 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(uVar1, iStack16, iStack12);\n    uVar5 = (*_sym.imp.GDI32.dll_SelectObject)(iVar2, uStack32);\n    uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(iVar3, uVar4);\n    uVar7 = 0;\n    (*_sym.imp.GDI32.dll_StretchBlt)(uVar1, 0, 0, unaff_EBP, iStack12, iStack16, 0, 0, uVar8, puVar9, 0xcc0020);\n    (*_sym.imp.GDI32.dll_SelectObject)(iStack16, uVar5);\n    (*_sym.imp.GDI32.dll_SelectObject)(uVar7, uVar6);\n    (*_sym.imp.GDI32.dll_DeleteDC)(iStack16);\n    (*_sym.imp.GDI32.dll_DeleteDC)(uVar7);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar1);\n    return uVar4;\n}\n",
        "token_count": 513
    },
    "00413de6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00413de6(void)\n\n{\n    uint uVar1;\n    uint uStack180;\n    uint uStack176;\n    uint32_t uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uchar *puStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uchar *puStack136;\n    uint uStack132;\n    uint uStack128;\n    uint32_t uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    char cStack36;\n    \n    uStack112 = 0x413df2;\n    fcn.00411f58();\n    uStack112 = 0x68;\n    uStack116 = *0x44f958;\n    uStack120 = 0x413e00;\n    uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)();\n    if (*0x44f963 == '\\0') {\n        uStack120 = 0x413e1f;\n        fcn.0040fd05();\n        uStack120 = 5;\n        uStack128 = 0x413e28;\n        uStack124 = uVar1;\n        (*_sym.imp.USER32.dll_ShowWindow)();\n        uStack128 = 0xffffffff;\n        uStack132 = 0;\n        puStack136 = 0xb1;\n        uStack144 = 0x413e33;\n        uStack140 = uVar1;\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        uStack144 = 0x429584;\n        uStack148 = 0;\n        puStack152 = 0xc2;\n        uStack160 = 0x413e41;\n        uStack156 = uVar1;\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        *0x44f963 = '\\x01';\n    }\n    uStack120 = 100000000;\n    uStack124 = 100000000;\n    uStack128 = 0xb1;\n    puStack136 = 0x413e57;\n    uStack132 = uVar1;\n    (*_sym.imp.USER32.dll_SendMessageW)();\n    puStack136 = &stack0xffffff8c;\n    uStack116 = 0x5c;\n    uStack140 = 0;\n    uStack144 = 0x43a;\n    puStack152 = 0x413e71;\n    uStack148 = uVar1;\n    (*_sym.imp.USER32.dll_SendMessageW)();\n    uStack128 = 1;\n    if (cStack36 != '\\0') {\n        uStack112 = 0xa0;\n        uStack124 = uStack124 & 0xbfffffff | 1;\n        uStack128 = 0x40000001;\n    }\n    puStack152 = &stack0xffffff7c;\n    uStack156 = 1;\n    uStack160 = 0x444;\n    uStack168 = 0x413eb5;\n    uStack164 = uVar1;\n    (*_sym.imp.USER32.dll_SendMessageW)();\n    uStack172 = 0;\n    uStack176 = 0xc2;\n    uStack180 = uVar1;\n    (*_sym.imp.USER32.dll_SendMessageW)();\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0xb1, 100000000, 100000000);\n    if (cStack36 != '\\0') {\n        uStack172 = uStack172 & 0xfffffffe | 0x40000000;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x444, 1, &stack0xffffff4c);\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0xc2, 0, 0x429f1c);\n    return;\n}\n",
        "token_count": 852
    },
    "00414533": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "delay execution",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414533(uint hHandle)\n\n{\n    int32_t iVar1;\n    uint lpMsg;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 10);\n    while (iVar1 == 0x102) {\n        iVar1 = (*_sym.imp.USER32.dll_PeekMessageW)(&lpMsg, 0, 0, 0, 0);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_GetMessageW)(&lpMsg, 0, 0, 0);\n            (*_sym.imp.USER32.dll_TranslateMessage)(&lpMsg);\n            (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 10);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00420dfc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420dfc(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.0041f6da(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00404c45": {
        "rules": [
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404c45(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t uStack4;\n    \n    iVar4 = 0;\n    iVar3 = 0;\n    do {\n        *(str.cw[iVar3] + 0x43af28) = iVar3;\n        iVar3 = iVar3 + 1;\n        uStack4 = param_1;\n    } while (iVar3 < 0x100);\n    do {\n        uVar1 = str.cw[iVar4];\n        uStack4 = uStack4 & 0xffffff00 | uVar1;\n        uVar5 = 0;\n        *(iVar4 * 4 + 0x43bc29) = uVar1;\n        *(iVar4 * 4 + 0x43bc28) = uVar1;\n        *(iVar4 * 4 + 0x43b82b) = uVar1;\n        *(iVar4 * 4 + 0x43b828) = uVar1;\n        *(iVar4 * 4 + 0x43b42b) = uVar1;\n        *(iVar4 * 4 + 0x43b42a) = uVar1;\n        *(iVar4 * 4 + 0x43b02a) = uVar1;\n        *(iVar4 * 4 + 0x43b029) = uVar1;\n        uVar2 = fcn.004053ff(uStack4, 2);\n        uVar7 = 3;\n        *(iVar4 * 4 + 0x43bc2b) = uVar2;\n        *(iVar4 * 4 + 0x43b82a) = uVar2;\n        *(iVar4 * 4 + 0x43b429) = uVar2;\n        *(iVar4 * 4 + 0x43b028) = uVar2;\n        uVar2 = fcn.004053ff(unaff_EBX, 3);\n        uVar1 = *(iVar4 + 0x43af28);\n        uVar6 = 0xb;\n        *(iVar4 * 4 + 0x43bc2a) = uVar2;\n        *(iVar4 * 4 + 0x43b829) = uVar2;\n        *(iVar4 * 4 + 0x43b428) = uVar2;\n        *(iVar4 * 4 + 0x43b02b) = uVar2;\n        uVar2 = fcn.004053ff(uVar5 & 0xffffff00 | uVar1, 0xb);\n        uVar5 = uVar1;\n        *(iVar4 * 4 + 0x43cc2a) = uVar2;\n        *(iVar4 * 4 + 0x43c829) = uVar2;\n        *(iVar4 * 4 + 0x43c428) = uVar2;\n        *(iVar4 * 4 + 0x43c02b) = uVar2;\n        *(uVar5 * 4 + 0x43dc2a) = uVar2;\n        *(uVar5 * 4 + 0x43d829) = uVar2;\n        *(uVar5 * 4 + 0x43d428) = uVar2;\n        *(uVar5 * 4 + 0x43d02b) = uVar2;\n        uVar2 = fcn.004053ff(uVar7, 9);\n        *(iVar4 * 4 + 0x43cc28) = uVar2;\n        *(iVar4 * 4 + 0x43c82b) = uVar2;\n        *(iVar4 * 4 + 0x43c42a) = uVar2;\n        *(iVar4 * 4 + 0x43c029) = uVar2;\n        *(uVar5 * 4 + 0x43dc28) = uVar2;\n        *(uVar5 * 4 + 0x43d82b) = uVar2;\n        *(uVar5 * 4 + 0x43d42a) = uVar2;\n        *(uVar5 * 4 + 0x43d029) = uVar2;\n        uVar2 = fcn.004053ff(uVar6, 0xd);\n        *(iVar4 * 4 + 0x43cc29) = uVar2;\n        *(iVar4 * 4 + 0x43c828) = uVar2;\n        *(iVar4 * 4 + 0x43c42b) = uVar2;\n        *(iVar4 * 4 + 0x43c02a) = uVar2;\n        *(uVar5 * 4 + 0x43dc29) = uVar2;\n        *(uVar5 * 4 + 0x43d828) = uVar2;\n        *(uVar5 * 4 + 0x43d42b) = uVar2;\n        *(uVar5 * 4 + 0x43d02a) = uVar2;\n        uVar2 = fcn.004053ff();\n        *(iVar4 * 4 + 0x43cc2b) = uVar2;\n        *(iVar4 * 4 + 0x43c82a) = uVar2;\n        *(iVar4 * 4 + 0x43c429) = uVar2;\n        *(iVar4 * 4 + 0x43c028) = uVar2;\n        iVar4 = iVar4 + 1;\n        *(uVar5 * 4 + 0x43dc2b) = uVar2;\n        *(uVar5 * 4 + 0x43d82a) = uVar2;\n        *(uVar5 * 4 + 0x43d429) = uVar2;\n        *(uVar5 * 4 + 0x43d028) = uVar2;\n    } while (iVar4 < 0x100);\n    return;\n}\n",
        "token_count": 1373
    },
    "0040131a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040131a(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_2 == 0) {\n        param_2 = 0x429584;\n    }\n    iVar1 = *(param_1 + 0xb31c);\n    iVar2 = fcn.0041a023(param_2);\n    fcn.004069a0(iVar2 + 1);\n    fcn.0041cfbf(*(param_1 + 0xb318) + iVar1 * 2, param_2);\n    *(param_1 + 0xb32c) = *(param_1 + 0xb32c) + 1;\n    return;\n}\n",
        "token_count": 172
    },
    "00401770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00401770(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = param_1;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0x429584;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00416480(param_1 + 8, 0, 0x20);\n    param_1[0x10] = 0;\n    param_1[0x11] = 0;\n    param_1[0x12] = param_2;\n    return param_1;\n}\n",
        "token_count": 168
    },
    "00401853": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401853(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_800h;\n    \n    fcn.00401b14(&var_800h, 0x400, arg_ch, 0, &arg_10h);\n    fcn.004016d9(1, &var_800h);\n    fcn.004019e9();\n    return;\n}\n",
        "token_count": 96
    },
    "004019e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004019e9(void)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint *arg_8h;\n    uint *puStack2060;\n    uint auStack2056 [2];\n    uint auStack2048 [512];\n    \n    puStack2060 = auStack2048;\n    auStack2056[0] = 0x400;\n    cVar2 = fcn.00401891();\n    if (cVar2 != '\\0') {\n        arg_8h = auStack2056;\n        do {\n            for (; (iVar1 = *arg_8h,  iVar1 == 0xd || (iVar1 == 10)); arg_8h = arg_8h + 2) {\n            }\n            if (iVar1 == 0) {\n                return;\n            }\n            puStack2060 = arg_8h;\n            puVar3 = fcn.00416990(arg_8h, 0xd);\n            if ((puVar3 != NULL) || (arg_8h = fcn.00416990(arg_8h, 10),  puVar3 = arg_8h,  arg_8h != NULL)) {\n                *puVar3 = 0;\n                arg_8h = puVar3 + 2;\n            }\n            fcn.00401684(0, &puStack2060);\n        } while (arg_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "00401b14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401b14(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.00401b0e();\n    iVar2 = fcn.0041c357(*puVar1, puVar1[1], arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar2 < 0) {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 141
    },
    "00402aa2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402aa2(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00401b14(param_1, param_2, param_3, 0, &stack0x00000010);\n    return;\n}\n",
        "token_count": 60
    },
    "0040317b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040317b(int32_t param_1)\n\n{\n    fcn.00416480(param_1, 0, 0x91d8);\n    *(param_1 + 0x7030) = 0;\n    *(param_1 + 0x7028) = 0;\n    *(param_1 + 0x707c) = 0;\n    *(param_1 + 0xc) = 0x2000000;\n    *(param_1 + 0x7034) = 3;\n    *(param_1 + 0x81b8) = 2;\n    *(param_1 + 0x70d8) = 0x7fffffff;\n    *(param_1 + 0x70dc) = 0x7fffffff;\n    *(param_1 + 0x70e0) = 0x7fffffff;\n    *(param_1 + 0x70e4) = 0x7fffffff;\n    *(param_1 + 0x7038) = 2;\n    return;\n}\n",
        "token_count": 238
    },
    "00403502": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403502(int16_t *param_1, ushort *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint32_t arg_10h;\n    \n    *param_2 = 0;\n    cVar1 = fcn.0040376f(param_1);\n    if (cVar1 == '\\0') {\n        if (((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (iVar2 = fcn.00416990(param_1 + 2, 0x5c),  iVar2 != 0)) {\n            iVar2 = fcn.00416990(iVar2 + 2, 0x5c);\n            if (iVar2 == 0) {\n                puVar3 = fcn.0041a023(param_1);\n            }\n            else {\n                puVar3 = (iVar2 - param_1 >> 1) + 1;\n            }\n            arg_10h = -(puVar3 < param_2) & puVar3;\n            fcn.0041c3bb(param_2, param_1, arg_10h);\n            param_2[arg_10h] = 0;\n        }\n    }\n    else {\n        fcn.00402aa2(param_2, param_2, L\"%c:\\\\\", *param_1);\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "0040376f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t fcn.0040376f(ushort *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    unkuint3 Var3;\n    \n    uVar1 = fcn.004067ee(*param_1);\n    iVar2 = (uVar1 & 0xffff) - 0x41;\n    Var3 = iVar2 >> 8;\n    if ((iVar2 < 0x1a) && (param_1[1] == 0x3a)) {\n        iVar2 = CONCAT31(Var3, 1);\n    }\n    else {\n        iVar2 = Var3 << 8;\n    }\n    return iVar2;\n}\n",
        "token_count": 151
    },
    "004038fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004038fd(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041a023(param_1);\n    if (iVar1 != 0) {\n        param_1 = param_1 + iVar1 * 2 + -2;\n    }\n    return param_1;\n}\n",
        "token_count": 78
    },
    "004039f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004039f9(int32_t param_1, int16_t *param_2, int32_t param_3)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    \n    uVar2 = 0;\n    if (param_3 != 1) {\n        piVar1 = param_2;\n        do {\n            iVar3 = *((param_1 - param_2) + piVar1);\n            if (iVar3 == 0) break;\n            if (iVar3 == 0x2f) {\n                iVar3 = 0x5c;\n            }\n            *piVar1 = iVar3;\n            uVar2 = uVar2 + 1;\n            piVar1 = piVar1 + 1;\n        } while (uVar2 < param_3 - 1U);\n    }\n    param_2[uVar2] = 0;\n    return;\n}\n",
        "token_count": 209
    },
    "00403e2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403e2c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_f0h;\n    uint var_50h;\n    \n    fcn.00402aa2(&var_f0h, 0x50, 0x4296a4, arg_8h, arg_ch);\n    fcn.00407b8f(&var_f0h, &var_50h, 0x50);\n    fcn.00403f80(&var_50h, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 139
    },
    "0040480c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040480c(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    uint *puVar1;\n    uint unaff_retaddr;\n    \n    fcn.00403b5a(1);\n    puVar1 = *param_1 + -0xc + param_1[1] * 0xc;\n    *puVar1 = unaff_retaddr;\n    puVar1[1] = param_2;\n    puVar1[2] = param_3;\n    return;\n}\n",
        "token_count": 122
    },
    "00404b41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404b41(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00404b5b(param_1, param_2, param_3, &stack0x00000010);\n    return;\n}\n",
        "token_count": 58
    },
    "00404b5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404b5b(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.00404b76(param_1, param_2, param_3, 0, param_4);\n    return;\n}\n",
        "token_count": 62
    },
    "00404b76": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404b76(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.00401b0e();\n    iVar2 = fcn.0041c333(*puVar1 | 1, puVar1[1], arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar2 < 0) {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 146
    },
    "0040571f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040571f(uint32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (param_1 < 0x80000000) {\n        return param_1 * 2;\n    }\n    fcn.00405a82();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 94
    },
    "00405735": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00405735(int32_t param_1, int32_t param_2)\n\n{\n    fcn.00416480(param_1, 0, param_2 - param_1);\n    return param_2;\n}\n",
        "token_count": 54
    },
    "00405800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00405800(code **param_1, int32_t param_2)\n\n{\n    *param_1 = vtable.std::exception.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    fcn.00417200(param_2 + 4, param_1 + 1);\n    return param_1;\n}\n",
        "token_count": 88
    },
    "00405938": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405938(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    if (arg_14h <= arg_ch) {\n        arg_ch = arg_14h;\n    }\n    fcn.00416ab0(arg_10h, arg_8h, arg_ch * 2);\n    fcn.0040596f(arg_10h, arg_14h * 2, arg_18h, 0);\n    return;\n}\n",
        "token_count": 123
    },
    "00406679": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint16_t * fcn.00406679(int16_t *param_1, int32_t param_2)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int16_t *piVar3;\n    uint unaff_EDI;\n    uint32_t uVar4;\n    bool bVar5;\n    uint var_1h;\n    \n    iVar1 = *param_1;\n    piVar3 = param_1;\n    while (cVar2 = fcn.00406795(iVar1),  cVar2 != '\\0') {\n        piVar3 = piVar3 + 1;\n        iVar1 = *piVar3;\n    }\n    if (iVar1 == 0) {\n        piVar3 = NULL;\n    }\n    else {\n        cVar2 = '\\0';\n        uVar4 = 0;\n        bVar5 = false;\n        do {\n            if (cVar2 == '\\0') {\n                cVar2 = fcn.00406795(*piVar3);\n                if (cVar2 != '\\0') break;\n                cVar2 = unaff_EDI >> 0x18;\n            }\n            if (*piVar3 == 0x22) {\n                if (piVar3[1] == 0x22) {\n                    if ((param_1 != NULL) && (uVar4 < param_2 - 1U)) {\n                        param_1[uVar4] = 0x22;\n                        uVar4 = uVar4 + 1;\n                    }\n                    piVar3 = piVar3 + 1;\n                    cVar2 = bVar5;\n                }\n                else {\n                    bVar5 = cVar2 == '\\0';\n                    cVar2 = bVar5;\n                }\n            }\n            else if ((param_1 != NULL) && (cVar2 = bVar5,  uVar4 < param_2 - 1U)) {\n                param_1[uVar4] = *piVar3;\n                uVar4 = uVar4 + 1;\n            }\n            piVar3 = piVar3 + 1;\n        } while (*piVar3 != 0);\n        if (param_1 != NULL) {\n            param_1[uVar4] = 0;\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 515
    },
    "00406763": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00406763(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (((param_1 < 0x41) || (0x5a < param_1)) && (0x19 < param_1 - 0x61U)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "00406782": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00406782(int32_t param_1)\n\n{\n    return param_1 - 0x30U & 0xffffff00 | 1 - (9 < param_1 - 0x30U);\n}\n",
        "token_count": 52
    },
    "004067ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004067ee(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    \n    uVar1 = param_1;\n    if (param_1 - 0x61U < 0x1a) {\n        uVar1 = uVar1 - 0x20;\n    }\n    return param_1 - 0x61U & 0xffff0000 | uVar1;\n}\n",
        "token_count": 95
    },
    "004068ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004068ca(int32_t param_1, uint param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041ca80(param_1);\n    if (uVar1 < param_3) {\n        fcn.004068f1(uVar1 + param_1, param_2, param_3 - uVar1);\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0040694c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040694c(int16_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int16_t iVar1;\n    \n    if (param_3 != 0) {\n        param_3 = param_3 + -1;\n        if (param_3 != 0) {\n            param_2 = param_2 - param_1;\n            do {\n                iVar1 = *(param_2 + param_1);\n                if (iVar1 == 0) break;\n                *param_1 = iVar1;\n                param_1 = param_1 + 1;\n                param_3 = param_3 + -1;\n            } while (param_3 != 0);\n        }\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00406a64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00406a64(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (param_1[4] < param_1[1]) {\n        arg_8h = *param_1 + param_1[4] * 2;\n        iVar2 = fcn.0041a023(arg_8h);\n        param_1[4] = param_1[4] + iVar2 + 1;\n        if (param_2 != NULL) {\n            *param_2 = arg_8h;\n        }\n        uVar1 = 1;\n    }\n    else {\n        if (param_2 != NULL) {\n            *param_2 = 0;\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 201
    },
    "0040722d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040722d(uint32_t *param_1, ushort *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_EBX;\n    uint32_t uVar4;\n    uint32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    bool bVar5;\n    uchar *puStack100;\n    uchar *puStack96;\n    uchar *puStack92;\n    int32_t iStack72;\n    int32_t iStack68;\n    uchar auStack64 [16];\n    ushort uStack48;\n    ushort uStack46;\n    ushort uStack44;\n    ushort uStack42;\n    ushort uStack40;\n    ushort uStack38;\n    ushort uStack36;\n    ushort uStack34;\n    uchar auStack32 [32];\n    \n    uStack48 = *param_2;\n    uStack46 = param_2[2];\n    uStack42 = param_2[4];\n    uStack40 = param_2[6];\n    uStack38 = param_2[8];\n    uStack36 = param_2[10];\n    uStack34 = 0;\n    uStack44 = 0;\n    puStack92 = &stack0xffffffc0;\n    puStack96 = &stack0xffffffd0;\n    puStack100 = 0x40728b;\n    iVar2 = (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)();\n    if (iVar2 == 0) {\n        uVar3 = 0;\n        uVar4 = 0;\n    }\n    else {\n        puStack100 = 0x407298;\n        uVar3 = fcn.00402d8e();\n        if (uVar3 < 0x600) {\n            puStack100 = &stack0xffffffb0;\n            (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&stack0xffffffb8);\n        }\n        else {\n            puStack100 = &stack0xffffffd8;\n            (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(&stack0xffffffb8);\n            (*_sym.imp.KERNEL32.dll_TzSpecificLocalTimeToSystemTime)(0, &stack0xffffffd0, &stack0xffffffe0);\n            (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&stack0xffffffd4, &stack0xffffff9c);\n            (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&stack0xffffffbc, &stack0xffffffa4);\n            bVar5 = CARRY4(-iStack72, unaff_EDI);\n            uVar3 = -iStack72 + unaff_EDI;\n            unaff_EDI = uVar3 + unaff_EBP;\n            unaff_ESI = (((unaff_ESI + unaff_EBX) - iStack68) - (iStack72 != 0)) + bVar5 + CARRY4(uVar3, unaff_EBP);\n        }\n        uVar3 = unaff_EDI * 100;\n        uVar4 = unaff_ESI * 100 + (unaff_EDI * 100 >> 0x20);\n    }\n    *param_1 = uVar3;\n    param_1[1] = uVar4;\n    uVar1 = *(param_2 + 0xc);\n    *param_1 = uVar1 + uVar3;\n    param_1[1] = uVar4 + CARRY4(uVar1, uVar3);\n    return;\n}\n",
        "token_count": 784
    },
    "00407352": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407352(int32_t *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 * 1000000000;\n    *param_1 = uVar1 + 0x4c6a0000;\n    param_1[1] = param_3 * 1000000000 + (param_2 * 1000000000 >> 0x20) + -0x5e6684f5 + (0xb395ffff < uVar1);\n    return;\n}\n",
        "token_count": 137
    },
    "0040737e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040737e(uint *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    *param_1 = param_2 * 100;\n    param_1[1] = param_3 * 100 + (param_2 * 100 >> 0x20);\n    return;\n}\n",
        "token_count": 78
    },
    "0040739d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040739d(uint *param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = *param_2;\n    uVar2 = param_2[1];\n    *param_1 = uVar1 * 100;\n    param_1[1] = uVar2 * 100 + (uVar1 * 100 >> 0x20);\n    return;\n}\n",
        "token_count": 110
    },
    "00407701": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00407701(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint lpCaption;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_1600h;\n    uint var_400h;\n    uint uStackY76;\n    uint uStackY72;\n    uint arg_14h;\n    \n    fcn.004154b0();\n    fcn.00404ba7();\n    fcn.00402aa2();\n    cVar1 = fcn.00401891();\n    if (cVar1 != '\\0') {\n        fcn.00406924();\n        fcn.00406924();\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    arg_14h = 0x96;\n    lpCaption = fcn.00404ba7();\n    uStackY72 = 0x40779a;\n    iVar3 = fcn.004112b4(*0x44f950, &fcn.00407701::var_1600h, lpCaption, arg_14h);\n    uStackY76 = 0x4077a7;\n    uStackY72 = uVar2;\n    uVar4 = (*_sym.imp.KERNEL32.dll_SetLastError)();\n    return uVar4 & 0xffffff00 | iVar3 == 4;\n}\n",
        "token_count": 305
    },
    "00407928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407928(char param_1, uint param_2)\n\n{\n    fcn.00414717((param_1 + '\\x15') * '\\x04', param_2);\n    return;\n}\n",
        "token_count": 48
    },
    "00407d59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00407d59(uint16_t *param_1)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    \n    uVar4 = *param_1;\n    bVar7 = uVar4 == 0x2d;\n    if (bVar7) {\n        param_1 = param_1 + 1;\n        uVar4 = *param_1;\n    }\n    uVar5 = 0;\n    iVar3 = 0;\n    while ((0x2f < uVar4 && (uVar4 < 0x3a))) {\n        uVar1 = uVar5;\n        uVar2 = uVar1 * 10;\n        uVar6 = uVar2 + uVar4;\n        uVar5 = uVar6 - 0x30;\n        iVar3 = iVar3 * 10 + (uVar1 * 10 >> 0x20) + CARRY4(uVar2, uVar4) + -1 + (0x2f < uVar6);\n        param_1 = param_1 + 1;\n        uVar4 = *param_1;\n    }\n    if ((bVar7) && (-1 < iVar3)) {\n        bVar7 = uVar5 != 0;\n        uVar5 = -uVar5;\n        iVar3 = -(iVar3 + bVar7);\n    }\n    return CONCAT44(iVar3, uVar5);\n}\n",
        "token_count": 353
    },
    "00407f03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407f03(uint *param_1, uint param_2, uint32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint unaff_ESI;\n    \n    if (param_3 < 0x80000000) {\n        param_1[5] = 0xf;\n        if (param_3 < 0x10) {\n            param_1[4] = param_3;\n            fcn.00416ab0(param_1, param_2, 0x10);\n        }\n        else {\n            iVar2 = fcn.00408b0d(param_3, 0xf, 0x7fffffff);\n            uVar3 = fcn.004056cb(iVar2 + 1);\n            *param_1 = uVar3;\n            param_1[4] = param_3;\n            param_1[5] = iVar2;\n            fcn.00408f68(uVar3, unaff_ESI, param_3 + 1);\n        }\n        return;\n    }\n    fcn.00408e98();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 274
    },
    "00407fed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407fed(int32_t param_1, int32_t param_2)\n\n{\n    for (; param_1 != param_2; param_1 = param_1 + 0x78) {\n        fcn.00408a48();\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "004084fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004084fe(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t arg_10h;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_8h < 0x2222223) {\n        iVar2 = (in_ECX[1] - *in_ECX) / 0x78;\n        uVar3 = fcn.00408b71(arg_8h);\n        uVar4 = fcn.00408383(uVar3);\n        arg_10h = fcn.004056cb(uVar4);\n        fcn.00408644(iVar2 * 0x78 + arg_10h, arg_8h - iVar2, in_ECX);\n        fcn.00408612(*in_ECX, in_ECX[1], arg_10h, in_ECX);\n        fcn.00408bf6(arg_10h, arg_8h, uVar3);\n        return;\n    }\n    fcn.00408ea3();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 274
    },
    "00408572": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00408572(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = arg_14h;\n    if (arg_ch <= arg_14h) {\n        uVar1 = arg_ch;\n    }\n    uVar1 = fcn.00417282(arg_8h, arg_10h, uVar1);\n    if (uVar1 == 0) {\n        if (arg_ch < arg_14h) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            uVar1 = arg_14h < arg_ch;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 166
    },
    "00408612": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408612(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x78) {\n        fcn.0040888b();\n        arg_10h = arg_10h + 0x78;\n    }\n    fcn.00407fed(arg_10h, arg_10h, arg_14h);\n    return arg_10h;\n}\n",
        "token_count": 125
    },
    "00408644": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00408644(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    if (param_2 != 0) {\n        do {\n            fcn.004086b1();\n            param_1 = param_1 + 0x78;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    fcn.00407fed(param_1, param_1, param_3);\n    return param_1;\n}\n",
        "token_count": 118
    },
    "004086b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004086b1(uint param_1, int32_t param_2)\n\n{\n    fcn.00416480(param_2, 0, 0x78);\n    *(param_2 + 0x50) = 0;\n    *(param_2 + 0x58) = 0;\n    *(param_2 + 0x5c) = 0;\n    *(param_2 + 0x60) = 0;\n    *(param_2 + 100) = 0;\n    *(param_2 + 0x68) = 0;\n    *(param_2 + 0x6c) = 0;\n    *(param_2 + 0x14) = 7;\n    *(param_2 + 0x54) = 0xf;\n    return;\n}\n",
        "token_count": 181
    },
    "004089c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004089c7(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_1;\n    if (iVar2 != 0) {\n        iVar1 = param_1[1];\n        for (; iVar2 != iVar1; iVar2 = iVar2 + 0x30) {\n            fcn.00408e6c();\n        }\n        fcn.0040123b(*param_1, ((param_1[2] - *param_1) / 0x30) * 0x30);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00408ba1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408ba1(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    int32_t iVar2;\n    int32_t unaff_retaddr;\n    \n    iVar2 = *param_1;\n    if (iVar2 != 0) {\n        iVar1 = param_1[1];\n        for (; iVar2 != iVar1; iVar2 = iVar2 + 0x30) {\n            fcn.00408e6c();\n        }\n        fcn.0040123b(*param_1, ((param_1[2] - *param_1) / 0x30) * 0x30);\n    }\n    *param_1 = unaff_ESI;\n    param_1[1] = unaff_retaddr * 0x30 + unaff_ESI;\n    param_1[2] = param_2 * 0x30 + unaff_ESI;\n    return;\n}\n",
        "token_count": 223
    },
    "00408dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408dc0(uint param_1, uchar *param_2)\n\n{\n    fcn.00416ab0(param_1, param_2, 0x18);\n    *(param_2 + 0x10) = 0;\n    *(param_2 + 0x14) = 0xf;\n    *param_2 = 0;\n    return;\n}\n",
        "token_count": 89
    },
    "00408de3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408de3(uint param_1, ushort *param_2)\n\n{\n    fcn.00416ab0(param_1, param_2, 0x18);\n    *(param_2 + 8) = 0;\n    *(param_2 + 10) = 7;\n    *param_2 = 0;\n    return;\n}\n",
        "token_count": 84
    },
    "00408f68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00408f68(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00416ab0(param_1, param_2, param_3);\n    return param_1;\n}\n",
        "token_count": 52
    },
    "00408f83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00408f83(uint param_1, uint param_2, int32_t param_3)\n\n{\n    fcn.00416ab0(param_1, param_2, param_3 * 2);\n    return param_1;\n}\n",
        "token_count": 57
    },
    "0040aa7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040aa7f(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    if (*0x44e6a8 < param_2) {\n        uVar1 = 0x32;\n    }\n    else {\n        fcn.00416ab0(*0x44e6a4, param_1, param_2);\n        *0x44e6a4 = *0x44e6a4 + param_2;\n        *0x44e6a8 = *0x44e6a8 - param_2;\n        *0x44e6c0 = *0x44e6c0 + param_2;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 172
    },
    "0040ad04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ad04(void)\n\n{\n    bool bVar1;\n    \n    if ((*0x44e5c0 >> 0x1f < *0x43e57c) || ((*0x44e5c0 >> 0x1f <= *0x43e57c && (*0x44e5c0 <= *0x43e578)))) {\n        *0x44f748 = 0;\n        *0x44f74c = 0;\n    }\n    else {\n        if ((*0x43e57c < 1) && (*0x43e57c < 0)) {\n            *0x43e578 = 0;\n            *0x43e57c = 0;\n        }\n        *0x44f750 = *0x44e5b8 + *0x43e578;\n        *0x44f748 = *0x44e5c0 - *0x43e578;\n        *0x44f74c = (*0x44e5c4 - (*0x43e578 >> 0x1f)) - (*0x44e5c0 < *0x43e578);\n        *0x44e5c0 = *0x43e578;\n        *0x44e5c4 = *0x43e578 >> 0x1f;\n    }\n    bVar1 = *0x43e578 < *0x44e5c0;\n    *0x43e578 = *0x43e578 - *0x44e5c0;\n    *0x43e57c = (*0x43e57c - *0x44e5c4) - bVar1;\n    return;\n}\n",
        "token_count": 382
    },
    "0040b19c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040b19c(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    uVar1 = param_2;\n    if (param_2 != 0) {\n        do {\n            if ((*0x44e5c4 < 1) && ((*0x44e5c4 < 0 || (*0x44e5c0 == 0)))) {\n                *0x44e5c0 = fcn.0040b5b3(*0x44e5b4, 0x2000);\n                *0x44e5c4 = *0x44e5c0 >> 0x1f;\n                if ((*0x44e5c0 | *0x44e5c4) == 0) {\n                    return param_2 - uVar1;\n                }\n                if (*0x44e5c4 < 0) {\n                    fcn.00401942(0x46500a, 0x44e6c4);\n                    return 0;\n                }\n                bVar3 = 0xffffdfff < *0x44e5f8;\n                *0x44e5f8 = *0x44e5f8 + 0x2000;\n                *0x44e5fc = *0x44e5fc + bVar3;\n                *0x44e5b8 = *0x44e5b4;\n            }\n            uVar2 = uVar1;\n            if (*0x44e5c0 <= uVar1) {\n                uVar2 = *0x44e5c0;\n            }\n            fcn.00416ab0(param_1, *0x44e5b8, uVar2);\n            *0x44e5b8 = *0x44e5b8 + uVar2;\n            param_1 = param_1 + uVar2;\n            bVar3 = *0x44e5c0 < uVar2;\n            *0x44e5c0 = *0x44e5c0 - uVar2;\n            *0x44e5c4 = *0x44e5c4 - bVar3;\n            uVar1 = uVar1 - uVar2;\n        } while (uVar1 != 0);\n    }\n    return param_2;\n}\n",
        "token_count": 540
    },
    "0040b4fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b4fb(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    iVar2 = *0x44f74c;\n    uVar1 = *0x44f748;\n    if ((-1 < *0x44e5c4) && ((0 < *0x44e5c4 || (*0x44e5c0 != 0)))) {\n        bVar3 = CARRY4(*0x43e578, *0x44e5c0);\n        *0x43e578 = *0x43e578 + *0x44e5c0;\n        *0x43e57c = *0x43e57c + *0x44e5c4 + bVar3;\n    }\n    if ((*0x44f74c < 0) || ((*0x44f74c < 1 && (*0x44f748 == 0)))) {\n        if ((*0x44e5c4 < 1) && (*0x44e5c4 < 0)) {\n            *0x44e5c0 = 0;\n            *0x44e5c4 = 0;\n        }\n    }\n    else {\n        if ((*0x43e57c < 1) && (*0x43e57c < 0)) {\n            *0x43e57c = 0;\n            *0x43e578 = 0;\n        }\n        *0x44f748 = 0;\n        *0x44e5c0 = *0x43e578 + uVar1;\n        *0x44f74c = 0;\n        *0x44e5c4 = (*0x43e578 >> 0x1f) + iVar2 + CARRY4(*0x43e578, uVar1);\n        *0x44e5b8 = *0x44f750 - *0x43e578;\n    }\n    return;\n}\n",
        "token_count": 443
    },
    "0040e0fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040e0fc(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    fcn.00416ab0(param_3, param_1, param_2 - param_1);\n    return (param_2 - param_1) + param_3;\n}\n",
        "token_count": 75
    },
    "0040ea3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ea3a(int32_t param_1, uint32_t *param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = *(param_1 + 0x128);\n    if (param_3 != 0) {\n        do {\n            uVar4 = param_3 - 1;\n            if (iVar3 == 0x10) {\n                pcVar2 = param_1 + 0x108;\n                iVar3 = 0;\n                *pcVar2 = *pcVar2 + '\\x01';\n                if (*pcVar2 == '\\0') {\n                    do {\n                        if (0xf < pcVar2 + (-0x108 - param_1)) break;\n                        pcVar2 = pcVar2 + 1;\n                        *pcVar2 = *pcVar2 + '\\x01';\n                    } while (*pcVar2 == '\\0');\n                }\n                fcn.00404f3c(param_1 + 0x108, 0x10, param_1 + 0x118);\n                if (uVar4 < 0x10) goto code_r0x0040eaca;\n                *param_2 = *param_2 ^ *(param_1 + 0x118);\n                param_2[1] = param_2[1] ^ *(param_1 + 0x11c);\n                param_2[2] = param_2[2] ^ *(param_1 + 0x120);\n                param_2[3] = param_2[3] ^ *(param_1 + 0x124);\n                uVar4 = param_3 - 0x10;\n                iVar3 = 0x10;\n                iVar1 = 0x10;\n            }\n            else {\ncode_r0x0040eaca:\n                *param_2 = *param_2 ^ *(iVar3 + 0x118 + param_1);\n                iVar3 = iVar3 + 1;\n                iVar1 = 1;\n            }\n            param_2 = param_2 + iVar1;\n            param_3 = uVar4;\n        } while (uVar4 != 0);\n    }\n    *(param_1 + 0x128) = iVar3;\n    return;\n}\n",
        "token_count": 519
    },
    "0040eb1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040eb1e(int32_t param_1, uint param_2, uint param_3)\n\n{\n    fcn.0040ec02(param_1 + 0x130, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "0040eb3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040eb3c(int32_t noname_0, int32_t noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, \n            uint noname_6, uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, \n            uint noname_31, uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, \n            uint noname_37, uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, \n            uint noname_43, uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, \n            uint noname_49, uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, \n            uint noname_55, uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, \n            uint noname_61, uint noname_62, uint noname_63, uint arg_108h, uint noname_65, uint noname_66, \n            uint noname_67, uint noname_68, uint noname_69, uint noname_70, uint noname_71, uint arg_128h, uint arg_12ch\n            , uint arg_130h)\n\n{\n    uint var_1h;\n    uchar auStack108 [4];\n    uchar auStack104 [8];\n    uchar auStack96 [12];\n    uint uStack36;\n    \n    *(noname_0 + 300) = noname_1;\n    fcn.0041ca80();\n    fcn.0040ed35(noname_2);\n    fcn.00404e20(1, auStack96, (noname_1 + 1) * 0x40, 0);\n    *(noname_0 + 1) = 0;\n    fcn.00416480(noname_0 + 0x130, 0, 0xa8);\n    fcn.0040ecaa(noname_0 + 0x130, auStack104 + noname_1 * 8, noname_1 * 8 + 8);\n    fcn.00416ab0(uStack36, auStack108 + noname_1 * 0x10, 2);\n    fcn.00416480(noname_0 + 0x108, 0, 0x10);\n    *(noname_0 + 0x128) = 0x10;\n    return;\n}\n",
        "token_count": 756
    },
    "0040ecaa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ecaa(int32_t param_1, uint param_2, uint8_t *param_3)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    \n    puVar1 = param_1 + 0x60;\n    if (param_3 < 0x41) {\n        fcn.00416ab0(puVar1, param_2, param_3);\n    }\n    else {\n        fcn.00406428(param_1);\n        fcn.00406459(param_1, param_1, param_3);\n        fcn.0040ef23(param_1, puVar1);\n        param_3 = 0x14;\n    }\n    *(param_1 + 0xa0) = param_3;\n    if (param_3 != NULL) {\n        puVar2 = puVar1;\n        do {\n            *puVar2 = *puVar2 ^ 0x36;\n            puVar2 = puVar2 + 1;\n            param_3 = *(param_1 + 0xa0);\n        } while (puVar2 + (-0x60 - param_1) < param_3);\n    }\n    fcn.00416480(param_3 + param_1 + 0x60, 0x36, 0x40 - param_3);\n    fcn.00406428(param_1);\n    fcn.00406459(param_1, puVar1, 0x40);\n    return;\n}\n",
        "token_count": 334
    },
    "0040efd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040efd8(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    \n    *param_1 = *param_2;\n    param_1[1] = param_2[1];\n    param_1[2] = param_2[2];\n    param_1[3] = param_2[3];\n    *(param_1 + 4) = *(param_2 + 4);\n    uVar1 = param_2[6];\n    param_1[7] = param_2[7];\n    param_1[6] = uVar1;\n    uVar1 = param_2[8];\n    param_1[9] = param_2[9];\n    param_1[8] = uVar1;\n    uVar1 = param_2[10];\n    param_1[0xb] = param_2[0xb];\n    param_1[10] = uVar1;\n    uVar1 = param_2[0xc];\n    param_1[0xd] = param_2[0xd];\n    param_1[0xc] = uVar1;\n    uVar1 = param_2[0xe];\n    param_1[0xf] = param_2[0xf];\n    param_1[0xe] = uVar1;\n    uVar1 = param_2[0x10];\n    param_1[0x11] = param_2[0x11];\n    puVar2 = param_1 + 0x14;\n    param_1[0x10] = uVar1;\n    param_1[0x12] = param_2[0x12];\n    iVar4 = param_2 - param_1;\n    param_1[0x13] = param_2[0x13];\n    iVar3 = 5;\n    do {\n        *puVar2 = *(puVar2 + iVar4);\n        puVar2 = puVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    param_1[0x16] = param_2[0x16];\n    fcn.00416ab0(param_1 + 0x17, param_2 + 0x17, 0x10000);\n    param_1[0x4017] = param_2[0x4017];\n    param_1[0x4018] = param_2[0x4018];\n    param_1[0x4019] = param_2[0x4019];\n    param_1[0x401a] = param_2[0x401a];\n    uVar1 = param_2[0x401c];\n    param_1[0x401d] = param_2[0x401d];\n    param_1[0x401c] = uVar1;\n    param_1[0x401e] = param_2[0x401e];\n    param_1[0x401f] = param_2[0x401f];\n    param_1[0x4020] = param_2[0x4020];\n    param_1[0x4021] = param_2[0x4021];\n    param_1[0x4022] = param_2[0x4022];\n    uVar1 = param_2[0x4024];\n    param_1[0x4025] = param_2[0x4025];\n    param_1[0x4024] = uVar1;\n    uVar1 = param_2[0x4026];\n    param_1[0x4027] = param_2[0x4027];\n    param_1[0x4026] = uVar1;\n    uVar1 = param_2[0x4028];\n    param_1[0x4029] = param_2[0x4029];\n    param_1[0x4028] = uVar1;\n    uVar1 = param_2[0x402a];\n    param_1[0x402b] = param_2[0x402b];\n    param_1[0x402a] = uVar1;\n    uVar1 = param_2[0x402c];\n    param_1[0x402d] = param_2[0x402d];\n    param_1[0x402c] = uVar1;\n    param_1[0x402e] = param_2[0x402e];\n    param_1[0x402f] = param_2[0x402f];\n    puVar2 = param_2 + 0x4030;\n    puVar5 = param_1 + 0x4030;\n    for (iVar3 = 10; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    puVar2 = param_2 + 0x403a;\n    puVar5 = param_1 + 0x403a;\n    for (iVar3 = 0xe; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    puVar2 = param_2 + 0x4048;\n    puVar5 = param_1 + 0x4048;\n    for (iVar3 = 0xc; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    param_1[0x4054] = param_2[0x4054];\n    param_1[0x4055] = param_2[0x4055];\n    param_1[0x4056] = param_2[0x4056];\n    param_1[0x4057] = param_2[0x4057];\n    param_1[0x4058] = param_2[0x4058];\n    puVar2 = param_1 + 0x405d;\n    iVar3 = 0x800;\n    param_1[0x4059] = param_2[0x4059];\n    param_1[0x405a] = param_2[0x405a];\n    param_1[0x405b] = param_2[0x405b];\n    param_1[0x405c] = param_2[0x405c];\n    do {\n        *puVar2 = *(puVar2 + iVar4);\n        puVar2 = puVar2 + 2;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    param_1[0x445d] = param_2[0x445d];\n    uVar1 = param_2[0x445e];\n    param_1[0x445f] = param_2[0x445f];\n    param_1[0x445e] = uVar1;\n    uVar1 = param_2[0x4460];\n    param_1[0x4461] = param_2[0x4461];\n    param_1[0x4460] = uVar1;\n    uVar1 = param_2[0x4462];\n    param_1[0x4463] = param_2[0x4463];\n    puVar2 = param_1 + 0x4464;\n    param_1[0x4462] = uVar1;\n    iVar3 = 3;\n    do {\n        *puVar2 = *(puVar2 + iVar4);\n        puVar2 = puVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.0040e159(param_2 + 0x4467);\n    param_1[0x446b] = param_2[0x446b];\n    param_1[0x446c] = param_2[0x446c];\n    param_1[0x446d] = param_2[0x446d];\n    param_1[0x446e] = param_2[0x446e];\n    param_1[0x446f] = param_2[0x446f];\n    param_1[0x4470] = param_2[0x4470];\n    param_1[0x4471] = param_2[0x4471];\n    param_1[0x4472] = param_2[0x4472];\n    param_1[0x4473] = param_2[0x4473];\n    param_1[0x4474] = param_2[0x4474];\n    param_1[0x4475] = param_2[0x4475];\n    param_1[0x4476] = param_2[0x4476];\n    param_1[0x4477] = param_2[0x4477];\n    param_1[0x4478] = param_2[0x4478];\n    param_1[0x4479] = param_2[0x4479];\n    param_1[0x447a] = param_2[0x447a];\n    param_1[0x447b] = param_2[0x447b];\n    param_1[0x447c] = param_2[0x447c];\n    param_1[0x447d] = param_2[0x447d];\n    uVar1 = param_2[0x447f];\n    param_1[0x447e] = param_2[0x447e];\n    param_1[0x447f] = uVar1;\n    param_1[0x4480] = param_2[0x4480];\n    *(param_1 + 0x4481) = *(param_2 + 0x4481);\n    param_1[0x4482] = param_2[0x4482];\n    *(param_1 + 0x4483) = *(param_2 + 0x4483);\n    *(param_1 + 0x1120d) = *(param_2 + 0x1120d);\n    *(param_1 + 0x1120e) = *(param_2 + 0x1120e);\n    param_1[0x4484] = param_2[0x4484];\n    puVar2 = param_2 + 0x4486;\n    puVar5 = param_1 + 0x4486;\n    for (iVar3 = 0x76; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    return param_1;\n}\n",
        "token_count": 2531
    },
    "0040f442": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t fcn.0040f442(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint var_1298h;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_270h;\n    uint var_260h;\n    uint var_1f4h;\n    uint var_ech;\n    uint var_cch;\n    uint var_ch;\n    uint var_4h;\n    uint var_10h;\n    \n    fcn.00415488();\n    fcn.004154b0();\n    *(unaff_EBP + -0x10) = &var_ch;\n    *(unaff_EBP + -4) = 0;\n    fcn.00416480(unaff_EBP + -0x1140c, 0, 0x55);\n    fcn.00416480(unaff_EBP + -0x113b4, 0, 0x1011c);\n    fcn.00416480(unaff_EBP + -0x1298, 0, 0x1000);\n    *(unaff_EBP + -0x298) = 0;\n    *(unaff_EBP + -0x294) = 0;\n    *(unaff_EBP + -0x290) = 0;\n    *(unaff_EBP + -0x28c) = 0;\n    *(unaff_EBP + -0x288) = 0;\n    *(unaff_EBP + -0x284) = 0;\n    *(unaff_EBP + -0x280) = 0;\n    *(unaff_EBP + -0x27c) = 0;\n    *(unaff_EBP + -0x278) = 0;\n    *(unaff_EBP + -0x274) = 0;\n    fcn.00405753();\n    *(unaff_EBP + -4) = 1;\n    fcn.00416480(unaff_EBP + -0x260, 0, 0x6c);\n    fcn.00416480(unaff_EBP + -0xcc, 0, 0xb0);\n    fcn.00404c2c();\n    puVar5 = unaff_EBP + -0xec;\n    for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *(unaff_EBP + -4) = 2;\n    fcn.0040efd8(unaff_EBP + -0x1140c);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040584a();\n    iVar4 = fcn.0040f699();\n    if (iVar4 == 0) {\n        uVar3 = fcn.0040cec7();\n        cVar2 = fcn.0040791f();\n        if (cVar2 == '\\0') {\n            iVar4 = fcn.0040f64d(uVar3);\n        }\n        else {\n            iVar4 = 0xff;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*0x44e6b0 != NULL) {\n            pcVar1 = *(**0x44e6b0 + 8);\n            (**0x42922c)();\n            (*pcVar1)();\n            if (*0x44e6b0 != NULL) {\n                pcVar1 = ***0x44e6b0;\n                (**0x42922c)(1);\n                (*pcVar1)();\n            }\n            *0x44e6b0 = NULL;\n        }\n        fcn.0040f6e9();\n        if (*0x44e608 != 0) {\n            fcn.0041a299(*0x44e608);\n            *0x44e608 = 0;\n        }\n        fcn.00405ac3(0x44f768, 0x1d8);\n        if (iVar4 != 0) {\n            fcn.004019a1(iVar4);\n        }\n    }\n    else {\n        iVar4 = 8;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar4;\n}\n",
        "token_count": 1051
    },
    "0040fb4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040fb4c(uint *param_1)\n\n{\n    param_1[6] = 0;\n    param_1[7] = 0;\n    *param_1 = 0x42a184;\n    param_1[1] = 0x42a1a8;\n    param_1[2] = 0x42a1e4;\n    param_1[3] = 0x42a220;\n    param_1[4] = 0x42a23c;\n    param_1[5] = 1;\n    fcn.00416480(param_1 + 8, 0, 0x10);\n    return param_1;\n}\n",
        "token_count": 160
    },
    "0041002a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0041002a(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = *param_1;\n    do {\n        if (uVar1 == 0) {\n            return uVar1 & 0xffffff00;\n        }\n        if ((uVar1 == 0x3c) && (param_1[1] == 0x2f)) {\n            uVar2 = 2;\n            do {\n                if (param_1[uVar2] == 0x3e) {\n                    return CONCAT31(uVar2 >> 8, 1);\n                }\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < 0x14);\n        }\n        param_1 = param_1 + 1;\n        uVar1 = *param_1;\n    } while( true );\n}\n",
        "token_count": 204
    },
    "00410435": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.00410435(int16_t *param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *arg_8h;\n    int16_t *arg_8h_00;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    \n    iVar3 = fcn.0041a023(param_1);\n    arg_8h = fcn.0041c47d(iVar3 * 0xc + 0x200);\n    if (arg_8h != NULL) {\n        fcn.0041cfbf(arg_8h, L\"<style>body{font-family:\\\"Arial\\\";font-size:12;}</style>\");\n        iVar3 = fcn.0041a023(arg_8h);\n        iVar2 = *param_1;\n        piVar4 = param_1;\n        while (iVar2 != 0) {\n            if ((((iVar2 == 0xd) && (piVar4[1] == 10)) && (piVar4[2] == 0xd)) && (piVar4[3] == 10)) {\n                arg_8h_00 = arg_8h + iVar3;\n                do {\n                    piVar5 = piVar4;\n                    if (piVar4[3] != 10) break;\n                    fcn.0041cfbf(arg_8h_00, L\"<br>\");\n                    piVar5 = piVar4 + 2;\n                    iVar3 = iVar3 + 4;\n                    arg_8h_00 = arg_8h_00 + 4;\n                    piVar1 = piVar4 + 4;\n                    piVar4 = piVar5;\n                } while (*piVar1 == 0xd);\n                piVar4 = piVar5 + 1;\n            }\n            else if (((param_1 < piVar4) && (iVar2 == 0x20)) && (piVar4[-1] == 0x20)) {\n                fcn.0041cfbf(arg_8h + iVar3, L\"&nbsp;\");\n                iVar3 = iVar3 + 6;\n            }\n            else {\n                arg_8h[iVar3] = iVar2;\n                iVar3 = iVar3 + 1;\n            }\n            piVar4 = piVar4 + 1;\n            iVar2 = *piVar4;\n        }\n        arg_8h[iVar3] = 0;\n        fcn.0041a299(param_1);\n        param_1 = arg_8h;\n    }\n    return param_1;\n}\n",
        "token_count": 573
    },
    "00410550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410550(int32_t *arg_8h, uint arg_ch, int32_t **arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if (arg_10h == NULL) {\n        return 0x80004003;\n    }\n    iVar2 = fcn.00417282(arg_ch, 0x42b19c, 0x10);\n    piVar3 = arg_8h;\n    if (iVar2 != 0) {\n        iVar2 = fcn.00417282(arg_ch, 0x42b1dc, 0x10);\n        if (iVar2 == 0) {\n            piVar3 = arg_8h + 1;\n        }\n        else {\n            iVar2 = fcn.00417282(arg_ch, 0x42b1bc, 0x10);\n            if (iVar2 == 0) {\n                piVar3 = arg_8h + 2;\n            }\n            else {\n                iVar2 = fcn.00417282(arg_ch, 0x42b18c, 0x10);\n                if (iVar2 == 0) {\n                    piVar3 = arg_8h + 3;\n                }\n                else {\n                    iVar2 = fcn.00417282(arg_ch, 0x42b22c, 0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.00417282(arg_ch, 0x42b17c, 0x10);\n                        if (iVar2 != 0) {\n                            *arg_10h = NULL;\n                            return 0x80004002;\n                        }\n                        goto code_r0x00410610;\n                    }\n                    piVar3 = arg_8h + 4;\n                }\n            }\n        }\n        piVar3 = -(arg_8h != NULL) & piVar3;\n    }\ncode_r0x00410610:\n    *arg_10h = piVar3;\n    pcVar1 = *(*arg_8h + 4);\n    (**0x42922c)(arg_8h);\n    (*pcVar1)();\n    return 0;\n}\n",
        "token_count": 488
    },
    "00411192": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00411192(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint uVar7;\n    int32_t *piVar8;\n    int32_t iStack60;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceW)();\n    if ((((iVar2 == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_SizeofResource)(),  uVar7 = *0x456d74,  iVar2 == 0)) ||\n        (iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(),  iVar3 == 0)) ||\n       (iVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(),  iVar3 == 0)) {\n        uVar7 = 0;\n    }\n    else {\n        iStack60 = iVar2;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n        if (iVar4 != 0) {\n            iVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n            if (iVar5 != 0) {\n                fcn.00416ab0(iVar5, iVar3, iVar2);\n                piVar8 = &stack0xffffffcc;\n                iVar2 = (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(iVar4, 0);\n                if (iVar2 == 0) {\n                    puVar6 = fcn.004110f6(2, 0);\n                    pcVar1 = *(*piVar8 + 8);\n                    (**0x42922c)(piVar8);\n                    (*pcVar1)();\n                    if (puVar6 != NULL) {\n                        iVar2 = puVar6[2];\n                        puVar6[2] = 0;\n                        if ((iVar2 == 0) &&\n                           (iVar2 = sub.gdiplus.dll_GdipCreateHBITMAPFromBitmap(puVar6[1], &iStack60, 0xffffff), \n                           iVar2 != 0)) {\n                            puVar6[2] = iVar2;\n                        }\n                        pcVar1 = **puVar6;\n                        (**0x42922c)(1);\n                        (*pcVar1)();\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n            }\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar4);\n        }\n    }\n    return uVar7;\n}\n",
        "token_count": 548
    },
    "004112dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004112dc(uint param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *unaff_retaddr;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    uchar *puVar9;\n    int32_t *piStack208;\n    int32_t *piStack204;\n    int32_t *piStack200;\n    int32_t *piStack196;\n    int32_t iStack192;\n    uint uStack188;\n    uint uStack184;\n    ulong uStack180;\n    int32_t *piStack172;\n    int32_t *piStack168;\n    int32_t *piStack164;\n    uchar *puStack160;\n    uint uStack156;\n    uint uStack152;\n    int32_t *piStack148;\n    int32_t *piStack144;\n    int32_t *piVar10;\n    int32_t iStack76;\n    int32_t *piStack72;\n    int32_t iStack68;\n    int32_t iStack4;\n    \n    cVar2 = fcn.00411169();\n    if (cVar2 == '\\0') {\n        fcn.0041159e();\n    }\n    else {\n        (*_sym.imp.GDI32.dll_GetObjectW)();\n        piVar3 = (piStack72 * iStack4) / iStack76;\n        if (unaff_retaddr <= piVar3) {\n            piVar3 = unaff_retaddr;\n        }\n        if ((iStack4 != iStack76) || (piVar3 != piStack72)) {\n            piStack144 = 0x42a49c;\n            piStack148 = 0x1;\n            uStack152 = 0;\n            uStack156 = 0x42b25c;\n            puStack160 = 0x411369;\n            iVar4 = (*_sym.imp.ole32.dll_CoCreateInstance)();\n            if (-1 < iVar4) {\n                piStack144 = &stack0xffffff88;\n                piStack148 = 0x2;\n                uStack152 = 0;\n                uStack156 = param_1;\n                piStack164 = 0x411397;\n                puStack160 = &stack0xffffffbc;\n                (**0x42922c)();\n                piStack164 = 0x41139a;\n                iVar4 = (**(iStack68 + 0x54))();\n                if (-1 < iVar4) {\n                    piStack164 = &stack0xffffff78;\n                    piStack168 = piStack144;\n                    pcVar1 = *(*piStack144 + 0x28);\n                    piStack172 = 0x4113b9;\n                    (**0x42922c)();\n                    piStack172 = 0x4113bb;\n                    iVar4 = (*pcVar1)();\n                    if (-1 < iVar4) {\n                        piStack172 = NULL;\n                        iVar4 = *piStack144;\n                        uStack180 = 0;\n                        uStack184 = 0;\n                        uStack188 = 0;\n                        iStack192 = 0x42b26c;\n                        piStack196 = piStack148;\n                        piStack200 = piStack144;\n                        piStack204 = 0x4113e2;\n                        (**0x42922c)();\n                        piStack204 = 0x4113e5;\n                        iVar4 = (**(iVar4 + 0x20))();\n                        if (-1 < iVar4) {\n                            piStack204 = NULL;\n                            piStack208 = NULL;\n                            puVar9 = &stack0xffffff60;\n                            piVar8 = NULL;\n                            piVar7 = NULL;\n                            piVar10 = 0x28;\n                            piStack164 = NULL;\n                            iStack192 = (*_sym.imp.GDI32.dll_CreateDIBSection)(0, &stack0xffffff8c, 0, puVar9);\n                            if (iStack192 != 0) {\n                                pcVar1 = *(*piStack208 + 0x2c);\n                                (**0x42922c)(piStack208, &stack0xffffff3c);\n                                (*pcVar1)();\n                                piVar5 = NULL;\n                                iVar4 = *piStack204;\n                                piVar6 = piVar3;\n                                (**0x42922c)(piStack204, puVar9, 0, piVar3, 3);\n                                (**(iVar4 + 0x20))();\n                                piStack200 = piVar10;\n                                piStack208 = NULL;\n                                piStack204 = NULL;\n                                iVar4 = *piVar7;\n                                piStack196 = piVar3;\n                                (**0x42922c)(piVar7, &stack0xffffff30, piStack200 << 2, piVar3 * piStack200 * 4, puVar9)\n                                ;\n                                iVar4 = (**(iVar4 + 0x1c))();\n                                if (iVar4 < 0) {\n                                    (*_sym.imp.GDI32.dll_DeleteObject)(piVar6);\n                                }\n                                pcVar1 = *(*piVar5 + 8);\n                                (**0x42922c)(piVar5);\n                                (*pcVar1)();\n                            }\n                            pcVar1 = *(*piStack204 + 8);\n                            (**0x42922c)(piStack204);\n                            (*pcVar1)();\n                            pcVar1 = *(*piStack204 + 8);\n                            (**0x42922c)(piStack204);\n                            (*pcVar1)();\n                            pcVar1 = *(*piVar8 + 8);\n                            (**0x42922c)(piVar8);\n                            (*pcVar1)();\n                            return;\n                        }\n                        piStack204 = uStack180._4_4_;\n                        pcVar1 = *(*uStack180._4_4_ + 8);\n                        piStack208 = 0x4113fb;\n                        (**0x42922c)();\n                        piStack208 = 0x4113fd;\n                        (*pcVar1)();\n                    }\n                    piStack172 = piStack148;\n                    pcVar1 = *(*piStack148 + 8);\n                    uStack180 = CONCAT44(0x41140f, uStack180);\n                    (**0x42922c)();\n                    uStack180 = CONCAT44(0x411411, uStack180);\n                    (*pcVar1)();\n                }\n                piStack164 = piStack144;\n                pcVar1 = *(*piStack144 + 8);\n                piStack168 = 0x411423;\n                (**0x42922c)();\n                piStack168 = 0x411425;\n                (*pcVar1)();\n                piStack168 = NULL;\n                piStack172 = NULL;\n                uStack180 = 0;\n                uStack184 = param_1;\n                uStack188 = 0x411594;\n                (*_sym.imp.USER32.dll_CopyImage)();\n                return;\n            }\n        }\n        piStack144 = NULL;\n        piStack148 = NULL;\n        uStack152 = 0;\n        uStack156 = param_1;\n        puStack160 = 0x411378;\n        (*_sym.imp.USER32.dll_CopyImage)();\n    }\n    return;\n}\n",
        "token_count": 1576
    },
    "00411aaa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.00411aaa(int16_t *param_1, ushort *param_2, uint32_t param_3)\n\n{\n    int16_t *arg_8h;\n    char cVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    bool bVar6;\n    uint uVar7;\n    \n    if ((param_1 == NULL) || (bVar6 = false,  *param_1 == 0)) {\n        *param_2 = 0;\n        piVar3 = NULL;\n    }\n    else {\n        iVar5 = 0;\n        uVar4 = 1;\n        piVar3 = param_1;\n        do {\n            if (param_3 <= uVar4) break;\n            if (*piVar3 == 0x22) {\n                arg_8h = piVar3 + 1;\n                if ((*arg_8h == 0x22) && (((bVar6 || (piVar3 != param_1)) || ((piVar3[2] != 0x2c && (piVar3[2] != 0)))))\n                   ) {\n                    param_2[iVar5] = 0x22;\n                    piVar3 = arg_8h;\n                    goto code_r0x00411b21;\n                }\n                if (bVar6) {\n                    bVar6 = false;\n                }\n                else {\n                    iVar2 = fcn.00416990(arg_8h, 0x22);\n                    bVar6 = iVar2 != 0;\n                    if (!bVar6) goto code_r0x00411b5a;\n                }\n            }\n            else {\ncode_r0x00411b5a:\n                uVar7 = 0x22;\n                if ((*piVar3 == 0x2c) && (!bVar6)) {\n                    param_2[iVar5] = 0;\n                    do {\n                        piVar3 = piVar3 + 1;\n                        cVar1 = fcn.00406795(uVar7, *piVar3);\n                    } while (cVar1 != '\\0');\n                    return piVar3;\n                }\n                param_2[iVar5] = *piVar3;\ncode_r0x00411b21:\n                iVar5 = iVar5 + 1;\n                uVar4 = uVar4 + 1;\n            }\n            piVar3 = piVar3 + 1;\n        } while (*piVar3 != 0);\n        param_2[iVar5] = 0;\n    }\n    return piVar3;\n}\n",
        "token_count": 570
    },
    "00413d65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.00413d65(int16_t *param_1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    ushort *puVar4;\n    \n    iVar2 = fcn.00416990(param_1, 0x20);\n    if (iVar2 != 0) {\n        if ((*param_1 == 0x22) && (piVar3 = fcn.004038fd(param_1),  *piVar3 == 0x22)) {\n            return param_1;\n        }\n        iVar2 = fcn.0041a023(param_1);\n        iVar1 = (iVar2 + 3) * 2;\n        puVar4 = fcn.004158e4(-(iVar1 >> 0x20 != 0) | iVar1);\n        fcn.0041cfbf(puVar4 + 1, param_1);\n        puVar4[iVar2 + 1] = 0x22;\n        *puVar4 = 0x22;\n        puVar4[iVar2 + 2] = 0;\n        fcn.0040694c(param_1, puVar4, param_1);\n        fcn.004155a8(puVar4);\n    }\n    return param_1;\n}\n",
        "token_count": 290
    },
    "004144d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004144d6(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *puVar3;\n    uchar auStack8196 [8152];\n    uint uStack44;\n    char16_t *pcStack40;\n    uint16_t *puStack36;\n    uint32_t uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    char16_t *pcStack16;\n    uint uStack12;\n    \n    fcn.004154b0();\n    uStack12 = arg_8h;\n    pcStack16 = L\"sfxcmd\";\n    uStack20 = 0x4144f2;\n    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)();\n    uStack20 = 0x1000;\n    puStack24 = &stack0xffffdffc;\n    uStack28 = arg_8h;\n    uStack32 = 0x414506;\n    puVar3 = fcn.00406679();\n    if (puVar3 != NULL) {\n        uVar1 = *puVar3;\n        while( true ) {\n            uStack32 = uVar1;\n            puStack36 = 0x41451e;\n            cVar2 = fcn.00406795();\n            if (cVar2 == '\\0') break;\n            puVar3 = puVar3 + 1;\n            uVar1 = *puVar3;\n        }\n        pcStack40 = L\"sfxpar\";\n        uStack44 = 0x41452e;\n        puStack36 = puVar3;\n        (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)();\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "00414717": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414717(uint arg_8h, uint arg_ch)\n\n{\n    uint var_1400h;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uint *puStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0x414724;\n    fcn.004154b0();\n    uStack8 = arg_ch;\n    uStack12 = 0x41472c;\n    uStack12 = fcn.00403919();\n    puStack16 = ((arg_8h != 'T') - 1 & 0x17e) + 0x8d;\n    uStack20 = 0x414747;\n    uStack20 = fcn.00404ba7();\n    puStack28 = &fcn.00414717::var_1400h;\n    uStack24 = 0xa00;\n    uStack32 = 0x414759;\n    fcn.00402aa2();\n    puStack16 = &fcn.00414717::var_1400h;\n    uStack20 = 0;\n    uStack24 = 0x41476a;\n    fcn.00413de6();\n    return;\n}\n",
        "token_count": 280
    },
    "00417282": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00417282(uint32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n    }\n    else if (arg_10h == 2) {\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n    }\n    else if (arg_10h == 3) {\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n    }\n    else {\n        if (arg_10h != 4) {\ncode_r0x00417765:\n    // switch table (32 cases) at 0x41887e\n            switch(arg_10h) {\n            case 0:\n                break;\n            case 1:\n                goto code_r0x00417f6a;\n            case 2:\n                goto code_r0x00418393;\n            case 3:\n                goto code_r0x00417f26;\n            case 4:\n                goto code_r0x00417aea;\n            case 5:\n                goto code_r0x00417ed6;\n            case 6:\n                goto code_r0x00418300;\n            case 7:\n                goto code_r0x00418719;\n            case 8:\n                goto code_r0x00417a57;\n            case 9:\n                goto code_r0x00417e43;\n            case 10:\n                goto code_r0x0041826c;\n            case 0xb:\n                goto code_r0x00418686;\n            case 0xc:\n                goto code_r0x004179c4;\n            case 0xd:\n                goto code_r0x00417db0;\n            case 0xe:\n                goto code_r0x004181d9;\n            case 0xf:\n                goto code_r0x004185f3;\n            case 0x10:\n                goto code_r0x00417931;\n            case 0x11:\n                goto code_r0x00417d1d;\n            case 0x12:\n                goto code_r0x00418146;\n            case 0x13:\n                goto code_r0x0041855f;\n            case 0x14:\n                goto code_r0x0041789e;\n            case 0x15:\n                goto code_r0x00417c8a;\n            case 0x16:\n                goto code_r0x004180b3;\n            case 0x17:\n                goto code_r0x004184cc;\n            case 0x1a:\n                goto code_r0x00418020;\n            case 0x1b:\n                goto code_r0x00418439;\n            case 0x1c:\n                uVar1 = *(arg_8h + arg_10h + -0x1c);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1c)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n            case 0x18:\n                uVar1 = *(arg_8h + arg_10h + -0x18);\n                if (uVar1 != *(arg_ch + arg_10h + -0x18)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0041789e:\n                uVar1 = *(arg_8h + arg_10h + -0x14);\n                if (uVar1 != *(arg_ch + arg_10h + -0x14)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00417931:\n                uVar1 = *(arg_8h + arg_10h + -0x10);\n                if (uVar1 != *(arg_ch + arg_10h + -0x10)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004179c4:\n                uVar1 = *(arg_8h + arg_10h + -0xc);\n                if (uVar1 != *(arg_ch + arg_10h + -0xc)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00417a57:\n                uVar1 = *(arg_8h + arg_10h + -8);\n                if (uVar1 != *(arg_ch + arg_10h + -8)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00417aea:\n                uVar1 = *(arg_8h + arg_10h + -4);\n                if (uVar1 != *(arg_ch + arg_10h + -4)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -1) - *(arg_ch + arg_10h + -1);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n                break;\n            case 0x1d:\n                uVar1 = *(arg_8h + arg_10h + -0x1d);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1d)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n            case 0x19:\n                if (*(arg_8h + arg_10h + -0x19) != *(arg_ch + arg_10h + -0x19)) {\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00417c8a:\n                uVar1 = *(arg_8h + arg_10h + -0x15);\n                if (uVar1 != *(arg_ch + arg_10h + -0x15)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00417d1d:\n                uVar1 = *(arg_8h + arg_10h + -0x11);\n                if (uVar1 != *(arg_ch + arg_10h + -0x11)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00417db0:\n                uVar1 = *(arg_8h + arg_10h + -0xd);\n                if (uVar1 != *(arg_ch + arg_10h + -0xd)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00417e43:\n                uVar1 = *(arg_8h + arg_10h + -9);\n                if (uVar1 != *(arg_ch + arg_10h + -9)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00417ed6:\n                if (*(arg_8h + arg_10h + -5) != *(arg_ch + arg_10h + -5)) {\ncode_r0x00417ee2:\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\ncode_r0x00417f26:\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\ncode_r0x00417f48:\n                    iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00417f6a:\n                uVar1 = *(arg_ch + arg_10h + -1);\n                uVar3 = *(arg_8h + arg_10h + -1);\n                if (uVar3 == uVar1) {\n                    return 0;\n                }\n                return (0 < uVar3 - uVar1) * 2 + -1;\n            case 0x1e:\n                uVar1 = *(arg_8h + arg_10h + -0x1e);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1e)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1e);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00418020:\n                uVar1 = *(arg_8h + arg_10h + -0x1a);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1a)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004180b3:\n                uVar1 = *(arg_8h + arg_10h + -0x16);\n                if (uVar1 != *(arg_ch + arg_10h + -0x16)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00418146:\n                uVar1 = *(arg_8h + arg_10h + -0x12);\n                if (uVar1 != *(arg_ch + arg_10h + -0x12)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004181d9:\n                uVar1 = *(arg_8h + arg_10h + -0xe);\n                if (uVar1 != *(arg_ch + arg_10h + -0xe)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0041826c:\n                if (*(arg_8h + arg_10h + -10) != *(arg_ch + arg_10h + -10)) {\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00418300:\n                uVar1 = *(arg_8h + arg_10h + -6);\n                if (uVar1 != *(arg_ch + arg_10h + -6)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00418393:\n                if (*(arg_8h + arg_10h + -2) != *(arg_ch + arg_10h + -2)) goto code_r0x00417f48;\n                break;\n            case 0x1f:\n                uVar1 = *(arg_8h + arg_10h + -0x1f);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1f)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1f);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1e) - *(arg_ch + arg_10h + -0x1e);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00418439:\n                uVar1 = *(arg_8h + arg_10h + -0x1b);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1b)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004184cc:\n                uVar1 = *(arg_8h + arg_10h + -0x17);\n                if (uVar1 != *(arg_ch + arg_10h + -0x17)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0041855f:\n                if (*(arg_8h + arg_10h + -0x13) != *(arg_ch + arg_10h + -0x13)) {\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004185f3:\n                uVar1 = *(arg_8h + arg_10h + -0xf);\n                if (uVar1 != *(arg_ch + arg_10h + -0xf)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00418686:\n                uVar1 = *(arg_8h + arg_10h + -0xb);\n                if (uVar1 != *(arg_ch + arg_10h + -0xb)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00418719:\n                if (*(arg_8h + arg_10h + -7) != *(arg_ch + arg_10h + -7)) {\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    goto code_r0x00417ee2;\n                }\n                goto code_r0x00417f26;\n            default:\n                goto code_r0x004172c8;\n            }\n            return 0;\n        }\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 3);\n        uVar1 = *(arg_ch + 3);\n    }\n    if (uVar3 == uVar1) {\n        return 0;\n    }\n    return (0 < uVar3 - uVar1) * 2 + -1;\ncode_r0x004172c8:\n    if (*arg_8h != *arg_ch) {\n        iVar2 = (*arg_8h & 0xff) - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 3) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[1] != arg_ch[1]) {\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 5) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 6) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 7) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[2] != arg_ch[2]) {\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 9) - *(arg_ch + 9);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 10) - *(arg_ch + 10);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[3] != arg_ch[3]) {\n        iVar2 = (arg_8h[3] & 0xff) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xd) - *(arg_ch + 0xd);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xe) - *(arg_ch + 0xe);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[4] != arg_ch[4]) {\n        iVar2 = (arg_8h[4] & 0xff) - *(arg_ch + 4);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x11) - *(arg_ch + 0x11);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x12) - *(arg_ch + 0x12);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[5] != arg_ch[5]) {\n        iVar2 = (arg_8h[5] & 0xff) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x15) - *(arg_ch + 0x15);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x16) - *(arg_ch + 0x16);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[6] != arg_ch[6]) {\n        iVar2 = (arg_8h[6] & 0xff) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x19) - *(arg_ch + 0x19);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1a) - *(arg_ch + 0x1a);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[7] != arg_ch[7]) {\n        iVar2 = (arg_8h[7] & 0xff) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1d) - *(arg_ch + 0x1d);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1e) - *(arg_ch + 0x1e);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    arg_8h = arg_8h + 8;\n    arg_ch = arg_ch + 8;\n    arg_10h = arg_10h + -0x20;\n    goto code_r0x00417765;\n}\n",
        "token_count": 13815
    },
    "00419702": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl\nfcn.00419702(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 0x3c;\n    fcn.00416030();\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x40) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x30) = *(arg_8h_00 + -4);\n    iVar3 = *(unaff_EBP + 8);\n    uVar1 = fcn.00416851(unaff_EBP + -0x4c, *(iVar3 + 0x18));\n    *(unaff_EBP + -0x34) = uVar1;\n    iVar2 = fcn.00418cfc();\n    *(unaff_EBP + -0x38) = *(iVar2 + 0x10);\n    iVar2 = fcn.00418cfc();\n    *(unaff_EBP + -0x3c) = *(iVar2 + 0x14);\n    iVar2 = fcn.00418cfc();\n    *(iVar2 + 0x10) = iVar3;\n    iVar3 = fcn.00418cfc();\n    *(iVar3 + 0x14) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x44) = 1;\n    *(unaff_EBP + -4) = 1;\n    uVar1 = fcn.0041664a(arg_8h_00, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), *(unaff_EBP + 0x20));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    *(unaff_EBP + -0x44) = 0;\n    fcn.00419855(0x431c38, arg_ch_00);\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 716
    },
    "00419a5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00419a5a(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == NULL) {\n        fcn.0041f160();\n        pcVar3 = swi(3);\n        uVar6 = (*pcVar3)();\n        return uVar6;\n    }\n    iVar7 = *arg_ch;\n    uVar6 = 0;\n    if (0 < iVar7) {\n        var_4h = 0;\n        arg_10h = *(arg_8h + 0x1c);\n        piVar5 = *(arg_10h + 0xc);\n        iVar1 = *piVar5;\n        in_EAX = piVar5 + 1;\n        do {\n            if (0 < iVar1) {\n                iVar2 = arg_ch[1];\n                piVar5 = in_EAX;\n                var_8h = iVar1;\n                do {\n                    iVar4 = fcn.0041951c(iVar2 + var_4h, *piVar5, arg_10h);\n                    if (iVar4 != 0) {\n                        uVar6 = 1;\n                        break;\n                    }\n                    var_8h = var_8h + -1;\n                    piVar5 = piVar5 + 1;\n                } while (0 < var_8h);\n            }\n            var_4h = var_4h + 0x10;\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n    }\n    return in_EAX & 0xffffff00 | uVar6;\n}\n",
        "token_count": 474
    },
    "00419d87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00419d87(int32_t arg_8h, uint lpProcName, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = arg_8h * 4 + 0x469678;\n    iVar3 = *piVar1;\n    if (iVar3 == -1) {\n        iVar3 = 0;\n    }\n    else if (iVar3 == 0) {\n        for (; arg_10h != arg_14h; arg_10h = arg_10h + 1) {\n            iVar3 = *arg_10h;\n            iVar4 = *(iVar3 * 4 + 0x46966c);\n            if (iVar4 == 0) {\n                iVar4 = fcn.00419e27(*(iVar3 * 4 + 0x42bfd4));\n                piVar2 = iVar3 * 4 + 0x46966c;\n                if (iVar4 != 0) {\n                    iVar3 = *piVar2;\n                    *piVar2 = iVar4;\n                    if (iVar3 != 0) {\n                        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar4);\n                    }\n                    goto code_r0x00419e10;\n                }\n                *piVar2 = -1;\n            }\n            else if (iVar4 != -1) {\ncode_r0x00419e10:\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, lpProcName);\n                if (iVar3 != 0) {\n                    *piVar1 = iVar3;\n                    return iVar3;\n                }\n                break;\n            }\n        }\n        *piVar1 = -1;\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 436
    },
    "0041afe7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041afe7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.0041ab93(param_1 + 0x28);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x28) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 181
    },
    "0041b00f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041b00f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.0041abef(param_1 + 0x28);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x28) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 186
    },
    "0041b7a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041b7a9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.0041ab93(param_1 + 0x24);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x24) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        *(param_1 + 0x24) = -*(param_1 + 0x24);\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 216
    },
    "0041b7d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041b7d4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.0041abef(param_1 + 0x24);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x24) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        *(param_1 + 0x24) = -*(param_1 + 0x24);\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 220
    },
    "0041c333": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041c333(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.0041a29e(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 98
    },
    "0041c357": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041c357(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.0041a41a(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 98
    },
    "0041e0c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041e0c9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.00428570(0x431d50, 0xc);\n    iVar1 = *(unaff_EBP + 0x10);\n    if (iVar1 == 0) {\n        cVar5 = fcn.0041e223();\n        if (cVar5 != '\\0') {\n            fcn.0041e267(*(unaff_EBP + 8));\n        }\n    }\n    fcn.00420e61(2);\n    *(unaff_EBP + -4) = 0;\n    if (*0x4696ac != '\\0') goto code_r0x0041e1a0;\n    *0x4696a4 = 1;\n    *(unaff_EBP + -4) = 1;\n    iVar2 = *(unaff_EBP + 0xc);\n    if (iVar2 == 0) {\n        uVar4 = *0x434684 & 0x1f;\n        uVar3 = 0x20 - uVar4 & 0x1f;\n        if (*0x4696a8 != ((0U >> uVar3 | 0 << 0x20 - uVar3) ^ *0x434684)) {\n            uVar6 = *0x434684 ^ *0x4696a8;\n            (**0x42922c)(0, 0, 0);\n            (*(uVar6 >> uVar4 | uVar6 << 0x20 - uVar4))();\n        }\n        arg_8h_00 = 0x4697c8;\ncode_r0x0041e165:\n        fcn.0041ebe0(arg_8h_00);\n    }\n    else if (iVar2 == 1) {\n        arg_8h_00 = 0x4697d4;\n        goto code_r0x0041e165;\n    }\n    *(unaff_EBP + -4) = 0;\n    if (iVar2 == 0) {\n        fcn.0041ee91(0x42928c, 0x42929c);\n    }\n    fcn.0041ee91(0x4292a0, 0x4292a4);\n    if (iVar1 == 0) {\n        *0x4696ac = '\\x01';\n    }\ncode_r0x0041e1a0:\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0041e1d3();\n    if (iVar1 == 0) {\n        fcn.0041e1e2(*(unaff_EBP + 8));\n        fcn.0041e0b6(***(unaff_EBP + -0x14));\n        return;\n    }\n    fcn.004285c0();\n    return;\n}\n",
        "token_count": 732
    },
    "0041f87f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f87f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.0041d014(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.0041d257(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 122
    },
    "004206bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004206bc(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 41
    },
    "004206d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004206d0(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "00420e61": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420e61(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x469a18);\n    return;\n}\n",
        "token_count": 49
    },
    "00420eb1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420eb1(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x469a18);\n    return;\n}\n",
        "token_count": 50
    },
    "004217b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004217b7(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.004217ec();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.0041f6da(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 129
    },
    "004221e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004221e3(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch == 0) || (arg_10h <= 0xffffffe0 / arg_ch)) {\n        if (arg_8h == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.0042543f(arg_8h);\n        }\n        arg_ch = arg_ch * arg_10h;\n        iVar2 = fcn.00420937(arg_8h, arg_ch);\n        if ((iVar2 != 0) && (uVar3 < arg_ch)) {\n            fcn.00416480(iVar2 + uVar3, 0, arg_ch - uVar3);\n        }\n    }\n    else {\n        puVar1 = fcn.0041f7f2();\n        *puVar1 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 250
    },
    "00422498": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00422498(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041f585();\n    return iVar1 + 8;\n}\n",
        "token_count": 42
    },
    "00428380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00428380(int16_t *arg_8h)\n\n{\n    if ((*arg_8h == 0x5a4d) && (*(*(arg_8h + 0x1e) + arg_8h) == 0x4550)) {\n        return *(*(arg_8h + 0x1e) + arg_8h + 6) == 0x10b;\n    }\n    return false;\n}\n",
        "token_count": 102
    },
    "0041695a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041695a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004195aa(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "004015fe": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint32_t fcn.004015fe(uint32_t param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        do {\n            param_1 = param_1 >> 8 ^ *((*param_2 ^ param_1 & 0xff) * 4 + 0x434f00);\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return param_1;\n}\n",
        "token_count": 128
    },
    "00401b41": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00401b41(uint *param_1)\n\n{\n    param_1[2] = 0xffffffff;\n    *(param_1 + 0x32) = 0;\n    *(param_1 + 3) = 0;\n    param_1[4] = 0;\n    *(param_1 + 5) = 0;\n    param_1[0x40d] = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 9) = 0;\n    param_1[6] = 0;\n    param_1[10] = 0;\n    param_1[0xb] = 0;\n    *param_1 = 0x429588;\n    *(param_1 + 7) = 0x100;\n    *(param_1 + 0x1e) = 1;\n    param_1[8] = 0x100;\n    return param_1;\n}\n",
        "token_count": 221
    },
    "00403a3b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403a3b(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    param_1[0xb] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    param_1[0xe] = 0;\n    param_1[0xf] = 0;\n    param_1[0x10] = 0;\n    param_1[0x11] = 0;\n    param_1[0x12] = 0;\n    param_1[0x13] = 0;\n    *(param_1 + 0x14) = 0;\n    return param_1;\n}\n",
        "token_count": 273
    },
    "004087ea": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004087ea(uint *param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    uVar1 = fcn.0041a023(param_2);\n    fcn.00407e8c(param_2, uVar1);\n    return param_1;\n}\n",
        "token_count": 102
    },
    "0040fb93": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040fb93(uint *param_1)\n\n{\n    uint *puVar1;\n    uint unaff_ESI;\n    \n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    puVar1 = fcn.00415578(0xc, unaff_ESI);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0x42a284;\n        puVar1[1] = 1;\n        puVar1[2] = param_1;\n    }\n    param_1[6] = puVar1;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    *(param_1 + 10) = 0;\n    *(param_1 + 0x2a) = 0;\n    param_1[0xb] = 0;\n    *(param_1 + 7) = 0;\n    return param_1;\n}\n",
        "token_count": 273
    },
    "0040ff60": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ff60(int32_t arg_8h, int32_t **arg_ch, uint *arg_10h, uint *arg_14h, uint arg_18h, uint *arg_1ch)\n\n{\n    code *pcVar1;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_ch = -(arg_8h != 4) & arg_8h + 4U;\n    *arg_10h = 0;\n    (*_sym.imp.USER32.dll_GetClientRect)(*(arg_8h + 0x14), &var_10h);\n    arg_14h[2] = var_8h;\n    *arg_14h = 0;\n    arg_14h[1] = 0;\n    arg_14h[3] = var_4h;\n    (*_sym.imp.USER32.dll_CopyRect)(arg_18h, arg_14h);\n    *arg_1ch = 0x14;\n    arg_1ch[1] = 0;\n    arg_1ch[2] = *(arg_8h + 0x14);\n    arg_1ch[3] = 0;\n    arg_1ch[4] = 0;\n    pcVar1 = *(**arg_ch + 4);\n    (**0x42922c)(*arg_ch);\n    (*pcVar1)();\n    return 0;\n}\n",
        "token_count": 320
    },
    "0041006b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __thiscall fcn.0041006b(int32_t param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    code **ppcVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *unaff_EBX;\n    uint unaff_EBP;\n    int32_t *unaff_EDI;\n    int32_t iStack4;\n    \n    iStack4 = 0;\n    pcVar1 = *(*param_2 + 0x48);\n    (**0x42922c)();\n    puVar3 = (*pcVar1)();\n    puVar4 = puVar3;\n    if ((-1 < puVar3) && (puVar4 = unaff_EBX,  unaff_EBX != NULL)) {\n        ppcVar2 = *unaff_EBX;\n        (**0x42922c)(unaff_EBX, 0x42b1fc, &stack0xfffffff0);\n        puVar3 = (**ppcVar2)();\n        if (-1 < puVar3) {\n            pcVar1 = *(iStack4 + 0x20);\n            (**0x42922c)(&iStack4);\n            puVar3 = (*pcVar1)();\n            if (-1 < puVar3) {\n                pcVar1 = *(*param_2 + 0x14);\n                (**0x42922c)(param_2, unaff_EBP);\n                puVar3 = (*pcVar1)();\n            }\n            pcVar1 = *(*param_2 + 8);\n            (**0x42922c)(param_2);\n            (*pcVar1)();\n        }\n        pcVar1 = *(*unaff_EDI + 8);\n        (**0x42922c)(unaff_EDI);\n        puVar4 = (*pcVar1)();\n        if ((-1 < puVar3) && (puVar4 = unaff_EBX,  unaff_EBX != NULL)) goto code_r0x00410180;\n    }\n    unaff_EBX = puVar4;\n    if ((*(param_1 + 8) != 0) && ((*(param_1 + 0x24) == 0 && (*(param_1 + 0x20) != 0)))) {\n        unaff_EBX = fcn.004107de(*(param_1 + 0x20));\n        if (unaff_EBX != NULL) {\n            (*_sym.imp.USER32.dll_SetWindowPos)(*(param_1 + 4), 1, 0, 0, 0, 0, 0x204);\n            (*_sym.imp.USER32.dll_ShowWindow)(*(param_1 + 8), 5);\n            (*_sym.imp.USER32.dll_SetWindowTextW)(*(param_1 + 8), unaff_EBX);\n            unaff_EBX = fcn.0041a299(unaff_EBX);\n        }\n    }\ncode_r0x00410180:\n    return unaff_EBX & 0xffffff00 | puVar3 >> 0x1f ^ 1;\n}\n",
        "token_count": 683
    },
    "00413004": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00413004(uint param_1, int16_t *param_2, uint param_3)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    \n    fcn.0040694c(param_2, param_1, param_3);\n    iVar3 = 0;\n    iVar2 = *param_2;\n    piVar1 = param_2;\n    while (iVar2 != 0) {\n        if (((iVar2 == 0x3a) || (iVar2 == 0x5c)) || (iVar2 == 0x2f)) {\n            *piVar1 = 0x25;\n        }\n        iVar3 = iVar3 + 1;\n        piVar1 = param_2 + iVar3;\n        iVar2 = *piVar1;\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00408813": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408813(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00408792(arg_8h);\n    *(in_ECX + 0x18) = 0;\n    *(in_ECX + 0x28) = 0;\n    *(in_ECX + 0x2c) = 0;\n    fcn.00408de3(arg_8h + 0x18);\n    return;\n}\n",
        "token_count": 115
    },
    "0040fdb8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fdb8(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    \n    piVar2 = fcn.0040fe1d(0x42b21c);\n    if (piVar2 != NULL) {\n        pcVar1 = *(*piVar2 + 0x18);\n        (**0x42922c)(piVar2, *(param_1 + 0x14));\n        (*pcVar1)();\n        pcVar1 = *(*piVar2 + 8);\n        (**0x42922c)(piVar2);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00410ca3": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410ca3(int32_t *param_1)\n\n{\n    uint *puVar1;\n    code **ppcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    puVar1 = param_1[7];\n    if (puVar1 != NULL) {\n        ppcVar2 = *puVar1;\n        var_8h = param_1;\n        var_4h = param_1;\n        (**0x42922c)(puVar1, 0x42b1ac, &var_4h);\n        iVar4 = (**ppcVar2)();\n        if (-1 < iVar4) {\n            pcVar3 = *(*var_4h + 0x18);\n            (**0x42922c)(var_4h, 1);\n            (*pcVar3)();\n            pcVar3 = *(*var_4h + 0xc);\n            (**0x42922c)(var_4h, 0);\n            (*pcVar3)();\n            pcVar3 = *(*var_4h + 8);\n            (**0x42922c)(var_4h);\n            (*pcVar3)();\n        }\n        ppcVar2 = *param_1[7];\n        (**0x42922c)(param_1[7], 0x42b1cc, &var_8h);\n        iVar4 = (**ppcVar2)();\n        if (-1 < iVar4) {\n            pcVar3 = *(*var_8h + 0x18);\n            (**0x42922c)(var_8h);\n            (*pcVar3)();\n            pcVar3 = *(*var_8h + 0x14);\n            (**0x42922c)(var_8h);\n            (*pcVar3)();\n            pcVar3 = *(*var_8h + 8);\n            (**0x42922c)(var_8h);\n            (*pcVar3)();\n        }\n        pcVar3 = *(*param_1[7] + 8);\n        (**0x42922c)(param_1[7]);\n        (*pcVar3)();\n        param_1[7] = 0;\n    }\n    return;\n}\n",
        "token_count": 495
    },
    "00428147": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00428147(void)\n\n{\n    *0x434de0 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "00402a4b": {
        "rules": [
            "set file attributes"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402a4b(uint lpFileName, uint dwFileAttributes)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    uint var_1000h;\n    uint uStackY40;\n    uint *puStackY36;\n    uint uStackY32;\n    \n    fcn.004154b0();\n    uVar1 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n    bVar2 = uVar1 != 0;\n    if (uVar1 == 0) {\n        uStackY32 = 0x402a82;\n        uVar1 = fcn.004035e5(lpFileName, &fcn.00402a4b::var_1000h, 0x800);\n        if (uVar1 != '\\0') {\n            uStackY32 = dwFileAttributes;\n            puStackY36 = &fcn.00402a4b::var_1000h;\n            uStackY40 = 0x402a96;\n            uVar1 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n            bVar2 = uVar1 != 0;\n        }\n    }\n    return uVar1 & 0xffffff00 | bVar2;\n}\n",
        "token_count": 272
    },
    "00405ac3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405ac3(uchar *param_1, int32_t param_2)\n\n{\n    if ((param_1 != NULL) && (param_2 != 0)) {\n        do {\n            *param_1 = 0;\n            param_1 = param_1 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "004068f1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004068f1(char *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        param_3 = param_3 + -1;\n        if (param_3 != 0) {\n            param_2 = param_2 - param_1;\n            do {\n                if (param_1[param_2] == '\\0') break;\n                *param_1 = param_1[param_2];\n                param_1 = param_1 + 1;\n                param_3 = param_3 + -1;\n            } while (param_3 != 0);\n        }\n        *param_1 = '\\0';\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0040bbf2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040bbf2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 != 0) {\n        do {\n            iVar1 = *(param_1 + -4);\n            fcn.0041a299(param_1 + -8);\n            param_1 = iVar1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 93
    },
    "0040e8ed": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040e8ed(void)\n\n{\n    char *unaff_retaddr;\n    \n    fcn.0040162f(0x43e150);\n    *0x44f6e0 = 0x12345678;\n    *0x44f6e4 = 0x23456789;\n    *0x44f6e8 = 0x34567890;\n    for (; *unaff_retaddr != '\\0'; unaff_retaddr = unaff_retaddr + 1) {\n        fcn.0040e9e0();\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0041c488": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041c488(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 == 0) {\n        iVar1 = fcn.0041f805(param_2);\n    }\n    else {\n        if (param_2 == 0) {\n            fcn.0041f6da(param_1);\n        }\n        else {\n            if (param_2 < 0xffffffe1) {\n                do {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x469c64, 0, param_1, param_2);\n                    if (iVar1 != 0) {\n                        return iVar1;\n                    }\n                    iVar1 = fcn.0041f034();\n                } while ((iVar1 != 0) && (iVar1 = fcn.0041de8e(param_2),  iVar1 != 0));\n            }\n            puVar2 = fcn.0041f7f2();\n            *puVar2 = 0xc;\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 259
    },
    "0040272f": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040272f(uint lpFileName)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    uint var_1000h;\n    uint uStackY32;\n    uint *puStackY28;\n    \n    fcn.004154b0();\n    uVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n    bVar2 = uVar1 != 0;\n    if (uVar1 == 0) {\n        puStackY28 = 0x402763;\n        uVar1 = fcn.004035e5(lpFileName, &fcn.0040272f::var_1000h, 0x800);\n        if (uVar1 != '\\0') {\n            puStackY28 = &fcn.0040272f::var_1000h;\n            uStackY32 = 0x402774;\n            uVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n            bVar2 = uVar1 != 0;\n        }\n    }\n    return uVar1 & 0xffffff00 | bVar2;\n}\n",
        "token_count": 243
    },
    "00406b8c": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406b8c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpLibFileName;\n    uint uStackY40;\n    uint *puStackY36;\n    \n    fcn.004154b0();\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n    if (iVar1 != 0) {\n        puStackY36 = 0x406bc2;\n        fcn.00403825(&fcn.00406b8c::lpLibFileName, arg_8h, &fcn.00406b8c::lpLibFileName, 0x800);\n        puStackY36 = &fcn.00406b8c::lpLibFileName;\n        uStackY40 = 0x406bcf;\n        (*_sym.imp.KERNEL32.dll_LoadLibraryW)();\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "0041111d": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nuint32_t fcn.0041111d(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(param_2, param_1);\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 76
    },
    "00411e15": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00411e15(ushort *pszPath, uint nFolder)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t *var_8h;\n    uint dwReserved;\n    \n    (*_sym.imp.SHELL32.dll_SHGetMalloc)(&var_8h);\n    iVar2 = (*_sym.imp.SHELL32.dll_SHGetFolderLocation)(0, nFolder, 0, 0, &dwReserved);\n    uVar3 = iVar2 == 0;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(dwReserved, pszPath);\n        uVar3 = 1 - (iVar2 != 1);\n        pcVar1 = *(*var_8h + 0x14);\n        (**0x42922c)(var_8h, dwReserved);\n        pszPath = (*pcVar1)();\n    }\n    else {\n        *pszPath = 0;\n    }\n    return pszPath & 0xffffff00 | uVar3;\n}\n",
        "token_count": 246
    },
    "00406428": {
        "rules": [
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid fcn.00406428(uint *param_1)\n\n{\n    param_1[6] = 0;\n    param_1[7] = 0;\n    *param_1 = 0x67452301;\n    param_1[1] = 0xefcdab89;\n    param_1[2] = 0x98badcfe;\n    param_1[3] = 0x10325476;\n    param_1[4] = 0xc3d2e1f0;\n    return;\n}\n",
        "token_count": 119
    },
    "00414e35": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint32_t fcn.00414e35(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *0x469260;\n    if (*0x469260 != 1) {\n        if (*0x469260 != 0) {\n            return *0x469260 & 0xffffff00 | 1;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"KERNEL32.DLL\");\n        if (((uVar2 == 0) ||\n            (iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, \"AcquireSRWLockExclusive\"),  iVar3 == 0)) ||\n           (*0x469264 = iVar3,  iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, \"ReleaseSRWLockExclusive\"), \n           iVar3 == 0)) {\n            uVar2 = 1;\n            iVar3 = *0x469268;\n        }\n        *0x469268 = iVar3;\n        uVar4 = 0;\n        LOCK();\n        uVar1 = uVar2;\n        if (*0x469260 != 0) {\n            uVar4 = *0x469260;\n            uVar1 = *0x469260;\n        }\n        *0x469260 = uVar1;\n        if ((uVar4 != 0) || (uVar2 != 1)) {\n            return uVar4 & 0xffffff00 | uVar4 != 1;\n        }\n    }\n    return uVar4 & 0xffffff00;\n}\n",
        "token_count": 367
    },
    "00410f5a": {
        "rules": [
            "create shortcut via IShellLink"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00410f5a(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, int32_t arg_20h)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *var_8h;\n    int32_t *ppv;\n    \n    uVar5 = 0;\n    uVar3 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x42b24c, 0, 1, 0x42b15c, &ppv);\n    if (-1 < uVar3) {\n        ppcVar1 = *ppv;\n        (**0x42922c)(ppv, 0x42b23c, &var_8h);\n        iVar4 = (**ppcVar1)();\n        if (-1 < iVar4) {\n            if (arg_8h != '\\0') {\n                pcVar2 = *(*var_8h + 0x14);\n                (**0x42922c)(var_8h, arg_10h, 2);\n                (*pcVar2)();\n            }\n            pcVar2 = *(*ppv + 0x50);\n            (**0x42922c)(ppv, arg_ch);\n            (*pcVar2)();\n            if (arg_18h != 0) {\n                pcVar2 = *(*ppv + 0x1c);\n                (**0x42922c)(ppv, arg_18h);\n                (*pcVar2)();\n            }\n            pcVar2 = *(*ppv + 0x44);\n            if (arg_1ch == 0) {\n                arg_1ch = 0x429584;\n            }\n            (**0x42922c)(ppv, arg_1ch, 0);\n            (*pcVar2)();\n            if (arg_20h != 0) {\n                pcVar2 = *(*ppv + 0x2c);\n                (**0x42922c)(ppv, arg_20h);\n                (*pcVar2)();\n            }\n            if (arg_14h != 0) {\n                pcVar2 = *(*ppv + 0x24);\n                (**0x42922c)(ppv, arg_14h);\n                (*pcVar2)();\n            }\n            pcVar2 = *(*var_8h + 0x18);\n            (**0x42922c)(var_8h, arg_10h, 1);\n            iVar4 = (*pcVar2)();\n            uVar5 = -1 < iVar4;\n            pcVar2 = *(*var_8h + 8);\n            (**0x42922c)(var_8h);\n            (*pcVar2)();\n        }\n        pcVar2 = *(*ppv + 8);\n        (**0x42922c)(ppv);\n        uVar3 = (*pcVar2)();\n    }\n    return uVar3 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 670
    },
    "00411680": {
        "rules": [
            "find graphical window"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411680(int32_t hWnd)\n\n{\n    int32_t iVar1;\n    uint lpClassName;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetClassNameW)(hWnd, &lpClassName, 0x50);\n    if ((iVar1 != 0) && (iVar1 = fcn.00407d6d(&lpClassName, 0x42a490),  iVar1 != 0)) {\n        hWnd = (*_sym.imp.USER32.dll_FindWindowExW)(hWnd, 0, 0x42a490, 0);\n    }\n    if (hWnd != 0) {\n        (*_sym.imp.SHLWAPI.dll_SHAutoComplete)(hWnd, 0x10);\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "004116d9": {
        "rules": [
            "set current directory"
        ],
        "decompiled_code": "\nuint32_t fcn.004116d9(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(param_1);\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 67
    }
}