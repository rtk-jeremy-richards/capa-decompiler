{
    "00401380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401380(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = *0x4180e8 + *0x4180c8;\n    iVar3 = *0x4180e4 + *0x4180cc;\n    for (var_8h = 0; var_8h < *0x4180fc; var_8h = var_8h + 1) {\n        *(iVar1 + var_8h) = 0;\n        if (*0x418138 == 0) {\n            iVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x115c);\n            iVar4 = iVar2 + var_8h + *0x418138;\n            iVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x115c);\n            *(iVar1 + iVar2 + var_8h + *0x418138) = *(iVar3 + iVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "00401450": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401450(void)\n\n{\n    *0x418138 = (**0x418118)(0x80000000, *0x418088, 0x418130);\n    if (*0x418138 == 0) {\n        return;\n    }\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 80
    },
    "00401c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar * fcn.00401c60(void)\n\n{\n    int32_t iVar1;\n    uint var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_1efh;\n    uint var_1cfh;\n    uint var_149h;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x4180d8 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    *0x418124 = *(*0x4180d8 + 0x3c);\n    var_8h = 200;\n    var_4h = 1;\n    while (iVar1 = (**0x418110)(*0x418130, 0x418100, 0, &var_4h, &var_d0h, &var_8h),  iVar1 != 0) {\n        fcn.00401c60();\n    }\n    if (var_d0h._3_1_ == 't') {\n        *0x418108 = str.xlnjms34aaseGcgfB611;\n    }\n    *0x41812c = *(*0x4180d8 + *0x418124 + 0x50);\n    *0x41808c = *0x41808c - 0x14d;\n    if ((*0x4180d8 < *0x41808c) && (*0x41808c < *0x41812c + *0x4180d8)) {\n        *0x4180b0 = 0;\n    }\n    else {\n        *0x4180d8 = *0x4180dc;\n        *0x4180b0 = 1;\n    }\n    return *0x418108;\n}\n",
        "token_count": 418
    },
    "null": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl entry0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401000();\n    *0x4180dc = arg_8h;\n    *0x418118 = _sym.imp.ADVAPI32.dll_RegOpenKeyA;\n    *0x4180bc = &stack0xfffffffc;\n    fcn.00401560();\n    *0x418110 = _sym.imp.ADVAPI32.dll_RegQueryValueExA;\n    *0x4180e4 = fcn.00401c60();\n    fcn.00401080();\n    *0x4180c8 = 0;\n    *0x4180cc = 0;\n    *0x4180c4 = 3;\n    while (*0x4180fc = fcn.00401c30(*0x41800c, *0x4180a8),  *0x4180c8 < *0x4180a4) {\n        fcn.00401380(0x17);\n        *0x4180ac = *0x4180fc;\n        *0x4180cc = *0x4180c4 + *0x41800c + *0x4180cc;\n        *0x4180c8 = *0x41800c + *0x4180c8;\n        *0x4180a8 = *0x4180a8 - *0x4180fc;\n    }\n    fcn.004010b0(4, 0x241);\n    uVar1 = fcn.004012a0();\n    return uVar1;\n}\n",
        "token_count": 370
    },
    "00401c00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00401c00(void)\n\n{\n    uint var_4h;\n    \n    return *(*0x4180e4 + -4);\n}\n",
        "token_count": 34
    },
    "00401780": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00401780(void)\n\n{\n    *0x4180f0 = 0;\n    **0x418088 = 0x69;\n    (*0x418088)[*0x4180f0 + 1] = *0x4180f0 + 'n';\n    (*0x418088)[*0x4180f0 + 2] = *0x4180f0 + 't';\n    (*0x418088)[*0x4180f0 + 3] = *0x4180f0 + 'e';\n    (*0x418088)[*0x4180f0 + 4] = *0x4180f0 + 'r';\n    (*0x418088)[*0x4180f0 + 5] = *0x4180f0 + 'f';\n    (*0x418088)[*0x4180f0 + 6] = *0x4180f0 + 'a';\n    (*0x418088)[*0x4180f0 + 7] = *0x4180f0 + 'c';\n    (*0x418088)[*0x4180f0 + 8] = *0x4180f0 + 'e';\n    (*0x418088)[*0x4180f0 + 9] = *0x4180f0 + '\\\\';\n    (*0x418088)[*0x4180f0 + 10] = *0x4180f0 + '{';\n    (*0x418088)[*0x4180f0 + 0xb] = *0x4180f0 + 'a';\n    (*0x418088)[*0x4180f0 + 0xc] = *0x4180f0 + 'a';\n    (*0x418088)[*0x4180f0 + 0xd] = *0x4180f0 + '5';\n    (*0x418088)[*0x4180f0 + 0xe] = *0x4180f0 + 'b';\n    (*0x418088)[*0x4180f0 + 0xf] = *0x4180f0 + '6';\n    (*0x418088)[*0x4180f0 + 0x10] = *0x4180f0 + 'a';\n    (*0x418088)[*0x4180f0 + 0x11] = *0x4180f0 + '8';\n    (*0x418088)[*0x4180f0 + 0x12] = *0x4180f0 + '0';\n    (*0x418088)[*0x4180f0 + 0x13] = *0x4180f0 + '-';\n    (*0x418088)[*0x4180f0 + 0x14] = *0x4180f0 + 'b';\n    (*0x418088)[*0x4180f0 + 0x15] = *0x4180f0 + '8';\n    (*0x418088)[*0x4180f0 + 0x16] = *0x4180f0 + '3';\n    (*0x418088)[*0x4180f0 + 0x17] = *0x4180f0 + '4';\n    (*0x418088)[*0x4180f0 + 0x18] = *0x4180f0 + '-';\n    (*0x418088)[*0x4180f0 + 0x19] = *0x4180f0 + '1';\n    (*0x418088)[*0x4180f0 + 0x1a] = *0x4180f0 + '1';\n    (*0x418088)[*0x4180f0 + 0x1b] = *0x4180f0 + 'd';\n    (*0x418088)[*0x4180f0 + 0x1c] = *0x4180f0 + '0';\n    (*0x418088)[*0x4180f0 + 0x1d] = *0x4180f0 + '-';\n    (*0x418088)[*0x4180f0 + 0x1e] = *0x4180f0 + '9';\n    (*0x418088)[*0x4180f0 + 0x1f] = *0x4180f0 + '3';\n    (*0x418088)[*0x4180f0 + 0x20] = *0x4180f0 + '2';\n    (*0x418088)[*0x4180f0 + 0x21] = *0x4180f0 + 'f';\n    (*0x418088)[*0x4180f0 + 0x22] = *0x4180f0 + '-';\n    (*0x418088)[*0x4180f0 + 0x23] = *0x4180f0 + '0';\n    (*0x418088)[*0x4180f0 + 0x24] = *0x4180f0 + '0';\n    (*0x418088)[*0x4180f0 + 0x25] = *0x4180f0 + 'a';\n    (*0x418088)[*0x4180f0 + 0x26] = *0x4180f0 + '0';\n    (*0x418088)[*0x4180f0 + 0x27] = *0x4180f0 + 'c';\n    (*0x418088)[*0x4180f0 + 0x28] = *0x4180f0 + '9';\n    (*0x418088)[*0x4180f0 + 0x29] = *0x4180f0 + '0';\n    (*0x418088)[*0x4180f0 + 0x2a] = *0x4180f0 + 'd';\n    (*0x418088)[*0x4180f0 + 0x2b] = *0x4180f0 + 'c';\n    (*0x418088)[*0x4180f0 + 0x2c] = *0x4180f0 + 'a';\n    (*0x418088)[*0x4180f0 + 0x2d] = *0x4180f0 + 'a';\n    (*0x418088)[*0x4180f0 + 0x2e] = *0x4180f0 + '9';\n    (*0x418088)[*0x4180f0 + 0x2f] = *0x4180f0 + '}';\n    (*0x418088)[*0x4180f0 + 0x30] = 0;\n    return;\n}\n",
        "token_count": 1542
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401000(void)\n\n{\n    // [00] -r-x section size 8192 named .text\n    fcn.00401c30(2, 2);\n    fcn.00401c30(0xb, 0xc);\n    fcn.00401c30(0x1f, 0xd);\n    for (*0x4180f0 = 0xb; *0x4180f0 < 0x89c0c1b; *0x4180f0 = *0x4180f0 + 2) {\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00401080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401080(void)\n\n{\n    *0x4180a4 = fcn.00401c00(0x37);\n    *0x4180f0 = *0x4180a4;\n    fcn.00401490(1);\n    return;\n}\n",
        "token_count": 63
    },
    "004010b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004010b0(void)\n\n{\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    fcn.00401c30(0xd, 1);\n    for (var_4h = 0; var_4h < *0x4180a4; var_4h = var_4h + 4) {\n        *0x418134 = *0x4180e8 + var_4h;\n        fcn.004012b0(0x14c, var_4h);\n        *0x418104 = var_4h + 0x715;\n        *0x418120 = *0x418134;\n        fcn.00401600();\n    }\n    return;\n}\n",
        "token_count": 559
    },
    "00401290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401290(int32_t arg_8h)\n\n{\n    return arg_8h + 0x13f7;\n}\n",
        "token_count": 36
    },
    "004012b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012b0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    **0x418134 = arg_ch + **0x418134;\n    return;\n}\n",
        "token_count": 52
    },
    "004012e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004012e0(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    return arg_8h * 0x229;\n}\n",
        "token_count": 43
    },
    "00401300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401300(void)\n\n{\n    *0x41811c = *0x418104 - 2;\n    *0x41812c = **0x418120 ^ *0x418104;\n    *0x41810c = *0x41812c;\n    **0x418120 = *0x41812c;\n    return;\n}\n",
        "token_count": 81
    },
    "00401490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401490(void)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x418114 = _sym.imp.KERNEL32.dll_VirtualAlloc;\n    *0x4180e8 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, *0x4180a4, 0x3000, 0x40);\n    *0x4180a8 = *0x4180a4;\n    *0x4180b4 = *0x4180e8 + 0x102f0;\n    return *0x4180e8;\n}\n",
        "token_count": 159
    },
    "00401560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401560(void)\n\n{\n    *0x4180f0 = 0;\n    fcn.00401290(1);\n    fcn.00401290(1);\n    fcn.00401290(1);\n    fcn.00401290(1);\n    fcn.00401290(1);\n    fcn.00401290(1);\n    fcn.00401290(1);\n    fcn.00401290(1);\n    fcn.00401290(1);\n    fcn.00401290(1);\n    fcn.00401290(1);\n    fcn.00401290(1);\n    fcn.00401780();\n    fcn.00401450();\n    return;\n}\n",
        "token_count": 163
    },
    "00401c30": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401c30(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < arg_ch) {\n        arg_ch = arg_8h;\n    }\n    return arg_ch;\n}\n",
        "token_count": 72
    }
}