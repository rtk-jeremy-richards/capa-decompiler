{
    "null": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl method.std::runtime_error.virtual_0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.0040601e();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406bd3(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "00401660": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401660(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    code **ppcVar1;\n    uint var_74h;\n    uint var_40h;\n    code *var_30h;\n    code *var_2ch;\n    code *var_28h;\n    code *var_24h;\n    code *var_20h;\n    code *var_1ch;\n    code *var_18h;\n    code *var_14h;\n    uint var_10h;\n    code **var_ch;\n    uint32_t var_8h;\n    code **var_4h;\n    \n    var_8h = 0;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        var_4h = fcn.00406c23(0x18);\n        if (var_4h == NULL) {\n            var_ch = NULL;\n        }\n        else {\n            var_8h = var_8h | 1;\n            arg_8h_00 = fcn.00401500();\n            var_10h = fcn.00401190(arg_8h_00);\n            *var_4h = vtable.std::_Facet_base.0;\n            *var_4h = vtable.std::locale::facet.0;\n            var_4h[1] = NULL;\n            *var_4h = vtable.std::ctype_base.0;\n            *var_4h = vtable.std::ctype_char_.0;\n            ppcVar1 = fcn.0040560f(&var_40h);\n            var_30h = *ppcVar1;\n            var_2ch = ppcVar1[1];\n            var_28h = ppcVar1[2];\n            var_24h = ppcVar1[3];\n            var_4h[2] = var_30h;\n            var_4h[3] = var_2ch;\n            var_4h[4] = var_28h;\n            var_4h[5] = var_24h;\n            var_ch = var_4h;\n            var_20h = var_30h;\n            var_1ch = var_2ch;\n            var_18h = var_28h;\n            var_14h = var_24h;\n        }\n        *arg_8h = var_ch;\n        if ((var_8h & 1) != 0) {\n            var_8h = var_8h & 0xfffffffe;\n            fcn.00401290();\n        }\n    }\n    return 2;\n}\n",
        "token_count": 586
    },
    "00402740": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402740(code **param_1)\n\n{\n    code *pcVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    pcVar1 = param_1[0xd];\n    if (pcVar1 != NULL) {\n        fcn.004014b0();\n        fcn.00406bd3(pcVar1);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00404540": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00404540(int32_t param_1)\n\n{\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(param_1 + 0x3c) & 1) != 0) {\n        if (**(param_1 + 0x20) == 0) {\n            var_ch = **(param_1 + 0x1c) + **(param_1 + 0x2c);\n        }\n        else {\n            var_ch = **(param_1 + 0x20) + **(param_1 + 0x30);\n        }\n        fcn.00406bd3(**(param_1 + 0xc), **(param_1 + 0xc), **(param_1 + 0xc), var_ch);\n    }\n    **(param_1 + 0xc) = 0;\n    **(param_1 + 0x1c) = 0;\n    **(param_1 + 0x2c) = 0;\n    **(param_1 + 0x10) = 0;\n    **(param_1 + 0x20) = 0;\n    **(param_1 + 0x30) = 0;\n    *(param_1 + 0x38) = 0;\n    *(param_1 + 0x3c) = *(param_1 + 0x3c) & 0xfffffffe;\n    return;\n}\n",
        "token_count": 393
    },
    "00404b50": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404b50(uint32_t arg_8h)\n\n{\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if ((arg_8h & 1) == 0) {\n        var_4h = 4;\n    }\n    if ((arg_8h & 2) == 0) {\n        var_4h = var_4h | 2;\n    }\n    if ((arg_8h & 8) != 0) {\n        var_4h = var_4h | 8;\n    }\n    if ((arg_8h & 4) != 0) {\n        var_4h = var_4h | 0x10;\n    }\n    return var_4h;\n}\n",
        "token_count": 181
    },
    "00403c50": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00403c50(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402d40();\n    *in_ECX = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    *in_ECX = vtable.std::ios_base.0;\n    fcn.00405396(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.00406bd3(in_ECX + -0x1a);\n    }\n    return in_ECX + -0x1a;\n}\n",
        "token_count": 155
    },
    "00403cc0": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00403cc0(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402db0();\n    *in_ECX = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    *in_ECX = vtable.std::ios_base.0;\n    fcn.00405396(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.00406bd3(in_ECX + -8);\n    }\n    return in_ECX + -8;\n}\n",
        "token_count": 149
    },
    "00403be0": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00403be0(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402c60();\n    *in_ECX = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    *in_ECX = vtable.std::ios_base.0;\n    fcn.00405396(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.00406bd3(in_ECX + -2);\n    }\n    return in_ECX + -2;\n}\n",
        "token_count": 149
    },
    "00403af0": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00403af0(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402700();\n    *in_ECX = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    *in_ECX = vtable.std::ios_base.0;\n    fcn.00405396(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.00406bd3(in_ECX + -6);\n    }\n    return in_ECX + -6;\n}\n",
        "token_count": 148
    },
    "004154ab": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004154ab(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040ae60(0x4219c8, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.00408687();\n        *puVar1 = 0;\n        puVar1 = fcn.004086bb();\n        *puVar1 = 9;\n    }\n    else {\n        if ((arg_8h_00 < 0) || (*0x42b0e0 <= arg_8h_00)) {\n            puVar1 = fcn.00408687();\n            *puVar1 = 0;\n        }\n        else {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x425230) + 4 + iVar3) & 1) != 0) {\n                fcn.004122c8(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x425230) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.004086bb();\n                    *puVar1 = 9;\n                    puVar1 = fcn.00408687();\n                    *puVar1 = 0;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.0041559a(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00415572();\n                goto code_r0x00415594;\n            }\n            puVar1 = fcn.00408687();\n            *puVar1 = 0;\n        }\n        puVar1 = fcn.004086bb();\n        *puVar1 = 9;\n        fcn.0040b1b1();\n    }\ncode_r0x00415594:\n    fcn.0040aea5();\n    return;\n}\n",
        "token_count": 638
    },
    "004127c8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004127c8(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    code *var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    pcVar6 = _sym.imp.KERNEL32.dll_EncodePointer;\n    var_4h = *0x42335c ^ &stack0xfffffffc;\n    var_1ch = arg_8h;\n    iVar7 = 0;\n    arg_8h_00 = 0;\n    var_20h = arg_ch;\n    pcVar1 = (*_sym.imp.KERNEL32.dll_EncodePointer)();\n    var_18h = pcVar1;\n    var_14h = fcn.00408375();\n    if (*0x425ed4 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0x800);\n        if (((iVar2 == 0) &&\n            ((iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0x57 ||\n             (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0),  iVar2 == 0)))) ||\n           (iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxW\"),  iVar3 == 0)) goto code_r0x0041299d;\n        *0x425ed4 = (*pcVar6)(iVar3);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetActiveWindow\");\n        *0x425ed8 = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetLastActivePopup\");\n        *0x425edc = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetUserObjectInformationW\");\n        *0x425ee4 = (*pcVar6)(uVar4);\n        pcVar1 = var_18h;\n        if (*0x425ee4 != NULL) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetProcessWindowStation\");\n            *0x425ee0 = (*pcVar6)(uVar4);\n            pcVar1 = var_18h;\n        }\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 == 0) {\n        if (var_14h != NULL) {\n            (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x425ed4);\n            goto code_r0x0041299d;\n        }\n    }\n    else {\n        if (var_1ch != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(var_1ch);\n        }\n        if (var_14h != NULL) goto code_r0x0041299d;\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x425ee0 == pcVar1) || (*0x425ee4 == pcVar1)) {\ncode_r0x00412953:\n        if ((((*0x425ed8 != pcVar1) && (pcVar5 = (*pcVar6)(*0x425ed8),  pcVar5 != NULL)) &&\n            (iVar7 = (*pcVar5)(),  iVar7 != 0)) &&\n           ((*0x425edc != pcVar1 && (pcVar1 = (*pcVar6)(*0x425edc),  pcVar1 != NULL)))) {\n            iVar7 = (*pcVar1)(iVar7);\n        }\n    }\n    else {\n        var_14h = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x425ee0);\n        var_18h = (*pcVar6)(*0x425ee4);\n        if (((var_14h == NULL) || (var_18h == NULL)) ||\n           (((iVar2 = (*var_14h)(),  iVar2 != 0 && (iVar2 = (*var_18h)(iVar2, 1, &var_10h, 0xc, &var_24h),  iVar2 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x00412953;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x425ed4);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(iVar7, var_1ch, var_20h, arg_10h);\n    }\ncode_r0x0041299d:\n    fcn.00406df5(arg_8h_00);\n    return;\n}\n",
        "token_count": 1189
    },
    "00416c4c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00416f56)\n// WARNING: Removing unreachable block (ram,0x00416f5f)\n// WARNING: Removing unreachable block (ram,0x00417393)\n// WARNING: Removing unreachable block (ram,0x00416fbc)\n// WARNING: Removing unreachable block (ram,0x00416fda)\n// WARNING: Removing unreachable block (ram,0x00416fc1)\n// WARNING: Removing unreachable block (ram,0x00416fc8)\n// WARNING: Removing unreachable block (ram,0x00416fcd)\n// WARNING: Removing unreachable block (ram,0x00416fdd)\n// WARNING: Removing unreachable block (ram,0x00417389)\n// WARNING: Removing unreachable block (ram,0x00416fe5)\n// WARNING: Removing unreachable block (ram,0x00416fea)\n// WARNING: Removing unreachable block (ram,0x00416ff1)\n// WARNING: Removing unreachable block (ram,0x00416ff4)\n// WARNING: Removing unreachable block (ram,0x0041700c)\n// WARNING: Removing unreachable block (ram,0x0041700e)\n// WARNING: Removing unreachable block (ram,0x00417018)\n// WARNING: Removing unreachable block (ram,0x0041701b)\n// WARNING: Removing unreachable block (ram,0x00417022)\n// WARNING: Removing unreachable block (ram,0x00417025)\n// WARNING: Removing unreachable block (ram,0x0041737b)\n// WARNING: Removing unreachable block (ram,0x00417399)\n// WARNING: Removing unreachable block (ram,0x00417031)\n// WARNING: Removing unreachable block (ram,0x0041736c)\n// WARNING: Removing unreachable block (ram,0x0041703d)\n// WARNING: Removing unreachable block (ram,0x0041704d)\n// WARNING: Removing unreachable block (ram,0x0041704f)\n// WARNING: Removing unreachable block (ram,0x00417059)\n// WARNING: Removing unreachable block (ram,0x00417062)\n// WARNING: Removing unreachable block (ram,0x00417352)\n// WARNING: Removing unreachable block (ram,0x0041706d)\n// WARNING: Removing unreachable block (ram,0x00417084)\n// WARNING: Removing unreachable block (ram,0x00417096)\n// WARNING: Removing unreachable block (ram,0x004170a7)\n// WARNING: Removing unreachable block (ram,0x004170e6)\n// WARNING: Removing unreachable block (ram,0x004170ef)\n// WARNING: Removing unreachable block (ram,0x0041732f)\n// WARNING: Removing unreachable block (ram,0x004170fd)\n// WARNING: Removing unreachable block (ram,0x0041710f)\n// WARNING: Removing unreachable block (ram,0x00417114)\n// WARNING: Removing unreachable block (ram,0x00417121)\n// WARNING: Removing unreachable block (ram,0x00417127)\n// WARNING: Removing unreachable block (ram,0x0041712d)\n// WARNING: Removing unreachable block (ram,0x00417138)\n// WARNING: Removing unreachable block (ram,0x0041713d)\n// WARNING: Removing unreachable block (ram,0x0041714a)\n// WARNING: Removing unreachable block (ram,0x0041714f)\n// WARNING: Removing unreachable block (ram,0x00417107)\n// WARNING: Removing unreachable block (ram,0x00417346)\n// WARNING: Removing unreachable block (ram,0x0041734c)\n// WARNING: Removing unreachable block (ram,0x00417153)\n// WARNING: Removing unreachable block (ram,0x00417161)\n// WARNING: Removing unreachable block (ram,0x00417168)\n// WARNING: Removing unreachable block (ram,0x00417174)\n// WARNING: Removing unreachable block (ram,0x00417194)\n// WARNING: Removing unreachable block (ram,0x00417199)\n// WARNING: Removing unreachable block (ram,0x0041719e)\n// WARNING: Removing unreachable block (ram,0x004171a1)\n// WARNING: Removing unreachable block (ram,0x004171a8)\n// WARNING: Removing unreachable block (ram,0x004171ab)\n// WARNING: Removing unreachable block (ram,0x004171b7)\n// WARNING: Removing unreachable block (ram,0x004171c0)\n// WARNING: Removing unreachable block (ram,0x004171cf)\n// WARNING: Removing unreachable block (ram,0x004171e6)\n// WARNING: Removing unreachable block (ram,0x004171ea)\n// WARNING: Removing unreachable block (ram,0x0041721c)\n// WARNING: Removing unreachable block (ram,0x00417221)\n// WARNING: Removing unreachable block (ram,0x0041722d)\n// WARNING: Removing unreachable block (ram,0x0041723c)\n// WARNING: Removing unreachable block (ram,0x00417242)\n// WARNING: Removing unreachable block (ram,0x00417243)\n// WARNING: Removing unreachable block (ram,0x0041726e)\n// WARNING: Removing unreachable block (ram,0x00417278)\n// WARNING: Removing unreachable block (ram,0x0041728a)\n// WARNING: Removing unreachable block (ram,0x0041728e)\n// WARNING: Removing unreachable block (ram,0x00417298)\n// WARNING: Removing unreachable block (ram,0x004172a6)\n// WARNING: Removing unreachable block (ram,0x004172e2)\n// WARNING: Removing unreachable block (ram,0x004172ae)\n// WARNING: Removing unreachable block (ram,0x004172d9)\n// WARNING: Removing unreachable block (ram,0x004172b9)\n// WARNING: Removing unreachable block (ram,0x004172d1)\n// WARNING: Removing unreachable block (ram,0x004172ca)\n// WARNING: Removing unreachable block (ram,0x004172dd)\n// WARNING: Removing unreachable block (ram,0x004172e6)\n// WARNING: Removing unreachable block (ram,0x004172e9)\n// WARNING: Removing unreachable block (ram,0x00417315)\n// WARNING: Removing unreachable block (ram,0x004172f6)\n// WARNING: Removing unreachable block (ram,0x0041734f)\n// WARNING: Removing unreachable block (ram,0x0041735a)\n// WARNING: Removing unreachable block (ram,0x0041739e)\n// WARNING: Variable defined which should be unmapped: var_80h\n\nvoid __cdecl\nfcn.00416c4c(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.004086bb();\n        *puVar2 = 0x16;\n        fcn.0040b1b1();\n        fcn.00406df5(arg_8h);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x00416cdb. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x4173c4\n    (**0x4173c4)();\n    return;\n}\n",
        "token_count": 1858
    },
    "00401190": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401190(int32_t arg_8h)\n\n{\n    code *var_2ch;\n    char *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    fcn.00405590(0);\n    var_8h = var_4h + 4;\n    *var_8h = 0;\n    *(var_4h + 8) = 0;\n    var_ch = var_4h + 0xc;\n    *var_ch = 0;\n    *(var_4h + 0x10) = 0;\n    var_10h = var_4h + 0x14;\n    *var_10h = 0;\n    *(var_4h + 0x18) = 0;\n    var_14h = var_4h + 0x1c;\n    *var_14h = 0;\n    *(var_4h + 0x20) = 0;\n    var_18h = var_4h + 0x24;\n    *var_18h = 0;\n    *(var_4h + 0x28) = 0;\n    var_1ch = var_4h + 0x2c;\n    *var_1ch = 0;\n    *(var_4h + 0x30) = 0;\n    if (arg_8h == 0) {\n        var_20h = \"bad locale name\";\n        fcn.00405fbb(&var_20h);\n        var_2ch = vtable.std::runtime_error.0;\n        fcn.00406e04(&var_2ch, 0x421a8c);\n    }\n    fcn.00405221(var_4h, arg_8h);\n    return var_4h;\n}\n",
        "token_count": 449
    },
    "00401290": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401290(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040526c(param_1);\n    piVar1 = param_1 + 0x2c;\n    if (*piVar1 != 0) {\n        fcn.00406734(*piVar1);\n    }\n    *piVar1 = 0;\n    piVar1 = param_1 + 0x24;\n    if (*piVar1 != 0) {\n        fcn.00406734(*piVar1);\n    }\n    *piVar1 = 0;\n    piVar1 = param_1 + 0x1c;\n    if (*piVar1 != 0) {\n        fcn.00406734(*piVar1);\n    }\n    *piVar1 = 0;\n    piVar1 = param_1 + 0x14;\n    if (*piVar1 != 0) {\n        fcn.00406734(*piVar1);\n    }\n    *piVar1 = 0;\n    piVar1 = param_1 + 0xc;\n    if (*piVar1 != 0) {\n        fcn.00406734(*piVar1);\n    }\n    *piVar1 = 0;\n    piVar1 = param_1 + 4;\n    if (*piVar1 != 0) {\n        fcn.00406734(*piVar1);\n    }\n    *piVar1 = 0;\n    fcn.004055eb();\n    return;\n}\n",
        "token_count": 386
    },
    "004014b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004014b0(int32_t **param_1)\n\n{\n    uint *puVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*param_1 != NULL) && (puVar1 = (**(**param_1 + 8))(),  puVar1 != NULL)) {\n        (***puVar1)(1);\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00401500": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00401500(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*param_1 == 0) {\n        var_10h = 0x420664;\n    }\n    else {\n        piVar1 = *param_1 + 0x18;\n        if (*piVar1 == 0) {\n            var_ch = *param_1 + 0x1c;\n        }\n        else {\n            var_ch = *piVar1;\n        }\n        var_10h = var_ch;\n    }\n    return var_10h;\n}\n",
        "token_count": 165
    },
    "00401ae0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00401ae0(int32_t arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint noname_6, \n            int32_t arg_24h)\n\n{\n    uint var_2ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = arg_24h == 0;\n    if (arg_24h != 0) {\n        if (*0x420668 == '\\0') {\n            var_ch = 0;\n        }\n        else {\n            var_ch = fcn.00406770(0x420668);\n        }\n        fcn.00403f30(0x420668, var_ch);\n    }\n    var_4h = arg_10h;\n    var_10h = arg_ch;\n    (**(*arg_10h + 8))(&var_2ch, arg_ch);\n    fcn.00403e20(&var_2ch, 0, *0x420940);\n    fcn.00404150(1, 0);\n    *(arg_8h + 0x10) = 0;\n    *(arg_8h + 0x14) = 0;\n    fcn.00404150(0, 0);\n    fcn.00403d70(&arg_14h);\n    fcn.00404150(1, 0);\n    return arg_8h;\n}\n",
        "token_count": 358
    },
    "00401fd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401fd0(int32_t param_1)\n\n{\n    uint uVar1;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_1 + 0x30) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0x201;\n    *(param_1 + 0x18) = 6;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x2c) = 0;\n    fcn.00401e10(0, 0);\n    var_ch = fcn.00406c23(4);\n    if (var_ch == NULL) {\n        var_ch = NULL;\n    }\n    else {\n        uVar1 = fcn.0040514c(1);\n        *var_ch = uVar1;\n    }\n    *(param_1 + 0x30) = var_ch;\n    return;\n}\n",
        "token_count": 291
    },
    "00402ca0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00402ca0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch != 0) {\n        *in_ECX = 0x42090c;\n        in_ECX[4] = 0x42091c;\n        in_ECX[0x1a] = vtable.std::ios_base.0;\n        in_ECX[0x1a] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    }\n    fcn.00404320(in_ECX + 6, 0);\n    *(in_ECX + *(*in_ECX + 4)) =\n         vtable.std::basic_stringstream_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    *(in_ECX + *(*in_ECX + 4) + -4) = *(*in_ECX + 4) + -0x68;\n    fcn.004043c0(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 254
    },
    "00403d70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d70(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h[5] < 0x10) {\n        if (arg_8h[4] != -1) {\n            fcn.004060f0();\n        }\n    }\n    else {\n        if (in_ECX != NULL) {\n            *in_ECX = *arg_8h;\n        }\n        *arg_8h = 0;\n    }\n    in_ECX[4] = arg_8h[4];\n    in_ECX[5] = arg_8h[5];\n    fcn.00404150(0, 0);\n    return;\n}\n",
        "token_count": 198
    },
    "00403e20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00403e20(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h[4] < arg_ch) {\n        fcn.00405534(\"invalid string position\");\n    }\n    if (arg_8h[4] - arg_ch < arg_10h) {\n        arg_10h = arg_8h[4] - arg_ch;\n    }\n    if (*0x420940 - in_ECX[4] <= arg_10h) {\n        fcn.00405506(\"string too long\");\n    }\n    if (arg_10h != 0) {\n        iVar1 = in_ECX[4];\n        cVar2 = fcn.004047f0(iVar1 + arg_10h, 0);\n        if (cVar2 != '\\0') {\n            if (arg_8h[5] < 0x10) {\n                var_10h = arg_8h;\n            }\n            else {\n                var_10h = *arg_8h;\n            }\n            var_ch = in_ECX;\n            if (0xf < in_ECX[5]) {\n                var_ch = *in_ECX;\n            }\n            if (arg_10h != 0) {\n                fcn.00405920(var_ch + in_ECX[4], var_10h + arg_ch, arg_10h);\n            }\n            fcn.004047a0(iVar1 + arg_10h);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 435
    },
    "00403f30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00403f30(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    cVar2 = fcn.004048c0(arg_8h);\n    if (cVar2 == '\\0') {\n        if (*0x420940 - in_ECX[4] <= arg_ch) {\n            fcn.00405506(\"string too long\");\n        }\n        if (arg_ch != 0) {\n            iVar1 = in_ECX[4];\n            cVar2 = fcn.004047f0(iVar1 + arg_ch, 0);\n            if (cVar2 != '\\0') {\n                var_ch = in_ECX;\n                if (0xf < in_ECX[5]) {\n                    var_ch = *in_ECX;\n                }\n                if (arg_ch != 0) {\n                    fcn.00405920(var_ch + in_ECX[4], arg_8h, arg_ch);\n                }\n                fcn.004047a0(iVar1 + arg_ch);\n            }\n        }\n    }\n    else {\n        var_8h = in_ECX;\n        if (0xf < in_ECX[5]) {\n            var_8h = *in_ECX;\n        }\n        in_ECX = fcn.00403e20(in_ECX, arg_8h - var_8h, arg_ch);\n    }\n    return in_ECX;\n}\n",
        "token_count": 384
    },
    "00404030": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00404030(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint *in_ECX;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h[4] < arg_ch) {\n        fcn.00405534(\"invalid string position\");\n    }\n    var_8h = arg_8h[4] - arg_ch;\n    if (arg_10h < var_8h) {\n        var_8h = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        if (in_ECX[4] < arg_ch + var_8h) {\n            fcn.00405534(\"invalid string position\");\n        }\n        fcn.004047a0(arg_ch + var_8h);\n        fcn.004046e0(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.004047f0(var_8h, 0);\n        if (cVar1 != '\\0') {\n            if (arg_8h[5] < 0x10) {\n                var_10h = arg_8h;\n            }\n            else {\n                var_10h = *arg_8h;\n            }\n            var_ch = in_ECX;\n            if (0xf < in_ECX[5]) {\n                var_ch = *in_ECX;\n            }\n            if (var_8h != 0) {\n                fcn.00405920(var_ch, var_10h + arg_ch, var_8h);\n            }\n            fcn.004047a0(var_8h);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 444
    },
    "00404150": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00404150(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != '\\0') && (0xf < in_ECX[5])) {\n        uVar1 = *in_ECX;\n        if ((arg_ch != 0) && (arg_ch != 0)) {\n            fcn.00405920();\n        }\n        fcn.00406bd3(uVar1, in_ECX[5] + 1);\n    }\n    in_ECX[5] = 0xf;\n    fcn.004047a0(arg_ch);\n    return;\n}\n",
        "token_count": 198
    },
    "004041e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004041e0(uint arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_ECX;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401fd0();\n    *(in_ECX + 0x38) = arg_8h;\n    *(in_ECX + 0x3c) = 0;\n    uVar1 = fcn.004049e0(0x20);\n    *(in_ECX + 0x40) = uVar1;\n    if (*(in_ECX + 0x38) == 0) {\n        var_ch = *(in_ECX + 0xc) | 4;\n        fcn.00401e10(var_ch, 0);\n    }\n    if (arg_ch != '\\0') {\n        fcn.00405320(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "00404320": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00404320(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch != 0) {\n        *in_ECX = 0x4208e4;\n        in_ECX[4] = 0x42092c;\n        in_ECX[8] = vtable.std::ios_base.0;\n        in_ECX[8] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    }\n    fcn.00404940(arg_8h, 0, 0);\n    fcn.00404aa0(0, 0, 0);\n    *(in_ECX + *(*in_ECX + 4)) = vtable.std::basic_iostream_char__struct_std::char_traits_char__.0;\n    *(in_ECX + *(*in_ECX + 4) + -4) = *(*in_ECX + 4) + -0x20;\n    return in_ECX;\n}\n",
        "token_count": 246
    },
    "004043c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404423)\n// WARNING: Removing unreachable block (ram,0x00404428)\n// WARNING: Removing unreachable block (ram,0x0040443b)\n// WARNING: Removing unreachable block (ram,0x00404404)\n// WARNING: Removing unreachable block (ram,0x00404416)\n// WARNING: Removing unreachable block (ram,0x00404421)\n// WARNING: Removing unreachable block (ram,0x00404440)\n// WARNING: Removing unreachable block (ram,0x00404450)\n// WARNING: Removing unreachable block (ram,0x00404458)\n// WARNING: Removing unreachable block (ram,0x0040446b)\n// WARNING: Removing unreachable block (ram,0x0040447f)\n// WARNING: Removing unreachable block (ram,0x004044a3)\n// WARNING: Removing unreachable block (ram,0x004044ae)\n// WARNING: Removing unreachable block (ram,0x004044c1)\n// WARNING: Removing unreachable block (ram,0x004044b9)\n// WARNING: Removing unreachable block (ram,0x004044c7)\n// WARNING: Removing unreachable block (ram,0x004044fc)\n// WARNING: Removing unreachable block (ram,0x0040451e)\n\ncode ** __cdecl fcn.004043c0(uint arg_8h)\n\n{\n    code *pcVar1;\n    code **in_ECX;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404a40();\n    *in_ECX = vtable.std::basic_stringbuf_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    pcVar1 = fcn.00404b50(arg_8h);\n    in_ECX[0xe] = NULL;\n    in_ECX[0xf] = pcVar1;\n    return in_ECX;\n}\n",
        "token_count": 453
    },
    "00404610": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00404610(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint *in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.004048c0(arg_8h);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.004047f0(arg_ch, 0);\n        if (cVar1 != '\\0') {\n            var_8h = in_ECX;\n            if (0xf < in_ECX[5]) {\n                var_8h = *in_ECX;\n            }\n            if (arg_ch != 0) {\n                fcn.00405920(var_8h, arg_8h, arg_ch);\n            }\n            fcn.004047a0(arg_ch);\n        }\n    }\n    else {\n        var_ch = in_ECX;\n        if (0xf < in_ECX[5]) {\n            var_ch = *in_ECX;\n        }\n        in_ECX = fcn.00404030(in_ECX, arg_8h - var_ch, arg_ch);\n    }\n    return in_ECX;\n}\n",
        "token_count": 292
    },
    "004046e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004046e0(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    if (in_ECX[4] < arg_8h) {\n        fcn.00405534(\"invalid string position\");\n    }\n    if (arg_ch < in_ECX[4] - arg_8h) {\n        if (arg_ch != 0) {\n            var_8h = in_ECX;\n            if (0xf < in_ECX[5]) {\n                var_8h = *in_ECX;\n            }\n            iVar1 = in_ECX[4];\n            iVar2 = (iVar1 - arg_ch) - arg_8h;\n            if (iVar2 != 0) {\n                fcn.004060f0(var_8h + arg_8h, var_8h + arg_8h + arg_ch, iVar2);\n            }\n            fcn.004047a0(iVar1 - arg_ch);\n        }\n    }\n    else {\n        fcn.004047a0(arg_8h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 309
    },
    "004047f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404806)\n\nuint32_t __cdecl fcn.004047f0(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (0xfffffffe < arg_8h) {\n        fcn.00405506(\"string too long\");\n    }\n    uVar1 = *(in_ECX + 0x14);\n    if (uVar1 < arg_8h) {\n        uVar1 = fcn.00404bb0(arg_8h, *(in_ECX + 0x10));\n    }\n    else if ((arg_ch == '\\0') || (0xf < arg_8h)) {\n        if (arg_8h == 0) {\n            uVar1 = fcn.004047a0(0);\n        }\n    }\n    else {\n        if (arg_8h < *(in_ECX + 0x10)) {\n            var_10h = arg_8h;\n        }\n        else {\n            var_10h = *(in_ECX + 0x10);\n        }\n        uVar1 = fcn.00404150(1, var_10h);\n    }\n    var_14h = arg_8h != 0;\n    return uVar1 & 0xffffff00 | var_14h;\n}\n",
        "token_count": 339
    },
    "004048c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004048c0(uint *arg_8h)\n\n{\n    uint *in_EAX;\n    uint *in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_8h != NULL) {\n        var_8h = in_ECX;\n        if (0xf < in_ECX[5]) {\n            var_8h = *in_ECX;\n        }\n        in_EAX = var_8h;\n        if (var_8h <= arg_8h) {\n            var_ch = in_ECX;\n            if (0xf < in_ECX[5]) {\n                var_ch = *in_ECX;\n            }\n            in_EAX = var_ch + in_ECX[4];\n            if (arg_8h < in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 233
    },
    "00404940": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00404940(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        *in_ECX = 0x420904;\n        in_ECX[6] = vtable.std::ios_base.0;\n        in_ECX[6] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    }\n    *(in_ECX + *(*in_ECX + 4)) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    *(in_ECX + *(*in_ECX + 4) + -4) = *(*in_ECX + 4) + -0x18;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    fcn.004041e0(arg_8h, arg_ch & 0xff);\n    return in_ECX;\n}\n",
        "token_count": 246
    },
    "00404a40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00404a40(code **param_1)\n\n{\n    uint uVar1;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    var_ch = fcn.00406c23(4);\n    if (var_ch == NULL) {\n        var_ch = NULL;\n    }\n    else {\n        uVar1 = fcn.0040514c(1);\n        *var_ch = uVar1;\n    }\n    param_1[0xd] = var_ch;\n    fcn.00404e30();\n    return param_1;\n}\n",
        "token_count": 158
    },
    "00404aa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00404aa0(uint noname_0, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t *in_ECX;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        *in_ECX = 0x4208dc;\n        in_ECX[2] = vtable.std::ios_base.0;\n        in_ECX[2] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    }\n    *(in_ECX + *(*in_ECX + 4)) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(in_ECX + *(*in_ECX + 4) + -4) = *(*in_ECX + 4) + -8;\n    if (arg_ch != '\\0') {\n        if (in_ECX == NULL) {\n            var_10h = 0;\n        }\n        else {\n            var_10h = in_ECX + *(*in_ECX + 4);\n        }\n        fcn.00405320(var_10h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 279
    },
    "00404bb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404c37)\n// WARNING: Removing unreachable block (ram,0x00404beb)\n// WARNING: Removing unreachable block (ram,0x00404c7e)\n\nvoid __thiscall fcn.00404bb0(int32_t **param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    int32_t *var_8h;\n    int32_t var_ch;\n    uint var_10h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t **var_2ch;\n    int32_t *var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x418fe0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    var_18h = var_8h | 0xf;\n    if (var_18h == 0xffffffff) {\n        var_18h = var_8h;\n    }\n    else if (var_18h / 3 < param_1[5] >> 1) {\n        piVar1 = -2 - (param_1[5] >> 1);\n        if (param_1[5] < piVar1 || param_1[5] == piVar1) {\n            var_18h = (param_1[5] >> 1) + param_1[5];\n        }\n        else {\n            var_18h = 0xfffffffe;\n        }\n    }\n    var_4h = 0;\n    var_20h = NULL;\n    if ((var_18h + 1U != 0) && (var_20h = fcn.00406c23(var_18h + 1U),  var_20h == NULL)) {\n        fcn.004054d5();\n    }\n    var_4h = 0xffffffff;\n    if (var_ch != 0) {\n        var_2ch = param_1;\n        if (0xf < param_1[5]) {\n            var_2ch = *param_1;\n        }\n        if (var_ch != 0) {\n            fcn.00405920(var_20h, var_2ch, var_ch);\n        }\n    }\n    fcn.00404150(1, 0);\n    if (param_1 != NULL) {\n        *param_1 = var_20h;\n    }\n    param_1[5] = var_18h;\n    fcn.004047a0(var_ch);\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 708
    },
    "00404ed0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00404ed0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_28h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_1ch = 0;\n    fcn.00405590(0);\n    var_4h = *0x42b0b8;\n    var_10h = fcn.00401410();\n    var_8h = fcn.00401550(var_10h);\n    if (var_8h == NULL) {\n        if (var_4h == NULL) {\n            iVar1 = fcn.00401660(&var_4h, arg_8h);\n            if (iVar1 == -1) {\n                fcn.00405f9f(\"bad cast\");\n                fcn.00406e04(&var_28h, 0x421a60);\n            }\n            else {\n                var_8h = var_4h;\n                *0x42b0b8 = var_4h;\n                var_ch = var_4h;\n                (**(*var_4h + 4))();\n                fcn.0040511e(var_ch);\n            }\n        }\n        else {\n            var_8h = var_4h;\n        }\n    }\n    var_18h = var_8h;\n    fcn.004055eb();\n    return var_18h;\n}\n",
        "token_count": 358
    },
    "00404fb6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404fb6(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x41a418;\n    if (*0x41a41c != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 136
    },
    "00404fe0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404fe0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x41a1c0;\n    if (*0x41a1c4 != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 139
    },
    "004060bf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004060bf(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.00406734(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 80
    },
    "00406734": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406734(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4251e0, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.004086bb();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.004086ce(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0040701b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040701b(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_38h_2;\n    code *pcStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *var_18h_2;\n    int32_t var_14h_2;\n    uint *var_10h;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    var_18h_2 = &stack0xfffffffc;\n    puStack32 = &stack0xffffffc0;\n    if (var_34h == 0x123) {\n        *var_30h = 0x4070c4;\n        var_4h = 1;\n    }\n    else {\n        pcStack56 = fcn.00406f15;\n        uStack52 = *0x42335c ^ &fcn.0040701b::var_38h_2;\n        uStack48 = var_24h;\n        puStack44 = var_30h;\n        uStack40 = var_20h;\n        uStack36 = var_1ch;\n        var_14h_2 = 0;\n        var_38h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0040701b::var_38h_2;\n        var_4h = 1;\n        var_10h = var_34h;\n        var_ch = var_2ch;\n        iVar1 = fcn.0040c9db();\n        var_8h = *(iVar1 + 0x80);\n        (*var_8h)(*var_34h, &fcn.0040701b::var_10h);\n        var_4h = 0;\n        if (var_14h_2 == 0) {\n            *in_FS_OFFSET = var_38h_2;\n        }\n        else {\n            *var_38h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_38h_2;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 699
    },
    "0040a87e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040a87e(void)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.00411880();\n    fcn.0040a903(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 89
    },
    "0040ace1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040add6: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040addb)\n// WARNING: Removing unreachable block (ram,0x0040ae0a)\n// WARNING: Removing unreachable block (ram,0x0040ade1)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ace1(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    int32_t *piVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040ae60(0x4215f8, 0x1c);\n    fcn.004075bd(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x4251e4 != 1) {\n        *0x42520c = 1;\n        *0x425208 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x42c110);\n            *(unaff_EBP + -0x2c) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar5)(*0x42c10c);\n                *(unaff_EBP + -0x1c) = piVar2;\n                *(unaff_EBP + -0x20) = piVar3;\n                do {\n                    *(unaff_EBP + -0x24) = piVar3;\n                    piVar7 = piVar3;\n                    do {\n                        do {\n                            piVar7 = piVar7 + -1;\n                            *(unaff_EBP + -0x24) = piVar7;\n                            if (piVar7 < piVar2) goto code_r0x0040adad;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        } while (*piVar7 == iVar4);\n                        if (piVar7 < piVar2) goto code_r0x0040adad;\n                        pcVar5 = (*pcVar5)(*piVar7);\n                        iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        *piVar7 = iVar4;\n                        (*pcVar5)();\n                        pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n                        uVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x42c110);\n                        *(unaff_EBP + -0x28) = uVar6;\n                        piVar3 = (*pcVar5)(*0x42c10c);\n                        piVar1 = *(unaff_EBP + -0x28);\n                    } while ((*(unaff_EBP + -0x1c) == piVar1) && (*(unaff_EBP + -0x20) == piVar3));\n                    *(unaff_EBP + -0x1c) = piVar1;\n                    *(unaff_EBP + -0x2c) = piVar1;\n                    *(unaff_EBP + -0x20) = piVar3;\n                    piVar2 = piVar1;\n                } while( true );\n            }\ncode_r0x0040adad:\n            fcn.0040ac77(0x41a1a0, 0x41a1b0);\n        }\n        fcn.0040ac77(0x41a1b4, 0x41a1b8);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00407727(8);\n    }\n    return;\n}\n",
        "token_count": 940
    },
    "0040daa9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040daa9(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x28);\n    fcn.00407221(*(unaff_EBP + -0x2c));\n    iVar1 = fcn.0040c9db();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x30);\n    iVar1 = fcn.0040c9db();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x34);\n    if (((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n         ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))))) &&\n        (*(unaff_EBP + -0x38) == 0)) &&\n       ((*(unaff_EBP + -0x1c) != 0 && (iVar1 = fcn.00407271(unaff_ESI[6]),  iVar1 != 0)))) {\n        fcn.0040d88c(unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 385
    },
    "0040e434": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e434(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040ae60(0x421728, 0x10);\n    if (*(*(unaff_EBP + 0x10) + 4) < 0x81) {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    else {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar4;\n    iVar3 = fcn.0040c9db();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar4 != *(unaff_EBP + 0x14)) {\n        if ((iVar4 < 0) || (*(*(unaff_EBP + 0x10) + 4) <= iVar4)) {\n            fcn.0040d7fc();\n        }\n        iVar3 = *(unaff_EBP + 0x10);\n        iVar1 = *(iVar3 + 8);\n        uVar2 = *(iVar1 + iVar4 * 8);\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + iVar4 * 8) != 0) {\n            iVar1 = *(unaff_EBP + 8);\n            *(iVar1 + 8) = uVar2;\n            fcn.0040d7b0(*(*(iVar3 + 8) + 4 + iVar4 * 8), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        iVar4 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = iVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040e4f3();\n    if (iVar4 != *(unaff_EBP + 0x14)) {\n        fcn.0040d7fc();\n    }\n    *(*(unaff_EBP + 8) + 8) = iVar4;\n    fcn.0040aea5();\n    return;\n}\n",
        "token_count": 619
    },
    "0040e4f3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e4f3(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040c9db();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040c9db();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "00416168": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.00416168(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x42335c ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = str.5_v_[1];\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x004161dd;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = str.5_v_[0] + L'\\xffffffff';\n        bVar5 = false;\n        iVar15 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x004162dd;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x004162dd:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x4242ac - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4242ac < iVar15) {\n                if (iVar15 < *0x4242a8) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = str.5_v_[3] + iVar15;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = str.5_v_[3] + *0x4242a8;\n                }\n                goto code_r0x0041668e;\n            }\n            iVar11 = *0x4242ac - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x00416498;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x00416498:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = str.5_v_[1] + L'\\x01';\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x004161dd:\n        iVar15 = 0;\n    }\ncode_r0x0041668e:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar16;\n    }\n    fcn.00406df5(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3220
    },
    "004166da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.004166da(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x42335c ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = *0x4242cc;\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x0041674f;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = *0x4242c8 + -1;\n        bVar5 = false;\n        iVar15 = (*0x4242c8 >> 0x1f & 0x1fU) + *0x4242c8 >> 5;\n        uVar8 = 0x1f - (*0x4242c8 & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x0041684f;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x0041684f:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x4242c4 - *0x4242c8) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4242c4 < iVar15) {\n                if (iVar15 < *0x4242c0) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = *0x4242d4 + iVar15;\n                    iVar11 = *0x4242cc + (*0x4242cc >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = *0x4242cc + (*0x4242cc >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = *0x4242d4 + *0x4242c0;\n                }\n                goto code_r0x00416c00;\n            }\n            iVar11 = *0x4242c4 - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (*0x4242c8 >> 0x1f & 0x1fU) + *0x4242c8 >> 5;\n            uVar8 = 0x1f - (*0x4242c8 & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x00416a0a;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x00416a0a:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = *0x4242cc + 1;\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x0041674f:\n        iVar15 = 0;\n    }\ncode_r0x00416c00:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x4242d0 == 0x40) {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (*0x4242d0 == 0x20) {\n        *arg_ch = uVar16;\n    }\n    fcn.00406df5(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3219
    },
    "0040c6fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c6fc(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.0040d834();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "00401bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.00401bd0(code *param_1, code *param_2, uint param_3)\n\n{\n    code *var_8h_3;\n    code *var_ch;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    uint noname_4;\n    uint noname_5;\n    uint noname_6;\n    uint arg_24h;\n    uchar auStack76 [16];\n    uint uStack60;\n    uint uStack56;\n    uint var_30h;\n    uint var_18h;\n    uint *var_14h;\n    uint *var_10h_2;\n    uint *var_ch_2;\n    uchar *var_8h_2;\n    code **var_4h_2;\n    \n    var_8h_2 = auStack76;\n    uStack60 = 0;\n    uStack56 = 0;\n    arg_24h = 0;\n    noname_6 = 0;\n    fcn.00404150(0, 0);\n    noname_4 = 0;\n    noname_5 = *0x420940;\n    fcn.00404030(var_10h, 0, *0x420940);\n    var_ch_2 = fcn.00401ae0(&var_30h, var_8h_3, var_ch, var_10h, noname_4, noname_5, noname_6, arg_24h);\n    var_10h_2 = var_ch_2;\n    if (0xf < var_ch_2[5]) {\n        var_10h_2 = *var_ch_2;\n    }\n    var_14h = var_10h_2;\n    fcn.00405fbb(&var_14h);\n    *var_4h_2 = vtable.std::runtime_error.0;\n    fcn.00404150(1, 0);\n    *var_4h_2 = vtable.std::_System_error.0;\n    var_4h_2[3] = var_8h_3;\n    var_4h_2[4] = var_ch;\n    return var_4h_2;\n}\n",
        "token_count": 490
    },
    "00401e10": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e10(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_b8h;\n    uint var_a0h;\n    uint var_88h;\n    code *var_70h;\n    code *var_5ch;\n    code *var_48h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(in_ECX + 0xc) = arg_8h & 0x17;\n    if ((*(in_ECX + 0xc) & *(in_ECX + 0x10)) != 0) {\n        if (arg_ch == '\\0') {\n            if ((*(in_ECX + 0xc) & *(in_ECX + 0x10) & 4) == 0) {\n                if ((*(in_ECX + 0xc) & *(in_ECX + 0x10) & 2) == 0) {\n                    var_24h = 1;\n                    var_20h = 0x42b0d4;\n                    var_ch = 1;\n                    var_8h = 0x42b0d4;\n                    fcn.00402690(\"ios_base::eofbit set\");\n                    fcn.00401bd0(var_ch, var_8h, &var_b8h);\n                    fcn.00404150(1, 0);\n                    var_70h = vtable.std::ios_base::failure.0;\n                    fcn.00406e04(&var_70h, 0x421ab8);\n                }\n                else {\n                    var_2ch = 1;\n                    var_28h = 0x42b0d4;\n                    var_14h = 1;\n                    var_10h = 0x42b0d4;\n                    fcn.00402690(\"ios_base::failbit set\");\n                    fcn.00401bd0(var_14h, var_10h, &var_a0h);\n                    fcn.00404150(1, 0);\n                    var_5ch = vtable.std::ios_base::failure.0;\n                    fcn.00406e04(&var_5ch, 0x421ab8);\n                }\n            }\n            else {\n                var_34h = 1;\n                var_30h = 0x42b0d4;\n                var_1ch = 1;\n                var_18h = 0x42b0d4;\n                fcn.00402690(\"ios_base::badbit set\");\n                fcn.00401bd0(var_1ch, var_18h, &var_88h);\n                fcn.00404150(1, 0);\n                var_48h = vtable.std::ios_base::failure.0;\n                fcn.00406e04(&var_48h, 0x421ab8);\n            }\n        }\n        else {\n            fcn.00406e04(0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 741
    },
    "004021d0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.004021d0(void)\n\n{\n    *0x426b40 = *0x426b40 * 0x343fd + 0x269ec3;\n    return *0x426b40 >> 0x10 & 0x7fff;\n}\n",
        "token_count": 63
    },
    "00401020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401020(void)\n\n{\n    *0x42b0cc = vtable.std::_Generic_error_category.0;\n    fcn.00406926(fcn.00419050);\n    return;\n}\n",
        "token_count": 48
    },
    "00401050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401050(void)\n\n{\n    *0x42b0d4 = vtable.std::_Iostream_error_category.0;\n    fcn.00406926(fcn.00419040);\n    return;\n}\n",
        "token_count": 50
    },
    "00401080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401080(void)\n\n{\n    *0x42b0c0 = vtable.std::_System_error_category.0;\n    fcn.00406926(fcn.00419030);\n    return;\n}\n",
        "token_count": 49
    },
    "00402200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402200(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t var_4h;\n    \n    for (var_4h = 0; var_4h < arg_ch; var_4h = var_4h + 1) {\n        uVar1 = *(arg_8h + var_4h);\n        uVar2 = fcn.004021d0();\n        *(arg_8h + var_4h) = uVar1 ^ uVar2;\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00402690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402690(char *arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    *(in_ECX + 0x10) = 0;\n    *(in_ECX + 0x14) = 0;\n    fcn.00404150(0, 0);\n    if (*arg_8h == '\\0') {\n        var_8h = 0;\n    }\n    else {\n        var_8h = fcn.00406770(arg_8h);\n    }\n    fcn.00404610(arg_8h, var_8h);\n    return in_ECX;\n}\n",
        "token_count": 155
    },
    "004047a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004047a0(int32_t arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    in_ECX[4] = arg_8h;\n    var_ch = in_ECX;\n    if (0xf < in_ECX[5]) {\n        var_ch = *in_ECX;\n    }\n    *(var_ch + arg_8h) = 0;\n    return;\n}\n",
        "token_count": 134
    },
    "004049e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004049e0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_4h = **(in_ECX + 0x30);\n    (**(*var_4h + 4))();\n    piVar1 = fcn.00404ed0(&var_4h);\n    fcn.004014b0();\n    (**(*piVar1 + 0x20))(arg_8h);\n    return;\n}\n",
        "token_count": 142
    },
    "00404e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404e30(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    *(param_1 + 0xc) = param_1 + 4;\n    *(param_1 + 0x10) = param_1 + 8;\n    *(param_1 + 0x1c) = param_1 + 0x14;\n    *(param_1 + 0x20) = param_1 + 0x18;\n    *(param_1 + 0x2c) = param_1 + 0x24;\n    *(param_1 + 0x30) = param_1 + 0x28;\n    **(param_1 + 0x10) = 0;\n    **(param_1 + 0x20) = 0;\n    **(param_1 + 0x30) = 0;\n    **(param_1 + 0xc) = 0;\n    **(param_1 + 0x1c) = 0;\n    **(param_1 + 0x2c) = 0;\n    return;\n}\n",
        "token_count": 251
    },
    "00405f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f70(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2c8h;\n    \n    fcn.0040aa7d(arg_8h, arg_ch);\n    fcn.0040aa7d(arg_10h, arg_14h);\n    fcn.004118e7();\n    fcn.0040a8fc();\n    return;\n}\n",
        "token_count": 103
    },
    "0040aa4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aa4a(uint arg_8h, uint arg_ch)\n\n{\n    uint var_2c8h;\n    \n    fcn.0040aa7d(arg_8h, arg_ch);\n    fcn.00411880();\n    fcn.0040a8fc();\n    return;\n}\n",
        "token_count": 72
    },
    "0040d46f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d46f(void)\n\n{\n    code **ppcVar1;\n    \n    for (ppcVar1 = 0x4213c4; ppcVar1 < 0x4213c4; ppcVar1 = ppcVar1 + 1) {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "00411a67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00411a67(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    float10 in_ST0;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    \n    fcn.00411c3c();\n    return in_ST0;\n}\n",
        "token_count": 90
    },
    "00418326": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418326(uint arg_8h)\n\n{\n    fcn.00418c4d(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 41
    },
    "0040729a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040729a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040e50d(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "004055eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004055eb(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        fcn.00407727(0xc);\n        return;\n    }\n    if (iVar1 < 4) {\n        fcn.00405903(iVar1 * 0x18 + 0x424f18);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "004019b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004019b0(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = in_ECX[1];\n    if ((uVar1 == arg_8h[1]) && (uVar1 = *arg_8h,  *in_ECX == uVar1)) {\n        var_ch = 1;\n    }\n    else {\n        var_ch = 0;\n    }\n    return uVar1 & 0xffffff00 | var_ch;\n}\n",
        "token_count": 174
    },
    "0040864e": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040864e(uint dwMilliseconds)\n\n{\n    (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n    return;\n}\n",
        "token_count": 35
    },
    "00418c7c": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00418c7c(void)\n\n{\n    *0x424594 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "0040c658": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c658(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040ae60(0x421658, 0xc);\n    fcn.004075bd(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x425228;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x425224;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040c69d;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00406734(arg_8h_00);\ncode_r0x0040c69d:\n        fcn.00406734(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040c6c0();\n    fcn.0040aea5();\n    return;\n}\n",
        "token_count": 395
    },
    "004082e3": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004082e3(uint arg_8h)\n\n{\n    if ((*0x42c128 ^ *0x42335c) != NULL) {\n        (*(*0x42c128 ^ *0x42335c))();\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)(arg_8h);\n    return;\n}\n",
        "token_count": 82
    }
}